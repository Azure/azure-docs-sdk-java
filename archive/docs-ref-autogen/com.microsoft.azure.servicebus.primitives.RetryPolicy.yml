### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy(final String name)
  name: RetryPolicy(final String name)
  nameWithType: RetryPolicy.RetryPolicy(final String name)
  parameters:
  - description: <p>name of the policy </p>
    name: name
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates an instance of RetryPolicy with the given name. </p>
  syntax: protected RetryPolicy(final String name)
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy(final String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()
  name: getDefault()
  nameWithType: RetryPolicy.getDefault()
  returns:
    description: <p>a retry policy that provides exponentially increasing retry intervals </p>
    type: <xref href="com.microsoft.azure.servicebus.primitives.RetryPolicy?alt=com.microsoft.azure.servicebus.primitives.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Retry policy that provides exponentially increasing retry intervals with each successive failure. This policy is suitable for use by use most client applications and is also the default policy if no retry policy is specified. </p>
  syntax: public static RetryPolicy getDefault()
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  name: getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  nameWithType: RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  parameters:
  - description: <p>id of the sender or receiver or client object that encountered the exception. </p>
    name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>last exception encountered </p>
    name: lastException
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  - description: <p>remainingTime to retry before the operation times out </p>
    name: remainingTime
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>duration after which the operation will be retried. Returns null when the operation should not retried. </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the interval after which nextRetry should be attempted, based on the last exception encountered and the remaining time before the operation times out.</p>

    <p></p>
  syntax: public Duration getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval(String,Exception,Duration)
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()
  name: getNoRetry()
  nameWithType: RetryPolicy.getNoRetry()
  returns:
    description: <p>a retry policy that doesn't retry any operations </p>
    type: <xref href="com.microsoft.azure.servicebus.primitives.RetryPolicy?alt=com.microsoft.azure.servicebus.primitives.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Gets a retry policy that doesn't retry any operations, effectively disabling retries. Clients can use this retry policy in case they do not want any operation automatically retried. </p>
  syntax: public static RetryPolicy getNoRetry()
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount(String clientId)
  name: getRetryCount(String clientId)
  nameWithType: RetryPolicy.getRetryCount(String clientId)
  parameters:
  - name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: protected int getRetryCount(String clientId)
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount(String)
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount(String clientId)
  name: incrementRetryCount(String clientId)
  nameWithType: RetryPolicy.incrementRetryCount(String clientId)
  parameters:
  - description: <p>id of the client retrying a failed operation </p>
    name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Increments the number of successive retry attempts made by a client. </p>
  syntax: public void incrementRetryCount(String clientId)
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount(String)
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException(Exception exception)
  name: isRetryableException(Exception exception)
  nameWithType: RetryPolicy.isRetryableException(Exception exception)
  parameters:
  - description: <p>exception encountered by an operation, to be determined if it is retry-able. </p>
    name: exception
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>true if the exception is retry-able (like ServerBusy or other transient exception), else returns false </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Determines if an exception is retry-able or not. Only transient exceptions should be retried. </p>
  syntax: public static boolean isRetryableException(Exception exception)
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException(Exception)
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
  name: onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
  nameWithType: RetryPolicy.onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
  parameters:
  - description: <p>id of the sender or receiver or client object that encountered the exception. </p>
    name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>last exception encountered </p>
    name: lastException
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  - description: <p>remainingTime to retry before the operation times out </p>
    name: remainingTime
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>minimum wait time determined by the base retry policy. Overriding methods can return a different value. </p>
    name: baseWaitTime
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>duration after which the operation will be retried. Returns null when the operation should not retried </p>
    type: <xref href="abstract+Duration?alt=abstract+Duration&text=abstract+Duration" data-throw-if-not-resolved="False"/>
  summary: <p>Adjusts the interval after which nextRetry should be attempted, based on the last exception encountered, the remaining time before the operation times out and the minimum wait time before retry. Clients can override this method to specify a wait time based on the exception encountered. </p>
  syntax: protected abstract Duration onGetNextRetryInterval(String clientId, Exception lastException, Duration remainingTime, int baseWaitTime)
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.onGetNextRetryInterval(String,Exception,Duration,int)
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount(String clientId)
  name: resetRetryCount(String clientId)
  nameWithType: RetryPolicy.resetRetryCount(String clientId)
  parameters:
  - description: <p>id of the client that just retried a failed operation and succeeded. </p>
    name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Resets the number of retry attempts made by a client. This method is called by the client when retried operation succeeds. </p>
  syntax: public void resetRetryCount(String clientId)
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount(String)
- fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString()
  name: toString()
  nameWithType: RetryPolicy.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString()
nameWithType: RetryPolicy
syntax: public class RetryPolicy
type: class
uid: com.microsoft.azure.servicebus.primitives.RetryPolicy
fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy
name: RetryPolicy
package: com.microsoft.azure.servicebus.primitives
summary: <p>Represents an abstraction of a policy for retrying messaging operations when an exception is encountered. Some exceptions encountered by a sender or receiver can be transient like ServerBusy and the operation will succeed if retried. Clients can specify a retry policy using <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> which guides senders and receivers to automatically retry the failed operation before throwing the exception to the client application. Users should not implement this class, instead should use one of the provided implementations through <xref uid="com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()" data-throw-if-not-resolved="false" data-raw-source="getDefault"></xref> or <xref uid="com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()" data-throw-if-not-resolved="false" data-raw-source="getNoRetry"></xref>. </p>
metadata: {}
