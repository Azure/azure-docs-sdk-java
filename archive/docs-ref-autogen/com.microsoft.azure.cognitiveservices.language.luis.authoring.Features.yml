### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addEntityFeature(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  name: addEntityFeature(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  nameWithType: Features.addEntityFeature(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The entity extractor ID. </p>
    name: entityId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>A Feature relation information object. </p>
    name: featureRelationCreateObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation&text=ModelFeatureInformation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OperationStatus object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a new feature relation to be used by the entity in a version of the application.</p>

    <p></p>
  syntax: public OperationStatus addEntityFeature(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addEntityFeature(UUID,String,UUID,ModelFeatureInformation)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addEntityFeatureAsync(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  name: addEntityFeatureAsync(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  nameWithType: Features.addEntityFeatureAsync(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The entity extractor ID. </p>
    name: entityId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>A Feature relation information object. </p>
    name: featureRelationCreateObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation&text=ModelFeatureInformation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OperationStatus object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Adds a new feature relation to be used by the entity in a version of the application.</p>

    <p></p>
  syntax: public Observable<OperationStatus> addEntityFeatureAsync(UUID appId, String versionId, UUID entityId, ModelFeatureInformation featureRelationCreateObject)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addEntityFeatureAsync(UUID,String,UUID,ModelFeatureInformation)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addIntentFeature(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  name: addIntentFeature(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  nameWithType: Features.addIntentFeature(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The intent classifier ID. </p>
    name: intentId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>A Feature relation information object. </p>
    name: featureRelationCreateObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation&text=ModelFeatureInformation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OperationStatus object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a new feature relation to be used by the intent in a version of the application.</p>

    <p></p>
  syntax: public OperationStatus addIntentFeature(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addIntentFeature(UUID,String,UUID,ModelFeatureInformation)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addIntentFeatureAsync(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  name: addIntentFeatureAsync(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  nameWithType: Features.addIntentFeatureAsync(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The intent classifier ID. </p>
    name: intentId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>A Feature relation information object. </p>
    name: featureRelationCreateObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ModelFeatureInformation&text=ModelFeatureInformation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OperationStatus object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Adds a new feature relation to be used by the intent in a version of the application.</p>

    <p></p>
  syntax: public Observable<OperationStatus> addIntentFeatureAsync(UUID appId, String versionId, UUID intentId, ModelFeatureInformation featureRelationCreateObject)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addIntentFeatureAsync(UUID,String,UUID,ModelFeatureInformation)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addPhraseList(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  name: addPhraseList(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  nameWithType: Features.addPhraseList(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true. </p>
    name: phraselistCreateObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraselistCreateObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraselistCreateObject&text=PhraselistCreateObject" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the int object if successful. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new phraselist feature in a version of the application.</p>

    <p></p>
  syntax: public int addPhraseList(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addPhraseList(UUID,String,PhraselistCreateObject)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addPhraseListAsync(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  name: addPhraseListAsync(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  nameWithType: Features.addPhraseListAsync(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true. </p>
    name: phraselistCreateObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraselistCreateObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraselistCreateObject&text=PhraselistCreateObject" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the int object </p>
    type: <xref href="Observable%3CInteger%3E?alt=Observable%3CInteger%3E&text=Observable%3CInteger%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new phraselist feature in a version of the application.</p>

    <p></p>
  syntax: public Observable<Integer> addPhraseListAsync(UUID appId, String versionId, PhraselistCreateObject phraselistCreateObject)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.addPhraseListAsync(UUID,String,PhraselistCreateObject)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.deletePhraseList(UUID appId, String versionId, int phraselistId)
  name: deletePhraseList(UUID appId, String versionId, int phraselistId)
  nameWithType: Features.deletePhraseList(UUID appId, String versionId, int phraselistId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the feature to be deleted. </p>
    name: phraselistId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OperationStatus object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a phraselist feature from a version of the application.</p>

    <p></p>
  syntax: public OperationStatus deletePhraseList(UUID appId, String versionId, int phraselistId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.deletePhraseList(UUID,String,int)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.deletePhraseListAsync(UUID appId, String versionId, int phraselistId)
  name: deletePhraseListAsync(UUID appId, String versionId, int phraselistId)
  nameWithType: Features.deletePhraseListAsync(UUID appId, String versionId, int phraselistId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the feature to be deleted. </p>
    name: phraselistId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OperationStatus object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Deletes a phraselist feature from a version of the application.</p>

    <p></p>
  syntax: public Observable<OperationStatus> deletePhraseListAsync(UUID appId, String versionId, int phraselistId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.deletePhraseListAsync(UUID,String,int)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.getPhraseList(UUID appId, String versionId, int phraselistId)
  name: getPhraseList(UUID appId, String versionId, int phraselistId)
  nameWithType: Features.getPhraseList(UUID appId, String versionId, int phraselistId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the feature to be retrieved. </p>
    name: phraselistId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PhraseListFeatureInfo object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo&text=PhraseListFeatureInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets phraselist feature info in a version of the application.</p>

    <p></p>
  syntax: public PhraseListFeatureInfo getPhraseList(UUID appId, String versionId, int phraselistId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.getPhraseList(UUID,String,int)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.getPhraseListAsync(UUID appId, String versionId, int phraselistId)
  name: getPhraseListAsync(UUID appId, String versionId, int phraselistId)
  nameWithType: Features.getPhraseListAsync(UUID appId, String versionId, int phraselistId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the feature to be retrieved. </p>
    name: phraselistId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PhraseListFeatureInfo object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo&text=PhraseListFeatureInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets phraselist feature info in a version of the application.</p>

    <p></p>
  syntax: public Observable<PhraseListFeatureInfo> getPhraseListAsync(UUID appId, String versionId, int phraselistId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.getPhraseListAsync(UUID,String,int)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.list()
  name: list()
  nameWithType: Features.list()
  returns:
    description: <p>the first stage of the list call </p>
    type: <xref href="FeaturesListDefinitionStages.WithAppId?alt=FeaturesListDefinitionStages.WithAppId&text=FeaturesListDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets all the extraction phraselist and pattern features in a version of the application.</p>

    <p></p>
  syntax: public FeaturesListDefinitionStages.WithAppId list()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.list()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.list(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  name: list(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  nameWithType: Features.list(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: listOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListFeaturesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListFeaturesOptionalParameter&text=ListFeaturesOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the FeaturesResponseObject object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.FeaturesResponseObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.FeaturesResponseObject&text=FeaturesResponseObject" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets all the extraction phraselist and pattern features in a version of the application.</p>

    <p></p>
  syntax: public FeaturesResponseObject list(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.list(UUID,String,ListFeaturesOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listAsync(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  name: listAsync(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  nameWithType: Features.listAsync(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: listOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListFeaturesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListFeaturesOptionalParameter&text=ListFeaturesOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the FeaturesResponseObject object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.FeaturesResponseObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.FeaturesResponseObject&text=FeaturesResponseObject" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets all the extraction phraselist and pattern features in a version of the application.</p>

    <p></p>
  syntax: public Observable<FeaturesResponseObject> listAsync(UUID appId, String versionId, ListFeaturesOptionalParameter listOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listAsync(UUID,String,ListFeaturesOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listPhraseLists()
  name: listPhraseLists()
  nameWithType: Features.listPhraseLists()
  returns:
    description: <p>the first stage of the listPhraseLists call </p>
    type: <xref href="FeaturesListPhraseListsDefinitionStages.WithAppId?alt=FeaturesListPhraseListsDefinitionStages.WithAppId&text=FeaturesListPhraseListsDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets all the phraselist features in a version of the application.</p>

    <p></p>
  syntax: public FeaturesListPhraseListsDefinitionStages.WithAppId listPhraseLists()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listPhraseLists()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listPhraseLists(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  name: listPhraseLists(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  nameWithType: Features.listPhraseLists(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: listPhraseListsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListPhraseListsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListPhraseListsOptionalParameter&text=ListPhraseListsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;PhraseListFeatureInfo&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo&text=PhraseListFeatureInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets all the phraselist features in a version of the application.</p>

    <p></p>
  syntax: public List<PhraseListFeatureInfo> listPhraseLists(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listPhraseLists(UUID,String,ListPhraseListsOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listPhraseListsAsync(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  name: listPhraseListsAsync(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  nameWithType: Features.listPhraseListsAsync(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: listPhraseListsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListPhraseListsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListPhraseListsOptionalParameter&text=ListPhraseListsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;PhraseListFeatureInfo&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PhraseListFeatureInfo&text=PhraseListFeatureInfo" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets all the phraselist features in a version of the application.</p>

    <p></p>
  syntax: public Observable<List<PhraseListFeatureInfo>> listPhraseListsAsync(UUID appId, String versionId, ListPhraseListsOptionalParameter listPhraseListsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.listPhraseListsAsync(UUID,String,ListPhraseListsOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.updatePhraseList()
  name: updatePhraseList()
  nameWithType: Features.updatePhraseList()
  returns:
    description: <p>the first stage of the updatePhraseList call </p>
    type: <xref href="FeaturesUpdatePhraseListDefinitionStages.WithAppId?alt=FeaturesUpdatePhraseListDefinitionStages.WithAppId&text=FeaturesUpdatePhraseListDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the phrases, the state and the name of the phraselist feature in a version of the application.</p>

    <p></p>
  syntax: public FeaturesUpdatePhraseListDefinitionStages.WithAppId updatePhraseList()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.updatePhraseList()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.updatePhraseList(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  name: updatePhraseList(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  nameWithType: Features.updatePhraseList(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the feature to be updated. </p>
    name: phraselistId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: updatePhraseListOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.UpdatePhraseListOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.UpdatePhraseListOptionalParameter&text=UpdatePhraseListOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OperationStatus object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the phrases, the state and the name of the phraselist feature in a version of the application.</p>

    <p></p>
  syntax: public OperationStatus updatePhraseList(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.updatePhraseList(UUID,String,int,UpdatePhraseListOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.updatePhraseListAsync(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  name: updatePhraseListAsync(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  nameWithType: Features.updatePhraseListAsync(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the feature to be updated. </p>
    name: phraselistId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: updatePhraseListOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.UpdatePhraseListOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.UpdatePhraseListOptionalParameter&text=UpdatePhraseListOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OperationStatus object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the phrases, the state and the name of the phraselist feature in a version of the application.</p>

    <p></p>
  syntax: public Observable<OperationStatus> updatePhraseListAsync(UUID appId, String versionId, int phraselistId, UpdatePhraseListOptionalParameter updatePhraseListOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features.updatePhraseListAsync(UUID,String,int,UpdatePhraseListOptionalParameter)
nameWithType: Features
syntax: public interface Features
type: interface
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Features
name: Features
package: com.microsoft.azure.cognitiveservices.language.luis.authoring
summary: <p>An instance of this class provides access to all the operations defined in Features. </p>
metadata: {}
