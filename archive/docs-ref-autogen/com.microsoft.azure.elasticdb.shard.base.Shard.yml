### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.Shard(ShardMapManager shardMapManager, ShardMap shardMap, ShardCreationInfo creationInfo)
  name: Shard(ShardMapManager shardMapManager, ShardMap shardMap, ShardCreationInfo creationInfo)
  nameWithType: Shard.Shard(ShardMapManager shardMapManager, ShardMap shardMap, ShardCreationInfo creationInfo)
  parameters:
  - description: <p>Owning ShardMapManager. </p>
    name: shardMapManager
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  - description: <p>Owning shard map. </p>
    name: shardMap
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  - description: <p>Shard creation information. </p>
    name: creationInfo
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardCreationInfo?alt=com.microsoft.azure.elasticdb.shard.base.ShardCreationInfo&text=ShardCreationInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs a Shard given shard creation arguments.</p>

    <p></p>
  syntax: public Shard(ShardMapManager shardMapManager, ShardMap shardMap, ShardCreationInfo creationInfo)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.Shard(ShardMapManager,ShardMap,ShardCreationInfo)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.Shard(ShardMapManager shardMapManager, ShardMap shardMap, StoreShard storeShard)
  name: Shard(ShardMapManager shardMapManager, ShardMap shardMap, StoreShard storeShard)
  nameWithType: Shard.Shard(ShardMapManager shardMapManager, ShardMap shardMap, StoreShard storeShard)
  parameters:
  - description: <p>Owning ShardMapManager. </p>
    name: shardMapManager
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  - description: <p>Owning shard map. </p>
    name: shardMap
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  - description: <p>Storage representation of the shard. </p>
    name: storeShard
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShard?alt=com.microsoft.azure.elasticdb.shard.store.StoreShard&text=StoreShard" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Internal constructor that uses storage representation.</p>

    <p></p>
  syntax: public Shard(ShardMapManager shardMapManager, ShardMap shardMap, StoreShard storeShard)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.Shard(ShardMapManager,ShardMap,StoreShard)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider%3CValueT%3E" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.clone()
  name: clone()
  nameWithType: Shard.clone()
  returns:
    description: <p>clone of the instance. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Clones the instance.</p>

    <p></p>
  syntax: public Shard clone()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.clone()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.equals(Object obj)
  name: equals(Object obj)
  nameWithType: Shard.equals(Object obj)
  parameters:
  - description: <p>The object to compare with the current object. </p>
    name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if the specified object is equal to the current object; otherwise, false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Determines whether the specified object is equal to the current object.</p>

    <p></p>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.equals(Object)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.equals(Shard other)
  name: equals(Shard other)
  nameWithType: Shard.equals(Shard other)
  parameters:
  - description: <p>Shard to compare with. </p>
    name: other
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if this object is equal to other object, false otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Performs equality comparison with given Shard.</p>

    <p></p>
  syntax: public boolean equals(Shard other)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.equals(Shard)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getId()
  name: getId()
  nameWithType: Shard.getId()
  returns:
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: <p>Identity of the shard. Each shard should have a unique one. </p>
  syntax: public UUID getId()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getId()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getLocation()
  name: getLocation()
  nameWithType: Shard.getLocation()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  summary: <p>Gets Location of the shard. </p>
  syntax: public ShardLocation getLocation()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getLocation()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getShardInfo()
  name: getShardInfo()
  nameWithType: Shard.getShardInfo()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  summary: <p>Shard for the ShardProvider object. </p>
  syntax: public Shard getShardInfo()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getShardInfo()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getShardMap()
  name: getShardMap()
  nameWithType: Shard.getShardMap()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  syntax: public ShardMap getShardMap()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getShardMap()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getShardMapId()
  name: getShardMapId()
  nameWithType: Shard.getShardMapId()
  returns:
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: <p>Identify of the ShardMap this shard belongs to. </p>
  syntax: public UUID getShardMapId()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getShardMapId()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getShardMapManager()
  name: getShardMapManager()
  nameWithType: Shard.getShardMapManager()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  syntax: public ShardMapManager getShardMapManager()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getShardMapManager()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getStatus()
  name: getStatus()
  nameWithType: Shard.getStatus()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardStatus?alt=com.microsoft.azure.elasticdb.shard.base.ShardStatus&text=ShardStatus" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the status of the shard which can be either online or offline. Connections can only be opened using Shard.OpenConnection(string, ConnectionOptions) on the shard map when the shard is online. Setting the shard status to offline prevents connections when the shard is undergoing maintenance operations. </p>
  syntax: public ShardStatus getStatus()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getStatus()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getStoreShard()
  name: getStoreShard()
  nameWithType: Shard.getStoreShard()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShard?alt=com.microsoft.azure.elasticdb.shard.store.StoreShard&text=StoreShard" data-throw-if-not-resolved="False"/>
  syntax: public StoreShard getStoreShard()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getStoreShard()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getValue()
  name: getValue()
  nameWithType: Shard.getValue()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  summary: <p>Value corresponding to the Shard. Represents traits of the Shard object provided by the ShardInfo property. </p>
  syntax: public ShardLocation getValue()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getValue()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.getVersion()
  name: getVersion()
  nameWithType: Shard.getVersion()
  returns:
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: <p>Shard version. </p>
  syntax: public UUID getVersion()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.getVersion()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.hashCode()
  name: hashCode()
  nameWithType: Shard.hashCode()
  returns:
    description: <p>Hash code for the object. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Calculates the hash code for this instance.</p>

    <p></p>
  syntax: public int hashCode()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.hashCode()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.openConnection(String connectionString)
  name: openConnection(String connectionString)
  nameWithType: Shard.openConnection(String connectionString)
  parameters:
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a regular SqlConnection to the specified shard, with <xref uid="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions.Validate" data-throw-if-not-resolved="false" data-raw-source="ConnectionOptions.Validate"></xref>.</p>

    <p></p>
  syntax: public Connection openConnection(String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.openConnection(String)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.openConnection(String connectionString, ConnectionOptions options)
  name: openConnection(String connectionString, ConnectionOptions options)
  nameWithType: Shard.openConnection(String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a regular SqlConnection to the specified shard.</p>

    <p></p>
  syntax: public Connection openConnection(String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.openConnection(String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String connectionString)
  name: openConnectionAsync(String connectionString)
  nameWithType: Shard.openConnectionAsync(String connectionString)
  parameters:
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. All non-usage errors will be propagated via the returned Task. </p>
    type: <xref href="Callable%3CConnection%3E?alt=Callable%3CConnection%3E&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a regular SqlConnection to the specified shard, with <xref uid="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions.Validate" data-throw-if-not-resolved="false" data-raw-source="ConnectionOptions.Validate"></xref>.</p>

    <p></p>
  syntax: public Callable<Connection> openConnectionAsync(String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String connectionString, ConnectionOptions options)
  name: openConnectionAsync(String connectionString, ConnectionOptions options)
  nameWithType: Shard.openConnectionAsync(String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. All non-usage errors will be propagated via the returned Task. </p>
    type: <xref href="Callable%3CConnection%3E?alt=Callable%3CConnection%3E&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously a regular SqlConnection to the specified shard.</p>

    <p></p>
  syntax: public Callable<Connection> openConnectionAsync(String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.setShardMap(ShardMap value)
  name: setShardMap(ShardMap value)
  nameWithType: Shard.setShardMap(ShardMap value)
  parameters:
  - name: value
    type: <xref href="com.microsoft.azure.elasticdb.shard.map.ShardMap?alt=com.microsoft.azure.elasticdb.shard.map.ShardMap&text=ShardMap" data-throw-if-not-resolved="False"/>
  syntax: public void setShardMap(ShardMap value)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.setShardMap(ShardMap)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.setShardMapManager(ShardMapManager value)
  name: setShardMapManager(ShardMapManager value)
  nameWithType: Shard.setShardMapManager(ShardMapManager value)
  parameters:
  - name: value
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  syntax: public void setShardMapManager(ShardMapManager value)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.setShardMapManager(ShardMapManager)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.setStoreShard(StoreShard value)
  name: setStoreShard(StoreShard value)
  nameWithType: Shard.setStoreShard(StoreShard value)
  parameters:
  - name: value
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShard?alt=com.microsoft.azure.elasticdb.shard.store.StoreShard&text=StoreShard" data-throw-if-not-resolved="False"/>
  syntax: public void setStoreShard(StoreShard value)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.setStoreShard(StoreShard)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.toString()
  name: toString()
  nameWithType: Shard.toString()
  returns:
    description: <p>String representation of the object. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts the object to its string representation.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.toString()
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.validate(StoreShardMap shardMap, Connection conn)
  name: validate(StoreShardMap shardMap, Connection conn)
  nameWithType: Shard.validate(StoreShardMap shardMap, Connection conn)
  parameters:
  - description: <p>Shard map to which the shard provider belongs. </p>
    name: shardMap
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>
  - description: <p>Connection used for validation. </p>
    name: conn
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Performs validation that the local representation is as up-to-date as the representation on the backing data store.</p>

    <p></p>
  syntax: public void validate(StoreShardMap shardMap, Connection conn)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.validate(StoreShardMap,Connection)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.validateAsync(StoreShardMap shardMap, Connection conn)
  name: validateAsync(StoreShardMap shardMap, Connection conn)
  nameWithType: Shard.validateAsync(StoreShardMap shardMap, Connection conn)
  parameters:
  - description: <p>Shard map to which the shard provider belongs. </p>
    name: shardMap
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>
  - description: <p>Connection used for validation. </p>
    name: conn
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task to await validation completion </p>
    type: <xref href="Callable?alt=Callable&text=Callable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously performs validation that the local representation is as up-to-date as the representation on the backing data store.</p>

    <p></p>
  syntax: public Callable validateAsync(StoreShardMap shardMap, Connection conn)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.validateAsync(StoreShardMap,Connection)
nameWithType: Shard
syntax: public class Shard implements IShardProvider<ShardLocation>
type: class
uid: com.microsoft.azure.elasticdb.shard.base.Shard
fullName: com.microsoft.azure.elasticdb.shard.base.Shard
name: Shard
package: com.microsoft.azure.elasticdb.shard.base
summary: <p>Representation of a single shard. Shards are basically locators for data sources i.e. <xref uid="com.microsoft.azure.elasticdb.shard.base.ShardLocation" data-throw-if-not-resolved="false" data-raw-source="ShardLocation"></xref>s that have been registered with a shard map. Shards are used in mapping as targets of mappings (see <xref uid="com.microsoft.azure.elasticdb.shard.base.PointMapping" data-throw-if-not-resolved="false" data-raw-source="PointMapping"></xref> and <xref uid="com.microsoft.azure.elasticdb.shard.base.RangeMapping" data-throw-if-not-resolved="false" data-raw-source="RangeMapping"></xref>). </p>
metadata: {}
