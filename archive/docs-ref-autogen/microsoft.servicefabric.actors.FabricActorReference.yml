### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.actors.FabricActorReference.FabricActorReference()
  name: FabricActorReference()
  nameWithType: FabricActorReference.FabricActorReference()
  summary: <p>Initializes a new instance of the ActorReference class. </p>
  syntax: public FabricActorReference()
  uid: microsoft.servicefabric.actors.FabricActorReference.FabricActorReference()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.actors.ActorReference" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.FabricActorReference.bind(Class<?> actorInterfaceType)
  name: bind(Class<?> actorInterfaceType)
  nameWithType: FabricActorReference.bind(Class<?> actorInterfaceType)
  parameters:
  - description: <p>Interface type of actor. </p>
    name: actorInterfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Object representing <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorProxy"></xref> for the actor. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorProxy"></xref> using <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricActorProxyFactory#createActorProxy(Class, URI, ActorId, String)"></xref> method.</p>

    <p></p>
  syntax: public Object bind(Class<?> actorInterfaceType)
  uid: microsoft.servicefabric.actors.FabricActorReference.bind(Class<?>)
- fullName: microsoft.servicefabric.actors.FabricActorReference.get(Object actor)
  name: get(Object actor)
  nameWithType: FabricActorReference.get(Object actor)
  parameters:
  - description: <p>Actor object to get <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorReference"></xref> for. </p>
    name: actor
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorReference"></xref> object for the actor. </p>
    type: <xref href="microsoft.servicefabric.actors.FabricActorReference?alt=microsoft.servicefabric.actors.FabricActorReference&text=FabricActorReference" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ActorReference"></xref> for the actor.</p>

    <p>

    A null value is returned if actor is passed as null. </p>
  syntax: public static FabricActorReference get(Object actor)
  uid: microsoft.servicefabric.actors.FabricActorReference.get(Object)
- fullName: microsoft.servicefabric.actors.FabricActorReference.getActorId()
  name: getActorId()
  nameWithType: FabricActorReference.getActorId()
  returns:
    description: >-
      <p>

        <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.ActorId"></xref> of the actor. </p>
    type: <xref href="microsoft.servicefabric.actors.ActorId?alt=microsoft.servicefabric.actors.ActorId&text=ActorId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.ActorId"></xref> of the actor.</p>

    <p></p>
  syntax: public ActorId getActorId()
  uid: microsoft.servicefabric.actors.FabricActorReference.getActorId()
- fullName: microsoft.servicefabric.actors.FabricActorReference.getListenerName()
  name: getListenerName()
  nameWithType: FabricActorReference.getListenerName()
  returns:
    description: <p>The name of the listener. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the name of the listener in the actor service to use when communicating with the actor service. </p>
  syntax: public String getListenerName()
  uid: microsoft.servicefabric.actors.FabricActorReference.getListenerName()
- fullName: microsoft.servicefabric.actors.FabricActorReference.getServiceUri()
  name: getServiceUri()
  nameWithType: FabricActorReference.getServiceUri()
  returns:
    description: <p>Service Uri which hosts the actor in service fabric cluster. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Uri of the actor service that hosts the actor in service fabric cluster.</p>

    <p></p>
  syntax: public URI getServiceUri()
  uid: microsoft.servicefabric.actors.FabricActorReference.getServiceUri()
- fullName: microsoft.servicefabric.actors.FabricActorReference.setActorId(ActorId actorId)
  name: setActorId(ActorId actorId)
  nameWithType: FabricActorReference.setActorId(ActorId actorId)
  parameters:
  - description: <p>ActorId od the actor </p>
    name: actorId
    type: <xref href="microsoft.servicefabric.actors.ActorId?alt=microsoft.servicefabric.actors.ActorId&text=ActorId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the <xref uid="microsoft.servicefabric.actors.ActorId" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.ActorId"></xref> of the actor.</p>

    <p></p>
  syntax: public void setActorId(ActorId actorId)
  uid: microsoft.servicefabric.actors.FabricActorReference.setActorId(ActorId)
- fullName: microsoft.servicefabric.actors.FabricActorReference.setListenerName(String listenerName)
  name: setListenerName(String listenerName)
  nameWithType: FabricActorReference.setListenerName(String listenerName)
  parameters:
  - description: <p>The name of the listener </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the name of the listener in the actor service to use when communicating with the actor service.</p>

    <p></p>
  syntax: public void setListenerName(String listenerName)
  uid: microsoft.servicefabric.actors.FabricActorReference.setListenerName(String)
- fullName: microsoft.servicefabric.actors.FabricActorReference.setServiceUri(URI serviceUri)
  name: setServiceUri(URI serviceUri)
  nameWithType: FabricActorReference.setServiceUri(URI serviceUri)
  parameters:
  - description: <p>Uri of the actor service that hosts the actor in service fabric cluster. </p>
    name: serviceUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the Uri of the actor service that hosts the actor in service fabric cluster.</p>

    <p></p>
  syntax: public void setServiceUri(URI serviceUri)
  uid: microsoft.servicefabric.actors.FabricActorReference.setServiceUri(URI)
nameWithType: FabricActorReference
syntax: public class FabricActorReference
type: class
uid: microsoft.servicefabric.actors.FabricActorReference
fullName: microsoft.servicefabric.actors.FabricActorReference
name: FabricActorReference
package: microsoft.servicefabric.actors
summary: <p>Encapsulation of a reference to an actor for serialization. </p>
metadata: {}
