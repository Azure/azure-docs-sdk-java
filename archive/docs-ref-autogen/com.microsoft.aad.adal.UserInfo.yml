### YamlMime:JavaType
constructors:
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo()
  name: UserInfo()
  nameWithType: UserInfo.UserInfo()
  summary: <p>Default constructor for <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
  syntax: public UserInfo()
  uid: com.microsoft.aad.adal.UserInfo.UserInfo()
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo(IdToken idToken)
  name: UserInfo(IdToken idToken)
  nameWithType: UserInfo.UserInfo(IdToken idToken)
  parameters:
  - description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IdToken"></xref> to create <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
    name: idToken
    type: <xref href="IdToken?alt=IdToken&text=IdToken" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor for creating <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref> from <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IdToken"></xref>.</p>

    <p></p>
  syntax: public UserInfo(IdToken idToken)
  uid: com.microsoft.aad.adal.UserInfo.UserInfo(IdToken)
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo(String upn)
  name: UserInfo(String upn)
  nameWithType: UserInfo.UserInfo(String upn)
  parameters:
  - description: <p>Upn that is used to construct the <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>. </p>
    name: upn
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor for <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>.</p>

    <p></p>
  syntax: public UserInfo(String upn)
  uid: com.microsoft.aad.adal.UserInfo.UserInfo(String)
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  name: UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  nameWithType: UserInfo.UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  parameters:
  - description: <p>Unique user id for the userInfo. </p>
    name: userid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Given name for the userInfo. </p>
    name: givenName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Family name for the userInfo. </p>
    name: familyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>IdentityProvider for the userInfo. </p>
    name: identityProvider
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Displayable for the userInfo. </p>
    name: displayableId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor for <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>.</p>

    <p></p>
  syntax: public UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  uid: com.microsoft.aad.adal.UserInfo.UserInfo(String,String,String,String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Serializable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.aad.adal.UserInfo.getDisplayableId()
  name: getDisplayableId()
  nameWithType: UserInfo.getDisplayableId()
  returns:
    description: <p>the displayable user name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets displayable user name.</p>

    <p></p>
  syntax: public String getDisplayableId()
  uid: com.microsoft.aad.adal.UserInfo.getDisplayableId()
- fullName: com.microsoft.aad.adal.UserInfo.getFamilyName()
  name: getFamilyName()
  nameWithType: UserInfo.getFamilyName()
  returns:
    description: <p>the family name of the user </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets family name.</p>

    <p></p>
  syntax: public String getFamilyName()
  uid: com.microsoft.aad.adal.UserInfo.getFamilyName()
- fullName: com.microsoft.aad.adal.UserInfo.getGivenName()
  name: getGivenName()
  nameWithType: UserInfo.getGivenName()
  returns:
    description: <p>the given name of the user </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets given name.</p>

    <p></p>
  syntax: public String getGivenName()
  uid: com.microsoft.aad.adal.UserInfo.getGivenName()
- fullName: com.microsoft.aad.adal.UserInfo.getIdentityProvider()
  name: getIdentityProvider()
  nameWithType: UserInfo.getIdentityProvider()
  returns:
    description: <p>the identity provider </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Identity provider.</p>

    <p></p>
  syntax: public String getIdentityProvider()
  uid: com.microsoft.aad.adal.UserInfo.getIdentityProvider()
- fullName: com.microsoft.aad.adal.UserInfo.getPasswordChangeUrl()
  name: getPasswordChangeUrl()
  nameWithType: UserInfo.getPasswordChangeUrl()
  returns:
    description: <p>the password change uri </p>
    type: <xref href="Uri?alt=Uri&text=Uri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets password change url.</p>

    <p></p>
  syntax: public Uri getPasswordChangeUrl()
  uid: com.microsoft.aad.adal.UserInfo.getPasswordChangeUrl()
- fullName: com.microsoft.aad.adal.UserInfo.getPasswordExpiresOn()
  name: getPasswordExpiresOn()
  nameWithType: UserInfo.getPasswordExpiresOn()
  returns:
    description: <p>the time when the password will expire </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets password expires on.</p>

    <p></p>
  syntax: public Date getPasswordExpiresOn()
  uid: com.microsoft.aad.adal.UserInfo.getPasswordExpiresOn()
- fullName: com.microsoft.aad.adal.UserInfo.getUserId()
  name: getUserId()
  nameWithType: UserInfo.getUserId()
  returns:
    description: <p>the unique id representing an user </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets unique user id.</p>

    <p></p>
  syntax: public String getUserId()
  uid: com.microsoft.aad.adal.UserInfo.getUserId()
nameWithType: UserInfo
syntax: public class UserInfo
type: class
uid: com.microsoft.aad.adal.UserInfo
fullName: com.microsoft.aad.adal.UserInfo
name: UserInfo
package: com.microsoft.aad.adal
summary: <p>Contains information of a single user. </p>
metadata: {}
