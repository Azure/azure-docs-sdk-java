### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.ResponseBase" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.Identifiable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.Response" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.Answer" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchResultsAnswer?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchResultsAnswer&text=SearchResultsAnswer" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cognitiveservices.search.videosearch.models.Answer.followUpQueries()
- com.microsoft.azure.cognitiveservices.search.videosearch.models.Identifiable.id()
- com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchResultsAnswer.isFamilyFriendly()
- com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchResultsAnswer.totalEstimatedMatches()
- com.microsoft.azure.cognitiveservices.search.videosearch.models.Response.webSearchUrl()
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.nextOffset()
  name: nextOffset()
  nameWithType: VideosModel.nextOffset()
  returns:
    description: <p>the nextOffset value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the nextOffset value.</p>

    <p></p>
  syntax: public Integer nextOffset()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.nextOffset()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.pivotSuggestions()
  name: pivotSuggestions()
  nameWithType: VideosModel.pivotSuggestions()
  returns:
    description: <p>the pivotSuggestions value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.PivotSuggestions?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.PivotSuggestions&text=PivotSuggestions" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the pivotSuggestions value.</p>

    <p></p>
  syntax: public List<PivotSuggestions> pivotSuggestions()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.pivotSuggestions()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.queryExpansions()
  name: queryExpansions()
  nameWithType: VideosModel.queryExpansions()
  returns:
    description: <p>the queryExpansions value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.Query?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.Query&text=Query" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the queryExpansions value.</p>

    <p></p>
  syntax: public List<Query> queryExpansions()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.queryExpansions()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.scenario()
  name: scenario()
  nameWithType: VideosModel.scenario()
  returns:
    description: <p>the scenario value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoQueryScenario?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoQueryScenario&text=VideoQueryScenario" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the scenario value.</p>

    <p></p>
  syntax: public VideoQueryScenario scenario()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.scenario()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.value()
  name: value()
  nameWithType: VideosModel.value()
  returns:
    description: <p>the value value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoObject?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoObject&text=VideoObject" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the value value.</p>

    <p></p>
  syntax: public List<VideoObject> value()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.value()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.withValue(List<VideoObject> value)
  name: withValue(List<VideoObject> value)
  nameWithType: VideosModel.withValue(List<VideoObject> value)
  parameters:
  - description: <p>the value value to set </p>
    name: value
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoObject?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoObject&text=VideoObject" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the VideosModel object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel&text=VideosModel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value value.</p>

    <p></p>
  syntax: public VideosModel withValue(List<VideoObject> value)
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel.withValue(List<VideoObject>)
nameWithType: VideosModel
syntax: public class VideosModel extends SearchResultsAnswer
type: class
uid: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel
fullName: com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel
name: VideosModel
package: com.microsoft.azure.cognitiveservices.search.videosearch.models
summary: <p>Defines a video answer. </p>
metadata: {}
