### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String connectionString)
  name: QueryClient(String connectionString)
  nameWithType: QueryClient.QueryClient(String connectionString)
  parameters:
  - description: <p>The IoT Hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string</p>

    <p></p>
  syntax: public QueryClient(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String hostName, AzureSasCredential azureSasCredential)
  name: QueryClient(String hostName, AzureSasCredential azureSasCredential)
  nameWithType: QueryClient.QueryClient(String hostName, AzureSasCredential azureSasCredential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new QueryClient instance.</p>

    <p></p>
  syntax: public QueryClient(String hostName, AzureSasCredential azureSasCredential)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String,AzureSasCredential)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String hostName, AzureSasCredential azureSasCredential, QueryClientOptions options)
  name: QueryClient(String hostName, AzureSasCredential azureSasCredential, QueryClientOptions options)
  nameWithType: QueryClient.QueryClient(String hostName, AzureSasCredential azureSasCredential, QueryClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryClientOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryClientOptions&text=QueryClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new QueryClient instance.</p>

    <p></p>
  syntax: public QueryClient(String hostName, AzureSasCredential azureSasCredential, QueryClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String,AzureSasCredential,QueryClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String connectionString, QueryClientOptions options)
  name: QueryClient(String connectionString, QueryClientOptions options)
  nameWithType: QueryClient.QueryClient(String connectionString, QueryClientOptions options)
  parameters:
  - description: <p>The IoT Hub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryClientOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryClientOptions&text=QueryClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string</p>

    <p></p>
  syntax: public QueryClient(String connectionString, QueryClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String,QueryClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String hostName, TokenCredential credential)
  name: QueryClient(String hostName, TokenCredential credential)
  nameWithType: QueryClient.QueryClient(String hostName, TokenCredential credential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new QueryClient instance.</p>

    <p></p>
  syntax: public QueryClient(String hostName, TokenCredential credential)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String,TokenCredential)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String hostName, TokenCredential credential, QueryClientOptions options)
  name: QueryClient(String hostName, TokenCredential credential, QueryClientOptions options)
  nameWithType: QueryClient.QueryClient(String hostName, TokenCredential credential, QueryClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryClientOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryClientOptions&text=QueryClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new QueryClient instance.</p>

    <p></p>
  syntax: public QueryClient(String hostName, TokenCredential credential, QueryClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.QueryClient(String,TokenCredential,QueryClientOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  name: queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  nameWithType: QueryClient.queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  parameters:
  - description: <p>The type of the job (methods or twin). </p>
    name: jobType
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType&text=ScheduledJobType" data-throw-if-not-resolved="False"/>
  - description: <p>The status of the job ("completed", for example) </p>
    name: jobStatus
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus&text=ScheduledJobStatus" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as throttling. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs by job type and job status.</p>

    <p></p>
  syntax: public JobQueryResponse queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(ScheduledJobType,ScheduledJobStatus)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  name: queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  nameWithType: QueryClient.queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  parameters:
  - description: <p>The type of the job (methods or twin). </p>
    name: jobType
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobType&text=ScheduledJobType" data-throw-if-not-resolved="False"/>
  - description: <p>The status of the job ("completed", for example) </p>
    name: jobStatus
    type: <xref href="com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus?alt=com.microsoft.azure.sdk.iot.service.jobs.ScheduledJobStatus&text=ScheduledJobStatus" data-throw-if-not-resolved="False"/>
  - description: <p>The optional parameters used to decide how the query's results are returned. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as throttling. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs by job type and job status.</p>

    <p></p>
  syntax: public JobQueryResponse queryJobs(ScheduledJobType jobType, ScheduledJobStatus jobStatus, QueryPageOptions options)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(ScheduledJobType,ScheduledJobStatus,QueryPageOptions)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(String query)
  name: queryJobs(String query)
  nameWithType: QueryClient.queryJobs(String query)
  parameters:
  - description: <p>The IoT Hub query for selecting which jobs to getJob. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs.</p>

    <p></p>
  syntax: public JobQueryResponse queryJobs(String query)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(String)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(String query, QueryPageOptions options)
  name: queryJobs(String query, QueryPageOptions options)
  nameWithType: QueryClient.queryJobs(String query, QueryPageOptions options)
  parameters:
  - description: <p>The IoT Hub query for selecting which jobs to getJob. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional parameters used to decide how the query's results are returned. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Jobs that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.JobQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.JobQueryResponse&text=JobQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of scheduled jobs.</p>

    <p></p>
  syntax: public JobQueryResponse queryJobs(String query, QueryPageOptions options)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryJobs(String,QueryPageOptions)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryRaw(String query)
  name: queryRaw(String query)
  nameWithType: QueryClient.queryRaw(String query)
  parameters:
  - description: <p>The IoT Hub query for selecting what information should be returned. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of results that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.RawQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.RawQueryResponse&text=RawQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query miscellaneous data from your IoT Hub.</p>

    <p></p>
  syntax: public RawQueryResponse queryRaw(String query)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryRaw(String)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryRaw(String query, QueryPageOptions options)
  name: queryRaw(String query, QueryPageOptions options)
  nameWithType: QueryClient.queryRaw(String query, QueryPageOptions options)
  parameters:
  - description: <p>The IoT Hub query for selecting what information should be returned. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional parameters used to decide how the query's results are returned. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of results that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.RawQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.RawQueryResponse&text=RawQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query miscellaneous data from your IoT Hub.</p>

    <p></p>
  syntax: public RawQueryResponse queryRaw(String query, QueryPageOptions options)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryRaw(String,QueryPageOptions)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryTwins(String query)
  name: queryTwins(String query)
  nameWithType: QueryClient.queryTwins(String query)
  parameters:
  - description: <p>The IoT Hub query for selecting which twins to getJob. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Twins that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse&text=TwinQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of Twins.</p>

    <p></p>
  syntax: public TwinQueryResponse queryTwins(String query)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryTwins(String)
- fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryTwins(String query, QueryPageOptions options)
  name: queryTwins(String query, QueryPageOptions options)
  nameWithType: QueryClient.queryTwins(String query, QueryPageOptions options)
  parameters:
  - description: <p>The IoT Hub query for selecting which twins to getJob. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional parameters used to decide how the query's results are returned. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Twins that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse&text=TwinQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of Twins.</p>

    <p></p>
  syntax: public TwinQueryResponse queryTwins(String query, QueryPageOptions options)
  uid: com.microsoft.azure.sdk.iot.service.query.QueryClient.queryTwins(String,QueryPageOptions)
nameWithType: QueryClient
syntax: public class QueryClient
type: class
uid: com.microsoft.azure.sdk.iot.service.query.QueryClient
fullName: com.microsoft.azure.sdk.iot.service.query.QueryClient
name: QueryClient
package: com.microsoft.azure.sdk.iot.service.query
metadata: {}
