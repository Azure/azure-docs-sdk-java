### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
  name: ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
  nameWithType: ServiceProxyGenerator.ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
  parameters:
  - name: proxyInterfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  - name: proxyActivator
    type: <xref href="microsoft.servicefabric.services.remoting.builder.ProxyActivator?alt=microsoft.servicefabric.services.remoting.builder.ProxyActivator&text=ProxyActivator" data-throw-if-not-resolved="False"/>
  syntax: protected ServiceProxyGenerator(Class<?> proxyInterfaceType, ProxyActivator proxyActivator)
  uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.ServiceProxyGenerator(Class<?>,ProxyActivator)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.builder.ProxyGenerator?alt=microsoft.servicefabric.services.remoting.builder.ProxyGenerator&text=ProxyGenerator" data-throw-if-not-resolved="False"/>
inheritedMembers:
- microsoft.servicefabric.services.remoting.builder.ProxyGenerator.getProxyInterfaceType()
- microsoft.servicefabric.services.remoting.builder.ProxyGenerator.ProxyGenerator(Class<?>)
methods:
- fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
  name: createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
  nameWithType: ServiceProxyGenerator.createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
  parameters:
  - name: remotingPartitionClient
    type: <xref href="microsoft.servicefabric.services.remoting.client.FabricServiceRemotingPartitionClient?alt=microsoft.servicefabric.services.remoting.client.FabricServiceRemotingPartitionClient&text=FabricServiceRemotingPartitionClient" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="microsoft.servicefabric.services.remoting.client.ServiceProxyBase?alt=microsoft.servicefabric.services.remoting.client.ServiceProxyBase&text=ServiceProxyBase" data-throw-if-not-resolved="False"/>
  syntax: public ServiceProxyBase createServiceProxy(FabricServiceRemotingPartitionClient remotingPartitionClient)
  uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator.createServiceProxy(FabricServiceRemotingPartitionClient)
nameWithType: ServiceProxyGenerator
syntax: public class ServiceProxyGenerator extends ProxyGenerator
type: class
uid: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
name: ServiceProxyGenerator
package: microsoft.servicefabric.services.remoting.builder
summary: <p>Used in Service code builder to create service proxy base object. For internal use only. </p>
metadata: {}
