### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withBasicSku(int)
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withNonSslPort()
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithNonSslPort.withoutNonSslPort()
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration()
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withoutRedisConfiguration(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku()
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withPremiumSku(int)
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(Map<String, String>)
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithRedisConfiguration.withRedisConfiguration(String,String)
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku()
- com.microsoft.azure.management.redis.RedisCache.UpdateStages.WithSku.withStandardSku(int)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
methods:
- fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  nameWithType: RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  parameters:
  - description: <p>day of week when cache can be patched. </p>
    name: dayOfWeek
    type: <xref href="com.microsoft.azure.management.redis.DayOfWeek?alt=com.microsoft.azure.management.redis.DayOfWeek&text=DayOfWeek" data-throw-if-not-resolved="False"/>
  - description: <p>start hour after which cache patching can start. </p>
    name: startHourUtc
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=RedisCache.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Patch schedule on a Premium Cluster Cache.</p>

    <p></p>
  syntax: public Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek,int)
- fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  nameWithType: RedisCache.Update.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  parameters:
  - description: <p>day of week when cache can be patched. </p>
    name: dayOfWeek
    type: <xref href="com.microsoft.azure.management.redis.DayOfWeek?alt=com.microsoft.azure.management.redis.DayOfWeek&text=DayOfWeek" data-throw-if-not-resolved="False"/>
  - description: <p>start hour after which cache patching can start. </p>
    name: startHourUtc
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>ISO8601 timespan specifying how much time cache patching can take. </p>
    name: maintenanceWindow
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=RedisCache.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The number of shards to be created on a Premium Cluster Cache.</p>

    <p></p>
  syntax: public Update withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(DayOfWeek,int,Period)
- fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  name: withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  nameWithType: RedisCache.Update.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  parameters:
  - description: <p>List of patch schedule entries for Premium Redis Cache. </p>
    name: scheduleEntry
    type: List&lt;<xref href="com.microsoft.azure.management.redis.ScheduleEntry?alt=com.microsoft.azure.management.redis.ScheduleEntry&text=ScheduleEntry" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=RedisCache.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Patch schedule on a Premium Cluster Cache.</p>

    <p></p>
  syntax: public Update withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(List<ScheduleEntry>)
- fullName: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)
  name: withPatchSchedule(ScheduleEntry scheduleEntry)
  nameWithType: RedisCache.Update.withPatchSchedule(ScheduleEntry scheduleEntry)
  parameters:
  - description: <p>Patch schedule entry for Premium Redis Cache. </p>
    name: scheduleEntry
    type: <xref href="com.microsoft.azure.management.redis.ScheduleEntry?alt=com.microsoft.azure.management.redis.ScheduleEntry&text=ScheduleEntry" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=RedisCache.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Patch schedule on a Premium Cluster Cache.</p>

    <p></p>
  syntax: public Update withPatchSchedule(ScheduleEntry scheduleEntry)
  uid: com.microsoft.azure.management.redis.RedisCache.Update.withPatchSchedule(ScheduleEntry)
- fullName: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int shardCount)
  name: withShardCount(int shardCount)
  nameWithType: RedisCache.Update.withShardCount(int shardCount)
  parameters:
  - description: <p>the shard count value to set. </p>
    name: shardCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache update. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=RedisCache.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The number of shards to be created on a Premium Cluster Cache.</p>

    <p></p>
  syntax: public Update withShardCount(int shardCount)
  uid: com.microsoft.azure.management.redis.RedisCache.Update.withShardCount(int)
- fullName: com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP(String staticIP)
  name: withStaticIP(String staticIP)
  nameWithType: RedisCache.Update.withStaticIP(String staticIP)
  parameters:
  - description: <p>the staticIP value to set. </p>
    name: staticIP
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache update. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=RedisCache.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.</p>

    <p></p>
  syntax: public Update withStaticIP(String staticIP)
  uid: com.microsoft.azure.management.redis.RedisCache.Update.withStaticIP(String)
- fullName: com.microsoft.azure.management.redis.RedisCache.Update.withSubnet(HasId networkResource, String subnetName)
  name: withSubnet(HasId networkResource, String subnetName)
  nameWithType: RedisCache.Update.withSubnet(HasId networkResource, String subnetName)
  parameters:
  - description: <p>instance of Network object. </p>
    name: networkResource
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.models.HasId?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasId&text=HasId" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the subnet. </p>
    name: subnetName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache update. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.Update?alt=com.microsoft.azure.management.redis.RedisCache.Update&text=RedisCache.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Assigns the specified subnet to this instance of Redis Cache.</p>

    <p></p>
  syntax: public Update withSubnet(HasId networkResource, String subnetName)
  uid: com.microsoft.azure.management.redis.RedisCache.Update.withSubnet(HasId,String)
nameWithType: RedisCache.Update
syntax: public interface Update extends Appliable<RedisCache>,Resource.UpdateWithTags<Update>,RedisCache.UpdateStages.WithSku,RedisCache.UpdateStages.WithNonSslPort,RedisCache.UpdateStages.WithRedisConfiguration
type: interface
uid: com.microsoft.azure.management.redis.RedisCache.Update
fullName: com.microsoft.azure.management.redis.RedisCache.Update
name: RedisCache.Update
package: com.microsoft.azure.management.redis
summary: <p>The template for a Redis Cache update operation, containing all the settings that can be modified. </p>
metadata: {}
