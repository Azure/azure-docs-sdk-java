### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.name()
  name: name()
  nameWithType: SourceTriggerUpdateParameters.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the trigger.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.name()
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.sourceRepository()
  name: sourceRepository()
  nameWithType: SourceTriggerUpdateParameters.sourceRepository()
  returns:
    description: <p>the sourceRepository value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceUpdateParameters?alt=com.microsoft.azure.management.containerregistry.SourceUpdateParameters&text=SourceUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the properties that describes the source(code) for the task.</p>

    <p></p>
  syntax: public SourceUpdateParameters sourceRepository()
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.sourceRepository()
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.sourceTriggerEvents()
  name: sourceTriggerEvents()
  nameWithType: SourceTriggerUpdateParameters.sourceTriggerEvents()
  returns:
    description: <p>the sourceTriggerEvents value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.SourceTriggerEvent?alt=com.microsoft.azure.management.containerregistry.SourceTriggerEvent&text=SourceTriggerEvent" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the source event corresponding to the trigger.</p>

    <p></p>
  syntax: public List<SourceTriggerEvent> sourceTriggerEvents()
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.sourceTriggerEvents()
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.status()
  name: status()
  nameWithType: SourceTriggerUpdateParameters.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TriggerStatus?alt=com.microsoft.azure.management.containerregistry.TriggerStatus&text=TriggerStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current status of trigger. Possible values include: 'Disabled', 'Enabled'.</p>

    <p></p>
  syntax: public TriggerStatus status()
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.status()
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withName(String name)
  name: withName(String name)
  nameWithType: SourceTriggerUpdateParameters.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SourceTriggerUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters?alt=com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters&text=SourceTriggerUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name of the trigger.</p>

    <p></p>
  syntax: public SourceTriggerUpdateParameters withName(String name)
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withName(String)
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withSourceRepository(SourceUpdateParameters sourceRepository)
  name: withSourceRepository(SourceUpdateParameters sourceRepository)
  nameWithType: SourceTriggerUpdateParameters.withSourceRepository(SourceUpdateParameters sourceRepository)
  parameters:
  - description: <p>the sourceRepository value to set </p>
    name: sourceRepository
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceUpdateParameters?alt=com.microsoft.azure.management.containerregistry.SourceUpdateParameters&text=SourceUpdateParameters" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SourceTriggerUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters?alt=com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters&text=SourceTriggerUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the properties that describes the source(code) for the task.</p>

    <p></p>
  syntax: public SourceTriggerUpdateParameters withSourceRepository(SourceUpdateParameters sourceRepository)
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withSourceRepository(SourceUpdateParameters)
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  name: withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  nameWithType: SourceTriggerUpdateParameters.withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  parameters:
  - description: <p>the sourceTriggerEvents value to set </p>
    name: sourceTriggerEvents
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.SourceTriggerEvent?alt=com.microsoft.azure.management.containerregistry.SourceTriggerEvent&text=SourceTriggerEvent" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the SourceTriggerUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters?alt=com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters&text=SourceTriggerUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the source event corresponding to the trigger.</p>

    <p></p>
  syntax: public SourceTriggerUpdateParameters withSourceTriggerEvents(List<SourceTriggerEvent> sourceTriggerEvents)
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withSourceTriggerEvents(List<SourceTriggerEvent>)
- fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withStatus(TriggerStatus status)
  name: withStatus(TriggerStatus status)
  nameWithType: SourceTriggerUpdateParameters.withStatus(TriggerStatus status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.management.containerregistry.TriggerStatus?alt=com.microsoft.azure.management.containerregistry.TriggerStatus&text=TriggerStatus" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SourceTriggerUpdateParameters object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters?alt=com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters&text=SourceTriggerUpdateParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the current status of trigger. Possible values include: 'Disabled', 'Enabled'.</p>

    <p></p>
  syntax: public SourceTriggerUpdateParameters withStatus(TriggerStatus status)
  uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters.withStatus(TriggerStatus)
nameWithType: SourceTriggerUpdateParameters
syntax: public class SourceTriggerUpdateParameters
type: class
uid: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters
fullName: com.microsoft.azure.management.containerregistry.SourceTriggerUpdateParameters
name: SourceTriggerUpdateParameters
package: com.microsoft.azure.management.containerregistry
summary: <p>The properties for updating a source based trigger. </p>
metadata: {}
