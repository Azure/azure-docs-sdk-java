### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.core.PathUtility.addToQuery(final StorageUri resourceURI, final String queryString)
  name: addToQuery(final StorageUri resourceURI, final String queryString)
  nameWithType: PathUtility.addToQuery(final StorageUri resourceURI, final String queryString)
  parameters:
  - description: <p>the URI of the resource </p>
    name: resourceURI
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>the query string to add </p>
    name: queryString
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if the resulting URI is invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an appended URI. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a queryString to an URI.</p>

    <p></p>
  syntax: public static StorageUri addToQuery(final StorageUri resourceURI, final String queryString)
  uid: com.microsoft.azure.storage.core.PathUtility.addToQuery(final StorageUri,final String)
- fullName: com.microsoft.azure.storage.core.PathUtility.addToQuery(final URI resourceURI, final String queryString)
  name: addToQuery(final URI resourceURI, final String queryString)
  nameWithType: PathUtility.addToQuery(final URI resourceURI, final String queryString)
  parameters:
  - description: <p>the URI of the resource </p>
    name: resourceURI
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>the query string to add </p>
    name: queryString
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if the resulting URI is invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an appended URI. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a queryString to an URI.</p>

    <p></p>
  syntax: public static URI addToQuery(final URI resourceURI, final String queryString)
  uid: com.microsoft.azure.storage.core.PathUtility.addToQuery(final URI,final String)
- fullName: com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery(final URI resourceURI, final HashMap<String, String[]> fieldCollection)
  name: addToSingleUriQuery(final URI resourceURI, final HashMap<String, String[]> fieldCollection)
  nameWithType: PathUtility.addToSingleUriQuery(final URI resourceURI, final HashMap<String, String[]> fieldCollection)
  parameters:
  - description: <p>the URI of the resource </p>
    name: resourceURI
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>the key/ values collection to append. </p>
    name: fieldCollection
    type: <xref href="final+HashMap%3CString%2C+String%5B%5D%3E?alt=final+HashMap%3CString%2C+String%5B%5D%3E&text=final+HashMap%3CString%2C+String%5B%5D%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if the resulting URI is invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an appended URI. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a queryString to an URI.</p>

    <p></p>
  syntax: public static URI addToSingleUriQuery(final URI resourceURI, final HashMap<String, String[]> fieldCollection)
  uid: com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery(final URI,final HashMap<String, String[]>)
- fullName: com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(final URI uri, final String relativeOrAbsoluteUri)
  name: appendPathToSingleUri(final URI uri, final String relativeOrAbsoluteUri)
  nameWithType: PathUtility.appendPathToSingleUri(final URI uri, final String relativeOrAbsoluteUri)
  parameters:
  - description: <p>The base Uri. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>The relative or absloute URI. </p>
    name: relativeOrAbsoluteUri
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The appended Uri. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Appends a path to a URI correctly using "/" as separator.</p>

    <p></p>
  syntax: public static URI appendPathToSingleUri(final URI uri, final String relativeOrAbsoluteUri)
  uid: com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(final URI,final String)
- fullName: com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(final URI uri, final String relativeUri, final String separator)
  name: appendPathToSingleUri(final URI uri, final String relativeUri, final String separator)
  nameWithType: PathUtility.appendPathToSingleUri(final URI uri, final String relativeUri, final String separator)
  parameters:
  - description: <p>The base Uri. </p>
    name: uri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>The relative URI. </p>
    name: relativeUri
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the separator to use. </p>
    name: separator
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>a valid Uri cannot be constructed </p>
  returns:
    description: <p>The appended Uri. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Appends a path to a URI correctly using the given separator.</p>

    <p></p>
  syntax: public static URI appendPathToSingleUri(final URI uri, final String relativeUri, final String separator)
  uid: com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(final URI,final String,final String)
- fullName: com.microsoft.azure.storage.core.PathUtility.appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri)
  name: appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri)
  nameWithType: PathUtility.appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri)
  parameters:
  - description: <p>The base Uri. </p>
    name: uriList
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>The relative or absolute URI. </p>
    name: relativeOrAbsoluteUri
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The appended Uri. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Appends a path to a list of URIs correctly using "/" as separator.</p>

    <p></p>
  syntax: public static StorageUri appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri)
  uid: com.microsoft.azure.storage.core.PathUtility.appendPathToUri(final StorageUri,final String)
- fullName: com.microsoft.azure.storage.core.PathUtility.appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri, final String separator)
  name: appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri, final String separator)
  nameWithType: PathUtility.appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri, final String separator)
  parameters:
  - description: <p>The base Uri. </p>
    name: uriList
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>The relative or absolute URI. </p>
    name: relativeOrAbsoluteUri
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - name: separator
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The appended Uri. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Appends a path to a list of URIs correctly using "/" as separator.</p>

    <p></p>
  syntax: public static StorageUri appendPathToUri(final StorageUri uriList, final String relativeOrAbsoluteUri, final String separator)
  uid: com.microsoft.azure.storage.core.PathUtility.appendPathToUri(final StorageUri,final String,final String)
- fullName: com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI(final URI inURI, final boolean usePathStyleUris)
  name: getBlobNameFromURI(final URI inURI, final boolean usePathStyleUris)
  nameWithType: PathUtility.getBlobNameFromURI(final URI inURI, final boolean usePathStyleUris)
  parameters:
  - description: <p>the resource address </p>
    name: inURI
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the blobs name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the blob name from the URI.</p>

    <p></p>
  syntax: public static String getBlobNameFromURI(final URI inURI, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI(final URI,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials(final StorageCredentials credentials, final String absolutePath)
  name: getCanonicalPathFromCredentials(final StorageCredentials credentials, final String absolutePath)
  nameWithType: PathUtility.getCanonicalPathFromCredentials(final StorageCredentials credentials, final String absolutePath)
  parameters:
  - description: <p>the credentials to use. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>the Absolute path of the object. </p>
    name: absolutePath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the canonical path for an object from the credentials </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the canonical path for an object from the credentials.</p>

    <p></p>
  syntax: public static String getCanonicalPathFromCredentials(final StorageCredentials credentials, final String absolutePath)
  uid: com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials(final StorageCredentials,final String)
- fullName: com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  name: getContainerNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  nameWithType: PathUtility.getContainerNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  parameters:
  - description: <p>The container Uri. </p>
    name: resourceAddress
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>container name from address from the URI. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the container name from address from the URI.</p>

    <p></p>
  syntax: public static String getContainerNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri(final URI,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getContainerURI(final StorageUri blobAddress, final boolean usePathStyleUris)
  name: getContainerURI(final StorageUri blobAddress, final boolean usePathStyleUris)
  nameWithType: PathUtility.getContainerURI(final StorageUri blobAddress, final boolean usePathStyleUris)
  parameters:
  - description: <p>the blob address </p>
    name: blobAddress
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the container URI from a blob address </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the container URI from a blob address</p>

    <p></p>
  syntax: public static StorageUri getContainerURI(final StorageUri blobAddress, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getContainerURI(final StorageUri,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  name: getDirectoryNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  nameWithType: PathUtility.getDirectoryNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  parameters:
  - description: <p>the directory URI </p>
    name: resourceAddress
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style URI </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>directory name from address from the URI </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the lowest level directory from the given directory address.</p>

    <p></p>
  syntax: public static String getDirectoryNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI(final URI,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  name: getFileNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  nameWithType: PathUtility.getFileNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  parameters:
  - description: <p>the file URI </p>
    name: resourceAddress
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style URI </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the file's name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the file name from the URI.</p>

    <p></p>
  syntax: public static String getFileNameFromURI(final URI resourceAddress, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI(final URI,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(final StorageUri addressUri, final boolean usePathStyleUris)
  name: getServiceClientBaseAddress(final StorageUri addressUri, final boolean usePathStyleUris)
  nameWithType: PathUtility.getServiceClientBaseAddress(final StorageUri addressUri, final boolean usePathStyleUris)
  parameters:
  - description: <p>Complete address of the resource. </p>
    name: addressUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client address from a complete Uri. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the service client address from a complete Uri.</p>

    <p></p>
  syntax: public static StorageUri getServiceClientBaseAddress(final StorageUri addressUri, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(final StorageUri,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(final URI address, final boolean usePathStyleUris)
  name: getServiceClientBaseAddress(final URI address, final boolean usePathStyleUris)
  nameWithType: PathUtility.getServiceClientBaseAddress(final URI address, final boolean usePathStyleUris)
  parameters:
  - description: <p>Complete address of the resource. </p>
    name: address
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client address from a complete Uri. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the service client address from a complete Uri.</p>

    <p></p>
  syntax: public static String getServiceClientBaseAddress(final URI address, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(final URI,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  name: getShareNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  nameWithType: PathUtility.getShareNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  parameters:
  - description: <p>The share Uri. </p>
    name: resourceAddress
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>share name from address from the URI. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the share name from address from the URI.</p>

    <p></p>
  syntax: public static String getShareNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri(final URI,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getShareURI(final StorageUri fileAddress, final boolean usePathStyleUris)
  name: getShareURI(final StorageUri fileAddress, final boolean usePathStyleUris)
  nameWithType: PathUtility.getShareURI(final StorageUri fileAddress, final boolean usePathStyleUris)
  parameters:
  - description: <p>the file address </p>
    name: fileAddress
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the share URI from a file address </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the share URI from a file address</p>

    <p></p>
  syntax: public static StorageUri getShareURI(final StorageUri fileAddress, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getShareURI(final StorageUri,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  name: getTableNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  nameWithType: PathUtility.getTableNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  parameters:
  - description: <p>The table Uri. </p>
    name: resourceAddress
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>a value indicating if the address is a path style uri. </p>
    name: usePathStyleUris
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>table name from address from the URI. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the table name from address from the URI.</p>

    <p></p>
  syntax: public static String getTableNameFromUri(final URI resourceAddress, final boolean usePathStyleUris)
  uid: com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri(final URI,final boolean)
- fullName: com.microsoft.azure.storage.core.PathUtility.parseQueryString(String parseString)
  name: parseQueryString(String parseString)
  nameWithType: PathUtility.parseQueryString(String parseString)
  parameters:
  - description: <p>the string to parse </p>
    name: parseString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a HashMap&lt;String, String[]&gt; of the key values. </p>
    type: <xref href="HashMap%3CString%2C+String%5B%5D%3E?alt=HashMap%3CString%2C+String%5B%5D%3E&text=HashMap%3CString%2C+String%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Parses a query string into a one to many hashmap.</p>

    <p></p>
  syntax: public static HashMap<String, String[]> parseQueryString(String parseString)
  uid: com.microsoft.azure.storage.core.PathUtility.parseQueryString(String)
- fullName: com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment(final URI inUri)
  name: stripSingleURIQueryAndFragment(final URI inUri)
  nameWithType: PathUtility.stripSingleURIQueryAndFragment(final URI inUri)
  parameters:
  - description: <p>the uri to alter </p>
    name: inUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the stripped uri. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Strips the Query and Fragment from the uri.</p>

    <p></p>
  syntax: public static URI stripSingleURIQueryAndFragment(final URI inUri)
  uid: com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment(final URI)
- fullName: com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment(final StorageUri inUri)
  name: stripURIQueryAndFragment(final StorageUri inUri)
  nameWithType: PathUtility.stripURIQueryAndFragment(final StorageUri inUri)
  parameters:
  - description: <p>the uri to alter </p>
    name: inUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the stripped uri. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Strips the Query and Fragment from the uri.</p>

    <p></p>
  syntax: public static StorageUri stripURIQueryAndFragment(final StorageUri inUri)
  uid: com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment(final StorageUri)
nameWithType: PathUtility
syntax: public class PathUtility
type: class
uid: com.microsoft.azure.storage.core.PathUtility
fullName: com.microsoft.azure.storage.core.PathUtility
name: PathUtility
package: com.microsoft.azure.storage.core
summary: <p>RESERVED FOR INTERNAL USE. A class to help modify paths </p>
metadata: {}
