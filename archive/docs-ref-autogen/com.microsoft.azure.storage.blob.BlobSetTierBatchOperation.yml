### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.BlobBatchOperation?alt=com.microsoft.azure.storage.blob.BlobBatchOperation&text=BlobBatchOperation%3CP%2CR%3E" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier)
  name: addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier)
  nameWithType: BlobSetTierBatchOperation.addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier)
  parameters:
  - name: blockBlob
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  - name: tier
    type: <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  syntax: public void addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier)
  uid: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudBlockBlob,StandardBlobTier)
- fullName: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier, RehydratePriority rehydratePriority, BlobRequestOptions options)
  name: addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier, RehydratePriority rehydratePriority, BlobRequestOptions options)
  nameWithType: BlobSetTierBatchOperation.addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier, RehydratePriority rehydratePriority, BlobRequestOptions options)
  parameters:
  - name: blockBlob
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  - name: tier
    type: <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - name: rehydratePriority
    type: <xref href="com.microsoft.azure.storage.blob.RehydratePriority?alt=com.microsoft.azure.storage.blob.RehydratePriority&text=RehydratePriority" data-throw-if-not-resolved="False"/>
  - name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  syntax: public void addSubOperation(CloudBlockBlob blockBlob, StandardBlobTier tier, RehydratePriority rehydratePriority, BlobRequestOptions options)
  uid: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudBlockBlob,StandardBlobTier,RehydratePriority,BlobRequestOptions)
- fullName: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier)
  name: addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier)
  nameWithType: BlobSetTierBatchOperation.addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier)
  parameters:
  - name: pageBlob
    type: <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  - name: tier
    type: <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  syntax: public void addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier)
  uid: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudPageBlob,PremiumPageBlobTier)
- fullName: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier, BlobRequestOptions options)
  name: addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier, BlobRequestOptions options)
  nameWithType: BlobSetTierBatchOperation.addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier, BlobRequestOptions options)
  parameters:
  - name: pageBlob
    type: <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  - name: tier
    type: <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  - name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  syntax: public void addSubOperation(CloudPageBlob pageBlob, PremiumPageBlobTier tier, BlobRequestOptions options)
  uid: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.addSubOperation(CloudPageBlob,PremiumPageBlobTier,BlobRequestOptions)
- fullName: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.convertResponse(BatchSubResponse response)
  name: convertResponse(BatchSubResponse response)
  nameWithType: BlobSetTierBatchOperation.convertResponse(BatchSubResponse response)
  parameters:
  - name: response
    type: <xref href="com.microsoft.azure.storage.BatchSubResponse?alt=com.microsoft.azure.storage.BatchSubResponse&text=BatchSubResponse" data-throw-if-not-resolved="False"/>
  syntax: protected Void convertResponse(BatchSubResponse response)
  uid: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation.convertResponse(BatchSubResponse)
nameWithType: BlobSetTierBatchOperation
syntax: public class BlobSetTierBatchOperation extends BlobBatchOperation<CloudBlob, Void>
type: class
uid: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation
fullName: com.microsoft.azure.storage.blob.BlobSetTierBatchOperation
name: BlobSetTierBatchOperation
package: com.microsoft.azure.storage.blob
metadata: {}
