### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.deleteCertificateError()
  name: deleteCertificateError()
  nameWithType: Certificate.deleteCertificateError()
  returns:
    description: <p>the deleteCertificateError value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.DeleteCertificateError?alt=com.microsoft.azure.batch.protocol.models.DeleteCertificateError&text=DeleteCertificateError" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the certificate is in the DeleteFailed state.</p>

    <p></p>
  syntax: public DeleteCertificateError deleteCertificateError()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.deleteCertificateError()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.previousState()
  name: previousState()
  nameWithType: Certificate.previousState()
  returns:
    description: <p>the previousState value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CertificateState?alt=com.microsoft.azure.batch.protocol.models.CertificateState&text=CertificateState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is not set if the certificate is in its initial active state. Possible values include: 'active', 'deleting', 'deleteFailed'.</p>

    <p></p>
  syntax: public CertificateState previousState()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.previousState()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.previousStateTransitionTime()
  name: previousStateTransitionTime()
  nameWithType: Certificate.previousStateTransitionTime()
  returns:
    description: <p>the previousStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is not set if the certificate is in its initial Active state.</p>

    <p></p>
  syntax: public DateTime previousStateTransitionTime()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.previousStateTransitionTime()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.publicData()
  name: publicData()
  nameWithType: Certificate.publicData()
  returns:
    description: <p>the publicData value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the publicData value.</p>

    <p></p>
  syntax: public String publicData()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.publicData()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.state()
  name: state()
  nameWithType: Certificate.state()
  returns:
    description: <p>the state value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CertificateState?alt=com.microsoft.azure.batch.protocol.models.CertificateState&text=CertificateState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'active', 'deleting', 'deleteFailed'.</p>

    <p></p>
  syntax: public CertificateState state()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.state()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.stateTransitionTime()
  name: stateTransitionTime()
  nameWithType: Certificate.stateTransitionTime()
  returns:
    description: <p>the stateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the stateTransitionTime value.</p>

    <p></p>
  syntax: public DateTime stateTransitionTime()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.stateTransitionTime()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.thumbprint()
  name: thumbprint()
  nameWithType: Certificate.thumbprint()
  returns:
    description: <p>the thumbprint value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the thumbprint value.</p>

    <p></p>
  syntax: public String thumbprint()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.thumbprint()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.thumbprintAlgorithm()
  name: thumbprintAlgorithm()
  nameWithType: Certificate.thumbprintAlgorithm()
  returns:
    description: <p>the thumbprintAlgorithm value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the thumbprintAlgorithm value.</p>

    <p></p>
  syntax: public String thumbprintAlgorithm()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.thumbprintAlgorithm()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.url()
  name: url()
  nameWithType: Certificate.url()
  returns:
    description: <p>the url value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the url value.</p>

    <p></p>
  syntax: public String url()
  uid: com.microsoft.azure.batch.protocol.models.Certificate.url()
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withDeleteCertificateError(DeleteCertificateError deleteCertificateError)
  name: withDeleteCertificateError(DeleteCertificateError deleteCertificateError)
  nameWithType: Certificate.withDeleteCertificateError(DeleteCertificateError deleteCertificateError)
  parameters:
  - description: <p>the deleteCertificateError value to set </p>
    name: deleteCertificateError
    type: <xref href="com.microsoft.azure.batch.protocol.models.DeleteCertificateError?alt=com.microsoft.azure.batch.protocol.models.DeleteCertificateError&text=DeleteCertificateError" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the certificate is in the DeleteFailed state.</p>

    <p></p>
  syntax: public Certificate withDeleteCertificateError(DeleteCertificateError deleteCertificateError)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withDeleteCertificateError(DeleteCertificateError)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withPreviousState(CertificateState previousState)
  name: withPreviousState(CertificateState previousState)
  nameWithType: Certificate.withPreviousState(CertificateState previousState)
  parameters:
  - description: <p>the previousState value to set </p>
    name: previousState
    type: <xref href="com.microsoft.azure.batch.protocol.models.CertificateState?alt=com.microsoft.azure.batch.protocol.models.CertificateState&text=CertificateState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is not set if the certificate is in its initial active state. Possible values include: 'active', 'deleting', 'deleteFailed'.</p>

    <p></p>
  syntax: public Certificate withPreviousState(CertificateState previousState)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withPreviousState(CertificateState)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
  name: withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
  nameWithType: Certificate.withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
  parameters:
  - description: <p>the previousStateTransitionTime value to set </p>
    name: previousStateTransitionTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is not set if the certificate is in its initial Active state.</p>

    <p></p>
  syntax: public Certificate withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withPreviousStateTransitionTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withPublicData(String publicData)
  name: withPublicData(String publicData)
  nameWithType: Certificate.withPublicData(String publicData)
  parameters:
  - description: <p>the publicData value to set </p>
    name: publicData
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the publicData value.</p>

    <p></p>
  syntax: public Certificate withPublicData(String publicData)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withPublicData(String)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withState(CertificateState state)
  name: withState(CertificateState state)
  nameWithType: Certificate.withState(CertificateState state)
  parameters:
  - description: <p>the state value to set </p>
    name: state
    type: <xref href="com.microsoft.azure.batch.protocol.models.CertificateState?alt=com.microsoft.azure.batch.protocol.models.CertificateState&text=CertificateState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set possible values include: 'active', 'deleting', 'deleteFailed'.</p>

    <p></p>
  syntax: public Certificate withState(CertificateState state)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withState(CertificateState)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withStateTransitionTime(DateTime stateTransitionTime)
  name: withStateTransitionTime(DateTime stateTransitionTime)
  nameWithType: Certificate.withStateTransitionTime(DateTime stateTransitionTime)
  parameters:
  - description: <p>the stateTransitionTime value to set </p>
    name: stateTransitionTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the stateTransitionTime value.</p>

    <p></p>
  syntax: public Certificate withStateTransitionTime(DateTime stateTransitionTime)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withStateTransitionTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withThumbprint(String thumbprint)
  name: withThumbprint(String thumbprint)
  nameWithType: Certificate.withThumbprint(String thumbprint)
  parameters:
  - description: <p>the thumbprint value to set </p>
    name: thumbprint
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the thumbprint value.</p>

    <p></p>
  syntax: public Certificate withThumbprint(String thumbprint)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withThumbprint(String)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withThumbprintAlgorithm(String thumbprintAlgorithm)
  name: withThumbprintAlgorithm(String thumbprintAlgorithm)
  nameWithType: Certificate.withThumbprintAlgorithm(String thumbprintAlgorithm)
  parameters:
  - description: <p>the thumbprintAlgorithm value to set </p>
    name: thumbprintAlgorithm
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the thumbprintAlgorithm value.</p>

    <p></p>
  syntax: public Certificate withThumbprintAlgorithm(String thumbprintAlgorithm)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withThumbprintAlgorithm(String)
- fullName: com.microsoft.azure.batch.protocol.models.Certificate.withUrl(String url)
  name: withUrl(String url)
  nameWithType: Certificate.withUrl(String url)
  parameters:
  - description: <p>the url value to set </p>
    name: url
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Certificate object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.Certificate?alt=com.microsoft.azure.batch.protocol.models.Certificate&text=Certificate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the url value.</p>

    <p></p>
  syntax: public Certificate withUrl(String url)
  uid: com.microsoft.azure.batch.protocol.models.Certificate.withUrl(String)
nameWithType: Certificate
syntax: public class Certificate
type: class
uid: com.microsoft.azure.batch.protocol.models.Certificate
fullName: com.microsoft.azure.batch.protocol.models.Certificate
name: Certificate
package: com.microsoft.azure.batch.protocol.models
summary: <p>A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine. </p>
metadata: {}
