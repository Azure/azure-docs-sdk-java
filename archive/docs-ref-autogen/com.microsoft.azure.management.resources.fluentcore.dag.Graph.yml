### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.Graph()
  name: Graph()
  nameWithType: Graph<DataT,NodeT,NodeT>.Graph()
  summary: <p>Creates a directed graph. </p>
  syntax: public Graph()
  uid: com.microsoft.azure.management.resources.fluentcore.dag.Graph.Graph()
fields:
- field:
    type: <xref href="Map%3CString%2C+NodeT%3E?alt=Map%3CString%2C+NodeT%3E&text=Map%3CString%2C+NodeT%3E" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.graph
  name: graph
  nameWithType: Graph<DataT,NodeT,NodeT>.graph
  summary: <p>the underlying graph. </p>
  syntax: protected Map<String, NodeT> graph
  uid: com.microsoft.azure.management.resources.fluentcore.dag.Graph.graph
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.addNode(NodeT node)
  name: addNode(NodeT node)
  nameWithType: Graph<DataT,NodeT,NodeT>.addNode(NodeT node)
  parameters:
  - description: <p>the node </p>
    name: node
    type: <xref href="NodeT?alt=NodeT&text=NodeT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a node to this graph.</p>

    <p></p>
  syntax: public void addNode(NodeT node)
  uid: com.microsoft.azure.management.resources.fluentcore.dag.Graph.addNode(NodeT)
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.findPath(String start, String end)
  name: findPath(String start, String end)
  nameWithType: Graph<DataT,NodeT,NodeT>.findPath(String start, String end)
  parameters:
  - name: start
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: end
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected String findPath(String start, String end)
  uid: com.microsoft.azure.management.resources.fluentcore.dag.Graph.findPath(String,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.getNodes()
  name: getNodes()
  nameWithType: Graph<DataT,NodeT,NodeT>.getNodes()
  returns:
    description: <p>all nodes in the graph. </p>
    type: <xref href="Collection%3CNodeT%3E?alt=Collection%3CNodeT%3E&text=Collection%3CNodeT%3E" data-throw-if-not-resolved="False"/>
  syntax: public Collection<NodeT> getNodes()
  uid: com.microsoft.azure.management.resources.fluentcore.dag.Graph.getNodes()
- fullName: com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT, NodeT extends Node<DataT, NodeT>.visit(Visitor visitor)
  name: visit(Visitor visitor)
  nameWithType: Graph<DataT,NodeT,NodeT>.visit(Visitor visitor)
  parameters:
  - description: <p>the graph visitor </p>
    name: visitor
    type: <xref href="Visitor?alt=Visitor&text=Visitor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Perform DFS visit in this graph. </p>

    <p>The directed graph will be traversed in DFS order and the visitor will be notified as search explores each node and edge.</p>

    <p></p>
  syntax: public void visit(Visitor visitor)
  uid: com.microsoft.azure.management.resources.fluentcore.dag.Graph.visit(Visitor)
nameWithType: Graph<DataT,NodeT,NodeT>
syntax: public class Graph<DataT,NodeT extends Node<DataT,NodeT>>
type: class
typeParameters:
- description: <p>the type of the data stored in the graph's nodes </p>
  name: DataT
- description: <p>the type of the nodes in the graph </p>
  name: NodeT
- description: <p>the type of the nodes in the graph </p>
  name: NodeT
uid: com.microsoft.azure.management.resources.fluentcore.dag.Graph
fullName: com.microsoft.azure.management.resources.fluentcore.dag.Graph<DataT,NodeT,NodeT>
name: Graph<DataT,NodeT,NodeT>
package: com.microsoft.azure.management.resources.fluentcore.dag
summary: >-
  <p>Type representing a directed graph data structure. </p>

  <p>Each node in a graph is represented by <xref uid="com.microsoft.azure.management.resources.fluentcore.dag.Node" data-throw-if-not-resolved="false" data-raw-source="Node"></xref></p>

  <p></p>
metadata: {}
