### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.details()
  name: details()
  nameWithType: BingImages.details()
  returns:
    description: <p>the first stage of the details call </p>
    type: <xref href="BingImagesDetailsDefinitionStages.WithQuery?alt=BingImagesDetailsDefinitionStages.WithQuery&text=BingImagesDetailsDefinitionStages.WithQuery" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Image Detail Search API lets you search on Bing and get back insights about an image, such as webpages that include the image. This section provides technical details about the query parameters and headers that you use to request insights of images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web</a>).</p>

    <p></p>
  syntax: public BingImagesDetailsDefinitionStages.WithQuery details()
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.details()
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.details(String query, DetailsOptionalParameter detailsOptionalParameter)
  name: details(String query, DetailsOptionalParameter detailsOptionalParameter)
  nameWithType: BingImages.details(String query, DetailsOptionalParameter detailsOptionalParameter)
  parameters:
  - description: <p>The user's search query term. The term cannot be empty. The term may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit images to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. To help improve relevance of an insights query (see [insightsToke* n](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken</a>)), you should always include the user's query term. Use this parameter only with the Image Search API.Do not specify this parameter when calling the Trending Images API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: detailsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.DetailsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.DetailsOptionalParameter&text=DetailsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ImageInsights object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageInsights?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageInsights&text=ImageInsights" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Image Detail Search API lets you search on Bing and get back insights about an image, such as webpages that include the image. This section provides technical details about the query parameters and headers that you use to request insights of images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web</a>).</p>

    <p></p>
  syntax: public ImageInsights details(String query, DetailsOptionalParameter detailsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.details(String,DetailsOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  name: detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  nameWithType: BingImages.detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  parameters:
  - description: <p>The user's search query term. The term cannot be empty. The term may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit images to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. To help improve relevance of an insights query (see [insightsToke* n](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken</a>)), you should always include the user's query term. Use this parameter only with the Image Search API.Do not specify this parameter when calling the Trending Images API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: detailsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.DetailsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.DetailsOptionalParameter&text=DetailsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ImageInsights object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageInsights?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImageInsights&text=ImageInsights" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The Image Detail Search API lets you search on Bing and get back insights about an image, such as webpages that include the image. This section provides technical details about the query parameters and headers that you use to request insights of images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web</a>).</p>

    <p></p>
  syntax: public Observable<ImageInsights> detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.detailsAsync(String,DetailsOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.search()
  name: search()
  nameWithType: BingImages.search()
  returns:
    description: <p>the first stage of the search call </p>
    type: <xref href="BingImagesSearchDefinitionStages.WithQuery?alt=BingImagesSearchDefinitionStages.WithQuery&text=BingImagesSearchDefinitionStages.WithQuery" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web</a>).</p>

    <p></p>
  syntax: public BingImagesSearchDefinitionStages.WithQuery search()
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.search()
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.search(String query, SearchOptionalParameter searchOptionalParameter)
  name: search(String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingImages.search(String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The user's search query term. The term cannot be empty. The term may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit images to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. To help improve relevance of an insights query (see [insightsToke* n](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken</a>)), you should always include the user's query term. Use this parameter only with the Image Search API.Do not specify this parameter when calling the Trending Images API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ImagesModel object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImagesModel?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImagesModel&text=ImagesModel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web</a>).</p>

    <p></p>
  syntax: public ImagesModel search(String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.search(String,SearchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  name: searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingImages.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The user's search query term. The term cannot be empty. The term may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit images to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. To help improve relevance of an insights query (see [insightsToke* n](<a href="https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken">https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#insightstoken</a>)), you should always include the user's query term. Use this parameter only with the Image Search API.Do not specify this parameter when calling the Trending Images API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ImagesModel object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImagesModel?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.ImagesModel&text=ImagesModel" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The Image Search API lets you send a search query to Bing and get back a list of relevant images. This section provides technical details about the query parameters and headers that you use to request images and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Images](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-image-search/search-the-web</a>).</p>

    <p></p>
  syntax: public Observable<ImagesModel> searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.searchAsync(String,SearchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.trending()
  name: trending()
  nameWithType: BingImages.trending()
  returns:
    description: <p>the first stage of the trending call </p>
    type: <xref href="BingImagesTrendingDefinitionStages.WithExecute?alt=BingImagesTrendingDefinitionStages.WithExecute&text=BingImagesTrendingDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Image Trending Search API lets you search on Bing and get back a list of images that are trending based on search requests made by others. The images are broken out into different categories. For example, Popular People Searches. For a list of markets that support trending images, see [Trending Images](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images</a>).</p>

    <p></p>
  syntax: public BingImagesTrendingDefinitionStages.WithExecute trending()
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.trending()
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.trending(TrendingOptionalParameter trendingOptionalParameter)
  name: trending(TrendingOptionalParameter trendingOptionalParameter)
  nameWithType: BingImages.trending(TrendingOptionalParameter trendingOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: trendingOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingOptionalParameter&text=TrendingOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TrendingImages object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingImages?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingImages&text=TrendingImages" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Image Trending Search API lets you search on Bing and get back a list of images that are trending based on search requests made by others. The images are broken out into different categories. For example, Popular People Searches. For a list of markets that support trending images, see [Trending Images](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images</a>).</p>

    <p></p>
  syntax: public TrendingImages trending(TrendingOptionalParameter trendingOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.trending(TrendingOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  name: trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  nameWithType: BingImages.trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: trendingOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingOptionalParameter&text=TrendingOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the TrendingImages object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingImages?alt=com.microsoft.azure.cognitiveservices.search.imagesearch.models.TrendingImages&text=TrendingImages" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The Image Trending Search API lets you search on Bing and get back a list of images that are trending based on search requests made by others. The images are broken out into different categories. For example, Popular People Searches. For a list of markets that support trending images, see [Trending Images](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-image-search/trending-images</a>).</p>

    <p></p>
  syntax: public Observable<TrendingImages> trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages.trendingAsync(TrendingOptionalParameter)
nameWithType: BingImages
syntax: public interface BingImages
type: interface
uid: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages
fullName: com.microsoft.azure.cognitiveservices.search.imagesearch.BingImages
name: BingImages
package: com.microsoft.azure.cognitiveservices.search.imagesearch
summary: <p>An instance of this class provides access to all the operations defined in BingImages. </p>
metadata: {}
