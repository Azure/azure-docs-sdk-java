### YamlMime:JavaType
methods:
- fullName: system.fabric.OperationStream.getOperationAsync(CancellationToken cancellationToken)
  name: getOperationAsync(CancellationToken cancellationToken)
  nameWithType: OperationStream.getOperationAsync(CancellationToken cancellationToken)
  parameters:
  - description: <p>The <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object that the operation is observing. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation might still be completed even if it is canceled. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.concurrent.CompletableFuture"></xref> of type <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Operation"></xref>. The future completes exceptionally with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricException"></xref> for fabric related failures. </p>
    type: CompletableFuture&lt;<xref href="system.fabric.Operation?alt=system.fabric.Operation&text=Operation" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Gets the next object that implements <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false" data-raw-source="system.fabric.Operation"></xref> from the underlying <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.OperationStream"></xref>. </p>
  syntax: public CompletableFuture<Operation> getOperationAsync(CancellationToken cancellationToken)
  uid: system.fabric.OperationStream.getOperationAsync(CancellationToken)
nameWithType: OperationStream
syntax: public interface OperationStream
type: interface
uid: system.fabric.OperationStream
fullName: system.fabric.OperationStream
name: OperationStream
package: system.fabric
summary: >-
  <p>Represents a stream of replication or copy operations that are sent from the Primary to the Secondary replica. </p>

  <p>

    <b> Remarks:</b> The streams returned from <xref uid="system.fabric.StateReplicator.getCopyStream()" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StateReplicator#getCopyStream()"></xref> and <xref uid="system.fabric.StateReplicator.getReplicationStream()" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StateReplicator#getReplicationStream()"></xref> are objects that implement <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.OperationStream"></xref>. </p>
metadata: {}
