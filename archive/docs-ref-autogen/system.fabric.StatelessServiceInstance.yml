### YamlMime:JavaType
methods:
- fullName: system.fabric.StatelessServiceInstance.abort()
  name: abort()
  nameWithType: StatelessServiceInstance.abort()
  summary: >-
    <p>Terminates this instance ungracefully with this synchronous method call. </p>

    <p>

      <b>Remarks:</b>Examples of ungraceful termination are lease loss and, in response to the service, the use of <xref uid="system.fabric.ServicePartition.reportFault(FaultType)" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ServicePartition#reportFault(FaultType)"></xref> to report a <xref uid="system.fabric.FaultType.Permanent" data-throw-if-not-resolved="false" data-raw-source="system.fabric.FaultType#Permanent"></xref> fault. When the service instance receives this method, it should immediately release and clean up all references and return. </p>
  syntax: public void abort()
  uid: system.fabric.StatelessServiceInstance.abort()
- fullName: system.fabric.StatelessServiceInstance.closeAsync(CancellationToken cancellationToken)
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: StatelessServiceInstance.closeAsync(CancellationToken cancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref>. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture%3C%3F%3E&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Closes this service instance gracefully when the service instance is being shut down.</p>

    <p></p>
  syntax: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
  uid: system.fabric.StatelessServiceInstance.closeAsync(CancellationToken)
- fullName: system.fabric.StatelessServiceInstance.initialize(StatelessServiceInitializationParameters initializationParameters)
  name: initialize(StatelessServiceInitializationParameters initializationParameters)
  nameWithType: StatelessServiceInstance.initialize(StatelessServiceInitializationParameters initializationParameters)
  parameters:
  - description: <p>The <xref uid="system.fabric.StatelessServiceInitializationParameters" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StatelessServiceInitializationParameters"></xref> for this service. </p>
    name: initializationParameters
    type: <xref href="system.fabric.StatelessServiceInitializationParameters?alt=system.fabric.StatelessServiceInitializationParameters&text=StatelessServiceInitializationParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a newly created service instance.</p>

    <p></p>
  syntax: public void initialize(StatelessServiceInitializationParameters initializationParameters)
  uid: system.fabric.StatelessServiceInstance.initialize(StatelessServiceInitializationParameters)
- fullName: system.fabric.StatelessServiceInstance.openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)
  name: openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)
  nameWithType: StatelessServiceInstance.openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)
  parameters:
  - description: <p>The <xref uid="system.fabric.StatelessServicePartition" data-throw-if-not-resolved="false" data-raw-source="system.fabric.StatelessServicePartition"></xref> that this instance is associated with </p>
    name: partition
    type: <xref href="system.fabric.StatelessServicePartition?alt=system.fabric.StatelessServicePartition&text=StatelessServicePartition" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> of type <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.String"></xref>. </p>
    type: <xref href="CompletableFuture%3CString%3E?alt=CompletableFuture%3CString%3E&text=CompletableFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens an initialized service instance so that it can be contacted by clients.</p>

    <p>

      <b>Remarks:</b>Opening an instance stateless service indicates that the service is now resolvable and discoverable by service clients. The string that is returned is the address of this service instance. The address is associated with the service name via Service Fabric naming and returned to clients that resolve the service. </p>
  syntax: public CompletableFuture<String> openAsync(StatelessServicePartition partition, CancellationToken cancellationToken)
  uid: system.fabric.StatelessServiceInstance.openAsync(StatelessServicePartition,CancellationToken)
nameWithType: StatelessServiceInstance
syntax: public interface StatelessServiceInstance
type: interface
uid: system.fabric.StatelessServiceInstance
fullName: system.fabric.StatelessServiceInstance
name: StatelessServiceInstance
package: system.fabric
summary: <p>Stateless services are those which have no state that requires management by Service Fabric. Stateless service types must implement this interface. </p>
metadata: {}
