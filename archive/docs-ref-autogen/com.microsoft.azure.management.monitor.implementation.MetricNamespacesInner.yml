### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.MetricNamespacesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: MetricNamespacesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: MetricNamespacesInner.MetricNamespacesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of MetricNamespacesInner.</p>

    <p></p>
  syntax: public MetricNamespacesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.MetricNamespacesInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.list(String resourceUri)
  name: list(String resourceUri)
  nameWithType: MetricNamespacesInner.list(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;MetricNamespaceInner&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public List<MetricNamespaceInner> list(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.list(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.list(String resourceUri, String startTime)
  name: list(String resourceUri, String startTime)
  nameWithType: MetricNamespacesInner.list(String resourceUri, String startTime)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ISO 8601 conform Date start time from which to query for metric namespaces. </p>
    name: startTime
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;MetricNamespaceInner&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public List<MetricNamespaceInner> list(String resourceUri, String startTime)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.list(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String resourceUri)
  name: listAsync(String resourceUri)
  nameWithType: MetricNamespacesInner.listAsync(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;MetricNamespaceInner&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public Observable<List<MetricNamespaceInner>> listAsync(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String resourceUri, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  name: listAsync(String resourceUri, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  nameWithType: MetricNamespacesInner.listAsync(String resourceUri, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public ServiceFuture<List<MetricNamespaceInner>> listAsync(String resourceUri, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String,final ServiceCallback<List<MetricNamespaceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String resourceUri, String startTime)
  name: listAsync(String resourceUri, String startTime)
  nameWithType: MetricNamespacesInner.listAsync(String resourceUri, String startTime)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ISO 8601 conform Date start time from which to query for metric namespaces. </p>
    name: startTime
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;MetricNamespaceInner&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public Observable<List<MetricNamespaceInner>> listAsync(String resourceUri, String startTime)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String resourceUri, String startTime, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  name: listAsync(String resourceUri, String startTime, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  nameWithType: MetricNamespacesInner.listAsync(String resourceUri, String startTime, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ISO 8601 conform Date start time from which to query for metric namespaces. </p>
    name: startTime
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public ServiceFuture<List<MetricNamespaceInner>> listAsync(String resourceUri, String startTime, final ServiceCallback<List<MetricNamespaceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listAsync(String,String,final ServiceCallback<List<MetricNamespaceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listWithServiceResponseAsync(String resourceUri)
  name: listWithServiceResponseAsync(String resourceUri)
  nameWithType: MetricNamespacesInner.listWithServiceResponseAsync(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;MetricNamespaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<MetricNamespaceInner>>> listWithServiceResponseAsync(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listWithServiceResponseAsync(String resourceUri, String startTime)
  name: listWithServiceResponseAsync(String resourceUri, String startTime)
  nameWithType: MetricNamespacesInner.listWithServiceResponseAsync(String resourceUri, String startTime)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ISO 8601 conform Date start time from which to query for metric namespaces. </p>
    name: startTime
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;MetricNamespaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner?alt=com.microsoft.azure.management.monitor.implementation.MetricNamespaceInner&text=MetricNamespaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists the metric namespaces for the resource.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<MetricNamespaceInner>>> listWithServiceResponseAsync(String resourceUri, String startTime)
  uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner.listWithServiceResponseAsync(String,String)
nameWithType: MetricNamespacesInner
syntax: public class MetricNamespacesInner
type: class
uid: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner
fullName: com.microsoft.azure.management.monitor.implementation.MetricNamespacesInner
name: MetricNamespacesInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in MetricNamespaces. </p>
metadata: {}
