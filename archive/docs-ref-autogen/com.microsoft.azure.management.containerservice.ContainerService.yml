### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.containerservice.ContainerService.agentPools()
  name: agentPools()
  nameWithType: ContainerService.agentPools()
  returns:
    description: <p>the agent pools map </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.containerservice.ContainerServiceAgentPool?alt=com.microsoft.azure.management.containerservice.ContainerServiceAgentPool&text=ContainerServiceAgentPool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ContainerServiceAgentPool> agentPools()
  uid: com.microsoft.azure.management.containerservice.ContainerService.agentPools()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.isDiagnosticsEnabled()
  name: isDiagnosticsEnabled()
  nameWithType: ContainerService.isDiagnosticsEnabled()
  returns:
    description: <p>true if diagnostics are enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isDiagnosticsEnabled()
  uid: com.microsoft.azure.management.containerservice.ContainerService.isDiagnosticsEnabled()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.linuxRootUsername()
  name: linuxRootUsername()
  nameWithType: ContainerService.linuxRootUsername()
  returns:
    description: <p>the Linux root username </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String linuxRootUsername()
  uid: com.microsoft.azure.management.containerservice.ContainerService.linuxRootUsername()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.masterDnsPrefix()
  name: masterDnsPrefix()
  nameWithType: ContainerService.masterDnsPrefix()
  returns:
    description: <p>the master DNS prefix which was specified at creation time </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String masterDnsPrefix()
  uid: com.microsoft.azure.management.containerservice.ContainerService.masterDnsPrefix()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.masterFqdn()
  name: masterFqdn()
  nameWithType: ContainerService.masterFqdn()
  returns:
    description: <p>the master FQDN </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String masterFqdn()
  uid: com.microsoft.azure.management.containerservice.ContainerService.masterFqdn()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.masterNodeCount()
  name: masterNodeCount()
  nameWithType: ContainerService.masterNodeCount()
  returns:
    description: <p>the master node count </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int masterNodeCount()
  uid: com.microsoft.azure.management.containerservice.ContainerService.masterNodeCount()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.masterOSDiskSizeInGB()
  name: masterOSDiskSizeInGB()
  nameWithType: ContainerService.masterOSDiskSizeInGB()
  returns:
    description: <p>OS disk size in GB set for every machine in the master pool </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int masterOSDiskSizeInGB()
  uid: com.microsoft.azure.management.containerservice.ContainerService.masterOSDiskSizeInGB()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.masterStorageProfile()
  name: masterStorageProfile()
  nameWithType: ContainerService.masterStorageProfile()
  returns:
    description: <p>the storage kind set for every machine in the master pool </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes?alt=com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes&text=ContainerServiceStorageProfileTypes" data-throw-if-not-resolved="False"/>
  syntax: public ContainerServiceStorageProfileTypes masterStorageProfile()
  uid: com.microsoft.azure.management.containerservice.ContainerService.masterStorageProfile()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.masterSubnetName()
  name: masterSubnetName()
  nameWithType: ContainerService.masterSubnetName()
  returns:
    description: <p>the name of the subnet used by every machine in the master pool </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String masterSubnetName()
  uid: com.microsoft.azure.management.containerservice.ContainerService.masterSubnetName()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.networkId()
  name: networkId()
  nameWithType: ContainerService.networkId()
  returns:
    description: <p>the ID of the virtual network used by every machine in the master and agent pools </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String networkId()
  uid: com.microsoft.azure.management.containerservice.ContainerService.networkId()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.orchestratorType()
  name: orchestratorType()
  nameWithType: ContainerService.orchestratorType()
  returns:
    description: <p>the type of the orchestrator </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes?alt=com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes&text=ContainerServiceOrchestratorTypes" data-throw-if-not-resolved="False"/>
  syntax: public ContainerServiceOrchestratorTypes orchestratorType()
  uid: com.microsoft.azure.management.containerservice.ContainerService.orchestratorType()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalClientId()
  name: servicePrincipalClientId()
  nameWithType: ContainerService.servicePrincipalClientId()
  returns:
    description: <p>the service principal client ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String servicePrincipalClientId()
  uid: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalClientId()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalSecret()
  name: servicePrincipalSecret()
  nameWithType: ContainerService.servicePrincipalSecret()
  returns:
    description: <p>the service principal secret </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String servicePrincipalSecret()
  uid: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalSecret()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.sshKey()
  name: sshKey()
  nameWithType: ContainerService.sshKey()
  returns:
    description: <p>the Linux SSH key </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String sshKey()
  uid: com.microsoft.azure.management.containerservice.ContainerService.sshKey()
nameWithType: ContainerService
syntax: public interface ContainerService extends GroupableResource<ContainerServiceManager, ContainerServiceInner>,Refreshable<ContainerService>,Updatable<ContainerService.Update>,OrchestratorServiceBase
type: interface
uid: com.microsoft.azure.management.containerservice.ContainerService
fullName: com.microsoft.azure.management.containerservice.ContainerService
name: ContainerService
package: com.microsoft.azure.management.containerservice
summary: <p>A client-side representation for a container service. </p>
metadata: {}
