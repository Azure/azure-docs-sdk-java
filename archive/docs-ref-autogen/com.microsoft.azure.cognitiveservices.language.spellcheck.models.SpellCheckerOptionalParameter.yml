### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.acceptLanguage()
  name: acceptLanguage()
  nameWithType: SpellCheckerOptionalParameter.acceptLanguage()
  returns:
    description: <p>the acceptLanguage value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the acceptLanguage value.</p>

    <p></p>
  syntax: public String acceptLanguage()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.acceptLanguage()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.actionType()
  name: actionType()
  nameWithType: SpellCheckerOptionalParameter.actionType()
  returns:
    description: <p>the actionType value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.ActionType?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.ActionType&text=ActionType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the actionType value.</p>

    <p></p>
  syntax: public ActionType actionType()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.actionType()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.appName()
  name: appName()
  nameWithType: SpellCheckerOptionalParameter.appName()
  returns:
    description: <p>the appName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the appName value.</p>

    <p></p>
  syntax: public String appName()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.appName()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.clientId()
  name: clientId()
  nameWithType: SpellCheckerOptionalParameter.clientId()
  returns:
    description: <p>the clientId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the clientId value.</p>

    <p></p>
  syntax: public String clientId()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.clientId()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.clientIp()
  name: clientIp()
  nameWithType: SpellCheckerOptionalParameter.clientIp()
  returns:
    description: <p>the clientIp value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the clientIp value.</p>

    <p></p>
  syntax: public String clientIp()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.clientIp()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.clientMachineName()
  name: clientMachineName()
  nameWithType: SpellCheckerOptionalParameter.clientMachineName()
  returns:
    description: <p>the clientMachineName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the clientMachineName value.</p>

    <p></p>
  syntax: public String clientMachineName()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.clientMachineName()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.countryCode()
  name: countryCode()
  nameWithType: SpellCheckerOptionalParameter.countryCode()
  returns:
    description: <p>the countryCode value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the countryCode value.</p>

    <p></p>
  syntax: public String countryCode()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.countryCode()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.docId()
  name: docId()
  nameWithType: SpellCheckerOptionalParameter.docId()
  returns:
    description: <p>the docId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the docId value.</p>

    <p></p>
  syntax: public String docId()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.docId()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.location()
  name: location()
  nameWithType: SpellCheckerOptionalParameter.location()
  returns:
    description: <p>the location value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the location value.</p>

    <p></p>
  syntax: public String location()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.location()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.market()
  name: market()
  nameWithType: SpellCheckerOptionalParameter.market()
  returns:
    description: <p>the market value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the market value.</p>

    <p></p>
  syntax: public String market()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.market()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.mode()
  name: mode()
  nameWithType: SpellCheckerOptionalParameter.mode()
  returns:
    description: <p>the mode value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the mode value.</p>

    <p></p>
  syntax: public String mode()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.mode()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.postContextText()
  name: postContextText()
  nameWithType: SpellCheckerOptionalParameter.postContextText()
  returns:
    description: <p>the postContextText value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the postContextText value.</p>

    <p></p>
  syntax: public String postContextText()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.postContextText()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.pragma()
  name: pragma()
  nameWithType: SpellCheckerOptionalParameter.pragma()
  returns:
    description: <p>the pragma value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the pragma value.</p>

    <p></p>
  syntax: public String pragma()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.pragma()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.preContextText()
  name: preContextText()
  nameWithType: SpellCheckerOptionalParameter.preContextText()
  returns:
    description: <p>the preContextText value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the preContextText value.</p>

    <p></p>
  syntax: public String preContextText()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.preContextText()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.sessionId()
  name: sessionId()
  nameWithType: SpellCheckerOptionalParameter.sessionId()
  returns:
    description: <p>the sessionId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the sessionId value.</p>

    <p></p>
  syntax: public String sessionId()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.sessionId()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.setLang()
  name: setLang()
  nameWithType: SpellCheckerOptionalParameter.setLang()
  returns:
    description: <p>the setLang value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the setLang value.</p>

    <p></p>
  syntax: public String setLang()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.setLang()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.userAgent()
  name: userAgent()
  nameWithType: SpellCheckerOptionalParameter.userAgent()
  returns:
    description: <p>the userAgent value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the userAgent value.</p>

    <p></p>
  syntax: public String userAgent()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.userAgent()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.userId()
  name: userId()
  nameWithType: SpellCheckerOptionalParameter.userId()
  returns:
    description: <p>the userId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the userId value.</p>

    <p></p>
  syntax: public String userId()
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.userId()
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withAcceptLanguage(String acceptLanguage)
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: SpellCheckerOptionalParameter.withAcceptLanguage(String acceptLanguage)
  parameters:
  - description: <p>the acceptLanguage value to set </p>
    name: acceptLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the acceptLanguage value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withAcceptLanguage(String acceptLanguage)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withAcceptLanguage(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withActionType(ActionType actionType)
  name: withActionType(ActionType actionType)
  nameWithType: SpellCheckerOptionalParameter.withActionType(ActionType actionType)
  parameters:
  - description: <p>the actionType value to set </p>
    name: actionType
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.ActionType?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.ActionType&text=ActionType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the actionType value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withActionType(ActionType actionType)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withActionType(ActionType)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withAppName(String appName)
  name: withAppName(String appName)
  nameWithType: SpellCheckerOptionalParameter.withAppName(String appName)
  parameters:
  - description: <p>the appName value to set </p>
    name: appName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the appName value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withAppName(String appName)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withAppName(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withClientId(String clientId)
  name: withClientId(String clientId)
  nameWithType: SpellCheckerOptionalParameter.withClientId(String clientId)
  parameters:
  - description: <p>the clientId value to set </p>
    name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the clientId value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withClientId(String clientId)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withClientId(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withClientIp(String clientIp)
  name: withClientIp(String clientIp)
  nameWithType: SpellCheckerOptionalParameter.withClientIp(String clientIp)
  parameters:
  - description: <p>the clientIp value to set </p>
    name: clientIp
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the clientIp value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withClientIp(String clientIp)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withClientIp(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withClientMachineName(String clientMachineName)
  name: withClientMachineName(String clientMachineName)
  nameWithType: SpellCheckerOptionalParameter.withClientMachineName(String clientMachineName)
  parameters:
  - description: <p>the clientMachineName value to set </p>
    name: clientMachineName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the clientMachineName value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withClientMachineName(String clientMachineName)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withClientMachineName(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withCountryCode(String countryCode)
  name: withCountryCode(String countryCode)
  nameWithType: SpellCheckerOptionalParameter.withCountryCode(String countryCode)
  parameters:
  - description: <p>the countryCode value to set </p>
    name: countryCode
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the countryCode value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withCountryCode(String countryCode)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withCountryCode(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withDocId(String docId)
  name: withDocId(String docId)
  nameWithType: SpellCheckerOptionalParameter.withDocId(String docId)
  parameters:
  - description: <p>the docId value to set </p>
    name: docId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the docId value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withDocId(String docId)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withDocId(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withLocation(String location)
  name: withLocation(String location)
  nameWithType: SpellCheckerOptionalParameter.withLocation(String location)
  parameters:
  - description: <p>the location value to set </p>
    name: location
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the location value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withLocation(String location)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withLocation(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withMarket(String market)
  name: withMarket(String market)
  nameWithType: SpellCheckerOptionalParameter.withMarket(String market)
  parameters:
  - description: <p>the market value to set </p>
    name: market
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the market value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withMarket(String market)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withMarket(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withMode(String mode)
  name: withMode(String mode)
  nameWithType: SpellCheckerOptionalParameter.withMode(String mode)
  parameters:
  - description: <p>the mode value to set </p>
    name: mode
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the mode value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withMode(String mode)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withMode(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withPostContextText(String postContextText)
  name: withPostContextText(String postContextText)
  nameWithType: SpellCheckerOptionalParameter.withPostContextText(String postContextText)
  parameters:
  - description: <p>the postContextText value to set </p>
    name: postContextText
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the postContextText value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withPostContextText(String postContextText)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withPostContextText(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withPragma(String pragma)
  name: withPragma(String pragma)
  nameWithType: SpellCheckerOptionalParameter.withPragma(String pragma)
  parameters:
  - description: <p>the pragma value to set </p>
    name: pragma
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the pragma value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withPragma(String pragma)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withPragma(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withPreContextText(String preContextText)
  name: withPreContextText(String preContextText)
  nameWithType: SpellCheckerOptionalParameter.withPreContextText(String preContextText)
  parameters:
  - description: <p>the preContextText value to set </p>
    name: preContextText
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the preContextText value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withPreContextText(String preContextText)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withPreContextText(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withSessionId(String sessionId)
  name: withSessionId(String sessionId)
  nameWithType: SpellCheckerOptionalParameter.withSessionId(String sessionId)
  parameters:
  - description: <p>the sessionId value to set </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the sessionId value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withSessionId(String sessionId)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withSessionId(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withSetLang(String setLang)
  name: withSetLang(String setLang)
  nameWithType: SpellCheckerOptionalParameter.withSetLang(String setLang)
  parameters:
  - description: <p>the setLang value to set </p>
    name: setLang
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the setLang value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withSetLang(String setLang)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withSetLang(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withUserAgent(String userAgent)
  name: withUserAgent(String userAgent)
  nameWithType: SpellCheckerOptionalParameter.withUserAgent(String userAgent)
  parameters:
  - description: <p>the userAgent value to set </p>
    name: userAgent
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userAgent value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withUserAgent(String userAgent)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withUserAgent(String)
- fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withUserId(String userId)
  name: withUserId(String userId)
  nameWithType: SpellCheckerOptionalParameter.withUserId(String userId)
  parameters:
  - description: <p>the userId value to set </p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SpellCheckerOptionalParameter object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter&text=SpellCheckerOptionalParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userId value.</p>

    <p></p>
  syntax: public SpellCheckerOptionalParameter withUserId(String userId)
  uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter.withUserId(String)
nameWithType: SpellCheckerOptionalParameter
syntax: public class SpellCheckerOptionalParameter
type: class
uid: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter
fullName: com.microsoft.azure.cognitiveservices.language.spellcheck.models.SpellCheckerOptionalParameter
name: SpellCheckerOptionalParameter
package: com.microsoft.azure.cognitiveservices.language.spellcheck.models
summary: <p>The SpellCheckerOptionalParameter model. </p>
metadata: {}
