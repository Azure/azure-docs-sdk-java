### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.add()
  name: add()
  nameWithType: Examples.add()
  returns:
    description: <p>the first stage of the add call </p>
    type: <xref href="ExamplesAddDefinitionStages.WithAppId?alt=ExamplesAddDefinitionStages.WithAppId&text=ExamplesAddDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a labeled example utterance in a version of the application.</p>

    <p></p>
  syntax: public ExamplesAddDefinitionStages.WithAppId add()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.add()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.add(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  name: add(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  nameWithType: Examples.add(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A labeled example utterance with the expected intent and entities. </p>
    name: exampleLabelObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject&text=ExampleLabelObject" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: addOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.AddExamplesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.AddExamplesOptionalParameter&text=AddExamplesOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the LabelExampleResponse object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabelExampleResponse?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabelExampleResponse&text=LabelExampleResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a labeled example utterance in a version of the application.</p>

    <p></p>
  syntax: public LabelExampleResponse add(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.add(UUID,String,ExampleLabelObject,AddExamplesOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.addAsync(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  name: addAsync(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  nameWithType: Examples.addAsync(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A labeled example utterance with the expected intent and entities. </p>
    name: exampleLabelObject
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject&text=ExampleLabelObject" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: addOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.AddExamplesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.AddExamplesOptionalParameter&text=AddExamplesOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LabelExampleResponse object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabelExampleResponse?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabelExampleResponse&text=LabelExampleResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Adds a labeled example utterance in a version of the application.</p>

    <p></p>
  syntax: public Observable<LabelExampleResponse> addAsync(UUID appId, String versionId, ExampleLabelObject exampleLabelObject, AddExamplesOptionalParameter addOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.addAsync(UUID,String,ExampleLabelObject,AddExamplesOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.batch()
  name: batch()
  nameWithType: Examples.batch()
  returns:
    description: <p>the first stage of the batch call </p>
    type: <xref href="ExamplesBatchDefinitionStages.WithAppId?alt=ExamplesBatchDefinitionStages.WithAppId&text=ExamplesBatchDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a batch of labeled example utterances to a version of the application.</p>

    <p></p>
  syntax: public ExamplesBatchDefinitionStages.WithAppId batch()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.batch()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.batch(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  name: batch(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  nameWithType: Examples.batch(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Array of example utterances. </p>
    name: exampleLabelObjectArray
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject&text=ExampleLabelObject" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: batchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchOptionalParameter&text=BatchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;BatchLabelExample&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchLabelExample?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchLabelExample&text=BatchLabelExample" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Adds a batch of labeled example utterances to a version of the application.</p>

    <p></p>
  syntax: public List<BatchLabelExample> batch(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.batch(UUID,String,List<ExampleLabelObject>,BatchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.batchAsync(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  name: batchAsync(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  nameWithType: Examples.batchAsync(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Array of example utterances. </p>
    name: exampleLabelObjectArray
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ExampleLabelObject&text=ExampleLabelObject" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: batchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchOptionalParameter&text=BatchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;BatchLabelExample&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchLabelExample?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.BatchLabelExample&text=BatchLabelExample" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Adds a batch of labeled example utterances to a version of the application.</p>

    <p></p>
  syntax: public Observable<List<BatchLabelExample>> batchAsync(UUID appId, String versionId, List<ExampleLabelObject> exampleLabelObjectArray, BatchOptionalParameter batchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.batchAsync(UUID,String,List<ExampleLabelObject>,BatchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.delete(UUID appId, String versionId, int exampleId)
  name: delete(UUID appId, String versionId, int exampleId)
  nameWithType: Examples.delete(UUID appId, String versionId, int exampleId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The example ID. </p>
    name: exampleId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OperationStatus object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the labeled example utterances with the specified ID from a version of the application.</p>

    <p></p>
  syntax: public OperationStatus delete(UUID appId, String versionId, int exampleId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.delete(UUID,String,int)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.deleteAsync(UUID appId, String versionId, int exampleId)
  name: deleteAsync(UUID appId, String versionId, int exampleId)
  nameWithType: Examples.deleteAsync(UUID appId, String versionId, int exampleId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The example ID. </p>
    name: exampleId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the OperationStatus object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Deletes the labeled example utterances with the specified ID from a version of the application.</p>

    <p></p>
  syntax: public Observable<OperationStatus> deleteAsync(UUID appId, String versionId, int exampleId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.deleteAsync(UUID,String,int)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.list()
  name: list()
  nameWithType: Examples.list()
  returns:
    description: <p>the first stage of the list call </p>
    type: <xref href="ExamplesListDefinitionStages.WithAppId?alt=ExamplesListDefinitionStages.WithAppId&text=ExamplesListDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns example utterances to be reviewed from a version of the application.</p>

    <p></p>
  syntax: public ExamplesListDefinitionStages.WithAppId list()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.list()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.list(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  name: list(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  nameWithType: Examples.list(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: listOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListExamplesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListExamplesOptionalParameter&text=ListExamplesOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;LabeledUtterance&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabeledUtterance?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabeledUtterance&text=LabeledUtterance" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns example utterances to be reviewed from a version of the application.</p>

    <p></p>
  syntax: public List<LabeledUtterance> list(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.list(UUID,String,ListExamplesOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.listAsync(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  name: listAsync(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  nameWithType: Examples.listAsync(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: listOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListExamplesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.ListExamplesOptionalParameter&text=ListExamplesOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;LabeledUtterance&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabeledUtterance?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.LabeledUtterance&text=LabeledUtterance" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Returns example utterances to be reviewed from a version of the application.</p>

    <p></p>
  syntax: public Observable<List<LabeledUtterance>> listAsync(UUID appId, String versionId, ListExamplesOptionalParameter listOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples.listAsync(UUID,String,ListExamplesOptionalParameter)
nameWithType: Examples
syntax: public interface Examples
type: interface
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Examples
name: Examples
package: com.microsoft.azure.cognitiveservices.language.luis.authoring
summary: <p>An instance of this class provides access to all the operations defined in Examples. </p>
metadata: {}
