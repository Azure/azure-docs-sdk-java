### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.PoolImpl(String name, BatchAccountImpl batchAccount, PoolInner inner)
  name: PoolImpl(String name, BatchAccountImpl batchAccount, PoolInner inner)
  nameWithType: PoolImpl.PoolImpl(String name, BatchAccountImpl batchAccount, PoolInner inner)
  parameters:
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: batchAccount
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountImpl?alt=com.microsoft.azure.management.batch.implementation.BatchAccountImpl&text=BatchAccountImpl" data-throw-if-not-resolved="False"/>
  - name: inner
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  syntax: protected PoolImpl(String name, BatchAccountImpl batchAccount, PoolInner inner)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.PoolImpl(String,BatchAccountImpl,PoolInner)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.ExternalChildResourceImpl&lt;Pool, PoolInner, BatchAccountImpl, BatchAccount&gt;" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
- com.microsoft.azure.management.resources.fluentcore.model.Settable.parent()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
methods:
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.applicationLicenses()
  name: applicationLicenses()
  nameWithType: PoolImpl.applicationLicenses()
  overridden: com.microsoft.azure.management.batch.Pool.applicationLicenses()
  returns:
    description: <p>the applicationLicenses value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> applicationLicenses()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.applicationLicenses()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.applicationPackages()
  name: applicationPackages()
  nameWithType: PoolImpl.applicationPackages()
  overridden: com.microsoft.azure.management.batch.Pool.applicationPackages()
  returns:
    description: <p>the applicationPackages value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.ApplicationPackageReference?alt=com.microsoft.azure.management.batch.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<ApplicationPackageReference> applicationPackages()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.applicationPackages()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.attach()
  name: attach()
  nameWithType: PoolImpl.attach()
  returns:
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountImpl?alt=com.microsoft.azure.management.batch.implementation.BatchAccountImpl&text=BatchAccountImpl" data-throw-if-not-resolved="False"/>
  syntax: public BatchAccountImpl attach()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.attach()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.certificates()
  name: certificates()
  nameWithType: PoolImpl.certificates()
  overridden: com.microsoft.azure.management.batch.Pool.certificates()
  returns:
    description: <p>the certificates value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.CertificateReference?alt=com.microsoft.azure.management.batch.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<CertificateReference> certificates()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.certificates()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.createResourceAsync()
  name: createResourceAsync()
  nameWithType: PoolImpl.createResourceAsync()
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.Pool?alt=com.microsoft.azure.management.batch.Pool&text=Pool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Observable<Pool> createResourceAsync()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.createResourceAsync()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.deleteResourceAsync()
  name: deleteResourceAsync()
  nameWithType: PoolImpl.deleteResourceAsync()
  returns:
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  syntax: public Observable<Void> deleteResourceAsync()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.deleteResourceAsync()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.deploymentConfiguration()
  name: deploymentConfiguration()
  nameWithType: PoolImpl.deploymentConfiguration()
  overridden: com.microsoft.azure.management.batch.Pool.deploymentConfiguration()
  returns:
    description: <p>the deployment configuration value </p>
    type: <xref href="com.microsoft.azure.management.batch.DeploymentConfiguration?alt=com.microsoft.azure.management.batch.DeploymentConfiguration&text=DeploymentConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public DeploymentConfiguration deploymentConfiguration()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.deploymentConfiguration()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.displayName()
  name: displayName()
  nameWithType: PoolImpl.displayName()
  overridden: com.microsoft.azure.management.batch.Pool.displayName()
  returns:
    description: <p>the display name for the pool </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String displayName()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.displayName()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.getInnerAsync()
  name: getInnerAsync()
  nameWithType: PoolImpl.getInnerAsync()
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>&gt;
  syntax: protected Observable<PoolInner> getInnerAsync()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.getInnerAsync()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.id()
  name: id()
  nameWithType: PoolImpl.id()
  overridden: com.microsoft.azure.management.resources.fluentcore.arm.models.ExternalChildResource.id()
  returns:
    description: <p>the id of the external child resource </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String id()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.id()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.interNodeCommunication()
  name: interNodeCommunication()
  nameWithType: PoolImpl.interNodeCommunication()
  overridden: com.microsoft.azure.management.batch.Pool.interNodeCommunication()
  returns:
    description: <p>the interNodeCommunication value </p>
    type: <xref href="com.microsoft.azure.management.batch.InterNodeCommunicationState?alt=com.microsoft.azure.management.batch.InterNodeCommunicationState&text=InterNodeCommunicationState" data-throw-if-not-resolved="False"/>
  syntax: public InterNodeCommunicationState interNodeCommunication()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.interNodeCommunication()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.maxTasksPerNode()
  name: maxTasksPerNode()
  nameWithType: PoolImpl.maxTasksPerNode()
  overridden: com.microsoft.azure.management.batch.Pool.maxTasksPerNode()
  returns:
    description: <p>the maxTasksPerNode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer maxTasksPerNode()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.maxTasksPerNode()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.metadata()
  name: metadata()
  nameWithType: PoolImpl.metadata()
  overridden: com.microsoft.azure.management.batch.Pool.metadata()
  returns:
    description: <p>the metadata value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MetadataItem?alt=com.microsoft.azure.management.batch.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<MetadataItem> metadata()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.metadata()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.mountConfiguration()
  name: mountConfiguration()
  nameWithType: PoolImpl.mountConfiguration()
  overridden: com.microsoft.azure.management.batch.Pool.mountConfiguration()
  returns:
    description: <p>the mountConfiguration value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MountConfiguration?alt=com.microsoft.azure.management.batch.MountConfiguration&text=MountConfiguration" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<MountConfiguration> mountConfiguration()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.mountConfiguration()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.networkConfiguration()
  name: networkConfiguration()
  nameWithType: PoolImpl.networkConfiguration()
  overridden: com.microsoft.azure.management.batch.Pool.networkConfiguration()
  returns:
    description: <p>the networkConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.batch.NetworkConfiguration?alt=com.microsoft.azure.management.batch.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public NetworkConfiguration networkConfiguration()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.networkConfiguration()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.newPool(String name, BatchAccountImpl parent)
  name: newPool(String name, BatchAccountImpl parent)
  nameWithType: PoolImpl.newPool(String name, BatchAccountImpl parent)
  parameters:
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: parent
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountImpl?alt=com.microsoft.azure.management.batch.implementation.BatchAccountImpl&text=BatchAccountImpl" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  syntax: protected static PoolImpl newPool(String name, BatchAccountImpl parent)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.newPool(String,BatchAccountImpl)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.refreshAsync()
  name: refreshAsync()
  nameWithType: PoolImpl.refreshAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
  returns:
    description: <p>the Observable to refreshed resource </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.Pool?alt=com.microsoft.azure.management.batch.Pool&text=Pool" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Refreshes the resource to sync with Azure.</p>

    <p></p>
  syntax: public Observable<Pool> refreshAsync()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.refreshAsync()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.scaleSettings()
  name: scaleSettings()
  nameWithType: PoolImpl.scaleSettings()
  overridden: com.microsoft.azure.management.batch.Pool.scaleSettings()
  returns:
    description: <p>the scaleSettings value </p>
    type: <xref href="com.microsoft.azure.management.batch.ScaleSettings?alt=com.microsoft.azure.management.batch.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  syntax: public ScaleSettings scaleSettings()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.scaleSettings()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.startTask()
  name: startTask()
  nameWithType: PoolImpl.startTask()
  overridden: com.microsoft.azure.management.batch.Pool.startTask()
  returns:
    description: <p>the startTask value </p>
    type: <xref href="com.microsoft.azure.management.batch.StartTask?alt=com.microsoft.azure.management.batch.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  syntax: public StartTask startTask()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.startTask()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.taskSchedulingPolicy()
  name: taskSchedulingPolicy()
  nameWithType: PoolImpl.taskSchedulingPolicy()
  overridden: com.microsoft.azure.management.batch.Pool.taskSchedulingPolicy()
  returns:
    description: <p>the taskSchedulingPolicy value </p>
    type: <xref href="com.microsoft.azure.management.batch.TaskSchedulingPolicy?alt=com.microsoft.azure.management.batch.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  syntax: public TaskSchedulingPolicy taskSchedulingPolicy()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.taskSchedulingPolicy()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.taskSlotsPerNode()
  name: taskSlotsPerNode()
  nameWithType: PoolImpl.taskSlotsPerNode()
  overridden: com.microsoft.azure.management.batch.Pool.taskSlotsPerNode()
  returns:
    description: <p>the number of task slots that can be used to run concurrent tasks on a single compute node in the pool </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer taskSlotsPerNode()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.taskSlotsPerNode()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.updateResourceAsync()
  name: updateResourceAsync()
  nameWithType: PoolImpl.updateResourceAsync()
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.Pool?alt=com.microsoft.azure.management.batch.Pool&text=Pool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Observable<Pool> updateResourceAsync()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.updateResourceAsync()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.userAccounts()
  name: userAccounts()
  nameWithType: PoolImpl.userAccounts()
  overridden: com.microsoft.azure.management.batch.Pool.userAccounts()
  returns:
    description: <p>the userAccounts value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.UserAccount?alt=com.microsoft.azure.management.batch.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<UserAccount> userAccounts()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.userAccounts()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.vmSize()
  name: vmSize()
  nameWithType: PoolImpl.vmSize()
  overridden: com.microsoft.azure.management.batch.Pool.vmSize()
  returns:
    description: <p>the size of virtual machine in the pool </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String vmSize()
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.vmSize()
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withApplicationLicenses(List<String> applicationLicenses)
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: PoolImpl.withApplicationLicenses(List<String> applicationLicenses)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withApplicationLicenses(List<String>)
  parameters:
  - description: <p>applicationLicenses value </p>
    name: applicationLicenses
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the list of application licenses.</p>

    <p></p>
  syntax: public PoolImpl withApplicationLicenses(List<String> applicationLicenses)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withApplicationLicenses(List<String>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  name: withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  nameWithType: PoolImpl.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withApplicationPackages(List<ApplicationPackageReference>)
  parameters:
  - description: <p>applicationPackages value </p>
    name: applicationPackages
    type: List&lt;<xref href="com.microsoft.azure.management.batch.ApplicationPackageReference?alt=com.microsoft.azure.management.batch.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the application package references affect all new compute nodes joining the pool.</p>

    <p></p>
  syntax: public PoolImpl withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withApplicationPackages(List<ApplicationPackageReference>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withCertificates(List<CertificateReference> certificates)
  name: withCertificates(List<CertificateReference> certificates)
  nameWithType: PoolImpl.withCertificates(List<CertificateReference> certificates)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withCertificates(List<CertificateReference>)
  parameters:
  - description: <p>certificates value </p>
    name: certificates
    type: List&lt;<xref href="com.microsoft.azure.management.batch.CertificateReference?alt=com.microsoft.azure.management.batch.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the certificates for compute nodes.</p>

    <p></p>
  syntax: public PoolImpl withCertificates(List<CertificateReference> certificates)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withCertificates(List<CertificateReference>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  name: withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  nameWithType: PoolImpl.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withDeploymentConfiguration(DeploymentConfiguration)
  parameters:
  - description: <p>deploymentConfiguration value </p>
    name: deploymentConfiguration
    type: <xref href="com.microsoft.azure.management.batch.DeploymentConfiguration?alt=com.microsoft.azure.management.batch.DeploymentConfiguration&text=DeploymentConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the creation of nodes using CloudServiceConfiguration/VirtualMachineConfiguration.</p>

    <p></p>
  syntax: public PoolImpl withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withDeploymentConfiguration(DeploymentConfiguration)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withDisplayName(String displayName)
  name: withDisplayName(String displayName)
  nameWithType: PoolImpl.withDisplayName(String displayName)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withDisplayName(String)
  parameters:
  - description: <p>displayName value </p>
    name: displayName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the display name for the pool.</p>

    <p></p>
  syntax: public PoolImpl withDisplayName(String displayName)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withDisplayName(String)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  name: withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  nameWithType: PoolImpl.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withInterNodeCommunication(InterNodeCommunicationState)
  parameters:
  - description: <p>interNodeCommunication value </p>
    name: interNodeCommunication
    type: <xref href="com.microsoft.azure.management.batch.InterNodeCommunicationState?alt=com.microsoft.azure.management.batch.InterNodeCommunicationState&text=InterNodeCommunicationState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the restrictions on which nodes can be assigned to the pool.</p>

    <p></p>
  syntax: public PoolImpl withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withInterNodeCommunication(InterNodeCommunicationState)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withMaxTasksPerNode(Integer maxTasksPerNode)
  name: withMaxTasksPerNode(Integer maxTasksPerNode)
  nameWithType: PoolImpl.withMaxTasksPerNode(Integer maxTasksPerNode)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMaxTasksPerNode(Integer)
  parameters:
  - description: <p>maxTasksPerNode value </p>
    name: maxTasksPerNode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the maximum value of tasks to run on each node.</p>

    <p></p>
  syntax: public PoolImpl withMaxTasksPerNode(Integer maxTasksPerNode)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withMaxTasksPerNode(Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: PoolImpl.withMetadata(List<MetadataItem> metadata)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMetadata(List<MetadataItem>)
  parameters:
  - description: <p>metadata value </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MetadataItem?alt=com.microsoft.azure.management.batch.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the metadata for the use of user code.</p>

    <p></p>
  syntax: public PoolImpl withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withMetadata(List<MetadataItem>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withMountConfiguration(List<MountConfiguration> mountConfigurations)
  name: withMountConfiguration(List<MountConfiguration> mountConfigurations)
  nameWithType: PoolImpl.withMountConfiguration(List<MountConfiguration> mountConfigurations)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withMountConfiguration(List<MountConfiguration>)
  parameters:
  - description: <p>mount configuration value </p>
    name: mountConfigurations
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MountConfiguration?alt=com.microsoft.azure.management.batch.MountConfiguration&text=MountConfiguration" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the file system configuration for the pool to mount on each node.</p>

    <p></p>
  syntax: public PoolImpl withMountConfiguration(List<MountConfiguration> mountConfigurations)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withMountConfiguration(List<MountConfiguration>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  name: withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  nameWithType: PoolImpl.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withNetworkConfiguration(NetworkConfiguration)
  parameters:
  - description: <p>network configuration value </p>
    name: networkConfiguration
    type: <xref href="com.microsoft.azure.management.batch.NetworkConfiguration?alt=com.microsoft.azure.management.batch.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the network configuration for the pool.</p>

    <p></p>
  syntax: public PoolImpl withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withNetworkConfiguration(NetworkConfiguration)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withScaleSettings(ScaleSettings scaleSettings)
  name: withScaleSettings(ScaleSettings scaleSettings)
  nameWithType: PoolImpl.withScaleSettings(ScaleSettings scaleSettings)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withScaleSettings(ScaleSettings)
  parameters:
  - description: <p>scale settings value </p>
    name: scaleSettings
    type: <xref href="com.microsoft.azure.management.batch.ScaleSettings?alt=com.microsoft.azure.management.batch.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the scale settings for the pool.</p>

    <p></p>
  syntax: public PoolImpl withScaleSettings(ScaleSettings scaleSettings)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withScaleSettings(ScaleSettings)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withStartTask(StartTask startTask)
  name: withStartTask(StartTask startTask)
  nameWithType: PoolImpl.withStartTask(StartTask startTask)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withStartTask(StartTask)
  parameters:
  - description: <p>start task value </p>
    name: startTask
    type: <xref href="com.microsoft.azure.management.batch.StartTask?alt=com.microsoft.azure.management.batch.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the start task for the pool.</p>

    <p></p>
  syntax: public PoolImpl withStartTask(StartTask startTask)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withStartTask(StartTask)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  name: withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  nameWithType: PoolImpl.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withTaskSchedulingPolicy(TaskSchedulingPolicy)
  parameters:
  - description: <p>taskSchedulingPolicy value </p>
    name: taskSchedulingPolicy
    type: <xref href="com.microsoft.azure.management.batch.TaskSchedulingPolicy?alt=com.microsoft.azure.management.batch.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the task scheduling policy.</p>

    <p></p>
  syntax: public PoolImpl withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withTaskSchedulingPolicy(TaskSchedulingPolicy)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withTaskSlotsPerNode(Integer taskSlotsPerNode)
  name: withTaskSlotsPerNode(Integer taskSlotsPerNode)
  nameWithType: PoolImpl.withTaskSlotsPerNode(Integer taskSlotsPerNode)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withTaskSlotsPerNode(Integer)
  parameters:
  - description: <p>the number of task slots </p>
    name: taskSlotsPerNode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.</p>

    <p></p>
  syntax: public PoolImpl withTaskSlotsPerNode(Integer taskSlotsPerNode)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withTaskSlotsPerNode(Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withUserAccounts(List<UserAccount> userAccounts)
  name: withUserAccounts(List<UserAccount> userAccounts)
  nameWithType: PoolImpl.withUserAccounts(List<UserAccount> userAccounts)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withUserAccounts(List<UserAccount>)
  parameters:
  - description: <p>userAccounts value </p>
    name: userAccounts
    type: List&lt;<xref href="com.microsoft.azure.management.batch.UserAccount?alt=com.microsoft.azure.management.batch.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the user accounts value.</p>

    <p></p>
  syntax: public PoolImpl withUserAccounts(List<UserAccount> userAccounts)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withUserAccounts(List<UserAccount>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolImpl.withVmSize(String vmSize)
  name: withVmSize(String vmSize)
  nameWithType: PoolImpl.withVmSize(String vmSize)
  overridden: com.microsoft.azure.management.batch.Pool.UpdateStages.WithAttach.withVmSize(String)
  parameters:
  - description: <p>vmSize value </p>
    name: vmSize
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the available sizes of virtual machine for Cloud Services pools.</p>

    <p></p>
  syntax: public PoolImpl withVmSize(String vmSize)
  uid: com.microsoft.azure.management.batch.implementation.PoolImpl.withVmSize(String)
nameWithType: PoolImpl
syntax: public class PoolImpl implements Pool,Pool.Definition<BatchAccount.DefinitionStages.WithPool>,Pool.UpdateDefinition<BatchAccount.Update>,Pool.Update
type: class
uid: com.microsoft.azure.management.batch.implementation.PoolImpl
fullName: com.microsoft.azure.management.batch.implementation.PoolImpl
name: PoolImpl
package: com.microsoft.azure.management.batch.implementation
summary: <p>Implementation for BatchAccount Pool and its parent interfaces. </p>
metadata: {}
