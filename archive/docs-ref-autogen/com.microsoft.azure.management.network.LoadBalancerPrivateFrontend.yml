### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.network.LoadBalancerFrontend.inboundNatPools()
- com.microsoft.azure.management.network.LoadBalancerFrontend.inboundNatRules()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.network.LoadBalancerFrontend.isPublic()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.network.model.HasLoadBalancingRules.loadBalancingRules()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasSubnet.networkId()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
- com.microsoft.azure.management.network.model.HasPrivateIPAddress.privateIPAddress()
- com.microsoft.azure.management.network.model.HasPrivateIPAddress.privateIPAllocationMethod()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasSubnet.subnetName()
methods:
- fullName: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.availabilityZones()
  name: availabilityZones()
  nameWithType: LoadBalancerPrivateFrontend.availabilityZones()
  returns:
    description: <p>the availability zones assigned to private frontend. </p>
    type: Set&lt;<xref href="com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId?alt=com.microsoft.azure.management.resources.fluentcore.arm.AvailabilityZoneId&text=AvailabilityZoneId" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Set<AvailabilityZoneId> availabilityZones()
  uid: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.availabilityZones()
- fullName: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.getSubnet()
  name: getSubnet()
  nameWithType: LoadBalancerPrivateFrontend.getSubnet()
  returns:
    description: <p>associated subnet </p>
    type: <xref href="com.microsoft.azure.management.network.Subnet?alt=com.microsoft.azure.management.network.Subnet&text=Subnet" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>

    Note this makes a separate call to Azure. </p>
  syntax: public Subnet getSubnet()
  uid: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend.getSubnet()
nameWithType: LoadBalancerPrivateFrontend
syntax: public interface LoadBalancerPrivateFrontend extends LoadBalancerFrontend,HasPrivateIPAddress,HasSubnet
type: interface
uid: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend
fullName: com.microsoft.azure.management.network.LoadBalancerPrivateFrontend
name: LoadBalancerPrivateFrontend
package: com.microsoft.azure.management.network
summary: <p>A client-side representation of a private frontend of an internal load balancer. </p>
metadata: {}
