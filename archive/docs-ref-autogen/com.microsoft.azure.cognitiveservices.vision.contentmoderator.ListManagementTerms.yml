### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.addTerm(String listId, String term, String language)
  name: addTerm(String listId, String term, String language)
  nameWithType: ListManagementTerms.addTerm(String listId, String term, String language)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Term to be deleted. </p>
    name: term
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Object object if successful. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Add a term to the term list with list Id equal to list Id passed.</p>

    <p></p>
  syntax: public Object addTerm(String listId, String term, String language)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.addTerm(String,String,String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.addTermAsync(String listId, String term, String language)
  name: addTermAsync(String listId, String term, String language)
  nameWithType: ListManagementTerms.addTermAsync(String listId, String term, String language)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Term to be deleted. </p>
    name: term
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Add a term to the term list with list Id equal to list Id passed.</p>

    <p></p>
  syntax: public Observable<Object> addTermAsync(String listId, String term, String language)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.addTermAsync(String,String,String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteAllTerms(String listId, String language)
  name: deleteAllTerms(String listId, String language)
  nameWithType: ListManagementTerms.deleteAllTerms(String listId, String language)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the String object if successful. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes all terms from the list with list Id equal to the list Id passed.</p>

    <p></p>
  syntax: public String deleteAllTerms(String listId, String language)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteAllTerms(String,String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteAllTermsAsync(String listId, String language)
  name: deleteAllTermsAsync(String listId, String language)
  nameWithType: ListManagementTerms.deleteAllTermsAsync(String listId, String language)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the String object </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes all terms from the list with list Id equal to the list Id passed.</p>

    <p></p>
  syntax: public Observable<String> deleteAllTermsAsync(String listId, String language)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteAllTermsAsync(String,String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteTerm(String listId, String term, String language)
  name: deleteTerm(String listId, String term, String language)
  nameWithType: ListManagementTerms.deleteTerm(String listId, String term, String language)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Term to be deleted. </p>
    name: term
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the String object if successful. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a term from the list with list Id equal to the list Id passed.</p>

    <p></p>
  syntax: public String deleteTerm(String listId, String term, String language)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteTerm(String,String,String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteTermAsync(String listId, String term, String language)
  name: deleteTermAsync(String listId, String term, String language)
  nameWithType: ListManagementTerms.deleteTermAsync(String listId, String term, String language)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Term to be deleted. </p>
    name: term
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the String object </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a term from the list with list Id equal to the list Id passed.</p>

    <p></p>
  syntax: public Observable<String> deleteTermAsync(String listId, String term, String language)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.deleteTermAsync(String,String,String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.getAllTerms()
  name: getAllTerms()
  nameWithType: ListManagementTerms.getAllTerms()
  returns:
    description: <p>the first stage of the getAllTerms call </p>
    type: <xref href="ListManagementTermsGetAllTermsDefinitionStages.WithListId?alt=ListManagementTermsGetAllTermsDefinitionStages.WithListId&text=ListManagementTermsGetAllTermsDefinitionStages.WithListId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets all terms from the list with list Id equal to the list Id passed.</p>

    <p></p>
  syntax: public ListManagementTermsGetAllTermsDefinitionStages.WithListId getAllTerms()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.getAllTerms()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.getAllTerms(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  name: getAllTerms(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  nameWithType: ListManagementTerms.getAllTerms(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: getAllTermsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.GetAllTermsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.GetAllTermsOptionalParameter&text=GetAllTermsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the Terms object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Terms?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Terms&text=Terms" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets all terms from the list with list Id equal to the list Id passed.</p>

    <p></p>
  syntax: public Terms getAllTerms(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.getAllTerms(String,String,GetAllTermsOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.getAllTermsAsync(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  name: getAllTermsAsync(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  nameWithType: ListManagementTerms.getAllTermsAsync(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  parameters:
  - description: <p>List Id of the image list. </p>
    name: listId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Language of the terms. </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: getAllTermsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.GetAllTermsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.GetAllTermsOptionalParameter&text=GetAllTermsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Terms object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Terms?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Terms&text=Terms" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets all terms from the list with list Id equal to the list Id passed.</p>

    <p></p>
  syntax: public Observable<Terms> getAllTermsAsync(String listId, String language, GetAllTermsOptionalParameter getAllTermsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms.getAllTermsAsync(String,String,GetAllTermsOptionalParameter)
nameWithType: ListManagementTerms
syntax: public interface ListManagementTerms
type: interface
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms
name: ListManagementTerms
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
summary: <p>An instance of this class provides access to all the operations defined in ListManagementTerms. </p>
metadata: {}
