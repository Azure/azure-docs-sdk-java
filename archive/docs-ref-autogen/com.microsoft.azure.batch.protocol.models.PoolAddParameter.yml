### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.applicationLicenses()
  name: applicationLicenses()
  nameWithType: PoolAddParameter.applicationLicenses()
  returns:
    description: <p>the applicationLicenses value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.</p>

    <p></p>
  syntax: public List<String> applicationLicenses()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.applicationLicenses()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.applicationPackageReferences()
  name: applicationPackageReferences()
  nameWithType: PoolAddParameter.applicationPackageReferences()
  returns:
    description: <p>the applicationPackageReferences value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the applicationPackageReferences value.</p>

    <p></p>
  syntax: public List<ApplicationPackageReference> applicationPackageReferences()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.applicationPackageReferences()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.autoScaleEvaluationInterval()
  name: autoScaleEvaluationInterval()
  nameWithType: PoolAddParameter.autoScaleEvaluationInterval()
  returns:
    description: <p>the autoScaleEvaluationInterval value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</p>

    <p></p>
  syntax: public Period autoScaleEvaluationInterval()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.autoScaleEvaluationInterval()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.autoScaleFormula()
  name: autoScaleFormula()
  nameWithType: PoolAddParameter.autoScaleFormula()
  returns:
    description: <p>the autoScaleFormula value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see 'Automatically scale compute nodes in an Azure Batch pool' (<a href="https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/">https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/</a>).</p>

    <p></p>
  syntax: public String autoScaleFormula()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.autoScaleFormula()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.certificateReferences()
  name: certificateReferences()
  nameWithType: PoolAddParameter.certificateReferences()
  returns:
    description: <p>the certificateReferences value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.CertificateReference?alt=com.microsoft.azure.batch.protocol.models.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get for Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.</p>

    <p></p>
  syntax: public List<CertificateReference> certificateReferences()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.certificateReferences()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.cloudServiceConfiguration()
  name: cloudServiceConfiguration()
  nameWithType: PoolAddParameter.cloudServiceConfiguration()
  returns:
    description: <p>the cloudServiceConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration?alt=com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration&text=CloudServiceConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.</p>

    <p></p>
  syntax: public CloudServiceConfiguration cloudServiceConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.cloudServiceConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.displayName()
  name: displayName()
  nameWithType: PoolAddParameter.displayName()
  returns:
    description: <p>the displayName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public String displayName()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.displayName()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.enableAutoScale()
  name: enableAutoScale()
  nameWithType: PoolAddParameter.enableAutoScale()
  returns:
    description: <p>the enableAutoScale value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the pool automatically resizes according to the formula. The default value is false.</p>

    <p></p>
  syntax: public Boolean enableAutoScale()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.enableAutoScale()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.enableInterNodeCommunication()
  name: enableInterNodeCommunication()
  nameWithType: PoolAddParameter.enableInterNodeCommunication()
  returns:
    description: <p>the enableInterNodeCommunication value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes of the pool. This may result in the pool not reaching its desired size. The default value is false.</p>

    <p></p>
  syntax: public Boolean enableInterNodeCommunication()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.enableInterNodeCommunication()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.id()
  name: id()
  nameWithType: PoolAddParameter.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two pool IDs within an account that differ only by case).</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.id()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.maxTasksPerNode()
  name: maxTasksPerNode()
  nameWithType: PoolAddParameter.maxTasksPerNode()
  returns:
    description: <p>the maxTasksPerNode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool (the vmSize setting).</p>

    <p></p>
  syntax: public Integer maxTasksPerNode()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.maxTasksPerNode()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.metadata()
  name: metadata()
  nameWithType: PoolAddParameter.metadata()
  returns:
    description: <p>the metadata value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code.</p>

    <p></p>
  syntax: public List<MetadataItem> metadata()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.metadata()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.networkConfiguration()
  name: networkConfiguration()
  nameWithType: PoolAddParameter.networkConfiguration()
  returns:
    description: <p>the networkConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.NetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the networkConfiguration value.</p>

    <p></p>
  syntax: public NetworkConfiguration networkConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.networkConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.resizeTimeout()
  name: resizeTimeout()
  nameWithType: PoolAddParameter.resizeTimeout()
  returns:
    description: <p>the resizeTimeout value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</p>

    <p></p>
  syntax: public Period resizeTimeout()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.resizeTimeout()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.startTask()
  name: startTask()
  nameWithType: PoolAddParameter.startTask()
  returns:
    description: <p>the startTask value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.StartTask?alt=com.microsoft.azure.batch.protocol.models.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the task runs when the node is added to the pool or when the node is restarted.</p>

    <p></p>
  syntax: public StartTask startTask()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.startTask()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.targetDedicatedNodes()
  name: targetDedicatedNodes()
  nameWithType: PoolAddParameter.targetDedicatedNodes()
  returns:
    description: <p>the targetDedicatedNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

    <p></p>
  syntax: public Integer targetDedicatedNodes()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.targetDedicatedNodes()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.targetLowPriorityNodes()
  name: targetLowPriorityNodes()
  nameWithType: PoolAddParameter.targetLowPriorityNodes()
  returns:
    description: <p>the targetLowPriorityNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

    <p></p>
  syntax: public Integer targetLowPriorityNodes()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.targetLowPriorityNodes()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.taskSchedulingPolicy()
  name: taskSchedulingPolicy()
  nameWithType: PoolAddParameter.taskSchedulingPolicy()
  returns:
    description: <p>the taskSchedulingPolicy value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy?alt=com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the taskSchedulingPolicy value.</p>

    <p></p>
  syntax: public TaskSchedulingPolicy taskSchedulingPolicy()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.taskSchedulingPolicy()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.userAccounts()
  name: userAccounts()
  nameWithType: PoolAddParameter.userAccounts()
  returns:
    description: <p>the userAccounts value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.UserAccount?alt=com.microsoft.azure.batch.protocol.models.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the userAccounts value.</p>

    <p></p>
  syntax: public List<UserAccount> userAccounts()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.userAccounts()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.virtualMachineConfiguration()
  name: virtualMachineConfiguration()
  nameWithType: PoolAddParameter.virtualMachineConfiguration()
  returns:
    description: <p>the virtualMachineConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration virtualMachineConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.virtualMachineConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.vmSize()
  name: vmSize()
  nameWithType: PoolAddParameter.vmSize()
  returns:
    description: <p>the vmSize value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get for information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (<a href="https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/">https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/</a>). Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/</a>) or Sizes for Virtual Machines (Windows) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/</a>). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</p>

    <p></p>
  syntax: public String vmSize()
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.vmSize()
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withApplicationLicenses(List<String> applicationLicenses)
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: PoolAddParameter.withApplicationLicenses(List<String> applicationLicenses)
  parameters:
  - description: <p>the applicationLicenses value to set </p>
    name: applicationLicenses
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.</p>

    <p></p>
  syntax: public PoolAddParameter withApplicationLicenses(List<String> applicationLicenses)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withApplicationLicenses(List<String>)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: PoolAddParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  parameters:
  - description: <p>the applicationPackageReferences value to set </p>
    name: applicationPackageReferences
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the applicationPackageReferences value.</p>

    <p></p>
  syntax: public PoolAddParameter withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withApplicationPackageReferences(List<ApplicationPackageReference>)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  name: withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  nameWithType: PoolAddParameter.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  parameters:
  - description: <p>the autoScaleEvaluationInterval value to set </p>
    name: autoScaleEvaluationInterval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</p>

    <p></p>
  syntax: public PoolAddParameter withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withAutoScaleEvaluationInterval(Period)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withAutoScaleFormula(String autoScaleFormula)
  name: withAutoScaleFormula(String autoScaleFormula)
  nameWithType: PoolAddParameter.withAutoScaleFormula(String autoScaleFormula)
  parameters:
  - description: <p>the autoScaleFormula value to set </p>
    name: autoScaleFormula
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information. For more information about specifying this formula, see 'Automatically scale compute nodes in an Azure Batch pool' (<a href="https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/">https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/</a>).</p>

    <p></p>
  syntax: public PoolAddParameter withAutoScaleFormula(String autoScaleFormula)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withAutoScaleFormula(String)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withCertificateReferences(List<CertificateReference> certificateReferences)
  name: withCertificateReferences(List<CertificateReference> certificateReferences)
  nameWithType: PoolAddParameter.withCertificateReferences(List<CertificateReference> certificateReferences)
  parameters:
  - description: <p>the certificateReferences value to set </p>
    name: certificateReferences
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.CertificateReference?alt=com.microsoft.azure.batch.protocol.models.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.</p>

    <p></p>
  syntax: public PoolAddParameter withCertificateReferences(List<CertificateReference> certificateReferences)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withCertificateReferences(List<CertificateReference>)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  name: withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  nameWithType: PoolAddParameter.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  parameters:
  - description: <p>the cloudServiceConfiguration value to set </p>
    name: cloudServiceConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration?alt=com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration&text=CloudServiceConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.</p>

    <p></p>
  syntax: public PoolAddParameter withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withCloudServiceConfiguration(CloudServiceConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withDisplayName(String displayName)
  name: withDisplayName(String displayName)
  nameWithType: PoolAddParameter.withDisplayName(String displayName)
  parameters:
  - description: <p>the displayName value to set </p>
    name: displayName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public PoolAddParameter withDisplayName(String displayName)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withDisplayName(String)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withEnableAutoScale(Boolean enableAutoScale)
  name: withEnableAutoScale(Boolean enableAutoScale)
  nameWithType: PoolAddParameter.withEnableAutoScale(Boolean enableAutoScale)
  parameters:
  - description: <p>the enableAutoScale value to set </p>
    name: enableAutoScale
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the pool automatically resizes according to the formula. The default value is false.</p>

    <p></p>
  syntax: public PoolAddParameter withEnableAutoScale(Boolean enableAutoScale)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withEnableAutoScale(Boolean)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  name: withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  nameWithType: PoolAddParameter.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  parameters:
  - description: <p>the enableInterNodeCommunication value to set </p>
    name: enableInterNodeCommunication
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set enabling inter-node communication limits the maximum size of the pool due to deployment restrictions on the nodes of the pool. This may result in the pool not reaching its desired size. The default value is false.</p>

    <p></p>
  syntax: public PoolAddParameter withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withEnableInterNodeCommunication(Boolean)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withId(String id)
  name: withId(String id)
  nameWithType: PoolAddParameter.withId(String id)
  parameters:
  - description: <p>the id value to set </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two pool IDs within an account that differ only by case).</p>

    <p></p>
  syntax: public PoolAddParameter withId(String id)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withId(String)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withMaxTasksPerNode(Integer maxTasksPerNode)
  name: withMaxTasksPerNode(Integer maxTasksPerNode)
  nameWithType: PoolAddParameter.withMaxTasksPerNode(Integer maxTasksPerNode)
  parameters:
  - description: <p>the maxTasksPerNode value to set </p>
    name: maxTasksPerNode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default value is 1. The maximum value of this setting depends on the size of the compute nodes in the pool (the vmSize setting).</p>

    <p></p>
  syntax: public PoolAddParameter withMaxTasksPerNode(Integer maxTasksPerNode)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withMaxTasksPerNode(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: PoolAddParameter.withMetadata(List<MetadataItem> metadata)
  parameters:
  - description: <p>the metadata value to set </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code.</p>

    <p></p>
  syntax: public PoolAddParameter withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withMetadata(List<MetadataItem>)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  name: withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  nameWithType: PoolAddParameter.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  parameters:
  - description: <p>the networkConfiguration value to set </p>
    name: networkConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.NetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the networkConfiguration value.</p>

    <p></p>
  syntax: public PoolAddParameter withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withNetworkConfiguration(NetworkConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withResizeTimeout(Period resizeTimeout)
  name: withResizeTimeout(Period resizeTimeout)
  nameWithType: PoolAddParameter.withResizeTimeout(Period resizeTimeout)
  parameters:
  - description: <p>the resizeTimeout value to set </p>
    name: resizeTimeout
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</p>

    <p></p>
  syntax: public PoolAddParameter withResizeTimeout(Period resizeTimeout)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withResizeTimeout(Period)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withStartTask(StartTask startTask)
  name: withStartTask(StartTask startTask)
  nameWithType: PoolAddParameter.withStartTask(StartTask startTask)
  parameters:
  - description: <p>the startTask value to set </p>
    name: startTask
    type: <xref href="com.microsoft.azure.batch.protocol.models.StartTask?alt=com.microsoft.azure.batch.protocol.models.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the task runs when the node is added to the pool or when the node is restarted.</p>

    <p></p>
  syntax: public PoolAddParameter withStartTask(StartTask startTask)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withStartTask(StartTask)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  name: withTargetDedicatedNodes(Integer targetDedicatedNodes)
  nameWithType: PoolAddParameter.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  parameters:
  - description: <p>the targetDedicatedNodes value to set </p>
    name: targetDedicatedNodes
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

    <p></p>
  syntax: public PoolAddParameter withTargetDedicatedNodes(Integer targetDedicatedNodes)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withTargetDedicatedNodes(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  name: withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  nameWithType: PoolAddParameter.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  parameters:
  - description: <p>the targetLowPriorityNodes value to set </p>
    name: targetLowPriorityNodes
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

    <p></p>
  syntax: public PoolAddParameter withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withTargetLowPriorityNodes(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  name: withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  nameWithType: PoolAddParameter.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  parameters:
  - description: <p>the taskSchedulingPolicy value to set </p>
    name: taskSchedulingPolicy
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy?alt=com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the taskSchedulingPolicy value.</p>

    <p></p>
  syntax: public PoolAddParameter withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withTaskSchedulingPolicy(TaskSchedulingPolicy)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withUserAccounts(List<UserAccount> userAccounts)
  name: withUserAccounts(List<UserAccount> userAccounts)
  nameWithType: PoolAddParameter.withUserAccounts(List<UserAccount> userAccounts)
  parameters:
  - description: <p>the userAccounts value to set </p>
    name: userAccounts
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.UserAccount?alt=com.microsoft.azure.batch.protocol.models.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userAccounts value.</p>

    <p></p>
  syntax: public PoolAddParameter withUserAccounts(List<UserAccount> userAccounts)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withUserAccounts(List<UserAccount>)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  name: withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  nameWithType: PoolAddParameter.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  parameters:
  - description: <p>the virtualMachineConfiguration value to set </p>
    name: virtualMachineConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.</p>

    <p></p>
  syntax: public PoolAddParameter withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withVirtualMachineConfiguration(VirtualMachineConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withVmSize(String vmSize)
  name: withVmSize(String vmSize)
  nameWithType: PoolAddParameter.withVmSize(String vmSize)
  parameters:
  - description: <p>the vmSize value to set </p>
    name: vmSize
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolAddParameter object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (<a href="https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/">https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/</a>). Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/</a>) or Sizes for Virtual Machines (Windows) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/</a>). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</p>

    <p></p>
  syntax: public PoolAddParameter withVmSize(String vmSize)
  uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter.withVmSize(String)
nameWithType: PoolAddParameter
syntax: public class PoolAddParameter
type: class
uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter
fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter
name: PoolAddParameter
package: com.microsoft.azure.batch.protocol.models
summary: <p>A pool in the Azure Batch service to add. </p>
metadata: {}
