### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerinstance.Container.command()
  name: command()
  nameWithType: Container.command()
  returns:
    description: <p>the command value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the command value.</p>

    <p></p>
  syntax: public List<String> command()
  uid: com.microsoft.azure.management.containerinstance.Container.command()
- fullName: com.microsoft.azure.management.containerinstance.Container.environmentVariables()
  name: environmentVariables()
  nameWithType: Container.environmentVariables()
  returns:
    description: <p>the environmentVariables value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerinstance.EnvironmentVariable?alt=com.microsoft.azure.management.containerinstance.EnvironmentVariable&text=EnvironmentVariable" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the environmentVariables value.</p>

    <p></p>
  syntax: public List<EnvironmentVariable> environmentVariables()
  uid: com.microsoft.azure.management.containerinstance.Container.environmentVariables()
- fullName: com.microsoft.azure.management.containerinstance.Container.image()
  name: image()
  nameWithType: Container.image()
  returns:
    description: <p>the image value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the image value.</p>

    <p></p>
  syntax: public String image()
  uid: com.microsoft.azure.management.containerinstance.Container.image()
- fullName: com.microsoft.azure.management.containerinstance.Container.instanceView()
  name: instanceView()
  nameWithType: Container.instanceView()
  returns:
    description: <p>the instanceView value </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.ContainerPropertiesInstanceView?alt=com.microsoft.azure.management.containerinstance.ContainerPropertiesInstanceView&text=ContainerPropertiesInstanceView" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the instanceView value.</p>

    <p></p>
  syntax: public ContainerPropertiesInstanceView instanceView()
  uid: com.microsoft.azure.management.containerinstance.Container.instanceView()
- fullName: com.microsoft.azure.management.containerinstance.Container.name()
  name: name()
  nameWithType: Container.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.containerinstance.Container.name()
- fullName: com.microsoft.azure.management.containerinstance.Container.ports()
  name: ports()
  nameWithType: Container.ports()
  returns:
    description: <p>the ports value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerinstance.ContainerPort?alt=com.microsoft.azure.management.containerinstance.ContainerPort&text=ContainerPort" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the ports value.</p>

    <p></p>
  syntax: public List<ContainerPort> ports()
  uid: com.microsoft.azure.management.containerinstance.Container.ports()
- fullName: com.microsoft.azure.management.containerinstance.Container.resources()
  name: resources()
  nameWithType: Container.resources()
  returns:
    description: <p>the resources value </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.ResourceRequirements?alt=com.microsoft.azure.management.containerinstance.ResourceRequirements&text=ResourceRequirements" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the resources value.</p>

    <p></p>
  syntax: public ResourceRequirements resources()
  uid: com.microsoft.azure.management.containerinstance.Container.resources()
- fullName: com.microsoft.azure.management.containerinstance.Container.volumeMounts()
  name: volumeMounts()
  nameWithType: Container.volumeMounts()
  returns:
    description: <p>the volumeMounts value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerinstance.VolumeMount?alt=com.microsoft.azure.management.containerinstance.VolumeMount&text=VolumeMount" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the volumeMounts value.</p>

    <p></p>
  syntax: public List<VolumeMount> volumeMounts()
  uid: com.microsoft.azure.management.containerinstance.Container.volumeMounts()
- fullName: com.microsoft.azure.management.containerinstance.Container.withCommand(List<String> command)
  name: withCommand(List<String> command)
  nameWithType: Container.withCommand(List<String> command)
  parameters:
  - description: <p>the command value to set </p>
    name: command
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Container object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the command value.</p>

    <p></p>
  syntax: public Container withCommand(List<String> command)
  uid: com.microsoft.azure.management.containerinstance.Container.withCommand(List<String>)
- fullName: com.microsoft.azure.management.containerinstance.Container.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  name: withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  nameWithType: Container.withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  parameters:
  - description: <p>the environmentVariables value to set </p>
    name: environmentVariables
    type: List&lt;<xref href="com.microsoft.azure.management.containerinstance.EnvironmentVariable?alt=com.microsoft.azure.management.containerinstance.EnvironmentVariable&text=EnvironmentVariable" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Container object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the environmentVariables value.</p>

    <p></p>
  syntax: public Container withEnvironmentVariables(List<EnvironmentVariable> environmentVariables)
  uid: com.microsoft.azure.management.containerinstance.Container.withEnvironmentVariables(List<EnvironmentVariable>)
- fullName: com.microsoft.azure.management.containerinstance.Container.withImage(String image)
  name: withImage(String image)
  nameWithType: Container.withImage(String image)
  parameters:
  - description: <p>the image value to set </p>
    name: image
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Container object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the image value.</p>

    <p></p>
  syntax: public Container withImage(String image)
  uid: com.microsoft.azure.management.containerinstance.Container.withImage(String)
- fullName: com.microsoft.azure.management.containerinstance.Container.withName(String name)
  name: withName(String name)
  nameWithType: Container.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Container object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public Container withName(String name)
  uid: com.microsoft.azure.management.containerinstance.Container.withName(String)
- fullName: com.microsoft.azure.management.containerinstance.Container.withPorts(List<ContainerPort> ports)
  name: withPorts(List<ContainerPort> ports)
  nameWithType: Container.withPorts(List<ContainerPort> ports)
  parameters:
  - description: <p>the ports value to set </p>
    name: ports
    type: List&lt;<xref href="com.microsoft.azure.management.containerinstance.ContainerPort?alt=com.microsoft.azure.management.containerinstance.ContainerPort&text=ContainerPort" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Container object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ports value.</p>

    <p></p>
  syntax: public Container withPorts(List<ContainerPort> ports)
  uid: com.microsoft.azure.management.containerinstance.Container.withPorts(List<ContainerPort>)
- fullName: com.microsoft.azure.management.containerinstance.Container.withResources(ResourceRequirements resources)
  name: withResources(ResourceRequirements resources)
  nameWithType: Container.withResources(ResourceRequirements resources)
  parameters:
  - description: <p>the resources value to set </p>
    name: resources
    type: <xref href="com.microsoft.azure.management.containerinstance.ResourceRequirements?alt=com.microsoft.azure.management.containerinstance.ResourceRequirements&text=ResourceRequirements" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Container object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the resources value.</p>

    <p></p>
  syntax: public Container withResources(ResourceRequirements resources)
  uid: com.microsoft.azure.management.containerinstance.Container.withResources(ResourceRequirements)
- fullName: com.microsoft.azure.management.containerinstance.Container.withVolumeMounts(List<VolumeMount> volumeMounts)
  name: withVolumeMounts(List<VolumeMount> volumeMounts)
  nameWithType: Container.withVolumeMounts(List<VolumeMount> volumeMounts)
  parameters:
  - description: <p>the volumeMounts value to set </p>
    name: volumeMounts
    type: List&lt;<xref href="com.microsoft.azure.management.containerinstance.VolumeMount?alt=com.microsoft.azure.management.containerinstance.VolumeMount&text=VolumeMount" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Container object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.Container?alt=com.microsoft.azure.management.containerinstance.Container&text=Container" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the volumeMounts value.</p>

    <p></p>
  syntax: public Container withVolumeMounts(List<VolumeMount> volumeMounts)
  uid: com.microsoft.azure.management.containerinstance.Container.withVolumeMounts(List<VolumeMount>)
nameWithType: Container
syntax: public class Container
type: class
uid: com.microsoft.azure.management.containerinstance.Container
fullName: com.microsoft.azure.management.containerinstance.Container
name: Container
package: com.microsoft.azure.management.containerinstance
summary: <p>A container instance. </p>
metadata: {}
