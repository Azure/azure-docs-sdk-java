### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getActivityId()
  name: getActivityId()
  nameWithType: FeedResponse<T>.getActivityId()
  returns:
    description: <p>the activity id. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the activity ID for the request.</p>

    <p></p>
  syntax: public String getActivityId()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getActivityId()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getCollectionQuota()
  name: getCollectionQuota()
  nameWithType: FeedResponse<T>.getCollectionQuota()
  returns:
    description: <p>The maximum quota for the account. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum quota for collection resources within an account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getCollectionQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getCollectionQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getCollectionSizeQuota()
  name: getCollectionSizeQuota()
  nameWithType: FeedResponse<T>.getCollectionSizeQuota()
  returns:
    description: <p>The maximum quota in kilobytes. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum size of a collection in kilobytes from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getCollectionSizeQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getCollectionSizeQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getCollectionSizeUsage()
  name: getCollectionSizeUsage()
  nameWithType: FeedResponse<T>.getCollectionSizeUsage()
  returns:
    description: <p>The current size of a collection in kilobytes. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current size of a collection in kilobytes from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getCollectionSizeUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getCollectionSizeUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getCollectionUsage()
  name: getCollectionUsage()
  nameWithType: FeedResponse<T>.getCollectionUsage()
  returns:
    description: <p>The current number of collections. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current number of collection resources within the account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getCollectionUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getCollectionUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getCurrentResourceQuotaUsage()
  name: getCurrentResourceQuotaUsage()
  nameWithType: FeedResponse<T>.getCurrentResourceQuotaUsage()
  returns:
    description: <p>the current size for this entity. Measured in kilobytes for document resources and in counts for other resources. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current size of this entity from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public String getCurrentResourceQuotaUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getCurrentResourceQuotaUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getDatabaseQuota()
  name: getDatabaseQuota()
  nameWithType: FeedResponse<T>.getDatabaseQuota()
  returns:
    description: <p>The maximum quota for the account. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum quota for database resources within the account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getDatabaseQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getDatabaseQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getDatabaseUsage()
  name: getDatabaseUsage()
  nameWithType: FeedResponse<T>.getDatabaseUsage()
  returns:
    description: <p>The current number of databases. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current number of database resources within the account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getDatabaseUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getDatabaseUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getMaxResourceQuota()
  name: getMaxResourceQuota()
  nameWithType: FeedResponse<T>.getMaxResourceQuota()
  returns:
    description: <p>the maximum size limit for this entity. Measured in kilobytes for document resources and in counts for other resources. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum size limit for this entity from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public String getMaxResourceQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getMaxResourceQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getPermissionQuota()
  name: getPermissionQuota()
  nameWithType: FeedResponse<T>.getPermissionQuota()
  returns:
    description: <p>The maximum quota for the account. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum quota for permission resources within an account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getPermissionQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getPermissionQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getPermissionUsage()
  name: getPermissionUsage()
  nameWithType: FeedResponse<T>.getPermissionUsage()
  returns:
    description: <p>The current number of permissions. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current number of permission resources within the account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getPermissionUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getPermissionUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getQueryMetrics()
  name: getQueryMetrics()
  nameWithType: FeedResponse<T>.getQueryMetrics()
  returns:
    description: <p>the QueryMetrics for each partition. </p>
    type: ConcurrentMap&lt;String, <xref href="com.microsoft.azure.cosmosdb.QueryMetrics?alt=com.microsoft.azure.cosmosdb.QueryMetrics&text=QueryMetrics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the QueryMetrics for each partition.</p>

    <p></p>
  syntax: public ConcurrentMap<String, QueryMetrics> getQueryMetrics()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getQueryMetrics()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getRequestCharge()
  name: getRequestCharge()
  nameWithType: FeedResponse<T>.getRequestCharge()
  returns:
    description: <p>the request charge. </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the number of index paths (terms) generated by the operation.</p>

    <p></p>
  syntax: public double getRequestCharge()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getRequestCharge()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getResponseContinuation()
  name: getResponseContinuation()
  nameWithType: FeedResponse<T>.getResponseContinuation()
  returns:
    description: <p>the response continuation. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the continuation token to be used for continuing the enumeration.</p>

    <p></p>
  syntax: public String getResponseContinuation()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getResponseContinuation()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getResponseHeaders()
  name: getResponseHeaders()
  nameWithType: FeedResponse<T>.getResponseHeaders()
  returns:
    description: <p>the response headers. </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the response headers.</p>

    <p></p>
  syntax: public Map<String, String> getResponseHeaders()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getResponseHeaders()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getResults()
  name: getResults()
  nameWithType: FeedResponse<T>.getResults()
  returns:
    description: <p>the list of results. </p>
    type: <xref href="List%3CT%3E?alt=List%3CT%3E&text=List%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Results.</p>

    <p></p>
  syntax: public List<T> getResults()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getResults()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getSessionToken()
  name: getSessionToken()
  nameWithType: FeedResponse<T>.getSessionToken()
  returns:
    description: <p>the session token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the session token for use in session consistency.</p>

    <p></p>
  syntax: public String getSessionToken()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getSessionToken()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getStoredProceduresQuota()
  name: getStoredProceduresQuota()
  nameWithType: FeedResponse<T>.getStoredProceduresQuota()
  returns:
    description: <p>The maximum stored procedure quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum quota of stored procedures for a collection from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getStoredProceduresQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getStoredProceduresQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getStoredProceduresUsage()
  name: getStoredProceduresUsage()
  nameWithType: FeedResponse<T>.getStoredProceduresUsage()
  returns:
    description: <p>The current number of stored procedures. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current number of stored procedures for a collection from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getStoredProceduresUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getStoredProceduresUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getTriggersQuota()
  name: getTriggersQuota()
  nameWithType: FeedResponse<T>.getTriggersQuota()
  returns:
    description: <p>The maximum triggers quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum quota of triggers for a collection from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getTriggersQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getTriggersQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getTriggersUsage()
  name: getTriggersUsage()
  nameWithType: FeedResponse<T>.getTriggersUsage()
  returns:
    description: <p>The current number of triggers. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current number of triggers for a collection from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getTriggersUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getTriggersUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getUserDefinedFunctionsQuota()
  name: getUserDefinedFunctionsQuota()
  nameWithType: FeedResponse<T>.getUserDefinedFunctionsQuota()
  returns:
    description: <p>The maximum user defined functions quota. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum quota of user defined functions for a collection from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getUserDefinedFunctionsQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getUserDefinedFunctionsQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getUserDefinedFunctionsUsage()
  name: getUserDefinedFunctionsUsage()
  nameWithType: FeedResponse<T>.getUserDefinedFunctionsUsage()
  returns:
    description: <p>the current number of user defined functions. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current number of user defined functions for a collection from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getUserDefinedFunctionsUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getUserDefinedFunctionsUsage()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getUserQuota()
  name: getUserQuota()
  nameWithType: FeedResponse<T>.getUserQuota()
  returns:
    description: <p>The maximum quota for the account. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum quota for user resources within an account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getUserQuota()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getUserQuota()
- fullName: com.microsoft.azure.cosmosdb.FeedResponse<T extends Resource>.getUserUsage()
  name: getUserUsage()
  nameWithType: FeedResponse<T>.getUserUsage()
  returns:
    description: <p>The current number of users. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current number of user resources within the account from the Azure Cosmos DB service.</p>

    <p></p>
  syntax: public long getUserUsage()
  uid: com.microsoft.azure.cosmosdb.FeedResponse.getUserUsage()
nameWithType: FeedResponse<T>
syntax: public class FeedResponse<T extends Resource>
type: class
typeParameters:
- name: T
uid: com.microsoft.azure.cosmosdb.FeedResponse
fullName: com.microsoft.azure.cosmosdb.FeedResponse<T>
name: FeedResponse<T>
package: com.microsoft.azure.cosmosdb
metadata: {}
