### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration()
  name: containerConfiguration()
  nameWithType: VirtualMachineConfiguration.containerConfiguration()
  returns:
    description: <p>the containerConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ContainerConfiguration?alt=com.microsoft.azure.batch.protocol.models.ContainerConfiguration&text=ContainerConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it.</p>

    <p></p>
  syntax: public ContainerConfiguration containerConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.containerConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks()
  name: dataDisks()
  nameWithType: VirtualMachineConfiguration.dataDisks()
  returns:
    description: <p>the dataDisks value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.DataDisk?alt=com.microsoft.azure.batch.protocol.models.DataDisk&text=DataDisk" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get this property must be specified if the compute nodes in the pool need to have empty data disks attached to them. This cannot be updated. Each node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the node is removed from the pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux">https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux</a> and <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine">https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine</a>.</p>

    <p></p>
  syntax: public List<DataDisk> dataDisks()
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.dataDisks()
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference()
  name: imageReference()
  nameWithType: VirtualMachineConfiguration.imageReference()
  returns:
    description: <p>the imageReference value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ImageReference?alt=com.microsoft.azure.batch.protocol.models.ImageReference&text=ImageReference" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the imageReference value.</p>

    <p></p>
  syntax: public ImageReference imageReference()
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.imageReference()
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType()
  name: licenseType()
  nameWithType: VirtualMachineConfiguration.licenseType()
  returns:
    description: <p>the licenseType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows_Server - The on-premises license is for Windows Server. Windows_Client - The on-premises license is for Windows Client.</p>

    <p></p>
  syntax: public String licenseType()
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.licenseType()
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId()
  name: nodeAgentSKUId()
  nameWithType: VirtualMachineConfiguration.nodeAgentSKUId()
  returns:
    description: <p>the nodeAgentSKUId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation.</p>

    <p></p>
  syntax: public String nodeAgentSKUId()
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.nodeAgentSKUId()
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration()
  name: windowsConfiguration()
  nameWithType: VirtualMachineConfiguration.windowsConfiguration()
  returns:
    description: <p>the windowsConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.WindowsConfiguration?alt=com.microsoft.azure.batch.protocol.models.WindowsConfiguration&text=WindowsConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property must not be specified if the imageReference property specifies a Linux OS image.</p>

    <p></p>
  syntax: public WindowsConfiguration windowsConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.windowsConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)
  name: withContainerConfiguration(ContainerConfiguration containerConfiguration)
  nameWithType: VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)
  parameters:
  - description: <p>the containerConfiguration value to set </p>
    name: containerConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.ContainerConfiguration?alt=com.microsoft.azure.batch.protocol.models.ContainerConfiguration&text=ContainerConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VirtualMachineConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration withContainerConfiguration(ContainerConfiguration containerConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)
  name: withDataDisks(List<DataDisk> dataDisks)
  nameWithType: VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)
  parameters:
  - description: <p>the dataDisks value to set </p>
    name: dataDisks
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.DataDisk?alt=com.microsoft.azure.batch.protocol.models.DataDisk&text=DataDisk" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the VirtualMachineConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property must be specified if the compute nodes in the pool need to have empty data disks attached to them. This cannot be updated. Each node gets its own disk (the disk is not a file share). Existing disks cannot be attached, each attached disk is empty. When the node is removed from the pool, the disk and all data associated with it is also deleted. The disk is not formatted after being attached, it must be formatted before use - for more information see <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux">https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux</a> and <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine">https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine</a>.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration withDataDisks(List<DataDisk> dataDisks)
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withDataDisks(List<DataDisk>)
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference(ImageReference imageReference)
  name: withImageReference(ImageReference imageReference)
  nameWithType: VirtualMachineConfiguration.withImageReference(ImageReference imageReference)
  parameters:
  - description: <p>the imageReference value to set </p>
    name: imageReference
    type: <xref href="com.microsoft.azure.batch.protocol.models.ImageReference?alt=com.microsoft.azure.batch.protocol.models.ImageReference&text=ImageReference" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VirtualMachineConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the imageReference value.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration withImageReference(ImageReference imageReference)
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withImageReference(ImageReference)
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType(String licenseType)
  name: withLicenseType(String licenseType)
  nameWithType: VirtualMachineConfiguration.withLicenseType(String licenseType)
  parameters:
  - description: <p>the licenseType value to set </p>
    name: licenseType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VirtualMachineConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows_Server - The on-premises license is for Windows Server. Windows_Client - The on-premises license is for Windows Client.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration withLicenseType(String licenseType)
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withLicenseType(String)
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId(String nodeAgentSKUId)
  name: withNodeAgentSKUId(String nodeAgentSKUId)
  nameWithType: VirtualMachineConfiguration.withNodeAgentSKUId(String nodeAgentSKUId)
  parameters:
  - description: <p>the nodeAgentSKUId value to set </p>
    name: nodeAgentSKUId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VirtualMachineConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration withNodeAgentSKUId(String nodeAgentSKUId)
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withNodeAgentSKUId(String)
- fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  name: withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  nameWithType: VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  parameters:
  - description: <p>the windowsConfiguration value to set </p>
    name: windowsConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.WindowsConfiguration?alt=com.microsoft.azure.batch.protocol.models.WindowsConfiguration&text=WindowsConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VirtualMachineConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property must not be specified if the imageReference property specifies a Linux OS image.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration withWindowsConfiguration(WindowsConfiguration windowsConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration)
nameWithType: VirtualMachineConfiguration
syntax: public class VirtualMachineConfiguration
type: class
uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
name: VirtualMachineConfiguration
package: com.microsoft.azure.batch.protocol.models
summary: <p>The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure. </p>
metadata: {}
