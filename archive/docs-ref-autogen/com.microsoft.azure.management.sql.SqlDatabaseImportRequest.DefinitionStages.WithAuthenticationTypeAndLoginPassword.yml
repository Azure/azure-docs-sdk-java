### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  name: withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  parameters:
  - description: <p>the Active Directory administrator login </p>
    name: administratorLogin
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Active Directory administrator password </p>
    name: administratorPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="SqlDatabaseImportRequest.DefinitionStages.WithExecute?alt=SqlDatabaseImportRequest.DefinitionStages.WithExecute&text=SqlDatabaseImportRequest.DefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  syntax: public SqlDatabaseImportRequest.DefinitionStages.WithExecute withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withActiveDirectoryLoginAndPassword(String,String)
- fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  name: withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  parameters:
  - description: <p>the SQL administrator login </p>
    name: administratorLogin
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL administrator password </p>
    name: administratorPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="SqlDatabaseImportRequest.DefinitionStages.WithExecute?alt=SqlDatabaseImportRequest.DefinitionStages.WithExecute&text=SqlDatabaseImportRequest.DefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  syntax: public SqlDatabaseImportRequest.DefinitionStages.WithExecute withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword.withSqlAdministratorLoginAndPassword(String,String)
nameWithType: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
syntax: public interface WithAuthenticationTypeAndLoginPassword
type: interface
uid: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
fullName: com.microsoft.azure.management.sql.SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
name: SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword
package: com.microsoft.azure.management.sql
summary: <p>Sets the authentication type and SQL or Active Directory administrator login and password. </p>
metadata: {}
