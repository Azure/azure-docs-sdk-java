### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.digest()
  name: digest()
  nameWithType: ImageDescriptor.digest()
  returns:
    description: <p>the digest value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the sha256-based digest of the image manifest.</p>

    <p></p>
  syntax: public String digest()
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.digest()
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.registry()
  name: registry()
  nameWithType: ImageDescriptor.registry()
  returns:
    description: <p>the registry value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the registry login server.</p>

    <p></p>
  syntax: public String registry()
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.registry()
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.repository()
  name: repository()
  nameWithType: ImageDescriptor.repository()
  returns:
    description: <p>the repository value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the repository name.</p>

    <p></p>
  syntax: public String repository()
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.repository()
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.tag()
  name: tag()
  nameWithType: ImageDescriptor.tag()
  returns:
    description: <p>the tag value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tag name.</p>

    <p></p>
  syntax: public String tag()
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.tag()
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.withDigest(String digest)
  name: withDigest(String digest)
  nameWithType: ImageDescriptor.withDigest(String digest)
  parameters:
  - description: <p>the digest value to set </p>
    name: digest
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDescriptor object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImageDescriptor?alt=com.microsoft.azure.management.containerregistry.ImageDescriptor&text=ImageDescriptor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the sha256-based digest of the image manifest.</p>

    <p></p>
  syntax: public ImageDescriptor withDigest(String digest)
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.withDigest(String)
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.withRegistry(String registry)
  name: withRegistry(String registry)
  nameWithType: ImageDescriptor.withRegistry(String registry)
  parameters:
  - description: <p>the registry value to set </p>
    name: registry
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDescriptor object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImageDescriptor?alt=com.microsoft.azure.management.containerregistry.ImageDescriptor&text=ImageDescriptor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the registry login server.</p>

    <p></p>
  syntax: public ImageDescriptor withRegistry(String registry)
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.withRegistry(String)
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.withRepository(String repository)
  name: withRepository(String repository)
  nameWithType: ImageDescriptor.withRepository(String repository)
  parameters:
  - description: <p>the repository value to set </p>
    name: repository
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDescriptor object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImageDescriptor?alt=com.microsoft.azure.management.containerregistry.ImageDescriptor&text=ImageDescriptor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the repository name.</p>

    <p></p>
  syntax: public ImageDescriptor withRepository(String repository)
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.withRepository(String)
- fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor.withTag(String tag)
  name: withTag(String tag)
  nameWithType: ImageDescriptor.withTag(String tag)
  parameters:
  - description: <p>the tag value to set </p>
    name: tag
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ImageDescriptor object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImageDescriptor?alt=com.microsoft.azure.management.containerregistry.ImageDescriptor&text=ImageDescriptor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tag name.</p>

    <p></p>
  syntax: public ImageDescriptor withTag(String tag)
  uid: com.microsoft.azure.management.containerregistry.ImageDescriptor.withTag(String)
nameWithType: ImageDescriptor
syntax: public class ImageDescriptor
type: class
uid: com.microsoft.azure.management.containerregistry.ImageDescriptor
fullName: com.microsoft.azure.management.containerregistry.ImageDescriptor
name: ImageDescriptor
package: com.microsoft.azure.management.containerregistry
summary: <p>Properties for a registry image. </p>
metadata: {}
