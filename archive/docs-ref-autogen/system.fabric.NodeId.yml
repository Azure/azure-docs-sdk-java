### YamlMime:JavaType
constructors:
- fullName: system.fabric.NodeId.NodeId(BigInteger low, BigInteger high)
  name: NodeId(BigInteger low, BigInteger high)
  nameWithType: NodeId.NodeId(BigInteger low, BigInteger high)
  parameters:
  - description: <p>The low order component of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object. </p>
    name: low
    type: <xref href="BigInteger?alt=BigInteger&text=BigInteger" data-throw-if-not-resolved="False"/>
  - description: <p>The high order component of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object. </p>
    name: high
    type: <xref href="BigInteger?alt=BigInteger&text=BigInteger" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object, with the specified high and low order components. </p>
  syntax: public NodeId(BigInteger low, BigInteger high)
  uid: system.fabric.NodeId.NodeId(BigInteger,BigInteger)
- fullName: system.fabric.NodeId.NodeId(String low, String high)
  name: NodeId(String low, String high)
  nameWithType: NodeId.NodeId(String low, String high)
  parameters:
  - description: <p>The low order component of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object. </p>
    name: low
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The high order component of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object. </p>
    name: high
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object, with the specified high and low order components. </p>
  syntax: public NodeId(String low, String high)
  uid: system.fabric.NodeId.NodeId(String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Comparable&lt;NodeId&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.NodeId.compareTo(NodeId o)
  name: compareTo(NodeId o)
  nameWithType: NodeId.compareTo(NodeId o)
  parameters:
  - name: o
    type: <xref href="system.fabric.NodeId?alt=system.fabric.NodeId&text=NodeId" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Compares this <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> instance with another instance. </p>
  syntax: public int compareTo(NodeId o)
  uid: system.fabric.NodeId.compareTo(NodeId)
- fullName: system.fabric.NodeId.getHigh()
  name: getHigh()
  nameWithType: NodeId.getHigh()
  returns:
    description: <p>Returns BigInteger. </p>
    type: <xref href="BigInteger?alt=BigInteger&text=BigInteger" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The high order component of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object.</p>

    <p></p>
  syntax: public BigInteger getHigh()
  uid: system.fabric.NodeId.getHigh()
- fullName: system.fabric.NodeId.getLow()
  name: getLow()
  nameWithType: NodeId.getLow()
  returns:
    description: <p>Returns BigInteger. </p>
    type: <xref href="BigInteger?alt=BigInteger&text=BigInteger" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The low order component of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NodeId"></xref> object.</p>

    <p></p>
  syntax: public BigInteger getLow()
  uid: system.fabric.NodeId.getLow()
- fullName: system.fabric.NodeId.toString()
  name: toString()
  nameWithType: NodeId.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Prints low order component and high order component of the NodeId. </p>
  syntax: public String toString()
  uid: system.fabric.NodeId.toString()
nameWithType: NodeId
syntax: public class NodeId
type: class
uid: system.fabric.NodeId
fullName: system.fabric.NodeId
name: NodeId
package: system.fabric
summary: <p>Class to encapsulate a node ID </p>
metadata: {}
