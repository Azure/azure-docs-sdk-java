### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.ConnectionPolicy()
  name: ConnectionPolicy()
  nameWithType: ConnectionPolicy.ConnectionPolicy()
  summary: <p>Constructor. </p>
  syntax: public ConnectionPolicy()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.ConnectionPolicy()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getConnectionMode()
  name: getConnectionMode()
  nameWithType: ConnectionPolicy.getConnectionMode()
  returns:
    description: <p>the connection mode. </p>
    type: <xref href="com.microsoft.azure.documentdb.ConnectionMode?alt=com.microsoft.azure.documentdb.ConnectionMode&text=ConnectionMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the connection mode used in the client.</p>

    <p></p>
  syntax: public ConnectionMode getConnectionMode()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getConnectionMode()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.GetDefault()
  name: GetDefault()
  nameWithType: ConnectionPolicy.GetDefault()
  returns:
    description: <p>the default connection policy. </p>
    type: <xref href="com.microsoft.azure.documentdb.ConnectionPolicy?alt=com.microsoft.azure.documentdb.ConnectionPolicy&text=ConnectionPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the default connection policy.</p>

    <p></p>
  syntax: public static ConnectionPolicy GetDefault()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.GetDefault()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getEnableEndpointDiscovery()
  name: getEnableEndpointDiscovery()
  nameWithType: ConnectionPolicy.getEnableEndpointDiscovery()
  returns:
    description: <p>whether endpoint discovery is enabled. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the flag to enable endpoint discovery for geo-replicated database accounts.</p>

    <p></p>
  syntax: public boolean getEnableEndpointDiscovery()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getEnableEndpointDiscovery()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getIdleConnectionTimeout()
  name: getIdleConnectionTimeout()
  nameWithType: ConnectionPolicy.getIdleConnectionTimeout()
  returns:
    description: <p>Idle connection timeout. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of the timeout for an idle connection, the default is 60 seconds.</p>

    <p></p>
  syntax: public int getIdleConnectionTimeout()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getIdleConnectionTimeout()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getMaxPoolSize()
  name: getMaxPoolSize()
  nameWithType: ConnectionPolicy.getMaxPoolSize()
  returns:
    description: <p>connection pool size. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of the connection pool size the client is using.</p>

    <p></p>
  syntax: public int getMaxPoolSize()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getMaxPoolSize()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getMaxRetryOnThrottledAttempts()
  name: getMaxRetryOnThrottledAttempts()
  nameWithType: ConnectionPolicy.getMaxRetryOnThrottledAttempts()
  returns:
    description: <p>maximum number of retry attempts. </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum number of retries in the case where the request fails due to a throttle error. </p>

    <p>This property is deprecated. Please use connectionPolicy.getRetryOptions().getMaxRetryAttemptsOnThrottledRequests() for equivalent functionality.</p>

    <p></p>
  syntax: public Integer getMaxRetryOnThrottledAttempts()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getMaxRetryOnThrottledAttempts()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getMediaReadMode()
  name: getMediaReadMode()
  nameWithType: ConnectionPolicy.getMediaReadMode()
  returns:
    description: <p>the media read mode. </p>
    type: <xref href="com.microsoft.azure.documentdb.MediaReadMode?alt=com.microsoft.azure.documentdb.MediaReadMode&text=MediaReadMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the attachment content (aka media) download mode.</p>

    <p></p>
  syntax: public MediaReadMode getMediaReadMode()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getMediaReadMode()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getMediaRequestTimeout()
  name: getMediaRequestTimeout()
  nameWithType: ConnectionPolicy.getMediaRequestTimeout()
  returns:
    description: <p>the media request timeout in seconds. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets or sets Time to wait for response from network peer for attachment content (aka media) operations.</p>

    <p></p>
  syntax: public int getMediaRequestTimeout()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getMediaRequestTimeout()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getPreferredLocations()
  name: getPreferredLocations()
  nameWithType: ConnectionPolicy.getPreferredLocations()
  returns:
    description: <p>the list of preferred location. </p>
    type: <xref href="Collection%3CString%3E?alt=Collection%3CString%3E&text=Collection%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the preferred locations for geo-replicated database accounts</p>

    <p></p>
  syntax: public Collection<String> getPreferredLocations()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getPreferredLocations()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getProxy()
  name: getProxy()
  nameWithType: ConnectionPolicy.getProxy()
  returns:
    description: <p>A proxy to use when making a request. </p>
    type: <xref href="HttpHost?alt=HttpHost&text=HttpHost" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a proxy which will be used when making a request. Default is .</p>

    <p></p>
  syntax: public HttpHost getProxy()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getProxy()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getRequestTimeout()
  name: getRequestTimeout()
  nameWithType: ConnectionPolicy.getRequestTimeout()
  returns:
    description: <p>the request timeout in seconds. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the request timeout (time to wait for response from network peer) in seconds.</p>

    <p></p>
  syntax: public int getRequestTimeout()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getRequestTimeout()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getRetryOptions()
  name: getRetryOptions()
  nameWithType: ConnectionPolicy.getRetryOptions()
  returns:
    description: <p>the RetryOptions instance. </p>
    type: <xref href="com.microsoft.azure.documentdb.RetryOptions?alt=com.microsoft.azure.documentdb.RetryOptions&text=RetryOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the retry policy options associated with the DocumentClient instance.</p>

    <p></p>
  syntax: public RetryOptions getRetryOptions()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getRetryOptions()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.getUserAgentSuffix()
  name: getUserAgentSuffix()
  nameWithType: ConnectionPolicy.getUserAgentSuffix()
  returns:
    description: <p>the value of user-agent suffix. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of user-agent suffix.</p>

    <p></p>
  syntax: public String getUserAgentSuffix()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.getUserAgentSuffix()
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setConnectionMode(ConnectionMode connectionMode)
  name: setConnectionMode(ConnectionMode connectionMode)
  nameWithType: ConnectionPolicy.setConnectionMode(ConnectionMode connectionMode)
  parameters:
  - description: <p>the connection mode. </p>
    name: connectionMode
    type: <xref href="com.microsoft.azure.documentdb.ConnectionMode?alt=com.microsoft.azure.documentdb.ConnectionMode&text=ConnectionMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the connection mode used in the client.</p>

    <p></p>
  syntax: public void setConnectionMode(ConnectionMode connectionMode)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setConnectionMode(ConnectionMode)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  name: setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  nameWithType: ConnectionPolicy.setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  parameters:
  - description: <p>true if EndpointDiscovery is enabled. </p>
    name: enableEndpointDiscovery
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the flag to enable endpoint discovery for geo-replicated database accounts. </p>

    <p>When EnableEndpointDiscovery is true, the SDK will automatically discover the current write and read regions to ensure requests are sent to the correct region based on the capability of the region and the user's preference. </p>

    <p>The default value for this property is true indicating endpoint discovery is enabled.</p>

    <p></p>
  syntax: public void setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setEnableEndpointDiscovery(boolean)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setIdleConnectionTimeout(int idleConnectionTimeout)
  name: setIdleConnectionTimeout(int idleConnectionTimeout)
  nameWithType: ConnectionPolicy.setIdleConnectionTimeout(int idleConnectionTimeout)
  parameters:
  - description: <p>the timeout for an idle connection in seconds. </p>
    name: idleConnectionTimeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>sets the value of the timeout for an idle connection. After that time, the connection will be automatically closed.</p>

    <p></p>
  syntax: public void setIdleConnectionTimeout(int idleConnectionTimeout)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setIdleConnectionTimeout(int)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setMaxPoolSize(int maxPoolSize)
  name: setMaxPoolSize(int maxPoolSize)
  nameWithType: ConnectionPolicy.setMaxPoolSize(int maxPoolSize)
  parameters:
  - description: <p>The value of the connection pool size the httpclient is using. </p>
    name: maxPoolSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the value of the connection pool size of the httpclient, the default is 100.</p>

    <p></p>
  syntax: public void setMaxPoolSize(int maxPoolSize)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setMaxPoolSize(int)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)
  name: setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)
  nameWithType: ConnectionPolicy.setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)
  parameters:
  - description: <p>the max number of retry attempts on failed requests. </p>
    name: maxRetryOnThrottledAttempts
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the maximum number of retries in the case where the request fails due to a throttle error. </p>

    <p>When a client is sending request faster than the request rate limit imposed by the service, the service will return HttpStatusCode 429 (Too Many Request) to throttle the client. The current implementation in the SDK will then wait for the amount of time the service tells it to wait and retry after the time has elapsed. </p>

    <p>The default value is 9. This means in the case where the request is throttled, the same request will be issued for a maximum of 10 times to the server before an error is returned to the application. </p>

    <p>This property is deprecated. Please use connectionPolicy.getRetryOptions().setMaxRetryAttemptsOnThrottledRequests() for equivalent functionality.</p>

    <p></p>
  syntax: public void setMaxRetryOnThrottledAttempts(Integer maxRetryOnThrottledAttempts)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setMaxRetryOnThrottledAttempts(Integer)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setMediaReadMode(MediaReadMode mediaReadMode)
  name: setMediaReadMode(MediaReadMode mediaReadMode)
  nameWithType: ConnectionPolicy.setMediaReadMode(MediaReadMode mediaReadMode)
  parameters:
  - description: <p>the media read mode. </p>
    name: mediaReadMode
    type: <xref href="com.microsoft.azure.documentdb.MediaReadMode?alt=com.microsoft.azure.documentdb.MediaReadMode&text=MediaReadMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the attachment content (aka media) download mode.</p>

    <p></p>
  syntax: public void setMediaReadMode(MediaReadMode mediaReadMode)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setMediaReadMode(MediaReadMode)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setMediaRequestTimeout(int mediaRequestTimeout)
  name: setMediaRequestTimeout(int mediaRequestTimeout)
  nameWithType: ConnectionPolicy.setMediaRequestTimeout(int mediaRequestTimeout)
  parameters:
  - description: <p>the media request timeout in seconds. </p>
    name: mediaRequestTimeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets or sets Time to wait for response from network peer for attachment content (aka media) operations.</p>

    <p></p>
  syntax: public void setMediaRequestTimeout(int mediaRequestTimeout)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setMediaRequestTimeout(int)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setPreferredLocations(Collection<String> preferredLocations)
  name: setPreferredLocations(Collection<String> preferredLocations)
  nameWithType: ConnectionPolicy.setPreferredLocations(Collection<String> preferredLocations)
  parameters:
  - description: <p>the list of preferred locations. </p>
    name: preferredLocations
    type: <xref href="Collection%3CString%3E?alt=Collection%3CString%3E&text=Collection%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the preferred locations for geo-replicated database accounts. For example, "East US" as the preferred location. </p>

    <p>When EnableEndpointDiscovery is true and PreferredRegions is non-empty, the SDK will prefer to use the locations in the collection in the order they are specified to perform operations. </p>

    <p>If EnableEndpointDiscovery is set to false, this property is ignored.</p>

    <p></p>
  syntax: public void setPreferredLocations(Collection<String> preferredLocations)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setPreferredLocations(Collection<String>)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setProxy(HttpHost proxy)
  name: setProxy(HttpHost proxy)
  nameWithType: ConnectionPolicy.setProxy(HttpHost proxy)
  parameters:
  - description: <p>A proxy to use when making a request. </p>
    name: proxy
    type: <xref href="HttpHost?alt=HttpHost&text=HttpHost" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets a proxy which will be used when making a request. Default is .</p>

    <p></p>
  syntax: public void setProxy(HttpHost proxy)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setProxy(HttpHost)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setRequestTimeout(int requestTimeout)
  name: setRequestTimeout(int requestTimeout)
  nameWithType: ConnectionPolicy.setRequestTimeout(int requestTimeout)
  parameters:
  - description: <p>the request timeout in seconds. </p>
    name: requestTimeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the request timeout (time to wait for response from network peer) in seconds.</p>

    <p></p>
  syntax: public void setRequestTimeout(int requestTimeout)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setRequestTimeout(int)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setRetryOptions(RetryOptions retryOptions)
  name: setRetryOptions(RetryOptions retryOptions)
  nameWithType: ConnectionPolicy.setRetryOptions(RetryOptions retryOptions)
  parameters:
  - description: <p>the RetryOptions instance. </p>
    name: retryOptions
    type: <xref href="com.microsoft.azure.documentdb.RetryOptions?alt=com.microsoft.azure.documentdb.RetryOptions&text=RetryOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the retry policy options associated with the DocumentClient instance. </p>

    <p>Properties in the RetryOptions class allow application to customize the built-in retry policies. This property is optional. When it's not set, the SDK uses the default values for configuring the retry policies. See RetryOptions class for more details.</p>

    <p></p>
  syntax: public void setRetryOptions(RetryOptions retryOptions)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setRetryOptions(RetryOptions)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.setUserAgentSuffix(String userAgentSuffix)
  name: setUserAgentSuffix(String userAgentSuffix)
  nameWithType: ConnectionPolicy.setUserAgentSuffix(String userAgentSuffix)
  parameters:
  - description: <p>The value to be appended to the user-agent header, this is used for monitoring purposes. </p>
    name: userAgentSuffix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>sets the value of the user-agent suffix.</p>

    <p></p>
  syntax: public void setUserAgentSuffix(String userAgentSuffix)
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.setUserAgentSuffix(String)
- fullName: com.microsoft.azure.documentdb.ConnectionPolicy.toString()
  name: toString()
  nameWithType: ConnectionPolicy.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.documentdb.ConnectionPolicy.toString()
nameWithType: ConnectionPolicy
syntax: public class ConnectionPolicy
type: class
uid: com.microsoft.azure.documentdb.ConnectionPolicy
fullName: com.microsoft.azure.documentdb.ConnectionPolicy
name: ConnectionPolicy
package: com.microsoft.azure.documentdb
summary: <p>Represents the Connection policy associated with a DocumentClient in the Azure Cosmos DB database service. </p>
metadata: {}
