### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.assignableScopes()
  name: assignableScopes()
  nameWithType: RoleDefinitionProperties.assignableScopes()
  returns:
    description: <p>the assignableScopes value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the assignableScopes value.</p>

    <p></p>
  syntax: public List<String> assignableScopes()
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.assignableScopes()
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.description()
  name: description()
  nameWithType: RoleDefinitionProperties.description()
  returns:
    description: <p>the description value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the description value.</p>

    <p></p>
  syntax: public String description()
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.description()
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.permissions()
  name: permissions()
  nameWithType: RoleDefinitionProperties.permissions()
  returns:
    description: <p>the permissions value </p>
    type: <xref href="List%3CPermissionInner%3E?alt=List%3CPermissionInner%3E&text=List%3CPermissionInner%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the permissions value.</p>

    <p></p>
  syntax: public List<PermissionInner> permissions()
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.permissions()
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.roleName()
  name: roleName()
  nameWithType: RoleDefinitionProperties.roleName()
  returns:
    description: <p>the roleName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the roleName value.</p>

    <p></p>
  syntax: public String roleName()
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.roleName()
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.type()
  name: type()
  nameWithType: RoleDefinitionProperties.type()
  returns:
    description: <p>the type value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type value.</p>

    <p></p>
  syntax: public String type()
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.type()
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withAssignableScopes(List<String> assignableScopes)
  name: withAssignableScopes(List<String> assignableScopes)
  nameWithType: RoleDefinitionProperties.withAssignableScopes(List<String> assignableScopes)
  parameters:
  - description: <p>the assignableScopes value to set </p>
    name: assignableScopes
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RoleDefinitionProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.RoleDefinitionProperties?alt=com.microsoft.azure.management.graphrbac.RoleDefinitionProperties&text=RoleDefinitionProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the assignableScopes value.</p>

    <p></p>
  syntax: public RoleDefinitionProperties withAssignableScopes(List<String> assignableScopes)
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withAssignableScopes(List<String>)
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withDescription(String description)
  name: withDescription(String description)
  nameWithType: RoleDefinitionProperties.withDescription(String description)
  parameters:
  - description: <p>the description value to set </p>
    name: description
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RoleDefinitionProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.RoleDefinitionProperties?alt=com.microsoft.azure.management.graphrbac.RoleDefinitionProperties&text=RoleDefinitionProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the description value.</p>

    <p></p>
  syntax: public RoleDefinitionProperties withDescription(String description)
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withDescription(String)
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withPermissions(List<PermissionInner> permissions)
  name: withPermissions(List<PermissionInner> permissions)
  nameWithType: RoleDefinitionProperties.withPermissions(List<PermissionInner> permissions)
  parameters:
  - description: <p>the permissions value to set </p>
    name: permissions
    type: <xref href="List%3CPermissionInner%3E?alt=List%3CPermissionInner%3E&text=List%3CPermissionInner%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RoleDefinitionProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.RoleDefinitionProperties?alt=com.microsoft.azure.management.graphrbac.RoleDefinitionProperties&text=RoleDefinitionProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the permissions value.</p>

    <p></p>
  syntax: public RoleDefinitionProperties withPermissions(List<PermissionInner> permissions)
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withPermissions(List<PermissionInner>)
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withRoleName(String roleName)
  name: withRoleName(String roleName)
  nameWithType: RoleDefinitionProperties.withRoleName(String roleName)
  parameters:
  - description: <p>the roleName value to set </p>
    name: roleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RoleDefinitionProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.RoleDefinitionProperties?alt=com.microsoft.azure.management.graphrbac.RoleDefinitionProperties&text=RoleDefinitionProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the roleName value.</p>

    <p></p>
  syntax: public RoleDefinitionProperties withRoleName(String roleName)
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withRoleName(String)
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withType(String type)
  name: withType(String type)
  nameWithType: RoleDefinitionProperties.withType(String type)
  parameters:
  - description: <p>the type value to set </p>
    name: type
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RoleDefinitionProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.graphrbac.RoleDefinitionProperties?alt=com.microsoft.azure.management.graphrbac.RoleDefinitionProperties&text=RoleDefinitionProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type value.</p>

    <p></p>
  syntax: public RoleDefinitionProperties withType(String type)
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties.withType(String)
nameWithType: RoleDefinitionProperties
syntax: public class RoleDefinitionProperties
type: class
uid: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties
fullName: com.microsoft.azure.management.graphrbac.RoleDefinitionProperties
name: RoleDefinitionProperties
package: com.microsoft.azure.management.graphrbac
summary: <p>Role definition properties. </p>
metadata: {}
