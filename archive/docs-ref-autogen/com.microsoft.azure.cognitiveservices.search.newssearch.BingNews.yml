### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.category()
  name: category()
  nameWithType: BingNews.category()
  returns:
    description: <p>the first stage of the category call </p>
    type: <xref href="BingNewsCategoryDefinitionStages.WithExecute?alt=BingNewsCategoryDefinitionStages.WithExecute&text=BingNewsCategoryDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The News Category API lets lets you search on Bing and get back a list of top news articles by category. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public BingNewsCategoryDefinitionStages.WithExecute category()
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.category()
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.category(CategoryOptionalParameter categoryOptionalParameter)
  name: category(CategoryOptionalParameter categoryOptionalParameter)
  nameWithType: BingNews.category(CategoryOptionalParameter categoryOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: categoryOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.CategoryOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.CategoryOptionalParameter&text=CategoryOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the NewsModel object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel&text=NewsModel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The News Category API lets lets you search on Bing and get back a list of top news articles by category. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public NewsModel category(CategoryOptionalParameter categoryOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.category(CategoryOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.categoryAsync(CategoryOptionalParameter categoryOptionalParameter)
  name: categoryAsync(CategoryOptionalParameter categoryOptionalParameter)
  nameWithType: BingNews.categoryAsync(CategoryOptionalParameter categoryOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: categoryOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.CategoryOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.CategoryOptionalParameter&text=CategoryOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the NewsModel object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel&text=NewsModel" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The News Category API lets lets you search on Bing and get back a list of top news articles by category. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public Observable<NewsModel> categoryAsync(CategoryOptionalParameter categoryOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.categoryAsync(CategoryOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.search()
  name: search()
  nameWithType: BingNews.search()
  returns:
    description: <p>the first stage of the search call </p>
    type: <xref href="BingNewsSearchDefinitionStages.WithQuery?alt=BingNewsSearchDefinitionStages.WithQuery&text=BingNewsSearchDefinitionStages.WithQuery" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The News Search API lets you send a search query to Bing and get back a list of news that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public BingNewsSearchDefinitionStages.WithQuery search()
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.search()
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.search(String query, SearchOptionalParameter searchOptionalParameter)
  name: search(String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingNews.search(String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The user's search query string. The query string cannot be empty. The query string may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit news to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. Use this parameter only with the News Search API. Do not specify this parameter when calling the Trending Topics API or News Category API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the NewsModel object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel&text=NewsModel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The News Search API lets you send a search query to Bing and get back a list of news that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public NewsModel search(String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.search(String,SearchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  name: searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingNews.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The user's search query string. The query string cannot be empty. The query string may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit news to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. Use this parameter only with the News Search API. Do not specify this parameter when calling the Trending Topics API or News Category API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the NewsModel object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.NewsModel&text=NewsModel" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The News Search API lets you send a search query to Bing and get back a list of news that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public Observable<NewsModel> searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.searchAsync(String,SearchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.trending()
  name: trending()
  nameWithType: BingNews.trending()
  returns:
    description: <p>the first stage of the trending call </p>
    type: <xref href="BingNewsTrendingDefinitionStages.WithExecute?alt=BingNewsTrendingDefinitionStages.WithExecute&text=BingNewsTrendingDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The News Trending Topics API lets lets you search on Bing and get back a list of trending news topics that are currently trending on Bing. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public BingNewsTrendingDefinitionStages.WithExecute trending()
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.trending()
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.trending(TrendingOptionalParameter trendingOptionalParameter)
  name: trending(TrendingOptionalParameter trendingOptionalParameter)
  nameWithType: BingNews.trending(TrendingOptionalParameter trendingOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: trendingOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingOptionalParameter&text=TrendingOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TrendingTopics object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingTopics?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingTopics&text=TrendingTopics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The News Trending Topics API lets lets you search on Bing and get back a list of trending news topics that are currently trending on Bing. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public TrendingTopics trending(TrendingOptionalParameter trendingOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.trending(TrendingOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  name: trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  nameWithType: BingNews.trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: trendingOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingOptionalParameter&text=TrendingOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the TrendingTopics object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingTopics?alt=com.microsoft.azure.cognitiveservices.search.newssearch.models.TrendingTopics&text=TrendingTopics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The News Trending Topics API lets lets you search on Bing and get back a list of trending news topics that are currently trending on Bing. This section provides technical details about the query parameters and headers that you use to request news and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the web for news](<a href="https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web">https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web</a>).</p>

    <p></p>
  syntax: public Observable<TrendingTopics> trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews.trendingAsync(TrendingOptionalParameter)
nameWithType: BingNews
syntax: public interface BingNews
type: interface
uid: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews
fullName: com.microsoft.azure.cognitiveservices.search.newssearch.BingNews
name: BingNews
package: com.microsoft.azure.cognitiveservices.search.newssearch
summary: <p>An instance of this class provides access to all the operations defined in BingNews. </p>
metadata: {}
