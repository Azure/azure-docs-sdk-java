### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.cancellationRequested()
  name: cancellationRequested()
  nameWithType: CertificateOperation.cancellationRequested()
  returns:
    description: <p>the cancellationRequested value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the cancellationRequested value.</p>

    <p></p>
  syntax: public Boolean cancellationRequested()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.cancellationRequested()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.certificateOperationIdentifier()
  name: certificateOperationIdentifier()
  nameWithType: CertificateOperation.certificateOperationIdentifier()
  returns:
    description: <p>the identifier value </p>
    type: <xref href="com.microsoft.azure.keyvault.CertificateOperationIdentifier?alt=com.microsoft.azure.keyvault.CertificateOperationIdentifier&text=CertificateOperationIdentifier" data-throw-if-not-resolved="False"/>
  summary: <p>The certificate operation identifier. </p>
  syntax: public CertificateOperationIdentifier certificateOperationIdentifier()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.certificateOperationIdentifier()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.csr()
  name: csr()
  nameWithType: CertificateOperation.csr()
  returns:
    description: <p>the csr value </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the csr value.</p>

    <p></p>
  syntax: public byte [] csr()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.csr()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.error()
  name: error()
  nameWithType: CertificateOperation.error()
  returns:
    description: <p>the error value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.Error?alt=com.microsoft.azure.keyvault.models.Error&text=Error" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the error value.</p>

    <p></p>
  syntax: public Error error()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.error()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.id()
  name: id()
  nameWithType: CertificateOperation.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.id()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.issuerParameters()
  name: issuerParameters()
  nameWithType: CertificateOperation.issuerParameters()
  returns:
    description: <p>the issuerParameters value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.IssuerParameters?alt=com.microsoft.azure.keyvault.models.IssuerParameters&text=IssuerParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the issuerParameters value.</p>

    <p></p>
  syntax: public IssuerParameters issuerParameters()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.issuerParameters()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.requestId()
  name: requestId()
  nameWithType: CertificateOperation.requestId()
  returns:
    description: <p>the requestId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the requestId value.</p>

    <p></p>
  syntax: public String requestId()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.requestId()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.status()
  name: status()
  nameWithType: CertificateOperation.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the status value.</p>

    <p></p>
  syntax: public String status()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.status()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.statusDetails()
  name: statusDetails()
  nameWithType: CertificateOperation.statusDetails()
  returns:
    description: <p>the statusDetails value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the statusDetails value.</p>

    <p></p>
  syntax: public String statusDetails()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.statusDetails()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.target()
  name: target()
  nameWithType: CertificateOperation.target()
  returns:
    description: <p>the target value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the target value.</p>

    <p></p>
  syntax: public String target()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.target()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.toString()
  name: toString()
  nameWithType: CertificateOperation.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.toString()
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withCancellationRequested(Boolean cancellationRequested)
  name: withCancellationRequested(Boolean cancellationRequested)
  nameWithType: CertificateOperation.withCancellationRequested(Boolean cancellationRequested)
  parameters:
  - description: <p>the cancellationRequested value to set </p>
    name: cancellationRequested
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the cancellationRequested value.</p>

    <p></p>
  syntax: public CertificateOperation withCancellationRequested(Boolean cancellationRequested)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withCancellationRequested(Boolean)
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withCsr(byte[] csr)
  name: withCsr(byte[] csr)
  nameWithType: CertificateOperation.withCsr(byte[] csr)
  parameters:
  - description: <p>the csr value to set </p>
    name: csr
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the csr value.</p>

    <p></p>
  syntax: public CertificateOperation withCsr(byte[] csr)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withCsr(byte [])
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withError(Error error)
  name: withError(Error error)
  nameWithType: CertificateOperation.withError(Error error)
  parameters:
  - description: <p>the error value to set </p>
    name: error
    type: <xref href="com.microsoft.azure.keyvault.models.Error?alt=com.microsoft.azure.keyvault.models.Error&text=Error" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the error value.</p>

    <p></p>
  syntax: public CertificateOperation withError(Error error)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withError(Error)
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withIssuerParameters(IssuerParameters issuerParameters)
  name: withIssuerParameters(IssuerParameters issuerParameters)
  nameWithType: CertificateOperation.withIssuerParameters(IssuerParameters issuerParameters)
  parameters:
  - description: <p>the issuerParameters value to set </p>
    name: issuerParameters
    type: <xref href="com.microsoft.azure.keyvault.models.IssuerParameters?alt=com.microsoft.azure.keyvault.models.IssuerParameters&text=IssuerParameters" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the issuerParameters value.</p>

    <p></p>
  syntax: public CertificateOperation withIssuerParameters(IssuerParameters issuerParameters)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withIssuerParameters(IssuerParameters)
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withRequestId(String requestId)
  name: withRequestId(String requestId)
  nameWithType: CertificateOperation.withRequestId(String requestId)
  parameters:
  - description: <p>the requestId value to set </p>
    name: requestId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the requestId value.</p>

    <p></p>
  syntax: public CertificateOperation withRequestId(String requestId)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withRequestId(String)
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withStatus(String status)
  name: withStatus(String status)
  nameWithType: CertificateOperation.withStatus(String status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the status value.</p>

    <p></p>
  syntax: public CertificateOperation withStatus(String status)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withStatus(String)
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withStatusDetails(String statusDetails)
  name: withStatusDetails(String statusDetails)
  nameWithType: CertificateOperation.withStatusDetails(String statusDetails)
  parameters:
  - description: <p>the statusDetails value to set </p>
    name: statusDetails
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the statusDetails value.</p>

    <p></p>
  syntax: public CertificateOperation withStatusDetails(String statusDetails)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withStatusDetails(String)
- fullName: com.microsoft.azure.keyvault.models.CertificateOperation.withTarget(String target)
  name: withTarget(String target)
  nameWithType: CertificateOperation.withTarget(String target)
  parameters:
  - description: <p>the target value to set </p>
    name: target
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateOperation object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateOperation?alt=com.microsoft.azure.keyvault.models.CertificateOperation&text=CertificateOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the target value.</p>

    <p></p>
  syntax: public CertificateOperation withTarget(String target)
  uid: com.microsoft.azure.keyvault.models.CertificateOperation.withTarget(String)
nameWithType: CertificateOperation
syntax: public class CertificateOperation
type: class
uid: com.microsoft.azure.keyvault.models.CertificateOperation
fullName: com.microsoft.azure.keyvault.models.CertificateOperation
name: CertificateOperation
package: com.microsoft.azure.keyvault.models
summary: <p>A certificate operation is returned in case of asynchronous requests. </p>
metadata: {}
