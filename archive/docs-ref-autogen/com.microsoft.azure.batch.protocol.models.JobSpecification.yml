### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.commonEnvironmentSettings()
  name: commonEnvironmentSettings()
  nameWithType: JobSpecification.commonEnvironmentSettings()
  returns:
    description: <p>the commonEnvironmentSettings value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get individual tasks can override an environment setting specified here by specifying the same setting name with a different value.</p>

    <p></p>
  syntax: public List<EnvironmentSetting> commonEnvironmentSettings()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.commonEnvironmentSettings()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.constraints()
  name: constraints()
  nameWithType: JobSpecification.constraints()
  returns:
    description: <p>the constraints value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the constraints value.</p>

    <p></p>
  syntax: public JobConstraints constraints()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.constraints()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.displayName()
  name: displayName()
  nameWithType: JobSpecification.displayName()
  returns:
    description: <p>the displayName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public String displayName()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.displayName()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.jobManagerTask()
  name: jobManagerTask()
  nameWithType: JobSpecification.jobManagerTask()
  returns:
    description: <p>the jobManagerTask value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobManagerTask?alt=com.microsoft.azure.batch.protocol.models.JobManagerTask&text=JobManagerTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the job does not specify a Job Manager task, the user must explicitly add tasks to the job using the Task API. If the job does specify a Job Manager task, the Batch service creates the Job Manager task when the job is created, and will try to schedule the Job Manager task before scheduling other tasks in the job.</p>

    <p></p>
  syntax: public JobManagerTask jobManagerTask()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.jobManagerTask()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.jobPreparationTask()
  name: jobPreparationTask()
  nameWithType: JobSpecification.jobPreparationTask()
  returns:
    description: <p>the jobPreparationTask value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if a job has a Job Preparation task, the Batch service will run the Job Preparation task on a compute node before starting any tasks of that job on that compute node.</p>

    <p></p>
  syntax: public JobPreparationTask jobPreparationTask()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.jobPreparationTask()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.jobReleaseTask()
  name: jobReleaseTask()
  nameWithType: JobSpecification.jobReleaseTask()
  returns:
    description: <p>the jobReleaseTask value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the primary purpose of the Job Release task is to undo changes to compute nodes made by the Job Preparation task. Example activities include deleting local files, or shutting down services that were started as part of job preparation. A Job Release task cannot be specified without also specifying a Job Preparation task for the job. The Batch service runs the Job Release task on the compute nodes that have run the Job Preparation task.</p>

    <p></p>
  syntax: public JobReleaseTask jobReleaseTask()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.jobReleaseTask()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.metadata()
  name: metadata()
  nameWithType: JobSpecification.metadata()
  returns:
    description: <p>the metadata value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code.</p>

    <p></p>
  syntax: public List<MetadataItem> metadata()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.metadata()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.networkConfiguration()
  name: networkConfiguration()
  nameWithType: JobSpecification.networkConfiguration()
  returns:
    description: <p>the networkConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration&text=JobNetworkConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the networkConfiguration value.</p>

    <p></p>
  syntax: public JobNetworkConfiguration networkConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.networkConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete()
  name: onAllTasksComplete()
  nameWithType: JobSpecification.onAllTasksComplete()
  returns:
    description: <p>the onAllTasksComplete value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get note that if a job contains no tasks, then all tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the job properties to set onAllTasksComplete to terminatejob once you have finished adding tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'.</p>

    <p></p>
  syntax: public OnAllTasksComplete onAllTasksComplete()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.onAllTasksComplete()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.onTaskFailure()
  name: onTaskFailure()
  nameWithType: JobSpecification.onTaskFailure()
  returns:
    description: <p>the onTaskFailure value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnTaskFailure?alt=com.microsoft.azure.batch.protocol.models.OnTaskFailure&text=OnTaskFailure" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'.</p>

    <p></p>
  syntax: public OnTaskFailure onTaskFailure()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.onTaskFailure()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.poolInfo()
  name: poolInfo()
  nameWithType: JobSpecification.poolInfo()
  returns:
    description: <p>the poolInfo value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the poolInfo value.</p>

    <p></p>
  syntax: public PoolInformation poolInfo()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.poolInfo()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.priority()
  name: priority()
  nameWithType: JobSpecification.priority()
  returns:
    description: <p>the priority value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all jobs under the job schedule. You can update a job's priority after it has been created using by using the update job API.</p>

    <p></p>
  syntax: public Integer priority()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.priority()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.usesTaskDependencies()
  name: usesTaskDependencies()
  nameWithType: JobSpecification.usesTaskDependencies()
  returns:
    description: <p>the usesTaskDependencies value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the usesTaskDependencies value.</p>

    <p></p>
  syntax: public Boolean usesTaskDependencies()
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.usesTaskDependencies()
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
  name: withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
  nameWithType: JobSpecification.withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
  parameters:
  - description: <p>the commonEnvironmentSettings value to set </p>
    name: commonEnvironmentSettings
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set individual tasks can override an environment setting specified here by specifying the same setting name with a different value.</p>

    <p></p>
  syntax: public JobSpecification withCommonEnvironmentSettings(List<EnvironmentSetting> commonEnvironmentSettings)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withCommonEnvironmentSettings(List<EnvironmentSetting>)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withConstraints(JobConstraints constraints)
  name: withConstraints(JobConstraints constraints)
  nameWithType: JobSpecification.withConstraints(JobConstraints constraints)
  parameters:
  - description: <p>the constraints value to set </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobConstraints?alt=com.microsoft.azure.batch.protocol.models.JobConstraints&text=JobConstraints" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the constraints value.</p>

    <p></p>
  syntax: public JobSpecification withConstraints(JobConstraints constraints)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withConstraints(JobConstraints)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withDisplayName(String displayName)
  name: withDisplayName(String displayName)
  nameWithType: JobSpecification.withDisplayName(String displayName)
  parameters:
  - description: <p>the displayName value to set </p>
    name: displayName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public JobSpecification withDisplayName(String displayName)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withDisplayName(String)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withJobManagerTask(JobManagerTask jobManagerTask)
  name: withJobManagerTask(JobManagerTask jobManagerTask)
  nameWithType: JobSpecification.withJobManagerTask(JobManagerTask jobManagerTask)
  parameters:
  - description: <p>the jobManagerTask value to set </p>
    name: jobManagerTask
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobManagerTask?alt=com.microsoft.azure.batch.protocol.models.JobManagerTask&text=JobManagerTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the job does not specify a Job Manager task, the user must explicitly add tasks to the job using the Task API. If the job does specify a Job Manager task, the Batch service creates the Job Manager task when the job is created, and will try to schedule the Job Manager task before scheduling other tasks in the job.</p>

    <p></p>
  syntax: public JobSpecification withJobManagerTask(JobManagerTask jobManagerTask)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withJobManagerTask(JobManagerTask)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withJobPreparationTask(JobPreparationTask jobPreparationTask)
  name: withJobPreparationTask(JobPreparationTask jobPreparationTask)
  nameWithType: JobSpecification.withJobPreparationTask(JobPreparationTask jobPreparationTask)
  parameters:
  - description: <p>the jobPreparationTask value to set </p>
    name: jobPreparationTask
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if a job has a Job Preparation task, the Batch service will run the Job Preparation task on a compute node before starting any tasks of that job on that compute node.</p>

    <p></p>
  syntax: public JobSpecification withJobPreparationTask(JobPreparationTask jobPreparationTask)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withJobPreparationTask(JobPreparationTask)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withJobReleaseTask(JobReleaseTask jobReleaseTask)
  name: withJobReleaseTask(JobReleaseTask jobReleaseTask)
  nameWithType: JobSpecification.withJobReleaseTask(JobReleaseTask jobReleaseTask)
  parameters:
  - description: <p>the jobReleaseTask value to set </p>
    name: jobReleaseTask
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTask?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTask&text=JobReleaseTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the primary purpose of the Job Release task is to undo changes to compute nodes made by the Job Preparation task. Example activities include deleting local files, or shutting down services that were started as part of job preparation. A Job Release task cannot be specified without also specifying a Job Preparation task for the job. The Batch service runs the Job Release task on the compute nodes that have run the Job Preparation task.</p>

    <p></p>
  syntax: public JobSpecification withJobReleaseTask(JobReleaseTask jobReleaseTask)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withJobReleaseTask(JobReleaseTask)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: JobSpecification.withMetadata(List<MetadataItem> metadata)
  parameters:
  - description: <p>the metadata value to set </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code.</p>

    <p></p>
  syntax: public JobSpecification withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withMetadata(List<MetadataItem>)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
  name: withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
  nameWithType: JobSpecification.withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
  parameters:
  - description: <p>the networkConfiguration value to set </p>
    name: networkConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.JobNetworkConfiguration&text=JobNetworkConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the networkConfiguration value.</p>

    <p></p>
  syntax: public JobSpecification withNetworkConfiguration(JobNetworkConfiguration networkConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withNetworkConfiguration(JobNetworkConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  name: withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  nameWithType: JobSpecification.withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  parameters:
  - description: <p>the onAllTasksComplete value to set </p>
    name: onAllTasksComplete
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnAllTasksComplete?alt=com.microsoft.azure.batch.protocol.models.OnAllTasksComplete&text=OnAllTasksComplete" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set note that if a job contains no tasks, then all tasks are considered complete. This option is therefore most commonly used with a Job Manager task; if you want to use automatic job termination without a Job Manager, you should initially set onAllTasksComplete to noaction and update the job properties to set onAllTasksComplete to terminatejob once you have finished adding tasks. The default is noaction. Possible values include: 'noAction', 'terminateJob'.</p>

    <p></p>
  syntax: public JobSpecification withOnAllTasksComplete(OnAllTasksComplete onAllTasksComplete)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withOnAllTasksComplete(OnAllTasksComplete)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withOnTaskFailure(OnTaskFailure onTaskFailure)
  name: withOnTaskFailure(OnTaskFailure onTaskFailure)
  nameWithType: JobSpecification.withOnTaskFailure(OnTaskFailure onTaskFailure)
  parameters:
  - description: <p>the onTaskFailure value to set </p>
    name: onTaskFailure
    type: <xref href="com.microsoft.azure.batch.protocol.models.OnTaskFailure?alt=com.microsoft.azure.batch.protocol.models.OnTaskFailure&text=OnTaskFailure" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default is noaction. Possible values include: 'noAction', 'performExitOptionsJobAction'.</p>

    <p></p>
  syntax: public JobSpecification withOnTaskFailure(OnTaskFailure onTaskFailure)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withOnTaskFailure(OnTaskFailure)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withPoolInfo(PoolInformation poolInfo)
  name: withPoolInfo(PoolInformation poolInfo)
  nameWithType: JobSpecification.withPoolInfo(PoolInformation poolInfo)
  parameters:
  - description: <p>the poolInfo value to set </p>
    name: poolInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolInformation?alt=com.microsoft.azure.batch.protocol.models.PoolInformation&text=PoolInformation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the poolInfo value.</p>

    <p></p>
  syntax: public JobSpecification withPoolInfo(PoolInformation poolInfo)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withPoolInfo(PoolInformation)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withPriority(Integer priority)
  name: withPriority(Integer priority)
  nameWithType: JobSpecification.withPriority(Integer priority)
  parameters:
  - description: <p>the priority value to set </p>
    name: priority
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0. This priority is used as the default for all jobs under the job schedule. You can update a job's priority after it has been created using by using the update job API.</p>

    <p></p>
  syntax: public JobSpecification withPriority(Integer priority)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withPriority(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.JobSpecification.withUsesTaskDependencies(Boolean usesTaskDependencies)
  name: withUsesTaskDependencies(Boolean usesTaskDependencies)
  nameWithType: JobSpecification.withUsesTaskDependencies(Boolean usesTaskDependencies)
  parameters:
  - description: <p>the usesTaskDependencies value to set </p>
    name: usesTaskDependencies
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobSpecification object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobSpecification?alt=com.microsoft.azure.batch.protocol.models.JobSpecification&text=JobSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the usesTaskDependencies value.</p>

    <p></p>
  syntax: public JobSpecification withUsesTaskDependencies(Boolean usesTaskDependencies)
  uid: com.microsoft.azure.batch.protocol.models.JobSpecification.withUsesTaskDependencies(Boolean)
nameWithType: JobSpecification
syntax: public class JobSpecification
type: class
uid: com.microsoft.azure.batch.protocol.models.JobSpecification
fullName: com.microsoft.azure.batch.protocol.models.JobSpecification
name: JobSpecification
package: com.microsoft.azure.batch.protocol.models
summary: <p>Specifies details of the jobs to be created on a schedule. </p>
metadata: {}
