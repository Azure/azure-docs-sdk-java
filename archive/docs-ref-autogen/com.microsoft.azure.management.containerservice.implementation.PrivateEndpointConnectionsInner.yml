### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.PrivateEndpointConnectionsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  name: PrivateEndpointConnectionsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  nameWithType: PrivateEndpointConnectionsInner.PrivateEndpointConnectionsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl?alt=com.microsoft.azure.management.containerservice.implementation.ContainerServiceManagementClientImpl&text=ContainerServiceManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of PrivateEndpointConnectionsInner.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionsInner(Retrofit retrofit, ContainerServiceManagementClientImpl client)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.PrivateEndpointConnectionsInner(Retrofit,ContainerServiceManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDelete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: beginDelete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.beginDelete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDelete(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDeleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDeleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.beginDeleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.delete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: delete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.delete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.delete(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.deleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.deleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a private endpoint connection. Deletes the private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.deleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.get(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: get(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.get(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the private endpoint connection. Gets the details of the private endpoint connection by managed cluster and resource group.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionInner get(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.get(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the private endpoint connection. Gets the details of the private endpoint connection by managed cluster and resource group.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionInner> getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the private endpoint connection. Gets the details of the private endpoint connection by managed cluster and resource group.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionInner> getAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.getAsync(String,String,String,final ServiceCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.getWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  name: getWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.getWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the private endpoint connection. Gets the details of the private endpoint connection by managed cluster and resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<PrivateEndpointConnectionInner>> getWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.getWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.list(String resourceGroupName, String resourceName)
  name: list(String resourceGroupName, String resourceName)
  nameWithType: PrivateEndpointConnectionsInner.list(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionListResultInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner&text=PrivateEndpointConnectionListResultInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a list of private endpoint connections in the specified managed cluster. Gets a list of private endpoint connections in the specified managed cluster. The operation returns properties of each private endpoint connection.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionListResultInner list(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.list(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.listAsync(String resourceGroupName, String resourceName)
  name: listAsync(String resourceGroupName, String resourceName)
  nameWithType: PrivateEndpointConnectionsInner.listAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionListResultInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner&text=PrivateEndpointConnectionListResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of private endpoint connections in the specified managed cluster. Gets a list of private endpoint connections in the specified managed cluster. The operation returns properties of each private endpoint connection.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionListResultInner> listAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.listAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.listAsync(String resourceGroupName, String resourceName, final ServiceCallback<PrivateEndpointConnectionListResultInner> serviceCallback)
  name: listAsync(String resourceGroupName, String resourceName, final ServiceCallback<PrivateEndpointConnectionListResultInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.listAsync(String resourceGroupName, String resourceName, final ServiceCallback<PrivateEndpointConnectionListResultInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner&text=PrivateEndpointConnectionListResultInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner&text=PrivateEndpointConnectionListResultInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of private endpoint connections in the specified managed cluster. Gets a list of private endpoint connections in the specified managed cluster. The operation returns properties of each private endpoint connection.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionListResultInner> listAsync(String resourceGroupName, String resourceName, final ServiceCallback<PrivateEndpointConnectionListResultInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.listAsync(String,String,final ServiceCallback<PrivateEndpointConnectionListResultInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.listWithServiceResponseAsync(String resourceGroupName, String resourceName)
  name: listWithServiceResponseAsync(String resourceGroupName, String resourceName)
  nameWithType: PrivateEndpointConnectionsInner.listWithServiceResponseAsync(String resourceGroupName, String resourceName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionListResultInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionListResultInner&text=PrivateEndpointConnectionListResultInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of private endpoint connections in the specified managed cluster. Gets a list of private endpoint connections in the specified managed cluster. The operation returns properties of each private endpoint connection.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<PrivateEndpointConnectionListResultInner>> listWithServiceResponseAsync(String resourceGroupName, String resourceName)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.listWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.update(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: update(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.update(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Update a private endpoint connection operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates a private endpoint connection. Updates a private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionInner update(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.update(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Update a private endpoint connection operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates a private endpoint connection. Updates a private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionInner> updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.updateAsync(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Update a private endpoint connection operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates a private endpoint connection. Updates a private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionInner> updateAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.updateAsync(String,String,String,PrivateEndpointConnectionInner,final ServiceCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: updateWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the managed cluster resource. </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the private endpoint connection. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the Update a private endpoint connection operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates a private endpoint connection. Updates a private endpoint connection in the specified managed cluster.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<PrivateEndpointConnectionInner>> updateWithServiceResponseAsync(String resourceGroupName, String resourceName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String,String,String,PrivateEndpointConnectionInner)
nameWithType: PrivateEndpointConnectionsInner
syntax: public class PrivateEndpointConnectionsInner
type: class
uid: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner
fullName: com.microsoft.azure.management.containerservice.implementation.PrivateEndpointConnectionsInner
name: PrivateEndpointConnectionsInner
package: com.microsoft.azure.management.containerservice.implementation
summary: <p>An instance of this class provides access to all the operations defined in PrivateEndpointConnections. </p>
metadata: {}
