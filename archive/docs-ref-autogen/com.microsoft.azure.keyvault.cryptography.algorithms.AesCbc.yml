### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.AesCbc(String name, int size)
  name: AesCbc(String name, int size)
  nameWithType: AesCbc.AesCbc(String name, int size)
  parameters:
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: size
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: protected AesCbc(String name, int size)
  uid: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.AesCbc(String,int)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.keyvault.cryptography.Algorithm" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.keyvault.cryptography.EncryptionAlgorithm" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm?alt=com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm&text=SymmetricEncryptionAlgorithm" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.keyvault.cryptography.Algorithm.Algorithm(String)
- com.microsoft.azure.keyvault.cryptography.EncryptionAlgorithm.EncryptionAlgorithm(String)
- com.microsoft.azure.keyvault.cryptography.Algorithm.getName()
- com.microsoft.azure.keyvault.cryptography.SymmetricEncryptionAlgorithm.SymmetricEncryptionAlgorithm(String)
methods:
- fullName: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
  name: CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
  nameWithType: AesCbc.CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
  parameters:
  - name: key
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: iv
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: authenticationData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: authenticationTag
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.keyvault.cryptography.ICryptoTransform?alt=com.microsoft.azure.keyvault.cryptography.ICryptoTransform&text=ICryptoTransform" data-throw-if-not-resolved="False"/>
  syntax: public ICryptoTransform CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag)
  uid: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateDecryptor(byte [],byte [],byte [],byte [])
- fullName: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
  name: CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
  nameWithType: AesCbc.CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
  parameters:
  - name: key
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: iv
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: authenticationData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: authenticationTag
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: provider
    type: <xref href="Provider?alt=Provider&text=Provider" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.keyvault.cryptography.ICryptoTransform?alt=com.microsoft.azure.keyvault.cryptography.ICryptoTransform&text=ICryptoTransform" data-throw-if-not-resolved="False"/>
  syntax: public ICryptoTransform CreateDecryptor(byte[] key, byte[] iv, byte[] authenticationData, byte[] authenticationTag, Provider provider)
  uid: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateDecryptor(byte [],byte [],byte [],byte [],Provider)
- fullName: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  name: CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  nameWithType: AesCbc.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  parameters:
  - name: key
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: iv
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: authenticationData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.keyvault.cryptography.ICryptoTransform?alt=com.microsoft.azure.keyvault.cryptography.ICryptoTransform&text=ICryptoTransform" data-throw-if-not-resolved="False"/>
  syntax: public ICryptoTransform CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData)
  uid: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateEncryptor(byte [],byte [],byte [])
- fullName: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  name: CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  nameWithType: AesCbc.CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  parameters:
  - name: key
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: iv
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: authenticationData
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - name: provider
    type: <xref href="Provider?alt=Provider&text=Provider" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.keyvault.cryptography.ICryptoTransform?alt=com.microsoft.azure.keyvault.cryptography.ICryptoTransform&text=ICryptoTransform" data-throw-if-not-resolved="False"/>
  syntax: public ICryptoTransform CreateEncryptor(byte[] key, byte[] iv, byte[] authenticationData, Provider provider)
  uid: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc.CreateEncryptor(byte [],byte [],byte [],Provider)
nameWithType: AesCbc
syntax: public class AesCbc extends SymmetricEncryptionAlgorithm
type: class
uid: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc
fullName: com.microsoft.azure.keyvault.cryptography.algorithms.AesCbc
name: AesCbc
package: com.microsoft.azure.keyvault.cryptography.algorithms
metadata: {}
