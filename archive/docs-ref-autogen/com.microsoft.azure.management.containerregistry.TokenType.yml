### YamlMime:JavaType
fields:
- field:
    type: final <xref href="com.microsoft.azure.management.containerregistry.TokenType?alt=com.microsoft.azure.management.containerregistry.TokenType&text=TokenType" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.containerregistry.TokenType.OAUTH
  name: OAUTH
  nameWithType: TokenType.OAUTH
  summary: <p>Static value OAuth for TokenType. </p>
  syntax: public static final TokenType OAUTH= fromString("OAuth")
  uid: com.microsoft.azure.management.containerregistry.TokenType.OAUTH
- field:
    type: final <xref href="com.microsoft.azure.management.containerregistry.TokenType?alt=com.microsoft.azure.management.containerregistry.TokenType&text=TokenType" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.containerregistry.TokenType.PAT
  name: PAT
  nameWithType: TokenType.PAT
  summary: <p>Static value PAT for TokenType. </p>
  syntax: public static final TokenType PAT= fromString("PAT")
  uid: com.microsoft.azure.management.containerregistry.TokenType.PAT
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum?alt=com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum&text=ExpandableStringEnum%3CT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.equals(Object)
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.fromString(String,Class<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.hashCode()
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.toString()
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.values(Class<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.withNameValue(String,T,Class<T>)
methods:
- fullName: com.microsoft.azure.management.containerregistry.TokenType.fromString(String name)
  name: fromString(String name)
  nameWithType: TokenType.fromString(String name)
  parameters:
  - description: <p>a name to look for </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the corresponding TokenType </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TokenType?alt=com.microsoft.azure.management.containerregistry.TokenType&text=TokenType" data-throw-if-not-resolved="False"/>
  summary: <p>Creates or finds a TokenType from its string representation. </p>
  syntax: public static TokenType fromString(String name)
  uid: com.microsoft.azure.management.containerregistry.TokenType.fromString(String)
- fullName: com.microsoft.azure.management.containerregistry.TokenType.values()
  name: values()
  nameWithType: TokenType.values()
  returns:
    description: <p>known TokenType values </p>
    type: Collection&lt;<xref href="com.microsoft.azure.management.containerregistry.TokenType?alt=com.microsoft.azure.management.containerregistry.TokenType&text=TokenType" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static Collection<TokenType> values()
  uid: com.microsoft.azure.management.containerregistry.TokenType.values()
nameWithType: TokenType
syntax: public class TokenType extends ExpandableStringEnum<TokenType>
type: class
uid: com.microsoft.azure.management.containerregistry.TokenType
fullName: com.microsoft.azure.management.containerregistry.TokenType
name: TokenType
package: com.microsoft.azure.management.containerregistry
summary: <p>Defines values for TokenType. </p>
metadata: {}
