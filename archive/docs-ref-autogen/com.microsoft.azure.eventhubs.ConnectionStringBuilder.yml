### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.ConnectionStringBuilder()
  name: ConnectionStringBuilder()
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder()
  summary: >-
    <p>Creates an empty <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref>. At minimum, a namespace name, an entity path, SAS key name, and SAS key need to be set before a valid connection string can be built. </p>

    <p>For advanced users, the following replacements can be done: <ul><li><p>An endpoint can be provided instead of a namespace name. </p></li><li><p>A SAS token can be provided instead of a SAS key name and SAS key. </p></li><li><p>Optionally, users can set an operation timeout instead of using the default value. </p></li></ul></p>
  syntax: public ConnectionStringBuilder()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.ConnectionStringBuilder()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.ConnectionStringBuilder(String connectionString)
  name: ConnectionStringBuilder(String connectionString)
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder(String connectionString)
  parameters:
  - description: <p>EventHubs ConnectionString </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalConnectionStringFormatException?alt=IllegalConnectionStringFormatException&text=IllegalConnectionStringFormatException" data-throw-if-not-resolved="False"/>
    description: <p>when the format of the ConnectionString is not valid </p>
  summary: >-
    <p>ConnectionString format: Endpoint=sb://namespace_DNS_Name;EntityPath=EVENT_HUB_NAME;SharedAccessKeyName=SHARED_ACCESS_KEY_NAME;SharedAccessKey=SHARED_ACCESS_KEY</p>

    <p></p>
  syntax: public ConnectionStringBuilder(String connectionString)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.ConnectionStringBuilder(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getEndpoint()
  name: getEndpoint()
  nameWithType: ConnectionStringBuilder.getEndpoint()
  returns:
    description: <p>The currently set endpoint </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the endpoint which can be used to connect to the EventHub instance.</p>

    <p></p>
  syntax: public URI getEndpoint()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getEndpoint()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getEventHubName()
  name: getEventHubName()
  nameWithType: ConnectionStringBuilder.getEventHubName()
  returns:
    description: <p>Entity Path </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the entity path value from the connection string.</p>

    <p></p>
  syntax: public String getEventHubName()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getEventHubName()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getOperationTimeout()
  name: getOperationTimeout()
  nameWithType: ConnectionStringBuilder.getOperationTimeout()
  returns:
    description: <p>operationTimeout </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>OperationTimeout is applied in erroneous situations to notify the caller about the relevant <xref uid="com.microsoft.azure.eventhubs.EventHubException" data-throw-if-not-resolved="false" data-raw-source="EventHubException"></xref></p>

    <p></p>
  syntax: public Duration getOperationTimeout()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getOperationTimeout()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getSasKey()
  name: getSasKey()
  nameWithType: ConnectionStringBuilder.getSasKey()
  returns:
    description: <p>Shared Access Signature key </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the shared access policy key value from the connection string</p>

    <p></p>
  syntax: public String getSasKey()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getSasKey()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getSasKeyName()
  name: getSasKeyName()
  nameWithType: ConnectionStringBuilder.getSasKeyName()
  returns:
    description: <p>Shared Access Signature key name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the shared access policy owner name from the connection string</p>

    <p></p>
  syntax: public String getSasKeyName()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getSasKeyName()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getSharedAccessSignature()
  name: getSharedAccessSignature()
  nameWithType: ConnectionStringBuilder.getSharedAccessSignature()
  returns:
    description: <p>Shared Access Signature </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the shared access signature (also referred as SAS Token) from the connection string</p>

    <p></p>
  syntax: public String getSharedAccessSignature()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getSharedAccessSignature()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getTransportType()
  name: getTransportType()
  nameWithType: ConnectionStringBuilder.getTransportType()
  returns:
    description: <p>transportType </p>
    type: <xref href="com.microsoft.azure.eventhubs.TransportType?alt=com.microsoft.azure.eventhubs.TransportType&text=TransportType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>TransportType on which all the communication for the EventHub objects created using this ConnectionString. Default value is <xref uid="com.microsoft.azure.eventhubs.TransportType.AMQP" data-throw-if-not-resolved="false" data-raw-source="TransportType#AMQP"></xref>.</p>

    <p></p>
  syntax: public TransportType getTransportType()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.getTransportType()
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setEndpoint(String namespaceName, String domainName)
  name: setEndpoint(String namespaceName, String domainName)
  nameWithType: ConnectionStringBuilder.setEndpoint(String namespaceName, String domainName)
  parameters:
  - description: <p>the name of the namespace to connect to. </p>
    name: namespaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>identifies the domain the namespace is located in. For non-public and national clouds, the domain will not be "servicebus.windows.net". Available options include:<ul><li><p>"servicebus.usgovcloudapi.net"</p></li><li><p>"servicebus.cloudapi.de"</p></li><li><p>"servicebus.chinacloudapi.cn" </p></li></ul></p>
    name: domainName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set an endpoint which can be used to connect to the EventHub instance.</p>

    <p></p>
  syntax: public ConnectionStringBuilder setEndpoint(String namespaceName, String domainName)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setEndpoint(String,String)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setEndpoint(URI endpoint)
  name: setEndpoint(URI endpoint)
  nameWithType: ConnectionStringBuilder.setEndpoint(URI endpoint)
  parameters:
  - description: '<p>is a combination of the namespace name and domain name. Together, these pieces make a valid endpoint. For example, the default domain name is "servicebus.windows.net", so a sample endpoint would look like this: "sb://namespace_name.servicebus.windows.net". </p>'
    name: endpoint
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set an endpoint which can be used to connect to the EventHub instance.</p>

    <p></p>
  syntax: public ConnectionStringBuilder setEndpoint(URI endpoint)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setEndpoint(URI)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setEventHubName(String eventHubName)
  name: setEventHubName(String eventHubName)
  nameWithType: ConnectionStringBuilder.setEventHubName(String eventHubName)
  parameters:
  - description: <p>the name of the Event Hub to connect to. </p>
    name: eventHubName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the entity path value from the connection string.</p>

    <p></p>
  syntax: public ConnectionStringBuilder setEventHubName(String eventHubName)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setEventHubName(String)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setNamespaceName(String namespaceName)
  name: setNamespaceName(String namespaceName)
  nameWithType: ConnectionStringBuilder.setNamespaceName(String namespaceName)
  parameters:
  - description: <p>the name of the namespace to connect to. </p>
    name: namespaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a namespace name which will be used to connect to an EventHubs instance. This method adds "servicebus.windows.net" as the default domain name.</p>

    <p></p>
  syntax: public ConnectionStringBuilder setNamespaceName(String namespaceName)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setNamespaceName(String)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setOperationTimeout(final Duration operationTimeout)
  name: setOperationTimeout(final Duration operationTimeout)
  nameWithType: ConnectionStringBuilder.setOperationTimeout(final Duration operationTimeout)
  parameters:
  - description: <p>Operation Timeout </p>
    name: operationTimeout
    type: <xref href="final+Duration?alt=final+Duration&text=final+Duration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the OperationTimeout value in the Connection String. This value will be used by all operations which uses this <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref>, unless explicitly over-ridden. </p>

    <p>ConnectionString with operationTimeout is not inter-operable between java and clients in other platforms.</p>

    <p></p>
  syntax: public ConnectionStringBuilder setOperationTimeout(final Duration operationTimeout)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setOperationTimeout(final Duration)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setSasKey(String sasKey)
  name: setSasKey(String sasKey)
  nameWithType: ConnectionStringBuilder.setSasKey(String sasKey)
  parameters:
  - description: <p>the SAS key </p>
    name: sasKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the shared access policy key value from the connection string</p>

    <p></p>
  syntax: public ConnectionStringBuilder setSasKey(String sasKey)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setSasKey(String)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setSasKeyName(String sasKeyName)
  name: setSasKeyName(String sasKeyName)
  nameWithType: ConnectionStringBuilder.setSasKeyName(String sasKeyName)
  parameters:
  - description: <p>the SAS key name </p>
    name: sasKeyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the shared access policy owner name from the connection string</p>

    <p></p>
  syntax: public ConnectionStringBuilder setSasKeyName(String sasKeyName)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setSasKeyName(String)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setSharedAccessSignature(String sharedAccessSignature)
  name: setSharedAccessSignature(String sharedAccessSignature)
  nameWithType: ConnectionStringBuilder.setSharedAccessSignature(String sharedAccessSignature)
  parameters:
  - description: <p>the shared access key signature </p>
    name: sharedAccessSignature
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the shared access signature (also referred as SAS Token) from the connection string</p>

    <p></p>
  syntax: public ConnectionStringBuilder setSharedAccessSignature(String sharedAccessSignature)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setSharedAccessSignature(String)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setTransportType(final TransportType transportType)
  name: setTransportType(final TransportType transportType)
  nameWithType: ConnectionStringBuilder.setTransportType(final TransportType transportType)
  parameters:
  - description: <p>Transport Type </p>
    name: transportType
    type: final <xref href="com.microsoft.azure.eventhubs.TransportType?alt=com.microsoft.azure.eventhubs.TransportType&text=TransportType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.eventhubs.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> instance being set. </p>
    type: <xref href="com.microsoft.azure.eventhubs.ConnectionStringBuilder?alt=com.microsoft.azure.eventhubs.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the TransportType value in the Connection String. If no TransportType is set, this defaults to <xref uid="com.microsoft.azure.eventhubs.TransportType.AMQP" data-throw-if-not-resolved="false" data-raw-source="TransportType#AMQP"></xref>.</p>

    <p></p>
  syntax: public ConnectionStringBuilder setTransportType(final TransportType transportType)
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.setTransportType(final TransportType)
- fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder.toString()
  name: toString()
  nameWithType: ConnectionStringBuilder.toString()
  returns:
    description: <p>connection string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns an inter-operable connection string that can be used to connect to EventHubs instances.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder.toString()
nameWithType: ConnectionStringBuilder
syntax: public class ConnectionStringBuilder
type: class
uid: com.microsoft.azure.eventhubs.ConnectionStringBuilder
fullName: com.microsoft.azure.eventhubs.ConnectionStringBuilder
name: ConnectionStringBuilder
package: com.microsoft.azure.eventhubs
summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.eventhubs.ConnectionStringBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConnectionStringBuilder\"></xref> can be used to construct a connection string which can establish communication with Event Hub instances. In addition to constructing a connection string, the <xref uid=\"com.microsoft.azure.eventhubs.ConnectionStringBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConnectionStringBuilder\"></xref> can be used to modify an existing connection string. </p>\r\n<p>Sample Code: <pre><code>// Construct a new connection string\r\n       ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder()\r\n           .setNamespaceName(\"EventHubsNamespaceName\")\r\n           .setEventHubName(\"EventHubsEntityName\")\r\n           .setSasKeyName(\"SharedAccessSignatureKeyName\")\r\n           .setSasKey(\"SharedAccessSignatureKey\")\r\n    \r\n    string connString = connectionStringBuilder.build();\r\n    \r\n    // Modify an existing connection string\r\n    ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(existingConnectionString)\r\n        .setEventHubName(\"SomeOtherEventHubsName\")\r\n        .setOperationTimeout(Duration.ofSeconds(30)\r\n    \r\n    string connString = connectionStringBuilder.build();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisting of key-value pairs separated by \";\". The basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - the URL that contains the EventHubs namespace </p></li><li><p>EntityPath - the EventHub name which you are connecting to </p></li><li><p>SharedAccessKeyName - the key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - the key for the corresponding shared access policy rule of the namespace or entity. </p></li></ul></p>"
metadata: {}
