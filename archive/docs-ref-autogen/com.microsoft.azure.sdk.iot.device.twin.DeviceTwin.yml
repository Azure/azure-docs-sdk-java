### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.DeviceTwin(InternalClient client)
  name: DeviceTwin(InternalClient client)
  nameWithType: DeviceTwin.DeviceTwin(InternalClient client)
  parameters:
  - name: client
    type: <xref href="com.microsoft.azure.sdk.iot.device.InternalClient?alt=com.microsoft.azure.sdk.iot.device.InternalClient&text=InternalClient" data-throw-if-not-resolved="False"/>
  syntax: public DeviceTwin(InternalClient client)
  uid: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.DeviceTwin(InternalClient)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.MessageCallback?alt=com.microsoft.azure.sdk.iot.device.MessageCallback&text=MessageCallback" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.getTwinAsync(GetTwinCorrelatingMessageCallback twinCallback, Object callbackContext)
  name: getTwinAsync(GetTwinCorrelatingMessageCallback twinCallback, Object callbackContext)
  nameWithType: DeviceTwin.getTwinAsync(GetTwinCorrelatingMessageCallback twinCallback, Object callbackContext)
  parameters:
  - name: twinCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.GetTwinCorrelatingMessageCallback?alt=com.microsoft.azure.sdk.iot.device.twin.GetTwinCorrelatingMessageCallback&text=GetTwinCorrelatingMessageCallback" data-throw-if-not-resolved="False"/>
  - name: callbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public void getTwinAsync(GetTwinCorrelatingMessageCallback twinCallback, Object callbackContext)
  uid: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.getTwinAsync(GetTwinCorrelatingMessageCallback,Object)
- fullName: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.onCloudToDeviceMessageReceived(Message message, Object callbackContext)
  name: onCloudToDeviceMessageReceived(Message message, Object callbackContext)
  nameWithType: DeviceTwin.onCloudToDeviceMessageReceived(Message message, Object callbackContext)
  overridden: com.microsoft.azure.sdk.iot.device.MessageCallback.onCloudToDeviceMessageReceived(Message,Object)
  parameters:
  - description: <p>the message. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  - description: <p>a custom context given by the developer.</p>
    name: callbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>whether the IoT Hub should <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.COMPLETE" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#COMPLETE"></xref>, <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.ABANDON" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#ABANDON"></xref>, or <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.REJECT" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#REJECT"></xref> the message. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubMessageResult?alt=com.microsoft.azure.sdk.iot.device.IotHubMessageResult&text=IotHubMessageResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes the callback. The callback should return a response that instructs an IoT Hub to <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.COMPLETE" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#COMPLETE"></xref>, <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.ABANDON" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#ABANDON"></xref>, or <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.REJECT" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#REJECT"></xref> the message.</p>

    <p>If this callback throws an exception it will not complete the message and can cause the messages to build up on the IoT hub until they expire. This can prevent further message delivery until all messages are expired or completed from IoT hub. </p>

    <p></p>
  syntax: public IotHubMessageResult onCloudToDeviceMessageReceived(Message message, Object callbackContext)
  uid: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.onCloudToDeviceMessageReceived(Message,Object)
- fullName: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.subscribeToDesiredPropertiesAsync(SubscriptionAcknowledgedCallback subscriptionAcknowledgedCallback, Object subscribeToDesiredPropertiesCallbackContext, DesiredPropertiesCallback desiredPropertiesCallback, Object desiredPropertiesUpdateCallbackContext)
  name: subscribeToDesiredPropertiesAsync(SubscriptionAcknowledgedCallback subscriptionAcknowledgedCallback, Object subscribeToDesiredPropertiesCallbackContext, DesiredPropertiesCallback desiredPropertiesCallback, Object desiredPropertiesUpdateCallbackContext)
  nameWithType: DeviceTwin.subscribeToDesiredPropertiesAsync(SubscriptionAcknowledgedCallback subscriptionAcknowledgedCallback, Object subscribeToDesiredPropertiesCallbackContext, DesiredPropertiesCallback desiredPropertiesCallback, Object desiredPropertiesUpdateCallbackContext)
  parameters:
  - name: subscriptionAcknowledgedCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.SubscriptionAcknowledgedCallback?alt=com.microsoft.azure.sdk.iot.device.twin.SubscriptionAcknowledgedCallback&text=SubscriptionAcknowledgedCallback" data-throw-if-not-resolved="False"/>
  - name: subscribeToDesiredPropertiesCallbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - name: desiredPropertiesCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.DesiredPropertiesCallback?alt=com.microsoft.azure.sdk.iot.device.twin.DesiredPropertiesCallback&text=DesiredPropertiesCallback" data-throw-if-not-resolved="False"/>
  - name: desiredPropertiesUpdateCallbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public void subscribeToDesiredPropertiesAsync(SubscriptionAcknowledgedCallback subscriptionAcknowledgedCallback, Object subscribeToDesiredPropertiesCallbackContext, DesiredPropertiesCallback desiredPropertiesCallback, Object desiredPropertiesUpdateCallbackContext)
  uid: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.subscribeToDesiredPropertiesAsync(SubscriptionAcknowledgedCallback,Object,DesiredPropertiesCallback,Object)
- fullName: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  name: updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  nameWithType: DeviceTwin.updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  parameters:
  - name: reportedProperties
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.TwinCollection?alt=com.microsoft.azure.sdk.iot.device.twin.TwinCollection&text=TwinCollection" data-throw-if-not-resolved="False"/>
  - name: reportedPropertiesUpdateCorrelatingMessageCallback
    type: <xref href="com.microsoft.azure.sdk.iot.device.twin.ReportedPropertiesUpdateCorrelatingMessageCallback?alt=com.microsoft.azure.sdk.iot.device.twin.ReportedPropertiesUpdateCorrelatingMessageCallback&text=ReportedPropertiesUpdateCorrelatingMessageCallback" data-throw-if-not-resolved="False"/>
  - name: callbackContext
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public void updateReportedPropertiesAsync(TwinCollection reportedProperties, ReportedPropertiesUpdateCorrelatingMessageCallback reportedPropertiesUpdateCorrelatingMessageCallback, Object callbackContext)
  uid: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin.updateReportedPropertiesAsync(TwinCollection,ReportedPropertiesUpdateCorrelatingMessageCallback,Object)
nameWithType: DeviceTwin
syntax: public class DeviceTwin implements MessageCallback
type: class
uid: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin
fullName: com.microsoft.azure.sdk.iot.device.twin.DeviceTwin
name: DeviceTwin
package: com.microsoft.azure.sdk.iot.device.twin
metadata: {}
