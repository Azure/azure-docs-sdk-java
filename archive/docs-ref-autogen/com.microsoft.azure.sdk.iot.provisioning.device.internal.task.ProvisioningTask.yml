### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.ProvisioningTask(ProvisioningDeviceClientConfig provisioningDeviceClientConfig, ProvisioningDeviceClientContract provisioningDeviceClientContract)
  name: ProvisioningTask(ProvisioningDeviceClientConfig provisioningDeviceClientConfig, ProvisioningDeviceClientContract provisioningDeviceClientContract)
  nameWithType: ProvisioningTask.ProvisioningTask(ProvisioningDeviceClientConfig provisioningDeviceClientConfig, ProvisioningDeviceClientContract provisioningDeviceClientContract)
  parameters:
  - description: <p>Config that contains details pertaining to Service </p>
    name: provisioningDeviceClientConfig
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.internal.ProvisioningDeviceClientConfig?alt=com.microsoft.azure.sdk.iot.provisioning.device.internal.ProvisioningDeviceClientConfig&text=ProvisioningDeviceClientConfig" data-throw-if-not-resolved="False"/>
  - description: <p>Contract with the service over the specified protocol </p>
    name: provisioningDeviceClientContract
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ProvisioningDeviceClientContract?alt=com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ProvisioningDeviceClientContract&text=ProvisioningDeviceClientContract" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="ProvisioningDeviceClientException?alt=ProvisioningDeviceClientException&text=ProvisioningDeviceClientException" data-throw-if-not-resolved="False"/>
    description: <p>If any of the input parameters are invalid then this exception is thrown </p>
  summary: <p>Constructor for creating a provisioning task </p>
  syntax: public ProvisioningTask(ProvisioningDeviceClientConfig provisioningDeviceClientConfig, ProvisioningDeviceClientContract provisioningDeviceClientContract)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.ProvisioningTask(ProvisioningDeviceClientConfig,ProvisioningDeviceClientContract)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.util.concurrent.Callable&lt;Object&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.call()
  name: call()
  nameWithType: ProvisioningTask.call()
  exceptions:
  - type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if any of the exception during execution is not handled. </p>
  returns:
    description: >-
      <p>Returns<code>nullÂ 

          </code></p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: <p>This method executes the State machine with the device goes through during registration. </p>
  syntax: public Object call()
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.call()
nameWithType: ProvisioningTask
syntax: public class ProvisioningTask
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask
fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask
name: ProvisioningTask
package: com.microsoft.azure.sdk.iot.provisioning.device.internal.task
metadata: {}
