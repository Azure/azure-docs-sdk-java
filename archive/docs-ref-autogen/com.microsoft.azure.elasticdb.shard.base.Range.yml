### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object low)
  name: Range(Object low)
  nameWithType: Range.Range(Object low)
  parameters:
  - description: <p>Low boundary value (inclusive). </p>
    name: low
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs range based on its low boundary value. The low boundary value is set to the one specified in <em>low</em>  while the high boundary value is set to maximum possible value i.e. +infinity.</p>

    <p></p>
  syntax: public Range(Object low)
  uid: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object)
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object low, Object high)
  name: Range(Object low, Object high)
  nameWithType: Range.Range(Object low, Object high)
  parameters:
  - description: <p>Low boundary value (inclusive). </p>
    name: low
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>High boundary value (exclusive). </p>
    name: high
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs range based on its low and high boundary values.</p>

    <p></p>
  syntax: public Range(Object low, Object high)
  uid: com.microsoft.azure.elasticdb.shard.base.Range.Range(Object,Object)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.equals(Object obj)
  name: equals(Object obj)
  nameWithType: Range.equals(Object obj)
  parameters:
  - description: <p>The object to compare with the current object. </p>
    name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if the specified object is equal to the current object; otherwise, false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Determines whether the specified object is equal to the current object.</p>

    <p></p>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.elasticdb.shard.base.Range.equals(Object)
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.equals(Range other)
  name: equals(Range other)
  nameWithType: Range.equals(Range other)
  parameters:
  - description: <p>Range to compare with. </p>
    name: other
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Range?alt=com.microsoft.azure.elasticdb.shard.base.Range&text=Range" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if same Range, false otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Performs equality comparison with another Range.</p>

    <p></p>
  syntax: public boolean equals(Range other)
  uid: com.microsoft.azure.elasticdb.shard.base.Range.equals(Range)
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.getHigh()
  name: getHigh()
  nameWithType: Range.getHigh()
  returns:
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public Object getHigh()
  uid: com.microsoft.azure.elasticdb.shard.base.Range.getHigh()
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.getLow()
  name: getLow()
  nameWithType: Range.getLow()
  returns:
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public Object getLow()
  uid: com.microsoft.azure.elasticdb.shard.base.Range.getLow()
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.getShardRange()
  name: getShardRange()
  nameWithType: Range.getShardRange()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardRange?alt=com.microsoft.azure.elasticdb.shard.base.ShardRange&text=ShardRange" data-throw-if-not-resolved="False"/>
  syntax: public ShardRange getShardRange()
  uid: com.microsoft.azure.elasticdb.shard.base.Range.getShardRange()
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.hashCode()
  name: hashCode()
  nameWithType: Range.hashCode()
  returns:
    description: <p>Hash code for the object. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Calculates the hash code for this instance.</p>

    <p></p>
  syntax: public int hashCode()
  uid: com.microsoft.azure.elasticdb.shard.base.Range.hashCode()
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.isHighMax()
  name: isHighMax()
  nameWithType: Range.isHighMax()
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isHighMax()
  uid: com.microsoft.azure.elasticdb.shard.base.Range.isHighMax()
- fullName: com.microsoft.azure.elasticdb.shard.base.Range.toString()
  name: toString()
  nameWithType: Range.toString()
  returns:
    description: <p>String representation of the object. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts the object to its string representation.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.elasticdb.shard.base.Range.toString()
nameWithType: Range
syntax: public class Range
type: class
uid: com.microsoft.azure.elasticdb.shard.base.Range
fullName: com.microsoft.azure.elasticdb.shard.base.Range
name: Range
package: com.microsoft.azure.elasticdb.shard.base
summary: <p>Represents a left-inclusive, right-exclusive range of values. </p>
metadata: {}
