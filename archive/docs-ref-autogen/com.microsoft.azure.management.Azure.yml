### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.Azure.accessManagement()
  name: accessManagement()
  nameWithType: Azure.accessManagement()
  returns:
    description: <p>entry point to authentication and authorization management in Azure </p>
    type: <xref href="com.microsoft.azure.management.AccessManagement?alt=com.microsoft.azure.management.AccessManagement&text=AccessManagement" data-throw-if-not-resolved="False"/>
  syntax: public AccessManagement accessManagement()
  uid: com.microsoft.azure.management.Azure.accessManagement()
- fullName: com.microsoft.azure.management.Azure.applicationGateways()
  name: applicationGateways()
  nameWithType: Azure.applicationGateways()
  returns:
    description: <p>entry point to managing application gateways </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGateways?alt=com.microsoft.azure.management.network.ApplicationGateways&text=ApplicationGateways" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGateways applicationGateways()
  uid: com.microsoft.azure.management.Azure.applicationGateways()
- fullName: com.microsoft.azure.management.Azure.appServices()
  name: appServices()
  nameWithType: Azure.appServices()
  returns:
    description: <p>entry point to managing app services. </p>
    type: <xref href="AppServiceManager?alt=AppServiceManager&text=AppServiceManager" data-throw-if-not-resolved="False"/>
  syntax: public AppServiceManager appServices()
  uid: com.microsoft.azure.management.Azure.appServices()
- fullName: com.microsoft.azure.management.Azure.authenticate(AzureTokenCredentials credentials)
  name: authenticate(AzureTokenCredentials credentials)
  nameWithType: Azure.authenticate(AzureTokenCredentials credentials)
  parameters:
  - description: <p>the credentials object </p>
    name: credentials
    type: <xref href="AzureTokenCredentials?alt=AzureTokenCredentials&text=AzureTokenCredentials" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the authenticated Azure client </p>
    type: <xref href="com.microsoft.azure.management.Azure.Authenticated?alt=com.microsoft.azure.management.Azure.Authenticated&text=Azure.Authenticated" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Authenticate to Azure using an Azure credentials object.</p>

    <p></p>
  syntax: public static Authenticated authenticate(AzureTokenCredentials credentials)
  uid: com.microsoft.azure.management.Azure.authenticate(AzureTokenCredentials)
- fullName: com.microsoft.azure.management.Azure.authenticate(File credentialsFile)
  name: authenticate(File credentialsFile)
  nameWithType: Azure.authenticate(File credentialsFile)
  parameters:
  - description: <p>the file containing the credentials in the standard Java properties file format, with the following keys:</p>
    name: credentialsFile
    type: <xref href="File?alt=File&text=File" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>exception thrown from file access </p>
  returns:
    description: <p>authenticated Azure client </p>
    type: <xref href="com.microsoft.azure.management.Azure.Authenticated?alt=com.microsoft.azure.management.Azure.Authenticated&text=Azure.Authenticated" data-throw-if-not-resolved="False"/>
  summary: <p>Authenticates API access using a properties file containing the required credentials. </p>
  syntax: public static Authenticated authenticate(File credentialsFile)
  uid: com.microsoft.azure.management.Azure.authenticate(File)
- fullName: com.microsoft.azure.management.Azure.authenticate(RestClient restClient, String tenantId)
  name: authenticate(RestClient restClient, String tenantId)
  nameWithType: Azure.authenticate(RestClient restClient, String tenantId)
  parameters:
  - description: <p>the RestClient configured with Azure authentication credentials </p>
    name: restClient
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  - description: <p>the tenantId in Active Directory </p>
    name: tenantId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>authenticated Azure client </p>
    type: <xref href="com.microsoft.azure.management.Azure.Authenticated?alt=com.microsoft.azure.management.Azure.Authenticated&text=Azure.Authenticated" data-throw-if-not-resolved="False"/>
  summary: <p>Authenticates API access using a RestClient instance. </p>
  syntax: public static Authenticated authenticate(RestClient restClient, String tenantId)
  uid: com.microsoft.azure.management.Azure.authenticate(RestClient,String)
- fullName: com.microsoft.azure.management.Azure.authenticate(RestClient restClient, String tenantId, String subscriptionId)
  name: authenticate(RestClient restClient, String tenantId, String subscriptionId)
  nameWithType: Azure.authenticate(RestClient restClient, String tenantId, String subscriptionId)
  parameters:
  - description: <p>the RestClient configured with Azure authentication credentials </p>
    name: restClient
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  - description: <p>the tenantId in Active Directory </p>
    name: tenantId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the ID of the subscription </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>authenticated Azure client </p>
    type: <xref href="com.microsoft.azure.management.Azure.Authenticated?alt=com.microsoft.azure.management.Azure.Authenticated&text=Azure.Authenticated" data-throw-if-not-resolved="False"/>
  summary: <p>Authenticates API access using a RestClient instance. </p>
  syntax: public static Authenticated authenticate(RestClient restClient, String tenantId, String subscriptionId)
  uid: com.microsoft.azure.management.Azure.authenticate(RestClient,String,String)
- fullName: com.microsoft.azure.management.Azure.availabilitySets()
  name: availabilitySets()
  nameWithType: Azure.availabilitySets()
  returns:
    description: <p>entry point to managing availability sets </p>
    type: <xref href="com.microsoft.azure.management.compute.AvailabilitySets?alt=com.microsoft.azure.management.compute.AvailabilitySets&text=AvailabilitySets" data-throw-if-not-resolved="False"/>
  syntax: public AvailabilitySets availabilitySets()
  uid: com.microsoft.azure.management.Azure.availabilitySets()
- fullName: com.microsoft.azure.management.Azure.batchAccounts()
  name: batchAccounts()
  nameWithType: Azure.batchAccounts()
  returns:
    description: <p>entry point to managing batch accounts. </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccounts?alt=com.microsoft.azure.management.batch.BatchAccounts&text=BatchAccounts" data-throw-if-not-resolved="False"/>
  syntax: public BatchAccounts batchAccounts()
  uid: com.microsoft.azure.management.Azure.batchAccounts()
- fullName: com.microsoft.azure.management.Azure.cdnProfiles()
  name: cdnProfiles()
  nameWithType: Azure.cdnProfiles()
  returns:
    description: <p>entry point to managing cdn manager profiles. </p>
    type: <xref href="com.microsoft.azure.management.cdn.CdnProfiles?alt=com.microsoft.azure.management.cdn.CdnProfiles&text=CdnProfiles" data-throw-if-not-resolved="False"/>
  syntax: public CdnProfiles cdnProfiles()
  uid: com.microsoft.azure.management.Azure.cdnProfiles()
- fullName: com.microsoft.azure.management.Azure.computeUsages()
  name: computeUsages()
  nameWithType: Azure.computeUsages()
  returns:
    description: <p>entry point to managing compute resource usages </p>
    type: <xref href="com.microsoft.azure.management.compute.ComputeUsages?alt=com.microsoft.azure.management.compute.ComputeUsages&text=ComputeUsages" data-throw-if-not-resolved="False"/>
  syntax: public ComputeUsages computeUsages()
  uid: com.microsoft.azure.management.Azure.computeUsages()
- fullName: com.microsoft.azure.management.Azure.configure()
  name: configure()
  nameWithType: Azure.configure()
  returns:
    description: <p>an interface allow configurations on the client. </p>
    type: <xref href="com.microsoft.azure.management.Azure.Configurable?alt=com.microsoft.azure.management.Azure.Configurable&text=Azure.Configurable" data-throw-if-not-resolved="False"/>
  syntax: public static Configurable configure()
  uid: com.microsoft.azure.management.Azure.configure()
- fullName: com.microsoft.azure.management.Azure.containerGroups()
  name: containerGroups()
  nameWithType: Azure.containerGroups()
  returns:
    description: <p>entry point to managing Azure Container Instances. </p>
    type: <xref href="com.microsoft.azure.management.containerinstance.ContainerGroups?alt=com.microsoft.azure.management.containerinstance.ContainerGroups&text=ContainerGroups" data-throw-if-not-resolved="False"/>
  syntax: public ContainerGroups containerGroups()
  uid: com.microsoft.azure.management.Azure.containerGroups()
- fullName: com.microsoft.azure.management.Azure.containerRegistries()
  name: containerRegistries()
  nameWithType: Azure.containerRegistries()
  returns:
    description: <p>entry point to managing Container Registries. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.Registries?alt=com.microsoft.azure.management.containerregistry.Registries&text=Registries" data-throw-if-not-resolved="False"/>
  syntax: public Registries containerRegistries()
  uid: com.microsoft.azure.management.Azure.containerRegistries()
- fullName: com.microsoft.azure.management.Azure.containerServices()
  name: containerServices()
  nameWithType: Azure.containerServices()
  returns:
    description: <p>entry point to managing Service Bus operations. </p>
    type: <xref href="com.microsoft.azure.management.compute.ContainerServices?alt=com.microsoft.azure.management.compute.ContainerServices&text=ContainerServices" data-throw-if-not-resolved="False"/>
  syntax: public ContainerServices containerServices()
  uid: com.microsoft.azure.management.Azure.containerServices()
- fullName: com.microsoft.azure.management.Azure.cosmosDBAccounts()
  name: cosmosDBAccounts()
  nameWithType: Azure.cosmosDBAccounts()
  returns:
    description: <p>entry point to managing Container Regsitries. </p>
    type: <xref href="com.microsoft.azure.management.cosmosdb.CosmosDBAccounts?alt=com.microsoft.azure.management.cosmosdb.CosmosDBAccounts&text=CosmosDBAccounts" data-throw-if-not-resolved="False"/>
  syntax: public CosmosDBAccounts cosmosDBAccounts()
  uid: com.microsoft.azure.management.Azure.cosmosDBAccounts()
- fullName: com.microsoft.azure.management.Azure.deployments()
  name: deployments()
  nameWithType: Azure.deployments()
  returns:
    description: <p>entry point to managing deployments </p>
    type: <xref href="com.microsoft.azure.management.resources.Deployments?alt=com.microsoft.azure.management.resources.Deployments&text=Deployments" data-throw-if-not-resolved="False"/>
  syntax: public Deployments deployments()
  uid: com.microsoft.azure.management.Azure.deployments()
- fullName: com.microsoft.azure.management.Azure.disks()
  name: disks()
  nameWithType: Azure.disks()
  returns:
    description: <p>entry point to managing managed disks </p>
    type: <xref href="com.microsoft.azure.management.compute.Disks?alt=com.microsoft.azure.management.compute.Disks&text=Disks" data-throw-if-not-resolved="False"/>
  syntax: public Disks disks()
  uid: com.microsoft.azure.management.Azure.disks()
- fullName: com.microsoft.azure.management.Azure.dnsZones()
  name: dnsZones()
  nameWithType: Azure.dnsZones()
  returns:
    description: <p>entry point to managing DNS zones. </p>
    type: <xref href="com.microsoft.azure.management.dns.DnsZones?alt=com.microsoft.azure.management.dns.DnsZones&text=DnsZones" data-throw-if-not-resolved="False"/>
  syntax: public DnsZones dnsZones()
  uid: com.microsoft.azure.management.Azure.dnsZones()
- fullName: com.microsoft.azure.management.Azure.features()
  name: features()
  nameWithType: Azure.features()
  returns:
    description: <p>entry point to managing features </p>
    type: <xref href="com.microsoft.azure.management.resources.Features?alt=com.microsoft.azure.management.resources.Features&text=Features" data-throw-if-not-resolved="False"/>
  syntax: public Features features()
  uid: com.microsoft.azure.management.Azure.features()
- fullName: com.microsoft.azure.management.Azure.genericResources()
  name: genericResources()
  nameWithType: Azure.genericResources()
  returns:
    description: <p>entry point to management generic resources </p>
    type: <xref href="com.microsoft.azure.management.resources.GenericResources?alt=com.microsoft.azure.management.resources.GenericResources&text=GenericResources" data-throw-if-not-resolved="False"/>
  syntax: public GenericResources genericResources()
  uid: com.microsoft.azure.management.Azure.genericResources()
- fullName: com.microsoft.azure.management.Azure.getCurrentSubscription()
  name: getCurrentSubscription()
  nameWithType: Azure.getCurrentSubscription()
  returns:
    description: <p>the currently selected subscription this client is authenticated to work with </p>
    type: <xref href="com.microsoft.azure.management.resources.Subscription?alt=com.microsoft.azure.management.resources.Subscription&text=Subscription" data-throw-if-not-resolved="False"/>
  syntax: public Subscription getCurrentSubscription()
  uid: com.microsoft.azure.management.Azure.getCurrentSubscription()
- fullName: com.microsoft.azure.management.Azure.loadBalancers()
  name: loadBalancers()
  nameWithType: Azure.loadBalancers()
  returns:
    description: <p>entry point to managing load balancers </p>
    type: <xref href="com.microsoft.azure.management.network.LoadBalancers?alt=com.microsoft.azure.management.network.LoadBalancers&text=LoadBalancers" data-throw-if-not-resolved="False"/>
  syntax: public LoadBalancers loadBalancers()
  uid: com.microsoft.azure.management.Azure.loadBalancers()
- fullName: com.microsoft.azure.management.Azure.localNetworkGateways()
  name: localNetworkGateways()
  nameWithType: Azure.localNetworkGateways()
  returns:
    description: <p>entry point to managing local network gateways </p>
    type: <xref href="com.microsoft.azure.management.network.LocalNetworkGateways?alt=com.microsoft.azure.management.network.LocalNetworkGateways&text=LocalNetworkGateways" data-throw-if-not-resolved="False"/>
  syntax: public LocalNetworkGateways localNetworkGateways()
  uid: com.microsoft.azure.management.Azure.localNetworkGateways()
- fullName: com.microsoft.azure.management.Azure.networkInterfaces()
  name: networkInterfaces()
  nameWithType: Azure.networkInterfaces()
  returns:
    description: <p>entry point to managing network interfaces </p>
    type: <xref href="com.microsoft.azure.management.network.NetworkInterfaces?alt=com.microsoft.azure.management.network.NetworkInterfaces&text=NetworkInterfaces" data-throw-if-not-resolved="False"/>
  syntax: public NetworkInterfaces networkInterfaces()
  uid: com.microsoft.azure.management.Azure.networkInterfaces()
- fullName: com.microsoft.azure.management.Azure.networks()
  name: networks()
  nameWithType: Azure.networks()
  returns:
    description: <p>entry point to managing virtual networks </p>
    type: <xref href="com.microsoft.azure.management.network.Networks?alt=com.microsoft.azure.management.network.Networks&text=Networks" data-throw-if-not-resolved="False"/>
  syntax: public Networks networks()
  uid: com.microsoft.azure.management.Azure.networks()
- fullName: com.microsoft.azure.management.Azure.networkSecurityGroups()
  name: networkSecurityGroups()
  nameWithType: Azure.networkSecurityGroups()
  returns:
    description: <p>entry point to managing network security groups </p>
    type: <xref href="com.microsoft.azure.management.network.NetworkSecurityGroups?alt=com.microsoft.azure.management.network.NetworkSecurityGroups&text=NetworkSecurityGroups" data-throw-if-not-resolved="False"/>
  syntax: public NetworkSecurityGroups networkSecurityGroups()
  uid: com.microsoft.azure.management.Azure.networkSecurityGroups()
- fullName: com.microsoft.azure.management.Azure.networkUsages()
  name: networkUsages()
  nameWithType: Azure.networkUsages()
  returns:
    description: <p>entry point to managing network resource usages </p>
    type: <xref href="com.microsoft.azure.management.network.NetworkUsages?alt=com.microsoft.azure.management.network.NetworkUsages&text=NetworkUsages" data-throw-if-not-resolved="False"/>
  syntax: public NetworkUsages networkUsages()
  uid: com.microsoft.azure.management.Azure.networkUsages()
- fullName: com.microsoft.azure.management.Azure.networkWatchers()
  name: networkWatchers()
  nameWithType: Azure.networkWatchers()
  returns:
    description: <p>entry point to managing network watchers </p>
    type: <xref href="com.microsoft.azure.management.network.NetworkWatchers?alt=com.microsoft.azure.management.network.NetworkWatchers&text=NetworkWatchers" data-throw-if-not-resolved="False"/>
  syntax: public NetworkWatchers networkWatchers()
  uid: com.microsoft.azure.management.Azure.networkWatchers()
- fullName: com.microsoft.azure.management.Azure.policyAssignments()
  name: policyAssignments()
  nameWithType: Azure.policyAssignments()
  returns:
    description: <p>entry point to managing policy assignments. </p>
    type: <xref href="com.microsoft.azure.management.resources.PolicyAssignments?alt=com.microsoft.azure.management.resources.PolicyAssignments&text=PolicyAssignments" data-throw-if-not-resolved="False"/>
  syntax: public PolicyAssignments policyAssignments()
  uid: com.microsoft.azure.management.Azure.policyAssignments()
- fullName: com.microsoft.azure.management.Azure.policyDefinitions()
  name: policyDefinitions()
  nameWithType: Azure.policyDefinitions()
  returns:
    description: <p>entry point to managing policy definitions. </p>
    type: <xref href="com.microsoft.azure.management.resources.PolicyDefinitions?alt=com.microsoft.azure.management.resources.PolicyDefinitions&text=PolicyDefinitions" data-throw-if-not-resolved="False"/>
  syntax: public PolicyDefinitions policyDefinitions()
  uid: com.microsoft.azure.management.Azure.policyDefinitions()
- fullName: com.microsoft.azure.management.Azure.providers()
  name: providers()
  nameWithType: Azure.providers()
  returns:
    description: <p>entry point to managing resource providers </p>
    type: <xref href="com.microsoft.azure.management.resources.Providers?alt=com.microsoft.azure.management.resources.Providers&text=Providers" data-throw-if-not-resolved="False"/>
  syntax: public Providers providers()
  uid: com.microsoft.azure.management.Azure.providers()
- fullName: com.microsoft.azure.management.Azure.publicIPAddresses()
  name: publicIPAddresses()
  nameWithType: Azure.publicIPAddresses()
  returns:
    description: <p>entry point to managing public IP addresses </p>
    type: <xref href="com.microsoft.azure.management.network.PublicIPAddresses?alt=com.microsoft.azure.management.network.PublicIPAddresses&text=PublicIPAddresses" data-throw-if-not-resolved="False"/>
  syntax: public PublicIPAddresses publicIPAddresses()
  uid: com.microsoft.azure.management.Azure.publicIPAddresses()
- fullName: com.microsoft.azure.management.Azure.redisCaches()
  name: redisCaches()
  nameWithType: Azure.redisCaches()
  returns:
    description: <p>entry point to managing Redis Caches. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCaches?alt=com.microsoft.azure.management.redis.RedisCaches&text=RedisCaches" data-throw-if-not-resolved="False"/>
  syntax: public RedisCaches redisCaches()
  uid: com.microsoft.azure.management.Azure.redisCaches()
- fullName: com.microsoft.azure.management.Azure.resourceGroups()
  name: resourceGroups()
  nameWithType: Azure.resourceGroups()
  returns:
    description: <p>entry point to managing resource groups </p>
    type: <xref href="com.microsoft.azure.management.resources.ResourceGroups?alt=com.microsoft.azure.management.resources.ResourceGroups&text=ResourceGroups" data-throw-if-not-resolved="False"/>
  syntax: public ResourceGroups resourceGroups()
  uid: com.microsoft.azure.management.Azure.resourceGroups()
- fullName: com.microsoft.azure.management.Azure.routeTables()
  name: routeTables()
  nameWithType: Azure.routeTables()
  returns:
    description: <p>entry point to managing route tables </p>
    type: <xref href="com.microsoft.azure.management.network.RouteTables?alt=com.microsoft.azure.management.network.RouteTables&text=RouteTables" data-throw-if-not-resolved="False"/>
  syntax: public RouteTables routeTables()
  uid: com.microsoft.azure.management.Azure.routeTables()
- fullName: com.microsoft.azure.management.Azure.searchServices()
  name: searchServices()
  nameWithType: Azure.searchServices()
  returns:
    description: <p>entry point to managing Search services. </p>
    type: <xref href="com.microsoft.azure.management.search.SearchServices?alt=com.microsoft.azure.management.search.SearchServices&text=SearchServices" data-throw-if-not-resolved="False"/>
  syntax: public SearchServices searchServices()
  uid: com.microsoft.azure.management.Azure.searchServices()
- fullName: com.microsoft.azure.management.Azure.serviceBusNamespaces()
  name: serviceBusNamespaces()
  nameWithType: Azure.serviceBusNamespaces()
  returns:
    description: <p>entry point to managing Service Bus. </p>
    type: <xref href="com.microsoft.azure.management.servicebus.ServiceBusNamespaces?alt=com.microsoft.azure.management.servicebus.ServiceBusNamespaces&text=ServiceBusNamespaces" data-throw-if-not-resolved="False"/>
  syntax: public ServiceBusNamespaces serviceBusNamespaces()
  uid: com.microsoft.azure.management.Azure.serviceBusNamespaces()
- fullName: com.microsoft.azure.management.Azure.snapshots()
  name: snapshots()
  nameWithType: Azure.snapshots()
  returns:
    description: <p>entry point to managing managed snapshots </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshots?alt=com.microsoft.azure.management.compute.Snapshots&text=Snapshots" data-throw-if-not-resolved="False"/>
  syntax: public Snapshots snapshots()
  uid: com.microsoft.azure.management.Azure.snapshots()
- fullName: com.microsoft.azure.management.Azure.sqlServers()
  name: sqlServers()
  nameWithType: Azure.sqlServers()
  returns:
    description: <p>entry point to managing Sql server. </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlServers?alt=com.microsoft.azure.management.sql.SqlServers&text=SqlServers" data-throw-if-not-resolved="False"/>
  syntax: public SqlServers sqlServers()
  uid: com.microsoft.azure.management.Azure.sqlServers()
- fullName: com.microsoft.azure.management.Azure.storageAccounts()
  name: storageAccounts()
  nameWithType: Azure.storageAccounts()
  returns:
    description: <p>entry point to managing storage accounts </p>
    type: <xref href="com.microsoft.azure.management.storage.StorageAccounts?alt=com.microsoft.azure.management.storage.StorageAccounts&text=StorageAccounts" data-throw-if-not-resolved="False"/>
  syntax: public StorageAccounts storageAccounts()
  uid: com.microsoft.azure.management.Azure.storageAccounts()
- fullName: com.microsoft.azure.management.Azure.storageUsages()
  name: storageUsages()
  nameWithType: Azure.storageUsages()
  returns:
    description: <p>entry point to managing storage account usages </p>
    type: <xref href="com.microsoft.azure.management.storage.Usages?alt=com.microsoft.azure.management.storage.Usages&text=Usages" data-throw-if-not-resolved="False"/>
  syntax: public Usages storageUsages()
  uid: com.microsoft.azure.management.Azure.storageUsages()
- fullName: com.microsoft.azure.management.Azure.subscriptionId()
  name: subscriptionId()
  nameWithType: Azure.subscriptionId()
  returns:
    description: <p>the currently selected subscription ID this client is authenticated to work with </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String subscriptionId()
  uid: com.microsoft.azure.management.Azure.subscriptionId()
- fullName: com.microsoft.azure.management.Azure.subscriptions()
  name: subscriptions()
  nameWithType: Azure.subscriptions()
  returns:
    description: <p>subscriptions that this authenticated client has access to </p>
    type: <xref href="com.microsoft.azure.management.resources.Subscriptions?alt=com.microsoft.azure.management.resources.Subscriptions&text=Subscriptions" data-throw-if-not-resolved="False"/>
  syntax: public Subscriptions subscriptions()
  uid: com.microsoft.azure.management.Azure.subscriptions()
- fullName: com.microsoft.azure.management.Azure.trafficManagerProfiles()
  name: trafficManagerProfiles()
  nameWithType: Azure.trafficManagerProfiles()
  returns:
    description: <p>entry point to managing traffic manager profiles. </p>
    type: <xref href="com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles?alt=com.microsoft.azure.management.trafficmanager.TrafficManagerProfiles&text=TrafficManagerProfiles" data-throw-if-not-resolved="False"/>
  syntax: public TrafficManagerProfiles trafficManagerProfiles()
  uid: com.microsoft.azure.management.Azure.trafficManagerProfiles()
- fullName: com.microsoft.azure.management.Azure.vaults()
  name: vaults()
  nameWithType: Azure.vaults()
  returns:
    description: <p>entry point to managing key vaults </p>
    type: <xref href="com.microsoft.azure.management.keyvault.Vaults?alt=com.microsoft.azure.management.keyvault.Vaults&text=Vaults" data-throw-if-not-resolved="False"/>
  syntax: public Vaults vaults()
  uid: com.microsoft.azure.management.Azure.vaults()
- fullName: com.microsoft.azure.management.Azure.virtualMachineCustomImages()
  name: virtualMachineCustomImages()
  nameWithType: Azure.virtualMachineCustomImages()
  returns:
    description: <p>entry point to managing virtual machine custom images </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineCustomImages?alt=com.microsoft.azure.management.compute.VirtualMachineCustomImages&text=VirtualMachineCustomImages" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineCustomImages virtualMachineCustomImages()
  uid: com.microsoft.azure.management.Azure.virtualMachineCustomImages()
- fullName: com.microsoft.azure.management.Azure.virtualMachineImages()
  name: virtualMachineImages()
  nameWithType: Azure.virtualMachineImages()
  returns:
    description: <p>entry point to managing virtual machine images </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineImages?alt=com.microsoft.azure.management.compute.VirtualMachineImages&text=VirtualMachineImages" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineImages virtualMachineImages()
  uid: com.microsoft.azure.management.Azure.virtualMachineImages()
- fullName: com.microsoft.azure.management.Azure.virtualMachines()
  name: virtualMachines()
  nameWithType: Azure.virtualMachines()
  returns:
    description: <p>entry point to managing virtual machines </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachines?alt=com.microsoft.azure.management.compute.VirtualMachines&text=VirtualMachines" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachines virtualMachines()
  uid: com.microsoft.azure.management.Azure.virtualMachines()
- fullName: com.microsoft.azure.management.Azure.virtualMachineScaleSets()
  name: virtualMachineScaleSets()
  nameWithType: Azure.virtualMachineScaleSets()
  returns:
    description: <p>entry point to managing virtual machine scale sets. </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineScaleSets?alt=com.microsoft.azure.management.compute.VirtualMachineScaleSets&text=VirtualMachineScaleSets" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineScaleSets virtualMachineScaleSets()
  uid: com.microsoft.azure.management.Azure.virtualMachineScaleSets()
- fullName: com.microsoft.azure.management.Azure.virtualNetworkGateways()
  name: virtualNetworkGateways()
  nameWithType: Azure.virtualNetworkGateways()
  returns:
    description: <p>entry point to managing virtual network gateways </p>
    type: <xref href="com.microsoft.azure.management.network.VirtualNetworkGateways?alt=com.microsoft.azure.management.network.VirtualNetworkGateways&text=VirtualNetworkGateways" data-throw-if-not-resolved="False"/>
  syntax: public VirtualNetworkGateways virtualNetworkGateways()
  uid: com.microsoft.azure.management.Azure.virtualNetworkGateways()
- fullName: com.microsoft.azure.management.Azure.webApps()
  name: webApps()
  nameWithType: Azure.webApps()
  returns:
    description: <p>entry point to managing web apps. </p>
    type: <xref href="com.microsoft.azure.management.appservice.WebApps?alt=com.microsoft.azure.management.appservice.WebApps&text=WebApps" data-throw-if-not-resolved="False"/>
  syntax: public WebApps webApps()
  uid: com.microsoft.azure.management.Azure.webApps()
nameWithType: Azure
syntax: public class Azure
type: class
uid: com.microsoft.azure.management.Azure
fullName: com.microsoft.azure.management.Azure
name: Azure
package: com.microsoft.azure.management
summary: <p>The entry point for accessing resource management APIs in Azure. </p>
metadata: {}
