### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.cosmosdb.Conflict.Conflict()
  name: Conflict()
  nameWithType: Conflict.Conflict()
  summary: <p>Initialize a conflict object. </p>
  syntax: public Conflict()
  uid: com.microsoft.azure.cosmosdb.Conflict.Conflict()
- fullName: com.microsoft.azure.cosmosdb.Conflict.Conflict(String jsonString)
  name: Conflict(String jsonString)
  nameWithType: Conflict.Conflict(String jsonString)
  parameters:
  - description: <p>the json string that represents the conflict. </p>
    name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initialize a conflict object from json string.</p>

    <p></p>
  syntax: public Conflict(String jsonString)
  uid: com.microsoft.azure.cosmosdb.Conflict.Conflict(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.JsonSerializable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
- com.microsoft.azure.cosmosdb.Resource.getETag()
- com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
- com.microsoft.azure.cosmosdb.Resource.getId()
- com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
- com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
- com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
- com.microsoft.azure.cosmosdb.Resource.getResourceId()
- com.microsoft.azure.cosmosdb.Resource.getSelfLink()
- com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
- com.microsoft.azure.cosmosdb.Resource.getTimestamp()
- com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
- com.microsoft.azure.cosmosdb.Resource.Resource(Resource)
- com.microsoft.azure.cosmosdb.Resource.Resource()
- com.microsoft.azure.cosmosdb.Resource.Resource(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.Resource.Resource(String)
- com.microsoft.azure.cosmosdb.Resource.setId(String)
- com.microsoft.azure.cosmosdb.Resource.setResourceId(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
- com.microsoft.azure.cosmosdb.JsonSerializable.toString()
methods:
- fullName: com.microsoft.azure.cosmosdb.Conflict.getOperationKind()
  name: getOperationKind()
  nameWithType: Conflict.getOperationKind()
  returns:
    description: <p>the operation kind. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the operation kind.</p>

    <p></p>
  syntax: public String getOperationKind()
  uid: com.microsoft.azure.cosmosdb.Conflict.getOperationKind()
- fullName: com.microsoft.azure.cosmosdb.Conflict.getResouceType()
  name: getResouceType()
  nameWithType: Conflict.getResouceType()
  returns:
    description: <p>the resource type. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the type of the conflicting resource.</p>

    <p></p>
  syntax: public String getResouceType()
  uid: com.microsoft.azure.cosmosdb.Conflict.getResouceType()
- fullName: com.microsoft.azure.cosmosdb.Conflict.getResource(Class<T> klass)
  name: getResource(Class<T> klass)
  nameWithType: Conflict.getResource(Class<T> klass)
  parameters:
  - description: <p>The returned type of conflicting resource. </p>
    name: klass
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The conflicting resource. </p>
    type: '&lt;T extends <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>&gt; T'
  summary: <p>Gets the conflicting resource in the Azure Cosmos DB service. </p>
  syntax: public <T extends Resource> T getResource(Class<T> klass)
  uid: com.microsoft.azure.cosmosdb.Conflict.getResource(Class<T>)
- fullName: com.microsoft.azure.cosmosdb.Conflict.getSourceResourceId()
  name: getSourceResourceId()
  nameWithType: Conflict.getSourceResourceId()
  returns:
    description: <p>resource Id for the conflict. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the resource ID for the conflict in the Azure Cosmos DB service. </p>
  syntax: public String getSourceResourceId()
  uid: com.microsoft.azure.cosmosdb.Conflict.getSourceResourceId()
nameWithType: Conflict
syntax: public class Conflict extends Resource
type: class
uid: com.microsoft.azure.cosmosdb.Conflict
fullName: com.microsoft.azure.cosmosdb.Conflict
name: Conflict
package: com.microsoft.azure.cosmosdb
summary: >-
  <p>Represents a conflict in the version of a particular resource in the Azure Cosmos DB database service. </p>

  <p>During rare failure scenarios, conflicts are generated for the documents in transit. Clients can inspect the respective conflict instances for resources and operations in conflict. </p>
metadata: {}
