### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ProxyResource" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.agentConfiguration()
  name: agentConfiguration()
  nameWithType: RunInner.agentConfiguration()
  returns:
    description: <p>the agentConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.AgentProperties?alt=com.microsoft.azure.management.containerregistry.AgentProperties&text=AgentProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the machine configuration of the run agent.</p>

    <p></p>
  syntax: public AgentProperties agentConfiguration()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.agentConfiguration()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.createTime()
  name: createTime()
  nameWithType: RunInner.createTime()
  returns:
    description: <p>the createTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time the run was scheduled.</p>

    <p></p>
  syntax: public DateTime createTime()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.createTime()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.finishTime()
  name: finishTime()
  nameWithType: RunInner.finishTime()
  returns:
    description: <p>the finishTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time the run finished.</p>

    <p></p>
  syntax: public DateTime finishTime()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.finishTime()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.imageUpdateTrigger()
  name: imageUpdateTrigger()
  nameWithType: RunInner.imageUpdateTrigger()
  returns:
    description: <p>the imageUpdateTrigger value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ImageUpdateTrigger?alt=com.microsoft.azure.management.containerregistry.ImageUpdateTrigger&text=ImageUpdateTrigger" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the image update trigger that caused the run. This is applicable if the task has base image trigger configured.</p>

    <p></p>
  syntax: public ImageUpdateTrigger imageUpdateTrigger()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.imageUpdateTrigger()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.isArchiveEnabled()
  name: isArchiveEnabled()
  nameWithType: RunInner.isArchiveEnabled()
  returns:
    description: <p>the isArchiveEnabled value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the value that indicates whether archiving is enabled or not.</p>

    <p></p>
  syntax: public Boolean isArchiveEnabled()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.isArchiveEnabled()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.lastUpdatedTime()
  name: lastUpdatedTime()
  nameWithType: RunInner.lastUpdatedTime()
  returns:
    description: <p>the lastUpdatedTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the last updated time for the run.</p>

    <p></p>
  syntax: public DateTime lastUpdatedTime()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.lastUpdatedTime()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.outputImages()
  name: outputImages()
  nameWithType: RunInner.outputImages()
  returns:
    description: <p>the outputImages value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.ImageDescriptor?alt=com.microsoft.azure.management.containerregistry.ImageDescriptor&text=ImageDescriptor" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the list of all images that were generated from the run. This is applicable if the run generates base image dependencies.</p>

    <p></p>
  syntax: public List<ImageDescriptor> outputImages()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.outputImages()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.platform()
  name: platform()
  nameWithType: RunInner.platform()
  returns:
    description: <p>the platform value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.PlatformProperties?alt=com.microsoft.azure.management.containerregistry.PlatformProperties&text=PlatformProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the platform properties against which the run will happen.</p>

    <p></p>
  syntax: public PlatformProperties platform()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.platform()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.provisioningState()
  name: provisioningState()
  nameWithType: RunInner.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ProvisioningState?alt=com.microsoft.azure.management.containerregistry.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the provisioning state of a run. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'.</p>

    <p></p>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.provisioningState()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.runId()
  name: runId()
  nameWithType: RunInner.runId()
  returns:
    description: <p>the runId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the unique identifier for the run.</p>

    <p></p>
  syntax: public String runId()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.runId()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.runType()
  name: runType()
  nameWithType: RunInner.runType()
  returns:
    description: <p>the runType value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunType?alt=com.microsoft.azure.management.containerregistry.RunType&text=RunType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type of run. Possible values include: 'QuickBuild', 'QuickRun', 'AutoBuild', 'AutoRun'.</p>

    <p></p>
  syntax: public RunType runType()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.runType()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.sourceTrigger()
  name: sourceTrigger()
  nameWithType: RunInner.sourceTrigger()
  returns:
    description: <p>the sourceTrigger value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTriggerDescriptor?alt=com.microsoft.azure.management.containerregistry.SourceTriggerDescriptor&text=SourceTriggerDescriptor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the source trigger that caused the run.</p>

    <p></p>
  syntax: public SourceTriggerDescriptor sourceTrigger()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.sourceTrigger()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.startTime()
  name: startTime()
  nameWithType: RunInner.startTime()
  returns:
    description: <p>the startTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time the run started.</p>

    <p></p>
  syntax: public DateTime startTime()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.startTime()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.status()
  name: status()
  nameWithType: RunInner.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunStatus?alt=com.microsoft.azure.management.containerregistry.RunStatus&text=RunStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current status of the run. Possible values include: 'Queued', 'Started', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Error', 'Timeout'.</p>

    <p></p>
  syntax: public RunStatus status()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.status()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.task()
  name: task()
  nameWithType: RunInner.task()
  returns:
    description: <p>the task value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the task against which run was scheduled.</p>

    <p></p>
  syntax: public String task()
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.task()
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withAgentConfiguration(AgentProperties agentConfiguration)
  name: withAgentConfiguration(AgentProperties agentConfiguration)
  nameWithType: RunInner.withAgentConfiguration(AgentProperties agentConfiguration)
  parameters:
  - description: <p>the agentConfiguration value to set </p>
    name: agentConfiguration
    type: <xref href="com.microsoft.azure.management.containerregistry.AgentProperties?alt=com.microsoft.azure.management.containerregistry.AgentProperties&text=AgentProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the machine configuration of the run agent.</p>

    <p></p>
  syntax: public RunInner withAgentConfiguration(AgentProperties agentConfiguration)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withAgentConfiguration(AgentProperties)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withCreateTime(DateTime createTime)
  name: withCreateTime(DateTime createTime)
  nameWithType: RunInner.withCreateTime(DateTime createTime)
  parameters:
  - description: <p>the createTime value to set </p>
    name: createTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the time the run was scheduled.</p>

    <p></p>
  syntax: public RunInner withCreateTime(DateTime createTime)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withCreateTime(DateTime)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withFinishTime(DateTime finishTime)
  name: withFinishTime(DateTime finishTime)
  nameWithType: RunInner.withFinishTime(DateTime finishTime)
  parameters:
  - description: <p>the finishTime value to set </p>
    name: finishTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the time the run finished.</p>

    <p></p>
  syntax: public RunInner withFinishTime(DateTime finishTime)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withFinishTime(DateTime)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withImageUpdateTrigger(ImageUpdateTrigger imageUpdateTrigger)
  name: withImageUpdateTrigger(ImageUpdateTrigger imageUpdateTrigger)
  nameWithType: RunInner.withImageUpdateTrigger(ImageUpdateTrigger imageUpdateTrigger)
  parameters:
  - description: <p>the imageUpdateTrigger value to set </p>
    name: imageUpdateTrigger
    type: <xref href="com.microsoft.azure.management.containerregistry.ImageUpdateTrigger?alt=com.microsoft.azure.management.containerregistry.ImageUpdateTrigger&text=ImageUpdateTrigger" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the image update trigger that caused the run. This is applicable if the task has base image trigger configured.</p>

    <p></p>
  syntax: public RunInner withImageUpdateTrigger(ImageUpdateTrigger imageUpdateTrigger)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withImageUpdateTrigger(ImageUpdateTrigger)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withIsArchiveEnabled(Boolean isArchiveEnabled)
  name: withIsArchiveEnabled(Boolean isArchiveEnabled)
  nameWithType: RunInner.withIsArchiveEnabled(Boolean isArchiveEnabled)
  parameters:
  - description: <p>the isArchiveEnabled value to set </p>
    name: isArchiveEnabled
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value that indicates whether archiving is enabled or not.</p>

    <p></p>
  syntax: public RunInner withIsArchiveEnabled(Boolean isArchiveEnabled)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withIsArchiveEnabled(Boolean)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withLastUpdatedTime(DateTime lastUpdatedTime)
  name: withLastUpdatedTime(DateTime lastUpdatedTime)
  nameWithType: RunInner.withLastUpdatedTime(DateTime lastUpdatedTime)
  parameters:
  - description: <p>the lastUpdatedTime value to set </p>
    name: lastUpdatedTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the last updated time for the run.</p>

    <p></p>
  syntax: public RunInner withLastUpdatedTime(DateTime lastUpdatedTime)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withLastUpdatedTime(DateTime)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withOutputImages(List<ImageDescriptor> outputImages)
  name: withOutputImages(List<ImageDescriptor> outputImages)
  nameWithType: RunInner.withOutputImages(List<ImageDescriptor> outputImages)
  parameters:
  - description: <p>the outputImages value to set </p>
    name: outputImages
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.ImageDescriptor?alt=com.microsoft.azure.management.containerregistry.ImageDescriptor&text=ImageDescriptor" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the list of all images that were generated from the run. This is applicable if the run generates base image dependencies.</p>

    <p></p>
  syntax: public RunInner withOutputImages(List<ImageDescriptor> outputImages)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withOutputImages(List<ImageDescriptor>)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withPlatform(PlatformProperties platform)
  name: withPlatform(PlatformProperties platform)
  nameWithType: RunInner.withPlatform(PlatformProperties platform)
  parameters:
  - description: <p>the platform value to set </p>
    name: platform
    type: <xref href="com.microsoft.azure.management.containerregistry.PlatformProperties?alt=com.microsoft.azure.management.containerregistry.PlatformProperties&text=PlatformProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the platform properties against which the run will happen.</p>

    <p></p>
  syntax: public RunInner withPlatform(PlatformProperties platform)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withPlatform(PlatformProperties)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withProvisioningState(ProvisioningState provisioningState)
  name: withProvisioningState(ProvisioningState provisioningState)
  nameWithType: RunInner.withProvisioningState(ProvisioningState provisioningState)
  parameters:
  - description: <p>the provisioningState value to set </p>
    name: provisioningState
    type: <xref href="com.microsoft.azure.management.containerregistry.ProvisioningState?alt=com.microsoft.azure.management.containerregistry.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the provisioning state of a run. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'.</p>

    <p></p>
  syntax: public RunInner withProvisioningState(ProvisioningState provisioningState)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withProvisioningState(ProvisioningState)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withRunId(String runId)
  name: withRunId(String runId)
  nameWithType: RunInner.withRunId(String runId)
  parameters:
  - description: <p>the runId value to set </p>
    name: runId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the unique identifier for the run.</p>

    <p></p>
  syntax: public RunInner withRunId(String runId)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withRunId(String)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withRunType(RunType runType)
  name: withRunType(RunType runType)
  nameWithType: RunInner.withRunType(RunType runType)
  parameters:
  - description: <p>the runType value to set </p>
    name: runType
    type: <xref href="com.microsoft.azure.management.containerregistry.RunType?alt=com.microsoft.azure.management.containerregistry.RunType&text=RunType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type of run. Possible values include: 'QuickBuild', 'QuickRun', 'AutoBuild', 'AutoRun'.</p>

    <p></p>
  syntax: public RunInner withRunType(RunType runType)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withRunType(RunType)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withSourceTrigger(SourceTriggerDescriptor sourceTrigger)
  name: withSourceTrigger(SourceTriggerDescriptor sourceTrigger)
  nameWithType: RunInner.withSourceTrigger(SourceTriggerDescriptor sourceTrigger)
  parameters:
  - description: <p>the sourceTrigger value to set </p>
    name: sourceTrigger
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceTriggerDescriptor?alt=com.microsoft.azure.management.containerregistry.SourceTriggerDescriptor&text=SourceTriggerDescriptor" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the source trigger that caused the run.</p>

    <p></p>
  syntax: public RunInner withSourceTrigger(SourceTriggerDescriptor sourceTrigger)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withSourceTrigger(SourceTriggerDescriptor)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withStartTime(DateTime startTime)
  name: withStartTime(DateTime startTime)
  nameWithType: RunInner.withStartTime(DateTime startTime)
  parameters:
  - description: <p>the startTime value to set </p>
    name: startTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the time the run started.</p>

    <p></p>
  syntax: public RunInner withStartTime(DateTime startTime)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withStartTime(DateTime)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withStatus(RunStatus status)
  name: withStatus(RunStatus status)
  nameWithType: RunInner.withStatus(RunStatus status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.management.containerregistry.RunStatus?alt=com.microsoft.azure.management.containerregistry.RunStatus&text=RunStatus" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the current status of the run. Possible values include: 'Queued', 'Started', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Error', 'Timeout'.</p>

    <p></p>
  syntax: public RunInner withStatus(RunStatus status)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withStatus(RunStatus)
- fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner.withTask(String task)
  name: withTask(String task)
  nameWithType: RunInner.withTask(String task)
  parameters:
  - description: <p>the task value to set </p>
    name: task
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.RunInner?alt=com.microsoft.azure.management.containerregistry.implementation.RunInner&text=RunInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the task against which run was scheduled.</p>

    <p></p>
  syntax: public RunInner withTask(String task)
  uid: com.microsoft.azure.management.containerregistry.implementation.RunInner.withTask(String)
nameWithType: RunInner
syntax: public class RunInner
type: class
uid: com.microsoft.azure.management.containerregistry.implementation.RunInner
fullName: com.microsoft.azure.management.containerregistry.implementation.RunInner
name: RunInner
package: com.microsoft.azure.management.containerregistry.implementation
summary: <p>Run resource properties. </p>
metadata: {}
