### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.UrlPathBuilder(String idScope)
  name: UrlPathBuilder(String idScope)
  nameWithType: UrlPathBuilder.UrlPathBuilder(String idScope)
  parameters:
  - description: >-
      <p>scope id for Provisioning service which cannot be<code>null 

          </code> or empty </p>
    name: idScope
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>is thrown when invalid parameters are given </p>
  summary: <p>Constructor for Url Path builder </p>
  syntax: public UrlPathBuilder(String idScope)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.UrlPathBuilder(String)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.UrlPathBuilder(String hostName, String idScope, ProvisioningDeviceClientTransportProtocol protocol)
  name: UrlPathBuilder(String hostName, String idScope, ProvisioningDeviceClientTransportProtocol protocol)
  nameWithType: UrlPathBuilder.UrlPathBuilder(String hostName, String idScope, ProvisioningDeviceClientTransportProtocol protocol)
  parameters:
  - description: >-
      <p>HostName for Provisioning service which cannot be<code>null 

          </code> or empty </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>scope id for Provisioning service which cannot be<code>null 

          </code> or empty </p>
    name: idScope
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>One of the valid protocols. Cannot be<code>null 

          </code></p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.device.ProvisioningDeviceClientTransportProtocol?alt=com.microsoft.azure.sdk.iot.provisioning.device.ProvisioningDeviceClientTransportProtocol&text=ProvisioningDeviceClientTransportProtocol" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>is thrown when invalid parameters are given </p>
  summary: <p>Constructor for Url Path builder </p>
  syntax: public UrlPathBuilder(String hostName, String idScope, ProvisioningDeviceClientTransportProtocol protocol)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.UrlPathBuilder(String,String,ProvisioningDeviceClientTransportProtocol)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.generateRegisterUrl(String registrationId)
  name: generateRegisterUrl(String registrationId)
  nameWithType: UrlPathBuilder.generateRegisterUrl(String registrationId)
  parameters:
  - description: >-
      <p>Id for the registration. Cannot be<code>null 

          </code> or empty </p>
    name: registrationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If string could not be generated </p>
  returns:
    description: <p>A string of format for the specified protocol </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Generates Register URL/Path for the specified protocol </p>
  syntax: public String generateRegisterUrl(String registrationId)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.generateRegisterUrl(String)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.generateRequestUrl(String registrationId, String operationsId)
  name: generateRequestUrl(String registrationId, String operationsId)
  nameWithType: UrlPathBuilder.generateRequestUrl(String registrationId, String operationsId)
  parameters:
  - description: >-
      <p>Id for the registration. Cannot be<code>null 

          </code> or empty </p>
    name: registrationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>Id for the Operation. Cannot be<code>null 

          </code> or empty </p>
    name: operationsId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If string could not be generated </p>
  returns:
    description: <p>A string of format for the specified protocol </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Generates Request URL/Path for the specififed protocol </p>
  syntax: public String generateRequestUrl(String registrationId, String operationsId)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.generateRequestUrl(String,String)
- fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.generateSasTokenUrl(String registrationId)
  name: generateSasTokenUrl(String registrationId)
  nameWithType: UrlPathBuilder.generateSasTokenUrl(String registrationId)
  parameters:
  - description: >-
      <p>Id for the registration. Cannot be<code>null 

          </code> or empty </p>
    name: registrationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A string of format </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Generates URL Encoded SAS Token </p>
  syntax: public String generateSasTokenUrl(String registrationId)
  uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder.generateSasTokenUrl(String)
nameWithType: UrlPathBuilder
syntax: public class UrlPathBuilder
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder
fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.UrlPathBuilder
name: UrlPathBuilder
package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract
metadata: {}
