### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.analytics.LogRecord.LogRecord()
  name: LogRecord()
  nameWithType: LogRecord.LogRecord()
  summary: <p>Initializes a new instance of the LogRecord class. </p>
  syntax: protected LogRecord()
  uid: com.microsoft.azure.storage.analytics.LogRecord.LogRecord()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.LogRecord(LogRecordStreamReader reader)
  name: LogRecord(LogRecordStreamReader reader)
  nameWithType: LogRecord.LogRecord(LogRecordStreamReader reader)
  parameters:
  - description: <p>the LogRecordStreamReader to use to populate the LogRecord. </p>
    name: reader
    type: <xref href="LogRecordStreamReader?alt=LogRecordStreamReader&text=LogRecordStreamReader" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  - type: <xref href="ParseException?alt=ParseException&text=ParseException" data-throw-if-not-resolved="False"/>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the LogRecord class using a LogRecordStreamReader to populate.</p>

    <p></p>
  syntax: protected LogRecord(LogRecordStreamReader reader)
  uid: com.microsoft.azure.storage.analytics.LogRecord.LogRecord(LogRecordStreamReader)
fields:
- field:
    type: <xref href="final+SimpleDateFormat?alt=final+SimpleDateFormat&text=final+SimpleDateFormat" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.analytics.LogRecord.LAST_MODIFIED_TIME_FORMAT
  name: LAST_MODIFIED_TIME_FORMAT
  nameWithType: LogRecord.LAST_MODIFIED_TIME_FORMAT
  summary: <p>Holds the date format for the LastModifiedTime field. </p>
  syntax: >-
    protected static final SimpleDateFormat LAST_MODIFIED_TIME_FORMAT= new SimpleDateFormat(
                "E, dd-MMM-yy HH:mm:ss 'GMT'")
  uid: com.microsoft.azure.storage.analytics.LogRecord.LAST_MODIFIED_TIME_FORMAT
- field:
    type: <xref href="final+SimpleDateFormat?alt=final+SimpleDateFormat&text=final+SimpleDateFormat" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.analytics.LogRecord.REQUEST_START_TIME_FORMAT
  name: REQUEST_START_TIME_FORMAT
  nameWithType: LogRecord.REQUEST_START_TIME_FORMAT
  summary: <p>Holds the date format for the RequestStartTime field. </p>
  syntax: >-
    protected static final SimpleDateFormat REQUEST_START_TIME_FORMAT= new SimpleDateFormat(
                "yyyy-MM-dd'T'HH:mm:ss.SSSSSSS'Z'")
  uid: com.microsoft.azure.storage.analytics.LogRecord.REQUEST_START_TIME_FORMAT
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getAuthenticationType()
  name: getAuthenticationType()
  nameWithType: LogRecord.getAuthenticationType()
  returns:
    description: <p>a <code>String</code> containing the AuthenticationType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets whether the request was authenticated, anonymous, or used Shared Access Signature (SAS).</p>

    <p></p>
  syntax: public String getAuthenticationType()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getAuthenticationType()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getClientRequestId()
  name: getClientRequestId()
  nameWithType: LogRecord.getClientRequestId()
  returns:
    description: <p>an encoded <code>String</code> containing the ClientRequestId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the x-ms-client-request-id header value included in the request.</p>

    <p></p>
  syntax: public String getClientRequestId()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getClientRequestId()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getConditionsUsed()
  name: getConditionsUsed()
  nameWithType: LogRecord.getConditionsUsed()
  returns:
    description: <p>an encoded <code>String</code> containing the ConditionsUsed value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets conditions used, as an encoded string semicolon-separated list in the form of ConditionName=value .</p>

    <p></p>
  syntax: public String getConditionsUsed()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getConditionsUsed()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getEndToEndLatencyInMS()
  name: getEndToEndLatencyInMS()
  nameWithType: LogRecord.getEndToEndLatencyInMS()
  returns:
    description: <p>an <code>Integer</code> containing the EndToEndLatencyInMS value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the total time in milliseconds to perform the requested operation, including the time to read the incoming request and send the response to the requester.</p>

    <p></p>
  syntax: public Integer getEndToEndLatencyInMS()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getEndToEndLatencyInMS()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getETagIdentifier()
  name: getETagIdentifier()
  nameWithType: LogRecord.getETagIdentifier()
  returns:
    description: <p>an encoded <code>String</code> containing the ETagIdentifier value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the ETag identifier for the returned object as an encoded string.</p>

    <p></p>
  syntax: public String getETagIdentifier()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getETagIdentifier()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getHttpStatusCode()
  name: getHttpStatusCode()
  nameWithType: LogRecord.getHttpStatusCode()
  returns:
    description: <p>a <code>String</code> containing the HttpStatusCode value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the HTTP status code for the request. If the request is interrupted, this value may be set to Unknown.</p>

    <p></p>
  syntax: public String getHttpStatusCode()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getHttpStatusCode()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getLastModifiedTime()
  name: getLastModifiedTime()
  nameWithType: LogRecord.getLastModifiedTime()
  returns:
    description: <p>a <code>Date</code> containing the LastModifiedTime value </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Last Modified Time (LMT) for the returned object as an encoded string. This field is null for operations that can return multiple objects.</p>

    <p></p>
  syntax: public Date getLastModifiedTime()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getLastModifiedTime()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getOperationCount()
  name: getOperationCount()
  nameWithType: LogRecord.getOperationCount()
  returns:
    description: <p>an <code>Integer</code> containing the OperationCount value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the number of each logged operation for a request, using an index of zero. Some requests require more than one operation, such as Copy Blob, though most perform just one operation.</p>

    <p></p>
  syntax: public Integer getOperationCount()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getOperationCount()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getOperationType()
  name: getOperationType()
  nameWithType: LogRecord.getOperationType()
  returns:
    description: <p>a <code>String</code> containing the OperationType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the type of REST operation performed.</p>

    <p></p>
  syntax: public String getOperationType()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getOperationType()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getOwnerAccountName()
  name: getOwnerAccountName()
  nameWithType: LogRecord.getOwnerAccountName()
  returns:
    description: <p>a <code>String</code> containing the OwnerAccountName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the account name of the service owner.</p>

    <p></p>
  syntax: public String getOwnerAccountName()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getOwnerAccountName()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getReferrerHeader()
  name: getReferrerHeader()
  nameWithType: LogRecord.getReferrerHeader()
  returns:
    description: <p>an encoded <code>String</code> containing the ReferrerHeader value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Referrer header value as an encoded string.</p>

    <p></p>
  syntax: public String getReferrerHeader()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getReferrerHeader()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestContentLength()
  name: getRequestContentLength()
  nameWithType: LogRecord.getRequestContentLength()
  returns:
    description: <p>a <code>Long</code> containing the RequestContentLength value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of the Content-Length header for the request sent to the storage service. If the request was successful, this value is equal to request-packet-size. If a request is unsuccessful, this value may not be equal to request-packet-size, or it may be null.</p>

    <p></p>
  syntax: public Long getRequestContentLength()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestContentLength()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestedObjectKey()
  name: getRequestedObjectKey()
  nameWithType: LogRecord.getRequestedObjectKey()
  returns:
    description: <p>a <code>String</code> containing the RequestedObjectKey value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the key of the requested object as an encoded string. This field will always use the account name, even if a custom domain name has been configured.</p>

    <p></p>
  syntax: public String getRequestedObjectKey()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestedObjectKey()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequesterAccountName()
  name: getRequesterAccountName()
  nameWithType: LogRecord.getRequesterAccountName()
  returns:
    description: <p>a <code>String</code> containing the RequesterAccountName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the account name making the request, if the request is authenticated. This field will be null for anonymous and SAS requests.</p>

    <p></p>
  syntax: public String getRequesterAccountName()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequesterAccountName()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequesterIPAddress()
  name: getRequesterIPAddress()
  nameWithType: LogRecord.getRequesterIPAddress()
  returns:
    description: <p>a <code>String</code> containing the RequesterIPAddress value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the IP address and port of the requester.</p>

    <p></p>
  syntax: public String getRequesterIPAddress()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequesterIPAddress()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestHeaderSize()
  name: getRequestHeaderSize()
  nameWithType: LogRecord.getRequestHeaderSize()
  returns:
    description: <p>a <code>Long</code> containing the RequestHeaderSize value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the size of the request header, in bytes. If a request is unsuccessful, this value may be null.</p>

    <p></p>
  syntax: public Long getRequestHeaderSize()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestHeaderSize()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestIdHeader()
  name: getRequestIdHeader()
  nameWithType: LogRecord.getRequestIdHeader()
  returns:
    description: <p>a <code>UUID</code> containing the RequestIdHeader value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the request ID assigned by the storage service. This is equivalent to the value of the x-ms-request-id header.</p>

    <p></p>
  syntax: public UUID getRequestIdHeader()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestIdHeader()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestMD5()
  name: getRequestMD5()
  nameWithType: LogRecord.getRequestMD5()
  returns:
    description: <p>an encoded <code>String</code> containing the RequestMD5 value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of either the Content-MD5 header or the x-ms-content-md5 header in the request as an encoded string. The MD5 hash value specified in this field represents the content in the request. This field can be null.</p>

    <p></p>
  syntax: public String getRequestMD5()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestMD5()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestPacketSize()
  name: getRequestPacketSize()
  nameWithType: LogRecord.getRequestPacketSize()
  returns:
    description: <p>a <code>Long</code> containing the RequestPacketSize value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the size of the request packets read by the storage service, in bytes. If a request is unsuccessful, this value may be null.</p>

    <p></p>
  syntax: public Long getRequestPacketSize()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestPacketSize()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestStartTime()
  name: getRequestStartTime()
  nameWithType: LogRecord.getRequestStartTime()
  returns:
    description: <p>a <code>String</code> containing the RequestStartTime value </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the time in UTC when the request was received by Storage Analytics.</p>

    <p></p>
  syntax: public Date getRequestStartTime()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestStartTime()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestStatus()
  name: getRequestStatus()
  nameWithType: LogRecord.getRequestStatus()
  returns:
    description: <p>a <code>String</code> containing the RequestStatus value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the status of the requested operation.</p>

    <p></p>
  syntax: public String getRequestStatus()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestStatus()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestUrl()
  name: getRequestUrl()
  nameWithType: LogRecord.getRequestUrl()
  returns:
    description: <p>a <code>URI</code> containing the RequestUrl value </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the complete URL of the request.</p>

    <p></p>
  syntax: public URI getRequestUrl()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestUrl()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getRequestVersionHeader()
  name: getRequestVersionHeader()
  nameWithType: LogRecord.getRequestVersionHeader()
  returns:
    description: <p>a <code>String</code> containing the RequestVersionHeader value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the storage service version specified when the request was made. This is equivalent to the value of the x-ms-version header.</p>

    <p></p>
  syntax: public String getRequestVersionHeader()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getRequestVersionHeader()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getResponseHeaderSize()
  name: getResponseHeaderSize()
  nameWithType: LogRecord.getResponseHeaderSize()
  returns:
    description: <p>a <code>Long</code> containing the ResponseHeaderSize value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the size of the response header, in bytes. If a request is unsuccessful, this value may be null.</p>

    <p></p>
  syntax: public Long getResponseHeaderSize()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getResponseHeaderSize()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getResponsePacketSize()
  name: getResponsePacketSize()
  nameWithType: LogRecord.getResponsePacketSize()
  returns:
    description: <p>a <code>Long</code> containing the ResponsePacketSize value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the size of the response packets written by the storage service, in bytes. If a request is unsuccessful, this value may be null.</p>

    <p></p>
  syntax: public Long getResponsePacketSize()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getResponsePacketSize()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getServerLatencyInMS()
  name: getServerLatencyInMS()
  nameWithType: LogRecord.getServerLatencyInMS()
  returns:
    description: <p>an <code>Integer</code> containing the ServerLatencyInMS value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the total time in milliseconds to perform the requested operation. This value does not include network latency (the time to read the incoming request and send the response to the requester).</p>

    <p></p>
  syntax: public Integer getServerLatencyInMS()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getServerLatencyInMS()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getServerMD5()
  name: getServerMD5()
  nameWithType: LogRecord.getServerMD5()
  returns:
    description: <p>an encoded <code>String</code> containing the ServerMD5 value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of the MD5 hash calculated by the storage service as an encoded string.</p>

    <p></p>
  syntax: public String getServerMD5()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getServerMD5()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getServiceType()
  name: getServiceType()
  nameWithType: LogRecord.getServiceType()
  returns:
    description: <p>a <code>String</code> containing the ServiceType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the requested storage service: blob, table, or queue.</p>

    <p></p>
  syntax: public String getServiceType()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getServiceType()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getUserAgentHeader()
  name: getUserAgentHeader()
  nameWithType: LogRecord.getUserAgentHeader()
  returns:
    description: <p>an encoded <code>String</code> containing the UserAgentHeader value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the User-Agent header value as an encoded string.</p>

    <p></p>
  syntax: public String getUserAgentHeader()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getUserAgentHeader()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.getVersionNumber()
  name: getVersionNumber()
  nameWithType: LogRecord.getVersionNumber()
  returns:
    description: <p>a <code>String</code> containing the VersionNumber value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the version of Storage Analytics Logging used to record the entry.</p>

    <p></p>
  syntax: public String getVersionNumber()
  uid: com.microsoft.azure.storage.analytics.LogRecord.getVersionNumber()
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setAuthenticationType(String authenticationType)
  name: setAuthenticationType(String authenticationType)
  nameWithType: LogRecord.setAuthenticationType(String authenticationType)
  parameters:
  - description: <p>the authenticationType to set </p>
    name: authenticationType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setAuthenticationType(String authenticationType)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setAuthenticationType(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setClientRequestId(String clientRequestId)
  name: setClientRequestId(String clientRequestId)
  nameWithType: LogRecord.setClientRequestId(String clientRequestId)
  parameters:
  - description: <p>the clientRequestId to set </p>
    name: clientRequestId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setClientRequestId(String clientRequestId)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setClientRequestId(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setConditionsUsed(String conditionsUsed)
  name: setConditionsUsed(String conditionsUsed)
  nameWithType: LogRecord.setConditionsUsed(String conditionsUsed)
  parameters:
  - description: <p>the conditionsUsed to set </p>
    name: conditionsUsed
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setConditionsUsed(String conditionsUsed)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setConditionsUsed(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setEndToEndLatencyInMS(Integer endToEndLatencyInMS)
  name: setEndToEndLatencyInMS(Integer endToEndLatencyInMS)
  nameWithType: LogRecord.setEndToEndLatencyInMS(Integer endToEndLatencyInMS)
  parameters:
  - description: <p>the endToEndLatencyInMS to set </p>
    name: endToEndLatencyInMS
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: protected void setEndToEndLatencyInMS(Integer endToEndLatencyInMS)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setEndToEndLatencyInMS(Integer)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setETagIdentifier(String eTagIdentifier)
  name: setETagIdentifier(String eTagIdentifier)
  nameWithType: LogRecord.setETagIdentifier(String eTagIdentifier)
  parameters:
  - description: <p>the eTagIdentifier to set </p>
    name: eTagIdentifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setETagIdentifier(String eTagIdentifier)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setETagIdentifier(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setHttpStatusCode(String httpStatusCode)
  name: setHttpStatusCode(String httpStatusCode)
  nameWithType: LogRecord.setHttpStatusCode(String httpStatusCode)
  parameters:
  - description: <p>the httpStatusCode to set </p>
    name: httpStatusCode
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setHttpStatusCode(String httpStatusCode)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setHttpStatusCode(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setLastModifiedTime(Date lastModifiedTime)
  name: setLastModifiedTime(Date lastModifiedTime)
  nameWithType: LogRecord.setLastModifiedTime(Date lastModifiedTime)
  parameters:
  - description: <p>the lastModifiedTime to set </p>
    name: lastModifiedTime
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  syntax: protected void setLastModifiedTime(Date lastModifiedTime)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setLastModifiedTime(Date)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setOperationCount(Integer operationCount)
  name: setOperationCount(Integer operationCount)
  nameWithType: LogRecord.setOperationCount(Integer operationCount)
  parameters:
  - description: <p>the operationCount to set </p>
    name: operationCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: protected void setOperationCount(Integer operationCount)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setOperationCount(Integer)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setOperationType(String operationType)
  name: setOperationType(String operationType)
  nameWithType: LogRecord.setOperationType(String operationType)
  parameters:
  - description: <p>the operationType to set </p>
    name: operationType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setOperationType(String operationType)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setOperationType(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setOwnerAccountName(String ownerAccountName)
  name: setOwnerAccountName(String ownerAccountName)
  nameWithType: LogRecord.setOwnerAccountName(String ownerAccountName)
  parameters:
  - description: <p>the ownerAccountName to set </p>
    name: ownerAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setOwnerAccountName(String ownerAccountName)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setOwnerAccountName(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setReferrerHeader(String referrerHeader)
  name: setReferrerHeader(String referrerHeader)
  nameWithType: LogRecord.setReferrerHeader(String referrerHeader)
  parameters:
  - description: <p>the referrerHeader to set </p>
    name: referrerHeader
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setReferrerHeader(String referrerHeader)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setReferrerHeader(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestContentLength(Long requestContentLength)
  name: setRequestContentLength(Long requestContentLength)
  nameWithType: LogRecord.setRequestContentLength(Long requestContentLength)
  parameters:
  - description: <p>the requestContentLength to set </p>
    name: requestContentLength
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestContentLength(Long requestContentLength)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestContentLength(Long)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestedObjectKey(String requestedObjectKey)
  name: setRequestedObjectKey(String requestedObjectKey)
  nameWithType: LogRecord.setRequestedObjectKey(String requestedObjectKey)
  parameters:
  - description: <p>the requestedObjectKey to set </p>
    name: requestedObjectKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestedObjectKey(String requestedObjectKey)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestedObjectKey(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequesterAccountName(String requesterAccountName)
  name: setRequesterAccountName(String requesterAccountName)
  nameWithType: LogRecord.setRequesterAccountName(String requesterAccountName)
  parameters:
  - description: <p>the requesterAccountName to set </p>
    name: requesterAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequesterAccountName(String requesterAccountName)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequesterAccountName(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequesterIPAddress(String requesterIPAddress)
  name: setRequesterIPAddress(String requesterIPAddress)
  nameWithType: LogRecord.setRequesterIPAddress(String requesterIPAddress)
  parameters:
  - description: <p>the requesterIPAddress to set </p>
    name: requesterIPAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequesterIPAddress(String requesterIPAddress)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequesterIPAddress(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestHeaderSize(Long requestHeaderSize)
  name: setRequestHeaderSize(Long requestHeaderSize)
  nameWithType: LogRecord.setRequestHeaderSize(Long requestHeaderSize)
  parameters:
  - description: <p>the requestHeaderSize to set </p>
    name: requestHeaderSize
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestHeaderSize(Long requestHeaderSize)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestHeaderSize(Long)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestIdHeader(UUID requestIdHeader)
  name: setRequestIdHeader(UUID requestIdHeader)
  nameWithType: LogRecord.setRequestIdHeader(UUID requestIdHeader)
  parameters:
  - description: <p>the requestIdHeader to set </p>
    name: requestIdHeader
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestIdHeader(UUID requestIdHeader)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestIdHeader(UUID)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestMD5(String requestMD5)
  name: setRequestMD5(String requestMD5)
  nameWithType: LogRecord.setRequestMD5(String requestMD5)
  parameters:
  - description: <p>the requestMD5 to set </p>
    name: requestMD5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestMD5(String requestMD5)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestMD5(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestPacketSize(Long requestPacketSize)
  name: setRequestPacketSize(Long requestPacketSize)
  nameWithType: LogRecord.setRequestPacketSize(Long requestPacketSize)
  parameters:
  - description: <p>the requestPacketSize to set </p>
    name: requestPacketSize
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestPacketSize(Long requestPacketSize)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestPacketSize(Long)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestStartTime(Date requestStartTime)
  name: setRequestStartTime(Date requestStartTime)
  nameWithType: LogRecord.setRequestStartTime(Date requestStartTime)
  parameters:
  - description: <p>the requestStartTime to set </p>
    name: requestStartTime
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestStartTime(Date requestStartTime)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestStartTime(Date)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestStatus(String requestStatus)
  name: setRequestStatus(String requestStatus)
  nameWithType: LogRecord.setRequestStatus(String requestStatus)
  parameters:
  - description: <p>the requestStatus to set </p>
    name: requestStatus
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestStatus(String requestStatus)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestStatus(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestUrl(URI requestUrl)
  name: setRequestUrl(URI requestUrl)
  nameWithType: LogRecord.setRequestUrl(URI requestUrl)
  parameters:
  - description: <p>the requestUrl to set </p>
    name: requestUrl
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestUrl(URI requestUrl)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestUrl(URI)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setRequestVersionHeader(String requestVersionHeader)
  name: setRequestVersionHeader(String requestVersionHeader)
  nameWithType: LogRecord.setRequestVersionHeader(String requestVersionHeader)
  parameters:
  - description: <p>the requestVersionHeader to set </p>
    name: requestVersionHeader
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setRequestVersionHeader(String requestVersionHeader)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setRequestVersionHeader(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setResponseHeaderSize(Long responseHeaderSize)
  name: setResponseHeaderSize(Long responseHeaderSize)
  nameWithType: LogRecord.setResponseHeaderSize(Long responseHeaderSize)
  parameters:
  - description: <p>the responseHeaderSize to set </p>
    name: responseHeaderSize
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  syntax: protected void setResponseHeaderSize(Long responseHeaderSize)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setResponseHeaderSize(Long)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setResponsePacketSize(Long responsePacketSize)
  name: setResponsePacketSize(Long responsePacketSize)
  nameWithType: LogRecord.setResponsePacketSize(Long responsePacketSize)
  parameters:
  - description: <p>the responsePacketSize to set </p>
    name: responsePacketSize
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  syntax: protected void setResponsePacketSize(Long responsePacketSize)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setResponsePacketSize(Long)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setServerLatencyInMS(Integer serverLatencyInMS)
  name: setServerLatencyInMS(Integer serverLatencyInMS)
  nameWithType: LogRecord.setServerLatencyInMS(Integer serverLatencyInMS)
  parameters:
  - description: <p>the serverLatencyInMS to set </p>
    name: serverLatencyInMS
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: protected void setServerLatencyInMS(Integer serverLatencyInMS)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setServerLatencyInMS(Integer)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setServerMD5(String serverMD5)
  name: setServerMD5(String serverMD5)
  nameWithType: LogRecord.setServerMD5(String serverMD5)
  parameters:
  - description: <p>the serverMD5 to set </p>
    name: serverMD5
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setServerMD5(String serverMD5)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setServerMD5(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setServiceType(String serviceType)
  name: setServiceType(String serviceType)
  nameWithType: LogRecord.setServiceType(String serviceType)
  parameters:
  - description: <p>the serviceType to set </p>
    name: serviceType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setServiceType(String serviceType)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setServiceType(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setUserAgentHeader(String userAgentHeader)
  name: setUserAgentHeader(String userAgentHeader)
  nameWithType: LogRecord.setUserAgentHeader(String userAgentHeader)
  parameters:
  - description: <p>the userAgentHeader to set </p>
    name: userAgentHeader
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setUserAgentHeader(String userAgentHeader)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setUserAgentHeader(String)
- fullName: com.microsoft.azure.storage.analytics.LogRecord.setVersionNumber(String versionNumber)
  name: setVersionNumber(String versionNumber)
  nameWithType: LogRecord.setVersionNumber(String versionNumber)
  parameters:
  - description: <p>the versionNumber to set </p>
    name: versionNumber
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected void setVersionNumber(String versionNumber)
  uid: com.microsoft.azure.storage.analytics.LogRecord.setVersionNumber(String)
nameWithType: LogRecord
syntax: public class LogRecord
type: class
uid: com.microsoft.azure.storage.analytics.LogRecord
fullName: com.microsoft.azure.storage.analytics.LogRecord
name: LogRecord
package: com.microsoft.azure.storage.analytics
summary: <p>Represents a Storage Analytics Log record entry. </p>
metadata: {}
