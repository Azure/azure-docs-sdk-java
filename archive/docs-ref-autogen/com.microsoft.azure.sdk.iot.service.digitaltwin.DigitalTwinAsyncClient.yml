### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String connectionString)
  name: DigitalTwinAsyncClient(String connectionString)
  nameWithType: DigitalTwinAsyncClient.DigitalTwinAsyncClient(String connectionString)
  parameters:
  - description: <p>The IoTHub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an implementation instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwins"></xref> that is used to invoke the Digital Twin features</p>

    <p></p>
  syntax: public DigitalTwinAsyncClient(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential)
  name: DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential)
  nameWithType: DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an implementation instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwins"></xref> that is used to invoke the Digital Twin features</p>

    <p></p>
  syntax: public DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String,AzureSasCredential)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential, DigitalTwinClientOptions options)
  name: DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential, DigitalTwinClientOptions options)
  nameWithType: DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential, DigitalTwinClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The optional settings for this client. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClientOptions?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClientOptions&text=DigitalTwinClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an implementation instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwins"></xref> that is used to invoke the Digital Twin features</p>

    <p></p>
  syntax: public DigitalTwinAsyncClient(String hostName, AzureSasCredential azureSasCredential, DigitalTwinClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String,AzureSasCredential,DigitalTwinClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String connectionString, DigitalTwinClientOptions options)
  name: DigitalTwinAsyncClient(String connectionString, DigitalTwinClientOptions options)
  nameWithType: DigitalTwinAsyncClient.DigitalTwinAsyncClient(String connectionString, DigitalTwinClientOptions options)
  parameters:
  - description: <p>The IoTHub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional settings for this client. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClientOptions?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClientOptions&text=DigitalTwinClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an implementation instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwins"></xref> that is used to invoke the Digital Twin features</p>

    <p></p>
  syntax: public DigitalTwinAsyncClient(String connectionString, DigitalTwinClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String,DigitalTwinClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, TokenCredential credential)
  name: DigitalTwinAsyncClient(String hostName, TokenCredential credential)
  nameWithType: DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, TokenCredential credential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an implementation instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwins"></xref> that is used to invoke the Digital Twin features</p>

    <p></p>
  syntax: public DigitalTwinAsyncClient(String hostName, TokenCredential credential)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String,TokenCredential)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, TokenCredential credential, DigitalTwinClientOptions options)
  name: DigitalTwinAsyncClient(String hostName, TokenCredential credential, DigitalTwinClientOptions options)
  nameWithType: DigitalTwinAsyncClient.DigitalTwinAsyncClient(String hostName, TokenCredential credential, DigitalTwinClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The optional settings for this client. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClientOptions?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinClientOptions&text=DigitalTwinClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an implementation instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwins"></xref> that is used to invoke the Digital Twin features</p>

    <p></p>
  syntax: public DigitalTwinAsyncClient(String hostName, TokenCredential credential, DigitalTwinClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.DigitalTwinAsyncClient(String,TokenCredential,DigitalTwinClientOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.createFromConnectionString(String connectionString)
  name: createFromConnectionString(String connectionString)
  nameWithType: DigitalTwinAsyncClient.createFromConnectionString(String connectionString)
  parameters:
  - description: <p>The IoTHub connection string </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The instantiated DigitalTwinAsyncClient. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient&text=DigitalTwinAsyncClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an implementation instance of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwins"></xref> that is used to invoke the Digital Twin features</p>

    <p></p>
  syntax: public static DigitalTwinAsyncClient createFromConnectionString(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.createFromConnectionString(String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwin(String digitalTwinId, Class<T> clazz)
  name: getDigitalTwin(String digitalTwinId, Class<T> clazz)
  nameWithType: DigitalTwinAsyncClient.getDigitalTwin(String digitalTwinId, Class<T> clazz)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The class to deserialize the application/json into. </p>
    name: clazz
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The application/json of the digital twin. </p>
    type: <xref href="%3CT%3E+Observable%3CT%3E?alt=%3CT%3E+Observable%3CT%3E&text=%3CT%3E+Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Gets a digital twin. </p>
  syntax: public <T> Observable<T> getDigitalTwin(String digitalTwinId, Class<T> clazz)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwin(String,Class<T>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
  name: getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
  nameWithType: DigitalTwinAsyncClient.getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The class to deserialize the application/json into. </p>
    name: clazz
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> representing deserialized application/json of the digital twin with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinGetHeaders"></xref>. </p>
    type: '&lt;T&gt; Observable&lt;ServiceResponseWithHeaders&lt;T, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders&text=DigitalTwinGetHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;'
  summary: <p>Gets a digital twin. </p>
  syntax: public <T> Observable<ServiceResponseWithHeaders<T, DigitalTwinGetHeaders>> getDigitalTwinWithResponse(String digitalTwinId, Class<T> clazz)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwinWithResponse(String,Class<T>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeCommand(String digitalTwinId, String commandName)
  name: invokeCommand(String digitalTwinId, String commandName)
  nameWithType: DigitalTwinAsyncClient.invokeCommand(String digitalTwinId, String commandName)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Invoke a command on a digital twin. </p>
  syntax: public Observable<DigitalTwinCommandResponse> invokeCommand(String digitalTwinId, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeCommand(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeCommand(String digitalTwinId, String commandName, String payload)
  name: invokeCommand(String digitalTwinId, String commandName, String payload)
  nameWithType: DigitalTwinAsyncClient.invokeCommand(String digitalTwinId, String commandName, String payload)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command payload. </p>
    name: payload
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Invoke a command on a digital twin. </p>
  syntax: public Observable<DigitalTwinCommandResponse> invokeCommand(String digitalTwinId, String commandName, String payload)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeCommand(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  name: invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  nameWithType: DigitalTwinAsyncClient.invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command payload. </p>
    name: payload
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional settings for this request. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions&text=DigitalTwinInvokeCommandRequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinInvokeRootLevelCommandHeaders"></xref> and <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders&text=DigitalTwinInvokeCommandHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: <p>Invoke a command on a digital twin. </p>
  syntax: public Observable<ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders>> invokeCommandWithResponse(String digitalTwinId, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeCommandWithResponse(String,String,String,DigitalTwinInvokeCommandRequestOptions)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  name: invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  nameWithType: DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The component name under which the command is defined. </p>
    name: componentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Invoke a command on a digital twin component. </p>
  syntax: public Observable<DigitalTwinCommandResponse> invokeComponentCommand(String digitalTwinId, String componentName, String commandName)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  name: invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  nameWithType: DigitalTwinAsyncClient.invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The component name under which the command is defined. </p>
    name: componentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command payload. </p>
    name: payload
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Invoke a command on a digital twin component. </p>
  syntax: public Observable<DigitalTwinCommandResponse> invokeComponentCommand(String digitalTwinId, String componentName, String commandName, String payload)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommand(String,String,String,String)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  name: invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  nameWithType: DigitalTwinAsyncClient.invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The component name under which the command is defined. </p>
    name: componentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command to be invoked. </p>
    name: commandName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The command payload. </p>
    name: payload
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional settings for this request. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandRequestOptions&text=DigitalTwinInvokeCommandRequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinInvokeRootLevelCommandHeaders"></xref> and <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinCommandResponse"></xref> which contains the application/json command invocation response. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinCommandResponse&text=DigitalTwinCommandResponse" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinInvokeCommandHeaders&text=DigitalTwinInvokeCommandHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: <p>Invoke a command on a digital twin component. </p>
  syntax: public Observable<ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders>> invokeComponentCommandWithResponse(String digitalTwinId, String componentName, String commandName, String payload, DigitalTwinInvokeCommandRequestOptions options)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.invokeComponentCommandWithResponse(String,String,String,String,DigitalTwinInvokeCommandRequestOptions)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  name: updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  nameWithType: DigitalTwinAsyncClient.updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The JSON patch to apply to the specified digital twin. This argument can be created using <xref uid="com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility" data-throw-if-not-resolved="false" data-raw-source="UpdateOperationUtility"></xref>. </p>
    name: digitalTwinUpdateOperations
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>void. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Updates a digital twin. </p>
  syntax: public Observable<Void> updateDigitalTwin(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwin(String,List<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  name: updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  nameWithType: DigitalTwinAsyncClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The JSON patch to apply to the specified digital twin. This argument can be created using <xref uid="com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility" data-throw-if-not-resolved="false" data-raw-source="UpdateOperationUtility"></xref>. </p>
    name: digitalTwinUpdateOperations
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinUpdateHeaders"></xref>. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders&text=DigitalTwinUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: <p>Updates a digital twin. </p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders>> updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwinWithResponse(String,List<Object>)
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
  name: updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
  nameWithType: DigitalTwinAsyncClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The JSON patch to apply to the specified digital twin. This argument can be created using <xref uid="com.microsoft.azure.sdk.iot.service.digitaltwin.UpdateOperationUtility" data-throw-if-not-resolved="false" data-raw-source="UpdateOperationUtility"></xref>. </p>
    name: digitalTwinUpdateOperations
    type: <xref href="List%3CObject%3E?alt=List%3CObject%3E&text=List%3CObject%3E" data-throw-if-not-resolved="False"/>
  - description: <p>The optional settings for this request. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinUpdateRequestOptions?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.models.DigitalTwinUpdateRequestOptions&text=DigitalTwinUpdateRequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> with <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DigitalTwinUpdateHeaders"></xref>. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinUpdateHeaders&text=DigitalTwinUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: <p>Updates a digital twin. </p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, DigitalTwinUpdateHeaders>> updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, DigitalTwinUpdateRequestOptions options)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.updateDigitalTwinWithResponse(String,List<Object>,DigitalTwinUpdateRequestOptions)
nameWithType: DigitalTwinAsyncClient
syntax: public class DigitalTwinAsyncClient
type: class
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient
name: DigitalTwinAsyncClient
package: com.microsoft.azure.sdk.iot.service.digitaltwin
summary: <p>The Digital Twins Service Client contains asynchronous methods to retrieve and update digital twin information, and invoke commands on a digital twin device. </p>
metadata: {}
