### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.attributes()
  name: attributes()
  nameWithType: KeyBundle.attributes()
  returns:
    description: <p>the attributes value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyAttributes?alt=com.microsoft.azure.keyvault.models.KeyAttributes&text=KeyAttributes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the attributes value.</p>

    <p></p>
  syntax: public KeyAttributes attributes()
  uid: com.microsoft.azure.keyvault.models.KeyBundle.attributes()
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.key()
  name: key()
  nameWithType: KeyBundle.key()
  returns:
    description: <p>the key value </p>
    type: <xref href="com.microsoft.azure.keyvault.webkey.JsonWebKey?alt=com.microsoft.azure.keyvault.webkey.JsonWebKey&text=JsonWebKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the key value.</p>

    <p></p>
  syntax: public JsonWebKey key()
  uid: com.microsoft.azure.keyvault.models.KeyBundle.key()
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.keyIdentifier()
  name: keyIdentifier()
  nameWithType: KeyBundle.keyIdentifier()
  returns:
    description: <p>identifier for the key </p>
    type: <xref href="com.microsoft.azure.keyvault.KeyIdentifier?alt=com.microsoft.azure.keyvault.KeyIdentifier&text=KeyIdentifier" data-throw-if-not-resolved="False"/>
  summary: <p>The key identifier. </p>
  syntax: public KeyIdentifier keyIdentifier()
  uid: com.microsoft.azure.keyvault.models.KeyBundle.keyIdentifier()
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.managed()
  name: managed()
  nameWithType: KeyBundle.managed()
  returns:
    description: <p>the managed value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the managed value.</p>

    <p></p>
  syntax: public Boolean managed()
  uid: com.microsoft.azure.keyvault.models.KeyBundle.managed()
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.tags()
  name: tags()
  nameWithType: KeyBundle.tags()
  returns:
    description: <p>the tags value </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tags value.</p>

    <p></p>
  syntax: public Map<String, String> tags()
  uid: com.microsoft.azure.keyvault.models.KeyBundle.tags()
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.toString()
  name: toString()
  nameWithType: KeyBundle.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.keyvault.models.KeyBundle.toString()
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.withAttributes(KeyAttributes attributes)
  name: withAttributes(KeyAttributes attributes)
  nameWithType: KeyBundle.withAttributes(KeyAttributes attributes)
  parameters:
  - description: <p>the attributes value to set </p>
    name: attributes
    type: <xref href="com.microsoft.azure.keyvault.models.KeyAttributes?alt=com.microsoft.azure.keyvault.models.KeyAttributes&text=KeyAttributes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the attributes value.</p>

    <p></p>
  syntax: public KeyBundle withAttributes(KeyAttributes attributes)
  uid: com.microsoft.azure.keyvault.models.KeyBundle.withAttributes(KeyAttributes)
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.withKey(JsonWebKey key)
  name: withKey(JsonWebKey key)
  nameWithType: KeyBundle.withKey(JsonWebKey key)
  parameters:
  - description: <p>the key value to set </p>
    name: key
    type: <xref href="com.microsoft.azure.keyvault.webkey.JsonWebKey?alt=com.microsoft.azure.keyvault.webkey.JsonWebKey&text=JsonWebKey" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the key value.</p>

    <p></p>
  syntax: public KeyBundle withKey(JsonWebKey key)
  uid: com.microsoft.azure.keyvault.models.KeyBundle.withKey(JsonWebKey)
- fullName: com.microsoft.azure.keyvault.models.KeyBundle.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: KeyBundle.withTags(Map<String, String> tags)
  parameters:
  - description: <p>the tags value to set </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyBundle?alt=com.microsoft.azure.keyvault.models.KeyBundle&text=KeyBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tags value.</p>

    <p></p>
  syntax: public KeyBundle withTags(Map<String, String> tags)
  uid: com.microsoft.azure.keyvault.models.KeyBundle.withTags(Map<String, String>)
nameWithType: KeyBundle
syntax: public class KeyBundle
type: class
uid: com.microsoft.azure.keyvault.models.KeyBundle
fullName: com.microsoft.azure.keyvault.models.KeyBundle
name: KeyBundle
package: com.microsoft.azure.keyvault.models
summary: <p>A KeyBundle consisting of a WebKey plus its attributes. </p>
metadata: {}
