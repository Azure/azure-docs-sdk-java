### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.attributes()
  name: attributes()
  nameWithType: CertificatePolicy.attributes()
  returns:
    description: <p>the attributes value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateAttributes?alt=com.microsoft.azure.keyvault.models.CertificateAttributes&text=CertificateAttributes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the attributes value.</p>

    <p></p>
  syntax: public CertificateAttributes attributes()
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.attributes()
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.id()
  name: id()
  nameWithType: CertificatePolicy.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.id()
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.issuerParameters()
  name: issuerParameters()
  nameWithType: CertificatePolicy.issuerParameters()
  returns:
    description: <p>the issuerParameters value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.IssuerParameters?alt=com.microsoft.azure.keyvault.models.IssuerParameters&text=IssuerParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the issuerParameters value.</p>

    <p></p>
  syntax: public IssuerParameters issuerParameters()
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.issuerParameters()
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.keyProperties()
  name: keyProperties()
  nameWithType: CertificatePolicy.keyProperties()
  returns:
    description: <p>the keyProperties value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyProperties?alt=com.microsoft.azure.keyvault.models.KeyProperties&text=KeyProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the keyProperties value.</p>

    <p></p>
  syntax: public KeyProperties keyProperties()
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.keyProperties()
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.lifetimeActions()
  name: lifetimeActions()
  nameWithType: CertificatePolicy.lifetimeActions()
  returns:
    description: <p>the lifetimeActions value </p>
    type: List&lt;<xref href="com.microsoft.azure.keyvault.models.LifetimeAction?alt=com.microsoft.azure.keyvault.models.LifetimeAction&text=LifetimeAction" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the lifetimeActions value.</p>

    <p></p>
  syntax: public List<LifetimeAction> lifetimeActions()
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.lifetimeActions()
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.secretProperties()
  name: secretProperties()
  nameWithType: CertificatePolicy.secretProperties()
  returns:
    description: <p>the secretProperties value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.SecretProperties?alt=com.microsoft.azure.keyvault.models.SecretProperties&text=SecretProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the secretProperties value.</p>

    <p></p>
  syntax: public SecretProperties secretProperties()
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.secretProperties()
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.withAttributes(CertificateAttributes attributes)
  name: withAttributes(CertificateAttributes attributes)
  nameWithType: CertificatePolicy.withAttributes(CertificateAttributes attributes)
  parameters:
  - description: <p>the attributes value to set </p>
    name: attributes
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateAttributes?alt=com.microsoft.azure.keyvault.models.CertificateAttributes&text=CertificateAttributes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificatePolicy object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the attributes value.</p>

    <p></p>
  syntax: public CertificatePolicy withAttributes(CertificateAttributes attributes)
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.withAttributes(CertificateAttributes)
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.withIssuerParameters(IssuerParameters issuerParameters)
  name: withIssuerParameters(IssuerParameters issuerParameters)
  nameWithType: CertificatePolicy.withIssuerParameters(IssuerParameters issuerParameters)
  parameters:
  - description: <p>the issuerParameters value to set </p>
    name: issuerParameters
    type: <xref href="com.microsoft.azure.keyvault.models.IssuerParameters?alt=com.microsoft.azure.keyvault.models.IssuerParameters&text=IssuerParameters" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificatePolicy object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the issuerParameters value.</p>

    <p></p>
  syntax: public CertificatePolicy withIssuerParameters(IssuerParameters issuerParameters)
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.withIssuerParameters(IssuerParameters)
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.withKeyProperties(KeyProperties keyProperties)
  name: withKeyProperties(KeyProperties keyProperties)
  nameWithType: CertificatePolicy.withKeyProperties(KeyProperties keyProperties)
  parameters:
  - description: <p>the keyProperties value to set </p>
    name: keyProperties
    type: <xref href="com.microsoft.azure.keyvault.models.KeyProperties?alt=com.microsoft.azure.keyvault.models.KeyProperties&text=KeyProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificatePolicy object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the keyProperties value.</p>

    <p></p>
  syntax: public CertificatePolicy withKeyProperties(KeyProperties keyProperties)
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.withKeyProperties(KeyProperties)
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.withLifetimeActions(List<LifetimeAction> lifetimeActions)
  name: withLifetimeActions(List<LifetimeAction> lifetimeActions)
  nameWithType: CertificatePolicy.withLifetimeActions(List<LifetimeAction> lifetimeActions)
  parameters:
  - description: <p>the lifetimeActions value to set </p>
    name: lifetimeActions
    type: List&lt;<xref href="com.microsoft.azure.keyvault.models.LifetimeAction?alt=com.microsoft.azure.keyvault.models.LifetimeAction&text=LifetimeAction" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the CertificatePolicy object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the lifetimeActions value.</p>

    <p></p>
  syntax: public CertificatePolicy withLifetimeActions(List<LifetimeAction> lifetimeActions)
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.withLifetimeActions(List<LifetimeAction>)
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.withSecretProperties(SecretProperties secretProperties)
  name: withSecretProperties(SecretProperties secretProperties)
  nameWithType: CertificatePolicy.withSecretProperties(SecretProperties secretProperties)
  parameters:
  - description: <p>the secretProperties value to set </p>
    name: secretProperties
    type: <xref href="com.microsoft.azure.keyvault.models.SecretProperties?alt=com.microsoft.azure.keyvault.models.SecretProperties&text=SecretProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificatePolicy object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the secretProperties value.</p>

    <p></p>
  syntax: public CertificatePolicy withSecretProperties(SecretProperties secretProperties)
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.withSecretProperties(SecretProperties)
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.withX509CertificateProperties(X509CertificateProperties x509CertificateProperties)
  name: withX509CertificateProperties(X509CertificateProperties x509CertificateProperties)
  nameWithType: CertificatePolicy.withX509CertificateProperties(X509CertificateProperties x509CertificateProperties)
  parameters:
  - description: <p>the x509CertificateProperties value to set </p>
    name: x509CertificateProperties
    type: <xref href="com.microsoft.azure.keyvault.models.X509CertificateProperties?alt=com.microsoft.azure.keyvault.models.X509CertificateProperties&text=X509CertificateProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificatePolicy object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the x509CertificateProperties value.</p>

    <p></p>
  syntax: public CertificatePolicy withX509CertificateProperties(X509CertificateProperties x509CertificateProperties)
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.withX509CertificateProperties(X509CertificateProperties)
- fullName: com.microsoft.azure.keyvault.models.CertificatePolicy.x509CertificateProperties()
  name: x509CertificateProperties()
  nameWithType: CertificatePolicy.x509CertificateProperties()
  returns:
    description: <p>the x509CertificateProperties value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.X509CertificateProperties?alt=com.microsoft.azure.keyvault.models.X509CertificateProperties&text=X509CertificateProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the x509CertificateProperties value.</p>

    <p></p>
  syntax: public X509CertificateProperties x509CertificateProperties()
  uid: com.microsoft.azure.keyvault.models.CertificatePolicy.x509CertificateProperties()
nameWithType: CertificatePolicy
syntax: public class CertificatePolicy
type: class
uid: com.microsoft.azure.keyvault.models.CertificatePolicy
fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
name: CertificatePolicy
package: com.microsoft.azure.keyvault.models
summary: <p>Management policy for a certificate. </p>
metadata: {}
