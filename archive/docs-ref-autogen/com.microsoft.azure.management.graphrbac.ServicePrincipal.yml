### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.applicationId()
  name: applicationId()
  nameWithType: ServicePrincipal.applicationId()
  returns:
    description: <p>app id. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String applicationId()
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.applicationId()
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.certificateCredentials()
  name: certificateCredentials()
  nameWithType: ServicePrincipal.certificateCredentials()
  returns:
    description: <p>the mapping of certificate credentials from their names </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.graphrbac.CertificateCredential?alt=com.microsoft.azure.management.graphrbac.CertificateCredential&text=CertificateCredential" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, CertificateCredential> certificateCredentials()
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.certificateCredentials()
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.passwordCredentials()
  name: passwordCredentials()
  nameWithType: ServicePrincipal.passwordCredentials()
  returns:
    description: <p>the mapping of password credentials from their names </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.graphrbac.PasswordCredential?alt=com.microsoft.azure.management.graphrbac.PasswordCredential&text=PasswordCredential" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, PasswordCredential> passwordCredentials()
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.passwordCredentials()
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.roleAssignments()
  name: roleAssignments()
  nameWithType: ServicePrincipal.roleAssignments()
  returns:
    description: <p>the mapping from scopes to role assignments </p>
    type: Set&lt;<xref href="com.microsoft.azure.management.graphrbac.RoleAssignment?alt=com.microsoft.azure.management.graphrbac.RoleAssignment&text=RoleAssignment" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Set<RoleAssignment> roleAssignments()
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.roleAssignments()
- fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal.servicePrincipalNames()
  name: servicePrincipalNames()
  nameWithType: ServicePrincipal.servicePrincipalNames()
  returns:
    description: <p>the list of names. </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> servicePrincipalNames()
  uid: com.microsoft.azure.management.graphrbac.ServicePrincipal.servicePrincipalNames()
nameWithType: ServicePrincipal
syntax: public interface ServicePrincipal extends ActiveDirectoryObject,HasInner<ServicePrincipalInner>,Updatable<ServicePrincipal.Update>
type: interface
uid: com.microsoft.azure.management.graphrbac.ServicePrincipal
fullName: com.microsoft.azure.management.graphrbac.ServicePrincipal
name: ServicePrincipal
package: com.microsoft.azure.management.graphrbac
summary: <p>An immutable client-side representation of an Azure AD service principal. </p>
metadata: {}
