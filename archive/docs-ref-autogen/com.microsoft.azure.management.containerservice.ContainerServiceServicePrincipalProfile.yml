### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.clientId()
  name: clientId()
  nameWithType: ContainerServiceServicePrincipalProfile.clientId()
  returns:
    description: <p>the clientId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ID for the service principal.</p>

    <p></p>
  syntax: public String clientId()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.clientId()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.keyVaultSecretRef()
  name: keyVaultSecretRef()
  nameWithType: ContainerServiceServicePrincipalProfile.keyVaultSecretRef()
  returns:
    description: <p>the keyVaultSecretRef value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.KeyVaultSecretRef?alt=com.microsoft.azure.management.containerservice.KeyVaultSecretRef&text=KeyVaultSecretRef" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get reference to a secret stored in Azure Key Vault.</p>

    <p></p>
  syntax: public KeyVaultSecretRef keyVaultSecretRef()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.keyVaultSecretRef()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.secret()
  name: secret()
  nameWithType: ContainerServiceServicePrincipalProfile.secret()
  returns:
    description: <p>the secret value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the secret password associated with the service principal in plain text.</p>

    <p></p>
  syntax: public String secret()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.secret()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.withClientId(String clientId)
  name: withClientId(String clientId)
  nameWithType: ContainerServiceServicePrincipalProfile.withClientId(String clientId)
  parameters:
  - description: <p>the clientId value to set </p>
    name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceServicePrincipalProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile&text=ContainerServiceServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ID for the service principal.</p>

    <p></p>
  syntax: public ContainerServiceServicePrincipalProfile withClientId(String clientId)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.withClientId(String)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.withKeyVaultSecretRef(KeyVaultSecretRef keyVaultSecretRef)
  name: withKeyVaultSecretRef(KeyVaultSecretRef keyVaultSecretRef)
  nameWithType: ContainerServiceServicePrincipalProfile.withKeyVaultSecretRef(KeyVaultSecretRef keyVaultSecretRef)
  parameters:
  - description: <p>the keyVaultSecretRef value to set </p>
    name: keyVaultSecretRef
    type: <xref href="com.microsoft.azure.management.containerservice.KeyVaultSecretRef?alt=com.microsoft.azure.management.containerservice.KeyVaultSecretRef&text=KeyVaultSecretRef" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceServicePrincipalProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile&text=ContainerServiceServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set reference to a secret stored in Azure Key Vault.</p>

    <p></p>
  syntax: public ContainerServiceServicePrincipalProfile withKeyVaultSecretRef(KeyVaultSecretRef keyVaultSecretRef)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.withKeyVaultSecretRef(KeyVaultSecretRef)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.withSecret(String secret)
  name: withSecret(String secret)
  nameWithType: ContainerServiceServicePrincipalProfile.withSecret(String secret)
  parameters:
  - description: <p>the secret value to set </p>
    name: secret
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceServicePrincipalProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile&text=ContainerServiceServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the secret password associated with the service principal in plain text.</p>

    <p></p>
  syntax: public ContainerServiceServicePrincipalProfile withSecret(String secret)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile.withSecret(String)
nameWithType: ContainerServiceServicePrincipalProfile
syntax: public class ContainerServiceServicePrincipalProfile
type: class
uid: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile
fullName: com.microsoft.azure.management.containerservice.ContainerServiceServicePrincipalProfile
name: ContainerServiceServicePrincipalProfile
package: com.microsoft.azure.management.containerservice
summary: <p>Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified. </p>
metadata: {}
