### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.addonProfiles()
  name: addonProfiles()
  nameWithType: KubernetesCluster.addonProfiles()
  returns:
    description: <p>the cluster's add-on's profiles </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.containerservice.ManagedClusterAddonProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterAddonProfile&text=ManagedClusterAddonProfile" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ManagedClusterAddonProfile> addonProfiles()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.addonProfiles()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.adminKubeConfigContent()
  name: adminKubeConfigContent()
  nameWithType: KubernetesCluster.adminKubeConfigContent()
  returns:
    description: <p>the Kubernetes configuration file content with administrative privileges to the cluster </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  syntax: public byte [] adminKubeConfigContent()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.adminKubeConfigContent()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.agentPools()
  name: agentPools()
  nameWithType: KubernetesCluster.agentPools()
  returns:
    description: <p>the agent pools in the Kubernetes cluster </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool?alt=com.microsoft.azure.management.containerservice.KubernetesClusterAgentPool&text=KubernetesClusterAgentPool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, KubernetesClusterAgentPool> agentPools()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.agentPools()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.dnsPrefix()
  name: dnsPrefix()
  nameWithType: KubernetesCluster.dnsPrefix()
  returns:
    description: <p>the DNS prefix which was specified at creation time </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String dnsPrefix()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.dnsPrefix()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.enableRBAC()
  name: enableRBAC()
  nameWithType: KubernetesCluster.enableRBAC()
  returns:
    description: <p>true if Kubernetes Role-Based Access Control is enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean enableRBAC()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.enableRBAC()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.fqdn()
  name: fqdn()
  nameWithType: KubernetesCluster.fqdn()
  returns:
    description: <p>the FQDN for the master pool </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String fqdn()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.fqdn()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.linuxRootUsername()
  name: linuxRootUsername()
  nameWithType: KubernetesCluster.linuxRootUsername()
  returns:
    description: <p>the Linux root username </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String linuxRootUsername()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.linuxRootUsername()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.networkProfile()
  name: networkProfile()
  nameWithType: KubernetesCluster.networkProfile()
  returns:
    description: <p>the network profile settings for the cluster </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  syntax: public ContainerServiceNetworkProfile networkProfile()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.networkProfile()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.nodeResourceGroup()
  name: nodeResourceGroup()
  nameWithType: KubernetesCluster.nodeResourceGroup()
  returns:
    description: <p>the name of the resource group containing agent pool nodes </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String nodeResourceGroup()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.nodeResourceGroup()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.provisioningState()
  name: provisioningState()
  nameWithType: KubernetesCluster.provisioningState()
  returns:
    description: <p>the provisioning state of the Kubernetes cluster </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String provisioningState()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.provisioningState()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.servicePrincipalClientId()
  name: servicePrincipalClientId()
  nameWithType: KubernetesCluster.servicePrincipalClientId()
  returns:
    description: <p>the service principal client ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String servicePrincipalClientId()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.servicePrincipalClientId()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.servicePrincipalSecret()
  name: servicePrincipalSecret()
  nameWithType: KubernetesCluster.servicePrincipalSecret()
  returns:
    description: <p>the service principal secret </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String servicePrincipalSecret()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.servicePrincipalSecret()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.sku()
  name: sku()
  nameWithType: KubernetesCluster.sku()
  returns:
    description: <p>the sku of the cluster </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterSKU?alt=com.microsoft.azure.management.containerservice.ManagedClusterSKU&text=ManagedClusterSKU" data-throw-if-not-resolved="False"/>
  syntax: public ManagedClusterSKU sku()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.sku()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.sshKey()
  name: sshKey()
  nameWithType: KubernetesCluster.sshKey()
  returns:
    description: <p>the Linux SSH key </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String sshKey()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.sshKey()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.userKubeConfigContent()
  name: userKubeConfigContent()
  nameWithType: KubernetesCluster.userKubeConfigContent()
  returns:
    description: <p>the Kubernetes configuration file content with user-level privileges to the cluster </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  syntax: public byte [] userKubeConfigContent()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.userKubeConfigContent()
- fullName: com.microsoft.azure.management.containerservice.KubernetesCluster.version()
  name: version()
  nameWithType: KubernetesCluster.version()
  returns:
    description: <p>the Kubernetes version </p>
    type: <xref href="com.microsoft.azure.management.containerservice.KubernetesVersion?alt=com.microsoft.azure.management.containerservice.KubernetesVersion&text=KubernetesVersion" data-throw-if-not-resolved="False"/>
  syntax: public KubernetesVersion version()
  uid: com.microsoft.azure.management.containerservice.KubernetesCluster.version()
nameWithType: KubernetesCluster
syntax: public interface KubernetesCluster extends GroupableResource<ContainerServiceManager, ManagedClusterInner>,Refreshable<KubernetesCluster>,Updatable<KubernetesCluster.Update>,OrchestratorServiceBase
type: interface
uid: com.microsoft.azure.management.containerservice.KubernetesCluster
fullName: com.microsoft.azure.management.containerservice.KubernetesCluster
name: KubernetesCluster
package: com.microsoft.azure.management.containerservice
summary: <p>A client-side representation for a managed Kubernetes cluster. </p>
metadata: {}
