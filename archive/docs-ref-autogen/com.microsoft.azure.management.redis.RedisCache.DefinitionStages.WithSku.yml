### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withBasicSku()
  name: withBasicSku()
  nameWithType: RedisCache.DefinitionStages.WithSku.withBasicSku()
  returns:
    description: <p>the next stage of Redis Cache definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate&text=RedisCache.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the Basic sku of the Redis Cache.</p>

    <p></p>
  syntax: public WithCreate withBasicSku()
  uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withBasicSku()
- fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withBasicSku(int capacity)
  name: withBasicSku(int capacity)
  nameWithType: RedisCache.DefinitionStages.WithSku.withBasicSku(int capacity)
  parameters:
  - description: <p>specifies what size of Redis Cache to deploy for Basic sku with C family (0, 1, 2, 3, 4, 5, 6). </p>
    name: capacity
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate&text=RedisCache.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the Basic sku of the Redis Cache.</p>

    <p></p>
  syntax: public WithCreate withBasicSku(int capacity)
  uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withBasicSku(int)
- fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withPremiumSku()
  name: withPremiumSku()
  nameWithType: RedisCache.DefinitionStages.WithSku.withPremiumSku()
  returns:
    description: <p>the next stage of Redis Cache definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate?alt=com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate&text=RedisCache.DefinitionStages.WithPremiumSkuCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the Premium sku of the Redis Cache.</p>

    <p></p>
  syntax: public WithPremiumSkuCreate withPremiumSku()
  uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withPremiumSku()
- fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withPremiumSku(int capacity)
  name: withPremiumSku(int capacity)
  nameWithType: RedisCache.DefinitionStages.WithSku.withPremiumSku(int capacity)
  parameters:
  - description: <p>specifies what size of Redis Cache to deploy for Standard sku with P family (1, 2, 3, 4). </p>
    name: capacity
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate?alt=com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate&text=RedisCache.DefinitionStages.WithPremiumSkuCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the Premium sku of the Redis Cache.</p>

    <p></p>
  syntax: public WithPremiumSkuCreate withPremiumSku(int capacity)
  uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withPremiumSku(int)
- fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withStandardSku()
  name: withStandardSku()
  nameWithType: RedisCache.DefinitionStages.WithSku.withStandardSku()
  returns:
    description: <p>the next stage of Redis Cache definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate&text=RedisCache.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the Standard Sku of the Redis Cache.</p>

    <p></p>
  syntax: public WithCreate withStandardSku()
  uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withStandardSku()
- fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withStandardSku(int capacity)
  name: withStandardSku(int capacity)
  nameWithType: RedisCache.DefinitionStages.WithSku.withStandardSku(int capacity)
  parameters:
  - description: <p>specifies what size of Redis Cache to deploy for Standard sku with C family (0, 1, 2, 3, 4, 5, 6). </p>
    name: capacity
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of Redis Cache definition. </p>
    type: <xref href="com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate&text=RedisCache.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the Standard sku of the Redis Cache.</p>

    <p></p>
  syntax: public WithCreate withStandardSku(int capacity)
  uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku.withStandardSku(int)
nameWithType: RedisCache.DefinitionStages.WithSku
syntax: public interface WithSku
type: interface
uid: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku
fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithSku
name: RedisCache.DefinitionStages.WithSku
package: com.microsoft.azure.management.redis
summary: <p>A Redis Cache definition allowing the sku to be set. </p>
metadata: {}
