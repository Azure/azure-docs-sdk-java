### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
methods:
- fullName: com.microsoft.azure.management.batchai.BatchAIExperiment.creationTime()
  name: creationTime()
  nameWithType: BatchAIExperiment.creationTime()
  returns:
    description: <p>time when the Experiment was created </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime creationTime()
  uid: com.microsoft.azure.management.batchai.BatchAIExperiment.creationTime()
- fullName: com.microsoft.azure.management.batchai.BatchAIExperiment.jobs()
  name: jobs()
  nameWithType: BatchAIExperiment.jobs()
  returns:
    description: <p>the entry point to Batch AI jobs management API for this experiment </p>
    type: <xref href="com.microsoft.azure.management.batchai.BatchAIJobs?alt=com.microsoft.azure.management.batchai.BatchAIJobs&text=BatchAIJobs" data-throw-if-not-resolved="False"/>
  syntax: public BatchAIJobs jobs()
  uid: com.microsoft.azure.management.batchai.BatchAIExperiment.jobs()
- fullName: com.microsoft.azure.management.batchai.BatchAIExperiment.provisioningState()
  name: provisioningState()
  nameWithType: BatchAIExperiment.provisioningState()
  returns:
    description: <p>the provisioned state of the experiment </p>
    type: <xref href="com.microsoft.azure.management.batchai.ProvisioningState?alt=com.microsoft.azure.management.batchai.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batchai.BatchAIExperiment.provisioningState()
- fullName: com.microsoft.azure.management.batchai.BatchAIExperiment.provisioningStateTransitionTime()
  name: provisioningStateTransitionTime()
  nameWithType: BatchAIExperiment.provisioningStateTransitionTime()
  returns:
    description: <p>the time at which the experiment entered its current provisioning state </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime provisioningStateTransitionTime()
  uid: com.microsoft.azure.management.batchai.BatchAIExperiment.provisioningStateTransitionTime()
- fullName: com.microsoft.azure.management.batchai.BatchAIExperiment.workspace()
  name: workspace()
  nameWithType: BatchAIExperiment.workspace()
  returns:
    description: <p>workspace this experiment belongs to </p>
    type: <xref href="com.microsoft.azure.management.batchai.BatchAIWorkspace?alt=com.microsoft.azure.management.batchai.BatchAIWorkspace&text=BatchAIWorkspace" data-throw-if-not-resolved="False"/>
  syntax: public BatchAIWorkspace workspace()
  uid: com.microsoft.azure.management.batchai.BatchAIExperiment.workspace()
nameWithType: BatchAIExperiment
syntax: public interface BatchAIExperiment extends HasInner<ExperimentInner>,Indexable,HasId,HasName,HasManager<BatchAIManager>,Refreshable<BatchAIExperiment>
type: interface
uid: com.microsoft.azure.management.batchai.BatchAIExperiment
fullName: com.microsoft.azure.management.batchai.BatchAIExperiment
name: BatchAIExperiment
package: com.microsoft.azure.management.batchai
summary: <p>Entry point for Batch AI Experiment management API in Azure. </p>
metadata: {}
