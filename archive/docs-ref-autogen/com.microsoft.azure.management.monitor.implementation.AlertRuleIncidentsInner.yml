### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.AlertRuleIncidentsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: AlertRuleIncidentsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: AlertRuleIncidentsInner.AlertRuleIncidentsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of AlertRuleIncidentsInner.</p>

    <p></p>
  syntax: public AlertRuleIncidentsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.AlertRuleIncidentsInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.get(String resourceGroupName, String ruleName, String incidentName)
  name: get(String resourceGroupName, String ruleName, String incidentName)
  nameWithType: AlertRuleIncidentsInner.get(String resourceGroupName, String ruleName, String incidentName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the incident to retrieve. </p>
    name: incidentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the IncidentInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an incident associated to an alert rule.</p>

    <p></p>
  syntax: public IncidentInner get(String resourceGroupName, String ruleName, String incidentName)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.get(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.getAsync(String resourceGroupName, String ruleName, String incidentName)
  name: getAsync(String resourceGroupName, String ruleName, String incidentName)
  nameWithType: AlertRuleIncidentsInner.getAsync(String resourceGroupName, String ruleName, String incidentName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the incident to retrieve. </p>
    name: incidentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the IncidentInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an incident associated to an alert rule.</p>

    <p></p>
  syntax: public Observable<IncidentInner> getAsync(String resourceGroupName, String ruleName, String incidentName)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.getAsync(String resourceGroupName, String ruleName, String incidentName, final ServiceCallback<IncidentInner> serviceCallback)
  name: getAsync(String resourceGroupName, String ruleName, String incidentName, final ServiceCallback<IncidentInner> serviceCallback)
  nameWithType: AlertRuleIncidentsInner.getAsync(String resourceGroupName, String ruleName, String incidentName, final ServiceCallback<IncidentInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the incident to retrieve. </p>
    name: incidentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an incident associated to an alert rule.</p>

    <p></p>
  syntax: public ServiceFuture<IncidentInner> getAsync(String resourceGroupName, String ruleName, String incidentName, final ServiceCallback<IncidentInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.getAsync(String,String,String,final ServiceCallback<IncidentInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.getWithServiceResponseAsync(String resourceGroupName, String ruleName, String incidentName)
  name: getWithServiceResponseAsync(String resourceGroupName, String ruleName, String incidentName)
  nameWithType: AlertRuleIncidentsInner.getWithServiceResponseAsync(String resourceGroupName, String ruleName, String incidentName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the incident to retrieve. </p>
    name: incidentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the IncidentInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets an incident associated to an alert rule.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<IncidentInner>> getWithServiceResponseAsync(String resourceGroupName, String ruleName, String incidentName)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.getWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRule(String resourceGroupName, String ruleName)
  name: listByAlertRule(String resourceGroupName, String ruleName)
  nameWithType: AlertRuleIncidentsInner.listByAlertRule(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;IncidentInner&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of incidents associated to an alert rule.</p>

    <p></p>
  syntax: public List<IncidentInner> listByAlertRule(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRule(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRuleAsync(String resourceGroupName, String ruleName)
  name: listByAlertRuleAsync(String resourceGroupName, String ruleName)
  nameWithType: AlertRuleIncidentsInner.listByAlertRuleAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;IncidentInner&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of incidents associated to an alert rule.</p>

    <p></p>
  syntax: public Observable<List<IncidentInner>> listByAlertRuleAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRuleAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRuleAsync(String resourceGroupName, String ruleName, final ServiceCallback<List<IncidentInner>> serviceCallback)
  name: listByAlertRuleAsync(String resourceGroupName, String ruleName, final ServiceCallback<List<IncidentInner>> serviceCallback)
  nameWithType: AlertRuleIncidentsInner.listByAlertRuleAsync(String resourceGroupName, String ruleName, final ServiceCallback<List<IncidentInner>> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of incidents associated to an alert rule.</p>

    <p></p>
  syntax: public ServiceFuture<List<IncidentInner>> listByAlertRuleAsync(String resourceGroupName, String ruleName, final ServiceCallback<List<IncidentInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRuleAsync(String,String,final ServiceCallback<List<IncidentInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRuleWithServiceResponseAsync(String resourceGroupName, String ruleName)
  name: listByAlertRuleWithServiceResponseAsync(String resourceGroupName, String ruleName)
  nameWithType: AlertRuleIncidentsInner.listByAlertRuleWithServiceResponseAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;IncidentInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.IncidentInner?alt=com.microsoft.azure.management.monitor.implementation.IncidentInner&text=IncidentInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of incidents associated to an alert rule.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<IncidentInner>>> listByAlertRuleWithServiceResponseAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner.listByAlertRuleWithServiceResponseAsync(String,String)
nameWithType: AlertRuleIncidentsInner
syntax: public class AlertRuleIncidentsInner
type: class
uid: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner
fullName: com.microsoft.azure.management.monitor.implementation.AlertRuleIncidentsInner
name: AlertRuleIncidentsInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in AlertRuleIncidents. </p>
metadata: {}
