### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.close()
  name: close()
  nameWithType: IStoreConnection.close()
  summary: <p>Closes the store connection. </p>
  syntax: public void close()
  uid: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.close()
- fullName: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.closeWithUnlock(UUID lockId)
  name: closeWithUnlock(UUID lockId)
  nameWithType: IStoreConnection.closeWithUnlock(UUID lockId)
  parameters:
  - description: <p>Lock Id. </p>
    name: lockId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Closes the store connection after releasing lock.</p>

    <p></p>
  syntax: public void closeWithUnlock(UUID lockId)
  uid: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.closeWithUnlock(UUID)
- fullName: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.getKind()
  name: getKind()
  nameWithType: IStoreConnection.getKind()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreConnectionKind?alt=com.microsoft.azure.elasticdb.shard.store.StoreConnectionKind&text=StoreConnectionKind" data-throw-if-not-resolved="False"/>
  summary: <p>Type of store connection. </p>
  syntax: public StoreConnectionKind getKind()
  uid: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.getKind()
- fullName: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.getTransactionScope(StoreTransactionScopeKind kind)
  name: getTransactionScope(StoreTransactionScopeKind kind)
  nameWithType: IStoreConnection.getTransactionScope(StoreTransactionScopeKind kind)
  parameters:
  - description: <p>Type of transaction scope. </p>
    name: kind
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreTransactionScopeKind?alt=com.microsoft.azure.elasticdb.shard.store.StoreTransactionScopeKind&text=StoreTransactionScopeKind" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Transaction scope on the store connection. </p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.IStoreTransactionScope?alt=com.microsoft.azure.elasticdb.shard.store.IStoreTransactionScope&text=IStoreTransactionScope" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Acquires a transactional scope on the connection.</p>

    <p></p>
  syntax: public IStoreTransactionScope getTransactionScope(StoreTransactionScopeKind kind)
  uid: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.getTransactionScope(StoreTransactionScopeKind)
- fullName: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.openWithLock(UUID lockId)
  name: openWithLock(UUID lockId)
  nameWithType: IStoreConnection.openWithLock(UUID lockId)
  parameters:
  - description: <p>Lock Id. </p>
    name: lockId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Open the store connection, and acquire a lock on the store.</p>

    <p></p>
  syntax: public void openWithLock(UUID lockId)
  uid: com.microsoft.azure.elasticdb.shard.store.IStoreConnection.openWithLock(UUID)
nameWithType: IStoreConnection
syntax: public interface IStoreConnection
type: interface
uid: com.microsoft.azure.elasticdb.shard.store.IStoreConnection
fullName: com.microsoft.azure.elasticdb.shard.store.IStoreConnection
name: IStoreConnection
package: com.microsoft.azure.elasticdb.shard.store
summary: <p>Instance of a store connection. </p>
metadata: {}
