### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(String topicPath, String subscriptionName)
  name: SubscriptionDescription(String topicPath, String subscriptionName)
  nameWithType: SubscriptionDescription.SubscriptionDescription(String topicPath, String subscriptionName)
  parameters:
  - description: "<p>- Path of the topic Max length is 260 chars. Cannot start or end with a slash. Cannot have restricted characters: '@','?','#','*' </p>"
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>- Name of the subscription Max length is 50 chars. Cannot have restricted characters: '@','?','#','*','/' </p>"
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of SubscriptionDescription with the specified relative path. </p>
  syntax: public SubscriptionDescription(String topicPath, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(Object o)
  name: equals(Object o)
  nameWithType: SubscriptionDescription.equals(Object o)
  parameters:
  - name: o
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean equals(Object o)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(Object)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()
  name: getAutoDeleteOnIdle()
  nameWithType: SubscriptionDescription.getAutoDeleteOnIdle()
  returns:
    description: <p>The idle interval after which the subscription is automatically deleted. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration getAutoDeleteOnIdle()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()
  name: getDefaultMessageTimeToLive()
  nameWithType: SubscriptionDescription.getDefaultMessageTimeToLive()
  returns:
    description: <p>The default time to live value for the messages. Default value is <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ManagementClientConstants#MAX_DURATION"></xref></p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: <p>Time-To-Live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid="com.microsoft.azure.servicebus.IMessage.getTimeToLive()" data-throw-if-not-resolved="false" data-raw-source="IMessage#getTimeToLive()"></xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages. </p>
  syntax: public Duration getDefaultMessageTimeToLive()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()
  name: getEntityStatus()
  nameWithType: SubscriptionDescription.getEntityStatus()
  returns:
    description: <p>The current status of the queue (Enabled / Disabled). The default value is Enabled. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.EntityStatus?alt=com.microsoft.azure.servicebus.management.EntityStatus&text=EntityStatus" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the status of the entity. When an entity is disabled, that entity cannot send or receive messages. </p>
  syntax: public EntityStatus getEntityStatus()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()
  name: getForwardDeadLetteredMessagesTo()
  nameWithType: SubscriptionDescription.getForwardDeadLetteredMessagesTo()
  returns:
    description: <p>The path of the recipient entity to which all the dead-lettered messages of this subscription are forwarded to. If set, user cannot manually receive dead-lettered messages from this subscription. The destination entity must already exist. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getForwardDeadLetteredMessagesTo()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()
  name: getForwardTo()
  nameWithType: SubscriptionDescription.getForwardTo()
  returns:
    description: <p>The path of the recipient entity to which all the messages sent to the subscription are forwarded to. If set, user cannot manually receive messages from this subscription. The destination entity must be an already existing entity. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getForwardTo()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()
  name: getLockDuration()
  nameWithType: SubscriptionDescription.getLockDuration()
  returns:
    description: <p>The duration of a peek lock. Default value is 60 seconds. </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: <p>The amount of time that the message is locked by a given receiver so that no other receiver receives the same message. </p>
  syntax: public Duration getLockDuration()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()
  name: getMaxDeliveryCount()
  nameWithType: SubscriptionDescription.getMaxDeliveryCount()
  returns:
    description: <p>Default value is 10. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK"></xref> mode and didn't complete the message before the message lock expired. </p>
  syntax: public int getMaxDeliveryCount()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()
  name: getPath()
  nameWithType: SubscriptionDescription.getPath()
  returns:
    description: <p>the path of the subscription, including the topic. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getPath()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()
  name: getSubscriptionName()
  nameWithType: SubscriptionDescription.getSubscriptionName()
  returns:
    description: <p>the subscription name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getSubscriptionName()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()
  name: getTopicPath()
  nameWithType: SubscriptionDescription.getTopicPath()
  returns:
    description: <p>the path of the topic. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getTopicPath()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()
  name: getUserMetadata()
  nameWithType: SubscriptionDescription.getUserMetadata()
  returns:
    description: <p>Custom metdata that user can associate with the description. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getUserMetadata()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()
  name: hashCode()
  nameWithType: SubscriptionDescription.hashCode()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int hashCode()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()
  name: isEnableBatchedOperations()
  nameWithType: SubscriptionDescription.isEnableBatchedOperations()
  returns:
    description: <p>Indicates whether server-side batched operations are enabled. Defaults to true. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isEnableBatchedOperations()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  name: isEnableDeadLetteringOnFilterEvaluationException()
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
  returns:
    description: <p>boolean indicating whether messages need to be forwarded to dead-letter subqueue when subscription rule evaluation fails. Default value is true. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isEnableDeadLetteringOnFilterEvaluationException()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  name: isEnableDeadLetteringOnMessageExpiration()
  nameWithType: SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
  returns:
    description: <p>If true, the expired messages are moved to dead-letter subqueue. Default value is false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Indicates whether this subscription has dead letter support when a message expires. </p>
  syntax: public boolean isEnableDeadLetteringOnMessageExpiration()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()
  name: isRequiresSession()
  nameWithType: SubscriptionDescription.isRequiresSession()
  returns:
    description: <p>This indicates whether the subscription supports the concept of session. Sessionful-messages follow FIFO ordering. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isRequiresSession()
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  name: setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  nameWithType: SubscriptionDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  parameters:
  - description: <p>- The idle interval after which the subscription is automatically deleted. The minimum duration is 5 minutes. </p>
    name: autoDeleteOnIdle
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public void setAutoDeleteOnIdle(Duration autoDeleteOnIdle)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(Duration)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  name: setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  nameWithType: SubscriptionDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  parameters:
  - description: <p>- Sets the default message time to live value. Value cannot be lower than 1 second. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()" data-throw-if-not-resolved="false" data-raw-source="getDefaultMessageTimeToLive()"></xref></p>
    name: defaultMessageTimeToLive
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public void setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(Duration)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  name: setEnableBatchedOperations(boolean enableBatchedOperations)
  nameWithType: SubscriptionDescription.setEnableBatchedOperations(boolean enableBatchedOperations)
  parameters:
  - description: <p>- Indicates whether server-side batched operations are enabled. </p>
    name: enableBatchedOperations
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setEnableBatchedOperations(boolean enableBatchedOperations)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
  name: setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
  nameWithType: SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
  parameters:
  - description: <p>- True if messages should be dead-lettered on filter evaluation exception. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()" data-throw-if-not-resolved="false" data-raw-source="isEnableDeadLetteringOnFilterEvaluationException()"></xref></p>
    name: enableDeadLetteringOnFilterEvaluationException
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  name: setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  nameWithType: SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  parameters:
  - description: <p>- True if messages should be dead-lettered on expiration. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()" data-throw-if-not-resolved="false" data-raw-source="isEnableDeadLetteringOnMessageExpiration()"></xref></p>
    name: enableDeadLetteringOnMessageExpiration
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(EntityStatus status)
  name: setEntityStatus(EntityStatus status)
  nameWithType: SubscriptionDescription.setEntityStatus(EntityStatus status)
  parameters:
  - description: <p>- the status of the queue (Enabled / Disabled). When an entity is disabled, that entity cannot send or receive messages. </p>
    name: status
    type: <xref href="com.microsoft.azure.servicebus.management.EntityStatus?alt=com.microsoft.azure.servicebus.management.EntityStatus&text=EntityStatus" data-throw-if-not-resolved="False"/>
  syntax: public void setEntityStatus(EntityStatus status)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(EntityStatus)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  name: setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  nameWithType: SubscriptionDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  parameters:
  - description: <p>- The path of the recipient entity to which all the dead-lettered messages of this subscription are forwarded to. If set, user cannot manually receive dead-lettered messages from this subscription. The destination entity must already exist. </p>
    name: forwardDeadLetteredMessagesTo
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(String)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(String forwardTo)
  name: setForwardTo(String forwardTo)
  nameWithType: SubscriptionDescription.setForwardTo(String forwardTo)
  parameters:
  - description: <p>- The path of the recipient entity to which all the messages sent to the subscription are forwarded to. If set, user cannot manually receive messages from this subscription. The destination entity must be an already existing entity. </p>
    name: forwardTo
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setForwardTo(String forwardTo)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(String)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(Duration lockDuration)
  name: setLockDuration(Duration lockDuration)
  nameWithType: SubscriptionDescription.setLockDuration(Duration lockDuration)
  parameters:
  - description: <p>- The duration of a peek lock. Max value is 5 minutes. </p>
    name: lockDuration
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: <p>Sets The amount of time that the message is locked by a given receiver so that no other receiver receives the same message. </p>
  syntax: public void setLockDuration(Duration lockDuration)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(Duration)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int maxDeliveryCount)
  name: setMaxDeliveryCount(int maxDeliveryCount)
  nameWithType: SubscriptionDescription.setMaxDeliveryCount(int maxDeliveryCount)
  parameters:
  - description: <p>- Minimum value is 1. </p>
    name: maxDeliveryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK"></xref> mode and didn't complete the message before the message lock expired. </p>
  syntax: public void setMaxDeliveryCount(int maxDeliveryCount)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean requiresSession)
  name: setRequiresSession(boolean requiresSession)
  nameWithType: SubscriptionDescription.setRequiresSession(boolean requiresSession)
  parameters:
  - description: <p>- Set to true if subscription should support sessions. </p>
    name: requiresSession
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public void setRequiresSession(boolean requiresSession)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean)
- fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(String userMetadata)
  name: setUserMetadata(String userMetadata)
  nameWithType: SubscriptionDescription.setUserMetadata(String userMetadata)
  parameters:
  - description: <p>- Custom metdata that user can associate with the description. Cannot be null. Max length is 1024 chars </p>
    name: userMetadata
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setUserMetadata(String userMetadata)
  uid: com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(String)
nameWithType: SubscriptionDescription
syntax: public class SubscriptionDescription
type: class
uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
name: SubscriptionDescription
package: com.microsoft.azure.servicebus.management
summary: <p>Represents the metadata description of the subscription. </p>
metadata: {}
