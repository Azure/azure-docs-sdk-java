### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.datalake.analytics.models.FileType.FileType(String value)
  name: FileType(String value)
  nameWithType: FileType.FileType(String value)
  parameters:
  - description: <p>the custom value </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a custom value for FileType. </p>
  syntax: public FileType(String value)
  uid: com.microsoft.azure.management.datalake.analytics.models.FileType.FileType(String)
fields:
- field:
    type: final <xref href="com.microsoft.azure.management.datalake.analytics.models.FileType?alt=com.microsoft.azure.management.datalake.analytics.models.FileType&text=FileType" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.datalake.analytics.models.FileType.ASSEMBLY
  name: ASSEMBLY
  nameWithType: FileType.ASSEMBLY
  summary: <p>Static value Assembly for FileType. </p>
  syntax: public static final FileType ASSEMBLY= new FileType("Assembly")
  uid: com.microsoft.azure.management.datalake.analytics.models.FileType.ASSEMBLY
- field:
    type: final <xref href="com.microsoft.azure.management.datalake.analytics.models.FileType?alt=com.microsoft.azure.management.datalake.analytics.models.FileType&text=FileType" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.datalake.analytics.models.FileType.NODEPLOY
  name: NODEPLOY
  nameWithType: FileType.NODEPLOY
  summary: <p>Static value Nodeploy for FileType. </p>
  syntax: public static final FileType NODEPLOY= new FileType("Nodeploy")
  uid: com.microsoft.azure.management.datalake.analytics.models.FileType.NODEPLOY
- field:
    type: final <xref href="com.microsoft.azure.management.datalake.analytics.models.FileType?alt=com.microsoft.azure.management.datalake.analytics.models.FileType&text=FileType" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.datalake.analytics.models.FileType.RESOURCE
  name: RESOURCE
  nameWithType: FileType.RESOURCE
  summary: <p>Static value Resource for FileType. </p>
  syntax: public static final FileType RESOURCE= new FileType("Resource")
  uid: com.microsoft.azure.management.datalake.analytics.models.FileType.RESOURCE
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.datalake.analytics.models.FileType.equals(Object obj)
  name: equals(Object obj)
  nameWithType: FileType.equals(Object obj)
  parameters:
  - name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.management.datalake.analytics.models.FileType.equals(Object)
- fullName: com.microsoft.azure.management.datalake.analytics.models.FileType.hashCode()
  name: hashCode()
  nameWithType: FileType.hashCode()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int hashCode()
  uid: com.microsoft.azure.management.datalake.analytics.models.FileType.hashCode()
- fullName: com.microsoft.azure.management.datalake.analytics.models.FileType.toString()
  name: toString()
  nameWithType: FileType.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.management.datalake.analytics.models.FileType.toString()
nameWithType: FileType
syntax: public class FileType
type: class
uid: com.microsoft.azure.management.datalake.analytics.models.FileType
fullName: com.microsoft.azure.management.datalake.analytics.models.FileType
name: FileType
package: com.microsoft.azure.management.datalake.analytics.models
summary: <p>Defines values for FileType. </p>
metadata: {}
