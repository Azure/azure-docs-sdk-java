### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.documentdb.Range<T extends Comparable<T>.Range(T point)
  name: Range(T point)
  nameWithType: Range<T>.Range(T point)
  parameters:
  - name: point
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  syntax: public Range(T point)
  uid: com.microsoft.azure.documentdb.Range.Range(T)
- fullName: com.microsoft.azure.documentdb.Range<T extends Comparable<T>.Range(T low, T high)
  name: Range(T low, T high)
  nameWithType: Range<T>.Range(T low, T high)
  parameters:
  - name: low
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  - name: high
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  syntax: public Range(T low, T high)
  uid: com.microsoft.azure.documentdb.Range.Range(T,T)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Comparable&lt;Range&lt;T&gt;&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.documentdb.Range<T extends Comparable<T>.compareTo(Range<T> other)
  name: compareTo(Range<T> other)
  nameWithType: Range<T>.compareTo(Range<T> other)
  parameters:
  - name: other
    type: <xref href="com.microsoft.azure.documentdb.Range?alt=com.microsoft.azure.documentdb.Range&text=Range" data-throw-if-not-resolved="False"/>&lt;T&gt;
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int compareTo(Range<T> other)
  uid: com.microsoft.azure.documentdb.Range.compareTo(Range<T>)
- fullName: com.microsoft.azure.documentdb.Range<T extends Comparable<T>.contains(Range<T> other)
  name: contains(Range<T> other)
  nameWithType: Range<T>.contains(Range<T> other)
  parameters:
  - name: other
    type: <xref href="com.microsoft.azure.documentdb.Range?alt=com.microsoft.azure.documentdb.Range&text=Range" data-throw-if-not-resolved="False"/>&lt;T&gt;
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean contains(Range<T> other)
  uid: com.microsoft.azure.documentdb.Range.contains(Range<T>)
- fullName: com.microsoft.azure.documentdb.Range<T extends Comparable<T>.contains(T value)
  name: contains(T value)
  nameWithType: Range<T>.contains(T value)
  parameters:
  - name: value
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean contains(T value)
  uid: com.microsoft.azure.documentdb.Range.contains(T)
- fullName: com.microsoft.azure.documentdb.Range<T extends Comparable<T>.intersect(Range<T> other)
  name: intersect(Range<T> other)
  nameWithType: Range<T>.intersect(Range<T> other)
  parameters:
  - name: other
    type: <xref href="com.microsoft.azure.documentdb.Range?alt=com.microsoft.azure.documentdb.Range&text=Range" data-throw-if-not-resolved="False"/>&lt;T&gt;
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean intersect(Range<T> other)
  uid: com.microsoft.azure.documentdb.Range.intersect(Range<T>)
- fullName: com.microsoft.azure.documentdb.Range<T extends Comparable<T>.toString()
  name: toString()
  nameWithType: Range<T>.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.documentdb.Range.toString()
nameWithType: Range<T>
syntax: public class Range<T extends Comparable<T>>
type: class
typeParameters:
- name: T
uid: com.microsoft.azure.documentdb.Range
fullName: com.microsoft.azure.documentdb.Range<T>
name: Range<T>
package: com.microsoft.azure.documentdb
summary: <p>Represents a range in the Azure Cosmos DB database service. </p>
metadata: {}
