### YamlMime:JavaType
constructors:
- fullName: system.fabric.X509Credentials2.X509Credentials2(String certificatePath)
  name: X509Credentials2(String certificatePath)
  nameWithType: X509Credentials2.X509Credentials2(String certificatePath)
  parameters:
  - description: <p>The location of the X509 certificate </p>
    name: certificatePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new instance of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="system.fabric.X509Credentials2"></xref> class.</p>

    <p></p>
  syntax: public X509Credentials2(String certificatePath)
  uid: system.fabric.X509Credentials2.X509Credentials2(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="system.fabric.SecurityCredentials?alt=system.fabric.SecurityCredentials&text=SecurityCredentials" data-throw-if-not-resolved="False"/>
inheritedMembers:
- system.fabric.SecurityCredentials.getCredentialType()
- system.fabric.SecurityCredentials.loadFrom(FabricCodePackageActivationContext,String,String)
- system.fabric.SecurityCredentials.setCredentialType(CredentialType)
methods:
- fullName: system.fabric.X509Credentials2.getCertificateLoadPath()
  name: getCertificateLoadPath()
  nameWithType: X509Credentials2.getCertificateLoadPath()
  returns:
    description: <p>The name certificate location. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates the file/ folder location of the certificate</p>

    <p></p>
  syntax: public String getCertificateLoadPath()
  uid: system.fabric.X509Credentials2.getCertificateLoadPath()
- fullName: system.fabric.X509Credentials2.getProtectionLevel()
  name: getProtectionLevel()
  nameWithType: X509Credentials2.getProtectionLevel()
  returns:
    description: <p>The protection level of the credential. </p>
    type: <xref href="system.fabric.ProtectionLevel?alt=system.fabric.ProtectionLevel&text=ProtectionLevel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets how communication is protected, default value is <xref uid="system.fabric.ProtectionLevel.ENCRYPTANDSIGN" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ProtectionLevel#ENCRYPTANDSIGN"></xref>.</p>

    <p></p>
  syntax: public ProtectionLevel getProtectionLevel()
  uid: system.fabric.X509Credentials2.getProtectionLevel()
- fullName: system.fabric.X509Credentials2.getRemoteCertThumbprints()
  name: getRemoteCertThumbprints()
  nameWithType: X509Credentials2.getRemoteCertThumbprints()
  returns:
    description: <p>List of remote certificate thumbprints, used to validate remote X509Credentials </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the list of remote certificate thumbprints, used to validate remote X509Credentials</p>

    <p></p>
  syntax: public List<String> getRemoteCertThumbprints()
  uid: system.fabric.X509Credentials2.getRemoteCertThumbprints()
- fullName: system.fabric.X509Credentials2.getRemoteX509Names()
  name: getRemoteX509Names()
  nameWithType: X509Credentials2.getRemoteX509Names()
  returns:
    description: <p>the list of X509Name to validate remote X509Credentials </p>
    type: List&lt;<xref href="system.fabric.X509Name?alt=system.fabric.X509Name&text=X509Name" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the list of X509Name to validate remote X509Credentials</p>

    <p></p>
  syntax: public List<X509Name> getRemoteX509Names()
  uid: system.fabric.X509Credentials2.getRemoteX509Names()
- fullName: system.fabric.X509Credentials2.setProtectionLevel(ProtectionLevel protectionLevel)
  name: setProtectionLevel(ProtectionLevel protectionLevel)
  nameWithType: X509Credentials2.setProtectionLevel(ProtectionLevel protectionLevel)
  parameters:
  - description: <p>The protection level of the credential. </p>
    name: protectionLevel
    type: <xref href="system.fabric.ProtectionLevel?alt=system.fabric.ProtectionLevel&text=ProtectionLevel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets how communication is protected, default value is <xref uid="system.fabric.ProtectionLevel.ENCRYPTANDSIGN" data-throw-if-not-resolved="false" data-raw-source="system.fabric.ProtectionLevel#ENCRYPTANDSIGN"></xref>.</p>

    <p></p>
  syntax: public void setProtectionLevel(ProtectionLevel protectionLevel)
  uid: system.fabric.X509Credentials2.setProtectionLevel(ProtectionLevel)
nameWithType: X509Credentials2
syntax: public class X509Credentials2 extends SecurityCredentials
type: class
uid: system.fabric.X509Credentials2
fullName: system.fabric.X509Credentials2
name: X509Credentials2
package: system.fabric
summary: <p>Specifies the security credentials that are based upon X.509 certificates which are specified using the certificate path. </p>
metadata: {}
