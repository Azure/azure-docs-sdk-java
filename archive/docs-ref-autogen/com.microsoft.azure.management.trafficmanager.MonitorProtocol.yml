### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol.MonitorProtocol(String value)
  name: MonitorProtocol(String value)
  nameWithType: MonitorProtocol.MonitorProtocol(String value)
  parameters:
  - description: <p>the custom value </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a custom value for MonitorProtocol. </p>
  syntax: public MonitorProtocol(String value)
  uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol.MonitorProtocol(String)
fields:
- field:
    type: final <xref href="com.microsoft.azure.management.trafficmanager.MonitorProtocol?alt=com.microsoft.azure.management.trafficmanager.MonitorProtocol&text=MonitorProtocol" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol.HTTP
  name: HTTP
  nameWithType: MonitorProtocol.HTTP
  summary: <p>Static value HTTP for MonitorProtocol. </p>
  syntax: public static final MonitorProtocol HTTP= new MonitorProtocol("HTTP")
  uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol.HTTP
- field:
    type: final <xref href="com.microsoft.azure.management.trafficmanager.MonitorProtocol?alt=com.microsoft.azure.management.trafficmanager.MonitorProtocol&text=MonitorProtocol" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol.HTTPS
  name: HTTPS
  nameWithType: MonitorProtocol.HTTPS
  summary: <p>Static value HTTPS for MonitorProtocol. </p>
  syntax: public static final MonitorProtocol HTTPS= new MonitorProtocol("HTTPS")
  uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol.HTTPS
- field:
    type: final <xref href="com.microsoft.azure.management.trafficmanager.MonitorProtocol?alt=com.microsoft.azure.management.trafficmanager.MonitorProtocol&text=MonitorProtocol" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol.TCP
  name: TCP
  nameWithType: MonitorProtocol.TCP
  summary: <p>Static value TCP for MonitorProtocol. </p>
  syntax: public static final MonitorProtocol TCP= new MonitorProtocol("TCP")
  uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol.TCP
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol.equals(Object obj)
  name: equals(Object obj)
  nameWithType: MonitorProtocol.equals(Object obj)
  parameters:
  - name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol.equals(Object)
- fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol.hashCode()
  name: hashCode()
  nameWithType: MonitorProtocol.hashCode()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int hashCode()
  uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol.hashCode()
- fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol.toString()
  name: toString()
  nameWithType: MonitorProtocol.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol.toString()
nameWithType: MonitorProtocol
syntax: public class MonitorProtocol
type: class
uid: com.microsoft.azure.management.trafficmanager.MonitorProtocol
fullName: com.microsoft.azure.management.trafficmanager.MonitorProtocol
name: MonitorProtocol
package: com.microsoft.azure.management.trafficmanager
summary: <p>Defines values for MonitorProtocol. </p>
metadata: {}
