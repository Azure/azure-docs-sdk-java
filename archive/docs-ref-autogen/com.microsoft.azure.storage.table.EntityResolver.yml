### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.storage.table.EntityResolver<T>.resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String, EntityProperty> properties, String etag)
  name: resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String, EntityProperty> properties, String etag)
  nameWithType: EntityResolver<T>.resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String, EntityProperty> properties, String etag)
  parameters:
  - description: <p>A <code>String</code> containing the PartitionKey value for the entity. </p>
    name: partitionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> containing the RowKey value for the entity. </p>
    name: rowKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.util.Date</code> containing the Timestamp value for the entity. </p>
    name: timeStamp
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  - description: <p>The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data type and value pairs representing the table entity data. </p>
    name: properties
    type: HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A <code>String</code> containing the Etag for the entity. </p>
    name: etag
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs during the operation. </p>
  returns:
    description: <p>A reference to an object instance of type <code>T</code> constructed as a projection of the table entity parameters. </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a new object instance of type  containing a projection of the specified table entity data.</p>

    <p></p>
  syntax: public T resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String, EntityProperty> properties, String etag)
  uid: com.microsoft.azure.storage.table.EntityResolver.resolve(String,String,Date,HashMap<String, EntityProperty>,String)
nameWithType: EntityResolver<T>
syntax: public interface EntityResolver<T>
type: interface
typeParameters:
- description: <p>The type of the object that the resolver produces. </p>
  name: T
uid: com.microsoft.azure.storage.table.EntityResolver
fullName: com.microsoft.azure.storage.table.EntityResolver<T>
name: EntityResolver<T>
package: com.microsoft.azure.storage.table
summary: >-
  <p>An interface to perform client side projection on a retrieved entity. An <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> instance must implement a  method projecting the entity data represented by the parameters passed in as a new instance of the type specified by the type parameter. </p>

  <p>This interface is useful for converting directly from table entity data to a client object type without requiring a separate table entity class type that deserializes every property individually. For example, a client can perform a client side projection of a <em>Customer</em> entity by simply returning the  for the <em>CustomerName</em> property of each entity. The result of this projection will be a collection of s containing each customer name.</p>

  <p></p>
metadata: {}
