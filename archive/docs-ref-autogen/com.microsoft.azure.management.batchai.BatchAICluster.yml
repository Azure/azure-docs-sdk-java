### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.adminUserName()
  name: adminUserName()
  nameWithType: BatchAICluster.adminUserName()
  returns:
    description: <p>administrator account name for compute nodes. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String adminUserName()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.adminUserName()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.allocationState()
  name: allocationState()
  nameWithType: BatchAICluster.allocationState()
  returns:
    description: <p>cluster allocation state </p>
    type: <xref href="com.microsoft.azure.management.batchai.AllocationState?alt=com.microsoft.azure.management.batchai.AllocationState&text=AllocationState" data-throw-if-not-resolved="False"/>
  summary: <p>Indicates whether the cluster is resizing. </p>
  syntax: public AllocationState allocationState()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.allocationState()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.allocationStateTransitionTime()
  name: allocationStateTransitionTime()
  nameWithType: BatchAICluster.allocationStateTransitionTime()
  returns:
    description: <p>the time at which the cluster entered its current allocation state </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime allocationStateTransitionTime()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.allocationStateTransitionTime()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.creationTime()
  name: creationTime()
  nameWithType: BatchAICluster.creationTime()
  returns:
    description: <p>the creation time of the cluster </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime creationTime()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.creationTime()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.currentNodeCount()
  name: currentNodeCount()
  nameWithType: BatchAICluster.currentNodeCount()
  returns:
    description: <p>the number of compute nodes currently assigned to the cluster </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int currentNodeCount()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.currentNodeCount()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.errors()
  name: errors()
  nameWithType: BatchAICluster.errors()
  returns:
    description: <p>all the errors encountered by various compute nodes during node setup </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batchai.BatchAIError?alt=com.microsoft.azure.management.batchai.BatchAIError&text=BatchAIError" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<BatchAIError> errors()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.errors()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.listRemoteLoginInformation()
  name: listRemoteLoginInformation()
  nameWithType: BatchAICluster.listRemoteLoginInformation()
  returns:
    description: <p>list of remote login details </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.RemoteLoginInformation?alt=com.microsoft.azure.management.batchai.RemoteLoginInformation&text=RemoteLoginInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Get the IP address, port of all the compute nodes in the Cluster. </p>
  syntax: public PagedList<RemoteLoginInformation> listRemoteLoginInformation()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.listRemoteLoginInformation()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.listRemoteLoginInformationAsync()
  name: listRemoteLoginInformationAsync()
  nameWithType: BatchAICluster.listRemoteLoginInformationAsync()
  returns:
    description: <p>an observable that emits remote login information </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.RemoteLoginInformation?alt=com.microsoft.azure.management.batchai.RemoteLoginInformation&text=RemoteLoginInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Get the IP address, port of all the compute nodes in the Cluster. </p>
  syntax: public Observable<RemoteLoginInformation> listRemoteLoginInformationAsync()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.listRemoteLoginInformationAsync()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.nodeSetup()
  name: nodeSetup()
  nameWithType: BatchAICluster.nodeSetup()
  returns:
    description: <p>setup to be done on all compute nodes in the Cluster </p>
    type: <xref href="com.microsoft.azure.management.batchai.NodeSetup?alt=com.microsoft.azure.management.batchai.NodeSetup&text=NodeSetup" data-throw-if-not-resolved="False"/>
  syntax: public NodeSetup nodeSetup()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.nodeSetup()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.nodeStateCounts()
  name: nodeStateCounts()
  nameWithType: BatchAICluster.nodeStateCounts()
  returns:
    description: <p>counts of various node states on the cluster </p>
    type: <xref href="com.microsoft.azure.management.batchai.NodeStateCounts?alt=com.microsoft.azure.management.batchai.NodeStateCounts&text=NodeStateCounts" data-throw-if-not-resolved="False"/>
  syntax: public NodeStateCounts nodeStateCounts()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.nodeStateCounts()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.provisioningState()
  name: provisioningState()
  nameWithType: BatchAICluster.provisioningState()
  returns:
    description: <p>the provisioning state of the cluster </p>
    type: <xref href="com.microsoft.azure.management.batchai.ProvisioningState?alt=com.microsoft.azure.management.batchai.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.provisioningState()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.provisioningStateTransitionTime()
  name: provisioningStateTransitionTime()
  nameWithType: BatchAICluster.provisioningStateTransitionTime()
  returns:
    description: <p>the provisioning state transition time of the cluster </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime provisioningStateTransitionTime()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.provisioningStateTransitionTime()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.scaleSettings()
  name: scaleSettings()
  nameWithType: BatchAICluster.scaleSettings()
  returns:
    description: <p>desired scale for the Cluster </p>
    type: <xref href="com.microsoft.azure.management.batchai.ScaleSettings?alt=com.microsoft.azure.management.batchai.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  syntax: public ScaleSettings scaleSettings()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.scaleSettings()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.subnet()
  name: subnet()
  nameWithType: BatchAICluster.subnet()
  returns:
    description: <p>the identifier of the subnet </p>
    type: <xref href="com.microsoft.azure.management.batchai.ResourceId?alt=com.microsoft.azure.management.batchai.ResourceId&text=ResourceId" data-throw-if-not-resolved="False"/>
  syntax: public ResourceId subnet()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.subnet()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.virtualMachineConfiguration()
  name: virtualMachineConfiguration()
  nameWithType: BatchAICluster.virtualMachineConfiguration()
  returns:
    description: <p>settings for OS image and mounted data volumes </p>
    type: <xref href="com.microsoft.azure.management.batchai.VirtualMachineConfiguration?alt=com.microsoft.azure.management.batchai.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public VirtualMachineConfiguration virtualMachineConfiguration()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.virtualMachineConfiguration()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.vmPriority()
  name: vmPriority()
  nameWithType: BatchAICluster.vmPriority()
  returns:
    description: <p>virtual machine priority status </p>
    type: <xref href="com.microsoft.azure.management.batchai.VmPriority?alt=com.microsoft.azure.management.batchai.VmPriority&text=VmPriority" data-throw-if-not-resolved="False"/>
  summary: <p>The default value is dedicated. The node can get preempted while the task is running if lowpriority is choosen. This is best suited if the workload is checkpointing and can be restarted. </p>
  syntax: public VmPriority vmPriority()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.vmPriority()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.vmSize()
  name: vmSize()
  nameWithType: BatchAICluster.vmSize()
  returns:
    description: <p>the size of the virtual machines in the cluster </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>All virtual machines in a cluster are the same size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or Sizes for Virtual Machines (Windows). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series). </p>
  syntax: public String vmSize()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.vmSize()
- fullName: com.microsoft.azure.management.batchai.BatchAICluster.workspace()
  name: workspace()
  nameWithType: BatchAICluster.workspace()
  returns:
    description: <p>workspace this cluster belongs to </p>
    type: <xref href="com.microsoft.azure.management.batchai.BatchAIWorkspace?alt=com.microsoft.azure.management.batchai.BatchAIWorkspace&text=BatchAIWorkspace" data-throw-if-not-resolved="False"/>
  syntax: public BatchAIWorkspace workspace()
  uid: com.microsoft.azure.management.batchai.BatchAICluster.workspace()
nameWithType: BatchAICluster
syntax: public interface BatchAICluster extends HasInner<ClusterInner>,Indexable,HasId,HasName,HasManager<BatchAIManager>,Refreshable<BatchAICluster>,Updatable<BatchAICluster.Update>
type: interface
uid: com.microsoft.azure.management.batchai.BatchAICluster
fullName: com.microsoft.azure.management.batchai.BatchAICluster
name: BatchAICluster
package: com.microsoft.azure.management.batchai
summary: <p>Entry point for Batch AI cluster management API in Azure. </p>
metadata: {}
