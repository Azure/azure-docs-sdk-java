### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.OperationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  name: OperationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  nameWithType: OperationsInner.OperationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl?alt=com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl&text=BatchManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of OperationsInner.</p>

    <p></p>
  syntax: public OperationsInner(Retrofit retrofit, BatchManagementClientImpl client)
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.OperationsInner(Retrofit,BatchManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.list()
  name: list()
  nameWithType: OperationsInner.list()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;OperationInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public PagedList<OperationInner> list()
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.list()
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listAsync()
  name: listAsync()
  nameWithType: OperationsInner.listAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OperationInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public Observable<Page<OperationInner>> listAsync()
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listAsync()
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listAsync(final ListOperationCallback<OperationInner> serviceCallback)
  name: listAsync(final ListOperationCallback<OperationInner> serviceCallback)
  nameWithType: OperationsInner.listAsync(final ListOperationCallback<OperationInner> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public ServiceFuture<List<OperationInner>> listAsync(final ListOperationCallback<OperationInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listAsync(final ListOperationCallback<OperationInner>)
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listNext(final String nextPageLink)
  name: listNext(final String nextPageLink)
  nameWithType: OperationsInner.listNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;OperationInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public PagedList<OperationInner> listNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextAsync(final String nextPageLink)
  name: listNextAsync(final String nextPageLink)
  nameWithType: OperationsInner.listNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OperationInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public Observable<Page<OperationInner>> listNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<OperationInner>> serviceFuture, final ListOperationCallback<OperationInner> serviceCallback)
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<OperationInner>> serviceFuture, final ListOperationCallback<OperationInner> serviceCallback)
  nameWithType: OperationsInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<OperationInner>> serviceFuture, final ListOperationCallback<OperationInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public ServiceFuture<List<OperationInner>> listNextAsync(final String nextPageLink, final ServiceFuture<List<OperationInner>> serviceFuture, final ListOperationCallback<OperationInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextAsync(final String,final ServiceFuture<List<OperationInner>>,final ListOperationCallback<OperationInner>)
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextSinglePageAsync(final String nextPageLink)
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: OperationsInner.listNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;OperationInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p>ServiceResponse&lt;PageImpl&lt;OperationInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<OperationInner>>> listNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextWithServiceResponseAsync(final String nextPageLink)
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: OperationsInner.listNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OperationInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<OperationInner>>> listNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listSinglePageAsync()
  name: listSinglePageAsync()
  nameWithType: OperationsInner.listSinglePageAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;OperationInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<OperationInner>>> listSinglePageAsync()
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listSinglePageAsync()
- fullName: com.microsoft.azure.management.batch.implementation.OperationsInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: OperationsInner.listWithServiceResponseAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OperationInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OperationInner?alt=com.microsoft.azure.management.batch.implementation.OperationInner&text=OperationInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists available operations for the Microsoft.Batch provider.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<OperationInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.batch.implementation.OperationsInner.listWithServiceResponseAsync()
nameWithType: OperationsInner
syntax: public class OperationsInner
type: class
uid: com.microsoft.azure.management.batch.implementation.OperationsInner
fullName: com.microsoft.azure.management.batch.implementation.OperationsInner
name: OperationsInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>An instance of this class provides access to all the operations defined in Operations. </p>
metadata: {}
