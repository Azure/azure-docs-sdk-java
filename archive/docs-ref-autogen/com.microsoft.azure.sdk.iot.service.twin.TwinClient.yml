### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String connectionString)
  name: TwinClient(String connectionString)
  nameWithType: TwinClient.TwinClient(String connectionString)
  parameters:
  - description: <p>The iot hub connection string. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string.</p>

    <p></p>
  syntax: public TwinClient(String connectionString)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String hostName, AzureSasCredential azureSasCredential)
  name: TwinClient(String hostName, AzureSasCredential azureSasCredential)
  nameWithType: TwinClient.TwinClient(String hostName, AzureSasCredential azureSasCredential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new TwinClient instance.</p>

    <p></p>
  syntax: public TwinClient(String hostName, AzureSasCredential azureSasCredential)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String,AzureSasCredential)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String hostName, AzureSasCredential azureSasCredential, TwinClientOptions options)
  name: TwinClient(String hostName, AzureSasCredential azureSasCredential, TwinClientOptions options)
  nameWithType: TwinClient.TwinClient(String hostName, AzureSasCredential azureSasCredential, TwinClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The SAS token provider that will be used for authentication. </p>
    name: azureSasCredential
    type: <xref href="AzureSasCredential?alt=AzureSasCredential&text=AzureSasCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.TwinClientOptions?alt=com.microsoft.azure.sdk.iot.service.twin.TwinClientOptions&text=TwinClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new TwinClient instance.</p>

    <p></p>
  syntax: public TwinClient(String hostName, AzureSasCredential azureSasCredential, TwinClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String,AzureSasCredential,TwinClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String hostName, TokenCredential credential)
  name: TwinClient(String hostName, TokenCredential credential)
  nameWithType: TwinClient.TwinClient(String hostName, TokenCredential credential)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new TwinClient instance.</p>

    <p></p>
  syntax: public TwinClient(String hostName, TokenCredential credential)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String,TokenCredential)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String hostName, TokenCredential credential, TwinClientOptions options)
  name: TwinClient(String hostName, TokenCredential credential, TwinClientOptions options)
  nameWithType: TwinClient.TwinClient(String hostName, TokenCredential credential, TwinClientOptions options)
  parameters:
  - description: <p>The hostname of your IoT Hub instance (For instance, "your-iot-hub.azure-devices.net") </p>
    name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The custom <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TokenCredential"></xref> that will provide authentication tokens to this library when they are needed. The provided tokens must be Json Web Tokens. </p>
    name: credential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  - description: <p>The connection options to use when connecting to the service. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.TwinClientOptions?alt=com.microsoft.azure.sdk.iot.service.twin.TwinClientOptions&text=TwinClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new TwinClient instance.</p>

    <p></p>
  syntax: public TwinClient(String hostName, TokenCredential credential, TwinClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String,TokenCredential,TwinClientOptions)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String connectionString, TwinClientOptions options)
  name: TwinClient(String connectionString, TwinClientOptions options)
  nameWithType: TwinClient.TwinClient(String connectionString, TwinClientOptions options)
  parameters:
  - description: <p>The iot hub connection string. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the configurable options for each operation on this client. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.TwinClientOptions?alt=com.microsoft.azure.sdk.iot.service.twin.TwinClientOptions&text=TwinClientOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create instance from connection string.</p>

    <p></p>
  syntax: public TwinClient(String connectionString, TwinClientOptions options)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.TwinClient(String,TwinClientOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.get(String deviceId)
  name: get(String deviceId)
  nameWithType: TwinClient.get(String deviceId)
  parameters:
  - description: <p>The id of the device whose twin will be retrieved. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed. </p>
  returns:
    description: <p>The retrieved twin object for the specified device. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method retrieves device twin for the specified device.</p>

    <p></p>
  syntax: public Twin get(String deviceId)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.get(String)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.get(String deviceId, String moduleId)
  name: get(String deviceId, String moduleId)
  nameWithType: TwinClient.get(String deviceId, String moduleId)
  parameters:
  - description: <p>The id of the device whose twin will be retrieved. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The id of the module on the device whose twin will be retrieved. </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed. </p>
  returns:
    description: <p>The retrieved twin object for the specified module on the specified device. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method retrieves device twin for the specified device.</p>

    <p></p>
  syntax: public Twin get(String deviceId, String moduleId)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.get(String,String)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.patch(Twin twin)
  name: patch(Twin twin)
  nameWithType: TwinClient.patch(Twin twin)
  parameters:
  - description: <p>The twin to be patched. To delete a particular property, set the value to null. </p>
    name: twin
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed. </p>
  returns:
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method patches the twin for the specified device. </p>

    <p>See <a href="https://docs.microsoft.com/en-us/rest/api/iothub/service/devices/updatetwin">PATCH</a> for more details.</p>

    <p></p>
  syntax: public Twin patch(Twin twin)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.patch(Twin)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.patch(Twin twin, String ifMatch)
  name: patch(Twin twin, String ifMatch)
  nameWithType: TwinClient.patch(Twin twin, String ifMatch)
  parameters:
  - description: <p>The twin to be patched. To delete a particular property, set the value to null. </p>
    name: twin
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  - description: <p>the string representing a ETag for the device twin, as per RFC7232. If null, no if-match header will be sent as a part of this request and it will be executed unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed. </p>
  returns:
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method patches the twin for the specified device. </p>

    <p>See <a href="https://docs.microsoft.com/en-us/rest/api/iothub/service/devices/updatetwin">PATCH</a> for more details.</p>

    <p></p>
  syntax: public Twin patch(Twin twin, String ifMatch)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.patch(Twin,String)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.query(String query)
  name: query(String query)
  nameWithType: TwinClient.query(String query)
  parameters:
  - description: <p>The IoT Hub query for selecting which twins to getJob. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Twins that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse&text=TwinQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of Twins.</p>

    <p></p>
  syntax: public TwinQueryResponse query(String query)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.query(String)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.query(String query, QueryPageOptions options)
  name: query(String query, QueryPageOptions options)
  nameWithType: TwinClient.query(String query, QueryPageOptions options)
  parameters:
  - description: <p>The IoT Hub query for selecting which twins to getJob. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The optional parameters used to decide how the query's results are returned. May not be null. </p>
    name: options
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.QueryPageOptions?alt=com.microsoft.azure.sdk.iot.service.query.QueryPageOptions&text=QueryPageOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If IoT Hub cannot be reached due to network level issues. </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If the request fails for non-network level issues such as an incorrectly formatted query. </p>
  returns:
    description: <p>The pageable set of Twins that were queried. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse?alt=com.microsoft.azure.sdk.iot.service.query.TwinQueryResponse&text=TwinQueryResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query from your IoT Hub's set of Twins.</p>

    <p></p>
  syntax: public TwinQueryResponse query(String query, QueryPageOptions options)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.query(String,QueryPageOptions)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.replace(Twin twin)
  name: replace(Twin twin)
  nameWithType: TwinClient.replace(Twin twin)
  parameters:
  - description: <p>The twin object to replace the current twin object. </p>
    name: twin
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any an IoT hub level exception is thrown. For instance, if the sendHttpRequest is unauthorized, a exception that extends IotHubException will be thrown. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the sendHttpRequest failed to send to IoT hub. </p>
  returns:
    description: <p>The Twin object's current state returned from the service after the replace operation. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Replace the full twin for a given device or module with the provided twin.</p>

    <p></p>
  syntax: public Twin replace(Twin twin)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.replace(Twin)
- fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient.replace(Twin twin, String ifMatch)
  name: replace(Twin twin, String ifMatch)
  nameWithType: TwinClient.replace(Twin twin, String ifMatch)
  parameters:
  - description: <p>The twin object to replace the current twin object. </p>
    name: twin
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  - description: <p>the string representing a ETag for the device twin, as per RFC7232. If null, no if-match header will be sent as a part of this request and it will be executed unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any an IoT hub level exception is thrown. For instance, if the sendHttpRequest is unauthorized, an exception that extends IotHubException will be thrown. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If the sendHttpRequest failed to send to IoT hub. </p>
  returns:
    description: <p>The Twin object's current state returned from the service after the replace operation. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.twin.Twin?alt=com.microsoft.azure.sdk.iot.service.twin.Twin&text=Twin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Replace the full twin for a given device or module with the provided twin.</p>

    <p></p>
  syntax: public Twin replace(Twin twin, String ifMatch)
  uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient.replace(Twin,String)
nameWithType: TwinClient
syntax: public class TwinClient
type: class
uid: com.microsoft.azure.sdk.iot.service.twin.TwinClient
fullName: com.microsoft.azure.sdk.iot.service.twin.TwinClient
name: TwinClient
package: com.microsoft.azure.sdk.iot.service.twin
summary: <p>Use the TwinClient class to manage the device twins in IoT hubs. </p>
metadata: {}
