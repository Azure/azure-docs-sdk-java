### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ProxyResource" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner.allowUpdates()
  name: allowUpdates()
  nameWithType: ApplicationInner.allowUpdates()
  returns:
    description: <p>the allowUpdates value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a value indicating whether packages within the application may be overwritten using the same version string.</p>

    <p></p>
  syntax: public Boolean allowUpdates()
  uid: com.microsoft.azure.management.batch.implementation.ApplicationInner.allowUpdates()
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner.defaultVersion()
  name: defaultVersion()
  nameWithType: ApplicationInner.defaultVersion()
  returns:
    description: <p>the defaultVersion value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.</p>

    <p></p>
  syntax: public String defaultVersion()
  uid: com.microsoft.azure.management.batch.implementation.ApplicationInner.defaultVersion()
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner.displayName()
  name: displayName()
  nameWithType: ApplicationInner.displayName()
  returns:
    description: <p>the displayName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the display name for the application.</p>

    <p></p>
  syntax: public String displayName()
  uid: com.microsoft.azure.management.batch.implementation.ApplicationInner.displayName()
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner.etag()
  name: etag()
  nameWithType: ApplicationInner.etag()
  returns:
    description: <p>the etag value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ETag of the resource, used for concurrency statements.</p>

    <p></p>
  syntax: public String etag()
  uid: com.microsoft.azure.management.batch.implementation.ApplicationInner.etag()
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner.withAllowUpdates(Boolean allowUpdates)
  name: withAllowUpdates(Boolean allowUpdates)
  nameWithType: ApplicationInner.withAllowUpdates(Boolean allowUpdates)
  parameters:
  - description: <p>the allowUpdates value to set </p>
    name: allowUpdates
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ApplicationInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a value indicating whether packages within the application may be overwritten using the same version string.</p>

    <p></p>
  syntax: public ApplicationInner withAllowUpdates(Boolean allowUpdates)
  uid: com.microsoft.azure.management.batch.implementation.ApplicationInner.withAllowUpdates(Boolean)
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner.withDefaultVersion(String defaultVersion)
  name: withDefaultVersion(String defaultVersion)
  nameWithType: ApplicationInner.withDefaultVersion(String defaultVersion)
  parameters:
  - description: <p>the defaultVersion value to set </p>
    name: defaultVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ApplicationInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.</p>

    <p></p>
  syntax: public ApplicationInner withDefaultVersion(String defaultVersion)
  uid: com.microsoft.azure.management.batch.implementation.ApplicationInner.withDefaultVersion(String)
- fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner.withDisplayName(String displayName)
  name: withDisplayName(String displayName)
  nameWithType: ApplicationInner.withDisplayName(String displayName)
  parameters:
  - description: <p>the displayName value to set </p>
    name: displayName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ApplicationInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.ApplicationInner?alt=com.microsoft.azure.management.batch.implementation.ApplicationInner&text=ApplicationInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the display name for the application.</p>

    <p></p>
  syntax: public ApplicationInner withDisplayName(String displayName)
  uid: com.microsoft.azure.management.batch.implementation.ApplicationInner.withDisplayName(String)
nameWithType: ApplicationInner
syntax: public class ApplicationInner
type: class
uid: com.microsoft.azure.management.batch.implementation.ApplicationInner
fullName: com.microsoft.azure.management.batch.implementation.ApplicationInner
name: ApplicationInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>Contains information about an application in a Batch account. </p>
metadata: {}
