### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.identifierUri()
  name: identifierUri()
  nameWithType: WebhookReceiver.identifierUri()
  returns:
    description: <p>the identifierUri value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get indicates the identifier uri for aad auth.</p>

    <p></p>
  syntax: public String identifierUri()
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.identifierUri()
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.name()
  name: name()
  nameWithType: WebhookReceiver.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the webhook receiver. Names must be unique across all receivers within an action group.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.name()
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.objectId()
  name: objectId()
  nameWithType: WebhookReceiver.objectId()
  returns:
    description: <p>the objectId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get indicates the webhook app object Id for aad auth.</p>

    <p></p>
  syntax: public String objectId()
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.objectId()
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.serviceUri()
  name: serviceUri()
  nameWithType: WebhookReceiver.serviceUri()
  returns:
    description: <p>the serviceUri value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the URI where webhooks should be sent.</p>

    <p></p>
  syntax: public String serviceUri()
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.serviceUri()
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.tenantId()
  name: tenantId()
  nameWithType: WebhookReceiver.tenantId()
  returns:
    description: <p>the tenantId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get indicates the tenant id for aad auth.</p>

    <p></p>
  syntax: public String tenantId()
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.tenantId()
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.useAadAuth()
  name: useAadAuth()
  nameWithType: WebhookReceiver.useAadAuth()
  returns:
    description: <p>the useAadAuth value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get indicates whether or not use AAD authentication.</p>

    <p></p>
  syntax: public Boolean useAadAuth()
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.useAadAuth()
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.useCommonAlertSchema()
  name: useCommonAlertSchema()
  nameWithType: WebhookReceiver.useCommonAlertSchema()
  returns:
    description: <p>the useCommonAlertSchema value </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get indicates whether to use common alert schema.</p>

    <p></p>
  syntax: public boolean useCommonAlertSchema()
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.useCommonAlertSchema()
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.withIdentifierUri(String identifierUri)
  name: withIdentifierUri(String identifierUri)
  nameWithType: WebhookReceiver.withIdentifierUri(String identifierUri)
  parameters:
  - description: <p>the identifierUri value to set </p>
    name: identifierUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookReceiver object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.WebhookReceiver?alt=com.microsoft.azure.management.monitor.WebhookReceiver&text=WebhookReceiver" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set indicates the identifier uri for aad auth.</p>

    <p></p>
  syntax: public WebhookReceiver withIdentifierUri(String identifierUri)
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.withIdentifierUri(String)
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.withName(String name)
  name: withName(String name)
  nameWithType: WebhookReceiver.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookReceiver object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.WebhookReceiver?alt=com.microsoft.azure.management.monitor.WebhookReceiver&text=WebhookReceiver" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name of the webhook receiver. Names must be unique across all receivers within an action group.</p>

    <p></p>
  syntax: public WebhookReceiver withName(String name)
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.withName(String)
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.withObjectId(String objectId)
  name: withObjectId(String objectId)
  nameWithType: WebhookReceiver.withObjectId(String objectId)
  parameters:
  - description: <p>the objectId value to set </p>
    name: objectId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookReceiver object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.WebhookReceiver?alt=com.microsoft.azure.management.monitor.WebhookReceiver&text=WebhookReceiver" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set indicates the webhook app object Id for aad auth.</p>

    <p></p>
  syntax: public WebhookReceiver withObjectId(String objectId)
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.withObjectId(String)
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.withServiceUri(String serviceUri)
  name: withServiceUri(String serviceUri)
  nameWithType: WebhookReceiver.withServiceUri(String serviceUri)
  parameters:
  - description: <p>the serviceUri value to set </p>
    name: serviceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookReceiver object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.WebhookReceiver?alt=com.microsoft.azure.management.monitor.WebhookReceiver&text=WebhookReceiver" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the URI where webhooks should be sent.</p>

    <p></p>
  syntax: public WebhookReceiver withServiceUri(String serviceUri)
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.withServiceUri(String)
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.withTenantId(String tenantId)
  name: withTenantId(String tenantId)
  nameWithType: WebhookReceiver.withTenantId(String tenantId)
  parameters:
  - description: <p>the tenantId value to set </p>
    name: tenantId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookReceiver object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.WebhookReceiver?alt=com.microsoft.azure.management.monitor.WebhookReceiver&text=WebhookReceiver" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set indicates the tenant id for aad auth.</p>

    <p></p>
  syntax: public WebhookReceiver withTenantId(String tenantId)
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.withTenantId(String)
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.withUseAadAuth(Boolean useAadAuth)
  name: withUseAadAuth(Boolean useAadAuth)
  nameWithType: WebhookReceiver.withUseAadAuth(Boolean useAadAuth)
  parameters:
  - description: <p>the useAadAuth value to set </p>
    name: useAadAuth
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookReceiver object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.WebhookReceiver?alt=com.microsoft.azure.management.monitor.WebhookReceiver&text=WebhookReceiver" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set indicates whether or not use AAD authentication.</p>

    <p></p>
  syntax: public WebhookReceiver withUseAadAuth(Boolean useAadAuth)
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.withUseAadAuth(Boolean)
- fullName: com.microsoft.azure.management.monitor.WebhookReceiver.withUseCommonAlertSchema(boolean useCommonAlertSchema)
  name: withUseCommonAlertSchema(boolean useCommonAlertSchema)
  nameWithType: WebhookReceiver.withUseCommonAlertSchema(boolean useCommonAlertSchema)
  parameters:
  - description: <p>the useCommonAlertSchema value to set </p>
    name: useCommonAlertSchema
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookReceiver object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.WebhookReceiver?alt=com.microsoft.azure.management.monitor.WebhookReceiver&text=WebhookReceiver" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set indicates whether to use common alert schema.</p>

    <p></p>
  syntax: public WebhookReceiver withUseCommonAlertSchema(boolean useCommonAlertSchema)
  uid: com.microsoft.azure.management.monitor.WebhookReceiver.withUseCommonAlertSchema(boolean)
nameWithType: WebhookReceiver
syntax: public class WebhookReceiver
type: class
uid: com.microsoft.azure.management.monitor.WebhookReceiver
fullName: com.microsoft.azure.management.monitor.WebhookReceiver
name: WebhookReceiver
package: com.microsoft.azure.management.monitor
summary: <p>A webhook receiver. </p>
metadata: {}
