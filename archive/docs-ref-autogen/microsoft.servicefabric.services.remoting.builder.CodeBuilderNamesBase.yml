### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.CodeBuilderNamesBase()
  name: CodeBuilderNamesBase()
  nameWithType: CodeBuilderNamesBase.CodeBuilderNamesBase()
  syntax: protected CodeBuilderNamesBase()
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.CodeBuilderNamesBase()
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.CodeBuilderNamesBase(String namePrefix)
  name: CodeBuilderNamesBase(String namePrefix)
  nameWithType: CodeBuilderNamesBase.CodeBuilderNamesBase(String namePrefix)
  parameters:
  - name: namePrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected CodeBuilderNamesBase(String namePrefix)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.CodeBuilderNamesBase(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.builder.CodeBuilderNames" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getInterfaceId()
  name: getInterfaceId()
  nameWithType: CodeBuilderNamesBase.getInterfaceId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getInterfaceId()
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getInterfaceId()
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getMethodDispatcherClassFQN(Class<?> interfaceType)
  name: getMethodDispatcherClassFQN(Class<?> interfaceType)
  nameWithType: CodeBuilderNamesBase.getMethodDispatcherClassFQN(Class<?> interfaceType)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getMethodDispatcherClassFQN(Class<?> interfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getMethodDispatcherClassFQN(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getMethodDispatcherClassName(Class<?> interfaceType)
  name: getMethodDispatcherClassName(Class<?> interfaceType)
  nameWithType: CodeBuilderNamesBase.getMethodDispatcherClassName(Class<?> interfaceType)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getMethodDispatcherClassName(Class<?> interfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getMethodDispatcherClassName(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getMethodId()
  name: getMethodId()
  nameWithType: CodeBuilderNamesBase.getMethodId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getMethodId()
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getMethodId()
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyActivatorClassFQN(Class<?> interfaceType)
  name: getProxyActivatorClassFQN(Class<?> interfaceType)
  nameWithType: CodeBuilderNamesBase.getProxyActivatorClassFQN(Class<?> interfaceType)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getProxyActivatorClassFQN(Class<?> interfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyActivatorClassFQN(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyActivatorClassName(Class<?> interfaceType)
  name: getProxyActivatorClassName(Class<?> interfaceType)
  nameWithType: CodeBuilderNamesBase.getProxyActivatorClassName(Class<?> interfaceType)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getProxyActivatorClassName(Class<?> interfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyActivatorClassName(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyClassFQN(Class<?> interfaceType)
  name: getProxyClassFQN(Class<?> interfaceType)
  nameWithType: CodeBuilderNamesBase.getProxyClassFQN(Class<?> interfaceType)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getProxyClassFQN(Class<?> interfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyClassFQN(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyClassName(Class<?> interfaceType)
  name: getProxyClassName(Class<?> interfaceType)
  nameWithType: CodeBuilderNamesBase.getProxyClassName(Class<?> interfaceType)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getProxyClassName(Class<?> interfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getProxyClassName(Class<?>)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRequestBody()
  name: getRequestBody()
  nameWithType: CodeBuilderNamesBase.getRequestBody()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getRequestBody()
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRequestBody()
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRequestBodyTypeFQN(Class<?> interfaceType, String methodName)
  name: getRequestBodyTypeFQN(Class<?> interfaceType, String methodName)
  nameWithType: CodeBuilderNamesBase.getRequestBodyTypeFQN(Class<?> interfaceType, String methodName)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  - name: methodName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getRequestBodyTypeFQN(Class<?> interfaceType, String methodName)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRequestBodyTypeFQN(Class<?>,String)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRequestBodyTypeName(String methodName)
  name: getRequestBodyTypeName(String methodName)
  nameWithType: CodeBuilderNamesBase.getRequestBodyTypeName(String methodName)
  parameters:
  - name: methodName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getRequestBodyTypeName(String methodName)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRequestBodyTypeName(String)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getResponseBodyTypeFQN(Class<?> interfaceType, String methodName)
  name: getResponseBodyTypeFQN(Class<?> interfaceType, String methodName)
  nameWithType: CodeBuilderNamesBase.getResponseBodyTypeFQN(Class<?> interfaceType, String methodName)
  parameters:
  - name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  - name: methodName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getResponseBodyTypeFQN(Class<?> interfaceType, String methodName)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getResponseBodyTypeFQN(Class<?>,String)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getResponseBodyTypeName(String methodName)
  name: getResponseBodyTypeName(String methodName)
  nameWithType: CodeBuilderNamesBase.getResponseBodyTypeName(String methodName)
  parameters:
  - name: methodName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getResponseBodyTypeName(String methodName)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getResponseBodyTypeName(String)
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRetval()
  name: getRetval()
  nameWithType: CodeBuilderNamesBase.getRetval()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getRetval()
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase.getRetval()
nameWithType: CodeBuilderNamesBase
syntax: public class CodeBuilderNamesBase
type: class
uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase
fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderNamesBase
name: CodeBuilderNamesBase
package: microsoft.servicefabric.services.remoting.builder
summary: <p>Base class from which actor and service CodeBuildNames classes extend. For internal purpose only. </p>
metadata: {}
