### YamlMime:JavaType
constructors:
- fullName: com.microsoft.aad.adal.AuthenticationParameters.AuthenticationParameters()
  name: AuthenticationParameters()
  nameWithType: AuthenticationParameters.AuthenticationParameters()
  summary: <p>Creates AuthenticationParameters. </p>
  syntax: public AuthenticationParameters()
  uid: com.microsoft.aad.adal.AuthenticationParameters.AuthenticationParameters()
fields:
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_INVALID_FORMAT
  name: AUTH_HEADER_INVALID_FORMAT
  nameWithType: AuthenticationParameters.AUTH_HEADER_INVALID_FORMAT
  summary: <p>Invalid authentication header format. </p>
  syntax: public static final String AUTH_HEADER_INVALID_FORMAT= "Invalid authentication header format"
  uid: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_INVALID_FORMAT
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_MISSING
  name: AUTH_HEADER_MISSING
  nameWithType: AuthenticationParameters.AUTH_HEADER_MISSING
  summary: <p>WWW-Authenticate header was expected in the response. </p>
  syntax: public static final String AUTH_HEADER_MISSING= "WWW-Authenticate header was expected in the response"
  uid: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_MISSING
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_MISSING_AUTHORITY
  name: AUTH_HEADER_MISSING_AUTHORITY
  nameWithType: AuthenticationParameters.AUTH_HEADER_MISSING_AUTHORITY
  summary: <p>WWW-Authenticate header is missing authorization_uri. </p>
  syntax: public static final String AUTH_HEADER_MISSING_AUTHORITY= "WWW-Authenticate header is missing authorization_uri."
  uid: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_MISSING_AUTHORITY
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_WRONG_STATUS
  name: AUTH_HEADER_WRONG_STATUS
  nameWithType: AuthenticationParameters.AUTH_HEADER_WRONG_STATUS
  summary: <p>Unauthorized http response (status code 401) was expected. </p>
  syntax: public static final String AUTH_HEADER_WRONG_STATUS= "Unauthorized http response (status code 401) was expected"
  uid: com.microsoft.aad.adal.AuthenticationParameters.AUTH_HEADER_WRONG_STATUS
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.AUTHENTICATE_HEADER
  name: AUTHENTICATE_HEADER
  nameWithType: AuthenticationParameters.AUTHENTICATE_HEADER
  summary: '<p>Constant Authenticate header: WWW-Authenticate. </p>'
  syntax: public static final String AUTHENTICATE_HEADER= "WWW-Authenticate"
  uid: com.microsoft.aad.adal.AuthenticationParameters.AUTHENTICATE_HEADER
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.AUTHORITY_KEY
  name: AUTHORITY_KEY
  nameWithType: AuthenticationParameters.AUTHORITY_KEY
  summary: <p>Constant Authority key. </p>
  syntax: public static final String AUTHORITY_KEY= "authorization_uri"
  uid: com.microsoft.aad.adal.AuthenticationParameters.AUTHORITY_KEY
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.BEARER
  name: BEARER
  nameWithType: AuthenticationParameters.BEARER
  summary: <p>Constant Bearer. </p>
  syntax: public static final String BEARER= "bearer"
  uid: com.microsoft.aad.adal.AuthenticationParameters.BEARER
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationParameters.RESOURCE_KEY
  name: RESOURCE_KEY
  nameWithType: AuthenticationParameters.RESOURCE_KEY
  summary: <p>Constant Resource key. </p>
  syntax: public static final String RESOURCE_KEY= "resource_id"
  uid: com.microsoft.aad.adal.AuthenticationParameters.RESOURCE_KEY
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.aad.adal.AuthenticationParameters.createFromResourceUrl(Context context, final URL resourceUrl, final AuthenticationParamCallback callback)
  name: createFromResourceUrl(Context context, final URL resourceUrl, final AuthenticationParamCallback callback)
  nameWithType: AuthenticationParameters.createFromResourceUrl(Context context, final URL resourceUrl, final AuthenticationParamCallback callback)
  parameters:
  - description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>

      </p>
    name: context
    type: <xref href="Context?alt=Context&text=Context" data-throw-if-not-resolved="False"/>
  - description: <p>Url for resource to query for 401 response. </p>
    name: resourceUrl
    type: <xref href="final+URL?alt=final+URL&text=final+URL" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="com.microsoft.aad.adal.AuthenticationParameters.AuthenticationParamCallback" data-throw-if-not-resolved="false" data-raw-source="AuthenticationParamCallback"></xref>

      </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal.AuthenticationParameters.AuthenticationParamCallback?alt=com.microsoft.aad.adal.AuthenticationParameters.AuthenticationParamCallback&text=AuthenticationParameters.AuthenticationParamCallback" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>ADAL will make the call to get authority and resource info.</p>

    <p></p>
  syntax: public static void createFromResourceUrl(Context context, final URL resourceUrl, final AuthenticationParamCallback callback)
  uid: com.microsoft.aad.adal.AuthenticationParameters.createFromResourceUrl(Context,final URL,final AuthenticationParamCallback)
- fullName: com.microsoft.aad.adal.AuthenticationParameters.createFromResponseAuthenticateHeader(final String authenticateHeader)
  name: createFromResponseAuthenticateHeader(final String authenticateHeader)
  nameWithType: AuthenticationParameters.createFromResponseAuthenticateHeader(final String authenticateHeader)
  parameters:
  - description: <p>Header to check authority and resource. </p>
    name: authenticateHeader
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="%7B?alt=%7B&text=%7B" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.aad.adal.AuthenticationParameters" data-throw-if-not-resolved="false" data-raw-source="AuthenticationParameters"></xref>

      </p>
    type: <xref href="com.microsoft.aad.adal.AuthenticationParameters?alt=com.microsoft.aad.adal.AuthenticationParameters&text=AuthenticationParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>ADAL will parse the header response to get the authority and the resource info.</p>

    <p></p>
  syntax: public static AuthenticationParameters createFromResponseAuthenticateHeader(final String authenticateHeader)
  uid: com.microsoft.aad.adal.AuthenticationParameters.createFromResponseAuthenticateHeader(final String)
- fullName: com.microsoft.aad.adal.AuthenticationParameters.getAuthority()
  name: getAuthority()
  nameWithType: AuthenticationParameters.getAuthority()
  returns:
    description: <p>Authority extracted from the header. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>get authority from the header.</p>

    <p></p>
  syntax: public String getAuthority()
  uid: com.microsoft.aad.adal.AuthenticationParameters.getAuthority()
- fullName: com.microsoft.aad.adal.AuthenticationParameters.getResource()
  name: getResource()
  nameWithType: AuthenticationParameters.getResource()
  returns:
    description: <p>resource from the header. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>get resource from the header.</p>

    <p></p>
  syntax: public String getResource()
  uid: com.microsoft.aad.adal.AuthenticationParameters.getResource()
nameWithType: AuthenticationParameters
syntax: public class AuthenticationParameters
type: class
uid: com.microsoft.aad.adal.AuthenticationParameters
fullName: com.microsoft.aad.adal.AuthenticationParameters
name: AuthenticationParameters
package: com.microsoft.aad.adal
summary: <p>Matching to ADAL.NET It provides helper methods to get the authorization_endpoint from resource address. </p>
metadata: {}
