### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.HttpsHsmClient(String baseUrl, UnixDomainSocketChannel unixDomainSocketChannel)
  name: HttpsHsmClient(String baseUrl, UnixDomainSocketChannel unixDomainSocketChannel)
  nameWithType: HttpsHsmClient.HttpsHsmClient(String baseUrl, UnixDomainSocketChannel unixDomainSocketChannel)
  parameters:
  - description: <p>The base url of the HSM </p>
    name: baseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the implementation of the <xref uid="com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel" data-throw-if-not-resolved="false" data-raw-source="UnixDomainSocketChannel"></xref> interface that will be used if any unix domain socket communication is required. May be null if no unix domain socket communication is required. </p>
    name: unixDomainSocketChannel
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel?alt=com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel&text=UnixDomainSocketChannel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided base url cannot be converted to a URI </p>
  summary: <p>Client object for sending sign requests to an HSM unit </p>
  syntax: public HttpsHsmClient(String baseUrl, UnixDomainSocketChannel unixDomainSocketChannel)
  uid: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.HttpsHsmClient(String,UnixDomainSocketChannel)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.getTrustBundle(String apiVersion)
  name: getTrustBundle(String apiVersion)
  nameWithType: HttpsHsmClient.getTrustBundle(String apiVersion)
  parameters:
  - description: <p>the api version to use </p>
    name: apiVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the HSM cannot be reached </p>
  returns:
    description: <p>the trust bundle response from the hsm, contains the certificates to be trusted </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.parser.TrustBundleResponse?alt=com.microsoft.azure.sdk.iot.device.hsm.parser.TrustBundleResponse&text=TrustBundleResponse" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieve a trust bundle from an hsm </p>
  syntax: public TrustBundleResponse getTrustBundle(String apiVersion)
  uid: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.getTrustBundle(String)
- fullName: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.sign(String apiVersion, String moduleName, SignRequest signRequest, String generationId)
  name: sign(String apiVersion, String moduleName, SignRequest signRequest, String generationId)
  nameWithType: HttpsHsmClient.sign(String apiVersion, String moduleName, SignRequest signRequest, String generationId)
  parameters:
  - description: <p>the api version to use </p>
    name: apiVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the module for which the sign request is requesting access to </p>
    name: moduleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request to send </p>
    name: signRequest
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.parser.SignRequest?alt=com.microsoft.azure.sdk.iot.device.hsm.parser.SignRequest&text=SignRequest" data-throw-if-not-resolved="False"/>
  - description: <p>the generation id </p>
    name: generationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If there was a problem communicating with the HSM </p>
  returns:
    description: <p>The response from the HSM </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.parser.SignResponse?alt=com.microsoft.azure.sdk.iot.device.hsm.parser.SignResponse&text=SignResponse" data-throw-if-not-resolved="False"/>
  summary: <p>Send a sign request to the HSM using the provided parameters and return the HSM's response </p>
  syntax: public SignResponse sign(String apiVersion, String moduleName, SignRequest signRequest, String generationId)
  uid: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.sign(String,String,SignRequest,String)
nameWithType: HttpsHsmClient
syntax: public class HttpsHsmClient
type: class
uid: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient
fullName: com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient
name: HttpsHsmClient
package: com.microsoft.azure.sdk.iot.device.hsm
metadata: {}
