### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions()
  name: ReceiverOptions()
  nameWithType: ReceiverOptions.ReceiverOptions()
  syntax: public ReceiverOptions()
  uid: com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
  name: getIdentifier()
  nameWithType: ReceiverOptions.getIdentifier()
  returns:
    description: <p>identifier of the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref>; null if nothing was set </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the identifier of the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref></p>

    <p></p>
  syntax: public String getIdentifier()
  uid: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
- fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount()
  name: getPrefetchCount()
  nameWithType: ReceiverOptions.getPrefetchCount()
  returns:
    description: <p>the upper limit of events this receiver will actively receive regardless of whether a receive operation is pending. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get Prefetch Count.</p>

    <p></p>
  syntax: public int getPrefetchCount()
  uid: com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount()
- fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
  name: getReceiverRuntimeMetricEnabled()
  nameWithType: ReceiverOptions.getReceiverRuntimeMetricEnabled()
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="boolean"></xref> indicating, whether, the runtime metric of the receiver was enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Knob to enable/disable runtime metric of the receiver. If this is set to true and is passed to <xref uid="com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String,final String,final EventPosition)" data-throw-if-not-resolved="false" data-raw-source="EventHubClient#createReceiver"></xref>, after the first <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int)" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver#receive(int)"></xref> call, <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver#getRuntimeInformation()"></xref> is populated. </p>

    <p>Enabling this knob will add 3 additional properties to all <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false" data-raw-source="EventData"></xref>'s received on the <xref uid="com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String,final String,final EventPosition)" data-throw-if-not-resolved="false" data-raw-source="EventHubClient#createReceiver"></xref>.</p>

    <p></p>
  syntax: public boolean getReceiverRuntimeMetricEnabled()
  uid: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
- fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(final String value)
  name: setIdentifier(final String value)
  nameWithType: ReceiverOptions.setIdentifier(final String value)
  parameters:
  - description: <p>string to identify <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref></p>
    name: value
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set an identifier to <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref>. </p>

    <p>This identifier will be used by EventHubs service when reporting any errors across receivers, and is caused by this receiver. For example, when receiver quota limit is hit, while a user is trying to create New receiver, EventHubs service will throw <xref uid="com.microsoft.azure.eventhubs.QuotaExceededException" data-throw-if-not-resolved="false" data-raw-source="QuotaExceededException"></xref> and will include this identifier. So, its very critical to choose a value, which can uniquely identify the whereabouts of <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref>. </p>

    <p></p>
  syntax: public void setIdentifier(final String value)
  uid: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(final String)
- fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount(final int prefetchCount)
  name: setPrefetchCount(final int prefetchCount)
  nameWithType: ReceiverOptions.setPrefetchCount(final int prefetchCount)
  parameters:
  - description: <p>the number of events to pre-fetch. value must be between 1 and 2000. </p>
    name: prefetchCount
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="EventHubException?alt=EventHubException&text=EventHubException" data-throw-if-not-resolved="False"/>
    description: <p>if setting prefetchCount encounters error </p>
  summary: >-
    <p>Set the number of events that can be pre-fetched and cached at the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref>. </p>

    <p>By default the value is 500</p>

    <p></p>
  syntax: public void setPrefetchCount(final int prefetchCount)
  uid: com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount(final int)
- fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean value)
  name: setReceiverRuntimeMetricEnabled(boolean value)
  nameWithType: ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean value)
  parameters:
  - description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="boolean"></xref> to indicate, whether, the runtime metric of the receiver should be enabled </p>
    name: value
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Knob to enable/disable runtime metric of the receiver. If this is set to true and is passed to <xref uid="com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String,final String,final EventPosition)" data-throw-if-not-resolved="false" data-raw-source="EventHubClient#createReceiver"></xref>, after the first <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int)" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver#receive(int)"></xref> call, <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver#getRuntimeInformation()"></xref> and <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.getEventPosition()" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver#getEventPosition()"></xref> will be populated. </p>

    <p>This knob facilitates for an optimization where the Consumer of Event Hub has the end of stream details at the disposal, without making any additional <xref uid="com.microsoft.azure.eventhubs.EventHubClient.getPartitionRuntimeInformation(String)" data-throw-if-not-resolved="false" data-raw-source="EventHubClient#getPartitionRuntimeInformation(String)"></xref> call to Event Hubs service. To achieve this, behind the scenes, along with the actual <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false" data-raw-source="EventData"></xref>, that the Event Hubs <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref> delivers, it includes extra information about the Event Hubs partitions end of stream details on every event. In summary, enabling this knob will help users to save an extra call to Event Hubs service to fetch Event Hubs partition information and as a result, will add that information as header to each <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false" data-raw-source="EventData"></xref> received by the client.</p>

    <p></p>
  syntax: public void setReceiverRuntimeMetricEnabled(boolean value)
  uid: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean)
nameWithType: ReceiverOptions
syntax: public class ReceiverOptions
type: class
uid: com.microsoft.azure.eventhubs.ReceiverOptions
fullName: com.microsoft.azure.eventhubs.ReceiverOptions
name: ReceiverOptions
package: com.microsoft.azure.eventhubs
summary: <p>Represents various optional behaviors which can be turned on or off during the creation of a <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiver"></xref>. </p>
metadata: {}
