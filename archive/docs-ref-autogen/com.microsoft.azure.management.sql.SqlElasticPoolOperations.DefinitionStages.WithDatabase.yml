### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase(String databaseName)
  name: defineDatabase(String databaseName)
  nameWithType: SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase(String databaseName)
  parameters:
  - description: <p>the name of the new SQL Database </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the new SQL Database definition </p>
    type: SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool&lt;<xref href="com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithCreate&text=SqlElasticPoolOperations.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Begins the definition of a new SQL Database to be added to this server.</p>

    <p></p>
  syntax: public SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<WithCreate> defineDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.withExistingDatabase(SqlDatabase database)
  name: withExistingDatabase(SqlDatabase database)
  nameWithType: SqlElasticPoolOperations.DefinitionStages.WithDatabase.withExistingDatabase(SqlDatabase database)
  parameters:
  - description: <p>database instance to be added in SQL elastic pool </p>
    name: database
    type: <xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The next stage of the definition. </p>
    type: <xref href="SqlElasticPoolOperations.DefinitionStages.WithCreate?alt=SqlElasticPoolOperations.DefinitionStages.WithCreate&text=SqlElasticPoolOperations.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds the database in the SQL elastic pool.</p>

    <p></p>
  syntax: public SqlElasticPoolOperations.DefinitionStages.WithCreate withExistingDatabase(SqlDatabase database)
  uid: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.withExistingDatabase(SqlDatabase)
- fullName: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.withExistingDatabase(String databaseName)
  name: withExistingDatabase(String databaseName)
  nameWithType: SqlElasticPoolOperations.DefinitionStages.WithDatabase.withExistingDatabase(String databaseName)
  parameters:
  - description: <p>name of the existing database to be added in the elastic pool </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The next stage of the definition. </p>
    type: <xref href="SqlElasticPoolOperations.DefinitionStages.WithCreate?alt=SqlElasticPoolOperations.DefinitionStages.WithCreate&text=SqlElasticPoolOperations.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds an existing database in the SQL elastic pool.</p>

    <p></p>
  syntax: public SqlElasticPoolOperations.DefinitionStages.WithCreate withExistingDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.withExistingDatabase(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.withNewDatabase(String databaseName)
  name: withNewDatabase(String databaseName)
  nameWithType: SqlElasticPoolOperations.DefinitionStages.WithDatabase.withNewDatabase(String databaseName)
  parameters:
  - description: <p>name of the new database to be added in the elastic pool </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The next stage of the definition. </p>
    type: <xref href="SqlElasticPoolOperations.DefinitionStages.WithCreate?alt=SqlElasticPoolOperations.DefinitionStages.WithCreate&text=SqlElasticPoolOperations.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new database in the SQL elastic pool.</p>

    <p></p>
  syntax: public SqlElasticPoolOperations.DefinitionStages.WithCreate withNewDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.withNewDatabase(String)
nameWithType: SqlElasticPoolOperations.DefinitionStages.WithDatabase
syntax: public interface WithDatabase
type: interface
uid: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase
fullName: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase
name: SqlElasticPoolOperations.DefinitionStages.WithDatabase
package: com.microsoft.azure.management.sql
summary: <p>The SQL Elastic Pool definition to add the Database in the Elastic Pool. </p>
metadata: {}
