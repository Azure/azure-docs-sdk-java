### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.ResponseBase" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Identifiable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Response" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Answer" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer&text=SearchResultsAnswer" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cognitiveservices.search.websearch.models.Answer.followUpQueries()
- com.microsoft.azure.cognitiveservices.search.websearch.models.Identifiable.id()
- com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer.isFamilyFriendly()
- com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer.queryContext()
- com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer.totalEstimatedMatches()
- com.microsoft.azure.cognitiveservices.search.websearch.models.Response.webSearchUrl()
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.News.location()
  name: location()
  nameWithType: News.location()
  returns:
    description: <p>the location value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the location value.</p>

    <p></p>
  syntax: public String location()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.News.location()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.News.value()
  name: value()
  nameWithType: News.value()
  returns:
    description: <p>the value value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.NewsArticle?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.NewsArticle&text=NewsArticle" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the value value.</p>

    <p></p>
  syntax: public List<NewsArticle> value()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.News.value()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.News.withValue(List<NewsArticle> value)
  name: withValue(List<NewsArticle> value)
  nameWithType: News.withValue(List<NewsArticle> value)
  parameters:
  - description: <p>the value value to set </p>
    name: value
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.NewsArticle?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.NewsArticle&text=NewsArticle" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the News object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.News?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.News&text=News" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value value.</p>

    <p></p>
  syntax: public News withValue(List<NewsArticle> value)
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.News.withValue(List<NewsArticle>)
nameWithType: News
syntax: public class News extends SearchResultsAnswer
type: class
uid: com.microsoft.azure.cognitiveservices.search.websearch.models.News
fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.News
name: News
package: com.microsoft.azure.cognitiveservices.search.websearch.models
summary: <p>Defines a news answer. </p>
metadata: {}
