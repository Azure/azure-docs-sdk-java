### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.cosmosdb.Document.Document()
  name: Document()
  nameWithType: Document.Document()
  summary: <p>Initialize a document object. </p>
  syntax: public Document()
  uid: com.microsoft.azure.cosmosdb.Document.Document()
- fullName: com.microsoft.azure.cosmosdb.Document.Document(String jsonString)
  name: Document(String jsonString)
  nameWithType: Document.Document(String jsonString)
  parameters:
  - description: <p>the json string that represents the document object. </p>
    name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initialize a document object from json string.</p>

    <p></p>
  syntax: public Document(String jsonString)
  uid: com.microsoft.azure.cosmosdb.Document.Document(String)
- fullName: com.microsoft.azure.cosmosdb.Document.Document(String jsonString, ObjectMapper objectMapper)
  name: Document(String jsonString, ObjectMapper objectMapper)
  nameWithType: Document.Document(String jsonString, ObjectMapper objectMapper)
  parameters:
  - description: <p>the json string that represents the document object. </p>
    name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the custom object mapper </p>
    name: objectMapper
    type: <xref href="ObjectMapper?alt=ObjectMapper&text=ObjectMapper" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initialize a document object from json string.</p>

    <p></p>
  syntax: public Document(String jsonString, ObjectMapper objectMapper)
  uid: com.microsoft.azure.cosmosdb.Document.Document(String,ObjectMapper)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.JsonSerializable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.Resource?alt=com.microsoft.azure.cosmosdb.Resource&text=Resource" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
- com.microsoft.azure.cosmosdb.Resource.getETag()
- com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
- com.microsoft.azure.cosmosdb.Resource.getId()
- com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
- com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
- com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
- com.microsoft.azure.cosmosdb.Resource.getResourceId()
- com.microsoft.azure.cosmosdb.Resource.getSelfLink()
- com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
- com.microsoft.azure.cosmosdb.Resource.getTimestamp()
- com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
- com.microsoft.azure.cosmosdb.Resource.Resource(Resource)
- com.microsoft.azure.cosmosdb.Resource.Resource()
- com.microsoft.azure.cosmosdb.Resource.Resource(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.Resource.Resource(String)
- com.microsoft.azure.cosmosdb.Resource.setId(String)
- com.microsoft.azure.cosmosdb.Resource.setResourceId(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
- com.microsoft.azure.cosmosdb.JsonSerializable.toString()
methods:
- fullName: com.microsoft.azure.cosmosdb.Document.getTimeToLive()
  name: getTimeToLive()
  nameWithType: Document.getTimeToLive()
  returns:
    description: <p>the document's time-to-live value in seconds. </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the document's time-to-live value.</p>

    <p></p>
  syntax: public Integer getTimeToLive()
  uid: com.microsoft.azure.cosmosdb.Document.getTimeToLive()
- fullName: com.microsoft.azure.cosmosdb.Document.setTimeToLive(Integer timeToLive)
  name: setTimeToLive(Integer timeToLive)
  nameWithType: Document.setTimeToLive(Integer timeToLive)
  parameters:
  - description: <p>the document's time-to-live value in seconds. </p>
    name: timeToLive
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the document's time-to-live value. </p>

    <p>A document's time-to-live value is an optional property. If set, the document expires after the specified number of seconds since its last write time. The value of this property should be one of the following: </p>

    <p>null - indicates the time-to-live value for this document inherits from the parent collection's default time-to-live value. </p>

    <p>nonzero positive integer - indicates the number of seconds before the document expires. It overrides the default time-to-live value specified on the parent collection, unless the parent collection's default time-to-live is null. </p>

    <p>-1 - indicates the document never expires. It overrides the default time-to-live value specified on the parent collection, unless the parent collection's default time-to-live is null.</p>

    <p></p>
  syntax: public void setTimeToLive(Integer timeToLive)
  uid: com.microsoft.azure.cosmosdb.Document.setTimeToLive(Integer)
nameWithType: Document
syntax: public class Document extends Resource
type: class
uid: com.microsoft.azure.cosmosdb.Document
fullName: com.microsoft.azure.cosmosdb.Document
name: Document
package: com.microsoft.azure.cosmosdb
summary: >-
  <p>Represents a document in the Azure Cosmos DB database service. </p>

  <p>A document is a structured JSON document. There is no set schema for the JSON documents, and a document may contain any number of custom properties as well as an optional list of attachments. Document is an application resource and can be authorized using the master key or resource keys. </p>
metadata: {}
