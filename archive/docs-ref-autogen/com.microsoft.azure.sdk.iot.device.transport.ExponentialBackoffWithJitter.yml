### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.ExponentialBackoffWithJitter()
  name: ExponentialBackoffWithJitter()
  nameWithType: ExponentialBackoffWithJitter.ExponentialBackoffWithJitter()
  summary: <p>Constructor with default backoff values and firstFastRetry </p>
  syntax: public ExponentialBackoffWithJitter()
  uid: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.ExponentialBackoffWithJitter()
- fullName: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.ExponentialBackoffWithJitter(int retryCount, long minBackoff, long maxBackoff, long deltaBackoff, boolean firstFastRetry)
  name: ExponentialBackoffWithJitter(int retryCount, long minBackoff, long maxBackoff, long deltaBackoff, boolean firstFastRetry)
  nameWithType: ExponentialBackoffWithJitter.ExponentialBackoffWithJitter(int retryCount, long minBackoff, long maxBackoff, long deltaBackoff, boolean firstFastRetry)
  parameters:
  - description: <p>the max number of retries allowed in the policies. </p>
    name: retryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the min interval between each retry. </p>
    name: minBackoff
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>the max interval between each retry. </p>
    name: maxBackoff
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>the max delta allowed between retries. </p>
    name: deltaBackoff
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>indicates whether the first retry should be immediate. </p>
    name: firstFastRetry
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: public ExponentialBackoffWithJitter(int retryCount, long minBackoff, long maxBackoff, long deltaBackoff, boolean firstFastRetry)
  uid: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.ExponentialBackoffWithJitter(int,long,long,long,boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.transport.RetryPolicy?alt=com.microsoft.azure.sdk.iot.device.transport.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.getRetryDecision(int currentRetryCount, TransportException lastException)
  name: getRetryDecision(int currentRetryCount, TransportException lastException)
  nameWithType: ExponentialBackoffWithJitter.getRetryDecision(int currentRetryCount, TransportException lastException)
  overridden: com.microsoft.azure.sdk.iot.device.transport.RetryPolicy.getRetryDecision(int,TransportException)
  parameters:
  - description: <p>the number of retries for the given operation </p>
    name: currentRetryCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: lastException
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.TransportException?alt=com.microsoft.azure.sdk.iot.device.transport.TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the retry decision. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.RetryDecision?alt=com.microsoft.azure.sdk.iot.device.transport.RetryDecision&text=RetryDecision" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Determines whether the operation should be retried and the interval until the next retry.</p>

    <p></p>
  syntax: public RetryDecision getRetryDecision(int currentRetryCount, TransportException lastException)
  uid: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.getRetryDecision(int,TransportException)
nameWithType: ExponentialBackoffWithJitter
syntax: public class ExponentialBackoffWithJitter implements RetryPolicy
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter
fullName: com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter
name: ExponentialBackoffWithJitter
package: com.microsoft.azure.sdk.iot.device.transport
summary: <p>Represents a retry policy that performs exponential backoff with jitter retries. </p>
metadata: {}
