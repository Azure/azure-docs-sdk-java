### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity()
  name: DynamicTableEntity()
  nameWithType: DynamicTableEntity.DynamicTableEntity()
  summary: <p>Nullary default constructor. </p>
  syntax: public DynamicTableEntity()
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity()
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(final HashMap<String, EntityProperty> properties)
  name: DynamicTableEntity(final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.DynamicTableEntity(final HashMap<String, EntityProperty> properties)
  parameters:
  - description: <p>A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values to store in the new <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref>. </p>
    name: properties
    type: final HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Constructs a <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance using the specified property map.</p>

    <p></p>
  syntax: public DynamicTableEntity(final HashMap<String, EntityProperty> properties)
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(final HashMap<String, EntityProperty>)
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)
  name: DynamicTableEntity(String partitionKey, String rowKey)
  nameWithType: DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)
  parameters:
  - description: <p>A <code>String</code> which represents the partition key of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> to be initialized. </p>
    name: partitionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the row key of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> to be initialized. </p>
    name: rowKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> class with the specified partition key and row key.</p>

    <p></p>
  syntax: public DynamicTableEntity(String partitionKey, String rowKey)
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String,String)
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
  name: DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
  parameters:
  - description: <p>A <code>String</code> which represents the partition key of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> to be initialized. </p>
    name: partitionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the row key of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> to be initialized. </p>
    name: rowKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values to store in the new <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref>. </p>
    name: properties
    type: final HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> class with the specified partition key and row key.</p>

    <p></p>
  syntax: public DynamicTableEntity(String partitionKey, String rowKey, final HashMap<String, EntityProperty> properties)
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String,String,final HashMap<String, EntityProperty>)
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
  name: DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
  parameters:
  - description: <p>A <code>String</code> which represents the partition key of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> to be initialized. </p>
    name: partitionKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which represents the row key of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> to be initialized. </p>
    name: rowKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ETag of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> to be initialized. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service. </p>
    name: etag
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values to store in the new <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref>. </p>
    name: properties
    type: final HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> class with the specified partition key and row key.</p>

    <p></p>
  syntax: public DynamicTableEntity(String partitionKey, String rowKey, String etag, final HashMap<String, EntityProperty> properties)
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String,String,String,final HashMap<String, EntityProperty>)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.table.TableServiceEntity?alt=com.microsoft.azure.storage.table.TableServiceEntity&text=TableServiceEntity" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.table.TableServiceEntity.etag
- com.microsoft.azure.storage.table.TableServiceEntity.getEtag()
- com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()
- com.microsoft.azure.storage.table.TableServiceEntity.getReflectedEntityCache()
- com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()
- com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()
- com.microsoft.azure.storage.table.TableServiceEntity.isReflectedEntityCacheDisabled()
- com.microsoft.azure.storage.table.TableServiceEntity.partitionKey
- com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object,final HashMap<String, EntityProperty>,final OperationContext)
- com.microsoft.azure.storage.table.TableServiceEntity.rowKey
- com.microsoft.azure.storage.table.TableServiceEntity.setEtag(final String)
- com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(final String)
- com.microsoft.azure.storage.table.TableServiceEntity.setReflectedEntityCacheDisabled(boolean)
- com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(final String)
- com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(final Date)
- com.microsoft.azure.storage.table.TableServiceEntity.TableServiceEntity()
- com.microsoft.azure.storage.table.TableServiceEntity.TableServiceEntity(String,String)
- com.microsoft.azure.storage.table.TableServiceEntity.timeStamp
- com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object)
methods:
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.getProperties()
  name: getProperties()
  nameWithType: DynamicTableEntity.getProperties()
  returns:
    description: <p>A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values for this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance. </p>
    type: HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the property map for this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance.</p>

    <p></p>
  syntax: public HashMap<String, EntityProperty> getProperties()
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.getProperties()
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  name: readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  nameWithType: DynamicTableEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  overridden: com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty>,OperationContext)
  parameters:
  - description: <p>The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values to store in this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance. </p>
    name: properties
    type: final HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation. </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Populates this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance using the specified map of property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values.</p>

    <p></p>
  syntax: public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.setProperties(final HashMap<String, EntityProperty> properties)
  name: setProperties(final HashMap<String, EntityProperty> properties)
  nameWithType: DynamicTableEntity.setProperties(final HashMap<String, EntityProperty> properties)
  parameters:
  - description: <p>A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values to set in this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance. </p>
    name: properties
    type: final HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Sets the property map for this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance.</p>

    <p></p>
  syntax: public void setProperties(final HashMap<String, EntityProperty> properties)
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.setProperties(final HashMap<String, EntityProperty>)
- fullName: com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(final OperationContext opContext)
  name: writeEntity(final OperationContext opContext)
  nameWithType: DynamicTableEntity.writeEntity(final OperationContext opContext)
  overridden: com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object used to track the execution of the operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if a Storage service error occurs. </p>
  returns:
    description: <p>A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data typed values stored in this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance.</p>
    type: HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns the map of property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> data values from this <xref uid="com.microsoft.azure.storage.table.DynamicTableEntity" data-throw-if-not-resolved="false" data-raw-source="DynamicTableEntity"></xref> instance.</p>

    <p></p>
  syntax: public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(final OperationContext)
nameWithType: DynamicTableEntity
syntax: public class DynamicTableEntity extends TableServiceEntity
type: class
uid: com.microsoft.azure.storage.table.DynamicTableEntity
fullName: com.microsoft.azure.storage.table.DynamicTableEntity
name: DynamicTableEntity
package: com.microsoft.azure.storage.table
summary: <p>A <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> type which allows callers direct access to the property map of the entity. This class extends <xref uid="com.microsoft.azure.storage.table.TableServiceEntity" data-throw-if-not-resolved="false" data-raw-source="TableServiceEntity"></xref> to eliminate the use of reflection for serialization and deserialization. </p>
metadata: {}
