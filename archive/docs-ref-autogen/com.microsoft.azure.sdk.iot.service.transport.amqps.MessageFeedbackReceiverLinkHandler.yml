### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.MessageFeedbackReceiverLinkHandler.MessageFeedbackReceiverLinkHandler(Receiver link, LinkStateCallback linkStateCallback, Function<FeedbackBatch, AcknowledgementType> feedbackBatchReceivedCallback)
  name: MessageFeedbackReceiverLinkHandler(Receiver link, LinkStateCallback linkStateCallback, Function<FeedbackBatch, AcknowledgementType> feedbackBatchReceivedCallback)
  nameWithType: MessageFeedbackReceiverLinkHandler.MessageFeedbackReceiverLinkHandler(Receiver link, LinkStateCallback linkStateCallback, Function<FeedbackBatch, AcknowledgementType> feedbackBatchReceivedCallback)
  parameters:
  - name: link
    type: <xref href="Receiver?alt=Receiver&text=Receiver" data-throw-if-not-resolved="False"/>
  - name: linkStateCallback
    type: <xref href="LinkStateCallback?alt=LinkStateCallback&text=LinkStateCallback" data-throw-if-not-resolved="False"/>
  - name: feedbackBatchReceivedCallback
    type: Function&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch?alt=com.microsoft.azure.sdk.iot.service.messaging.FeedbackBatch&text=FeedbackBatch" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType?alt=com.microsoft.azure.sdk.iot.service.messaging.AcknowledgementType&text=AcknowledgementType" data-throw-if-not-resolved="False"/>&gt;
  syntax: public MessageFeedbackReceiverLinkHandler(Receiver link, LinkStateCallback linkStateCallback, Function<FeedbackBatch, AcknowledgementType> feedbackBatchReceivedCallback)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.MessageFeedbackReceiverLinkHandler.MessageFeedbackReceiverLinkHandler(Receiver,LinkStateCallback,Function<FeedbackBatch, AcknowledgementType>)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="BaseHandler" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.service.transport.amqps.ReceiverLinkHandler" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.service.transport.amqps.ReceiverLinkHandler.onLinkInit(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ReceiverLinkHandler.onLinkLocalClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ReceiverLinkHandler.onLinkLocalOpen(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ReceiverLinkHandler.onLinkRemoteClose(Event)
- com.microsoft.azure.sdk.iot.service.transport.amqps.ReceiverLinkHandler.onLinkRemoteOpen(Event)
methods:
- fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.MessageFeedbackReceiverLinkHandler.onDelivery(Event event)
  name: onDelivery(Event event)
  nameWithType: MessageFeedbackReceiverLinkHandler.onDelivery(Event event)
  parameters:
  - description: <p>The proton event object </p>
    name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  summary: <p>Event handler for the on delivery event </p>
  syntax: public void onDelivery(Event event)
  uid: com.microsoft.azure.sdk.iot.service.transport.amqps.MessageFeedbackReceiverLinkHandler.onDelivery(Event)
nameWithType: MessageFeedbackReceiverLinkHandler
syntax: public class MessageFeedbackReceiverLinkHandler
type: class
uid: com.microsoft.azure.sdk.iot.service.transport.amqps.MessageFeedbackReceiverLinkHandler
fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.MessageFeedbackReceiverLinkHandler
name: MessageFeedbackReceiverLinkHandler
package: com.microsoft.azure.sdk.iot.service.transport.amqps
metadata: {}
