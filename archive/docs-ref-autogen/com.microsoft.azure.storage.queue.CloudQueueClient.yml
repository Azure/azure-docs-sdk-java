### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.CloudQueueClient(final StorageUri baseUri, final StorageCredentials credentials)
  name: CloudQueueClient(final StorageUri baseUri, final StorageCredentials credentials)
  nameWithType: CloudQueueClient.CloudQueueClient(final StorageUri baseUri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Queue service endpoint used to create the client. </p>
    name: baseUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the account credentials. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the  class using the specified Queue service endpoint and account credentials.</p>

    <p></p>
  syntax: public CloudQueueClient(final StorageUri baseUri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.CloudQueueClient(final StorageUri,final StorageCredentials)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.CloudQueueClient(final URI baseUri, final StorageCredentials credentials)
  name: CloudQueueClient(final URI baseUri, final StorageCredentials credentials)
  nameWithType: CloudQueueClient.CloudQueueClient(final URI baseUri, final StorageCredentials credentials)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the Queue service endpoint used to create the client. </p>
    name: baseUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the account credentials. </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the  class using the specified Queue service endpoint and account credentials.</p>

    <p></p>
  syntax: public CloudQueueClient(final URI baseUri, final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.CloudQueueClient(final URI,final StorageCredentials)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.ServiceClient?alt=com.microsoft.azure.storage.ServiceClient&text=ServiceClient" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.ServiceClient.credentials
- com.microsoft.azure.storage.ServiceClient.downloadServicePropertiesImpl(final RequestOptions,final boolean)
- com.microsoft.azure.storage.ServiceClient.getCredentials()
- com.microsoft.azure.storage.ServiceClient.getEndpoint()
- com.microsoft.azure.storage.ServiceClient.getServiceStatsImpl(final RequestOptions,final boolean)
- com.microsoft.azure.storage.ServiceClient.getStorageUri()
- com.microsoft.azure.storage.ServiceClient.ServiceClient(final StorageUri,final StorageCredentials)
- com.microsoft.azure.storage.ServiceClient.setCredentials(final StorageCredentials)
- com.microsoft.azure.storage.ServiceClient.setStorageUri(final StorageUri)
- com.microsoft.azure.storage.ServiceClient.uploadServicePropertiesImpl(final ServiceProperties,final RequestOptions,final OperationContext,final boolean)
methods:
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.downloadServiceProperties()
  name: downloadServiceProperties()
  nameWithType: CloudQueueClient.downloadServiceProperties()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> object representing the current configuration of the service. </p>
    type: final <xref href="com.microsoft.azure.storage.ServiceProperties?alt=com.microsoft.azure.storage.ServiceProperties&text=ServiceProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieves the current <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> for the given storage service. This includes Logging, HourMetrics, MinuteMetrics and CORS configurations.</p>

    <p></p>
  syntax: public final ServiceProperties downloadServiceProperties()
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.downloadServiceProperties()
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.downloadServiceProperties(QueueRequestOptions options, OperationContext opContext)
  name: downloadServiceProperties(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueueClient.downloadServiceProperties(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> object representing the current configuration of the service. </p>
    type: final <xref href="com.microsoft.azure.storage.ServiceProperties?alt=com.microsoft.azure.storage.ServiceProperties&text=ServiceProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieves the current <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> for the given storage service. This includes Logging, HourMetrics, MinuteMetrics and CORS configurations.</p>

    <p></p>
  syntax: public final ServiceProperties downloadServiceProperties(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.downloadServiceProperties(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.getDefaultRequestOptions()
  name: getDefaultRequestOptions()
  nameWithType: CloudQueueClient.getDefaultRequestOptions()
  returns:
    description: <p>The <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object containing the values used by this <code>CloudQueueClient</code></p>
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> that is used for requests associated with this </p>

    <p></p>
  syntax: public QueueRequestOptions getDefaultRequestOptions()
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.getDefaultRequestOptions()
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.getQueueReference(final String queueName)
  name: getQueueReference(final String queueName)
  nameWithType: CloudQueueClient.getQueueReference(final String queueName)
  parameters:
  - description: <p>The name of the queue, which must adhere to queue naming rules. The queue name should not include any path separator characters (/). Queue names must be lowercase, between 3-63 characters long and must start with a letter or number. Queue names may contain only letters, numbers, and the dash (-) character. </p>
    name: queueName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI constructed based on the queueName is invalid. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A reference to a <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> object. </p>
    type: <xref href="com.microsoft.azure.storage.queue.CloudQueue?alt=com.microsoft.azure.storage.queue.CloudQueue&text=CloudQueue" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> object with the specified name.</p>

    <p></p>
  syntax: public CloudQueue getQueueReference(final String queueName)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.getQueueReference(final String)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.getServiceStats()
  name: getServiceStats()
  nameWithType: CloudQueueClient.getServiceStats()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.storage.ServiceStats" data-throw-if-not-resolved="false" data-raw-source="ServiceStats"></xref> for the given storage service </p>
    type: <xref href="com.microsoft.azure.storage.ServiceStats?alt=com.microsoft.azure.storage.ServiceStats&text=ServiceStats" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Queries the service for the <xref uid="com.microsoft.azure.storage.ServiceStats" data-throw-if-not-resolved="false" data-raw-source="ServiceStats"></xref>.</p>

    <p></p>
  syntax: public ServiceStats getServiceStats()
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.getServiceStats()
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.getServiceStats(QueueRequestOptions options, OperationContext opContext)
  name: getServiceStats(QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueueClient.getServiceStats(QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueueClient" data-throw-if-not-resolved="false" data-raw-source="CloudQueueClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.storage.ServiceStats" data-throw-if-not-resolved="false" data-raw-source="ServiceStats"></xref> for the given storage service </p>
    type: <xref href="com.microsoft.azure.storage.ServiceStats?alt=com.microsoft.azure.storage.ServiceStats&text=ServiceStats" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Queries the service for the <xref uid="com.microsoft.azure.storage.ServiceStats" data-throw-if-not-resolved="false" data-raw-source="ServiceStats"></xref>.</p>

    <p></p>
  syntax: public ServiceStats getServiceStats(QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.getServiceStats(QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.isUsePathStyleUris()
  name: isUsePathStyleUris()
  nameWithType: CloudQueueClient.isUsePathStyleUris()
  returns:
    description: <p>the usePathStyleUris </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: protected boolean isUsePathStyleUris()
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.isUsePathStyleUris()
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.listQueues()
  name: listQueues()
  nameWithType: CloudQueueClient.listQueues()
  returns:
    description: <p>An iterable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects retrieved lazily that represent the queues in this client. </p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueue?alt=com.microsoft.azure.storage.queue.CloudQueue&text=CloudQueue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an iterable collection of queues for this queue service client.</p>

    <p></p>
  syntax: public Iterable<CloudQueue> listQueues()
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.listQueues()
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.listQueues(final String prefix)
  name: listQueues(final String prefix)
  nameWithType: CloudQueueClient.listQueues(final String prefix)
  parameters:
  - description: <p>A <code>String</code> that represents the queue name prefix.</p>
    name: prefix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An iterable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects retrieved lazily that represent the queues in this client whose names begin with the specified prefix. </p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueue?alt=com.microsoft.azure.storage.queue.CloudQueue&text=CloudQueue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns an iterable collection of queues whose names begin with the specified prefix in this Queue service client.</p>

    <p></p>
  syntax: public Iterable<CloudQueue> listQueues(final String prefix)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.listQueues(final String)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.listQueues(final String prefix, final QueueListingDetails detailsIncluded, QueueRequestOptions options, OperationContext opContext)
  name: listQueues(final String prefix, final QueueListingDetails detailsIncluded, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueueClient.listQueues(final String prefix, final QueueListingDetails detailsIncluded, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> that represents the queue name prefix. </p>
    name: prefix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueListingDetails" data-throw-if-not-resolved="false" data-raw-source="QueueListingDetails"></xref> value that indicates whether queue metadata will be returned. </p>
    name: detailsIncluded
    type: final <xref href="com.microsoft.azure.storage.queue.QueueListingDetails?alt=com.microsoft.azure.storage.queue.QueueListingDetails&text=QueueListingDetails" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An iterable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects retrieved lazily that represents the specified queues for this client. </p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueue?alt=com.microsoft.azure.storage.queue.CloudQueue&text=CloudQueue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns an iterable collection of queues whose names begin with the specified prefix for this Queue service client, using the specified details setting, request options, and operation context.</p>

    <p></p>
  syntax: public Iterable<CloudQueue> listQueues(final String prefix, final QueueListingDetails detailsIncluded, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.listQueues(final String,final QueueListingDetails,QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.listQueuesSegmented()
  name: listQueuesSegmented()
  nameWithType: CloudQueueClient.listQueuesSegmented()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects that contains a segment of the iterable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects that represent the requested queues in the storage service.</p>
    type: <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueue?alt=com.microsoft.azure.storage.queue.CloudQueue&text=CloudQueue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a result segment of an iterable collection of queues for this Queue service client.</p>

    <p></p>
  syntax: public ResultSegment<CloudQueue> listQueuesSegmented()
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.listQueuesSegmented()
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.listQueuesSegmented(final String prefix)
  name: listQueuesSegmented(final String prefix)
  nameWithType: CloudQueueClient.listQueuesSegmented(final String prefix)
  parameters:
  - name: prefix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects that contains a segment of the iterable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects that represent the requested queues in the storage service.</p>
    type: <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueue?alt=com.microsoft.azure.storage.queue.CloudQueue&text=CloudQueue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a result segment of an iterable collection of queues whose names begin with the specified prefix for this Queue service client.</p>

    <p></p>
  syntax: public ResultSegment<CloudQueue> listQueuesSegmented(final String prefix)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.listQueuesSegmented(final String)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.listQueuesSegmented(final String prefix, final QueueListingDetails detailsIncluded, final Integer maxResults, final ResultContinuation continuationToken, QueueRequestOptions options, OperationContext opContext)
  name: listQueuesSegmented(final String prefix, final QueueListingDetails detailsIncluded, final Integer maxResults, final ResultContinuation continuationToken, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueueClient.listQueuesSegmented(final String prefix, final QueueListingDetails detailsIncluded, final Integer maxResults, final ResultContinuation continuationToken, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> that represents the prefix of the queue name to match. </p>
    name: prefix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueListingDetails" data-throw-if-not-resolved="false" data-raw-source="QueueListingDetails"></xref> value that indicates whether queue metadata will be returned. </p>
    name: detailsIncluded
    type: final <xref href="com.microsoft.azure.storage.queue.QueueListingDetails?alt=com.microsoft.azure.storage.queue.QueueListingDetails&text=QueueListingDetails" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of results to retrieve. If <code>null</code> or greater than 5000, the server will return up to 5,000 items. Must be at least 1. </p>
    name: maxResults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object that represents a continuation token returned by a previous listing operation. </p>
    name: continuationToken
    type: final <xref href="com.microsoft.azure.storage.ResultContinuation?alt=com.microsoft.azure.storage.ResultContinuation&text=ResultContinuation" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred during the operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects that contains a segment of the iterable collection of <xref uid="com.microsoft.azure.storage.queue.CloudQueue" data-throw-if-not-resolved="false" data-raw-source="CloudQueue"></xref> objects that represent the requested queues in the storage service.</p>
    type: <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.queue.CloudQueue?alt=com.microsoft.azure.storage.queue.CloudQueue&text=CloudQueue" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a result segment of an iterable collection of queues whose names begin with the specified prefix for this queue, using the specified listing details options, request options, and operation context.</p>

    <p></p>
  syntax: public ResultSegment<CloudQueue> listQueuesSegmented(final String prefix, final QueueListingDetails detailsIncluded, final Integer maxResults, final ResultContinuation continuationToken, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.listQueuesSegmented(final String,final QueueListingDetails,final Integer,final ResultContinuation,QueueRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.setDefaultRequestOptions(QueueRequestOptions defaultRequestOptions)
  name: setDefaultRequestOptions(QueueRequestOptions defaultRequestOptions)
  nameWithType: CloudQueueClient.setDefaultRequestOptions(QueueRequestOptions defaultRequestOptions)
  parameters:
  - description: <p>The QueueRequestOptions to use. </p>
    name: defaultRequestOptions
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> that is used for any queue accessed with this  object.</p>

    <p></p>
  syntax: public void setDefaultRequestOptions(QueueRequestOptions defaultRequestOptions)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.setDefaultRequestOptions(QueueRequestOptions)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.uploadServiceProperties(final ServiceProperties properties)
  name: uploadServiceProperties(final ServiceProperties properties)
  nameWithType: CloudQueueClient.uploadServiceProperties(final ServiceProperties properties)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> to upload. </p>
    name: properties
    type: final <xref href="com.microsoft.azure.storage.ServiceProperties?alt=com.microsoft.azure.storage.ServiceProperties&text=ServiceProperties" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads a new <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> configuration to the given storage service. This includes Logging, HourMetrics, MinuteMetrics and CORS configurations.</p>

    <p></p>
  syntax: public void uploadServiceProperties(final ServiceProperties properties)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.uploadServiceProperties(final ServiceProperties)
- fullName: com.microsoft.azure.storage.queue.CloudQueueClient.uploadServiceProperties(final ServiceProperties properties, QueueRequestOptions options, OperationContext opContext)
  name: uploadServiceProperties(final ServiceProperties properties, QueueRequestOptions options, OperationContext opContext)
  nameWithType: CloudQueueClient.uploadServiceProperties(final ServiceProperties properties, QueueRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> to upload. </p>
    name: properties
    type: final <xref href="com.microsoft.azure.storage.ServiceProperties?alt=com.microsoft.azure.storage.ServiceProperties&text=ServiceProperties" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation. </p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Uploads a new <xref uid="com.microsoft.azure.storage.ServiceProperties" data-throw-if-not-resolved="false" data-raw-source="ServiceProperties"></xref> configuration to the given storage service. This includes Logging, HourMetrics, MinuteMetrics and CORS configurations.</p>

    <p></p>
  syntax: public void uploadServiceProperties(final ServiceProperties properties, QueueRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.queue.CloudQueueClient.uploadServiceProperties(final ServiceProperties,QueueRequestOptions,OperationContext)
nameWithType: CloudQueueClient
syntax: public class CloudQueueClient extends ServiceClient
type: class
uid: com.microsoft.azure.storage.queue.CloudQueueClient
fullName: com.microsoft.azure.storage.queue.CloudQueueClient
name: CloudQueueClient
package: com.microsoft.azure.storage.queue
summary: <p>Provides a service client for accessing the Microsoft Azure Queue service. </p>
metadata: {}
