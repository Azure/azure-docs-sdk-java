### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.DataDisk.caching()
  name: caching()
  nameWithType: DataDisk.caching()
  returns:
    description: <p>the caching value </p>
    type: <xref href="com.microsoft.azure.management.batch.CachingType?alt=com.microsoft.azure.management.batch.CachingType&text=CachingType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get values are: none - The caching mode for the disk is not enabled. readOnly - The caching mode for the disk is read only. readWrite - The caching mode for the disk is read and write. The default value for caching is none. For information about the caching options see: <a href="https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/">https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/</a>. Possible values include: 'None', 'ReadOnly', 'ReadWrite'.</p>

    <p></p>
  syntax: public CachingType caching()
  uid: com.microsoft.azure.management.batch.DataDisk.caching()
- fullName: com.microsoft.azure.management.batch.DataDisk.diskSizeGB()
  name: diskSizeGB()
  nameWithType: DataDisk.diskSizeGB()
  returns:
    description: <p>the diskSizeGB value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the diskSizeGB value.</p>

    <p></p>
  syntax: public int diskSizeGB()
  uid: com.microsoft.azure.management.batch.DataDisk.diskSizeGB()
- fullName: com.microsoft.azure.management.batch.DataDisk.lun()
  name: lun()
  nameWithType: DataDisk.lun()
  returns:
    description: <p>the lun value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.</p>

    <p></p>
  syntax: public int lun()
  uid: com.microsoft.azure.management.batch.DataDisk.lun()
- fullName: com.microsoft.azure.management.batch.DataDisk.storageAccountType()
  name: storageAccountType()
  nameWithType: DataDisk.storageAccountType()
  returns:
    description: <p>the storageAccountType value </p>
    type: <xref href="com.microsoft.azure.management.batch.StorageAccountType?alt=com.microsoft.azure.management.batch.StorageAccountType&text=StorageAccountType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if omitted, the default is "Standard_LRS". Values are: Standard_LRS - The data disk should use standard locally redundant storage. Premium_LRS - The data disk should use premium locally redundant storage. Possible values include: 'Standard_LRS', 'Premium_LRS'.</p>

    <p></p>
  syntax: public StorageAccountType storageAccountType()
  uid: com.microsoft.azure.management.batch.DataDisk.storageAccountType()
- fullName: com.microsoft.azure.management.batch.DataDisk.withCaching(CachingType caching)
  name: withCaching(CachingType caching)
  nameWithType: DataDisk.withCaching(CachingType caching)
  parameters:
  - description: <p>the caching value to set </p>
    name: caching
    type: <xref href="com.microsoft.azure.management.batch.CachingType?alt=com.microsoft.azure.management.batch.CachingType&text=CachingType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.DataDisk?alt=com.microsoft.azure.management.batch.DataDisk&text=DataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set values are: none - The caching mode for the disk is not enabled. readOnly - The caching mode for the disk is read only. readWrite - The caching mode for the disk is read and write. The default value for caching is none. For information about the caching options see: <a href="https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/">https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/</a>. Possible values include: 'None', 'ReadOnly', 'ReadWrite'.</p>

    <p></p>
  syntax: public DataDisk withCaching(CachingType caching)
  uid: com.microsoft.azure.management.batch.DataDisk.withCaching(CachingType)
- fullName: com.microsoft.azure.management.batch.DataDisk.withDiskSizeGB(int diskSizeGB)
  name: withDiskSizeGB(int diskSizeGB)
  nameWithType: DataDisk.withDiskSizeGB(int diskSizeGB)
  parameters:
  - description: <p>the diskSizeGB value to set </p>
    name: diskSizeGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.DataDisk?alt=com.microsoft.azure.management.batch.DataDisk&text=DataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the diskSizeGB value.</p>

    <p></p>
  syntax: public DataDisk withDiskSizeGB(int diskSizeGB)
  uid: com.microsoft.azure.management.batch.DataDisk.withDiskSizeGB(int)
- fullName: com.microsoft.azure.management.batch.DataDisk.withLun(int lun)
  name: withLun(int lun)
  nameWithType: DataDisk.withLun(int lun)
  parameters:
  - description: <p>the lun value to set </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.DataDisk?alt=com.microsoft.azure.management.batch.DataDisk&text=DataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.</p>

    <p></p>
  syntax: public DataDisk withLun(int lun)
  uid: com.microsoft.azure.management.batch.DataDisk.withLun(int)
- fullName: com.microsoft.azure.management.batch.DataDisk.withStorageAccountType(StorageAccountType storageAccountType)
  name: withStorageAccountType(StorageAccountType storageAccountType)
  nameWithType: DataDisk.withStorageAccountType(StorageAccountType storageAccountType)
  parameters:
  - description: <p>the storageAccountType value to set </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.batch.StorageAccountType?alt=com.microsoft.azure.management.batch.StorageAccountType&text=StorageAccountType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DataDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.DataDisk?alt=com.microsoft.azure.management.batch.DataDisk&text=DataDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if omitted, the default is "Standard_LRS". Values are: Standard_LRS - The data disk should use standard locally redundant storage. Premium_LRS - The data disk should use premium locally redundant storage. Possible values include: 'Standard_LRS', 'Premium_LRS'.</p>

    <p></p>
  syntax: public DataDisk withStorageAccountType(StorageAccountType storageAccountType)
  uid: com.microsoft.azure.management.batch.DataDisk.withStorageAccountType(StorageAccountType)
nameWithType: DataDisk
syntax: public class DataDisk
type: class
uid: com.microsoft.azure.management.batch.DataDisk
fullName: com.microsoft.azure.management.batch.DataDisk
name: DataDisk
package: com.microsoft.azure.management.batch
summary: <p>Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them. </p>
metadata: {}
