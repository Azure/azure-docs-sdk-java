### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.ClientConfiguration()
  name: ClientConfiguration()
  nameWithType: ClientConfiguration.ClientConfiguration()
  syntax: protected ClientConfiguration()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.ClientConfiguration()
fields:
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.DEFAULT_AMQP_OPEN_AUTHENTICATION_SESSION_TIMEOUT_IN_SECONDS
  name: DEFAULT_AMQP_OPEN_AUTHENTICATION_SESSION_TIMEOUT_IN_SECONDS
  nameWithType: ClientConfiguration.DEFAULT_AMQP_OPEN_AUTHENTICATION_SESSION_TIMEOUT_IN_SECONDS
  syntax: public static final int DEFAULT_AMQP_OPEN_AUTHENTICATION_SESSION_TIMEOUT_IN_SECONDS= 20
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.DEFAULT_AMQP_OPEN_AUTHENTICATION_SESSION_TIMEOUT_IN_SECONDS
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.DEFAULT_AMQP_OPEN_DEVICE_SESSIONS_TIMEOUT_IN_SECONDS
  name: DEFAULT_AMQP_OPEN_DEVICE_SESSIONS_TIMEOUT_IN_SECONDS
  nameWithType: ClientConfiguration.DEFAULT_AMQP_OPEN_DEVICE_SESSIONS_TIMEOUT_IN_SECONDS
  syntax: public static final int DEFAULT_AMQP_OPEN_DEVICE_SESSIONS_TIMEOUT_IN_SECONDS= 60
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.DEFAULT_AMQP_OPEN_DEVICE_SESSIONS_TIMEOUT_IN_SECONDS
- field:
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.DEFAULT_KEEP_ALIVE_INTERVAL_IN_SECONDS
  name: DEFAULT_KEEP_ALIVE_INTERVAL_IN_SECONDS
  nameWithType: ClientConfiguration.DEFAULT_KEEP_ALIVE_INTERVAL_IN_SECONDS
  syntax: public static final int DEFAULT_KEEP_ALIVE_INTERVAL_IN_SECONDS= 230
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.DEFAULT_KEEP_ALIVE_INTERVAL_IN_SECONDS
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getAuthenticationProvider()
  name: getAuthenticationProvider()
  nameWithType: ClientConfiguration.getAuthenticationProvider()
  returns:
    type: <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider&text=IotHubAuthenticationProvider" data-throw-if-not-resolved="False"/>
  syntax: public IotHubAuthenticationProvider getAuthenticationProvider()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getAuthenticationProvider()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getAuthenticationType()
  name: getAuthenticationType()
  nameWithType: ClientConfiguration.getAuthenticationType()
  returns:
    description: <p>The value of AuthenticationType </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientConfiguration.AuthType?alt=com.microsoft.azure.sdk.iot.device.ClientConfiguration.AuthType&text=ClientConfiguration.AuthType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for AuthenticationType</p>

    <p></p>
  syntax: public AuthType getAuthenticationType()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getAuthenticationType()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceClientUniqueIdentifier()
  name: getDeviceClientUniqueIdentifier()
  nameWithType: ClientConfiguration.getDeviceClientUniqueIdentifier()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getDeviceClientUniqueIdentifier()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceClientUniqueIdentifier()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceId()
  name: getDeviceId()
  nameWithType: ClientConfiguration.getDeviceId()
  returns:
    description: <p>the device ID. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the device ID.</p>

    <p></p>
  syntax: public String getDeviceId()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceId()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTelemetryMessageCallback(String inputName)
  name: getDeviceTelemetryMessageCallback(String inputName)
  nameWithType: ClientConfiguration.getDeviceTelemetryMessageCallback(String inputName)
  parameters:
  - description: <p>the inputName that the desired callback is tied to, or null for the default callback</p>
    name: inputName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the message callback. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageCallback?alt=com.microsoft.azure.sdk.iot.device.MessageCallback&text=MessageCallback" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the message callback.</p>

    <p></p>
  syntax: public MessageCallback getDeviceTelemetryMessageCallback(String inputName)
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTelemetryMessageCallback(String)
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTelemetryMessageContext(String inputName)
  name: getDeviceTelemetryMessageContext(String inputName)
  nameWithType: ClientConfiguration.getDeviceTelemetryMessageContext(String inputName)
  parameters:
  - description: <p>the inputName that the desired callback context is tied to, or null for the default callback context</p>
    name: inputName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the message context. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the context to be passed in to the message callback.</p>

    <p></p>
  syntax: public Object getDeviceTelemetryMessageContext(String inputName)
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTelemetryMessageContext(String)
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTwinMessageCallback()
  name: getDeviceTwinMessageCallback()
  nameWithType: ClientConfiguration.getDeviceTwinMessageCallback()
  returns:
    description: <p>the device twin message callback. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageCallback?alt=com.microsoft.azure.sdk.iot.device.MessageCallback&text=MessageCallback" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the device twin message callback.</p>

    <p></p>
  syntax: public MessageCallback getDeviceTwinMessageCallback()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTwinMessageCallback()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTwinMessageContext()
  name: getDeviceTwinMessageContext()
  nameWithType: ClientConfiguration.getDeviceTwinMessageContext()
  returns:
    description: <p>the device twin message context. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the context to be passed in to the device twin message callback.</p>

    <p></p>
  syntax: public Object getDeviceTwinMessageContext()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDeviceTwinMessageContext()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDirectMethodsMessageCallback()
  name: getDirectMethodsMessageCallback()
  nameWithType: ClientConfiguration.getDirectMethodsMessageCallback()
  returns:
    description: <p>the device method message callback. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageCallback?alt=com.microsoft.azure.sdk.iot.device.MessageCallback&text=MessageCallback" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the device twin message callback.</p>

    <p></p>
  syntax: public MessageCallback getDirectMethodsMessageCallback()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDirectMethodsMessageCallback()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDirectMethodsMessageContext()
  name: getDirectMethodsMessageContext()
  nameWithType: ClientConfiguration.getDirectMethodsMessageContext()
  returns:
    description: <p>the device method message context. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the context to be passed in to the device twin message callback.</p>

    <p></p>
  syntax: public Object getDirectMethodsMessageContext()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getDirectMethodsMessageContext()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getGatewayHostname()
  name: getGatewayHostname()
  nameWithType: ClientConfiguration.getGatewayHostname()
  returns:
    description: <p>the name of the gateway host </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the Gateway host name. </p>
  syntax: public String getGatewayHostname()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getGatewayHostname()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getIotHubHostname()
  name: getIotHubHostname()
  nameWithType: ClientConfiguration.getIotHubHostname()
  returns:
    description: <p>the IoT Hub hostname. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the IoT Hub hostname. </p>
  syntax: public String getIotHubHostname()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getIotHubHostname()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getIotHubName()
  name: getIotHubName()
  nameWithType: ClientConfiguration.getIotHubName()
  returns:
    description: <p>the IoT Hub name. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for the IoT Hub name. </p>
  syntax: public String getIotHubName()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getIotHubName()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getMessageLockTimeoutSecs()
  name: getMessageLockTimeoutSecs()
  nameWithType: ClientConfiguration.getMessageLockTimeoutSecs()
  returns:
    description: <p>the timeout, in seconds, for a received message lock. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the timeout, in seconds, for the lock that the client has on a received message.</p>

    <p></p>
  syntax: public int getMessageLockTimeoutSecs()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getMessageLockTimeoutSecs()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getModuleId()
  name: getModuleId()
  nameWithType: ClientConfiguration.getModuleId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getModuleId()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getModuleId()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getSasTokenAuthentication()
  name: getSasTokenAuthentication()
  nameWithType: ClientConfiguration.getSasTokenAuthentication()
  returns:
    description: <p>The value of SasTokenAuthentication, or null if this object isn't using sas token authentication </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider&text=IotHubSasTokenAuthenticationProvider" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for SasTokenAuthentication</p>

    <p></p>
  syntax: public IotHubSasTokenAuthenticationProvider getSasTokenAuthentication()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.getSasTokenAuthentication()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.isUsingWebsocket()
  name: isUsingWebsocket()
  nameWithType: ClientConfiguration.isUsingWebsocket()
  returns:
    description: <p>true if set, false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Getter for Websocket </p>
  syntax: public boolean isUsingWebsocket()
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.isUsingWebsocket()
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.setDeviceTwinMessageCallback(MessageCallback callback, Object context)
  name: setDeviceTwinMessageCallback(MessageCallback callback, Object context)
  nameWithType: ClientConfiguration.setDeviceTwinMessageCallback(MessageCallback callback, Object context)
  parameters:
  - description: <p>callback to be invoked for device twin messages. </p>
    name: callback
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageCallback?alt=com.microsoft.azure.sdk.iot.device.MessageCallback&text=MessageCallback" data-throw-if-not-resolved="False"/>
  - description: <p>is the context for the callback. </p>
    name: context
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Setter for the device twin message callback.</p>

    <p></p>
  syntax: public void setDeviceTwinMessageCallback(MessageCallback callback, Object context)
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.setDeviceTwinMessageCallback(MessageCallback,Object)
- fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration.setDirectMethodsMessageCallback(MessageCallback callback, Object context)
  name: setDirectMethodsMessageCallback(MessageCallback callback, Object context)
  nameWithType: ClientConfiguration.setDirectMethodsMessageCallback(MessageCallback callback, Object context)
  parameters:
  - description: <p>Callback for device method messages. </p>
    name: callback
    type: <xref href="com.microsoft.azure.sdk.iot.device.MessageCallback?alt=com.microsoft.azure.sdk.iot.device.MessageCallback&text=MessageCallback" data-throw-if-not-resolved="False"/>
  - description: <p>is the context for the callback. </p>
    name: context
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Setter for the device method message callback.</p>

    <p></p>
  syntax: public void setDirectMethodsMessageCallback(MessageCallback callback, Object context)
  uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration.setDirectMethodsMessageCallback(MessageCallback,Object)
nameWithType: ClientConfiguration
syntax: public class ClientConfiguration
type: class
uid: com.microsoft.azure.sdk.iot.device.ClientConfiguration
fullName: com.microsoft.azure.sdk.iot.device.ClientConfiguration
name: ClientConfiguration
package: com.microsoft.azure.sdk.iot.device
summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
metadata: {}
