### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Resource" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.actions()
  name: actions()
  nameWithType: WebhookInner.actions()
  returns:
    description: <p>the actions value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.WebhookAction?alt=com.microsoft.azure.management.containerregistry.WebhookAction&text=WebhookAction" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the list of actions that trigger the webhook to post notifications.</p>

    <p></p>
  syntax: public List<WebhookAction> actions()
  uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.actions()
- fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.provisioningState()
  name: provisioningState()
  nameWithType: WebhookInner.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.ProvisioningState?alt=com.microsoft.azure.management.containerregistry.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the provisioning state of the webhook at the time the operation was called. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'.</p>

    <p></p>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.provisioningState()
- fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.scope()
  name: scope()
  nameWithType: WebhookInner.scope()
  returns:
    description: <p>the scope value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.</p>

    <p></p>
  syntax: public String scope()
  uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.scope()
- fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.status()
  name: status()
  nameWithType: WebhookInner.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.WebhookStatus?alt=com.microsoft.azure.management.containerregistry.WebhookStatus&text=WebhookStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the status of the webhook at the time the operation was called. Possible values include: 'enabled', 'disabled'.</p>

    <p></p>
  syntax: public WebhookStatus status()
  uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.status()
- fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.withActions(List<WebhookAction> actions)
  name: withActions(List<WebhookAction> actions)
  nameWithType: WebhookInner.withActions(List<WebhookAction> actions)
  parameters:
  - description: <p>the actions value to set </p>
    name: actions
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.WebhookAction?alt=com.microsoft.azure.management.containerregistry.WebhookAction&text=WebhookAction" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the WebhookInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.WebhookInner?alt=com.microsoft.azure.management.containerregistry.implementation.WebhookInner&text=WebhookInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the list of actions that trigger the webhook to post notifications.</p>

    <p></p>
  syntax: public WebhookInner withActions(List<WebhookAction> actions)
  uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.withActions(List<WebhookAction>)
- fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.withScope(String scope)
  name: withScope(String scope)
  nameWithType: WebhookInner.withScope(String scope)
  parameters:
  - description: <p>the scope value to set </p>
    name: scope
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.WebhookInner?alt=com.microsoft.azure.management.containerregistry.implementation.WebhookInner&text=WebhookInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.</p>

    <p></p>
  syntax: public WebhookInner withScope(String scope)
  uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.withScope(String)
- fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.withStatus(WebhookStatus status)
  name: withStatus(WebhookStatus status)
  nameWithType: WebhookInner.withStatus(WebhookStatus status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.management.containerregistry.WebhookStatus?alt=com.microsoft.azure.management.containerregistry.WebhookStatus&text=WebhookStatus" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the WebhookInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.implementation.WebhookInner?alt=com.microsoft.azure.management.containerregistry.implementation.WebhookInner&text=WebhookInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the status of the webhook at the time the operation was called. Possible values include: 'enabled', 'disabled'.</p>

    <p></p>
  syntax: public WebhookInner withStatus(WebhookStatus status)
  uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner.withStatus(WebhookStatus)
nameWithType: WebhookInner
syntax: public class WebhookInner
type: class
uid: com.microsoft.azure.management.containerregistry.implementation.WebhookInner
fullName: com.microsoft.azure.management.containerregistry.implementation.WebhookInner
name: WebhookInner
package: com.microsoft.azure.management.containerregistry.implementation
summary: <p>An object that represents a webhook for a container registry. </p>
metadata: {}
