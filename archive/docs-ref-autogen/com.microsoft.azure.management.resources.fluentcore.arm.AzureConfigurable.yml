### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withCallbackExecutor(Executor executor)
  name: withCallbackExecutor(Executor executor)
  nameWithType: AzureConfigurable<T>.withCallbackExecutor(Executor executor)
  parameters:
  - description: <p>the executor to execute the callbacks. </p>
    name: executor
    type: <xref href="Executor?alt=Executor&text=Executor" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself for chaining </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the executor for async callbacks to run on.</p>

    <p></p>
  syntax: public T withCallbackExecutor(Executor executor)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withCallbackExecutor(Executor)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withConnectionTimeout(long timeout, TimeUnit unit)
  name: withConnectionTimeout(long timeout, TimeUnit unit)
  nameWithType: AzureConfigurable<T>.withConnectionTimeout(long timeout, TimeUnit unit)
  parameters:
  - description: <p>the timeout numeric value </p>
    name: timeout
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>the time unit for the numeric value </p>
    name: unit
    type: <xref href="TimeUnit?alt=TimeUnit&text=TimeUnit" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself for chaining </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the connection timeout on the HTTP client. Default is 10 seconds.</p>

    <p></p>
  syntax: public T withConnectionTimeout(long timeout, TimeUnit unit)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withConnectionTimeout(long,TimeUnit)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withInterceptor(Interceptor interceptor)
  name: withInterceptor(Interceptor interceptor)
  nameWithType: AzureConfigurable<T>.withInterceptor(Interceptor interceptor)
  parameters:
  - description: <p>the interceptor to plug in </p>
    name: interceptor
    type: <xref href="Interceptor?alt=Interceptor&text=Interceptor" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Plug in an interceptor into the HTTP pipeline.</p>

    <p></p>
  syntax: public T withInterceptor(Interceptor interceptor)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withInterceptor(Interceptor)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withLogLevel(LogLevel level)
  name: withLogLevel(LogLevel level)
  nameWithType: AzureConfigurable<T>.withLogLevel(LogLevel level)
  parameters:
  - description: <p>the OkHttp logging level </p>
    name: level
    type: <xref href="LogLevel?alt=LogLevel&text=LogLevel" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the logging level on the HTTP client.</p>

    <p></p>
  syntax: public T withLogLevel(LogLevel level)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withLogLevel(LogLevel)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withMaxIdleConnections(int maxIdleConnections)
  name: withMaxIdleConnections(int maxIdleConnections)
  nameWithType: AzureConfigurable<T>.withMaxIdleConnections(int maxIdleConnections)
  parameters:
  - description: <p>the maximum idle connections </p>
    name: maxIdleConnections
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself for chaining </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the maximum idle connections for the HTTP client. Default is 5.</p>

    <p></p>
  syntax: public T withMaxIdleConnections(int maxIdleConnections)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withMaxIdleConnections(int)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withProxy(Proxy proxy)
  name: withProxy(Proxy proxy)
  nameWithType: AzureConfigurable<T>.withProxy(Proxy proxy)
  parameters:
  - description: <p>the proxy to use </p>
    name: proxy
    type: <xref href="Proxy?alt=Proxy&text=Proxy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself for chaining </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the proxy for the HTTP client.</p>

    <p></p>
  syntax: public T withProxy(Proxy proxy)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withProxy(Proxy)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withProxyAuthenticator(Authenticator proxyAuthenticator)
  name: withProxyAuthenticator(Authenticator proxyAuthenticator)
  nameWithType: AzureConfigurable<T>.withProxyAuthenticator(Authenticator proxyAuthenticator)
  parameters:
  - description: <p>the proxy authenticator to use </p>
    name: proxyAuthenticator
    type: <xref href="Authenticator?alt=Authenticator&text=Authenticator" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself for chaining </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the proxy authenticator for the HTTP client.</p>

    <p></p>
  syntax: public T withProxyAuthenticator(Authenticator proxyAuthenticator)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withProxyAuthenticator(Authenticator)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withReadTimeout(long timeout, TimeUnit unit)
  name: withReadTimeout(long timeout, TimeUnit unit)
  nameWithType: AzureConfigurable<T>.withReadTimeout(long timeout, TimeUnit unit)
  parameters:
  - description: <p>the timeout numeric value </p>
    name: timeout
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  - description: <p>the time unit for the numeric value </p>
    name: unit
    type: <xref href="TimeUnit?alt=TimeUnit&text=TimeUnit" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself for chaining </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the read timeout on the HTTP client. Default is 10 seconds.</p>

    <p></p>
  syntax: public T withReadTimeout(long timeout, TimeUnit unit)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withReadTimeout(long,TimeUnit)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T extends AzureConfigurable<T>.withUserAgent(String userAgent)
  name: withUserAgent(String userAgent)
  nameWithType: AzureConfigurable<T>.withUserAgent(String userAgent)
  parameters:
  - description: <p>the user agent to use </p>
    name: userAgent
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the configurable object itself </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specify the user agent header.</p>

    <p></p>
  syntax: public T withUserAgent(String userAgent)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable.withUserAgent(String)
nameWithType: AzureConfigurable<T>
syntax: public interface AzureConfigurable<T extends AzureConfigurable<T>>
type: interface
typeParameters:
- description: <p>the actual type of the interface extending this interface </p>
  name: T
uid: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable
fullName: com.microsoft.azure.management.resources.fluentcore.arm.AzureConfigurable<T>
name: AzureConfigurable<T>
package: com.microsoft.azure.management.resources.fluentcore.arm
summary: >-
  <p>The base interface for allowing configurations to be made on the HTTP client.</p>

  <p></p>
metadata: {}
