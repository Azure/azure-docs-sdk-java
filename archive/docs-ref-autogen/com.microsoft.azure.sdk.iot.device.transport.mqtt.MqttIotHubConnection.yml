### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.MqttIotHubConnection(ClientConfiguration config)
  name: MqttIotHubConnection(ClientConfiguration config)
  nameWithType: MqttIotHubConnection.MqttIotHubConnection(ClientConfiguration config)
  parameters:
  - description: <p>the client configuration. </p>
    name: config
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientConfiguration?alt=com.microsoft.azure.sdk.iot.device.ClientConfiguration&text=ClientConfiguration" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the mqtt connection configuration cannot be constructed. </p>
  summary: >-
    <p>Constructs an instance from the given <xref uid="com.microsoft.azure.sdk.iot.device.ClientConfiguration" data-throw-if-not-resolved="false" data-raw-source="ClientConfiguration"></xref> object.</p>

    <p></p>
  syntax: public MqttIotHubConnection(ClientConfiguration config)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.MqttIotHubConnection(ClientConfiguration)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection&text=IotHubTransportConnection" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.close()
  name: close()
  nameWithType: MqttIotHubConnection.close()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.close()
  summary: <p>Closes the connection. After the connection is closed, it is no longer usable. If the connection is already closed, the function shall do nothing. </p>
  syntax: public void close()
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.close()
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.getConnectionId()
  name: getConnectionId()
  nameWithType: MqttIotHubConnection.getConnectionId()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.getConnectionId()
  returns:
    description: <p>the UUID associated with this connection instance </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gives the UUID associated with this connection instance. This string is used in conjunction with the callbacks with connection status updates to ensure that all connection status updates are relevant to this connection object</p>

    <p></p>
  syntax: public String getConnectionId()
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.getConnectionId()
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.onMessageArrived(int messageId)
  name: onMessageArrived(int messageId)
  nameWithType: MqttIotHubConnection.onMessageArrived(int messageId)
  parameters:
  - name: messageId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public void onMessageArrived(int messageId)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.onMessageArrived(int)
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open()
  name: open()
  nameWithType: MqttIotHubConnection.open()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.open()
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if a connection could not to be established. </p>
  summary: >-
    <p>Establishes a connection for the device and IoT Hub given in the client configuration. If the connection is already open, the function shall do nothing.</p>

    <p></p>
  syntax: public void open()
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open()
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendMessage(Message message)
  name: sendMessage(Message message)
  nameWithType: MqttIotHubConnection.sendMessage(Message message)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessage(Message)
  parameters:
  - description: <p>the event message.</p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the MqttIotHubConnection is not open </p>
  returns:
    description: <p>the status code from sending the event message.</p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sends an event message.</p>

    <p></p>
  syntax: public IotHubStatusCode sendMessage(Message message)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendMessage(Message)
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  name: sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  nameWithType: MqttIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessageResult(IotHubTransportMessage,IotHubMessageResult)
  parameters:
  - description: <p>the message to acknowledge to the service </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage" data-throw-if-not-resolved="False"/>
  - description: <p>Ignored. The only ack that can be sent in MQTT is COMPLETE </p>
    name: result
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubMessageResult?alt=com.microsoft.azure.sdk.iot.device.IotHubMessageResult&text=IotHubMessageResult" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the ACK could not be sent successfully </p>
  returns:
    description: <p>true if the ACK was sent successfully and false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Sends an ACK to the service for the provided message </p>
  syntax: public boolean sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendMessageResult(IotHubTransportMessage,IotHubMessageResult)
- fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.setListener(IotHubListener listener)
  name: setListener(IotHubListener listener)
  nameWithType: MqttIotHubConnection.setListener(IotHubListener listener)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.setListener(IotHubListener)
  parameters:
  - description: <p>the listener for connection status updates, message arrivals, and message acknowledgements </p>
    name: listener
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubListener?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubListener&text=IotHubListener" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements </p>
  syntax: public void setListener(IotHubListener listener)
  uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.setListener(IotHubListener)
nameWithType: MqttIotHubConnection
syntax: public class MqttIotHubConnection implements IotHubTransportConnection
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection
fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection
name: MqttIotHubConnection
package: com.microsoft.azure.sdk.iot.device.transport.mqtt
metadata: {}
