### YamlMime:JavaType
methods:
- fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  parameters:
  - description: <p>Previous ResolvedServicePartition value </p>
    name: previousRsp
    type: <xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client. </p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient(<xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="CommunicationClient"></xref>) object. </p>
    type: <xref href="CompletableFuture%3CTCommunicationClient%3E?alt=CompletableFuture%3CTCommunicationClient%3E&text=CompletableFuture%3CTCommunicationClient%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Re-resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public CompletableFuture<TCommunicationClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
- fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  name: getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  parameters:
  - description: <p>Uri of the service to resolve </p>
    name: serviceUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>Key that identifies the partition to resolve </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    name: targetReplicaSelector
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client. </p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is the CommunicationClient(<xref uid="microsoft.servicefabric.services.communication.client.CommunicationClient" data-throw-if-not-resolved="false" data-raw-source="CommunicationClient"></xref>) object. </p>
    type: <xref href="CompletableFuture%3CTCommunicationClient%3E?alt=CompletableFuture%3CTCommunicationClient%3E&text=CompletableFuture%3CTCommunicationClient%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public CompletableFuture<TCommunicationClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
- fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  name: reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  parameters:
  - description: <p>Communication client </p>
    name: client
    type: <xref href="TCommunicationClient?alt=TCommunicationClient&text=TCommunicationClient" data-throw-if-not-resolved="False"/>
  - description: <p>Information about exception that happened while communicating with the service. </p>
    name: exceptionInformation
    type: <xref href="microsoft.servicefabric.services.communication.client.ExceptionInformation?alt=microsoft.servicefabric.services.communication.client.ExceptionInformation&text=ExceptionInformation" data-throw-if-not-resolved="False"/>
  - description: <p>Specifies the retry policy that should be used for handling the reported exception. </p>
    name: retrySettings
    type: <xref href="microsoft.servicefabric.services.communication.client.OperationRetrySettings?alt=microsoft.servicefabric.services.communication.client.OperationRetrySettings&text=OperationRetrySettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. The result of the Task is a <xref uid="microsoft.servicefabric.services.communication.client.OperationRetryControl" data-throw-if-not-resolved="false" data-raw-source="OperationRetryControl"></xref> object that provides information on retry policy for this exception. </p>
    type: CompletableFuture&lt;<xref href="microsoft.servicefabric.services.communication.client.OperationRetryControl?alt=microsoft.servicefabric.services.communication.client.OperationRetryControl&text=OperationRetryControl" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Handles the exceptions that occur in the CommunicationClient when sending a message to the Service</p>

    <p></p>
  syntax: public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
nameWithType: CommunicationClientFactory<TCommunicationClient>
syntax: public interface CommunicationClientFactory<TCommunicationClient extends CommunicationClient>
type: interface
typeParameters:
- name: TCommunicationClient
uid: microsoft.servicefabric.services.communication.client.CommunicationClientFactory
fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient>
name: CommunicationClientFactory<TCommunicationClient>
package: microsoft.servicefabric.services.communication.client
summary: <p>Defines the interface that must be implemented to provide a factory for communication clients to talk to a service fabric service. </p>
metadata: {}
