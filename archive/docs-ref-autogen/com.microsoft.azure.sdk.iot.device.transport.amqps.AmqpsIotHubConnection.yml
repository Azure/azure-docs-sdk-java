### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(ClientConfiguration config, String transportUniqueIdentifier)
  name: AmqpsIotHubConnection(ClientConfiguration config, String transportUniqueIdentifier)
  nameWithType: AmqpsIotHubConnection.AmqpsIotHubConnection(ClientConfiguration config, String transportUniqueIdentifier)
  parameters:
  - name: config
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientConfiguration?alt=com.microsoft.azure.sdk.iot.device.ClientConfiguration&text=ClientConfiguration" data-throw-if-not-resolved="False"/>
  - name: transportUniqueIdentifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public AmqpsIotHubConnection(ClientConfiguration config, String transportUniqueIdentifier)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(ClientConfiguration,String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(String hostName, String transportUniqueIdentifier, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings, int keepAliveInterval)
  name: AmqpsIotHubConnection(String hostName, String transportUniqueIdentifier, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings, int keepAliveInterval)
  nameWithType: AmqpsIotHubConnection.AmqpsIotHubConnection(String hostName, String transportUniqueIdentifier, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings, int keepAliveInterval)
  parameters:
  - name: hostName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: transportUniqueIdentifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: isWebsocketConnection
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  - name: proxySettings
    type: <xref href="com.microsoft.azure.sdk.iot.device.ProxySettings?alt=com.microsoft.azure.sdk.iot.device.ProxySettings&text=ProxySettings" data-throw-if-not-resolved="False"/>
  - name: keepAliveInterval
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public AmqpsIotHubConnection(String hostName, String transportUniqueIdentifier, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings, int keepAliveInterval)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(String,String,boolean,SSLContext,ProxySettings,int)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="BaseHandler" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessage(Message)
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close()
  name: close()
  nameWithType: AmqpsIotHubConnection.close()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.close()
  summary: <p>Closes the transport connection. </p>
  syntax: public void close()
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close()
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getConnectionId()
  name: getConnectionId()
  nameWithType: AmqpsIotHubConnection.getConnectionId()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.getConnectionId()
  returns:
    description: <p>the UUID associated with this connection instance </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gives the UUID associated with this connection instance. This string is used in conjunction with the callbacks with connection status updates to ensure that all connection status updates are relevant to this connection object</p>

    <p></p>
  syntax: public String getConnectionId()
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getConnectionId()
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationFailed(String deviceId, TransportException transportException)
  name: onAuthenticationFailed(String deviceId, TransportException transportException)
  nameWithType: AmqpsIotHubConnection.onAuthenticationFailed(String deviceId, TransportException transportException)
  parameters:
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: transportException
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.TransportException?alt=com.microsoft.azure.sdk.iot.device.transport.TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
  syntax: public void onAuthenticationFailed(String deviceId, TransportException transportException)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationFailed(String,TransportException)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationSessionOpened()
  name: onAuthenticationSessionOpened()
  nameWithType: AmqpsIotHubConnection.onAuthenticationSessionOpened()
  syntax: public void onAuthenticationSessionOpened()
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationSessionOpened()
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)
  name: onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)
  nameWithType: AmqpsIotHubConnection.onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)
  parameters:
  - name: errorCondition
    type: <xref href="ErrorCondition?alt=ErrorCondition&text=ErrorCondition" data-throw-if-not-resolved="False"/>
  syntax: public void onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onCBSSessionClosedUnexpectedly(ErrorCondition)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound(Event event)
  name: onConnectionBound(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionBound(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionBound(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit(Event event)
  name: onConnectionInit(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionInit(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionInit(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalClose(Event event)
  name: onConnectionLocalClose(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionLocalClose(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionLocalClose(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalClose(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalOpen(Event event)
  name: onConnectionLocalOpen(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionLocalOpen(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionLocalOpen(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalOpen(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteClose(Event event)
  name: onConnectionRemoteClose(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionRemoteClose(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionRemoteClose(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteClose(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteOpen(Event event)
  name: onConnectionRemoteOpen(Event event)
  nameWithType: AmqpsIotHubConnection.onConnectionRemoteOpen(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onConnectionRemoteOpen(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteOpen(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDeviceSessionOpened(String deviceId)
  name: onDeviceSessionOpened(String deviceId)
  nameWithType: AmqpsIotHubConnection.onDeviceSessionOpened(String deviceId)
  parameters:
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void onDeviceSessionOpened(String deviceId)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDeviceSessionOpened(String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)
  name: onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)
  nameWithType: AmqpsIotHubConnection.onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)
  parameters:
  - name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  - name: deliveryState
    type: <xref href="DeliveryState?alt=DeliveryState&text=DeliveryState" data-throw-if-not-resolved="False"/>
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageAcknowledged(Message,DeliveryState,String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageReceived(IotHubTransportMessage message)
  name: onMessageReceived(IotHubTransportMessage message)
  nameWithType: AmqpsIotHubConnection.onMessageReceived(IotHubTransportMessage message)
  parameters:
  - name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage" data-throw-if-not-resolved="False"/>
  syntax: public void onMessageReceived(IotHubTransportMessage message)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageReceived(IotHubTransportMessage)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorClosedUnexpectedly()
  name: onReactorClosedUnexpectedly()
  nameWithType: AmqpsIotHubConnection.onReactorClosedUnexpectedly()
  syntax: public void onReactorClosedUnexpectedly()
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorClosedUnexpectedly()
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal(Event event)
  name: onReactorFinal(Event event)
  nameWithType: AmqpsIotHubConnection.onReactorFinal(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onReactorFinal(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit(Event event)
  name: onReactorInit(Event event)
  nameWithType: AmqpsIotHubConnection.onReactorInit(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onReactorInit(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedAsExpected(String deviceId)
  name: onSessionClosedAsExpected(String deviceId)
  nameWithType: AmqpsIotHubConnection.onSessionClosedAsExpected(String deviceId)
  parameters:
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void onSessionClosedAsExpected(String deviceId)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedAsExpected(String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)
  name: onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)
  nameWithType: AmqpsIotHubConnection.onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)
  parameters:
  - name: errorCondition
    type: <xref href="ErrorCondition?alt=ErrorCondition&text=ErrorCondition" data-throw-if-not-resolved="False"/>
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedUnexpectedly(ErrorCondition,String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTimerTask(Event event)
  name: onTimerTask(Event event)
  nameWithType: AmqpsIotHubConnection.onTimerTask(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onTimerTask(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTimerTask(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(Event event)
  name: onTransportError(Event event)
  nameWithType: AmqpsIotHubConnection.onTransportError(Event event)
  parameters:
  - name: event
    type: <xref href="Event?alt=Event&text=Event" data-throw-if-not-resolved="False"/>
  syntax: public void onTransportError(Event event)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(Event)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open()
  name: open()
  nameWithType: AmqpsIotHubConnection.open()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.open()
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If any exceptions are encountered while opening the connection </p>
  summary: <p>Opens the transport connection object </p>
  syntax: public void open()
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open()
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.registerMultiplexedDevice(ClientConfiguration config)
  name: registerMultiplexedDevice(ClientConfiguration config)
  nameWithType: AmqpsIotHubConnection.registerMultiplexedDevice(ClientConfiguration config)
  parameters:
  - name: config
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientConfiguration?alt=com.microsoft.azure.sdk.iot.device.ClientConfiguration&text=ClientConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public void registerMultiplexedDevice(ClientConfiguration config)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.registerMultiplexedDevice(ClientConfiguration)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
  name: sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
  nameWithType: AmqpsIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
  parameters:
  - name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode" data-throw-if-not-resolved="False"/>
  syntax: public IotHubStatusCode sendMessage(com.microsoft.azure.sdk.iot.device.Message message)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.Message)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  name: sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  nameWithType: AmqpsIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessageResult(IotHubTransportMessage,IotHubMessageResult)
  parameters:
  - description: <p>the message to acknowledge </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage" data-throw-if-not-resolved="False"/>
  - description: <p>the acknowledgement value to notify the service of </p>
    name: result
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubMessageResult?alt=com.microsoft.azure.sdk.iot.device.IotHubMessageResult&text=IotHubMessageResult" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if an exception occurred while sending the acknowledgement </p>
  returns:
    description: <p>true if the acknowledgement was sent successfully, and false otherwise </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Send an acknowledgement to the IotHub for a message that the Transport layer received </p>
  syntax: public boolean sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult(IotHubTransportMessage,IotHubMessageResult)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.setListener(IotHubListener listener)
  name: setListener(IotHubListener listener)
  nameWithType: AmqpsIotHubConnection.setListener(IotHubListener listener)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.setListener(IotHubListener)
  parameters:
  - description: <p>the listener for connection status updates, message arrivals, and message acknowledgements </p>
    name: listener
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubListener?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubListener&text=IotHubListener" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements </p>
  syntax: public void setListener(IotHubListener listener)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.setListener(IotHubListener)
- fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.unregisterMultiplexedDevice(ClientConfiguration config, boolean willReconnect)
  name: unregisterMultiplexedDevice(ClientConfiguration config, boolean willReconnect)
  nameWithType: AmqpsIotHubConnection.unregisterMultiplexedDevice(ClientConfiguration config, boolean willReconnect)
  parameters:
  - description: <p>the config of the device that should be unregistered. </p>
    name: config
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientConfiguration?alt=com.microsoft.azure.sdk.iot.device.ClientConfiguration&text=ClientConfiguration" data-throw-if-not-resolved="False"/>
  - description: <p>true if the device will be re-registered soon because it is reconnecting. </p>
    name: willReconnect
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Asynchronously unregister a multiplexed device from an active multiplexed connection or synchronously unregister a multiplexed device from a closed multiplexed connection. </p>
  syntax: public void unregisterMultiplexedDevice(ClientConfiguration config, boolean willReconnect)
  uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.unregisterMultiplexedDevice(ClientConfiguration,boolean)
nameWithType: AmqpsIotHubConnection
syntax: public class AmqpsIotHubConnection implements IotHubTransportConnection
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
name: AmqpsIotHubConnection
package: com.microsoft.azure.sdk.iot.device.transport.amqps
summary: <p>An AMQPS IotHub connection between a device and an IoTHub or Edgehub. This class is responsible for reacting to connection level and reactor level events. It is also responsible for creating sessions and handlers for those sessions. An instance of this object may be reused after it has been closed. This class is used for both single-plexed and multiplexed connections. </p>
metadata: {}
