### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionEstablished(String connectionId)
  name: onConnectionEstablished(String connectionId)
  nameWithType: IotHubListener.onConnectionEstablished(String connectionId)
  parameters:
  - description: <p>the id of the connection this update is relevant to </p>
    name: connectionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Callback to be fired when the connection has been successfully established </p>
  syntax: public void onConnectionEstablished(String connectionId)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionEstablished(String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionLost(TransportException e, String connectionId)
  name: onConnectionLost(TransportException e, String connectionId)
  nameWithType: IotHubListener.onConnectionLost(TransportException e, String connectionId)
  parameters:
  - description: <p>the cause of the connection loss </p>
    name: e
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.TransportException?alt=com.microsoft.azure.sdk.iot.device.transport.TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
  - description: <p>the id of the connection this update is relevant to </p>
    name: connectionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Callback to be fired when connection has been lost </p>
  syntax: public void onConnectionLost(TransportException e, String connectionId)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onConnectionLost(TransportException,String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageReceived(IotHubTransportMessage transportMessage, TransportException e)
  name: onMessageReceived(IotHubTransportMessage transportMessage, TransportException e)
  nameWithType: IotHubListener.onMessageReceived(IotHubTransportMessage transportMessage, TransportException e)
  parameters:
  - description: <p>The message that was received. May be null if e is not null </p>
    name: transportMessage
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage" data-throw-if-not-resolved="False"/>
  - description: <p>the exception that was encountered while receiving messages. May be null if transportMessage is not null </p>
    name: e
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.TransportException?alt=com.microsoft.azure.sdk.iot.device.transport.TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
  summary: <p>Callback to be fired when a transport message has been received. </p>
  syntax: public void onMessageReceived(IotHubTransportMessage transportMessage, TransportException e)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageReceived(IotHubTransportMessage,TransportException)
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageSent(Message message, String deviceId, TransportException e)
  name: onMessageSent(Message message, String deviceId, TransportException e)
  nameWithType: IotHubListener.onMessageSent(Message message, String deviceId, TransportException e)
  parameters:
  - description: <p>The message that was acknowledged </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  - description: <p>The device that the message was sent from </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Null if the message was successfully acknowledged. Otherwise, this exception communicates if the message should be resent at all </p>
    name: e
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.TransportException?alt=com.microsoft.azure.sdk.iot.device.transport.TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
  summary: <p>Callback to be fired when a message that the transport client sent has been acknowledged by Iot Hub </p>
  syntax: public void onMessageSent(Message message, String deviceId, TransportException e)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMessageSent(Message,String,TransportException)
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMultiplexedDeviceSessionEstablished(String connectionId, String deviceId)
  name: onMultiplexedDeviceSessionEstablished(String connectionId, String deviceId)
  nameWithType: IotHubListener.onMultiplexedDeviceSessionEstablished(String connectionId, String deviceId)
  parameters:
  - description: <p>the Id of the connection, used to identify which of possible many reconnection attempts this event belongs to. </p>
    name: connectionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Id of the device that the session belongs to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Callback to be fired when the multiplexed connection establishes a new device session. </p>
  syntax: public void onMultiplexedDeviceSessionEstablished(String connectionId, String deviceId)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMultiplexedDeviceSessionEstablished(String,String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMultiplexedDeviceSessionLost(TransportException e, String connectionId, String deviceId, boolean shouldReconnect)
  name: onMultiplexedDeviceSessionLost(TransportException e, String connectionId, String deviceId, boolean shouldReconnect)
  nameWithType: IotHubListener.onMultiplexedDeviceSessionLost(TransportException e, String connectionId, String deviceId, boolean shouldReconnect)
  parameters:
  - description: <p>The exception that caused the connection to be lost. </p>
    name: e
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.TransportException?alt=com.microsoft.azure.sdk.iot.device.transport.TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
  - description: <p>the Id of the connection, used to identify which of possible many reconnection attempts this event belongs to. </p>
    name: connectionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Id of the device that the session belongs to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>false if the disconnect was desired by the users, and true if it is the consequence of an issue where the SDK should retry. </p>
    name: shouldReconnect
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Callback to be fired when the multiplexed connection loses a device session. </p>
  syntax: public void onMultiplexedDeviceSessionLost(TransportException e, String connectionId, String deviceId, boolean shouldReconnect)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMultiplexedDeviceSessionLost(TransportException,String,String,boolean)
- fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMultiplexedDeviceSessionRegistrationFailed(String connectionId, String deviceId, Exception e)
  name: onMultiplexedDeviceSessionRegistrationFailed(String connectionId, String deviceId, Exception e)
  nameWithType: IotHubListener.onMultiplexedDeviceSessionRegistrationFailed(String connectionId, String deviceId, Exception e)
  parameters:
  - description: <p>the Id of the connection, used to identify which of possible many reconnection attempts this event belongs to. </p>
    name: connectionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Id of the device that the session belongs to </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the throwable that explains why the registration failed. </p>
    name: e
    type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
  summary: <p>Callback to be fired when the multiplexed connection fails to register a device session. </p>
  syntax: public void onMultiplexedDeviceSessionRegistrationFailed(String connectionId, String deviceId, Exception e)
  uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener.onMultiplexedDeviceSessionRegistrationFailed(String,String,Exception)
nameWithType: IotHubListener
syntax: public interface IotHubListener
type: interface
uid: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubListener
name: IotHubListener
package: com.microsoft.azure.sdk.iot.device.transport
summary: <p>Callback interface for communicating connection and message status updates from individual protocol clients (mqtt, https, amqps) to the transport layer that handles queueing of messages and connecting/reconnecting/disconnecting </p>
metadata: {}
