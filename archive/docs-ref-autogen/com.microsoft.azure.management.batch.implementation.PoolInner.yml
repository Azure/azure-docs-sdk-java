### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ProxyResource" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.allocationState()
  name: allocationState()
  nameWithType: PoolInner.allocationState()
  returns:
    description: <p>the allocationState value </p>
    type: <xref href="com.microsoft.azure.management.batch.AllocationState?alt=com.microsoft.azure.management.batch.AllocationState&text=AllocationState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'Steady', 'Resizing', 'Stopping'.</p>

    <p></p>
  syntax: public AllocationState allocationState()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.allocationState()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.allocationStateTransitionTime()
  name: allocationStateTransitionTime()
  nameWithType: PoolInner.allocationStateTransitionTime()
  returns:
    description: <p>the allocationStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the allocationStateTransitionTime value.</p>

    <p></p>
  syntax: public DateTime allocationStateTransitionTime()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.allocationStateTransitionTime()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.applicationLicenses()
  name: applicationLicenses()
  nameWithType: PoolInner.applicationLicenses()
  returns:
    description: <p>the applicationLicenses value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.</p>

    <p></p>
  syntax: public List<String> applicationLicenses()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.applicationLicenses()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.applicationPackages()
  name: applicationPackages()
  nameWithType: PoolInner.applicationPackages()
  returns:
    description: <p>the applicationPackages value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.ApplicationPackageReference?alt=com.microsoft.azure.management.batch.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.</p>

    <p></p>
  syntax: public List<ApplicationPackageReference> applicationPackages()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.applicationPackages()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.autoScaleRun()
  name: autoScaleRun()
  nameWithType: PoolInner.autoScaleRun()
  returns:
    description: <p>the autoScaleRun value </p>
    type: <xref href="com.microsoft.azure.management.batch.AutoScaleRun?alt=com.microsoft.azure.management.batch.AutoScaleRun&text=AutoScaleRun" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the pool automatically scales, i.e. autoScaleSettings are used.</p>

    <p></p>
  syntax: public AutoScaleRun autoScaleRun()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.autoScaleRun()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.certificates()
  name: certificates()
  nameWithType: PoolInner.certificates()
  returns:
    description: <p>the certificates value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.CertificateReference?alt=com.microsoft.azure.management.batch.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get for Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.</p>

    <p></p>
  syntax: public List<CertificateReference> certificates()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.certificates()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.creationTime()
  name: creationTime()
  nameWithType: PoolInner.creationTime()
  returns:
    description: <p>the creationTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the creationTime value.</p>

    <p></p>
  syntax: public DateTime creationTime()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.creationTime()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.currentDedicatedNodes()
  name: currentDedicatedNodes()
  nameWithType: PoolInner.currentDedicatedNodes()
  returns:
    description: <p>the currentDedicatedNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the currentDedicatedNodes value.</p>

    <p></p>
  syntax: public Integer currentDedicatedNodes()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.currentDedicatedNodes()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.currentLowPriorityNodes()
  name: currentLowPriorityNodes()
  nameWithType: PoolInner.currentLowPriorityNodes()
  returns:
    description: <p>the currentLowPriorityNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the currentLowPriorityNodes value.</p>

    <p></p>
  syntax: public Integer currentLowPriorityNodes()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.currentLowPriorityNodes()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.deploymentConfiguration()
  name: deploymentConfiguration()
  nameWithType: PoolInner.deploymentConfiguration()
  returns:
    description: <p>the deploymentConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.batch.DeploymentConfiguration?alt=com.microsoft.azure.management.batch.DeploymentConfiguration&text=DeploymentConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).</p>

    <p></p>
  syntax: public DeploymentConfiguration deploymentConfiguration()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.deploymentConfiguration()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.displayName()
  name: displayName()
  nameWithType: PoolInner.displayName()
  returns:
    description: <p>the displayName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public String displayName()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.displayName()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.etag()
  name: etag()
  nameWithType: PoolInner.etag()
  returns:
    description: <p>the etag value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ETag of the resource, used for concurrency statements.</p>

    <p></p>
  syntax: public String etag()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.etag()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.identity()
  name: identity()
  nameWithType: PoolInner.identity()
  returns:
    description: <p>the identity value </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchPoolIdentity?alt=com.microsoft.azure.management.batch.BatchPoolIdentity&text=BatchPoolIdentity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type of identity used for the Batch Pool.</p>

    <p></p>
  syntax: public BatchPoolIdentity identity()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.identity()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.interNodeCommunication()
  name: interNodeCommunication()
  nameWithType: PoolInner.interNodeCommunication()
  returns:
    description: <p>the interNodeCommunication value </p>
    type: <xref href="com.microsoft.azure.management.batch.InterNodeCommunicationState?alt=com.microsoft.azure.management.batch.InterNodeCommunicationState&text=InterNodeCommunicationState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'. Possible values include: 'Enabled', 'Disabled'.</p>

    <p></p>
  syntax: public InterNodeCommunicationState interNodeCommunication()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.interNodeCommunication()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.lastModified()
  name: lastModified()
  nameWithType: PoolInner.lastModified()
  returns:
    description: <p>the lastModified value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state.</p>

    <p></p>
  syntax: public DateTime lastModified()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.lastModified()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.metadata()
  name: metadata()
  nameWithType: PoolInner.metadata()
  returns:
    description: <p>the metadata value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MetadataItem?alt=com.microsoft.azure.management.batch.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code.</p>

    <p></p>
  syntax: public List<MetadataItem> metadata()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.metadata()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.mountConfiguration()
  name: mountConfiguration()
  nameWithType: PoolInner.mountConfiguration()
  returns:
    description: <p>the mountConfiguration value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MountConfiguration?alt=com.microsoft.azure.management.batch.MountConfiguration&text=MountConfiguration" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get this supports Azure Files, NFS, CIFS/SMB, and Blobfuse.</p>

    <p></p>
  syntax: public List<MountConfiguration> mountConfiguration()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.mountConfiguration()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.networkConfiguration()
  name: networkConfiguration()
  nameWithType: PoolInner.networkConfiguration()
  returns:
    description: <p>the networkConfiguration value </p>
    type: <xref href="com.microsoft.azure.management.batch.NetworkConfiguration?alt=com.microsoft.azure.management.batch.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the networkConfiguration value.</p>

    <p></p>
  syntax: public NetworkConfiguration networkConfiguration()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.networkConfiguration()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.provisioningState()
  name: provisioningState()
  nameWithType: PoolInner.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.batch.PoolProvisioningState?alt=com.microsoft.azure.management.batch.PoolProvisioningState&text=PoolProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'Succeeded', 'Deleting'.</p>

    <p></p>
  syntax: public PoolProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.provisioningState()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.provisioningStateTransitionTime()
  name: provisioningStateTransitionTime()
  nameWithType: PoolInner.provisioningStateTransitionTime()
  returns:
    description: <p>the provisioningStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the provisioningStateTransitionTime value.</p>

    <p></p>
  syntax: public DateTime provisioningStateTransitionTime()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.provisioningStateTransitionTime()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.resizeOperationStatus()
  name: resizeOperationStatus()
  nameWithType: PoolInner.resizeOperationStatus()
  returns:
    description: <p>the resizeOperationStatus value </p>
    type: <xref href="com.microsoft.azure.management.batch.ResizeOperationStatus?alt=com.microsoft.azure.management.batch.ResizeOperationStatus&text=ResizeOperationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the resizeOperationStatus value.</p>

    <p></p>
  syntax: public ResizeOperationStatus resizeOperationStatus()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.resizeOperationStatus()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.scaleSettings()
  name: scaleSettings()
  nameWithType: PoolInner.scaleSettings()
  returns:
    description: <p>the scaleSettings value </p>
    type: <xref href="com.microsoft.azure.management.batch.ScaleSettings?alt=com.microsoft.azure.management.batch.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the scaleSettings value.</p>

    <p></p>
  syntax: public ScaleSettings scaleSettings()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.scaleSettings()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.startTask()
  name: startTask()
  nameWithType: PoolInner.startTask()
  returns:
    description: <p>the startTask value </p>
    type: <xref href="com.microsoft.azure.management.batch.StartTask?alt=com.microsoft.azure.management.batch.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get in an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.</p>

    <p></p>
  syntax: public StartTask startTask()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.startTask()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.taskSchedulingPolicy()
  name: taskSchedulingPolicy()
  nameWithType: PoolInner.taskSchedulingPolicy()
  returns:
    description: <p>the taskSchedulingPolicy value </p>
    type: <xref href="com.microsoft.azure.management.batch.TaskSchedulingPolicy?alt=com.microsoft.azure.management.batch.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if not specified, the default is spread.</p>

    <p></p>
  syntax: public TaskSchedulingPolicy taskSchedulingPolicy()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.taskSchedulingPolicy()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.taskSlotsPerNode()
  name: taskSlotsPerNode()
  nameWithType: PoolInner.taskSlotsPerNode()
  returns:
    description: <p>the taskSlotsPerNode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.</p>

    <p></p>
  syntax: public Integer taskSlotsPerNode()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.taskSlotsPerNode()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.userAccounts()
  name: userAccounts()
  nameWithType: PoolInner.userAccounts()
  returns:
    description: <p>the userAccounts value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.UserAccount?alt=com.microsoft.azure.management.batch.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the userAccounts value.</p>

    <p></p>
  syntax: public List<UserAccount> userAccounts()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.userAccounts()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.vmSize()
  name: vmSize()
  nameWithType: PoolInner.vmSize()
  returns:
    description: <p>the vmSize value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get for information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (<a href="https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/">https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/</a>). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/</a>) or Sizes for Virtual Machines (Windows) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/</a>). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</p>

    <p></p>
  syntax: public String vmSize()
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.vmSize()
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withApplicationLicenses(List<String> applicationLicenses)
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: PoolInner.withApplicationLicenses(List<String> applicationLicenses)
  parameters:
  - description: <p>the applicationLicenses value to set </p>
    name: applicationLicenses
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.</p>

    <p></p>
  syntax: public PoolInner withApplicationLicenses(List<String> applicationLicenses)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withApplicationLicenses(List<String>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  name: withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  nameWithType: PoolInner.withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  parameters:
  - description: <p>the applicationPackages value to set </p>
    name: applicationPackages
    type: List&lt;<xref href="com.microsoft.azure.management.batch.ApplicationPackageReference?alt=com.microsoft.azure.management.batch.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.</p>

    <p></p>
  syntax: public PoolInner withApplicationPackages(List<ApplicationPackageReference> applicationPackages)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withApplicationPackages(List<ApplicationPackageReference>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withCertificates(List<CertificateReference> certificates)
  name: withCertificates(List<CertificateReference> certificates)
  nameWithType: PoolInner.withCertificates(List<CertificateReference> certificates)
  parameters:
  - description: <p>the certificates value to set </p>
    name: certificates
    type: List&lt;<xref href="com.microsoft.azure.management.batch.CertificateReference?alt=com.microsoft.azure.management.batch.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.</p>

    <p></p>
  syntax: public PoolInner withCertificates(List<CertificateReference> certificates)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withCertificates(List<CertificateReference>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  name: withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  nameWithType: PoolInner.withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  parameters:
  - description: <p>the deploymentConfiguration value to set </p>
    name: deploymentConfiguration
    type: <xref href="com.microsoft.azure.management.batch.DeploymentConfiguration?alt=com.microsoft.azure.management.batch.DeploymentConfiguration&text=DeploymentConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set using CloudServiceConfiguration specifies that the nodes should be creating using Azure Cloud Services (PaaS), while VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).</p>

    <p></p>
  syntax: public PoolInner withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withDeploymentConfiguration(DeploymentConfiguration)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withDisplayName(String displayName)
  name: withDisplayName(String displayName)
  nameWithType: PoolInner.withDisplayName(String displayName)
  parameters:
  - description: <p>the displayName value to set </p>
    name: displayName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public PoolInner withDisplayName(String displayName)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withDisplayName(String)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withIdentity(BatchPoolIdentity identity)
  name: withIdentity(BatchPoolIdentity identity)
  nameWithType: PoolInner.withIdentity(BatchPoolIdentity identity)
  parameters:
  - description: <p>the identity value to set </p>
    name: identity
    type: <xref href="com.microsoft.azure.management.batch.BatchPoolIdentity?alt=com.microsoft.azure.management.batch.BatchPoolIdentity&text=BatchPoolIdentity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type of identity used for the Batch Pool.</p>

    <p></p>
  syntax: public PoolInner withIdentity(BatchPoolIdentity identity)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withIdentity(BatchPoolIdentity)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  name: withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  nameWithType: PoolInner.withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  parameters:
  - description: <p>the interNodeCommunication value to set </p>
    name: interNodeCommunication
    type: <xref href="com.microsoft.azure.management.batch.InterNodeCommunicationState?alt=com.microsoft.azure.management.batch.InterNodeCommunicationState&text=InterNodeCommunicationState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'. Possible values include: 'Enabled', 'Disabled'.</p>

    <p></p>
  syntax: public PoolInner withInterNodeCommunication(InterNodeCommunicationState interNodeCommunication)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withInterNodeCommunication(InterNodeCommunicationState)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: PoolInner.withMetadata(List<MetadataItem> metadata)
  parameters:
  - description: <p>the metadata value to set </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MetadataItem?alt=com.microsoft.azure.management.batch.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code.</p>

    <p></p>
  syntax: public PoolInner withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withMetadata(List<MetadataItem>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withMountConfiguration(List<MountConfiguration> mountConfiguration)
  name: withMountConfiguration(List<MountConfiguration> mountConfiguration)
  nameWithType: PoolInner.withMountConfiguration(List<MountConfiguration> mountConfiguration)
  parameters:
  - description: <p>the mountConfiguration value to set </p>
    name: mountConfiguration
    type: List&lt;<xref href="com.microsoft.azure.management.batch.MountConfiguration?alt=com.microsoft.azure.management.batch.MountConfiguration&text=MountConfiguration" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this supports Azure Files, NFS, CIFS/SMB, and Blobfuse.</p>

    <p></p>
  syntax: public PoolInner withMountConfiguration(List<MountConfiguration> mountConfiguration)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withMountConfiguration(List<MountConfiguration>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  name: withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  nameWithType: PoolInner.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  parameters:
  - description: <p>the networkConfiguration value to set </p>
    name: networkConfiguration
    type: <xref href="com.microsoft.azure.management.batch.NetworkConfiguration?alt=com.microsoft.azure.management.batch.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the networkConfiguration value.</p>

    <p></p>
  syntax: public PoolInner withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withNetworkConfiguration(NetworkConfiguration)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withScaleSettings(ScaleSettings scaleSettings)
  name: withScaleSettings(ScaleSettings scaleSettings)
  nameWithType: PoolInner.withScaleSettings(ScaleSettings scaleSettings)
  parameters:
  - description: <p>the scaleSettings value to set </p>
    name: scaleSettings
    type: <xref href="com.microsoft.azure.management.batch.ScaleSettings?alt=com.microsoft.azure.management.batch.ScaleSettings&text=ScaleSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the scaleSettings value.</p>

    <p></p>
  syntax: public PoolInner withScaleSettings(ScaleSettings scaleSettings)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withScaleSettings(ScaleSettings)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withStartTask(StartTask startTask)
  name: withStartTask(StartTask startTask)
  nameWithType: PoolInner.withStartTask(StartTask startTask)
  parameters:
  - description: <p>the startTask value to set </p>
    name: startTask
    type: <xref href="com.microsoft.azure.management.batch.StartTask?alt=com.microsoft.azure.management.batch.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set in an PATCH (update) operation, this property can be set to an empty object to remove the start task from the pool.</p>

    <p></p>
  syntax: public PoolInner withStartTask(StartTask startTask)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withStartTask(StartTask)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  name: withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  nameWithType: PoolInner.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  parameters:
  - description: <p>the taskSchedulingPolicy value to set </p>
    name: taskSchedulingPolicy
    type: <xref href="com.microsoft.azure.management.batch.TaskSchedulingPolicy?alt=com.microsoft.azure.management.batch.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if not specified, the default is spread.</p>

    <p></p>
  syntax: public PoolInner withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withTaskSchedulingPolicy(TaskSchedulingPolicy)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withTaskSlotsPerNode(Integer taskSlotsPerNode)
  name: withTaskSlotsPerNode(Integer taskSlotsPerNode)
  nameWithType: PoolInner.withTaskSlotsPerNode(Integer taskSlotsPerNode)
  parameters:
  - description: <p>the taskSlotsPerNode value to set </p>
    name: taskSlotsPerNode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.</p>

    <p></p>
  syntax: public PoolInner withTaskSlotsPerNode(Integer taskSlotsPerNode)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withTaskSlotsPerNode(Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withUserAccounts(List<UserAccount> userAccounts)
  name: withUserAccounts(List<UserAccount> userAccounts)
  nameWithType: PoolInner.withUserAccounts(List<UserAccount> userAccounts)
  parameters:
  - description: <p>the userAccounts value to set </p>
    name: userAccounts
    type: List&lt;<xref href="com.microsoft.azure.management.batch.UserAccount?alt=com.microsoft.azure.management.batch.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userAccounts value.</p>

    <p></p>
  syntax: public PoolInner withUserAccounts(List<UserAccount> userAccounts)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withUserAccounts(List<UserAccount>)
- fullName: com.microsoft.azure.management.batch.implementation.PoolInner.withVmSize(String vmSize)
  name: withVmSize(String vmSize)
  nameWithType: PoolInner.withVmSize(String vmSize)
  parameters:
  - description: <p>the vmSize value to set </p>
    name: vmSize
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PoolInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolInner?alt=com.microsoft.azure.management.batch.implementation.PoolInner&text=PoolInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (<a href="https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/">https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/</a>). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/</a>) or Sizes for Virtual Machines (Windows) (<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/">https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/</a>). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</p>

    <p></p>
  syntax: public PoolInner withVmSize(String vmSize)
  uid: com.microsoft.azure.management.batch.implementation.PoolInner.withVmSize(String)
nameWithType: PoolInner
syntax: public class PoolInner
type: class
uid: com.microsoft.azure.management.batch.implementation.PoolInner
fullName: com.microsoft.azure.management.batch.implementation.PoolInner
name: PoolInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>Contains information about a pool. </p>
metadata: {}
