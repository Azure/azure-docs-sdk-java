### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.TokenCredentialCache(TokenCredential tokenCredential)
  name: TokenCredentialCache(TokenCredential tokenCredential)
  nameWithType: TokenCredentialCache.TokenCredentialCache(TokenCredential tokenCredential)
  parameters:
  - description: <p>The tokenCredential instance that this cache will use to generate new tokens. </p>
    name: tokenCredential
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  summary: <p>Construct a new TokenCredentialCache instance. </p>
  syntax: public TokenCredentialCache(TokenCredential tokenCredential)
  uid: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.TokenCredentialCache(TokenCredential)
fields:
- field:
    type: <xref href="final+String+%5B%5D?alt=final+String+%5B%5D&text=final+String+%5B%5D" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.IOTHUB_PUBLIC_SCOPE
  name: IOTHUB_PUBLIC_SCOPE
  nameWithType: TokenCredentialCache.IOTHUB_PUBLIC_SCOPE
  syntax: public static final String [] IOTHUB_PUBLIC_SCOPE= new String[]{"https://iothubs.azure.net/.default"}
  uid: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.IOTHUB_PUBLIC_SCOPE
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getAccessToken()
  name: getAccessToken()
  nameWithType: TokenCredentialCache.getAccessToken()
  returns:
    description: <p>a valid AAD authentication token. </p>
    type: <xref href="AccessToken?alt=AccessToken&text=AccessToken" data-throw-if-not-resolved="False"/>
  summary: <p>Get a valid AAD authentication token. This may be the same as a previously returned token if it is not near expiration time yet. If a token is less than or equal to 9 minutes away from expiring or is expired already, the token will be renewed. Otherwise, a cached token will be returned. </p>
  syntax: public AccessToken getAccessToken()
  uid: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getAccessToken()
- fullName: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenCredential()
  name: getTokenCredential()
  nameWithType: TokenCredentialCache.getTokenCredential()
  returns:
    description: <p>the TokenCredential instance that was set in the constructor. </p>
    type: <xref href="TokenCredential?alt=TokenCredential&text=TokenCredential" data-throw-if-not-resolved="False"/>
  syntax: public TokenCredential getTokenCredential()
  uid: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenCredential()
- fullName: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenString()
  name: getTokenString()
  nameWithType: TokenCredentialCache.getTokenString()
  returns:
    description: <p>the access token string, including the Bearer prefix. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Get the access token string, including the Bearer prefix. </p>
  syntax: public String getTokenString()
  uid: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenString()
nameWithType: TokenCredentialCache
syntax: public class TokenCredentialCache
type: class
uid: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache
fullName: com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache
name: TokenCredentialCache
package: com.microsoft.azure.sdk.iot.service.auth
summary: <p>This class generates AAD authentication tokens from a TokenCredential but caches previous tokens when they aren't near expiry. </p>
metadata: {}
