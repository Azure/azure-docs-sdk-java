### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.add(MappingT mapping)
  name: add(MappingT mapping)
  nameWithType: IShardMapper<MappingT,ValueT>.add(MappingT mapping)
  parameters:
  - description: <p>Mapping being added. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a mapping.</p>

    <p></p>
  syntax: public MappingT add(MappingT mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.add(MappingT)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.lookup(ValueT key, LookupOptions lookupOptions)
  name: lookup(ValueT key, LookupOptions lookupOptions)
  nameWithType: IShardMapper<MappingT,ValueT>.lookup(ValueT key, LookupOptions lookupOptions)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="ValueT?alt=ValueT&text=ValueT" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to use cache and/or storage for lookups. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Mapping that contains the key value. </p>
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Looks up the key value and returns the corresponding mapping.</p>

    <p></p>
  syntax: public MappingT lookup(ValueT key, LookupOptions lookupOptions)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.lookup(ValueT,LookupOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.openConnectionForKey(ValueT key, String connectionString)
  name: openConnectionForKey(ValueT key, String connectionString)
  nameWithType: IShardMapper<MappingT,ValueT>.openConnectionForKey(ValueT key, String connectionString)
  parameters:
  - name: key
    type: <xref href="ValueT?alt=ValueT&text=ValueT" data-throw-if-not-resolved="False"/>
  - name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  syntax: public Connection openConnectionForKey(ValueT key, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKey(ValueT,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.openConnectionForKey(ValueT key, String connectionString, ConnectionOptions options)
  name: openConnectionForKey(ValueT key, String connectionString, ConnectionOptions options)
  nameWithType: IShardMapper<MappingT,ValueT>.openConnectionForKey(ValueT key, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="ValueT?alt=ValueT&text=ValueT" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. </p>
    type: <xref href="Connection?alt=Connection&text=Connection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a key value, obtains a SqlConnection to the shard in the mapping that contains the key value.</p>

    <p></p>
  syntax: public Connection openConnectionForKey(ValueT key, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKey(ValueT,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.openConnectionForKeyAsync(ValueT key, String connectionString)
  name: openConnectionForKeyAsync(ValueT key, String connectionString)
  nameWithType: IShardMapper<MappingT,ValueT>.openConnectionForKeyAsync(ValueT key, String connectionString)
  parameters:
  - name: key
    type: <xref href="ValueT?alt=ValueT&text=ValueT" data-throw-if-not-resolved="False"/>
  - name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Callable%3CConnection%3E?alt=Callable%3CConnection%3E&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  syntax: public Callable<Connection> openConnectionForKeyAsync(ValueT key, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKeyAsync(ValueT,String)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.openConnectionForKeyAsync(ValueT key, String connectionString, ConnectionOptions options)
  name: openConnectionForKeyAsync(ValueT key, String connectionString, ConnectionOptions options)
  nameWithType: IShardMapper<MappingT,ValueT>.openConnectionForKeyAsync(ValueT key, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="ValueT?alt=ValueT&text=ValueT" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string with credential information, the DataSource and Database are obtained from the results of the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An opened SqlConnection. </p>
    type: <xref href="Callable%3CConnection%3E?alt=Callable%3CConnection%3E&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Given a key value, asynchronously obtains a SqlConnection to the shard in the mapping that contains the key value.</p>

    <p></p>
  syntax: public Callable<Connection> openConnectionForKeyAsync(ValueT key, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.openConnectionForKeyAsync(ValueT,String,ConnectionOptions)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.remove(MappingT mapping, UUID lockOwnerId)
  name: remove(MappingT mapping, UUID lockOwnerId)
  nameWithType: IShardMapper<MappingT,ValueT>.remove(MappingT mapping, UUID lockOwnerId)
  parameters:
  - description: <p>Mapping being removed. </p>
    name: mapping
    type: <xref href="MappingT?alt=MappingT&text=MappingT" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of the mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes a mapping.</p>

    <p></p>
  syntax: public void remove(MappingT mapping, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.remove(MappingT,UUID)
- fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT extends IShardProvider, ValueT>.tryLookup(ValueT key, LookupOptions lookupOptions, ReferenceObjectHelper<MappingT> mapping)
  name: tryLookup(ValueT key, LookupOptions lookupOptions, ReferenceObjectHelper<MappingT> mapping)
  nameWithType: IShardMapper<MappingT,ValueT>.tryLookup(ValueT key, LookupOptions lookupOptions, ReferenceObjectHelper<MappingT> mapping)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="ValueT?alt=ValueT&text=ValueT" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to use cache and/or storage for lookups. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  - description: <p>Mapping that contains the key value. </p>
    name: mapping
    type: <xref href="ReferenceObjectHelper%3CMappingT%3E?alt=ReferenceObjectHelper%3CMappingT%3E&text=ReferenceObjectHelper%3CMappingT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <code>true</code> if mapping is found, <code>false</code> otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Tries to looks up the key value and returns the corresponding mapping.</p>

    <p></p>
  syntax: public boolean tryLookup(ValueT key, LookupOptions lookupOptions, ReferenceObjectHelper<MappingT> mapping)
  uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper.tryLookup(ValueT,LookupOptions,ReferenceObjectHelper<MappingT>)
nameWithType: IShardMapper<MappingT,ValueT>
syntax: public interface IShardMapper<MappingT extends IShardProvider,ValueT>
type: interface
typeParameters:
- name: MappingT
- name: ValueT
uid: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper
fullName: com.microsoft.azure.elasticdb.shard.mapper.IShardMapper<MappingT,ValueT>
name: IShardMapper<MappingT,ValueT>
package: com.microsoft.azure.elasticdb.shard.mapper
summary: <p>Container for a collection of keys to shards mappings. </p>
metadata: {}
