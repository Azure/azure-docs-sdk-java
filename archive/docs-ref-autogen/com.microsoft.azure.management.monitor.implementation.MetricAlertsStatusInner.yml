### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.MetricAlertsStatusInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: MetricAlertsStatusInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: MetricAlertsStatusInner.MetricAlertsStatusInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of MetricAlertsStatusInner.</p>

    <p></p>
  syntax: public MetricAlertsStatusInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.MetricAlertsStatusInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.list(String resourceGroupName, String ruleName)
  name: list(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsStatusInner.list(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the MetricAlertStatusCollectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public MetricAlertStatusCollectionInner list(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.list(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listAsync(String resourceGroupName, String ruleName)
  name: listAsync(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsStatusInner.listAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertStatusCollectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public Observable<MetricAlertStatusCollectionInner> listAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  name: listAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  nameWithType: MetricAlertsStatusInner.listAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public ServiceFuture<MetricAlertStatusCollectionInner> listAsync(String resourceGroupName, String ruleName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listAsync(String,String,final ServiceCallback<MetricAlertStatusCollectionInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByName(String resourceGroupName, String ruleName, String statusName)
  name: listByName(String resourceGroupName, String ruleName, String statusName)
  nameWithType: MetricAlertsStatusInner.listByName(String resourceGroupName, String ruleName, String statusName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the status. </p>
    name: statusName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the MetricAlertStatusCollectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public MetricAlertStatusCollectionInner listByName(String resourceGroupName, String ruleName, String statusName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByName(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByNameAsync(String resourceGroupName, String ruleName, String statusName)
  name: listByNameAsync(String resourceGroupName, String ruleName, String statusName)
  nameWithType: MetricAlertsStatusInner.listByNameAsync(String resourceGroupName, String ruleName, String statusName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the status. </p>
    name: statusName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertStatusCollectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public Observable<MetricAlertStatusCollectionInner> listByNameAsync(String resourceGroupName, String ruleName, String statusName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByNameAsync(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByNameAsync(String resourceGroupName, String ruleName, String statusName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  name: listByNameAsync(String resourceGroupName, String ruleName, String statusName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  nameWithType: MetricAlertsStatusInner.listByNameAsync(String resourceGroupName, String ruleName, String statusName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the status. </p>
    name: statusName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public ServiceFuture<MetricAlertStatusCollectionInner> listByNameAsync(String resourceGroupName, String ruleName, String statusName, final ServiceCallback<MetricAlertStatusCollectionInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByNameAsync(String,String,String,final ServiceCallback<MetricAlertStatusCollectionInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByNameWithServiceResponseAsync(String resourceGroupName, String ruleName, String statusName)
  name: listByNameWithServiceResponseAsync(String resourceGroupName, String ruleName, String statusName)
  nameWithType: MetricAlertsStatusInner.listByNameWithServiceResponseAsync(String resourceGroupName, String ruleName, String statusName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the status. </p>
    name: statusName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertStatusCollectionInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<MetricAlertStatusCollectionInner>> listByNameWithServiceResponseAsync(String resourceGroupName, String ruleName, String statusName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listByNameWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listWithServiceResponseAsync(String resourceGroupName, String ruleName)
  name: listWithServiceResponseAsync(String resourceGroupName, String ruleName)
  nameWithType: MetricAlertsStatusInner.listWithServiceResponseAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the MetricAlertStatusCollectionInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner?alt=com.microsoft.azure.management.monitor.implementation.MetricAlertStatusCollectionInner&text=MetricAlertStatusCollectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Retrieve an alert rule status.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<MetricAlertStatusCollectionInner>> listWithServiceResponseAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner.listWithServiceResponseAsync(String,String)
nameWithType: MetricAlertsStatusInner
syntax: public class MetricAlertsStatusInner
type: class
uid: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner
fullName: com.microsoft.azure.management.monitor.implementation.MetricAlertsStatusInner
name: MetricAlertsStatusInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in MetricAlertsStatus. </p>
metadata: {}
