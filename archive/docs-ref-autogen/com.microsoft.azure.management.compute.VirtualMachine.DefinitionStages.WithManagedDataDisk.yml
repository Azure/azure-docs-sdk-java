### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk disk)
  name: withExistingDataDisk(Disk disk)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk disk)
  parameters:
  - description: <p>an existing managed disk </p>
    name: disk
    type: <xref href="com.microsoft.azure.management.compute.Disk?alt=com.microsoft.azure.management.compute.Disk&text=Disk" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Associates an existing source managed disk with the virtual machine.</p>

    <p></p>
  syntax: public WithManagedCreate withExistingDataDisk(Disk disk)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)
  name: withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)
  parameters:
  - description: <p>a managed disk </p>
    name: disk
    type: <xref href="com.microsoft.azure.management.compute.Disk?alt=com.microsoft.azure.management.compute.Disk&text=Disk" data-throw-if-not-resolved="False"/>
  - description: <p>the disk LUN </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>a caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Associates an existing source managed disk with the virtual machine and specifies additional settings.</p>

    <p></p>
  syntax: public WithManagedCreate withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk,int,CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)
  name: withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)
  parameters:
  - description: <p>a managed disk </p>
    name: disk
    type: <xref href="com.microsoft.azure.management.compute.Disk?alt=com.microsoft.azure.management.compute.Disk&text=Disk" data-throw-if-not-resolved="False"/>
  - description: <p>the disk resize size in GB </p>
    name: newSizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the disk LUN </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>a caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Associates an existing source managed disk with the virtual machine and specifies additional settings.</p>

    <p></p>
  syntax: public WithManagedCreate withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withExistingDataDisk(Disk,int,int,CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable)
  name: withNewDataDisk(Creatable<Disk> creatable)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable)
  parameters:
  - description: <p>a creatable disk definition </p>
    name: creatable
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.management.compute.Disk?alt=com.microsoft.azure.management.compute.Disk&text=Disk" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that a managed disk should be created explicitly with the given definition and attached to the virtual machine as a data disk.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDisk(Creatable<Disk> creatable)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk>)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)
  name: withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)
  parameters:
  - description: <p>a creatable disk </p>
    name: creatable
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.management.compute.Disk?alt=com.microsoft.azure.management.compute.Disk&text=Disk" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>the data disk LUN </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>a data disk caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that a managed disk needs to be created explicitly with the given definition and attach to the virtual machine as data disk.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk>,int,CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB)
  name: withNewDataDisk(int sizeInGB)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB)
  parameters:
  - description: <p>the size of the managed disk in GB </p>
    name: sizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that a managed disk needs to be created implicitly with the given size.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDisk(int sizeInGB)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)
  name: withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)
  parameters:
  - description: <p>the size of the managed disk in GB </p>
    name: sizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the disk LUN </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that a managed disk needs to be created implicitly with the given settings.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int,int,CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  name: withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  parameters:
  - description: <p>the size of the managed disk in GB </p>
    name: sizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the disk LUN </p>
    name: lun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  - description: <p>the storage account type </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.compute.StorageAccountTypes?alt=com.microsoft.azure.management.compute.StorageAccountTypes&text=StorageAccountTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies that a managed disk needs to be created implicitly with the given settings.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDisk(int,int,CachingTypes,StorageAccountTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int imageLun)
  name: withNewDataDiskFromImage(int imageLun)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int imageLun)
  parameters:
  - description: <p>the LUN of the source data disk image </p>
    name: imageLun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the data disk to be created from the data disk image in the virtual machine image.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDiskFromImage(int imageLun)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType)
  name: withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType)
  parameters:
  - description: <p>the LUN of the source data disk image </p>
    name: imageLun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the new size that overrides the default size specified in the data disk image </p>
    name: newSizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>a caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the data disk to be created from the data disk image in the virtual machine image.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int,int,CachingTypes)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  name: withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  parameters:
  - description: <p>the LUN of the source data disk image </p>
    name: imageLun
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the new size that overrides the default size specified in the data disk image </p>
    name: newSizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>a caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  - description: <p>a storage account type </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.compute.StorageAccountTypes?alt=com.microsoft.azure.management.compute.StorageAccountTypes&text=StorageAccountTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedCreate&text=VirtualMachine.DefinitionStages.WithManagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the data disk to be created from the data disk image in the virtual machine image.</p>

    <p></p>
  syntax: public WithManagedCreate withNewDataDiskFromImage(int imageLun, int newSizeInGB, CachingTypes cachingType, StorageAccountTypes storageAccountType)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk.withNewDataDiskFromImage(int,int,CachingTypes,StorageAccountTypes)
nameWithType: VirtualMachine.DefinitionStages.WithManagedDataDisk
syntax: public interface WithManagedDataDisk
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk
fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithManagedDataDisk
name: VirtualMachine.DefinitionStages.WithManagedDataDisk
package: com.microsoft.azure.management.compute
summary: <p>The stage of a virtual machine definition allowing to specify a managed data disk. </p>
metadata: {}
