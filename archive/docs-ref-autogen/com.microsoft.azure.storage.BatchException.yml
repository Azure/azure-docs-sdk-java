### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Exception" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.StorageException?alt=com.microsoft.azure.storage.StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.StorageException.errorCode
- com.microsoft.azure.storage.StorageException.extendedErrorInformation
- com.microsoft.azure.storage.StorageException.getErrorCode()
- com.microsoft.azure.storage.StorageException.getExtendedErrorInformation()
- com.microsoft.azure.storage.StorageException.getHttpStatusCode()
- com.microsoft.azure.storage.StorageException.StorageException(final String,final String,final Exception)
- com.microsoft.azure.storage.StorageException.StorageException(final String,final String,final int,final StorageExtendedErrorInformation,final Exception)
- com.microsoft.azure.storage.StorageException.translateClientException(final Exception)
- com.microsoft.azure.storage.StorageException.translateException(final StorageRequest<?, ?, ?>,final Exception,final OperationContext)
methods:
- fullName: com.microsoft.azure.storage.BatchException.getExceptions()
  name: getExceptions()
  nameWithType: BatchException.getExceptions()
  returns:
    type: Map&lt;?, <xref href="com.microsoft.azure.storage.StorageException?alt=com.microsoft.azure.storage.StorageException&text=StorageException" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<?, StorageException> getExceptions()
  uid: com.microsoft.azure.storage.BatchException.getExceptions()
- fullName: com.microsoft.azure.storage.BatchException.getSuccessfulResponses()
  name: getSuccessfulResponses()
  nameWithType: BatchException.getSuccessfulResponses()
  returns:
    type: <xref href="Map%3C%3F%2C+%3F%3E?alt=Map%3C%3F%2C+%3F%3E&text=Map%3C%3F%2C+%3F%3E" data-throw-if-not-resolved="False"/>
  syntax: public Map<?, ?> getSuccessfulResponses()
  uid: com.microsoft.azure.storage.BatchException.getSuccessfulResponses()
nameWithType: BatchException
syntax: public class BatchException extends StorageException
type: class
uid: com.microsoft.azure.storage.BatchException
fullName: com.microsoft.azure.storage.BatchException
name: BatchException
package: com.microsoft.azure.storage
summary: <p>Exception for when one or more sub-requests within a batch request fail. This exception is a map of the <xref uid="com.microsoft.azure.storage.StorageException" data-throw-if-not-resolved="false" data-raw-source="StorageException"></xref>s to the parent objects of the sub-request. Extensions of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Throwable"></xref> cannot use generics, so this class uses several data structures with wildcards. Since only groups of the same request type can be batched together, the batch caller will know the intended type in context, and can safely cast the result. Please refer to the samples project for an example on how to appropriately handle batch exceptions. </p>
metadata: {}
