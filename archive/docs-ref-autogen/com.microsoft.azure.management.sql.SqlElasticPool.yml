### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.arm.models.ExternalChildResource.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.addExistingDatabase(SqlDatabase database)
  name: addExistingDatabase(SqlDatabase database)
  nameWithType: SqlElasticPool.addExistingDatabase(SqlDatabase database)
  parameters:
  - description: <p>the database to be added </p>
    name: database
    type: <xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the database </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds an existing SQL Database to the Elastic Pool.</p>

    <p></p>
  syntax: public SqlDatabase addExistingDatabase(SqlDatabase database)
  uid: com.microsoft.azure.management.sql.SqlElasticPool.addExistingDatabase(SqlDatabase)
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.addExistingDatabase(String databaseName)
  name: addExistingDatabase(String databaseName)
  nameWithType: SqlElasticPool.addExistingDatabase(String databaseName)
  parameters:
  - description: <p>name of the database </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the database </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds an existing SQL Database to the Elastic Pool.</p>

    <p></p>
  syntax: public SqlDatabase addExistingDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPool.addExistingDatabase(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.addNewDatabase(String databaseName)
  name: addNewDatabase(String databaseName)
  nameWithType: SqlElasticPool.addNewDatabase(String databaseName)
  parameters:
  - description: <p>name of the database </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the database </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a new SQL Database to the Elastic Pool.</p>

    <p></p>
  syntax: public SqlDatabase addNewDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPool.addNewDatabase(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.creationDate()
  name: creationDate()
  nameWithType: SqlElasticPool.creationDate()
  returns:
    description: <p>the creation date of the Azure SQL Elastic Pool </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime creationDate()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.creationDate()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.databaseDtuMax()
  name: databaseDtuMax()
  nameWithType: SqlElasticPool.databaseDtuMax()
  returns:
    description: <p>the maximum DTU any one SQL Azure database can consume. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int databaseDtuMax()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.databaseDtuMax()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.databaseDtuMin()
  name: databaseDtuMin()
  nameWithType: SqlElasticPool.databaseDtuMin()
  returns:
    description: <p>the minimum DTU all SQL Azure Databases are guaranteed </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int databaseDtuMin()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.databaseDtuMin()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.delete()
  name: delete()
  nameWithType: SqlElasticPool.delete()
  summary: <p>Deletes this SQL Elastic Pool from the parent SQL server. </p>
  syntax: public void delete()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.delete()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.deleteAsync()
  name: deleteAsync()
  nameWithType: SqlElasticPool.deleteAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes this SQL Elastic Pool asynchronously from the parent SQL server.</p>

    <p></p>
  syntax: public Completable deleteAsync()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.deleteAsync()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.dtu()
  name: dtu()
  nameWithType: SqlElasticPool.dtu()
  returns:
    description: <p>The total shared DTU for the SQL Azure Database Elastic Pool </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int dtu()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.dtu()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.edition()
  name: edition()
  nameWithType: SqlElasticPool.edition()
  returns:
    description: <p>the edition of Azure SQL Elastic Pool </p>
    type: <xref href="com.microsoft.azure.management.sql.ElasticPoolEdition?alt=com.microsoft.azure.management.sql.ElasticPoolEdition&text=ElasticPoolEdition" data-throw-if-not-resolved="False"/>
  syntax: public ElasticPoolEdition edition()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.edition()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.getDatabase(String databaseName)
  name: getDatabase(String databaseName)
  nameWithType: SqlElasticPool.getDatabase(String databaseName)
  parameters:
  - description: <p>name of the database to look into </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the information about specific database in elastic pool </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specific database in the elastic pool.</p>

    <p></p>
  syntax: public SqlDatabase getDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPool.getDatabase(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listActivities()
  name: listActivities()
  nameWithType: SqlElasticPool.listActivities()
  returns:
    description: <p>the information about elastic pool activities </p>
    type: List&lt;<xref href="com.microsoft.azure.management.sql.ElasticPoolActivity?alt=com.microsoft.azure.management.sql.ElasticPoolActivity&text=ElasticPoolActivity" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<ElasticPoolActivity> listActivities()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listActivities()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listActivitiesAsync()
  name: listActivitiesAsync()
  nameWithType: SqlElasticPool.listActivitiesAsync()
  returns:
    description: <p>a representation of the deferred computation of the information about elastic pool activities </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.sql.ElasticPoolActivity?alt=com.microsoft.azure.management.sql.ElasticPoolActivity&text=ElasticPoolActivity" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Observable<ElasticPoolActivity> listActivitiesAsync()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listActivitiesAsync()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseActivities()
  name: listDatabaseActivities()
  nameWithType: SqlElasticPool.listDatabaseActivities()
  returns:
    description: <p>the information about elastic pool database activities </p>
    type: List&lt;<xref href="com.microsoft.azure.management.sql.ElasticPoolDatabaseActivity?alt=com.microsoft.azure.management.sql.ElasticPoolDatabaseActivity&text=ElasticPoolDatabaseActivity" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<ElasticPoolDatabaseActivity> listDatabaseActivities()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseActivities()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseActivitiesAsync()
  name: listDatabaseActivitiesAsync()
  nameWithType: SqlElasticPool.listDatabaseActivitiesAsync()
  returns:
    description: <p>the information about elastic pool database activities </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.sql.ElasticPoolDatabaseActivity?alt=com.microsoft.azure.management.sql.ElasticPoolDatabaseActivity&text=ElasticPoolDatabaseActivity" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Observable<ElasticPoolDatabaseActivity> listDatabaseActivitiesAsync()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseActivitiesAsync()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetricDefinitions()
  name: listDatabaseMetricDefinitions()
  nameWithType: SqlElasticPool.listDatabaseMetricDefinitions()
  returns:
    description: <p>the elastic pool's metric definitions </p>
    type: List&lt;<xref href="com.microsoft.azure.management.sql.SqlDatabaseMetricDefinition?alt=com.microsoft.azure.management.sql.SqlDatabaseMetricDefinition&text=SqlDatabaseMetricDefinition" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the database metric definitions for this SQL Elastic Pool.</p>

    <p></p>
  syntax: public List<SqlDatabaseMetricDefinition> listDatabaseMetricDefinitions()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetricDefinitions()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetricDefinitionsAsync()
  name: listDatabaseMetricDefinitionsAsync()
  nameWithType: SqlElasticPool.listDatabaseMetricDefinitionsAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.sql.SqlDatabaseMetricDefinition?alt=com.microsoft.azure.management.sql.SqlDatabaseMetricDefinition&text=SqlDatabaseMetricDefinition" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Asynchronously lists the database metric definitions for this SQL Elastic Pool.</p>

    <p></p>
  syntax: public Observable<SqlDatabaseMetricDefinition> listDatabaseMetricDefinitionsAsync()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetricDefinitionsAsync()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetrics(String filter)
  name: listDatabaseMetrics(String filter)
  nameWithType: SqlElasticPool.listDatabaseMetrics(String filter)
  parameters:
  - description: <p>an OData filter expression that describes a subset of metrics to return </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the elastic pool's database metrics </p>
    type: List&lt;<xref href="com.microsoft.azure.management.sql.SqlDatabaseMetric?alt=com.microsoft.azure.management.sql.SqlDatabaseMetric&text=SqlDatabaseMetric" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the database metrics for this SQL Elastic Pool.</p>

    <p></p>
  syntax: public List<SqlDatabaseMetric> listDatabaseMetrics(String filter)
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetrics(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetricsAsync(String filter)
  name: listDatabaseMetricsAsync(String filter)
  nameWithType: SqlElasticPool.listDatabaseMetricsAsync(String filter)
  parameters:
  - description: <p>an OData filter expression that describes a subset of metrics to return </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.sql.SqlDatabaseMetric?alt=com.microsoft.azure.management.sql.SqlDatabaseMetric&text=SqlDatabaseMetric" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Asynchronously lists the database metrics for this SQL Elastic Pool.</p>

    <p></p>
  syntax: public Observable<SqlDatabaseMetric> listDatabaseMetricsAsync(String filter)
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabaseMetricsAsync(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabases()
  name: listDatabases()
  nameWithType: SqlElasticPool.listDatabases()
  returns:
    description: <p>the information about databases in elastic pool </p>
    type: List&lt;<xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the SQL databases in this SQL Elastic Pool.</p>

    <p></p>
  syntax: public List<SqlDatabase> listDatabases()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabases()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.listDatabasesAsync()
  name: listDatabasesAsync()
  nameWithType: SqlElasticPool.listDatabasesAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Asynchronously lists the SQL databases in this SQL Elastic Pool.</p>

    <p></p>
  syntax: public Observable<SqlDatabase> listDatabasesAsync()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.listDatabasesAsync()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.parentId()
  name: parentId()
  nameWithType: SqlElasticPool.parentId()
  returns:
    description: <p>the parent SQL server ID </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String parentId()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.parentId()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.region()
  name: region()
  nameWithType: SqlElasticPool.region()
  returns:
    description: <p>the region the resource is in </p>
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  syntax: public Region region()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.region()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.regionName()
  name: regionName()
  nameWithType: SqlElasticPool.regionName()
  returns:
    description: <p>the name of the region the resource is in </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String regionName()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.regionName()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.removeDatabase(String databaseName)
  name: removeDatabase(String databaseName)
  nameWithType: SqlElasticPool.removeDatabase(String databaseName)
  parameters:
  - description: <p>name of the database </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the database </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlDatabase?alt=com.microsoft.azure.management.sql.SqlDatabase&text=SqlDatabase" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes an existing SQL Database from the Elastic Pool.</p>

    <p></p>
  syntax: public SqlDatabase removeDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPool.removeDatabase(String)
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.sqlServerName()
  name: sqlServerName()
  nameWithType: SqlElasticPool.sqlServerName()
  returns:
    description: <p>name of the SQL Server to which this elastic pool belongs </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String sqlServerName()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.sqlServerName()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.state()
  name: state()
  nameWithType: SqlElasticPool.state()
  returns:
    description: <p>the state of the Azure SQL Elastic Pool </p>
    type: <xref href="com.microsoft.azure.management.sql.ElasticPoolState?alt=com.microsoft.azure.management.sql.ElasticPoolState&text=ElasticPoolState" data-throw-if-not-resolved="False"/>
  syntax: public ElasticPoolState state()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.state()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.storageCapacityInMB()
  name: storageCapacityInMB()
  nameWithType: SqlElasticPool.storageCapacityInMB()
  returns:
    description: <p>the storage capacity limit for the SQL Azure Database Elastic Pool in MB </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int storageCapacityInMB()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.storageCapacityInMB()
- fullName: com.microsoft.azure.management.sql.SqlElasticPool.storageMB()
  name: storageMB()
  nameWithType: SqlElasticPool.storageMB()
  returns:
    description: <p>the storage limit for the SQL Azure Database Elastic Pool in MB </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int storageMB()
  uid: com.microsoft.azure.management.sql.SqlElasticPool.storageMB()
nameWithType: SqlElasticPool
syntax: public interface SqlElasticPool extends IndependentChildResource<SqlServerManager, ElasticPoolInner>,Refreshable<SqlElasticPool>,Updatable<SqlElasticPool.Update>,ExternalChildResource<SqlElasticPool, SqlServer>,HasInner<ElasticPoolInner>,HasResourceGroup,Refreshable<SqlElasticPool>,Updatable<SqlElasticPool.Update>
type: interface
uid: com.microsoft.azure.management.sql.SqlElasticPool
fullName: com.microsoft.azure.management.sql.SqlElasticPool
name: SqlElasticPool
package: com.microsoft.azure.management.sql
summary: >-
  <p>An immutable client-side representation of an Azure SQL Elastic Pool.</p>

  <p>An immutable client-side representation of an Azure SQL ElasticPool. </p>
metadata: {}
