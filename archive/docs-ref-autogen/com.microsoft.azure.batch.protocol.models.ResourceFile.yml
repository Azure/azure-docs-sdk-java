### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.autoStorageContainerName()
  name: autoStorageContainerName()
  nameWithType: ResourceFile.autoStorageContainerName()
  returns:
    description: <p>the autoStorageContainerName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.</p>

    <p></p>
  syntax: public String autoStorageContainerName()
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.autoStorageContainerName()
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.blobPrefix()
  name: blobPrefix()
  nameWithType: ResourceFile.blobPrefix()
  returns:
    description: <p>the blobPrefix value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.</p>

    <p></p>
  syntax: public String blobPrefix()
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.blobPrefix()
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.fileMode()
  name: fileMode()
  nameWithType: ResourceFile.fileMode()
  returns:
    description: <p>the fileMode value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.</p>

    <p></p>
  syntax: public String fileMode()
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.fileMode()
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.filePath()
  name: filePath()
  nameWithType: ResourceFile.filePath()
  returns:
    description: <p>the filePath value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').</p>

    <p></p>
  syntax: public String filePath()
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.filePath()
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.httpUrl()
  name: httpUrl()
  nameWithType: ResourceFile.httpUrl()
  returns:
    description: <p>the httpUrl value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.</p>

    <p></p>
  syntax: public String httpUrl()
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.httpUrl()
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.storageContainerUrl()
  name: storageContainerUrl()
  nameWithType: ResourceFile.storageContainerUrl()
  returns:
    description: <p>the storageContainerUrl value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading blobs from the container. There are two ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the container, or set the ACL for the container to allow public access.</p>

    <p></p>
  syntax: public String storageContainerUrl()
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.storageContainerUrl()
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.withAutoStorageContainerName(String autoStorageContainerName)
  name: withAutoStorageContainerName(String autoStorageContainerName)
  nameWithType: ResourceFile.withAutoStorageContainerName(String autoStorageContainerName)
  parameters:
  - description: <p>the autoStorageContainerName value to set </p>
    name: autoStorageContainerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ResourceFile object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.</p>

    <p></p>
  syntax: public ResourceFile withAutoStorageContainerName(String autoStorageContainerName)
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.withAutoStorageContainerName(String)
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.withBlobPrefix(String blobPrefix)
  name: withBlobPrefix(String blobPrefix)
  nameWithType: ResourceFile.withBlobPrefix(String blobPrefix)
  parameters:
  - description: <p>the blobPrefix value to set </p>
    name: blobPrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ResourceFile object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.</p>

    <p></p>
  syntax: public ResourceFile withBlobPrefix(String blobPrefix)
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.withBlobPrefix(String)
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.withFileMode(String fileMode)
  name: withFileMode(String fileMode)
  nameWithType: ResourceFile.withFileMode(String fileMode)
  parameters:
  - description: <p>the fileMode value to set </p>
    name: fileMode
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ResourceFile object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.</p>

    <p></p>
  syntax: public ResourceFile withFileMode(String fileMode)
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.withFileMode(String)
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.withFilePath(String filePath)
  name: withFilePath(String filePath)
  nameWithType: ResourceFile.withFilePath(String filePath)
  parameters:
  - description: <p>the filePath value to set </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ResourceFile object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').</p>

    <p></p>
  syntax: public ResourceFile withFilePath(String filePath)
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.withFilePath(String)
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.withHttpUrl(String httpUrl)
  name: withHttpUrl(String httpUrl)
  nameWithType: ResourceFile.withHttpUrl(String httpUrl)
  parameters:
  - description: <p>the httpUrl value to set </p>
    name: httpUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ResourceFile object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.</p>

    <p></p>
  syntax: public ResourceFile withHttpUrl(String httpUrl)
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.withHttpUrl(String)
- fullName: com.microsoft.azure.batch.protocol.models.ResourceFile.withStorageContainerUrl(String storageContainerUrl)
  name: withStorageContainerUrl(String storageContainerUrl)
  nameWithType: ResourceFile.withStorageContainerUrl(String storageContainerUrl)
  parameters:
  - description: <p>the storageContainerUrl value to set </p>
    name: storageContainerUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ResourceFile object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading blobs from the container. There are two ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the container, or set the ACL for the container to allow public access.</p>

    <p></p>
  syntax: public ResourceFile withStorageContainerUrl(String storageContainerUrl)
  uid: com.microsoft.azure.batch.protocol.models.ResourceFile.withStorageContainerUrl(String)
nameWithType: ResourceFile
syntax: public class ResourceFile
type: class
uid: com.microsoft.azure.batch.protocol.models.ResourceFile
fullName: com.microsoft.azure.batch.protocol.models.ResourceFile
name: ResourceFile
package: com.microsoft.azure.batch.protocol.models
summary: <p>A single file or multiple files to be downloaded to a compute node. </p>
metadata: {}
