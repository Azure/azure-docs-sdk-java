### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.blob.BlobProperties.BlobProperties()
  name: BlobProperties()
  nameWithType: BlobProperties.BlobProperties()
  summary: <p>Creates an instance of the  class. </p>
  syntax: public BlobProperties()
  uid: com.microsoft.azure.storage.blob.BlobProperties.BlobProperties()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(final BlobProperties other)
  name: BlobProperties(final BlobProperties other)
  nameWithType: BlobProperties.BlobProperties(final BlobProperties other)
  parameters:
  - description: <p>A <code>BlobProperties</code> object which represents the blob properties to copy. </p>
    name: other
    type: final <xref href="com.microsoft.azure.storage.blob.BlobProperties?alt=com.microsoft.azure.storage.blob.BlobProperties&text=BlobProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class by copying values from another instance of the  class.</p>

    <p></p>
  syntax: public BlobProperties(final BlobProperties other)
  uid: com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(final BlobProperties)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(final BlobType type)
  name: BlobProperties(final BlobType type)
  nameWithType: BlobProperties.BlobProperties(final BlobType type)
  parameters:
  - description: <p>A <code>BlobType</code> object which represents the blob type. </p>
    name: type
    type: final <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class.</p>

    <p></p>
  syntax: public BlobProperties(final BlobType type)
  uid: com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(final BlobType)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount()
  name: getAppendBlobCommittedBlockCount()
  nameWithType: BlobProperties.getAppendBlobCommittedBlockCount()
  returns:
    description: <p>A <code>Integer</code> value that represents the number of committed blocks. </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>If the blob is an append blob, gets the number of committed blocks.</p>

    <p></p>
  syntax: public Integer getAppendBlobCommittedBlockCount()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getBlobType()
  name: getBlobType()
  nameWithType: BlobProperties.getBlobType()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobType" data-throw-if-not-resolved="false" data-raw-source="BlobType"></xref> value that represents the blob type. </p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the blob type for the blob.</p>

    <p></p>
  syntax: public BlobType getBlobType()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getBlobType()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getCacheControl()
  name: getCacheControl()
  nameWithType: BlobProperties.getCacheControl()
  returns:
    description: <p>A <code>String</code> which represents the content cache control value for the blob. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the cache control value for the blob.</p>

    <p></p>
  syntax: public String getCacheControl()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getCacheControl()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition()
  name: getContentDisposition()
  nameWithType: BlobProperties.getContentDisposition()
  returns:
    description: <p>A <code>String</code> which represents the content disposition, or <code>null</code> if content disposition has not been set on the blob. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content disposition value for the blob.</p>

    <p></p>
  syntax: public String getContentDisposition()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding()
  name: getContentEncoding()
  nameWithType: BlobProperties.getContentEncoding()
  returns:
    description: <p>A <code>String</code> which represents the content encoding, or <code>null</code> if content encoding has not been set on the blob. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content encoding value for the blob.</p>

    <p></p>
  syntax: public String getContentEncoding()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage()
  name: getContentLanguage()
  nameWithType: BlobProperties.getContentLanguage()
  returns:
    description: <p>A <code>String</code> which represents the content language, or <code>null</code> if content language has not been set on the blob. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content language value for the blob.</p>

    <p></p>
  syntax: public String getContentLanguage()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getContentMD5()
  name: getContentMD5()
  nameWithType: BlobProperties.getContentMD5()
  returns:
    description: <p>A <code>String</code> which represents the content MD5 value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content MD5 value for the blob.</p>

    <p></p>
  syntax: public String getContentMD5()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getContentMD5()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getContentType()
  name: getContentType()
  nameWithType: BlobProperties.getContentType()
  returns:
    description: <p>A <code>String</code> which represents the content type, or <code>null</code> if the content type has not be set for the blob. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content type value for the blob.</p>

    <p></p>
  syntax: public String getContentType()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getContentType()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getCopyState()
  name: getCopyState()
  nameWithType: BlobProperties.getCopyState()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CopyState" data-throw-if-not-resolved="false" data-raw-source="CopyState"></xref> object which represents the copy state of the blob. </p>
    type: <xref href="com.microsoft.azure.storage.blob.CopyState?alt=com.microsoft.azure.storage.blob.CopyState&text=CopyState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the blob's copy state.</p>

    <p></p>
  syntax: public CopyState getCopyState()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getCopyState()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime()
  name: getCreatedTime()
  nameWithType: BlobProperties.getCreatedTime()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which represents the time when the blob was created. </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the time when the blob was created. </p>
  syntax: public Date getCreatedTime()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime()
  name: getDeletedTime()
  nameWithType: BlobProperties.getDeletedTime()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which represents the time when the blob was deleted. It returns null if the blob has not been deleted. </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the time when the blob was deleted. </p>
  syntax: public Date getDeletedTime()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getEtag()
  name: getEtag()
  nameWithType: BlobProperties.getEtag()
  returns:
    description: <p>A <code>String</code> which represents the ETag value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the ETag value for the blob. </p>

    <p>The ETag value is a unique identifier that is updated when a write operation is performed against the container. It may be used to perform operations conditionally, providing concurrency control and improved efficiency. </p>

    <p>The <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition(final String)" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfMatchCondition(String)"></xref> and <xref uid="com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition(final String)" data-throw-if-not-resolved="false" data-raw-source="AccessCondition#generateIfNoneMatchCondition(String)"></xref> methods take an ETag value and return an <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that may be specified on the request.</p>

    <p></p>
  syntax: public String getEtag()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getEtag()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getLastModified()
  name: getLastModified()
  nameWithType: BlobProperties.getLastModified()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which represents the last modified time. </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the last modified time for the blob.</p>

    <p></p>
  syntax: public Date getLastModified()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getLastModified()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration()
  name: getLeaseDuration()
  nameWithType: BlobProperties.getLeaseDuration()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.LeaseDuration" data-throw-if-not-resolved="false" data-raw-source="LeaseDuration"></xref> object which represents the lease duration. </p>
    type: <xref href="com.microsoft.azure.storage.blob.LeaseDuration?alt=com.microsoft.azure.storage.blob.LeaseDuration&text=LeaseDuration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the lease duration for the blob.</p>

    <p></p>
  syntax: public LeaseDuration getLeaseDuration()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getLeaseState()
  name: getLeaseState()
  nameWithType: BlobProperties.getLeaseState()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.LeaseState" data-throw-if-not-resolved="false" data-raw-source="LeaseState"></xref> object which represents the lease state. </p>
    type: <xref href="com.microsoft.azure.storage.blob.LeaseState?alt=com.microsoft.azure.storage.blob.LeaseState&text=LeaseState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the lease state for the blob.</p>

    <p></p>
  syntax: public LeaseState getLeaseState()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getLeaseState()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus()
  name: getLeaseStatus()
  nameWithType: BlobProperties.getLeaseStatus()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.LeaseStatus" data-throw-if-not-resolved="false" data-raw-source="LeaseStatus"></xref> object which represents the lease status. </p>
    type: <xref href="com.microsoft.azure.storage.blob.LeaseStatus?alt=com.microsoft.azure.storage.blob.LeaseStatus&text=LeaseStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the lease status for the blob.</p>

    <p></p>
  syntax: public LeaseStatus getLeaseStatus()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getLength()
  name: getLength()
  nameWithType: BlobProperties.getLength()
  returns:
    description: <p>A <code>long</code> which represents the length of the blob. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the size, in bytes, of the blob.</p>

    <p></p>
  syntax: public long getLength()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getLength()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber()
  name: getPageBlobSequenceNumber()
  nameWithType: BlobProperties.getPageBlobSequenceNumber()
  returns:
    description: <p>A <code>Long</code> containing the page blob's current sequence number. </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>If the blob is a page blob, gets the page blob's current sequence number.</p>

    <p></p>
  syntax: public Long getPageBlobSequenceNumber()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier()
  name: getPremiumPageBlobTier()
  nameWithType: BlobProperties.getPremiumPageBlobTier()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob or <code>null</code> if the tier has not been set. </p>
    type: <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  summary: <p>If using a premium account and the blob is a page blob, gets the tier of the blob. </p>
  syntax: public PremiumPageBlobTier getPremiumPageBlobTier()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus()
  name: getRehydrationStatus()
  nameWithType: BlobProperties.getRehydrationStatus()
  returns:
    type: <xref href="com.microsoft.azure.storage.blob.RehydrationStatus?alt=com.microsoft.azure.storage.blob.RehydrationStatus&text=RehydrationStatus" data-throw-if-not-resolved="False"/>
  summary: <p>The rehydration status if the blob is being rehydrated and the tier of the blob once the rehydration from archive has completed. </p>
  syntax: public RehydrationStatus getRehydrationStatus()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays()
  name: getRemainingRetentionDays()
  nameWithType: BlobProperties.getRemainingRetentionDays()
  returns:
    description: <p>A <code>Integer</code> value that represents the number of days that the deleted blob will be kept by the service. </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the number of days that the deleted blob will be kept by the service. </p>
  syntax: public Integer getRemainingRetentionDays()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier()
  name: getStandardBlobTier()
  nameWithType: BlobProperties.getStandardBlobTier()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object which represents the tier of the blob or <code>null</code> if the tier has not been set. </p>
    type: <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  summary: <p>If using a standard account and the blob is a block blob, gets the tier of the blob. </p>
  syntax: public StandardBlobTier getStandardBlobTier()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime()
  name: getTierChangeTime()
  nameWithType: BlobProperties.getTierChangeTime()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which represents the last time the tier was changed. </p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a value indicating the last time the tier was changed on the blob.</p>

    <p></p>
  syntax: public Date getTierChangeTime()
  uid: com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred()
  name: isBlobTierInferred()
  nameWithType: BlobProperties.isBlobTierInferred()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.Boolean"></xref> object which represents if the blob tier was inferred. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a value indicating if the tier of the blob has been inferred.</p>

    <p></p>
  syntax: public Boolean isBlobTierInferred()
  uid: com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy()
  name: isIncrementalCopy()
  nameWithType: BlobProperties.isIncrementalCopy()
  returns:
    description: <p>A <code>boolean</code> which specifies if the blob is an incremental copy. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets if the blob is an incremental copy</p>

    <p></p>
  syntax: public boolean isIncrementalCopy()
  uid: com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted()
  name: isServerEncrypted()
  nameWithType: BlobProperties.isServerEncrypted()
  returns:
    description: <p>A <code>boolean</code> which specifies the blob's encryption status. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the blob's server-side encryption status;</p>

    <p></p>
  syntax: public boolean isServerEncrypted()
  uid: com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted()
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount(final Integer appendBlobCommittedBlockCount)
  name: setAppendBlobCommittedBlockCount(final Integer appendBlobCommittedBlockCount)
  nameWithType: BlobProperties.setAppendBlobCommittedBlockCount(final Integer appendBlobCommittedBlockCount)
  parameters:
  - description: <p>A <code>Integer</code> value that represents the number of committed blocks. </p>
    name: appendBlobCommittedBlockCount
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>If the blob is an append blob, sets the number of committed blocks.</p>

    <p></p>
  syntax: protected void setAppendBlobCommittedBlockCount(final Integer appendBlobCommittedBlockCount)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount(final Integer)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred(Boolean isBlobTierInferredTier)
  name: setBlobTierInferred(Boolean isBlobTierInferredTier)
  nameWithType: BlobProperties.setBlobTierInferred(Boolean isBlobTierInferredTier)
  parameters:
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.lang.Boolean"></xref> which specifies if the blob tier is inferred. </p>
    name: isBlobTierInferredTier
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Sets whether the blob tier is inferred. </p>
  syntax: protected void setBlobTierInferred(Boolean isBlobTierInferredTier)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred(Boolean)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setBlobType(final BlobType blobType)
  name: setBlobType(final BlobType blobType)
  nameWithType: BlobProperties.setBlobType(final BlobType blobType)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobType" data-throw-if-not-resolved="false" data-raw-source="BlobType"></xref> object which specifies the blob type to set. </p>
    name: blobType
    type: final <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the blob type.</p>

    <p></p>
  syntax: protected void setBlobType(final BlobType blobType)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setBlobType(final BlobType)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setCacheControl(final String cacheControl)
  name: setCacheControl(final String cacheControl)
  nameWithType: BlobProperties.setCacheControl(final String cacheControl)
  parameters:
  - description: <p>A <code>String</code> which specifies the cache control value to set. </p>
    name: cacheControl
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the cache control value for the blob.</p>

    <p></p>
  syntax: public void setCacheControl(final String cacheControl)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setCacheControl(final String)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition(final String contentDisposition)
  name: setContentDisposition(final String contentDisposition)
  nameWithType: BlobProperties.setContentDisposition(final String contentDisposition)
  parameters:
  - description: <p>A <code>String</code> which specifies the content disposition value to set. </p>
    name: contentDisposition
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content disposition value for the blob.</p>

    <p></p>
  syntax: public void setContentDisposition(final String contentDisposition)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition(final String)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding(final String contentEncoding)
  name: setContentEncoding(final String contentEncoding)
  nameWithType: BlobProperties.setContentEncoding(final String contentEncoding)
  parameters:
  - description: <p>A <code>String</code> which specifies the content encoding value to set. </p>
    name: contentEncoding
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content encoding value for the blob.</p>

    <p></p>
  syntax: public void setContentEncoding(final String contentEncoding)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding(final String)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage(final String contentLanguage)
  name: setContentLanguage(final String contentLanguage)
  nameWithType: BlobProperties.setContentLanguage(final String contentLanguage)
  parameters:
  - description: <p>A <code>String</code> which specifies the content language value to set. </p>
    name: contentLanguage
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content language for the blob.</p>

    <p></p>
  syntax: public void setContentLanguage(final String contentLanguage)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage(final String)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setContentMD5(final String contentMD5)
  name: setContentMD5(final String contentMD5)
  nameWithType: BlobProperties.setContentMD5(final String contentMD5)
  parameters:
  - description: <p>A <code>String</code> which specifies the content MD5 value to set. </p>
    name: contentMD5
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content MD5 value for the blob.</p>

    <p></p>
  syntax: public void setContentMD5(final String contentMD5)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setContentMD5(final String)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setContentType(final String contentType)
  name: setContentType(final String contentType)
  nameWithType: BlobProperties.setContentType(final String contentType)
  parameters:
  - description: <p>A <code>String</code> which specifies the content type value to set. </p>
    name: contentType
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content type value for the blob.</p>

    <p></p>
  syntax: public void setContentType(final String contentType)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setContentType(final String)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setCopyState(final CopyState copyState)
  name: setCopyState(final CopyState copyState)
  nameWithType: BlobProperties.setCopyState(final CopyState copyState)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.CopyState" data-throw-if-not-resolved="false" data-raw-source="CopyState"></xref> object which specifies the copy state value to set. </p>
    name: copyState
    type: final <xref href="com.microsoft.azure.storage.blob.CopyState?alt=com.microsoft.azure.storage.blob.CopyState&text=CopyState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the copy state value for the blob</p>

    <p></p>
  syntax: protected void setCopyState(final CopyState copyState)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setCopyState(final CopyState)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime(final Date createdTime)
  name: setCreatedTime(final Date createdTime)
  nameWithType: BlobProperties.setCreatedTime(final Date createdTime)
  parameters:
  - description: <p>A <code>Date</code> which represents the time when the blob was created. </p>
    name: createdTime
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the createdTime value for the blob</p>

    <p></p>
  syntax: protected void setCreatedTime(final Date createdTime)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime(final Date)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime(Date deletedTime)
  name: setDeletedTime(Date deletedTime)
  nameWithType: BlobProperties.setDeletedTime(Date deletedTime)
  parameters:
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which represents the time when the blob was deleted. </p>
    name: deletedTime
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the time when the blob was deleted. </p>
  syntax: protected void setDeletedTime(Date deletedTime)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime(Date)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setEtag(final String etag)
  name: setEtag(final String etag)
  nameWithType: BlobProperties.setEtag(final String etag)
  parameters:
  - description: <p>A <code>String</code> which specifies the ETag value to set. </p>
    name: etag
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the ETag value for the blob.</p>

    <p></p>
  syntax: protected void setEtag(final String etag)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setEtag(final String)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy(boolean isIncrementalCopy)
  name: setIncrementalCopy(boolean isIncrementalCopy)
  nameWithType: BlobProperties.setIncrementalCopy(boolean isIncrementalCopy)
  parameters:
  - description: <p>A <code>boolean</code> which specifies if the blob is an incremental copy. </p>
    name: isIncrementalCopy
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Sets whether the blob is an incremental copy. </p>
  syntax: protected void setIncrementalCopy(boolean isIncrementalCopy)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy(boolean)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setLastModified(final Date lastModified)
  name: setLastModified(final Date lastModified)
  nameWithType: BlobProperties.setLastModified(final Date lastModified)
  parameters:
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> object which specifies the last modified time to set. </p>
    name: lastModified
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the last modified time for the blob.</p>

    <p></p>
  syntax: protected void setLastModified(final Date lastModified)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setLastModified(final Date)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration(final LeaseDuration leaseDuration)
  name: setLeaseDuration(final LeaseDuration leaseDuration)
  nameWithType: BlobProperties.setLeaseDuration(final LeaseDuration leaseDuration)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.LeaseDuration" data-throw-if-not-resolved="false" data-raw-source="LeaseDuration"></xref> object which specifies the lease duration value to set. </p>
    name: leaseDuration
    type: final <xref href="com.microsoft.azure.storage.blob.LeaseDuration?alt=com.microsoft.azure.storage.blob.LeaseDuration&text=LeaseDuration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the lease duration for the blob.</p>

    <p></p>
  syntax: protected void setLeaseDuration(final LeaseDuration leaseDuration)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration(final LeaseDuration)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setLeaseState(final LeaseState leaseState)
  name: setLeaseState(final LeaseState leaseState)
  nameWithType: BlobProperties.setLeaseState(final LeaseState leaseState)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.LeaseState" data-throw-if-not-resolved="false" data-raw-source="LeaseState"></xref> object which specifies the lease state value to set. </p>
    name: leaseState
    type: final <xref href="com.microsoft.azure.storage.blob.LeaseState?alt=com.microsoft.azure.storage.blob.LeaseState&text=LeaseState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the lease state for the blob.</p>

    <p></p>
  syntax: protected void setLeaseState(final LeaseState leaseState)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setLeaseState(final LeaseState)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus(final LeaseStatus leaseStatus)
  name: setLeaseStatus(final LeaseStatus leaseStatus)
  nameWithType: BlobProperties.setLeaseStatus(final LeaseStatus leaseStatus)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.LeaseStatus" data-throw-if-not-resolved="false" data-raw-source="LeaseStatus"></xref> object which specifies the lease status value to set. </p>
    name: leaseStatus
    type: final <xref href="com.microsoft.azure.storage.blob.LeaseStatus?alt=com.microsoft.azure.storage.blob.LeaseStatus&text=LeaseStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the lease status for the blob.</p>

    <p></p>
  syntax: protected void setLeaseStatus(final LeaseStatus leaseStatus)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus(final LeaseStatus)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setLength(final long length)
  name: setLength(final long length)
  nameWithType: BlobProperties.setLength(final long length)
  parameters:
  - description: <p>A <code>long</code> which specifies the length to set. </p>
    name: length
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content length, in bytes, for the blob.</p>

    <p></p>
  syntax: protected void setLength(final long length)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setLength(final long)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber(final Long pageBlobSequenceNumber)
  name: setPageBlobSequenceNumber(final Long pageBlobSequenceNumber)
  nameWithType: BlobProperties.setPageBlobSequenceNumber(final Long pageBlobSequenceNumber)
  parameters:
  - description: <p>A long containing the blob's current sequence number. </p>
    name: pageBlobSequenceNumber
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>If the blob is a page blob, sets the blob's current sequence number.</p>

    <p></p>
  syntax: protected void setPageBlobSequenceNumber(final Long pageBlobSequenceNumber)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber(final Long)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)
  name: setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)
  nameWithType: BlobProperties.setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.PremiumPageBlobTier" data-throw-if-not-resolved="false" data-raw-source="PremiumPageBlobTier"></xref> object which represents the tier of the blob. </p>
    name: premiumPageBlobTier
    type: <xref href="com.microsoft.azure.storage.blob.PremiumPageBlobTier?alt=com.microsoft.azure.storage.blob.PremiumPageBlobTier&text=PremiumPageBlobTier" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the tier of the page blob. This is only supported for premium accounts. </p>
  syntax: protected void setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier(PremiumPageBlobTier)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus(RehydrationStatus rehydrationStatus)
  name: setRehydrationStatus(RehydrationStatus rehydrationStatus)
  nameWithType: BlobProperties.setRehydrationStatus(RehydrationStatus rehydrationStatus)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.RehydrationStatus" data-throw-if-not-resolved="false" data-raw-source="RehydrationStatus"></xref> which specifies the rehydration status of the blob. </p>
    name: rehydrationStatus
    type: <xref href="com.microsoft.azure.storage.blob.RehydrationStatus?alt=com.microsoft.azure.storage.blob.RehydrationStatus&text=RehydrationStatus" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the rehydration status of the blob. </p>
  syntax: protected void setRehydrationStatus(RehydrationStatus rehydrationStatus)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus(RehydrationStatus)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays(Integer remainingRetentionDays)
  name: setRemainingRetentionDays(Integer remainingRetentionDays)
  nameWithType: BlobProperties.setRemainingRetentionDays(Integer remainingRetentionDays)
  parameters:
  - description: <p>A <code>Integer</code> value that represents the number days that the deleted blob will be kept by the service. </p>
    name: remainingRetentionDays
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the number days that the deleted blob will be kept by the service. </p>
  syntax: protected void setRemainingRetentionDays(Integer remainingRetentionDays)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays(Integer)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted(boolean serverEncrypted)
  name: setServerEncrypted(boolean serverEncrypted)
  nameWithType: BlobProperties.setServerEncrypted(boolean serverEncrypted)
  parameters:
  - description: <p>A <code>boolean</code> which specifies the encryption status to set. </p>
    name: serverEncrypted
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the blob's server-side encryption status.</p>

    <p></p>
  syntax: protected void setServerEncrypted(boolean serverEncrypted)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted(boolean)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier(StandardBlobTier standardBlobTier)
  name: setStandardBlobTier(StandardBlobTier standardBlobTier)
  nameWithType: BlobProperties.setStandardBlobTier(StandardBlobTier standardBlobTier)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.StandardBlobTier" data-throw-if-not-resolved="false" data-raw-source="StandardBlobTier"></xref> object which represents the tier of the blob. </p>
    name: standardBlobTier
    type: <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the tier of the block blob. This is only supported for standard storage accounts. </p>
  syntax: protected void setStandardBlobTier(StandardBlobTier standardBlobTier)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier(StandardBlobTier)
- fullName: com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime(Date tierChangeTime)
  name: setTierChangeTime(Date tierChangeTime)
  nameWithType: BlobProperties.setTierChangeTime(Date tierChangeTime)
  parameters:
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.util.Date"></xref> which specifies the last time the tier was modified. </p>
    name: tierChangeTime
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the last time the tier was modified on the blob. </p>
  syntax: protected void setTierChangeTime(Date tierChangeTime)
  uid: com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime(Date)
nameWithType: BlobProperties
syntax: public class BlobProperties
type: class
uid: com.microsoft.azure.storage.blob.BlobProperties
fullName: com.microsoft.azure.storage.blob.BlobProperties
name: BlobProperties
package: com.microsoft.azure.storage.blob
summary: <p>Represents the system properties for a blob. </p>
metadata: {}
