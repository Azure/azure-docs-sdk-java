### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.acceptLanguage()
  name: acceptLanguage()
  nameWithType: BatchServiceClient.acceptLanguage()
  returns:
    description: <p>the acceptLanguage value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets The preferred language for the response..</p>

    <p></p>
  syntax: public String acceptLanguage()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.acceptLanguage()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.accounts()
  name: accounts()
  nameWithType: BatchServiceClient.accounts()
  returns:
    description: <p>the Accounts object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.Accounts?alt=com.microsoft.azure.batch.protocol.Accounts&text=Accounts" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Accounts object to access its operations. </p>
  syntax: public Accounts accounts()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.accounts()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.apiVersion()
  name: apiVersion()
  nameWithType: BatchServiceClient.apiVersion()
  returns:
    description: <p>the apiVersion value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Client API Version..</p>

    <p></p>
  syntax: public String apiVersion()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.apiVersion()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.applications()
  name: applications()
  nameWithType: BatchServiceClient.applications()
  returns:
    description: <p>the Applications object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.Applications?alt=com.microsoft.azure.batch.protocol.Applications&text=Applications" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Applications object to access its operations. </p>
  syntax: public Applications applications()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.applications()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.batchUrl()
  name: batchUrl()
  nameWithType: BatchServiceClient.batchUrl()
  returns:
    description: <p>the batchUrl value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets The base URL for all Azure Batch service requests..</p>

    <p></p>
  syntax: public String batchUrl()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.batchUrl()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.certificates()
  name: certificates()
  nameWithType: BatchServiceClient.certificates()
  returns:
    description: <p>the Certificates object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.Certificates?alt=com.microsoft.azure.batch.protocol.Certificates&text=Certificates" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Certificates object to access its operations. </p>
  syntax: public Certificates certificates()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.certificates()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.computeNodes()
  name: computeNodes()
  nameWithType: BatchServiceClient.computeNodes()
  returns:
    description: <p>the ComputeNodes object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.ComputeNodes?alt=com.microsoft.azure.batch.protocol.ComputeNodes&text=ComputeNodes" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the ComputeNodes object to access its operations. </p>
  syntax: public ComputeNodes computeNodes()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.computeNodes()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.files()
  name: files()
  nameWithType: BatchServiceClient.files()
  returns:
    description: <p>the Files object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.Files?alt=com.microsoft.azure.batch.protocol.Files&text=Files" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Files object to access its operations. </p>
  syntax: public Files files()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.files()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.generateClientRequestId()
  name: generateClientRequestId()
  nameWithType: BatchServiceClient.generateClientRequestId()
  returns:
    description: <p>the generateClientRequestId value. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax: public boolean generateClientRequestId()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.generateClientRequestId()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.getAzureClient()
  name: getAzureClient()
  nameWithType: BatchServiceClient.getAzureClient()
  returns:
    description: <p>the azure client; </p>
    type: <xref href="AzureClient?alt=AzureClient&text=AzureClient" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="AzureClient"></xref> used for long running operations. </p>
  syntax: public AzureClient getAzureClient()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.getAzureClient()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.jobs()
  name: jobs()
  nameWithType: BatchServiceClient.jobs()
  returns:
    description: <p>the Jobs object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.Jobs?alt=com.microsoft.azure.batch.protocol.Jobs&text=Jobs" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Jobs object to access its operations. </p>
  syntax: public Jobs jobs()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.jobs()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.jobSchedules()
  name: jobSchedules()
  nameWithType: BatchServiceClient.jobSchedules()
  returns:
    description: <p>the JobSchedules object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.JobSchedules?alt=com.microsoft.azure.batch.protocol.JobSchedules&text=JobSchedules" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the JobSchedules object to access its operations. </p>
  syntax: public JobSchedules jobSchedules()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.jobSchedules()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.longRunningOperationRetryTimeout()
  name: longRunningOperationRetryTimeout()
  nameWithType: BatchServiceClient.longRunningOperationRetryTimeout()
  returns:
    description: <p>the longRunningOperationRetryTimeout value. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets The retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax: public int longRunningOperationRetryTimeout()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.longRunningOperationRetryTimeout()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.pools()
  name: pools()
  nameWithType: BatchServiceClient.pools()
  returns:
    description: <p>the Pools object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.Pools?alt=com.microsoft.azure.batch.protocol.Pools&text=Pools" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Pools object to access its operations. </p>
  syntax: public Pools pools()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.pools()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.restClient()
  name: restClient()
  nameWithType: BatchServiceClient.restClient()
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RestClient"></xref> object. </p>
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the REST client.</p>

    <p></p>
  syntax: public RestClient restClient()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.restClient()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.tasks()
  name: tasks()
  nameWithType: BatchServiceClient.tasks()
  returns:
    description: <p>the Tasks object. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.Tasks?alt=com.microsoft.azure.batch.protocol.Tasks&text=Tasks" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the Tasks object to access its operations. </p>
  syntax: public Tasks tasks()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.tasks()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.userAgent()
  name: userAgent()
  nameWithType: BatchServiceClient.userAgent()
  returns:
    description: <p>the user agent string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the User-Agent header for the client.</p>

    <p></p>
  syntax: public String userAgent()
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.userAgent()
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.withAcceptLanguage(String acceptLanguage)
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: BatchServiceClient.withAcceptLanguage(String acceptLanguage)
  parameters:
  - description: <p>the acceptLanguage value. </p>
    name: acceptLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.batch.protocol.BatchServiceClient?alt=com.microsoft.azure.batch.protocol.BatchServiceClient&text=BatchServiceClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets The preferred language for the response..</p>

    <p></p>
  syntax: public BatchServiceClient withAcceptLanguage(String acceptLanguage)
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.withAcceptLanguage(String)
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.withBatchUrl(String batchUrl)
  name: withBatchUrl(String batchUrl)
  nameWithType: BatchServiceClient.withBatchUrl(String batchUrl)
  parameters:
  - description: <p>the batchUrl value. </p>
    name: batchUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.batch.protocol.BatchServiceClient?alt=com.microsoft.azure.batch.protocol.BatchServiceClient&text=BatchServiceClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets The base URL for all Azure Batch service requests..</p>

    <p></p>
  syntax: public BatchServiceClient withBatchUrl(String batchUrl)
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.withBatchUrl(String)
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.withGenerateClientRequestId(boolean generateClientRequestId)
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: BatchServiceClient.withGenerateClientRequestId(boolean generateClientRequestId)
  parameters:
  - description: <p>the generateClientRequestId value. </p>
    name: generateClientRequestId
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.batch.protocol.BatchServiceClient?alt=com.microsoft.azure.batch.protocol.BatchServiceClient&text=BatchServiceClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>

    <p></p>
  syntax: public BatchServiceClient withGenerateClientRequestId(boolean generateClientRequestId)
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.withGenerateClientRequestId(boolean)
- fullName: com.microsoft.azure.batch.protocol.BatchServiceClient.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: BatchServiceClient.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  parameters:
  - description: <p>the longRunningOperationRetryTimeout value. </p>
    name: longRunningOperationRetryTimeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the service client itself </p>
    type: <xref href="com.microsoft.azure.batch.protocol.BatchServiceClient?alt=com.microsoft.azure.batch.protocol.BatchServiceClient&text=BatchServiceClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets The retry timeout in seconds for Long Running Operations. Default value is 30..</p>

    <p></p>
  syntax: public BatchServiceClient withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  uid: com.microsoft.azure.batch.protocol.BatchServiceClient.withLongRunningOperationRetryTimeout(int)
nameWithType: BatchServiceClient
syntax: public interface BatchServiceClient
type: interface
uid: com.microsoft.azure.batch.protocol.BatchServiceClient
fullName: com.microsoft.azure.batch.protocol.BatchServiceClient
name: BatchServiceClient
package: com.microsoft.azure.batch.protocol
summary: <p>The interface for BatchServiceClient class. </p>
metadata: {}
