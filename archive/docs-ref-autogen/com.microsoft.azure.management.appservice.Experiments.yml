### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.appservice.Experiments.rampUpRules()
  name: rampUpRules()
  nameWithType: Experiments.rampUpRules()
  returns:
    description: <p>the rampUpRules value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.appservice.RampUpRule?alt=com.microsoft.azure.management.appservice.RampUpRule&text=RampUpRule" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the rampUpRules value.</p>

    <p></p>
  syntax: public List<RampUpRule> rampUpRules()
  uid: com.microsoft.azure.management.appservice.Experiments.rampUpRules()
- fullName: com.microsoft.azure.management.appservice.Experiments.withRampUpRules(List<RampUpRule> rampUpRules)
  name: withRampUpRules(List<RampUpRule> rampUpRules)
  nameWithType: Experiments.withRampUpRules(List<RampUpRule> rampUpRules)
  parameters:
  - description: <p>the rampUpRules value to set </p>
    name: rampUpRules
    type: List&lt;<xref href="com.microsoft.azure.management.appservice.RampUpRule?alt=com.microsoft.azure.management.appservice.RampUpRule&text=RampUpRule" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Experiments object itself. </p>
    type: <xref href="com.microsoft.azure.management.appservice.Experiments?alt=com.microsoft.azure.management.appservice.Experiments&text=Experiments" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the rampUpRules value.</p>

    <p></p>
  syntax: public Experiments withRampUpRules(List<RampUpRule> rampUpRules)
  uid: com.microsoft.azure.management.appservice.Experiments.withRampUpRules(List<RampUpRule>)
nameWithType: Experiments
syntax: public class Experiments
type: class
uid: com.microsoft.azure.management.appservice.Experiments
fullName: com.microsoft.azure.management.appservice.Experiments
name: Experiments
package: com.microsoft.azure.management.appservice
summary: <p>Routing rules in production experiments. </p>
metadata: {}
