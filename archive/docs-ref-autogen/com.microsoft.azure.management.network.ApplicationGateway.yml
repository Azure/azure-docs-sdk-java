### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasSubnet.networkId()
- com.microsoft.azure.management.network.model.HasPrivateIPAddress.privateIPAddress()
- com.microsoft.azure.management.network.model.HasPrivateIPAddress.privateIPAllocationMethod()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasSubnet.subnetName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.network.ApplicationGateway.backendHttpConfigurations()
  name: backendHttpConfigurations()
  nameWithType: ApplicationGateway.backendHttpConfigurations()
  returns:
    description: <p>backend HTTP configurations of this application gateway, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration&text=ApplicationGatewayBackendHttpConfiguration" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayBackendHttpConfiguration> backendHttpConfigurations()
  uid: com.microsoft.azure.management.network.ApplicationGateway.backendHttpConfigurations()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.backends()
  name: backends()
  nameWithType: ApplicationGateway.backends()
  returns:
    description: <p>backend address pools of this application gateway, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayBackend?alt=com.microsoft.azure.management.network.ApplicationGatewayBackend&text=ApplicationGatewayBackend" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayBackend> backends()
  uid: com.microsoft.azure.management.network.ApplicationGateway.backends()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.defaultIPConfiguration()
  name: defaultIPConfiguration()
  nameWithType: ApplicationGateway.defaultIPConfiguration()
  returns:
    description: <p>the existing IP configurations if only one exists, else null </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayIPConfiguration?alt=com.microsoft.azure.management.network.ApplicationGatewayIPConfiguration&text=ApplicationGatewayIPConfiguration" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGatewayIPConfiguration defaultIPConfiguration()
  uid: com.microsoft.azure.management.network.ApplicationGateway.defaultIPConfiguration()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.defaultPrivateFrontend()
  name: defaultPrivateFrontend()
  nameWithType: ApplicationGateway.defaultPrivateFrontend()
  returns:
    description: <p>the frontend IP configuration associated with a private IP address, if any, that frontend listeners and request routing rules can reference implicitly </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayFrontend?alt=com.microsoft.azure.management.network.ApplicationGatewayFrontend&text=ApplicationGatewayFrontend" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGatewayFrontend defaultPrivateFrontend()
  uid: com.microsoft.azure.management.network.ApplicationGateway.defaultPrivateFrontend()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.defaultPublicFrontend()
  name: defaultPublicFrontend()
  nameWithType: ApplicationGateway.defaultPublicFrontend()
  returns:
    description: <p>the frontend IP configuration associated with a public IP address, if any, that frontend listeners and request routing rules can reference implicitly </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayFrontend?alt=com.microsoft.azure.management.network.ApplicationGatewayFrontend&text=ApplicationGatewayFrontend" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGatewayFrontend defaultPublicFrontend()
  uid: com.microsoft.azure.management.network.ApplicationGateway.defaultPublicFrontend()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.disabledSslProtocols()
  name: disabledSslProtocols()
  nameWithType: ApplicationGateway.disabledSslProtocols()
  returns:
    description: <p>disabled SSL protocols </p>
    type: Collection&lt;<xref href="com.microsoft.azure.management.network.ApplicationGatewaySslProtocol?alt=com.microsoft.azure.management.network.ApplicationGatewaySslProtocol&text=ApplicationGatewaySslProtocol" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Collection<ApplicationGatewaySslProtocol> disabledSslProtocols()
  uid: com.microsoft.azure.management.network.ApplicationGateway.disabledSslProtocols()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.frontendPortNameFromNumber(int portNumber)
  name: frontendPortNameFromNumber(int portNumber)
  nameWithType: ApplicationGateway.frontendPortNameFromNumber(int portNumber)
  parameters:
  - description: <p>a port number </p>
    name: portNumber
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the existing port name for that port number, or null if none found </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Returns the name of the existing port, if any, that is associated with the specified port number. </p>
  syntax: public String frontendPortNameFromNumber(int portNumber)
  uid: com.microsoft.azure.management.network.ApplicationGateway.frontendPortNameFromNumber(int)
- fullName: com.microsoft.azure.management.network.ApplicationGateway.frontendPorts()
  name: frontendPorts()
  nameWithType: ApplicationGateway.frontendPorts()
  returns:
    description: <p>named frontend ports of this application gateway, indexed by name </p>
    type: <xref href="Map%3CString%2C+Integer%3E?alt=Map%3CString%2C+Integer%3E&text=Map%3CString%2C+Integer%3E" data-throw-if-not-resolved="False"/>
  syntax: public Map<String, Integer> frontendPorts()
  uid: com.microsoft.azure.management.network.ApplicationGateway.frontendPorts()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.frontends()
  name: frontends()
  nameWithType: ApplicationGateway.frontends()
  returns:
    description: <p>frontend IP configurations, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayFrontend?alt=com.microsoft.azure.management.network.ApplicationGatewayFrontend&text=ApplicationGatewayFrontend" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayFrontend> frontends()
  uid: com.microsoft.azure.management.network.ApplicationGateway.frontends()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.instanceCount()
  name: instanceCount()
  nameWithType: ApplicationGateway.instanceCount()
  returns:
    description: <p>number of instances </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int instanceCount()
  uid: com.microsoft.azure.management.network.ApplicationGateway.instanceCount()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.ipConfigurations()
  name: ipConfigurations()
  nameWithType: ApplicationGateway.ipConfigurations()
  returns:
    description: <p>IP configurations of this application gateway, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayIPConfiguration?alt=com.microsoft.azure.management.network.ApplicationGatewayIPConfiguration&text=ApplicationGatewayIPConfiguration" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayIPConfiguration> ipConfigurations()
  uid: com.microsoft.azure.management.network.ApplicationGateway.ipConfigurations()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.isPrivate()
  name: isPrivate()
  nameWithType: ApplicationGateway.isPrivate()
  returns:
    description: <p>true if the application gateway has at least one internally load balanced frontend accessible within the virtual network </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isPrivate()
  uid: com.microsoft.azure.management.network.ApplicationGateway.isPrivate()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.isPublic()
  name: isPublic()
  nameWithType: ApplicationGateway.isPublic()
  returns:
    description: <p>true if the application gateway has at least one Internet-facing frontend </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isPublic()
  uid: com.microsoft.azure.management.network.ApplicationGateway.isPublic()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.listenerByPortNumber(int portNumber)
  name: listenerByPortNumber(int portNumber)
  nameWithType: ApplicationGateway.listenerByPortNumber(int portNumber)
  parameters:
  - description: <p>a used port number </p>
    name: portNumber
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a front end listener, or null if none found </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayListener?alt=com.microsoft.azure.management.network.ApplicationGatewayListener&text=ApplicationGatewayListener" data-throw-if-not-resolved="False"/>
  summary: <p>Finds a front end listener associated with the specified front end port number, if any. </p>
  syntax: public ApplicationGatewayListener listenerByPortNumber(int portNumber)
  uid: com.microsoft.azure.management.network.ApplicationGateway.listenerByPortNumber(int)
- fullName: com.microsoft.azure.management.network.ApplicationGateway.listeners()
  name: listeners()
  nameWithType: ApplicationGateway.listeners()
  returns:
    description: <p>frontend listeners, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayListener?alt=com.microsoft.azure.management.network.ApplicationGatewayListener&text=ApplicationGatewayListener" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayListener> listeners()
  uid: com.microsoft.azure.management.network.ApplicationGateway.listeners()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.operationalState()
  name: operationalState()
  nameWithType: ApplicationGateway.operationalState()
  returns:
    description: <p>the operational state of the application gateway </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayOperationalState?alt=com.microsoft.azure.management.network.ApplicationGatewayOperationalState&text=ApplicationGatewayOperationalState" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGatewayOperationalState operationalState()
  uid: com.microsoft.azure.management.network.ApplicationGateway.operationalState()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.privateFrontends()
  name: privateFrontends()
  nameWithType: ApplicationGateway.privateFrontends()
  returns:
    description: <p>frontend IP configurations with a private IP address within a subnet, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayFrontend?alt=com.microsoft.azure.management.network.ApplicationGatewayFrontend&text=ApplicationGatewayFrontend" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayFrontend> privateFrontends()
  uid: com.microsoft.azure.management.network.ApplicationGateway.privateFrontends()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.probes()
  name: probes()
  nameWithType: ApplicationGateway.probes()
  returns:
    description: <p>probes of this application gateway, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayProbe?alt=com.microsoft.azure.management.network.ApplicationGatewayProbe&text=ApplicationGatewayProbe" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayProbe> probes()
  uid: com.microsoft.azure.management.network.ApplicationGateway.probes()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.publicFrontends()
  name: publicFrontends()
  nameWithType: ApplicationGateway.publicFrontends()
  returns:
    description: <p>frontend IP configurations with a public IP address, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayFrontend?alt=com.microsoft.azure.management.network.ApplicationGatewayFrontend&text=ApplicationGatewayFrontend" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayFrontend> publicFrontends()
  uid: com.microsoft.azure.management.network.ApplicationGateway.publicFrontends()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.requestRoutingRules()
  name: requestRoutingRules()
  nameWithType: ApplicationGateway.requestRoutingRules()
  returns:
    description: <p>request routing rules, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule?alt=com.microsoft.azure.management.network.ApplicationGatewayRequestRoutingRule&text=ApplicationGatewayRequestRoutingRule" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewayRequestRoutingRule> requestRoutingRules()
  uid: com.microsoft.azure.management.network.ApplicationGateway.requestRoutingRules()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.size()
  name: size()
  nameWithType: ApplicationGateway.size()
  returns:
    description: <p>the size of the application gateway </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewaySkuName?alt=com.microsoft.azure.management.network.ApplicationGatewaySkuName&text=ApplicationGatewaySkuName" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGatewaySkuName size()
  uid: com.microsoft.azure.management.network.ApplicationGateway.size()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.sku()
  name: sku()
  nameWithType: ApplicationGateway.sku()
  returns:
    description: <p>the SKU of this application gateway </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewaySku?alt=com.microsoft.azure.management.network.ApplicationGatewaySku&text=ApplicationGatewaySku" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGatewaySku sku()
  uid: com.microsoft.azure.management.network.ApplicationGateway.sku()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.sslCertificates()
  name: sslCertificates()
  nameWithType: ApplicationGateway.sslCertificates()
  returns:
    description: <p>SSL certificates, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.network.ApplicationGatewaySslCertificate?alt=com.microsoft.azure.management.network.ApplicationGatewaySslCertificate&text=ApplicationGatewaySslCertificate" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, ApplicationGatewaySslCertificate> sslCertificates()
  uid: com.microsoft.azure.management.network.ApplicationGateway.sslCertificates()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.start()
  name: start()
  nameWithType: ApplicationGateway.start()
  summary: <p>Starts the application gateway. </p>
  syntax: public void start()
  uid: com.microsoft.azure.management.network.ApplicationGateway.start()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.startAsync()
  name: startAsync()
  nameWithType: ApplicationGateway.startAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: <p>Starts the application gateway asynchronously. </p>
  syntax: public Completable startAsync()
  uid: com.microsoft.azure.management.network.ApplicationGateway.startAsync()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.stop()
  name: stop()
  nameWithType: ApplicationGateway.stop()
  summary: <p>Stops the application gateway. </p>
  syntax: public void stop()
  uid: com.microsoft.azure.management.network.ApplicationGateway.stop()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.stopAsync()
  name: stopAsync()
  nameWithType: ApplicationGateway.stopAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: <p>Stops the application gateway asynchronously. </p>
  syntax: public Completable stopAsync()
  uid: com.microsoft.azure.management.network.ApplicationGateway.stopAsync()
- fullName: com.microsoft.azure.management.network.ApplicationGateway.tier()
  name: tier()
  nameWithType: ApplicationGateway.tier()
  returns:
    description: <p>the tier of the application gateway </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayTier?alt=com.microsoft.azure.management.network.ApplicationGatewayTier&text=ApplicationGatewayTier" data-throw-if-not-resolved="False"/>
  syntax: public ApplicationGatewayTier tier()
  uid: com.microsoft.azure.management.network.ApplicationGateway.tier()
nameWithType: ApplicationGateway
syntax: public interface ApplicationGateway extends GroupableResource<NetworkManager, ApplicationGatewayInner>,Refreshable<ApplicationGateway>,Updatable<ApplicationGateway.Update>,HasSubnet,HasPrivateIPAddress
type: interface
uid: com.microsoft.azure.management.network.ApplicationGateway
fullName: com.microsoft.azure.management.network.ApplicationGateway
name: ApplicationGateway
package: com.microsoft.azure.management.network
summary: <p>Entry point for application gateway management API in Azure. </p>
metadata: {}
