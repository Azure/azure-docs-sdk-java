### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.WorkspacesInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  name: WorkspacesInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  nameWithType: WorkspacesInner.WorkspacesInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl?alt=com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl&text=BatchAIManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of WorkspacesInner.</p>

    <p></p>
  syntax: public WorkspacesInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.WorkspacesInner(Retrofit,BatchAIManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet%3CInnerT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String,ServiceCallback<InnerT>)
methods:
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreate(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  name: beginCreate(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  nameWithType: WorkspacesInner.beginCreate(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the WorkspaceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public WorkspaceInner beginCreate(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreate(String,String,WorkspaceCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  nameWithType: WorkspacesInner.beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public Observable<WorkspaceInner> beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreateAsync(String,String,WorkspaceCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<WorkspaceInner> beginCreateAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreateAsync(String,String,WorkspaceCreateParameters,final ServiceCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  name: beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  nameWithType: WorkspacesInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<WorkspaceInner>> beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginCreateWithServiceResponseAsync(String,String,WorkspaceCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDelete(String resourceGroupName, String workspaceName)
  name: beginDelete(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.beginDelete(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDelete(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDeleteAsync(String resourceGroupName, String workspaceName)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.beginDeleteAsync(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDeleteAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDeleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: WorkspacesInner.beginDeleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDeleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.beginDeleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.create(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  name: create(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  nameWithType: WorkspacesInner.create(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the WorkspaceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public WorkspaceInner create(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.create(String,String,WorkspaceCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  name: createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  nameWithType: WorkspacesInner.createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public Observable<WorkspaceInner> createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.createAsync(String,String,WorkspaceCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  name: createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<WorkspaceInner> createAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters, final ServiceCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.createAsync(String,String,WorkspaceCreateParameters,final ServiceCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  name: createWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  nameWithType: WorkspacesInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Workspace creation parameters. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.WorkspaceCreateParameters?alt=com.microsoft.azure.management.batchai.WorkspaceCreateParameters&text=WorkspaceCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<WorkspaceInner>> createWithServiceResponseAsync(String resourceGroupName, String workspaceName, WorkspaceCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.createWithServiceResponseAsync(String,String,WorkspaceCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.delete(String resourceGroupName, String workspaceName)
  name: delete(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.delete(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.delete(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.deleteAsync(String resourceGroupName, String workspaceName)
  name: deleteAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.deleteAsync(String resourceGroupName, String workspaceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.deleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  nameWithType: WorkspacesInner.deleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String workspaceName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroup(String resourceGroupName, String workspaceName)
  name: getByResourceGroup(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.getByResourceGroup(String resourceGroupName, String workspaceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroup(String,String)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the WorkspaceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about a Workspace.</p>

    <p></p>
  syntax: public WorkspaceInner getByResourceGroup(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroupAsync(String resourceGroupName, String workspaceName)
  name: getByResourceGroupAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.getByResourceGroupAsync(String resourceGroupName, String workspaceName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a Workspace.</p>

    <p></p>
  syntax: public Observable<WorkspaceInner> getByResourceGroupAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroupAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  name: getByResourceGroupAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.getByResourceGroupAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<WorkspaceInner> getByResourceGroupAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroupAsync(String,String,final ServiceCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  name: getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about a Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<WorkspaceInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.getByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.list()
  name: list()
  nameWithType: WorkspacesInner.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.list()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public PagedList<WorkspaceInner> list()
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.list()
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.list(final WorkspacesListOptions workspacesListOptions)
  name: list(final WorkspacesListOptions workspacesListOptions)
  nameWithType: WorkspacesInner.list(final WorkspacesListOptions workspacesListOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListOptions&text=WorkspacesListOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public PagedList<WorkspaceInner> list(final WorkspacesListOptions workspacesListOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.list(final WorkspacesListOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync()
  name: listAsync()
  nameWithType: WorkspacesInner.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public Observable<Page<WorkspaceInner>> listAsync()
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync()
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync(final ListOperationCallback<WorkspaceInner> serviceCallback)
  name: listAsync(final ListOperationCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.listAsync(final ListOperationCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public ServiceFuture<List<WorkspaceInner>> listAsync(final ListOperationCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync(final ListOperationCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync(final WorkspacesListOptions workspacesListOptions)
  name: listAsync(final WorkspacesListOptions workspacesListOptions)
  nameWithType: WorkspacesInner.listAsync(final WorkspacesListOptions workspacesListOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListOptions&text=WorkspacesListOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public Observable<Page<WorkspaceInner>> listAsync(final WorkspacesListOptions workspacesListOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync(final WorkspacesListOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync(final WorkspacesListOptions workspacesListOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  name: listAsync(final WorkspacesListOptions workspacesListOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.listAsync(final WorkspacesListOptions workspacesListOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListOptions&text=WorkspacesListOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public ServiceFuture<List<WorkspaceInner>> listAsync(final WorkspacesListOptions workspacesListOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listAsync(final WorkspacesListOptions,final ListOperationCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroup(final String resourceGroupName)
  name: listByResourceGroup(final String resourceGroupName)
  nameWithType: WorkspacesInner.listByResourceGroup(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroup(String)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public PagedList<WorkspaceInner> listByResourceGroup(final String resourceGroupName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroup(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroup(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  name: listByResourceGroup(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  nameWithType: WorkspacesInner.listByResourceGroup(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListByResourceGroupOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions&text=WorkspacesListByResourceGroupOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public PagedList<WorkspaceInner> listByResourceGroup(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroup(final String,final WorkspacesListByResourceGroupOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName)
  name: listByResourceGroupAsync(final String resourceGroupName)
  nameWithType: WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroupAsync(String)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public Observable<Page<WorkspaceInner>> listByResourceGroupAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<WorkspaceInner> serviceCallback)
  name: listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<WorkspaceInner>> listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String,final ListOperationCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  name: listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  nameWithType: WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListByResourceGroupOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions&text=WorkspacesListByResourceGroupOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public Observable<Page<WorkspaceInner>> listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String,final WorkspacesListByResourceGroupOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  name: listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListByResourceGroupOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions&text=WorkspacesListByResourceGroupOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<WorkspaceInner>> listByResourceGroupAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions, final ListOperationCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupAsync(final String,final WorkspacesListByResourceGroupOptions,final ListOperationCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNext(final String nextPageLink)
  name: listByResourceGroupNext(final String nextPageLink)
  nameWithType: WorkspacesInner.listByResourceGroupNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public PagedList<WorkspaceInner> listByResourceGroupNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNext(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextAsync(final String nextPageLink)
  name: listByResourceGroupNextAsync(final String nextPageLink)
  nameWithType: WorkspacesInner.listByResourceGroupNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public Observable<Page<WorkspaceInner>> listByResourceGroupNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  name: listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<WorkspaceInner>> listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextAsync(final String,final ServiceFuture<List<WorkspaceInner>>,final ListOperationCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  name: listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  nameWithType: WorkspacesInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p>ServiceResponse&lt;PageImpl&lt;WorkspaceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  name: listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: WorkspacesInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  name: listByResourceGroupSinglePageAsync(final String resourceGroupName)
  nameWithType: WorkspacesInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listByResourceGroupSinglePageAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupSinglePageAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  name: listByResourceGroupSinglePageAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  nameWithType: WorkspacesInner.listByResourceGroupSinglePageAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. ServiceResponse&lt;PageImpl&lt;WorkspaceInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListByResourceGroupOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions&text=WorkspacesListByResourceGroupOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p>ServiceResponse&lt;PageImpl&lt;WorkspaceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listByResourceGroupSinglePageAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupSinglePageAsync(final String,final WorkspacesListByResourceGroupOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  name: listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  nameWithType: WorkspacesInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  name: listByResourceGroupWithServiceResponseAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  nameWithType: WorkspacesInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListByResourceGroupOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListByResourceGroupOptions&text=WorkspacesListByResourceGroupOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces within the specified resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listByResourceGroupWithServiceResponseAsync(final String resourceGroupName, final WorkspacesListByResourceGroupOptions workspacesListByResourceGroupOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listByResourceGroupWithServiceResponseAsync(final String,final WorkspacesListByResourceGroupOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNext(final String nextPageLink)
  name: listNext(final String nextPageLink)
  nameWithType: WorkspacesInner.listNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public PagedList<WorkspaceInner> listNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNext(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextAsync(final String nextPageLink)
  name: listNextAsync(final String nextPageLink)
  nameWithType: WorkspacesInner.listNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public Observable<Page<WorkspaceInner>> listNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public ServiceFuture<List<WorkspaceInner>> listNextAsync(final String nextPageLink, final ServiceFuture<List<WorkspaceInner>> serviceFuture, final ListOperationCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextAsync(final String,final ServiceFuture<List<WorkspaceInner>>,final ListOperationCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextSinglePageAsync(final String nextPageLink)
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: WorkspacesInner.listNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p>ServiceResponse&lt;PageImpl&lt;WorkspaceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextWithServiceResponseAsync(final String nextPageLink)
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: WorkspacesInner.listNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listSinglePageAsync()
  name: listSinglePageAsync()
  nameWithType: WorkspacesInner.listSinglePageAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listSinglePageAsync()
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listSinglePageAsync()
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listSinglePageAsync(final WorkspacesListOptions workspacesListOptions)
  name: listSinglePageAsync(final WorkspacesListOptions workspacesListOptions)
  nameWithType: WorkspacesInner.listSinglePageAsync(final WorkspacesListOptions workspacesListOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListOptions&text=WorkspacesListOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;WorkspaceInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p>ServiceResponse&lt;PageImpl&lt;WorkspaceInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listSinglePageAsync(final WorkspacesListOptions workspacesListOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listSinglePageAsync(final WorkspacesListOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: WorkspacesInner.listWithServiceResponseAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listWithServiceResponseAsync()
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listWithServiceResponseAsync(final WorkspacesListOptions workspacesListOptions)
  name: listWithServiceResponseAsync(final WorkspacesListOptions workspacesListOptions)
  nameWithType: WorkspacesInner.listWithServiceResponseAsync(final WorkspacesListOptions workspacesListOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: workspacesListOptions
    type: final <xref href="com.microsoft.azure.management.batchai.WorkspacesListOptions?alt=com.microsoft.azure.management.batchai.WorkspacesListOptions&text=WorkspacesListOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;WorkspaceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of Workspaces associated with the given subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<WorkspaceInner>>> listWithServiceResponseAsync(final WorkspacesListOptions workspacesListOptions)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.listWithServiceResponseAsync(final WorkspacesListOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.update(String resourceGroupName, String workspaceName)
  name: update(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.update(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the WorkspaceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public WorkspaceInner update(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.update(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.update(String resourceGroupName, String workspaceName, Map<String, String> tags)
  name: update(String resourceGroupName, String workspaceName, Map<String, String> tags)
  nameWithType: WorkspacesInner.update(String resourceGroupName, String workspaceName, Map<String, String> tags)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Tags. The user specified tags associated with the Workspace. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the WorkspaceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public WorkspaceInner update(String resourceGroupName, String workspaceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.update(String,String,Map<String, String>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName)
  name: updateAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public Observable<WorkspaceInner> updateAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<WorkspaceInner> updateAsync(String resourceGroupName, String workspaceName, final ServiceCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String,String,final ServiceCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  name: updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  nameWithType: WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Tags. The user specified tags associated with the Workspace. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public Observable<WorkspaceInner> updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String,String,Map<String, String>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags, final ServiceCallback<WorkspaceInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags, final ServiceCallback<WorkspaceInner> serviceCallback)
  nameWithType: WorkspacesInner.updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags, final ServiceCallback<WorkspaceInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Tags. The user specified tags associated with the Workspace. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public ServiceFuture<WorkspaceInner> updateAsync(String resourceGroupName, String workspaceName, Map<String, String> tags, final ServiceCallback<WorkspaceInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateAsync(String,String,Map<String, String>,final ServiceCallback<WorkspaceInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  name: updateWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  nameWithType: WorkspacesInner.updateWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<WorkspaceInner>> updateWithServiceResponseAsync(String resourceGroupName, String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateWithServiceResponseAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  name: updateWithServiceResponseAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  nameWithType: WorkspacesInner.updateWithServiceResponseAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Tags. The user specified tags associated with the Workspace. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the WorkspaceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.WorkspaceInner?alt=com.microsoft.azure.management.batchai.implementation.WorkspaceInner&text=WorkspaceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates properties of a Workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<WorkspaceInner>> updateWithServiceResponseAsync(String resourceGroupName, String workspaceName, Map<String, String> tags)
  uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner.updateWithServiceResponseAsync(String,String,Map<String, String>)
nameWithType: WorkspacesInner
syntax: public class WorkspacesInner implements InnerSupportsGet<WorkspaceInner>,InnerSupportsDelete<Void>,InnerSupportsListing<WorkspaceInner>
type: class
uid: com.microsoft.azure.management.batchai.implementation.WorkspacesInner
fullName: com.microsoft.azure.management.batchai.implementation.WorkspacesInner
name: WorkspacesInner
package: com.microsoft.azure.management.batchai.implementation
summary: <p>An instance of this class provides access to all the operations defined in Workspaces. </p>
metadata: {}
