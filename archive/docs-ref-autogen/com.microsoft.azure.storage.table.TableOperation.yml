### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.table.TableOperation.TableOperation()
  name: TableOperation()
  nameWithType: TableOperation.TableOperation()
  summary: <p>Nullary Default Constructor. </p>
  syntax: protected TableOperation()
  uid: com.microsoft.azure.storage.table.TableOperation.TableOperation()
- fullName: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType)
  name: TableOperation(final TableEntity entity, final TableOperationType opType)
  nameWithType: TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TableOperationType"></xref> enumeration value for the operation type. </p>
    name: opType
    type: <xref href="final+TableOperationType?alt=final+TableOperationType&text=final+TableOperationType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Constructs a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> with the specified table entity and operation type.</p>

    <p></p>
  syntax: protected TableOperation(final TableEntity entity, final TableOperationType opType)
  uid: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType)
- fullName: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
  name: TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
  nameWithType: TableOperation.TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TableOperationType"></xref> enumeration value for the operation type. </p>
    name: opType
    type: <xref href="final+TableOperationType?alt=final+TableOperationType&text=final+TableOperationType" data-throw-if-not-resolved="False"/>
  - description: <p>The boolean representing whether the message payload should be returned in the response. </p>
    name: echoContent
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Constructs a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> with the specified table entity and operation type.</p>

    <p></p>
  syntax: protected TableOperation(final TableEntity entity, final TableOperationType opType, final boolean echoContent)
  uid: com.microsoft.azure.storage.table.TableOperation.TableOperation(final TableEntity,final TableOperationType,final boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.table.TableOperation.delete(final TableEntity entity)
  name: delete(final TableEntity entity)
  nameWithType: TableOperation.delete(final TableEntity entity)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to delete the specified entity from Microsoft Azure storage. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the</p>

    <p></p>
  syntax: public static TableOperation delete(final TableEntity entity)
  uid: com.microsoft.azure.storage.table.TableOperation.delete(final TableEntity)
- fullName: com.microsoft.azure.storage.table.TableOperation.execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
  name: execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
  nameWithType: TableOperation.execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance specifying the Table service endpoint, storage account credentials, and any additional query parameters. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.table.CloudTableClient?alt=com.microsoft.azure.storage.table.CloudTableClient&text=CloudTableClient" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the name of the table. </p>
    name: tableName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> object that specifies execution options such as retry policy and timeout settings for the operation. </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object for tracking the current operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in the storage operation. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> which represents the results of executing the operation.</p>
    type: <xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Execute this table operation on the specified table, using the specified <xref uid="com.microsoft.azure.storage.table.TableRequestOptions" data-throw-if-not-resolved="false" data-raw-source="TableRequestOptions"></xref> and <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref>. </p>

    <p>This method will invoke the Storage Service REST API to execute this table operation, using the Table service endpoint and storage account credentials in the <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> object.</p>

    <p></p>
  syntax: protected TableResult execute(final CloudTableClient client, final String tableName, TableRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.table.TableOperation.execute(final CloudTableClient,final String,TableRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
  name: generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
  nameWithType: TableOperation.generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
  parameters:
  - description: <p>Pass <code>true</code> to use the specified <code>entryName</code> parameter, or <code>false</code> to use PartitionKey and RowKey values from the operation as the request identity. </p>
    name: isSingleIndexEntry
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>The entry name to use as the request identity if the <code>isSingleIndexEntry</code> parameter is <code>true</code>. </p>
    name: entryName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which represents the formatted request identity string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Generates the request identity, consisting of the specified entry name, or the PartitionKey and RowKey pair from the operation, to identify the operation target.</p>

    <p></p>
  syntax: protected String generateRequestIdentity(boolean isSingleIndexEntry, final String entryName)
  uid: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,final String)
- fullName: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(final String tableName)
  name: generateRequestIdentityWithTable(final String tableName)
  nameWithType: TableOperation.generateRequestIdentityWithTable(final String tableName)
  parameters:
  - description: <p>A <code>String</code> which specifies the name of the table. </p>
    name: tableName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> which represents the formatted request identity string for the specified table. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Generates the request identity string for the specified table. The request identity string combines the table name with the PartitionKey and RowKey from the operation to identify specific table entities. This request identity is already UrlEncoded.</p>

    <p></p>
  syntax: protected String generateRequestIdentityWithTable(final String tableName)
  uid: com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(final String)
- fullName: com.microsoft.azure.storage.table.TableOperation.getEchoContent()
  name: getEchoContent()
  nameWithType: TableOperation.getEchoContent()
  returns:
    description: >-
      <p>

        <code>true</code> if the message payload should be returned in the response; otherwise <code>false</code></p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the boolean representing whether the message payload should be returned in the response.</p>

    <p></p>
  syntax: protected boolean getEchoContent()
  uid: com.microsoft.azure.storage.table.TableOperation.getEchoContent()
- fullName: com.microsoft.azure.storage.table.TableOperation.getEntity()
  name: getEntity()
  nameWithType: TableOperation.getEntity()
  returns:
    description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> instance associated with this operation. </p>
    type: synchronized final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Gets the table entity associated with this operation.</p>

    <p></p>
  syntax: protected synchronized final TableEntity getEntity()
  uid: com.microsoft.azure.storage.table.TableOperation.getEntity()
- fullName: com.microsoft.azure.storage.table.TableOperation.getOperationType()
  name: getOperationType()
  nameWithType: TableOperation.getOperationType()
  returns:
    description: <p>the opType The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TableOperationType"></xref> instance associated with this operation. </p>
    type: <xref href="synchronized+final+TableOperationType?alt=synchronized+final+TableOperationType&text=synchronized+final+TableOperationType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Gets the operation type for this operation.</p>

    <p></p>
  syntax: protected synchronized final TableOperationType getOperationType()
  uid: com.microsoft.azure.storage.table.TableOperation.getOperationType()
- fullName: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity entity)
  name: insert(final TableEntity entity)
  nameWithType: TableOperation.insert(final TableEntity entity)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the specified entity into Microsoft Azure storage. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the</p>

    <p></p>
  syntax: public static TableOperation insert(final TableEntity entity)
  uid: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity)
- fullName: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity entity, boolean echoContent)
  name: insert(final TableEntity entity, boolean echoContent)
  nameWithType: TableOperation.insert(final TableEntity entity, boolean echoContent)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  - description: <p>The boolean representing whether the message payload should be returned in the response. </p>
    name: echoContent
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to insert the specified entity into Microsoft Azure storage. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the</p>

    <p></p>
  syntax: public static TableOperation insert(final TableEntity entity, boolean echoContent)
  uid: com.microsoft.azure.storage.table.TableOperation.insert(final TableEntity,boolean)
- fullName: com.microsoft.azure.storage.table.TableOperation.insertOrMerge(final TableEntity entity)
  name: insertOrMerge(final TableEntity entity)
  nameWithType: TableOperation.insertOrMerge(final TableEntity entity)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for inserting or merging the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to merge the specified entity into Microsoft Azure storage, or insert it if it does not exist. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the table name and the <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> as arguments.</p>

    <p></p>
  syntax: public static TableOperation insertOrMerge(final TableEntity entity)
  uid: com.microsoft.azure.storage.table.TableOperation.insertOrMerge(final TableEntity)
- fullName: com.microsoft.azure.storage.table.TableOperation.insertOrReplace(final TableEntity entity)
  name: insertOrReplace(final TableEntity entity)
  nameWithType: TableOperation.insertOrReplace(final TableEntity entity)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for inserting or replacing the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to replace the specified entity in Microsoft Azure storage, or insert it if it does not exist. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the table name and the <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> as arguments.</p>

    <p></p>
  syntax: public static TableOperation insertOrReplace(final TableEntity entity)
  uid: com.microsoft.azure.storage.table.TableOperation.insertOrReplace(final TableEntity)
- fullName: com.microsoft.azure.storage.table.TableOperation.merge(final TableEntity entity)
  name: merge(final TableEntity entity)
  nameWithType: TableOperation.merge(final TableEntity entity)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for merging the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to merge the specified table entity into Microsoft Azure storage. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the</p>

    <p></p>
  syntax: public static TableOperation merge(final TableEntity entity)
  uid: com.microsoft.azure.storage.table.TableOperation.merge(final TableEntity)
- fullName: com.microsoft.azure.storage.table.TableOperation.parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  name: parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  nameWithType: TableOperation.parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  parameters:
  - description: <p>An <code>InputStream</code> which specifies the response to an insert operation. </p>
    name: inStream
    type: <xref href="final+InputStream?alt=final+InputStream&text=final+InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the HTTP status code returned from the operation request. </p>
    name: httpStatusCode
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>The <code>String</code> which specifies the Etag returned with the operation response. </p>
    name: etagFromHeader
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  - name: options
    type: final <xref href="com.microsoft.azure.storage.table.TableRequestOptions?alt=com.microsoft.azure.storage.table.TableRequestOptions&text=TableRequestOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InstantiationException?alt=InstantiationException&text=InstantiationException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in object construction. </p>
  - type: <xref href="IllegalAccessException?alt=IllegalAccessException&text=IllegalAccessException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in reflection on an object type. </p>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs in the storage operation. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs while accessing the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="InputStream"></xref> with Json. </p>
  - type: <xref href="JsonParseException?alt=JsonParseException&text=JsonParseException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs while parsing the Json, if Json is used. </p>
  returns:
    description: <p>The <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> representing the result of the operation.</p>
    type: <xref href="com.microsoft.azure.storage.table.TableResult?alt=com.microsoft.azure.storage.table.TableResult&text=TableResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Parses the table operation response into a <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> to return.</p>

    <p></p>
  syntax: protected TableResult parseResponse(final InputStream inStream, final int httpStatusCode, String etagFromHeader, final OperationContext opContext, final TableRequestOptions options)
  uid: com.microsoft.azure.storage.table.TableOperation.parseResponse(final InputStream,final int,String,final OperationContext,final TableRequestOptions)
- fullName: com.microsoft.azure.storage.table.TableOperation.replace(final TableEntity entity)
  name: replace(final TableEntity entity)
  nameWithType: TableOperation.replace(final TableEntity entity)
  parameters:
  - description: <p>The object instance implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to associate with the operation. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for replacing the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to replace the specified table entity. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method.</p>

    <p></p>
  syntax: public static TableOperation replace(final TableEntity entity)
  uid: com.microsoft.azure.storage.table.TableOperation.replace(final TableEntity)
- fullName: com.microsoft.azure.storage.table.TableOperation.retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  name: retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  nameWithType: TableOperation.retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  parameters:
  - description: <p>A <code>String</code> which specifies the PartitionKey value for the entity to retrieve. </p>
    name: partitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the RowKey value for the entity to retrieve. </p>
    name: rowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The class type of the table entity object to retrieve. </p>
    name: clazzType
    type: final Class&lt;? extends <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for retrieving the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to retrieve the specified table entity and return it as the specified type. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the</p>

    <p></p>
  syntax: public static TableOperation retrieve(final String partitionKey, final String rowKey, final Class<? extends TableEntity> clazzType)
  uid: com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final Class<? extends TableEntity>)
- fullName: com.microsoft.azure.storage.table.TableOperation.retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  name: retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  nameWithType: TableOperation.retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  parameters:
  - description: <p>A <code>String</code> which specifies the PartitionKey value for the entity to retrieve. </p>
    name: partitionKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> which specifies the RowKey value for the entity to retrieve. </p>
    name: rowKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The implementation of <xref uid="com.microsoft.azure.storage.table.EntityResolver" data-throw-if-not-resolved="false" data-raw-source="EntityResolver"></xref> to use to project the result entity as type T. </p>
    name: resolver
    type: final <xref href="com.microsoft.azure.storage.table.EntityResolver?alt=com.microsoft.azure.storage.table.EntityResolver&text=EntityResolver" data-throw-if-not-resolved="False"/>&lt;?&gt;
  returns:
    description: <p>A new <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance for retrieving the table entity. </p>
    type: <xref href="com.microsoft.azure.storage.table.TableOperation?alt=com.microsoft.azure.storage.table.TableOperation&text=TableOperation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A static factory method returning a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance to retrieve the specified table entity and return a projection of it using the specified resolver. To execute this <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> on a given table, call the <xref uid="com.microsoft.azure.storage.table.CloudTable.execute(final TableOperation)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#execute(TableOperation)"></xref> method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance with the table name and the <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> as arguments.</p>

    <p></p>
  syntax: public static TableOperation retrieve(final String partitionKey, final String rowKey, final EntityResolver<?> resolver)
  uid: com.microsoft.azure.storage.table.TableOperation.retrieve(final String,final String,final EntityResolver<?>)
- fullName: com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean echoContent)
  name: setEchoContent(boolean echoContent)
  nameWithType: TableOperation.setEchoContent(boolean echoContent)
  parameters:
  - description: >-
      <p>

        <code>true</code> if the message payload should be returned in the response; otherwise <code>false</code>. </p>
    name: echoContent
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the boolean representing whether the message payload should be returned in the response.</p>

    <p></p>
  syntax: protected void setEchoContent(boolean echoContent)
  uid: com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)
- fullName: com.microsoft.azure.storage.table.TableOperation.setEntity(final TableEntity entity)
  name: setEntity(final TableEntity entity)
  nameWithType: TableOperation.setEntity(final TableEntity entity)
  parameters:
  - description: <p>The <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> instance to set. </p>
    name: entity
    type: final <xref href="com.microsoft.azure.storage.table.TableEntity?alt=com.microsoft.azure.storage.table.TableEntity&text=TableEntity" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="synchronized+final+void?alt=synchronized+final+void&text=synchronized+final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Reserved for internal use. Sets the <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> instance for the table operation.</p>

    <p></p>
  syntax: protected synchronized final void setEntity(final TableEntity entity)
  uid: com.microsoft.azure.storage.table.TableOperation.setEntity(final TableEntity)
nameWithType: TableOperation
syntax: public class TableOperation
type: class
uid: com.microsoft.azure.storage.table.TableOperation
fullName: com.microsoft.azure.storage.table.TableOperation
name: TableOperation
package: com.microsoft.azure.storage.table
summary: >-
  <p>A class which represents a single table operation. </p>

  <p>Use the static factory methods to construct <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instances for operations on tables that insert, update, merge, delete, replace or retrieve table entities. To execute a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> instance, call the  method on a <xref uid="com.microsoft.azure.storage.table.CloudTableClient" data-throw-if-not-resolved="false" data-raw-source="CloudTableClient"></xref> instance. A <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> may be executed directly or as part of a <xref uid="com.microsoft.azure.storage.table.TableBatchOperation" data-throw-if-not-resolved="false" data-raw-source="TableBatchOperation"></xref>. If a <xref uid="com.microsoft.azure.storage.table.TableOperation" data-throw-if-not-resolved="false" data-raw-source="TableOperation"></xref> returns an entity result, it is stored in the corresponding <xref uid="com.microsoft.azure.storage.table.TableResult" data-throw-if-not-resolved="false" data-raw-source="TableResult"></xref> returned by the  method. </p>
metadata: {}
