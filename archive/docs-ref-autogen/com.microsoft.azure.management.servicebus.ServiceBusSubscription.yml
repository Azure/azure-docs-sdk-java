### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.accessedAt()
  name: accessedAt()
  nameWithType: ServiceBusSubscription.accessedAt()
  returns:
    description: <p>last time there was a receive request to this subscription </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime accessedAt()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.accessedAt()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.activeMessageCount()
  name: activeMessageCount()
  nameWithType: ServiceBusSubscription.activeMessageCount()
  returns:
    description: <p>number of active messages in the subscription </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long activeMessageCount()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.activeMessageCount()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.createdAt()
  name: createdAt()
  nameWithType: ServiceBusSubscription.createdAt()
  returns:
    description: <p>the exact time the message was created </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime createdAt()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.createdAt()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.deadLetterMessageCount()
  name: deadLetterMessageCount()
  nameWithType: ServiceBusSubscription.deadLetterMessageCount()
  returns:
    description: <p>number of messages in the dead-letter subscription </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long deadLetterMessageCount()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.deadLetterMessageCount()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.defaultMessageTtlDuration()
  name: defaultMessageTtlDuration()
  nameWithType: ServiceBusSubscription.defaultMessageTtlDuration()
  returns:
    description: <p>the duration after which the message expires, starting from when the message is sent to subscription. </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  syntax: public Period defaultMessageTtlDuration()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.defaultMessageTtlDuration()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.deleteOnIdleDurationInMinutes()
  name: deleteOnIdleDurationInMinutes()
  nameWithType: ServiceBusSubscription.deleteOnIdleDurationInMinutes()
  returns:
    description: <p>the idle duration after which the subscription is automatically deleted. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long deleteOnIdleDurationInMinutes()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.deleteOnIdleDurationInMinutes()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isBatchedOperationsEnabled()
  name: isBatchedOperationsEnabled()
  nameWithType: ServiceBusSubscription.isBatchedOperationsEnabled()
  returns:
    description: <p>indicates whether server-side batched operations are enabled </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isBatchedOperationsEnabled()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isBatchedOperationsEnabled()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isDeadLetteringEnabledForExpiredMessages()
  name: isDeadLetteringEnabledForExpiredMessages()
  nameWithType: ServiceBusSubscription.isDeadLetteringEnabledForExpiredMessages()
  returns:
    description: <p>indicates whether this subscription has dead letter support when a message expires </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isDeadLetteringEnabledForExpiredMessages()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isDeadLetteringEnabledForExpiredMessages()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isDeadLetteringEnabledForFilterEvaluationFailedMessages()
  name: isDeadLetteringEnabledForFilterEvaluationFailedMessages()
  nameWithType: ServiceBusSubscription.isDeadLetteringEnabledForFilterEvaluationFailedMessages()
  returns:
    description: <p>indicates whether subscription has dead letter support on filter evaluation exceptions </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isDeadLetteringEnabledForFilterEvaluationFailedMessages()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isDeadLetteringEnabledForFilterEvaluationFailedMessages()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isSessionEnabled()
  name: isSessionEnabled()
  nameWithType: ServiceBusSubscription.isSessionEnabled()
  returns:
    description: <p>indicates whether the subscription supports sessions </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean isSessionEnabled()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.isSessionEnabled()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.lockDurationInSeconds()
  name: lockDurationInSeconds()
  nameWithType: ServiceBusSubscription.lockDurationInSeconds()
  returns:
    description: <p>the duration of peek-lock which is the amount of time that the message is locked for other receivers </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long lockDurationInSeconds()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.lockDurationInSeconds()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.maxDeliveryCountBeforeDeadLetteringMessage()
  name: maxDeliveryCountBeforeDeadLetteringMessage()
  nameWithType: ServiceBusSubscription.maxDeliveryCountBeforeDeadLetteringMessage()
  returns:
    description: <p>the maximum number of a message delivery before marking it as dead-lettered </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int maxDeliveryCountBeforeDeadLetteringMessage()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.maxDeliveryCountBeforeDeadLetteringMessage()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.messageCount()
  name: messageCount()
  nameWithType: ServiceBusSubscription.messageCount()
  returns:
    description: <p>the number of messages in the subscription </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long messageCount()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.messageCount()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.scheduledMessageCount()
  name: scheduledMessageCount()
  nameWithType: ServiceBusSubscription.scheduledMessageCount()
  returns:
    description: <p>number of messages sent to the subscription that are yet to be released for consumption </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long scheduledMessageCount()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.scheduledMessageCount()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.status()
  name: status()
  nameWithType: ServiceBusSubscription.status()
  returns:
    description: <p>the current status of the subscription </p>
    type: <xref href="com.microsoft.azure.management.servicebus.EntityStatus?alt=com.microsoft.azure.management.servicebus.EntityStatus&text=EntityStatus" data-throw-if-not-resolved="False"/>
  syntax: public EntityStatus status()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.status()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.transferDeadLetterMessageCount()
  name: transferDeadLetterMessageCount()
  nameWithType: ServiceBusSubscription.transferDeadLetterMessageCount()
  returns:
    description: <p>number of messages transferred into dead letters </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long transferDeadLetterMessageCount()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.transferDeadLetterMessageCount()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.transferMessageCount()
  name: transferMessageCount()
  nameWithType: ServiceBusSubscription.transferMessageCount()
  returns:
    description: <p>number of messages transferred to another queue, topic, or subscription </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  syntax: public long transferMessageCount()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.transferMessageCount()
- fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription.updatedAt()
  name: updatedAt()
  nameWithType: ServiceBusSubscription.updatedAt()
  returns:
    description: <p>the exact time the message was updated </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime updatedAt()
  uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription.updatedAt()
nameWithType: ServiceBusSubscription
syntax: public interface ServiceBusSubscription extends IndependentChildResource<ServiceBusManager, SubscriptionInner>,Refreshable<ServiceBusSubscription>,Updatable<ServiceBusSubscription.Update>
type: interface
uid: com.microsoft.azure.management.servicebus.ServiceBusSubscription
fullName: com.microsoft.azure.management.servicebus.ServiceBusSubscription
name: ServiceBusSubscription
package: com.microsoft.azure.management.servicebus
summary: <p>Type representing service bus topic subscription. </p>
metadata: {}
