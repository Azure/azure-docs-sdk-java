### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.ServiceRemotingCancellationHelper(String traceId)
  name: ServiceRemotingCancellationHelper(String traceId)
  nameWithType: ServiceRemotingCancellationHelper.ServiceRemotingCancellationHelper(String traceId)
  parameters:
  - name: traceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public ServiceRemotingCancellationHelper(String traceId)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.ServiceRemotingCancellationHelper(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync(int interfaceId, int methodId, String callContext)
  name: cancelRequestAsync(int interfaceId, int methodId, String callContext)
  nameWithType: ServiceRemotingCancellationHelper.cancelRequestAsync(int interfaceId, int methodId, String callContext)
  parameters:
  - description: <p>The interface id of the remote interface </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>The methodId of the remote method </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>callContext. </p>
    name: callContext
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>returns a Completable future having byte array. </p>
    type: <xref href="CompletableFuture%3Cbyte%5B%5D%3E?alt=CompletableFuture%3Cbyte%5B%5D%3E&text=CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Cancels the request asynchronously. </p>
  syntax: public CompletableFuture<byte[]> cancelRequestAsync(int interfaceId, int methodId, String callContext)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.cancelRequestAsync(int,int,String)
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
  name: dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
  nameWithType: ServiceRemotingCancellationHelper.dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
  parameters:
  - description: <p>The interface id of the remote interface </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>The methodId of the remote method </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>callContext. </p>
    name: callContext
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>dispatch function. </p>
    name: dispatchFunc
    type: Function&lt;<xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>, CompletableFuture&lt;byte[]&gt;&gt;
  returns:
    description: <p>returns a Completable future. </p>
    type: <xref href="CompletableFuture%3Cbyte%5B%5D%3E?alt=CompletableFuture%3Cbyte%5B%5D%3E&text=CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Dispatch request. </p>
  syntax: public CompletableFuture<byte[]> dispatchRequest(int interfaceId, int methodId, String callContext, Function<CancellationToken, CompletableFuture<byte[]>> dispatchFunc)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.dispatchRequest(int,int,String,Function<CancellationToken, CompletableFuture<byte[]>>)
- fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
  name: isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
  nameWithType: ServiceRemotingCancellationHelper.isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
  parameters:
  - description: <p>Request message headers </p>
    name: messageHeaders
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders&text=ServiceRemotingMessageHeaders" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>boolean indicating whether its cancellation request or not. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Returns true if it is a cancellation request. </p>
  syntax: public boolean isCancellationRequest(ServiceRemotingMessageHeaders messageHeaders)
  uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper.isCancellationRequest(ServiceRemotingMessageHeaders)
nameWithType: ServiceRemotingCancellationHelper
syntax: public class ServiceRemotingCancellationHelper
type: class
uid: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper
fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCancellationHelper
name: ServiceRemotingCancellationHelper
package: microsoft.servicefabric.services.remoting.runtime
summary: <p>Provides cancellation support for remote method dispatching. </p>
metadata: {}
