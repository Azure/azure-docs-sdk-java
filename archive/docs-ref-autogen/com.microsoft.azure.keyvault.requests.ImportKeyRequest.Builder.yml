### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.Builder(String vaultBaseUrl, String keyName, JsonWebKey key)
  name: Builder(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: ImportKeyRequest.Builder.Builder(String vaultBaseUrl, String keyName, JsonWebKey key)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the key in the given vault. </p>
    name: keyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The Json web key. </p>
    name: key
    type: <xref href="com.microsoft.azure.keyvault.webkey.JsonWebKey?alt=com.microsoft.azure.keyvault.webkey.JsonWebKey&text=JsonWebKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The builder for constructing <xref uid="com.microsoft.azure.keyvault.requests.ImportKeyRequest" data-throw-if-not-resolved="false" data-raw-source="ImportKeyRequest"></xref> object.</p>

    <p></p>
  syntax: public Builder(String vaultBaseUrl, String keyName, JsonWebKey key)
  uid: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.Builder(String,String,JsonWebKey)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.build()
  name: build()
  nameWithType: ImportKeyRequest.Builder.build()
  returns:
    description: <p>the <xref uid="com.microsoft.azure.keyvault.requests.ImportKeyRequest" data-throw-if-not-resolved="false" data-raw-source="ImportKeyRequest"></xref> object. </p>
    type: <xref href="com.microsoft.azure.keyvault.requests.ImportKeyRequest?alt=com.microsoft.azure.keyvault.requests.ImportKeyRequest&text=ImportKeyRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>builds the <xref uid="com.microsoft.azure.keyvault.requests.ImportKeyRequest" data-throw-if-not-resolved="false" data-raw-source="ImportKeyRequest"></xref> object.</p>

    <p></p>
  syntax: public ImportKeyRequest build()
  uid: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.build()
- fullName: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.withAttributes(Attributes attributes)
  name: withAttributes(Attributes attributes)
  nameWithType: ImportKeyRequest.Builder.withAttributes(Attributes attributes)
  parameters:
  - description: <p>the key management attributes value to set </p>
    name: attributes
    type: <xref href="com.microsoft.azure.keyvault.models.Attributes?alt=com.microsoft.azure.keyvault.models.Attributes&text=Attributes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Builder object itself. </p>
    type: <xref href="Builder?alt=Builder&text=Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the key attributes value.</p>

    <p></p>
  syntax: public Builder withAttributes(Attributes attributes)
  uid: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.withAttributes(Attributes)
- fullName: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.withHsm(boolean isHsm)
  name: withHsm(boolean isHsm)
  nameWithType: ImportKeyRequest.Builder.withHsm(boolean isHsm)
  parameters:
  - description: <p>True, if the key is hardware key to be stored in HSM. false otherwise </p>
    name: isHsm
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Builder object itself. </p>
    type: <xref href="Builder?alt=Builder&text=Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isHsm to true if the key is imported as a hardware key to HSM, false otherwise.</p>

    <p></p>
  syntax: public Builder withHsm(boolean isHsm)
  uid: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.withHsm(boolean)
- fullName: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: ImportKeyRequest.Builder.withTags(Map<String, String> tags)
  parameters:
  - description: <p>Application-specific metadata in the form of key-value pairs. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Builder object itself. </p>
    type: <xref href="Builder?alt=Builder&text=Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tags value.</p>

    <p></p>
  syntax: public Builder withTags(Map<String, String> tags)
  uid: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder.withTags(Map<String, String>)
nameWithType: ImportKeyRequest.Builder
syntax: public class Builder
type: class
uid: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder
fullName: com.microsoft.azure.keyvault.requests.ImportKeyRequest.Builder
name: ImportKeyRequest.Builder
package: com.microsoft.azure.keyvault.requests
summary: <p>The <xref uid="com.microsoft.azure.keyvault.requests.ImportKeyRequest" data-throw-if-not-resolved="false" data-raw-source="ImportKeyRequest"></xref> builder. </p>
metadata: {}
