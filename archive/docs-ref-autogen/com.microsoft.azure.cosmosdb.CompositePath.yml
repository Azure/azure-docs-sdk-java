### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.cosmosdb.CompositePath.CompositePath()
  name: CompositePath()
  nameWithType: CompositePath.CompositePath()
  summary: <p>Constructor. </p>
  syntax: public CompositePath()
  uid: com.microsoft.azure.cosmosdb.CompositePath.CompositePath()
- fullName: com.microsoft.azure.cosmosdb.CompositePath.CompositePath(String jsonString)
  name: CompositePath(String jsonString)
  nameWithType: CompositePath.CompositePath(String jsonString)
  parameters:
  - description: <p>the json string that represents the included path. </p>
    name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: public CompositePath(String jsonString)
  uid: com.microsoft.azure.cosmosdb.CompositePath.CompositePath(String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cosmosdb.JsonSerializable?alt=com.microsoft.azure.cosmosdb.JsonSerializable&text=JsonSerializable" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
- com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
- com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
- com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
- com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
- com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
- com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
- com.microsoft.azure.cosmosdb.JsonSerializable.toString()
methods:
- fullName: com.microsoft.azure.cosmosdb.CompositePath.getOrder()
  name: getOrder()
  nameWithType: CompositePath.getOrder()
  returns:
    description: <p>the sort order. </p>
    type: <xref href="com.microsoft.azure.cosmosdb.CompositePathSortOrder?alt=com.microsoft.azure.cosmosdb.CompositePathSortOrder&text=CompositePathSortOrder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the sort order for the composite path.</p>

    <p>For example if you want to run the query "SELECT * FROM c ORDER BY c.age asc, c.height desc", then you need to make the order for "/age" "ascending" and the order for "/height" "descending".</p>

    <p></p>
  syntax: public CompositePathSortOrder getOrder()
  uid: com.microsoft.azure.cosmosdb.CompositePath.getOrder()
- fullName: com.microsoft.azure.cosmosdb.CompositePath.getPath()
  name: getPath()
  nameWithType: CompositePath.getPath()
  returns:
    description: <p>the path. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets path.</p>

    <p></p>
  syntax: public String getPath()
  uid: com.microsoft.azure.cosmosdb.CompositePath.getPath()
- fullName: com.microsoft.azure.cosmosdb.CompositePath.setOrder(CompositePathSortOrder order)
  name: setOrder(CompositePathSortOrder order)
  nameWithType: CompositePath.setOrder(CompositePathSortOrder order)
  parameters:
  - description: <p>the sort order. </p>
    name: order
    type: <xref href="com.microsoft.azure.cosmosdb.CompositePathSortOrder?alt=com.microsoft.azure.cosmosdb.CompositePathSortOrder&text=CompositePathSortOrder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the sort order for the composite path.</p>

    <p>For example if you want to run the query "SELECT * FROM c ORDER BY c.age asc, c.height desc", then you need to make the order for "/age" "ascending" and the order for "/height" "descending".</p>

    <p></p>
  syntax: public void setOrder(CompositePathSortOrder order)
  uid: com.microsoft.azure.cosmosdb.CompositePath.setOrder(CompositePathSortOrder)
- fullName: com.microsoft.azure.cosmosdb.CompositePath.setPath(String path)
  name: setPath(String path)
  nameWithType: CompositePath.setPath(String path)
  parameters:
  - description: <p>the path. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets path.</p>

    <p></p>
  syntax: public void setPath(String path)
  uid: com.microsoft.azure.cosmosdb.CompositePath.setPath(String)
nameWithType: CompositePath
syntax: public class CompositePath extends JsonSerializable
type: class
uid: com.microsoft.azure.cosmosdb.CompositePath
fullName: com.microsoft.azure.cosmosdb.CompositePath
name: CompositePath
package: com.microsoft.azure.cosmosdb
summary: <p>Represents a composite path of the IndexingPolicy in the Azure Cosmos DB database service. A composite path is used in a composite index. For example if you want to run a query like "SELECT * FROM c ORDER BY c.age, c.height", then you need to add "/age" and "/height" as composite paths to your composite index. </p>
metadata: {}
