### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.containerregistry.TaskStepProperties?alt=com.microsoft.azure.management.containerregistry.TaskStepProperties&text=TaskStepProperties" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.containerregistry.TaskStepProperties.baseImageDependencies()
- com.microsoft.azure.management.containerregistry.TaskStepProperties.contextPath()
- com.microsoft.azure.management.containerregistry.TaskStepProperties.withContextPath(String)
methods:
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.arguments()
  name: arguments()
  nameWithType: DockerTaskStep.arguments()
  returns:
    description: <p>the arguments value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.Argument?alt=com.microsoft.azure.management.containerregistry.Argument&text=Argument" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the collection of override arguments to be used when executing this build step.</p>

    <p></p>
  syntax: public List<Argument> arguments()
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.arguments()
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.dockerFilePath()
  name: dockerFilePath()
  nameWithType: DockerTaskStep.dockerFilePath()
  returns:
    description: <p>the dockerFilePath value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the Docker file path relative to the source context.</p>

    <p></p>
  syntax: public String dockerFilePath()
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.dockerFilePath()
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.imageNames()
  name: imageNames()
  nameWithType: DockerTaskStep.imageNames()
  returns:
    description: <p>the imageNames value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the fully qualified image names including the repository and tag.</p>

    <p></p>
  syntax: public List<String> imageNames()
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.imageNames()
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.isPushEnabled()
  name: isPushEnabled()
  nameWithType: DockerTaskStep.isPushEnabled()
  returns:
    description: <p>the isPushEnabled value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the value of this property indicates whether the image built should be pushed to the registry or not.</p>

    <p></p>
  syntax: public Boolean isPushEnabled()
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.isPushEnabled()
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.noCache()
  name: noCache()
  nameWithType: DockerTaskStep.noCache()
  returns:
    description: <p>the noCache value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the value of this property indicates whether the image cache is enabled or not.</p>

    <p></p>
  syntax: public Boolean noCache()
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.noCache()
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.withArguments(List<Argument> arguments)
  name: withArguments(List<Argument> arguments)
  nameWithType: DockerTaskStep.withArguments(List<Argument> arguments)
  parameters:
  - description: <p>the arguments value to set </p>
    name: arguments
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.Argument?alt=com.microsoft.azure.management.containerregistry.Argument&text=Argument" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the DockerBuildStep object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.DockerTaskStep?alt=com.microsoft.azure.management.containerregistry.DockerTaskStep&text=DockerTaskStep" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the collection of override arguments to be used when executing this build step.</p>

    <p></p>
  syntax: public DockerTaskStep withArguments(List<Argument> arguments)
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.withArguments(List<Argument>)
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.withDockerFilePath(String dockerFilePath)
  name: withDockerFilePath(String dockerFilePath)
  nameWithType: DockerTaskStep.withDockerFilePath(String dockerFilePath)
  parameters:
  - description: <p>the dockerFilePath value to set </p>
    name: dockerFilePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DockerBuildStep object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.DockerTaskStep?alt=com.microsoft.azure.management.containerregistry.DockerTaskStep&text=DockerTaskStep" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the Docker file path relative to the source context.</p>

    <p></p>
  syntax: public DockerTaskStep withDockerFilePath(String dockerFilePath)
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.withDockerFilePath(String)
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.withImageNames(List<String> imageNames)
  name: withImageNames(List<String> imageNames)
  nameWithType: DockerTaskStep.withImageNames(List<String> imageNames)
  parameters:
  - description: <p>the imageNames value to set </p>
    name: imageNames
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DockerBuildStep object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.DockerTaskStep?alt=com.microsoft.azure.management.containerregistry.DockerTaskStep&text=DockerTaskStep" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the fully qualified image names including the repository and tag.</p>

    <p></p>
  syntax: public DockerTaskStep withImageNames(List<String> imageNames)
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.withImageNames(List<String>)
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.withIsPushEnabled(Boolean isPushEnabled)
  name: withIsPushEnabled(Boolean isPushEnabled)
  nameWithType: DockerTaskStep.withIsPushEnabled(Boolean isPushEnabled)
  parameters:
  - description: <p>the isPushEnabled value to set </p>
    name: isPushEnabled
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DockerBuildStep object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.DockerTaskStep?alt=com.microsoft.azure.management.containerregistry.DockerTaskStep&text=DockerTaskStep" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value of this property indicates whether the image built should be pushed to the registry or not.</p>

    <p></p>
  syntax: public DockerTaskStep withIsPushEnabled(Boolean isPushEnabled)
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.withIsPushEnabled(Boolean)
- fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep.withNoCache(Boolean noCache)
  name: withNoCache(Boolean noCache)
  nameWithType: DockerTaskStep.withNoCache(Boolean noCache)
  parameters:
  - description: <p>the noCache value to set </p>
    name: noCache
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DockerBuildStep object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.DockerTaskStep?alt=com.microsoft.azure.management.containerregistry.DockerTaskStep&text=DockerTaskStep" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value of this property indicates whether the image cache is enabled or not.</p>

    <p></p>
  syntax: public DockerTaskStep withNoCache(Boolean noCache)
  uid: com.microsoft.azure.management.containerregistry.DockerTaskStep.withNoCache(Boolean)
nameWithType: DockerTaskStep
syntax: public class DockerTaskStep extends TaskStepProperties
type: class
uid: com.microsoft.azure.management.containerregistry.DockerTaskStep
fullName: com.microsoft.azure.management.containerregistry.DockerTaskStep
name: DockerTaskStep
package: com.microsoft.azure.management.containerregistry
summary: <p>The Docker build step. </p>
metadata: {}
