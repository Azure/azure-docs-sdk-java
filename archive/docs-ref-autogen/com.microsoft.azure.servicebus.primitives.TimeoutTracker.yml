### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.servicebus.primitives.TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
  name: TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
  nameWithType: TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
  parameters:
  - description: <p>original operationTimeout </p>
    name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>whether/not to start the timeout tracking - right now. if not started now, timer tracking will start upon the first call to <xref uid="" data-throw-if-not-resolved="false" data-raw-source="TimeoutTracker#elapsed()"></xref>/<xref uid="" data-throw-if-not-resolved="false" data-raw-source="TimeoutTracker#remaining()"></xref></p>
    name: startTrackingTimeout
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
  uid: com.microsoft.azure.servicebus.primitives.TimeoutTracker.TimeoutTracker(Duration,boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.servicebus.primitives.TimeoutTracker.create(Duration timeout)
  name: create(Duration timeout)
  nameWithType: TimeoutTracker.create(Duration timeout)
  parameters:
  - name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.servicebus.primitives.TimeoutTracker?alt=com.microsoft.azure.servicebus.primitives.TimeoutTracker&text=TimeoutTracker" data-throw-if-not-resolved="False"/>
  syntax: public static TimeoutTracker create(Duration timeout)
  uid: com.microsoft.azure.servicebus.primitives.TimeoutTracker.create(Duration)
- fullName: com.microsoft.azure.servicebus.primitives.TimeoutTracker.elapsed()
  name: elapsed()
  nameWithType: TimeoutTracker.elapsed()
  returns:
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration elapsed()
  uid: com.microsoft.azure.servicebus.primitives.TimeoutTracker.elapsed()
- fullName: com.microsoft.azure.servicebus.primitives.TimeoutTracker.remaining()
  name: remaining()
  nameWithType: TimeoutTracker.remaining()
  returns:
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  syntax: public Duration remaining()
  uid: com.microsoft.azure.servicebus.primitives.TimeoutTracker.remaining()
nameWithType: TimeoutTracker
syntax: public class TimeoutTracker
type: class
uid: com.microsoft.azure.servicebus.primitives.TimeoutTracker
fullName: com.microsoft.azure.servicebus.primitives.TimeoutTracker
name: TimeoutTracker
package: com.microsoft.azure.servicebus.primitives
metadata: {}
