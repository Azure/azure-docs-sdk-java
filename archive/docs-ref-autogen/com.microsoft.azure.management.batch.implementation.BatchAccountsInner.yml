### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.BatchAccountsInner(Retrofit retrofit, BatchManagementClientImpl client)
  name: BatchAccountsInner(Retrofit retrofit, BatchManagementClientImpl client)
  nameWithType: BatchAccountsInner.BatchAccountsInner(Retrofit retrofit, BatchManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl?alt=com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl&text=BatchManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of BatchAccountsInner.</p>

    <p></p>
  syntax: public BatchAccountsInner(Retrofit retrofit, BatchManagementClientImpl client)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.BatchAccountsInner(Retrofit,BatchManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet%3CInnerT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String,ServiceCallback<InnerT>)
methods:
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreate(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  name: beginCreate(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  nameWithType: BatchAccountsInner.beginCreate(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the BatchAccountInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public BatchAccountInner beginCreate(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreate(String,String,BatchAccountCreateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  name: beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  nameWithType: BatchAccountsInner.beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public Observable<BatchAccountInner> beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreateAsync(String,String,BatchAccountCreateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public ServiceFuture<BatchAccountInner> beginCreateAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreateAsync(String,String,BatchAccountCreateParameters,final ServiceCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  name: beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  nameWithType: BatchAccountsInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountInner object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.management.batch.BatchAccountCreateHeaders?alt=com.microsoft.azure.management.batch.BatchAccountCreateHeaders&text=BatchAccountCreateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<BatchAccountInner, BatchAccountCreateHeaders>> beginCreateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginCreateWithServiceResponseAsync(String,String,BatchAccountCreateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDelete(String resourceGroupName, String accountName)
  name: beginDelete(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.beginDelete(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDelete(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDeleteAsync(String resourceGroupName, String accountName)
  name: beginDeleteAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.beginDeleteAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDeleteAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDeleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  nameWithType: BatchAccountsInner.beginDeleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDeleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.management.batch.BatchAccountDeleteHeaders?alt=com.microsoft.azure.management.batch.BatchAccountDeleteHeaders&text=BatchAccountDeleteHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, BatchAccountDeleteHeaders>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.beginDeleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.create(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  name: create(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  nameWithType: BatchAccountsInner.create(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the BatchAccountInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public BatchAccountInner create(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.create(String,String,BatchAccountCreateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  name: createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  nameWithType: BatchAccountsInner.createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public Observable<BatchAccountInner> createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.createAsync(String,String,BatchAccountCreateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  name: createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public ServiceFuture<BatchAccountInner> createAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.createAsync(String,String,BatchAccountCreateParameters,final ServiceCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.createWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  name: createWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  nameWithType: BatchAccountsInner.createWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: '<p>A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: <a href="http://accountname.region.batch.azure.com/">http://accountname.region.batch.azure.com/</a>. </p>'
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountCreateParameters?alt=com.microsoft.azure.management.batch.BatchAccountCreateParameters&text=BatchAccountCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.management.batch.BatchAccountCreateHeaders?alt=com.microsoft.azure.management.batch.BatchAccountCreateHeaders&text=BatchAccountCreateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<BatchAccountInner, BatchAccountCreateHeaders>> createWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountCreateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.createWithServiceResponseAsync(String,String,BatchAccountCreateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.delete(String resourceGroupName, String accountName)
  name: delete(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.delete(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.delete(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.deleteAsync(String resourceGroupName, String accountName)
  name: deleteAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.deleteAsync(String resourceGroupName, String accountName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.deleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  nameWithType: BatchAccountsInner.deleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.deleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.deleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.management.batch.BatchAccountDeleteHeaders?alt=com.microsoft.azure.management.batch.BatchAccountDeleteHeaders&text=BatchAccountDeleteHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes the specified Batch account.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, BatchAccountDeleteHeaders>> deleteWithServiceResponseAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroup(String resourceGroupName, String accountName)
  name: getByResourceGroup(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.getByResourceGroup(String resourceGroupName, String accountName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroup(String,String)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the BatchAccountInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about the specified Batch account.</p>

    <p></p>
  syntax: public BatchAccountInner getByResourceGroup(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroupAsync(String resourceGroupName, String accountName)
  name: getByResourceGroupAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.getByResourceGroupAsync(String resourceGroupName, String accountName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified Batch account.</p>

    <p></p>
  syntax: public Observable<BatchAccountInner> getByResourceGroupAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroupAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountInner> serviceCallback)
  name: getByResourceGroupAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.getByResourceGroupAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified Batch account.</p>

    <p></p>
  syntax: public ServiceFuture<BatchAccountInner> getByResourceGroupAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroupAsync(String,String,final ServiceCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String accountName)
  name: getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the specified Batch account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<BatchAccountInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeys(String resourceGroupName, String accountName)
  name: getKeys(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.getKeys(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the BatchAccountKeysInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the account keys for the specified Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, getting the keys will fail.</p>

    <p></p>
  syntax: public BatchAccountKeysInner getKeys(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeys(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeysAsync(String resourceGroupName, String accountName)
  name: getKeysAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.getKeysAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountKeysInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the account keys for the specified Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, getting the keys will fail.</p>

    <p></p>
  syntax: public Observable<BatchAccountKeysInner> getKeysAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeysAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  name: getKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  nameWithType: BatchAccountsInner.getKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the account keys for the specified Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, getting the keys will fail.</p>

    <p></p>
  syntax: public ServiceFuture<BatchAccountKeysInner> getKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeysAsync(String,String,final ServiceCallback<BatchAccountKeysInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  name: getKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.getKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountKeysInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the account keys for the specified Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, getting the keys will fail.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<BatchAccountKeysInner>> getKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.getKeysWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.list()
  name: list()
  nameWithType: BatchAccountsInner.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.list()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public PagedList<BatchAccountInner> list()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.list()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listAsync()
  name: listAsync()
  nameWithType: BatchAccountsInner.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public Observable<Page<BatchAccountInner>> listAsync()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listAsync()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listAsync(final ListOperationCallback<BatchAccountInner> serviceCallback)
  name: listAsync(final ListOperationCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.listAsync(final ListOperationCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public ServiceFuture<List<BatchAccountInner>> listAsync(final ListOperationCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listAsync(final ListOperationCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroup(final String resourceGroupName)
  name: listByResourceGroup(final String resourceGroupName)
  nameWithType: BatchAccountsInner.listByResourceGroup(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroup(String)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public PagedList<BatchAccountInner> listByResourceGroup(final String resourceGroupName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroup(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupAsync(final String resourceGroupName)
  name: listByResourceGroupAsync(final String resourceGroupName)
  nameWithType: BatchAccountsInner.listByResourceGroupAsync(final String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroupAsync(String)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public Observable<Page<BatchAccountInner>> listByResourceGroupAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<BatchAccountInner> serviceCallback)
  name: listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<BatchAccountInner>> listByResourceGroupAsync(final String resourceGroupName, final ListOperationCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupAsync(final String,final ListOperationCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNext(final String nextPageLink)
  name: listByResourceGroupNext(final String nextPageLink)
  nameWithType: BatchAccountsInner.listByResourceGroupNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public PagedList<BatchAccountInner> listByResourceGroupNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextAsync(final String nextPageLink)
  name: listByResourceGroupNextAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listByResourceGroupNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public Observable<Page<BatchAccountInner>> listByResourceGroupNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  name: listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<BatchAccountInner>> listByResourceGroupNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextAsync(final String,final ServiceFuture<List<BatchAccountInner>>,final ListOperationCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  name: listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p>ServiceResponse&lt;PageImpl&lt;BatchAccountInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listByResourceGroupNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  name: listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listByResourceGroupNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  name: listByResourceGroupSinglePageAsync(final String resourceGroupName)
  nameWithType: BatchAccountsInner.listByResourceGroupSinglePageAsync(final String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p>ServiceResponse&lt;PageImpl&lt;BatchAccountInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listByResourceGroupSinglePageAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  name: listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  nameWithType: BatchAccountsInner.listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the specified resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listByResourceGroupWithServiceResponseAsync(final String resourceGroupName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listByResourceGroupWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNext(final String nextPageLink)
  name: listNext(final String nextPageLink)
  nameWithType: BatchAccountsInner.listNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public PagedList<BatchAccountInner> listNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextAsync(final String nextPageLink)
  name: listNextAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public Observable<Page<BatchAccountInner>> listNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.listNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public ServiceFuture<List<BatchAccountInner>> listNextAsync(final String nextPageLink, final ServiceFuture<List<BatchAccountInner>> serviceFuture, final ListOperationCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextAsync(final String,final ServiceFuture<List<BatchAccountInner>>,final ListOperationCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextSinglePageAsync(final String nextPageLink)
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p>ServiceResponse&lt;PageImpl&lt;BatchAccountInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextWithServiceResponseAsync(final String nextPageLink)
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpoints(final String resourceGroupName, final String accountName)
  name: listOutboundNetworkDependenciesEndpoints(final String resourceGroupName, final String accountName)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpoints(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public PagedList<OutboundEnvironmentEndpointInner> listOutboundNetworkDependenciesEndpoints(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpoints(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName)
  name: listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public Observable<Page<OutboundEnvironmentEndpointInner>> listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  name: listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public ServiceFuture<List<OutboundEnvironmentEndpointInner>> listOutboundNetworkDependenciesEndpointsAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsAsync(final String,final String,final ListOperationCallback<OutboundEnvironmentEndpointInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNext(final String nextPageLink)
  name: listOutboundNetworkDependenciesEndpointsNext(final String nextPageLink)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public PagedList<OutboundEnvironmentEndpointInner> listOutboundNetworkDependenciesEndpointsNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink)
  name: listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public Observable<Page<OutboundEnvironmentEndpointInner>> listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink, final ServiceFuture<List<OutboundEnvironmentEndpointInner>> serviceFuture, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  name: listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink, final ServiceFuture<List<OutboundEnvironmentEndpointInner>> serviceFuture, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink, final ServiceFuture<List<OutboundEnvironmentEndpointInner>> serviceFuture, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public ServiceFuture<List<OutboundEnvironmentEndpointInner>> listOutboundNetworkDependenciesEndpointsNextAsync(final String nextPageLink, final ServiceFuture<List<OutboundEnvironmentEndpointInner>> serviceFuture, final ListOperationCallback<OutboundEnvironmentEndpointInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextAsync(final String,final ServiceFuture<List<OutboundEnvironmentEndpointInner>>,final ListOperationCallback<OutboundEnvironmentEndpointInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextSinglePageAsync(final String nextPageLink)
  name: listOutboundNetworkDependenciesEndpointsNextSinglePageAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p>ServiceResponse&lt;PageImpl&lt;OutboundEnvironmentEndpointInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<OutboundEnvironmentEndpointInner>>> listOutboundNetworkDependenciesEndpointsNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextWithServiceResponseAsync(final String nextPageLink)
  name: listOutboundNetworkDependenciesEndpointsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<OutboundEnvironmentEndpointInner>>> listOutboundNetworkDependenciesEndpointsNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsSinglePageAsync(final String resourceGroupName, final String accountName)
  name: listOutboundNetworkDependenciesEndpointsSinglePageAsync(final String resourceGroupName, final String accountName)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsSinglePageAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. ServiceResponse&lt;PageImpl&lt;OutboundEnvironmentEndpointInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p>ServiceResponse&lt;PageImpl&lt;OutboundEnvironmentEndpointInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<OutboundEnvironmentEndpointInner>>> listOutboundNetworkDependenciesEndpointsSinglePageAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsSinglePageAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  name: listOutboundNetworkDependenciesEndpointsWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  nameWithType: BatchAccountsInner.listOutboundNetworkDependenciesEndpointsWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;OutboundEnvironmentEndpointInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner?alt=com.microsoft.azure.management.batch.implementation.OutboundEnvironmentEndpointInner&text=OutboundEnvironmentEndpointInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists the endpoints that a Batch Compute Node under this Batch Account may call as part of Batch service administration. If you are deploying a Pool inside of a virtual network that you specify, you must make sure your network allows outbound access to these endpoints. Failure to allow access to these endpoints may cause Batch to mark the affected nodes as unusable. For more information about creating a pool inside of a virtual network, see <a href="https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network">https://docs.microsoft.com/en-us/azure/batch/batch-virtual-network</a>.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<OutboundEnvironmentEndpointInner>>> listOutboundNetworkDependenciesEndpointsWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listOutboundNetworkDependenciesEndpointsWithServiceResponseAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listSinglePageAsync()
  name: listSinglePageAsync()
  nameWithType: BatchAccountsInner.listSinglePageAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;BatchAccountInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listSinglePageAsync()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listSinglePageAsync()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: BatchAccountsInner.listWithServiceResponseAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;BatchAccountInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets information about the Batch accounts associated with the subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<BatchAccountInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.listWithServiceResponseAsync()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKey(String resourceGroupName, String accountName, AccountKeyType keyName)
  name: regenerateKey(String resourceGroupName, String accountName, AccountKeyType keyName)
  nameWithType: BatchAccountsInner.regenerateKey(String resourceGroupName, String accountName, AccountKeyType keyName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>The type of account key to regenerate. Possible values include: 'Primary', 'Secondary' </p>"
    name: keyName
    type: <xref href="com.microsoft.azure.management.batch.AccountKeyType?alt=com.microsoft.azure.management.batch.AccountKeyType&text=AccountKeyType" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the BatchAccountKeysInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Regenerates the specified account key for the Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, regenerating the keys will fail.</p>

    <p></p>
  syntax: public BatchAccountKeysInner regenerateKey(String resourceGroupName, String accountName, AccountKeyType keyName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKey(String,String,AccountKeyType)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  name: regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  nameWithType: BatchAccountsInner.regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>The type of account key to regenerate. Possible values include: 'Primary', 'Secondary' </p>"
    name: keyName
    type: <xref href="com.microsoft.azure.management.batch.AccountKeyType?alt=com.microsoft.azure.management.batch.AccountKeyType&text=AccountKeyType" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountKeysInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Regenerates the specified account key for the Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, regenerating the keys will fail.</p>

    <p></p>
  syntax: public Observable<BatchAccountKeysInner> regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKeyAsync(String,String,AccountKeyType)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  name: regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  nameWithType: BatchAccountsInner.regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>The type of account key to regenerate. Possible values include: 'Primary', 'Secondary' </p>"
    name: keyName
    type: <xref href="com.microsoft.azure.management.batch.AccountKeyType?alt=com.microsoft.azure.management.batch.AccountKeyType&text=AccountKeyType" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Regenerates the specified account key for the Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, regenerating the keys will fail.</p>

    <p></p>
  syntax: public ServiceFuture<BatchAccountKeysInner> regenerateKeyAsync(String resourceGroupName, String accountName, AccountKeyType keyName, final ServiceCallback<BatchAccountKeysInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKeyAsync(String,String,AccountKeyType,final ServiceCallback<BatchAccountKeysInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKeyWithServiceResponseAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  name: regenerateKeyWithServiceResponseAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  nameWithType: BatchAccountsInner.regenerateKeyWithServiceResponseAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>The type of account key to regenerate. Possible values include: 'Primary', 'Secondary' </p>"
    name: keyName
    type: <xref href="com.microsoft.azure.management.batch.AccountKeyType?alt=com.microsoft.azure.management.batch.AccountKeyType&text=AccountKeyType" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountKeysInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountKeysInner&text=BatchAccountKeysInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Regenerates the specified account key for the Batch account. This operation applies only to Batch accounts with allowedAuthenticationModes containing 'SharedKey'. If the Batch account doesn't contain 'SharedKey' in its allowedAuthenticationMode, clients cannot use shared keys to authenticate, and must use another allowedAuthenticationModes instead. In this case, regenerating the keys will fail.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<BatchAccountKeysInner>> regenerateKeyWithServiceResponseAsync(String resourceGroupName, String accountName, AccountKeyType keyName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.regenerateKeyWithServiceResponseAsync(String,String,AccountKeyType)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeys(String resourceGroupName, String accountName)
  name: synchronizeAutoStorageKeys(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.synchronizeAutoStorageKeys(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Synchronizes access keys for the auto-storage account configured for the specified Batch account, only if storage key authentication is being used.</p>

    <p></p>
  syntax: public void synchronizeAutoStorageKeys(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeys(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName)
  name: synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Synchronizes access keys for the auto-storage account configured for the specified Batch account, only if storage key authentication is being used.</p>

    <p></p>
  syntax: public Observable<Void> synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeysAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  name: synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  nameWithType: BatchAccountsInner.synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Synchronizes access keys for the auto-storage account configured for the specified Batch account, only if storage key authentication is being used.</p>

    <p></p>
  syntax: public ServiceFuture<Void> synchronizeAutoStorageKeysAsync(String resourceGroupName, String accountName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeysAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  name: synchronizeAutoStorageKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  nameWithType: BatchAccountsInner.synchronizeAutoStorageKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Synchronizes access keys for the auto-storage account configured for the specified Batch account, only if storage key authentication is being used.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> synchronizeAutoStorageKeysWithServiceResponseAsync(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.synchronizeAutoStorageKeysWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.update(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  name: update(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  nameWithType: BatchAccountsInner.update(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountUpdateParameters?alt=com.microsoft.azure.management.batch.BatchAccountUpdateParameters&text=BatchAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the BatchAccountInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of an existing Batch account.</p>

    <p></p>
  syntax: public BatchAccountInner update(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.update(String,String,BatchAccountUpdateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  name: updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  nameWithType: BatchAccountsInner.updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountUpdateParameters?alt=com.microsoft.azure.management.batch.BatchAccountUpdateParameters&text=BatchAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing Batch account.</p>

    <p></p>
  syntax: public Observable<BatchAccountInner> updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.updateAsync(String,String,BatchAccountUpdateParameters)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  nameWithType: BatchAccountsInner.updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountUpdateParameters?alt=com.microsoft.azure.management.batch.BatchAccountUpdateParameters&text=BatchAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing Batch account.</p>

    <p></p>
  syntax: public ServiceFuture<BatchAccountInner> updateAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters, final ServiceCallback<BatchAccountInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.updateAsync(String,String,BatchAccountUpdateParameters,final ServiceCallback<BatchAccountInner>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  name: updateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  nameWithType: BatchAccountsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for account update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountUpdateParameters?alt=com.microsoft.azure.management.batch.BatchAccountUpdateParameters&text=BatchAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BatchAccountInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates the properties of an existing Batch account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<BatchAccountInner>> updateWithServiceResponseAsync(String resourceGroupName, String accountName, BatchAccountUpdateParameters parameters)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner.updateWithServiceResponseAsync(String,String,BatchAccountUpdateParameters)
nameWithType: BatchAccountsInner
syntax: public class BatchAccountsInner implements InnerSupportsGet<BatchAccountInner>,InnerSupportsDelete<Void>,InnerSupportsListing<BatchAccountInner>
type: class
uid: com.microsoft.azure.management.batch.implementation.BatchAccountsInner
fullName: com.microsoft.azure.management.batch.implementation.BatchAccountsInner
name: BatchAccountsInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>An instance of this class provides access to all the operations defined in BatchAccounts. </p>
metadata: {}
