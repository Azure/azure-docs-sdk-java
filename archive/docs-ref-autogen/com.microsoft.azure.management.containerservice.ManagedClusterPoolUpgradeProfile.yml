### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.kubernetesVersion()
  name: kubernetesVersion()
  nameWithType: ManagedClusterPoolUpgradeProfile.kubernetesVersion()
  returns:
    description: <p>the kubernetesVersion value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get kubernetes version (major, minor, patch).</p>

    <p></p>
  syntax: public String kubernetesVersion()
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.kubernetesVersion()
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.name()
  name: name()
  nameWithType: ManagedClusterPoolUpgradeProfile.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get pool name.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.name()
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.osType()
  name: osType()
  nameWithType: ManagedClusterPoolUpgradeProfile.osType()
  returns:
    description: <p>the osType value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.OSType?alt=com.microsoft.azure.management.containerservice.OSType&text=OSType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get osType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'.</p>

    <p></p>
  syntax: public OSType osType()
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.osType()
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.upgrades()
  name: upgrades()
  nameWithType: ManagedClusterPoolUpgradeProfile.upgrades()
  returns:
    description: <p>the upgrades value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfileUpgradesItem?alt=com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfileUpgradesItem&text=ManagedClusterPoolUpgradeProfileUpgradesItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get list of orchestrator types and versions available for upgrade.</p>

    <p></p>
  syntax: public List<ManagedClusterPoolUpgradeProfileUpgradesItem> upgrades()
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.upgrades()
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withKubernetesVersion(String kubernetesVersion)
  name: withKubernetesVersion(String kubernetesVersion)
  nameWithType: ManagedClusterPoolUpgradeProfile.withKubernetesVersion(String kubernetesVersion)
  parameters:
  - description: <p>the kubernetesVersion value to set </p>
    name: kubernetesVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ManagedClusterPoolUpgradeProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile&text=ManagedClusterPoolUpgradeProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set kubernetes version (major, minor, patch).</p>

    <p></p>
  syntax: public ManagedClusterPoolUpgradeProfile withKubernetesVersion(String kubernetesVersion)
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withKubernetesVersion(String)
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withName(String name)
  name: withName(String name)
  nameWithType: ManagedClusterPoolUpgradeProfile.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ManagedClusterPoolUpgradeProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile&text=ManagedClusterPoolUpgradeProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set pool name.</p>

    <p></p>
  syntax: public ManagedClusterPoolUpgradeProfile withName(String name)
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withName(String)
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withOsType(OSType osType)
  name: withOsType(OSType osType)
  nameWithType: ManagedClusterPoolUpgradeProfile.withOsType(OSType osType)
  parameters:
  - description: <p>the osType value to set </p>
    name: osType
    type: <xref href="com.microsoft.azure.management.containerservice.OSType?alt=com.microsoft.azure.management.containerservice.OSType&text=OSType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ManagedClusterPoolUpgradeProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile&text=ManagedClusterPoolUpgradeProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set osType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'.</p>

    <p></p>
  syntax: public ManagedClusterPoolUpgradeProfile withOsType(OSType osType)
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withOsType(OSType)
- fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withUpgrades(List<ManagedClusterPoolUpgradeProfileUpgradesItem> upgrades)
  name: withUpgrades(List<ManagedClusterPoolUpgradeProfileUpgradesItem> upgrades)
  nameWithType: ManagedClusterPoolUpgradeProfile.withUpgrades(List<ManagedClusterPoolUpgradeProfileUpgradesItem> upgrades)
  parameters:
  - description: <p>the upgrades value to set </p>
    name: upgrades
    type: List&lt;<xref href="com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfileUpgradesItem?alt=com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfileUpgradesItem&text=ManagedClusterPoolUpgradeProfileUpgradesItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the ManagedClusterPoolUpgradeProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile&text=ManagedClusterPoolUpgradeProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set list of orchestrator types and versions available for upgrade.</p>

    <p></p>
  syntax: public ManagedClusterPoolUpgradeProfile withUpgrades(List<ManagedClusterPoolUpgradeProfileUpgradesItem> upgrades)
  uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile.withUpgrades(List<ManagedClusterPoolUpgradeProfileUpgradesItem>)
nameWithType: ManagedClusterPoolUpgradeProfile
syntax: public class ManagedClusterPoolUpgradeProfile
type: class
uid: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile
fullName: com.microsoft.azure.management.containerservice.ManagedClusterPoolUpgradeProfile
name: ManagedClusterPoolUpgradeProfile
package: com.microsoft.azure.management.containerservice
summary: <p>The list of available upgrade versions. </p>
metadata: {}
