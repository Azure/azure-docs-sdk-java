### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.appservice.PricingTier.PricingTier(String tier, String size)
  name: PricingTier(String tier, String size)
  nameWithType: PricingTier.PricingTier(String tier, String size)
  parameters:
  - description: <p>the tier name </p>
    name: tier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the size of the plan </p>
    name: size
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a custom app service pricing tier. </p>
  syntax: public PricingTier(String tier, String size)
  uid: com.microsoft.azure.management.appservice.PricingTier.PricingTier(String,String)
fields:
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.BASIC_B1
  name: BASIC_B1
  nameWithType: PricingTier.BASIC_B1
  summary: <p>Basic pricing tier with a small size. </p>
  syntax: public static final PricingTier BASIC_B1= new PricingTier("Basic", "B1")
  uid: com.microsoft.azure.management.appservice.PricingTier.BASIC_B1
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.BASIC_B2
  name: BASIC_B2
  nameWithType: PricingTier.BASIC_B2
  summary: <p>Basic pricing tier with a medium size. </p>
  syntax: public static final PricingTier BASIC_B2= new PricingTier("Basic", "B2")
  uid: com.microsoft.azure.management.appservice.PricingTier.BASIC_B2
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.BASIC_B3
  name: BASIC_B3
  nameWithType: PricingTier.BASIC_B3
  summary: <p>Basic pricing tier with a large size. </p>
  syntax: public static final PricingTier BASIC_B3= new PricingTier("Basic", "B3")
  uid: com.microsoft.azure.management.appservice.PricingTier.BASIC_B3
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.FREE_F1
  name: FREE_F1
  nameWithType: PricingTier.FREE_F1
  summary: <p>Free pricing tier. This does not work with Linux web apps, host name bindings, and SSL bindings. </p>
  syntax: public static final PricingTier FREE_F1= new PricingTier("Free", "F1")
  uid: com.microsoft.azure.management.appservice.PricingTier.FREE_F1
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.PREMIUM_P1
  name: PREMIUM_P1
  nameWithType: PricingTier.PREMIUM_P1
  summary: <p>Premium pricing tier with a small size. </p>
  syntax: public static final PricingTier PREMIUM_P1= new PricingTier("Premium", "P1")
  uid: com.microsoft.azure.management.appservice.PricingTier.PREMIUM_P1
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.PREMIUM_P2
  name: PREMIUM_P2
  nameWithType: PricingTier.PREMIUM_P2
  summary: <p>Premium pricing tier with a medium size. </p>
  syntax: public static final PricingTier PREMIUM_P2= new PricingTier("Premium", "P2")
  uid: com.microsoft.azure.management.appservice.PricingTier.PREMIUM_P2
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.PREMIUM_P3
  name: PREMIUM_P3
  nameWithType: PricingTier.PREMIUM_P3
  summary: <p>Premium pricing tier with a large size. </p>
  syntax: public static final PricingTier PREMIUM_P3= new PricingTier("Premium", "P3")
  uid: com.microsoft.azure.management.appservice.PricingTier.PREMIUM_P3
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.SHARED_D1
  name: SHARED_D1
  nameWithType: PricingTier.SHARED_D1
  summary: <p>Shared pricing tier. This does not work with Linux web apps, host name bindings, and SSL bindings. </p>
  syntax: public static final PricingTier SHARED_D1= new PricingTier("Shared", "D1")
  uid: com.microsoft.azure.management.appservice.PricingTier.SHARED_D1
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.STANDARD_S1
  name: STANDARD_S1
  nameWithType: PricingTier.STANDARD_S1
  summary: <p>Standard pricing tier with a small size. </p>
  syntax: public static final PricingTier STANDARD_S1= new PricingTier("Standard", "S1")
  uid: com.microsoft.azure.management.appservice.PricingTier.STANDARD_S1
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.STANDARD_S2
  name: STANDARD_S2
  nameWithType: PricingTier.STANDARD_S2
  summary: <p>Standard pricing tier with a medium size. </p>
  syntax: public static final PricingTier STANDARD_S2= new PricingTier("Standard", "S2")
  uid: com.microsoft.azure.management.appservice.PricingTier.STANDARD_S2
- field:
    type: final <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.appservice.PricingTier.STANDARD_S3
  name: STANDARD_S3
  nameWithType: PricingTier.STANDARD_S3
  summary: <p>Standard pricing tier with a large size. </p>
  syntax: public static final PricingTier STANDARD_S3= new PricingTier("Standard", "S3")
  uid: com.microsoft.azure.management.appservice.PricingTier.STANDARD_S3
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.appservice.PricingTier.equals(Object obj)
  name: equals(Object obj)
  nameWithType: PricingTier.equals(Object obj)
  parameters:
  - name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.management.appservice.PricingTier.equals(Object)
- fullName: com.microsoft.azure.management.appservice.PricingTier.fromSkuDescription(SkuDescription skuDescription)
  name: fromSkuDescription(SkuDescription skuDescription)
  nameWithType: PricingTier.fromSkuDescription(SkuDescription skuDescription)
  parameters:
  - description: <p>the serialized value to parse. </p>
    name: skuDescription
    type: <xref href="com.microsoft.azure.management.appservice.SkuDescription?alt=com.microsoft.azure.management.appservice.SkuDescription&text=SkuDescription" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the parsed AppServicePricingTier object, or null if unable to parse. </p>
    type: <xref href="com.microsoft.azure.management.appservice.PricingTier?alt=com.microsoft.azure.management.appservice.PricingTier&text=PricingTier" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Parses a serialized value to an AppServicePricingTier instance.</p>

    <p></p>
  syntax: public static PricingTier fromSkuDescription(SkuDescription skuDescription)
  uid: com.microsoft.azure.management.appservice.PricingTier.fromSkuDescription(SkuDescription)
- fullName: com.microsoft.azure.management.appservice.PricingTier.hashCode()
  name: hashCode()
  nameWithType: PricingTier.hashCode()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int hashCode()
  uid: com.microsoft.azure.management.appservice.PricingTier.hashCode()
- fullName: com.microsoft.azure.management.appservice.PricingTier.toSkuDescription()
  name: toSkuDescription()
  nameWithType: PricingTier.toSkuDescription()
  returns:
    description: <p>the underneath sku description </p>
    type: <xref href="com.microsoft.azure.management.appservice.SkuDescription?alt=com.microsoft.azure.management.appservice.SkuDescription&text=SkuDescription" data-throw-if-not-resolved="False"/>
  syntax: public SkuDescription toSkuDescription()
  uid: com.microsoft.azure.management.appservice.PricingTier.toSkuDescription()
- fullName: com.microsoft.azure.management.appservice.PricingTier.toString()
  name: toString()
  nameWithType: PricingTier.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.management.appservice.PricingTier.toString()
nameWithType: PricingTier
syntax: public class PricingTier
type: class
uid: com.microsoft.azure.management.appservice.PricingTier
fullName: com.microsoft.azure.management.appservice.PricingTier
name: PricingTier
package: com.microsoft.azure.management.appservice
summary: <p>Defines App service pricing tiers. </p>
metadata: {}
