### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(ConnectionStringBuilder connectionStringBuilder)
  name: ManagementClient(ConnectionStringBuilder connectionStringBuilder)
  nameWithType: ManagementClient.ManagementClient(ConnectionStringBuilder connectionStringBuilder)
  parameters:
  - name: connectionStringBuilder
    type: <xref href="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder?alt=com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  syntax: public ManagementClient(ConnectionStringBuilder connectionStringBuilder)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(ConnectionStringBuilder)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
  name: ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
  nameWithType: ManagementClient.ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
  parameters:
  - name: namespaceEndpointURI
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - name: clientSettings
    type: <xref href="com.microsoft.azure.servicebus.ClientSettings?alt=com.microsoft.azure.servicebus.ClientSettings&text=ClientSettings" data-throw-if-not-resolved="False"/>
  syntax: public ManagementClient(URI namespaceEndpointURI, ClientSettings clientSettings)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.ManagementClient(URI,ClientSettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.close()
  name: close()
  nameWithType: ManagementClient.close()
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if an I/O error occurs </p>
  summary: <p>Disposes and closes the managementClient. </p>
  syntax: public void close()
  uid: com.microsoft.azure.servicebus.management.ManagementClient.close()
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(QueueDescription queueDescription)
  name: createQueue(QueueDescription queueDescription)
  nameWithType: ManagementClient.createQueue(QueueDescription queueDescription)
  parameters:
  - description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> object describing the attributes with which the new queue will be created. </p>
    name: queueDescription
    type: <xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> of the newly created queue. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new queue in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> for default values of queue properties. </p>
  syntax: public QueueDescription createQueue(QueueDescription queueDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(QueueDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(String queuePath)
  name: createQueue(String queuePath)
  nameWithType: ManagementClient.createQueue(String queuePath)
  parameters:
  - description: <p>- The name of the queue relative to the service namespace base address. </p>
    name: queuePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity name is null, empty, too long or uses illegal characters. </p>
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> of the newly created queue. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new queue in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> for default values of queue properties. </p>
  syntax: public QueueDescription createQueue(String queuePath)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createQueue(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  name: createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClient.createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  parameters:
  - description: <p>- Name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- Name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> object describing the attributes with which the new rule will be created. </p>
    name: ruleDescription
    type: <xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> of the newly created rule. </p>
    type: <xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new rule for a given topic - subscription. See <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> for default values of subscription properties. </p>
  syntax: public RuleDescription createRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createRule(String,String,RuleDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(String topicPath, String subscriptionName)
  name: createSubscription(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.createSubscription(String topicPath, String subscriptionName)
  parameters:
  - description: <p>- The name of the topic relative to the service namespace base address. </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity name is null, empty, too long or uses illegal characters. </p>
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the newly created subscription. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new subscription for a given topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> for default values of subscription properties. </p>
  syntax: public SubscriptionDescription createSubscription(String topicPath, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription)
  name: createSubscription(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription)
  parameters:
  - description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> object describing the attributes with which the new subscription will be created. </p>
    name: subscriptionDescription
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the newly created subscription. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new subscription in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> for default values of subscription properties. </p>
  syntax: public SubscriptionDescription createSubscription(SubscriptionDescription subscriptionDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  name: createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  nameWithType: ManagementClient.createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  parameters:
  - description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> object describing the attributes with which the new subscription will be created. </p>
    name: subscriptionDescription
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  - description: <p>- A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> object describing the default rule. If null, then pass-through filter will be created. </p>
    name: defaultRule
    type: <xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the newly created subscription. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new subscription in the service namespace with the provided default rule. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> for default values of subscription properties. </p>
  syntax: public SubscriptionDescription createSubscription(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createSubscription(SubscriptionDescription,RuleDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(String topicPath)
  name: createTopic(String topicPath)
  nameWithType: ManagementClient.createTopic(String topicPath)
  parameters:
  - description: <p>- The name of the topic relative to the service namespace base address. </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity name is null, empty, too long or uses illegal characters. </p>
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> of the newly created topic. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> for default values of topic properties. </p>
  syntax: public TopicDescription createTopic(String topicPath)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(TopicDescription topicDescription)
  name: createTopic(TopicDescription topicDescription)
  nameWithType: ManagementClient.createTopic(TopicDescription topicDescription)
  parameters:
  - description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> object describing the attributes with which the new topic will be created. </p>
    name: topicDescription
    type: <xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityAlreadyExistsException?alt=MessagingEntityAlreadyExistsException&text=MessagingEntityAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with the same name exists under the same service namespace. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> of the newly created topic. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> for default values of topic properties. </p>
  syntax: public TopicDescription createTopic(TopicDescription topicDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.createTopic(TopicDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue(String path)
  name: deleteQueue(String path)
  nameWithType: ManagementClient.deleteQueue(String path)
  parameters:
  - description: <p>- The name of the entity relative to the service namespace base address. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with this name does not exist. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  summary: <p>Deletes the queue described by the path relative to the service namespace base address. </p>
  syntax: public Void deleteQueue(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteQueue(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteRule(String topicPath, String subscriptionName, String ruleName)
  name: deleteRule(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClient.deleteRule(String topicPath, String subscriptionName, String ruleName)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with this name does not exist. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  summary: <p>Deletes the rule for a given topic-subscription. </p>
  syntax: public Void deleteRule(String topicPath, String subscriptionName, String ruleName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteRule(String,String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription(String topicPath, String subscriptionName)
  name: deleteSubscription(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.deleteSubscription(String topicPath, String subscriptionName)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with this name does not exist. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  summary: <p>Deletes the subscription described by the topicPath and the subscriptionName. </p>
  syntax: public Void deleteSubscription(String topicPath, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteSubscription(String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic(String path)
  name: deleteTopic(String path)
  nameWithType: ManagementClient.deleteTopic(String path)
  parameters:
  - description: <p>- The name of the entity relative to the service namespace base address. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- An entity with this name does not exist. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  summary: <p>Deletes the topic described by the path relative to the service namespace base address. </p>
  syntax: public Void deleteTopic(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.deleteTopic(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo()
  name: getNamespaceInfo()
  nameWithType: ManagementClient.getNamespaceInfo()
  exceptions:
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- <xref uid="com.microsoft.azure.servicebus.management.NamespaceInfo" data-throw-if-not-resolved="false" data-raw-source="NamespaceInfo"></xref> containing namespace information. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.NamespaceInfo?alt=com.microsoft.azure.servicebus.management.NamespaceInfo&text=NamespaceInfo" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves information related to the namespace. Works with any claim (Send/Listen/Manage). </p>
  syntax: public NamespaceInfo getNamespaceInfo()
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getNamespaceInfo()
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueue(String path)
  name: getQueue(String path)
  nameWithType: ManagementClient.getQueue(String path)
  parameters:
  - description: <p>- The path of the queue relative to service bus namespace. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity with this name doesn't exist. </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- QueueDescription containing information about the queue. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves a queue from the service namespace </p>
  syntax: public QueueDescription getQueue(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueue(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo(String path)
  name: getQueueRuntimeInfo(String path)
  nameWithType: ManagementClient.getQueueRuntimeInfo(String path)
  parameters:
  - description: <p>- The path of the queue relative to service bus namespace. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity with this name doesn't exist. </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- QueueRuntimeInfo containing runtime information about the queue. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.QueueRuntimeInfo?alt=com.microsoft.azure.servicebus.management.QueueRuntimeInfo&text=QueueRuntimeInfo" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves the runtime information of a queue. </p>
  syntax: public QueueRuntimeInfo getQueueRuntimeInfo(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueueRuntimeInfo(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueues()
  name: getQueues()
  nameWithType: ManagementClient.getQueues()
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the first 100 queues. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of queues present in the namespace. </p>
  syntax: public List<QueueDescription> getQueues()
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueues()
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int count, int skip)
  name: getQueues(int count, int skip)
  nameWithType: ManagementClient.getQueues(int count, int skip)
  parameters:
  - description: <p>- The number of queues to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of queues to skip. Defaults to 0. Cannot be negative. </p>
    name: skip
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the list of queues. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of queues present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>
  syntax: public List<QueueDescription> getQueues(int count, int skip)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getQueues(int,int)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRule(String topicPath, String subscriptionName, String ruleName)
  name: getRule(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClient.getRule(String topicPath, String subscriptionName, String ruleName)
  parameters:
  - description: <p>- The path of the topic relative to service bus namespace. </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity with this name doesn't exist. </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- RuleDescription containing information about the subscription. </p>
    type: <xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves a rule for a given topic and subscription from the service namespace </p>
  syntax: public RuleDescription getRule(String topicPath, String subscriptionName, String ruleName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getRule(String,String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRules(String topicName, String subscriptionName)
  name: getRules(String topicName, String subscriptionName)
  nameWithType: ManagementClient.getRules(String topicName, String subscriptionName)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the first 100 rules. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of rules for a given topic-subscription in the namespace. </p>
  syntax: public List<RuleDescription> getRules(String topicName, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getRules(String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getRules(String topicName, String subscriptionName, int count, int skip)
  name: getRules(String topicName, String subscriptionName, int count, int skip)
  nameWithType: ManagementClient.getRules(String topicName, String subscriptionName, int count, int skip)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of rules to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of rules to skip. Defaults to 0. Cannot be negative. </p>
    name: skip
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the list of rules. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of rules for a given topic-subscription in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>
  syntax: public List<RuleDescription> getRules(String topicName, String subscriptionName, int count, int skip)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getRules(String,String,int,int)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscription(String topicPath, String subscriptionName)
  name: getSubscription(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.getSubscription(String topicPath, String subscriptionName)
  parameters:
  - description: <p>- The path of the topic relative to service bus namespace. </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity with this name doesn't exist. </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- SubscriptionDescription containing information about the subscription. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves a subscription for a given topic from the service namespace </p>
  syntax: public SubscriptionDescription getSubscription(String topicPath, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscription(String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
  name: getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
  parameters:
  - description: <p>- The path of the topic relative to service bus namespace. </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity with this name doesn't exist. </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- SubscriptionRuntimeInfo containing the runtime information about the subscription. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo?alt=com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo&text=SubscriptionRuntimeInfo" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves the runtime information of a subscription in a given topic </p>
  syntax: public SubscriptionRuntimeInfo getSubscriptionRuntimeInfo(String topicPath, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptionRuntimeInfo(String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String topicName)
  name: getSubscriptions(String topicName)
  nameWithType: ManagementClient.getSubscriptions(String topicName)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the first 100 subscriptions. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of subscriptions for a given topic in the namespace. </p>
  syntax: public List<SubscriptionDescription> getSubscriptions(String topicName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String topicName, int count, int skip)
  name: getSubscriptions(String topicName, int count, int skip)
  nameWithType: ManagementClient.getSubscriptions(String topicName, int count, int skip)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of subscriptions to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of subscriptions to skip. Defaults to 0. Cannot be negative. </p>
    name: skip
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the list of subscriptions. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of subscriptions for a given topic in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>
  syntax: public List<SubscriptionDescription> getSubscriptions(String topicName, int count, int skip)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getSubscriptions(String,int,int)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopic(String path)
  name: getTopic(String path)
  nameWithType: ManagementClient.getTopic(String path)
  parameters:
  - description: <p>- The path of the queue relative to service bus namespace. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity with this name doesn't exist. </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- Description containing information about the topic. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves a topic from the service namespace </p>
  syntax: public TopicDescription getTopic(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopic(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo(String path)
  name: getTopicRuntimeInfo(String path)
  nameWithType: ManagementClient.getTopicRuntimeInfo(String path)
  parameters:
  - description: <p>- The path of the queue relative to service bus namespace. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Entity with this name doesn't exist. </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- TopicRuntimeInfo containing runtime information about the topic. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.TopicRuntimeInfo?alt=com.microsoft.azure.servicebus.management.TopicRuntimeInfo&text=TopicRuntimeInfo" data-throw-if-not-resolved="False"/>
  summary: <p>Retrieves the runtime information of a topic </p>
  syntax: public TopicRuntimeInfo getTopicRuntimeInfo(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopicRuntimeInfo(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
  name: getTopics()
  nameWithType: ManagementClient.getTopics()
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the first 100 topics. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of topics present in the namespace. </p>
  syntax: public List<TopicDescription> getTopics()
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics()
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int count, int skip)
  name: getTopics(int count, int skip)
  nameWithType: ManagementClient.getTopics(int count, int skip)
  parameters:
  - description: <p>- The number of topics to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of topics to skip. Defaults to 0. Cannot be negative. </p>
    name: skip
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>the list of topics. </p>
    type: List&lt;<xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Retrieves the list of topics present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>
  syntax: public List<TopicDescription> getTopics(int count, int skip)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.getTopics(int,int)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.queueExists(String path)
  name: queueExists(String path)
  nameWithType: ManagementClient.queueExists(String path)
  parameters:
  - description: <p>- Path of the entity to check </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- True if the entity exists. False otherwise. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Checks whether a given queue exists or not. </p>
  syntax: public Boolean queueExists(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.queueExists(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.ruleExists(String topicPath, String subscriptionName, String ruleName)
  name: ruleExists(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClient.ruleExists(String topicPath, String subscriptionName, String ruleName)
  parameters:
  - description: <p>- Path of the topic </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- Name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- Name of the rule </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- True if the entity exists. False otherwise. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Checks whether a given rule exists or not for a given subscription. </p>
  syntax: public Boolean ruleExists(String topicPath, String subscriptionName, String ruleName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.ruleExists(String,String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists(String topicPath, String subscriptionName)
  name: subscriptionExists(String topicPath, String subscriptionName)
  nameWithType: ManagementClient.subscriptionExists(String topicPath, String subscriptionName)
  parameters:
  - description: <p>- Path of the topic </p>
    name: topicPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- Name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- True if the entity exists. False otherwise. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Checks whether a given subscription exists or not. </p>
  syntax: public Boolean subscriptionExists(String topicPath, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.subscriptionExists(String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.topicExists(String path)
  name: topicExists(String path)
  nameWithType: ManagementClient.topicExists(String path)
  parameters:
  - description: <p>- Path of the entity to check </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- path is not null / empty / too long / invalid. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: <p>- True if the entity exists. False otherwise. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Checks whether a given topic exists or not. </p>
  syntax: public Boolean topicExists(String path)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.topicExists(String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateQueue(QueueDescription queueDescription)
  name: updateQueue(QueueDescription queueDescription)
  nameWithType: ManagementClient.updateQueue(QueueDescription queueDescription)
  parameters:
  - description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> object describing the attributes with which the queue will be updated. </p>
    name: queueDescription
    type: <xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Described entity was not found. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- descriptor is null. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> of the updated queue. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.QueueDescription?alt=com.microsoft.azure.servicebus.management.QueueDescription&text=QueueDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Updates an existing queue. </p>
  syntax: public QueueDescription updateQueue(QueueDescription queueDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.updateQueue(QueueDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  name: updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClient.updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  parameters:
  - description: <p>- Name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- Name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> object describing the attributes with which the rule will be updated. </p>
    name: ruleDescription
    type: <xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Described entity was not found. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- descriptor is null. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> of the updated rule. </p>
    type: <xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Updates an existing rule. </p>
  syntax: public RuleDescription updateRule(String topicName, String subscriptionName, RuleDescription ruleDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.updateRule(String,String,RuleDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription(SubscriptionDescription subscriptionDescription)
  name: updateSubscription(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClient.updateSubscription(SubscriptionDescription subscriptionDescription)
  parameters:
  - description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> object describing the attributes with which the subscription will be updated. </p>
    name: subscriptionDescription
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Described entity was not found. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- descriptor is null. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the updated subscription. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.SubscriptionDescription?alt=com.microsoft.azure.servicebus.management.SubscriptionDescription&text=SubscriptionDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Updates an existing subscription. </p>
  syntax: public SubscriptionDescription updateSubscription(SubscriptionDescription subscriptionDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.updateSubscription(SubscriptionDescription)
- fullName: com.microsoft.azure.servicebus.management.ManagementClient.updateTopic(TopicDescription topicDescription)
  name: updateTopic(TopicDescription topicDescription)
  nameWithType: ManagementClient.updateTopic(TopicDescription topicDescription)
  parameters:
  - description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> object describing the attributes with which the topic will be updated. </p>
    name: topicDescription
    type: <xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="MessagingEntityNotFoundException?alt=MessagingEntityNotFoundException&text=MessagingEntityNotFoundException" data-throw-if-not-resolved="False"/>
    description: <p>- Described entity was not found. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>- descriptor is null. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>- The operation times out. The timeout period is initiated through ClientSettings.operationTimeout </p>
  - type: <xref href="AuthorizationFailedException?alt=AuthorizationFailedException&text=AuthorizationFailedException" data-throw-if-not-resolved="False"/>
    description: <p>- No sufficient permission to perform this operation. Please check ClientSettings.tokenProvider has correct details. </p>
  - type: <xref href="ServerBusyException?alt=ServerBusyException&text=ServerBusyException" data-throw-if-not-resolved="False"/>
    description: <p>- The server is busy. You should wait before you retry the operation. </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>- An internal error or an unexpected exception occurred. </p>
  - type: <xref href="QuotaExceededException?alt=QuotaExceededException&text=QuotaExceededException" data-throw-if-not-resolved="False"/>
    description: <p>- Either the specified size in the description is not supported or the maximum allowed quota has been reached. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted </p>
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> of the updated topic. </p>
    type: <xref href="com.microsoft.azure.servicebus.management.TopicDescription?alt=com.microsoft.azure.servicebus.management.TopicDescription&text=TopicDescription" data-throw-if-not-resolved="False"/>
  summary: <p>Updates an existing topic. </p>
  syntax: public TopicDescription updateTopic(TopicDescription topicDescription)
  uid: com.microsoft.azure.servicebus.management.ManagementClient.updateTopic(TopicDescription)
nameWithType: ManagementClient
syntax: public class ManagementClient
type: class
uid: com.microsoft.azure.servicebus.management.ManagementClient
fullName: com.microsoft.azure.servicebus.management.ManagementClient
name: ManagementClient
package: com.microsoft.azure.servicebus.management
summary: <p>Synchronous client to perform management operations on Service Bus entities. Use <xref uid="com.microsoft.azure.servicebus.management.ManagementClientAsync" data-throw-if-not-resolved="false" data-raw-source="ManagementClientAsync"></xref> for asynchronous operations. </p>
metadata: {}
