### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.HttpsIotHubConnection(ClientConfiguration config)
  name: HttpsIotHubConnection(ClientConfiguration config)
  nameWithType: HttpsIotHubConnection.HttpsIotHubConnection(ClientConfiguration config)
  parameters:
  - description: <p>the client configuration. </p>
    name: config
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientConfiguration?alt=com.microsoft.azure.sdk.iot.device.ClientConfiguration&text=ClientConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs an instance from the given <xref uid="com.microsoft.azure.sdk.iot.device.ClientConfiguration" data-throw-if-not-resolved="false" data-raw-source="ClientConfiguration"></xref> object.</p>

    <p></p>
  syntax: public HttpsIotHubConnection(ClientConfiguration config)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.HttpsIotHubConnection(ClientConfiguration)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection&text=IotHubTransportConnection" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.close()
  name: close()
  nameWithType: HttpsIotHubConnection.close()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.close()
  summary: <p>Closes the transport connection. </p>
  syntax: public void close()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.close()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.getConnectionId()
  name: getConnectionId()
  nameWithType: HttpsIotHubConnection.getConnectionId()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.getConnectionId()
  returns:
    description: <p>the UUID associated with this connection instance </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gives the UUID associated with this connection instance. This string is used in conjunction with the callbacks with connection status updates to ensure that all connection status updates are relevant to this connection object</p>

    <p></p>
  syntax: public String getConnectionId()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.getConnectionId()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open()
  name: open()
  nameWithType: HttpsIotHubConnection.open()
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.open()
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>If any exceptions are encountered while opening the connection </p>
  summary: <p>Opens the transport connection object </p>
  syntax: public void open()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.open()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.receiveMessage()
  name: receiveMessage()
  nameWithType: HttpsIotHubConnection.receiveMessage()
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the IoT Hub could not be reached. </p>
  returns:
    description: <p>an IotHubTransportMessage, or null if none exists.</p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Receives an IotHubTransportMessage, if one exists.</p>

    <p></p>
  syntax: public IotHubTransportMessage receiveMessage()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.receiveMessage()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
  name: sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
  nameWithType: HttpsIotHubConnection.sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
  parameters:
  - description: <p>the message to send. </p>
    name: httpsMessage
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsMessage?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMessage&text=HttpsMessage" data-throw-if-not-resolved="False"/>
  - description: <p>the https method (GET, POST, PUT, DELETE). </p>
    name: httpsMethod
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod&text=HttpsMethod" data-throw-if-not-resolved="False"/>
  - description: <p>the path that will be added at the end of the URI with `/`. </p>
    name: httpsPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>any extra headers to be included in the http request </p>
    name: additionalHeaders
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the IoT Hub could not be reached. </p>
  returns:
    description: <p>the ResponseMessage including status code and payload from sending message.</p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse&text=HttpsResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sends an generic https message.</p>

    <p></p>
  syntax: public HttpsResponse sendHttpsMessage(HttpsMessage httpsMessage, HttpsMethod httpsMethod, String httpsPath, Map<String, String> additionalHeaders)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendHttpsMessage(HttpsMessage,HttpsMethod,String,Map<String, String>)
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessage(Message message)
  name: sendMessage(Message message)
  nameWithType: HttpsIotHubConnection.sendMessage(Message message)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessage(Message)
  parameters:
  - description: <p>the event message.</p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the IoT Hub could not be reached. </p>
  returns:
    description: <p>the IotHubStatusCode from sending the event message.</p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sends an event message.</p>

    <p></p>
  syntax: public IotHubStatusCode sendMessage(Message message)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessage(Message)
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  name: sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  nameWithType: HttpsIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessageResult(IotHubTransportMessage,IotHubMessageResult)
  parameters:
  - description: <p>the message that was received from the service to send the result of </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage" data-throw-if-not-resolved="False"/>
  - description: <p>the message result (one of <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.COMPLETE" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#COMPLETE"></xref>, <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.ABANDON" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#ABANDON"></xref>, or <xref uid="com.microsoft.azure.sdk.iot.device.IotHubMessageResult.REJECT" data-throw-if-not-resolved="false" data-raw-source="IotHubMessageResult#REJECT"></xref>).</p>
    name: result
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubMessageResult?alt=com.microsoft.azure.sdk.iot.device.IotHubMessageResult&text=IotHubMessageResult" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>if<code>sendMessageResultÂ 

          </code> is called before <xref uid="com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.receiveMessage()" data-throw-if-not-resolved="false" data-raw-source="receiveMessage()"></xref> is called. </p>
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the IoT Hub could not be reached. </p>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sends the message result for the previously received message.</p>

    <p></p>
  syntax: public boolean sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.sendMessageResult(IotHubTransportMessage,IotHubMessageResult)
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.setListener(IotHubListener listener)
  name: setListener(IotHubListener listener)
  nameWithType: HttpsIotHubConnection.setListener(IotHubListener listener)
  overridden: com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.setListener(IotHubListener)
  parameters:
  - description: <p>the listener for connection status updates, message arrivals, and message acknowledgements </p>
    name: listener
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.IotHubListener?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubListener&text=IotHubListener" data-throw-if-not-resolved="False"/>
  summary: <p>Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements </p>
  syntax: public void setListener(IotHubListener listener)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.setListener(IotHubListener)
nameWithType: HttpsIotHubConnection
syntax: public class HttpsIotHubConnection implements IotHubTransportConnection
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection
fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection
name: HttpsIotHubConnection
package: com.microsoft.azure.sdk.iot.device.transport.https
summary: <p>An HTTPS connection between a device and an IoT Hub. Contains functionality for synchronously connecting to the different IoT Hub resource URIs. </p>
metadata: {}
