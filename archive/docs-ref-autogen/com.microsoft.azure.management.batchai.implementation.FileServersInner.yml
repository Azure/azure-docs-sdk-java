### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.FileServersInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  name: FileServersInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  nameWithType: FileServersInner.FileServersInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl?alt=com.microsoft.azure.management.batchai.implementation.BatchAIManagementClientImpl&text=BatchAIManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of FileServersInner.</p>

    <p></p>
  syntax: public FileServersInner(Retrofit retrofit, BatchAIManagementClientImpl client)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.FileServersInner(Retrofit,BatchAIManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreate(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  name: beginCreate(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  nameWithType: FileServersInner.beginCreate(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the FileServerInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public FileServerInner beginCreate(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreate(String,String,String,FileServerCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  nameWithType: FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the FileServerInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public Observable<FileServerInner> beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String,String,String,FileServerCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  name: beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  nameWithType: FileServersInner.beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public ServiceFuture<FileServerInner> beginCreateAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateAsync(String,String,String,FileServerCreateParameters,final ServiceCallback<FileServerInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  name: beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  nameWithType: FileServersInner.beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the FileServerInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<FileServerInner>> beginCreateWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginCreateWithServiceResponseAsync(String,String,String,FileServerCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDelete(String resourceGroupName, String workspaceName, String fileServerName)
  name: beginDelete(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.beginDelete(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public void beginDelete(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDelete(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public Observable<Void> beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDeleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  name: beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  nameWithType: FileServersInner.beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDeleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  name: beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.beginDeleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.create(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  name: create(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  nameWithType: FileServersInner.create(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the FileServerInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public FileServerInner create(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.create(String,String,String,FileServerCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  name: createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  nameWithType: FileServersInner.createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public Observable<FileServerInner> createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.createAsync(String,String,String,FileServerCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  name: createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  nameWithType: FileServersInner.createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public ServiceFuture<FileServerInner> createAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters, final ServiceCallback<FileServerInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.createAsync(String,String,String,FileServerCreateParameters,final ServiceCallback<FileServerInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  name: createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  nameWithType: FileServersInner.createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters to provide for File Server creation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batchai.FileServerCreateParameters?alt=com.microsoft.azure.management.batchai.FileServerCreateParameters&text=FileServerCreateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a File Server in the given workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<FileServerInner>> createWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName, FileServerCreateParameters parameters)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.createWithServiceResponseAsync(String,String,String,FileServerCreateParameters)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.delete(String resourceGroupName, String workspaceName, String fileServerName)
  name: delete(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.delete(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.delete(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.deleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  name: deleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.deleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.deleteAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.deleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  nameWithType: FileServersInner.deleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.deleteAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a File Server.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.deleteWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.get(String resourceGroupName, String workspaceName, String fileServerName)
  name: get(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.get(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the FileServerInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about a File Server.</p>

    <p></p>
  syntax: public FileServerInner get(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.get(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.getAsync(String resourceGroupName, String workspaceName, String fileServerName)
  name: getAsync(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.getAsync(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the FileServerInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a File Server.</p>

    <p></p>
  syntax: public Observable<FileServerInner> getAsync(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.getAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<FileServerInner> serviceCallback)
  name: getAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<FileServerInner> serviceCallback)
  nameWithType: FileServersInner.getAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<FileServerInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a File Server.</p>

    <p></p>
  syntax: public ServiceFuture<FileServerInner> getAsync(String resourceGroupName, String workspaceName, String fileServerName, final ServiceCallback<FileServerInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.getAsync(String,String,String,final ServiceCallback<FileServerInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  name: getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  nameWithType: FileServersInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: fileServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the FileServerInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about a File Server.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<FileServerInner>> getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String fileServerName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.getWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspace(final String resourceGroupName, final String workspaceName)
  name: listByWorkspace(final String resourceGroupName, final String workspaceName)
  nameWithType: FileServersInner.listByWorkspace(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;FileServerInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public PagedList<FileServerInner> listByWorkspace(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspace(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspace(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  name: listByWorkspace(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  nameWithType: FileServersInner.listByWorkspace(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileServersListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions&text=FileServersListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;FileServerInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public PagedList<FileServerInner> listByWorkspace(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspace(final String,final String,final FileServersListByWorkspaceOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  nameWithType: FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileServerInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public Observable<Page<FileServerInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  nameWithType: FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileServersListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions&text=FileServersListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileServerInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public Observable<Page<FileServerInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String,final String,final FileServersListByWorkspaceOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions, final ListOperationCallback<FileServerInner> serviceCallback)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions, final ListOperationCallback<FileServerInner> serviceCallback)
  nameWithType: FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions, final ListOperationCallback<FileServerInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileServersListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions&text=FileServersListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public ServiceFuture<List<FileServerInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions, final ListOperationCallback<FileServerInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String,final String,final FileServersListByWorkspaceOptions,final ListOperationCallback<FileServerInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<FileServerInner> serviceCallback)
  name: listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<FileServerInner> serviceCallback)
  nameWithType: FileServersInner.listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<FileServerInner> serviceCallback)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public ServiceFuture<List<FileServerInner>> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName, final ListOperationCallback<FileServerInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceAsync(final String,final String,final ListOperationCallback<FileServerInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNext(final String nextPageLink)
  name: listByWorkspaceNext(final String nextPageLink)
  nameWithType: FileServersInner.listByWorkspaceNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;FileServerInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public PagedList<FileServerInner> listByWorkspaceNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNext(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextAsync(final String nextPageLink)
  name: listByWorkspaceNextAsync(final String nextPageLink)
  nameWithType: FileServersInner.listByWorkspaceNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileServerInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public Observable<Page<FileServerInner>> listByWorkspaceNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<FileServerInner>> serviceFuture, final ListOperationCallback<FileServerInner> serviceCallback)
  name: listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<FileServerInner>> serviceFuture, final ListOperationCallback<FileServerInner> serviceCallback)
  nameWithType: FileServersInner.listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<FileServerInner>> serviceFuture, final ListOperationCallback<FileServerInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public ServiceFuture<List<FileServerInner>> listByWorkspaceNextAsync(final String nextPageLink, final ServiceFuture<List<FileServerInner>> serviceFuture, final ListOperationCallback<FileServerInner> serviceCallback)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextAsync(final String,final ServiceFuture<List<FileServerInner>>,final ListOperationCallback<FileServerInner>)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  name: listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  nameWithType: FileServersInner.listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;FileServerInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p>ServiceResponse&lt;PageImpl&lt;FileServerInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<FileServerInner>>> listByWorkspaceNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  name: listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: FileServersInner.listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileServerInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<FileServerInner>>> listByWorkspaceNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  name: listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  nameWithType: FileServersInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;FileServerInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<FileServerInner>>> listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceSinglePageAsync(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  name: listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  nameWithType: FileServersInner.listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. ServiceResponse&lt;PageImpl&lt;FileServerInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. ServiceResponse&lt;PageImpl&lt;FileServerInner&gt;&gt; * </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileServersListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions&text=FileServersListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;FileServerInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p>ServiceResponse&lt;PageImpl&lt;FileServerInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<FileServerInner>>> listByWorkspaceSinglePageAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceSinglePageAsync(final String,final String,final FileServersListByWorkspaceOptions)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  name: listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  nameWithType: FileServersInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileServerInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<FileServerInner>>> listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceWithServiceResponseAsync(final String,final String)
- fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  name: listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  nameWithType: FileServersInner.listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileServersListByWorkspaceOptions
    type: final <xref href="com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions?alt=com.microsoft.azure.management.batchai.FileServersListByWorkspaceOptions&text=FileServersListByWorkspaceOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;FileServerInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batchai.implementation.FileServerInner?alt=com.microsoft.azure.management.batchai.implementation.FileServerInner&text=FileServerInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Gets a list of File Servers associated with the specified workspace.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<FileServerInner>>> listByWorkspaceWithServiceResponseAsync(final String resourceGroupName, final String workspaceName, final FileServersListByWorkspaceOptions fileServersListByWorkspaceOptions)
  uid: com.microsoft.azure.management.batchai.implementation.FileServersInner.listByWorkspaceWithServiceResponseAsync(final String,final String,final FileServersListByWorkspaceOptions)
nameWithType: FileServersInner
syntax: public class FileServersInner
type: class
uid: com.microsoft.azure.management.batchai.implementation.FileServersInner
fullName: com.microsoft.azure.management.batchai.implementation.FileServersInner
name: FileServersInner
package: com.microsoft.azure.management.batchai.implementation
summary: <p>An instance of this class provides access to all the operations defined in FileServers. </p>
metadata: {}
