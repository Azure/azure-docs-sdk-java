### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.FabricTransportRemotingListenerSettings()
  name: FabricTransportRemotingListenerSettings()
  nameWithType: FabricTransportRemotingListenerSettings.FabricTransportRemotingListenerSettings()
  summary: <p>Creates a new instance of FabricTransportRemotingListenerSettings and initializes properties with default Values. </p>
  syntax: public FabricTransportRemotingListenerSettings()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.FabricTransportRemotingListenerSettings()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getDefault()
  name: getDefault()
  nameWithType: FabricTransportRemotingListenerSettings.getDefault()
  returns:
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  syntax: public static FabricTransportRemotingListenerSettings getDefault()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getDefault()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getDefault(String sectionName)
  name: getDefault(String sectionName)
  nameWithType: FabricTransportRemotingListenerSettings.getDefault(String sectionName)
  parameters:
  - name: sectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  syntax: public static FabricTransportRemotingListenerSettings getDefault(String sectionName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getDefault(String)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getDefaultEndpointResourceName()
  name: getDefaultEndpointResourceName()
  nameWithType: FabricTransportRemotingListenerSettings.getDefaultEndpointResourceName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public static String getDefaultEndpointResourceName()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getDefaultEndpointResourceName()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getEndPointResourceName()
  name: getEndPointResourceName()
  nameWithType: FabricTransportRemotingListenerSettings.getEndPointResourceName()
  returns:
    description: <p>EndpointResourceName is name of the endpoint resource defined in the service manifest. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>EndpointResourceName is name of the endpoint resource specified in ServiceManifest .This is used to obtain the port number on which to service will listen.</p>

    <p>

      <b>Remarks:</b>Default value of EndpointResourceName is "ServiceEndpoint" </p>
  syntax: public String getEndPointResourceName()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getEndPointResourceName()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getInternalSettings()
  name: getInternalSettings()
  nameWithType: FabricTransportRemotingListenerSettings.getInternalSettings()
  returns:
    type: <xref href="FabricTransportListenerSettings?alt=FabricTransportListenerSettings&text=FabricTransportListenerSettings" data-throw-if-not-resolved="False"/>
  syntax: public FabricTransportListenerSettings getInternalSettings()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getInternalSettings()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getKeepAliveTimeout()
  name: getKeepAliveTimeout()
  nameWithType: FabricTransportRemotingListenerSettings.getKeepAliveTimeout()
  returns:
    description: <p>KeepAliveTimeout as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.time.Duration"></xref></p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>KeepAliveTimeout is provides a way to configure Tcp keep-alive option.</p>

    <p>

      <b>Remarks:</b>Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option. If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time </p>
  syntax: public Duration getKeepAliveTimeout()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getKeepAliveTimeout()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getMaxConcurrentCalls()
  name: getMaxConcurrentCalls()
  nameWithType: FabricTransportRemotingListenerSettings.getMaxConcurrentCalls()
  returns:
    description: <p>MaxConcurrentCalls is the upper limit of active messages in the service. </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>MaxConcurrentCalls represents maximum number of messages actively service processes at one time.</p>

    <p>

      <b>Remarks:</b>Defaults value for the MaxConcurrentCalls is to the Number of processors. </p>
  syntax: public Long getMaxConcurrentCalls()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getMaxConcurrentCalls()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getMaxMessageSize()
  name: getMaxMessageSize()
  nameWithType: FabricTransportRemotingListenerSettings.getMaxMessageSize()
  returns:
    description: <p>Maximum size of the message in bytes. </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>MaxMessageSize represents the maximum size for a message that can be received on a channel configured with this setting.</p>

    <p>

      <b>Remarks:</b>Default Value for MaxMessageSize used is 4194304 bytes </p>
  syntax: public Long getMaxMessageSize()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getMaxMessageSize()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getMaxQueueSize()
  name: getMaxQueueSize()
  nameWithType: FabricTransportRemotingListenerSettings.getMaxQueueSize()
  returns:
    description: <p>Max Size for a Queue that recieves messages from the channel </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The maximum size, of a queue that stores messages while they are processed for an endpoint configured with this setting.</p>

    <p>

      <b>Remarks:</b>Default value is 10,000 messages </p>
  syntax: public Long getMaxQueueSize()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getMaxQueueSize()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getOperationTimeout()
  name: getOperationTimeout()
  nameWithType: FabricTransportRemotingListenerSettings.getOperationTimeout()
  returns:
    description: <p>OperationTimeout as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.time.Duration"></xref></p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method.</p>

    <p>

      <b>Remarks:</b>Default Value for Operation Timeout is set as TimeSpan.MaxValue </p>
  syntax: public Duration getOperationTimeout()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getOperationTimeout()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getSecurityCredentials()
  name: getSecurityCredentials()
  nameWithType: FabricTransportRemotingListenerSettings.getSecurityCredentials()
  returns:
    description: <p>SecurityCredentials as <xref uid="system.fabric.SecurityCredentials" data-throw-if-not-resolved="false" data-raw-source="system.fabric.SecurityCredentials"></xref></p>
    type: <xref href="system.fabric.SecurityCredentials?alt=system.fabric.SecurityCredentials&text=SecurityCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Security credentials for securing the communication</p>

    <p>

      <b>Remarks:</b> Default Value for SecurityCredentials is <xref uid="system.fabric.NoneSecurityCredentials" data-throw-if-not-resolved="false" data-raw-source="system.fabric.NoneSecurityCredentials"></xref>. Can be of type <xref uid="system.fabric.X509Credentials" data-throw-if-not-resolved="false" data-raw-source="system.fabric.X509Credentials"></xref> or <xref uid="system.fabric.X509Credentials2" data-throw-if-not-resolved="false" data-raw-source="system.fabric.X509Credentials2"></xref></p>
  syntax: public SecurityCredentials getSecurityCredentials()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.getSecurityCredentials()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.loadFrom(String sectionName)
  name: loadFrom(String sectionName)
  nameWithType: FabricTransportRemotingListenerSettings.loadFrom(String sectionName)
  parameters:
  - description: <p>Name of the section within the configuration file. if not found , it throws ArgumentException. If not specified, default name is "Config" </p>
    name: sectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>FabricTransportListenerSettings </p>
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Loads the FabricTransport settings from a section specified in the service settings configuration file - settings.xml</p>

    <p>

      <b>Remarks:</b> The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings. 1. MaxQueueSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxQueueSize()"></xref>value in long. 2. MaxMessageSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxMessageSize()"></xref>value in bytes. 3. MaxConcurrentCalls - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxConcurrentCalls()"></xref>value in long. 4. SecurityCredentials - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getSecurityCredentials()"></xref> value. 5. OperationTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getOperationTimeout()"></xref> value in seconds. 6. KeepAliveTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getKeepAliveTimeout()"></xref> value in seconds. </p>
  syntax: public static FabricTransportRemotingListenerSettings loadFrom(String sectionName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.loadFrom(String)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.loadFrom(String sectionName, String configPackageName)
  name: loadFrom(String sectionName, String configPackageName)
  nameWithType: FabricTransportRemotingListenerSettings.loadFrom(String sectionName, String configPackageName)
  parameters:
  - description: <p>Name of the section within the configuration file. if not found , it throws ArgumentException. </p>
    name: sectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Name of the configuration package. if not found Settings.xml in the configuration package path, it throws ArgumentException. If not specified, default name is "Config" </p>
    name: configPackageName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>FabricTransportListenerSettings </p>
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Loads the FabricTransport settings from a section specified in the service settings configuration file - settings.xml</p>

    <p>

      <b>Remarks:</b> The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings. 1. MaxQueueSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxQueueSize()"></xref>value in long. 2. MaxMessageSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxMessageSize()"></xref>value in bytes. 3. MaxConcurrentCalls - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxConcurrentCalls()"></xref>value in long. 4. SecurityCredentials - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getSecurityCredentials()"></xref> value. 5. OperationTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getOperationTimeout()"></xref> value in seconds. 6. KeepAliveTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getKeepAliveTimeout()"></xref> value in seconds. </p>
  syntax: public static FabricTransportRemotingListenerSettings loadFrom(String sectionName, String configPackageName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.loadFrom(String,String)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setEndPointResourceName(String endPointResourceName)
  name: setEndPointResourceName(String endPointResourceName)
  nameWithType: FabricTransportRemotingListenerSettings.setEndPointResourceName(String endPointResourceName)
  parameters:
  - description: <p>EndpointResourceName is name of the endpoint resource defined in the service manifest. </p>
    name: endPointResourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>EndpointResourceName is name of the endpoint resource specified in ServiceManifest .This is used to obtain the port number on which to service will listen.</p>

    <p>

      <b>Remarks:</b>Default value of EndpointResourceName is "ServiceEndpoint" </p>
  syntax: public void setEndPointResourceName(String endPointResourceName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setEndPointResourceName(String)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setKeepAliveTimeout(Duration keepAliveTimeout)
  name: setKeepAliveTimeout(Duration keepAliveTimeout)
  nameWithType: FabricTransportRemotingListenerSettings.setKeepAliveTimeout(Duration keepAliveTimeout)
  parameters:
  - description: <p>KeepAliveTimeout as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.time.Duration"></xref></p>
    name: keepAliveTimeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>KeepAliveTimeout is provides a way to configure Tcp keep-alive option.</p>

    <p>

      <b>Remarks:</b>Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option. If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time </p>
  syntax: public void setKeepAliveTimeout(Duration keepAliveTimeout)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setKeepAliveTimeout(Duration)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setMaxConcurrentCalls(Long maxConcurrentCalls)
  name: setMaxConcurrentCalls(Long maxConcurrentCalls)
  nameWithType: FabricTransportRemotingListenerSettings.setMaxConcurrentCalls(Long maxConcurrentCalls)
  parameters:
  - description: <p>MaxConcurrentCalls is the upper limit of active messages in the service. </p>
    name: maxConcurrentCalls
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>MaxConcurrentCalls represents maximum number of messages actively service processes at one time.</p>

    <p>

      <b>Remarks:</b>Defaults value for the MaxConcurrentCalls is to the Number of processors. </p>
  syntax: public void setMaxConcurrentCalls(Long maxConcurrentCalls)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setMaxConcurrentCalls(Long)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setMaxMessageSize(Long maxMessageSize)
  name: setMaxMessageSize(Long maxMessageSize)
  nameWithType: FabricTransportRemotingListenerSettings.setMaxMessageSize(Long maxMessageSize)
  parameters:
  - description: <p>Maximum size of the message in bytes. </p>
    name: maxMessageSize
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>MaxMessageSize represents the maximum size for a message that can be received on a channel configured with this setting.</p>

    <p>

      <b>Remarks:</b>Default Value for MaxMessageSize used is 4194304 bytes </p>
  syntax: public void setMaxMessageSize(Long maxMessageSize)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setMaxMessageSize(Long)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setMaxQueueSize(Long maxQueueSize)
  name: setMaxQueueSize(Long maxQueueSize)
  nameWithType: FabricTransportRemotingListenerSettings.setMaxQueueSize(Long maxQueueSize)
  parameters:
  - description: <p>Max Size for a Queue that recieves messages from the channel </p>
    name: maxQueueSize
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The maximum size, of a queue that stores messages while they are processed for an endpoint configured with this setting.</p>

    <p>

      <b>Remarks:</b>Default value is 10,000 messages </p>
  syntax: public void setMaxQueueSize(Long maxQueueSize)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setMaxQueueSize(Long)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setOperationTimeout(Duration operationTimeout)
  name: setOperationTimeout(Duration operationTimeout)
  nameWithType: FabricTransportRemotingListenerSettings.setOperationTimeout(Duration operationTimeout)
  parameters:
  - description: <p>OperationTimeout as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="java.time.Duration"></xref></p>
    name: operationTimeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method.</p>

    <p>

      <b>Remarks:</b>Default Value for Operation Timeout is set as TimeSpan.MaxValue </p>
  syntax: public void setOperationTimeout(Duration operationTimeout)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setOperationTimeout(Duration)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
  name: setSecurityCredentials(SecurityCredentials securityCredentials)
  nameWithType: FabricTransportRemotingListenerSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
  parameters:
  - description: <p>SecurityCredentials as <xref uid="system.fabric.SecurityCredentials" data-throw-if-not-resolved="false" data-raw-source="system.fabric.SecurityCredentials"></xref></p>
    name: securityCredentials
    type: <xref href="system.fabric.SecurityCredentials?alt=system.fabric.SecurityCredentials&text=SecurityCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Security credentials for securing the communication</p>

    <p></p>
  syntax: public void setSecurityCredentials(SecurityCredentials securityCredentials)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.setSecurityCredentials(SecurityCredentials)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.tryLoadFrom(String sectionName)
  name: tryLoadFrom(String sectionName)
  nameWithType: FabricTransportRemotingListenerSettings.tryLoadFrom(String sectionName)
  parameters:
  - description: <p>Name of the section within the configuration file. if not found , it return false If not specified, default name is "Config"</p>
    name: sectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Boolean specifies whether the settings get loaded successfully from Config. It returns true when load from Config succeeded, else return false. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Try to load the FabricTransport settings from a section specified in the service settings configuration file - settings.xml</p>

    <p>

      <b>Remarks:</b> The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings. 1. MaxQueueSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxQueueSize()"></xref>value in long. 2. MaxMessageSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxMessageSize()"></xref>value in bytes. 3. MaxConcurrentCalls - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxConcurrentCalls()"></xref>value in long. 4. SecurityCredentials - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getSecurityCredentials()"></xref> value. 5. OperationTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getOperationTimeout()"></xref> value in seconds. 6. KeepAliveTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getKeepAliveTimeout()"></xref> value in seconds. </p>
  syntax: public static FabricTransportRemotingListenerSettings tryLoadFrom(String sectionName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.tryLoadFrom(String)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.tryLoadFrom(String sectionName, String configPackageName)
  name: tryLoadFrom(String sectionName, String configPackageName)
  nameWithType: FabricTransportRemotingListenerSettings.tryLoadFrom(String sectionName, String configPackageName)
  parameters:
  - description: <p>Name of the section within the configuration file. if not found , it return false </p>
    name: sectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Name of the configuration package. if not found Settings.xml in the configuration package path, it return false. If not specified, default name is "Config"</p>
    name: configPackageName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Boolean specifies whether the settings get loaded successfully from Config. It returns true when load from Config succeeded, else return false. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Try to load the FabricTransport settings from a section specified in the service settings configuration file - settings.xml</p>

    <p>

      <b>Remarks:</b> The following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings. 1. MaxQueueSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxQueueSize()"></xref>value in long. 2. MaxMessageSize - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxMessageSize()"></xref>value in bytes. 3. MaxConcurrentCalls - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getMaxConcurrentCalls()"></xref>value in long. 4. SecurityCredentials - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getSecurityCredentials()"></xref> value. 5. OperationTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getOperationTimeout()"></xref> value in seconds. 6. KeepAliveTimeoutInSeconds - <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FabricTransportSettings#getKeepAliveTimeout()"></xref> value in seconds. </p>
  syntax: public static FabricTransportRemotingListenerSettings tryLoadFrom(String sectionName, String configPackageName)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings.tryLoadFrom(String,String)
nameWithType: FabricTransportRemotingListenerSettings
syntax: public class FabricTransportRemotingListenerSettings
type: class
uid: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings
fullName: microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings
name: FabricTransportRemotingListenerSettings
package: microsoft.servicefabric.services.remoting.fabrictransport.runtime
summary: <p>Settings that configures the FabricTransport Listener. </p>
metadata: {}
