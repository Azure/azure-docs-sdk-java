### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.active()
  name: active()
  nameWithType: TaskCounts.active()
  returns:
    description: <p>the active value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the active value.</p>

    <p></p>
  syntax: public int active()
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.active()
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.completed()
  name: completed()
  nameWithType: TaskCounts.completed()
  returns:
    description: <p>the completed value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the completed value.</p>

    <p></p>
  syntax: public int completed()
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.completed()
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.failed()
  name: failed()
  nameWithType: TaskCounts.failed()
  returns:
    description: <p>the failed value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the failed value.</p>

    <p></p>
  syntax: public int failed()
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.failed()
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.running()
  name: running()
  nameWithType: TaskCounts.running()
  returns:
    description: <p>the running value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the running value.</p>

    <p></p>
  syntax: public int running()
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.running()
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.succeeded()
  name: succeeded()
  nameWithType: TaskCounts.succeeded()
  returns:
    description: <p>the succeeded value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the succeeded value.</p>

    <p></p>
  syntax: public int succeeded()
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.succeeded()
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.withActive(int active)
  name: withActive(int active)
  nameWithType: TaskCounts.withActive(int active)
  parameters:
  - description: <p>the active value to set </p>
    name: active
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskCounts object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the active value.</p>

    <p></p>
  syntax: public TaskCounts withActive(int active)
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.withActive(int)
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.withCompleted(int completed)
  name: withCompleted(int completed)
  nameWithType: TaskCounts.withCompleted(int completed)
  parameters:
  - description: <p>the completed value to set </p>
    name: completed
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskCounts object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the completed value.</p>

    <p></p>
  syntax: public TaskCounts withCompleted(int completed)
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.withCompleted(int)
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.withFailed(int failed)
  name: withFailed(int failed)
  nameWithType: TaskCounts.withFailed(int failed)
  parameters:
  - description: <p>the failed value to set </p>
    name: failed
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskCounts object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the failed value.</p>

    <p></p>
  syntax: public TaskCounts withFailed(int failed)
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.withFailed(int)
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.withRunning(int running)
  name: withRunning(int running)
  nameWithType: TaskCounts.withRunning(int running)
  parameters:
  - description: <p>the running value to set </p>
    name: running
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskCounts object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the running value.</p>

    <p></p>
  syntax: public TaskCounts withRunning(int running)
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.withRunning(int)
- fullName: com.microsoft.azure.batch.protocol.models.TaskCounts.withSucceeded(int succeeded)
  name: withSucceeded(int succeeded)
  nameWithType: TaskCounts.withSucceeded(int succeeded)
  parameters:
  - description: <p>the succeeded value to set </p>
    name: succeeded
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskCounts object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the succeeded value.</p>

    <p></p>
  syntax: public TaskCounts withSucceeded(int succeeded)
  uid: com.microsoft.azure.batch.protocol.models.TaskCounts.withSucceeded(int)
nameWithType: TaskCounts
syntax: public class TaskCounts
type: class
uid: com.microsoft.azure.batch.protocol.models.TaskCounts
fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
name: TaskCounts
package: com.microsoft.azure.batch.protocol.models
summary: <p>The task counts for a job. </p>
metadata: {}
