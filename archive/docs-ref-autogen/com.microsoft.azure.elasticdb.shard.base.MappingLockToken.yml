### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.MappingLockToken(UUID lockOwnerId)
  name: MappingLockToken(UUID lockOwnerId)
  nameWithType: MappingLockToken.MappingLockToken(UUID lockOwnerId)
  parameters:
  - description: <p>The lock owner id </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Instantiates an instance of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref> with the given lock owner id.</p>

    <p></p>
  syntax: public MappingLockToken(UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.MappingLockToken(UUID)
fields:
- field:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.ForceUnlock
  name: ForceUnlock
  nameWithType: MappingLockToken.ForceUnlock
  summary: <p>Token that can be used to force an unlock on any locked mapping. </p>
  syntax: public static final MappingLockToken ForceUnlock= new MappingLockToken(UUID.fromString("FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF"))
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.ForceUnlock
- field:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.NoLock
  name: NoLock
  nameWithType: MappingLockToken.NoLock
  summary: <p>Token representing the default state where the mapping isn't locked. </p>
  syntax: public static final MappingLockToken NoLock= new MappingLockToken(new UUID(0L, 0L))
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.NoLock
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.create()
  name: create()
  nameWithType: MappingLockToken.create()
  returns:
    description: <p>An instance of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref></p>
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref>.</p>

    <p></p>
  syntax: public static MappingLockToken create()
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.create()
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.equals(MappingLockToken other)
  name: equals(MappingLockToken other)
  nameWithType: MappingLockToken.equals(MappingLockToken other)
  parameters:
  - name: other
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if they both belong to the same lock owner </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Compares two instances of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref> to see if they have the same owner.</p>

    <p></p>
  syntax: public boolean equals(MappingLockToken other)
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.equals(MappingLockToken)
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.equals(Object obj)
  name: equals(Object obj)
  nameWithType: MappingLockToken.equals(Object obj)
  parameters:
  - description: <p>The object to compare with the current object. </p>
    name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if the specified object is equal to the current object; otherwise, false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Determines whether the specified object is equal to the current object.</p>

    <p></p>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.equals(Object)
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.getLockOwnerId()
  name: getLockOwnerId()
  nameWithType: MappingLockToken.getLockOwnerId()
  returns:
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  syntax: public UUID getLockOwnerId()
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.getLockOwnerId()
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.hashCode()
  name: hashCode()
  nameWithType: MappingLockToken.hashCode()
  returns:
    description: <p>Hash code for the object. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Calculates the hash code for this instance.</p>

    <p></p>
  syntax: public int hashCode()
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.hashCode()
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.opEquality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  name: opEquality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  nameWithType: MappingLockToken.opEquality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  parameters:
  - description: <p>An instance of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref></p>
    name: leftMappingLockToken
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  - description: <p>An instance of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref></p>
    name: rightMappingLockToken
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if both belong to the same lock owner </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Equality operator.</p>

    <p></p>
  syntax: public static boolean opEquality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.opEquality(MappingLockToken,MappingLockToken)
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.opInequality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  name: opInequality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  nameWithType: MappingLockToken.opInequality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  parameters:
  - description: <p>An instance of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref></p>
    name: leftMappingLockToken
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  - description: <p>An instance of <xref uid="com.microsoft.azure.elasticdb.shard.base.MappingLockToken" data-throw-if-not-resolved="false" data-raw-source="MappingLockToken"></xref></p>
    name: rightMappingLockToken
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if both belong to the same lock owner </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Inequality operator.</p>

    <p></p>
  syntax: public static boolean opInequality(MappingLockToken leftMappingLockToken, MappingLockToken rightMappingLockToken)
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.opInequality(MappingLockToken,MappingLockToken)
- fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.setLockOwnerId(UUID value)
  name: setLockOwnerId(UUID value)
  nameWithType: MappingLockToken.setLockOwnerId(UUID value)
  parameters:
  - name: value
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  syntax: public void setLockOwnerId(UUID value)
  uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken.setLockOwnerId(UUID)
nameWithType: MappingLockToken
syntax: public class MappingLockToken
type: class
uid: com.microsoft.azure.elasticdb.shard.base.MappingLockToken
fullName: com.microsoft.azure.elasticdb.shard.base.MappingLockToken
name: MappingLockToken
package: com.microsoft.azure.elasticdb.shard.base
summary: <p>Public type that represents the owner of a lock held on a mapping. This class is immutable. </p>
metadata: {}
