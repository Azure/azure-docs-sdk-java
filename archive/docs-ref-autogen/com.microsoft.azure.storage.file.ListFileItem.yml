### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.storage.file.ListFileItem.getParent()
  name: getParent()
  nameWithType: ListFileItem.getParent()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudFileDirectory"></xref> object which represents the file item's parent.</p>
    type: <xref href="com.microsoft.azure.storage.file.CloudFileDirectory?alt=com.microsoft.azure.storage.file.CloudFileDirectory&text=CloudFileDirectory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the parent for the file item.</p>

    <p></p>
  syntax: public CloudFileDirectory getParent()
  uid: com.microsoft.azure.storage.file.ListFileItem.getParent()
- fullName: com.microsoft.azure.storage.file.ListFileItem.getShare()
  name: getShare()
  nameWithType: ListFileItem.getShare()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.file.CloudFileShare" data-throw-if-not-resolved="false" data-raw-source="CloudFileShare"></xref> object which represents the file item's share.</p>
    type: <xref href="com.microsoft.azure.storage.file.CloudFileShare?alt=com.microsoft.azure.storage.file.CloudFileShare&text=CloudFileShare" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the share for the file item.</p>

    <p></p>
  syntax: public CloudFileShare getShare()
  uid: com.microsoft.azure.storage.file.ListFileItem.getShare()
- fullName: com.microsoft.azure.storage.file.ListFileItem.getStorageUri()
  name: getStorageUri()
  nameWithType: ListFileItem.getStorageUri()
  returns:
    description: <p>A <code><xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref></code> object which represents the file item's URI. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of URIs for all storage locations of the file item.</p>

    <p></p>
  syntax: public StorageUri getStorageUri()
  uid: com.microsoft.azure.storage.file.ListFileItem.getStorageUri()
- fullName: com.microsoft.azure.storage.file.ListFileItem.getUri()
  name: getUri()
  nameWithType: ListFileItem.getUri()
  returns:
    description: <p>A <code>java.net.URI</code> object which represents the file item's URI. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the URI for the file item.</p>

    <p></p>
  syntax: public URI getUri()
  uid: com.microsoft.azure.storage.file.ListFileItem.getUri()
nameWithType: ListFileItem
syntax: public interface ListFileItem
type: interface
uid: com.microsoft.azure.storage.file.ListFileItem
fullName: com.microsoft.azure.storage.file.ListFileItem
name: ListFileItem
package: com.microsoft.azure.storage.file
summary: <p>Represents an item that may be returned by a file listing operation. </p>
metadata: {}
