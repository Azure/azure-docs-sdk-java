### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.ServiceEndpointCollection()
  name: ServiceEndpointCollection()
  nameWithType: ServiceEndpointCollection.ServiceEndpointCollection()
  summary: <p>Instantiates an empty ServiceEndpointsCollection </p>
  syntax: public ServiceEndpointCollection()
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.ServiceEndpointCollection()
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.ServiceEndpointCollection(String listenerName, String endpointAddress)
  name: ServiceEndpointCollection(String listenerName, String endpointAddress)
  nameWithType: ServiceEndpointCollection.ServiceEndpointCollection(String listenerName, String endpointAddress)
  parameters:
  - description: <p>Listener name of the endpoint </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Address of the endpoint </p>
    name: endpointAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Instantiates the ServiceEndpointsCollection with a single endpoint, identified by the listener name.</p>

    <p></p>
  syntax: public ServiceEndpointCollection(String listenerName, String endpointAddress)
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.ServiceEndpointCollection(String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Serializable" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.addEndpoint(String listenerName, String endpointAddress)
  name: addEndpoint(String listenerName, String endpointAddress)
  nameWithType: ServiceEndpointCollection.addEndpoint(String listenerName, String endpointAddress)
  parameters:
  - description: <p>listenerName </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Address of the endpoint </p>
    name: endpointAddress
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="FabricElementAlreadyExistsException?alt=FabricElementAlreadyExistsException&text=FabricElementAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>if fabric element already exists. </p>
  summary: <p>Adds the endpoints in the input EndpointsCollection class to the EndpointsCollection. </p>
  syntax: public void addEndpoint(String listenerName, String endpointAddress)
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.addEndpoint(String,String)
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.addEndpoints(ServiceEndpointCollection newEndpoints)
  name: addEndpoints(ServiceEndpointCollection newEndpoints)
  nameWithType: ServiceEndpointCollection.addEndpoints(ServiceEndpointCollection newEndpoints)
  parameters:
  - description: <p>input EndpointsCollection </p>
    name: newEndpoints
    type: <xref href="microsoft.servicefabric.services.communication.ServiceEndpointCollection?alt=microsoft.servicefabric.services.communication.ServiceEndpointCollection&text=ServiceEndpointCollection" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="FabricElementAlreadyExistsException?alt=FabricElementAlreadyExistsException&text=FabricElementAlreadyExistsException" data-throw-if-not-resolved="False"/>
    description: <p>if fabric element already exists </p>
  summary: >-
    <p>Adds the endpoints in the input EndpointsCollection class to the EndpointsCollection.</p>

    <p></p>
  syntax: public void addEndpoints(ServiceEndpointCollection newEndpoints)
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.addEndpoints(ServiceEndpointCollection)
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.getEndpointAddress(String listenerName)
  name: getEndpointAddress(String listenerName)
  nameWithType: ServiceEndpointCollection.getEndpointAddress(String listenerName)
  parameters:
  - description: <p>Listener name </p>
    name: listenerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if an endpoint with the listener name exists, False otherwise </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the endpoint identified by the listener name.</p>

    <p></p>
  syntax: public String getEndpointAddress(String listenerName)
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.getEndpointAddress(String)
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.getFirstEndpointAddress()
  name: getFirstEndpointAddress()
  nameWithType: ServiceEndpointCollection.getFirstEndpointAddress()
  returns:
    description: <p>True if there is at-least one endpoint in the EndpointsCollection, false otherwise </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the first endpoint address in the EndpointsCollection</p>

    <p></p>
  syntax: public String getFirstEndpointAddress()
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.getFirstEndpointAddress()
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.parseEndpointsString(String endpointsString)
  name: parseEndpointsString(String endpointsString)
  nameWithType: ServiceEndpointCollection.parseEndpointsString(String endpointsString)
  parameters:
  - description: <p>string form of endpointsCollection </p>
    name: endpointsString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>True if the string can be parsed to a valid EndpointsCollection, False otherwise </p>
    type: <xref href="microsoft.servicefabric.services.communication.ServiceEndpointCollection?alt=microsoft.servicefabric.services.communication.ServiceEndpointCollection&text=ServiceEndpointCollection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs an EndpointsCollection from a string version of the endpoints. String form of EndpointsCollection is of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public static ServiceEndpointCollection parseEndpointsString(String endpointsString)
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.parseEndpointsString(String)
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.toReadOnlyHashMap()
  name: toReadOnlyHashMap()
  nameWithType: ServiceEndpointCollection.toReadOnlyHashMap()
  returns:
    description: <p>Returns an unmodifiable view of the specified map. </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the address of the user service replica to the address of read-only hashmap. </p>
  syntax: public Map<String, String> toReadOnlyHashMap()
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.toReadOnlyHashMap()
- fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection.toString()
  name: toString()
  nameWithType: ServiceEndpointCollection.toString()
  returns:
    description: <p>String form of the endpointsCollection </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts the endpointsCollection to a JSON string of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax: public String toString()
  uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection.toString()
nameWithType: ServiceEndpointCollection
syntax: public class ServiceEndpointCollection
type: class
uid: microsoft.servicefabric.services.communication.ServiceEndpointCollection
fullName: microsoft.servicefabric.services.communication.ServiceEndpointCollection
name: ServiceEndpointCollection
package: microsoft.servicefabric.services.communication
summary: <p>This class represents the endpoints of a Reliable service. Each endpoint has a listener name and the address of that listener. </p>
metadata: {}
