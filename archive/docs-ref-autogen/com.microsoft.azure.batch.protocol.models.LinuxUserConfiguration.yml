### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid()
  name: gid()
  nameWithType: LinuxUserConfiguration.gid()
  returns:
    description: <p>the gid value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.</p>

    <p></p>
  syntax: public Integer gid()
  uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.gid()
- fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey()
  name: sshPrivateKey()
  nameWithType: LinuxUserConfiguration.sshPrivateKey()
  returns:
    description: <p>the sshPrivateKey value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).</p>

    <p></p>
  syntax: public String sshPrivateKey()
  uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.sshPrivateKey()
- fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid()
  name: uid()
  nameWithType: LinuxUserConfiguration.uid()
  returns:
    description: <p>the uid value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.</p>

    <p></p>
  syntax: public Integer uid()
  uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.uid()
- fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid(Integer gid)
  name: withGid(Integer gid)
  nameWithType: LinuxUserConfiguration.withGid(Integer gid)
  parameters:
  - description: <p>the gid value to set </p>
    name: gid
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LinuxUserConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration?alt=com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration&text=LinuxUserConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.</p>

    <p></p>
  syntax: public LinuxUserConfiguration withGid(Integer gid)
  uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withGid(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey(String sshPrivateKey)
  name: withSshPrivateKey(String sshPrivateKey)
  nameWithType: LinuxUserConfiguration.withSshPrivateKey(String sshPrivateKey)
  parameters:
  - description: <p>the sshPrivateKey value to set </p>
    name: sshPrivateKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LinuxUserConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration?alt=com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration&text=LinuxUserConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).</p>

    <p></p>
  syntax: public LinuxUserConfiguration withSshPrivateKey(String sshPrivateKey)
  uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withSshPrivateKey(String)
- fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid(Integer uid)
  name: withUid(Integer uid)
  nameWithType: LinuxUserConfiguration.withUid(Integer uid)
  parameters:
  - description: <p>the uid value to set </p>
    name: uid
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LinuxUserConfiguration object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration?alt=com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration&text=LinuxUserConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.</p>

    <p></p>
  syntax: public LinuxUserConfiguration withUid(Integer uid)
  uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration.withUid(Integer)
nameWithType: LinuxUserConfiguration
syntax: public class LinuxUserConfiguration
type: class
uid: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
fullName: com.microsoft.azure.batch.protocol.models.LinuxUserConfiguration
name: LinuxUserConfiguration
package: com.microsoft.azure.batch.protocol.models
summary: <p>Properties used to create a user account on a Linux node. </p>
metadata: {}
