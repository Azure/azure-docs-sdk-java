### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container)
  name: CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container)
  nameWithType: CloudBlobDirectory.CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the blob directory's address. </p>
    name: uri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the blob directory's prefix. </p>
    name: prefix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object that represents the associated service client. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  - name: container
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class using the specified address, directory parent, and client.</p>

    <p></p>
  syntax: protected CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.CloudBlobDirectory(final StorageUri,final String,final CloudBlobClient,final CloudBlobContainer)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container, final CloudBlobDirectory parent)
  name: CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container, final CloudBlobDirectory parent)
  nameWithType: CloudBlobDirectory.CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container, final CloudBlobDirectory parent)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the blob directory's address. </p>
    name: uri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the blob directory's prefix. </p>
    name: prefix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object that represents the associated service client. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  - name: container
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>CloudBlobDirectory</code> object that represents the parent directory, if applicable. </p>
    name: parent
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobDirectory?alt=com.microsoft.azure.storage.blob.CloudBlobDirectory&text=CloudBlobDirectory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class using the specified address, directory parent, and client.</p>

    <p></p>
  syntax: protected CloudBlobDirectory(final StorageUri uri, final String prefix, final CloudBlobClient client, final CloudBlobContainer container, final CloudBlobDirectory parent)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.CloudBlobDirectory(final StorageUri,final String,final CloudBlobClient,final CloudBlobContainer,final CloudBlobDirectory)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getAppendBlobReference(final String blobName)
  name: getAppendBlobReference(final String blobName)
  nameWithType: CloudBlobDirectory.getAppendBlobReference(final String blobName)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the blob.</p>
    name: blobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudAppendBlob" data-throw-if-not-resolved="false" data-raw-source="CloudAppendBlob"></xref> object that represents a reference to the specified append blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudAppendBlob?alt=com.microsoft.azure.storage.blob.CloudAppendBlob&text=CloudAppendBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.blob.CloudAppendBlob" data-throw-if-not-resolved="false" data-raw-source="CloudAppendBlob"></xref> object that represents an append blob in the directory.</p>

    <p></p>
  syntax: public CloudAppendBlob getAppendBlobReference(final String blobName)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getAppendBlobReference(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getAppendBlobReference(final String blobName, final String snapshotID)
  name: getAppendBlobReference(final String blobName, final String snapshotID)
  nameWithType: CloudBlobDirectory.getAppendBlobReference(final String blobName, final String snapshotID)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the blob. </p>
    name: blobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot ID of the blob.</p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudAppendBlob" data-throw-if-not-resolved="false" data-raw-source="CloudAppendBlob"></xref> object that represents a reference to the specified append blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudAppendBlob?alt=com.microsoft.azure.storage.blob.CloudAppendBlob&text=CloudAppendBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.blob.CloudAppendBlob" data-throw-if-not-resolved="false" data-raw-source="CloudAppendBlob"></xref> object that represents an append blob in the directory, using the specified snapshot ID.</p>

    <p></p>
  syntax: public CloudAppendBlob getAppendBlobReference(final String blobName, final String snapshotID)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getAppendBlobReference(final String,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getBlockBlobReference(final String blobName)
  name: getBlockBlobReference(final String blobName)
  nameWithType: CloudBlobDirectory.getBlockBlobReference(final String blobName)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the blob.</p>
    name: blobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlockBlob" data-throw-if-not-resolved="false" data-raw-source="CloudBlockBlob"></xref> object that represents a reference to the specified block blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.blob.CloudBlockBlob" data-throw-if-not-resolved="false" data-raw-source="CloudBlockBlob"></xref> object that represents a block blob in this directory.</p>

    <p></p>
  syntax: public CloudBlockBlob getBlockBlobReference(final String blobName)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getBlockBlobReference(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getBlockBlobReference(final String blobName, final String snapshotID)
  name: getBlockBlobReference(final String blobName, final String snapshotID)
  nameWithType: CloudBlobDirectory.getBlockBlobReference(final String blobName, final String snapshotID)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the blob. </p>
    name: blobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot ID of the blob.</p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlockBlob" data-throw-if-not-resolved="false" data-raw-source="CloudBlockBlob"></xref> object that represents a reference to the specified block blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlockBlob?alt=com.microsoft.azure.storage.blob.CloudBlockBlob&text=CloudBlockBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.blob.CloudBlockBlob" data-throw-if-not-resolved="false" data-raw-source="CloudBlockBlob"></xref> object that represents a block blob in this directory, using the specified snapshot ID.</p>

    <p></p>
  syntax: public CloudBlockBlob getBlockBlobReference(final String blobName, final String snapshotID)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getBlockBlobReference(final String,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getContainer()
  name: getContainer()
  nameWithType: CloudBlobDirectory.getContainer()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getContainer()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobContainer" data-throw-if-not-resolved="false" data-raw-source="CloudBlobContainer"></xref> that represents the container for this directory.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobContainer?alt=com.microsoft.azure.storage.blob.CloudBlobContainer&text=CloudBlobContainer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the container for this directory.</p>

    <p></p>
  syntax: public CloudBlobContainer getContainer()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getContainer()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getDirectoryReference(String directoryName)
  name: getDirectoryReference(String directoryName)
  nameWithType: CloudBlobDirectory.getDirectoryReference(String directoryName)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the virtual subdirectory.</p>
    name: directoryName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <code>CloudBlobDirectory</code> object that represents a virtual blob directory beneath this directory.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobDirectory?alt=com.microsoft.azure.storage.blob.CloudBlobDirectory&text=CloudBlobDirectory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a virtual blob directory beneath this directory.</p>

    <p></p>
  syntax: public CloudBlobDirectory getDirectoryReference(String directoryName)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getDirectoryReference(String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getPageBlobReference(final String blobName)
  name: getPageBlobReference(final String blobName)
  nameWithType: CloudBlobDirectory.getPageBlobReference(final String blobName)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the blob.</p>
    name: blobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudPageBlob" data-throw-if-not-resolved="false" data-raw-source="CloudPageBlob"></xref> object that represents a reference to the specified page blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.blob.CloudPageBlob" data-throw-if-not-resolved="false" data-raw-source="CloudPageBlob"></xref> object that represents a page blob in the directory.</p>

    <p></p>
  syntax: public CloudPageBlob getPageBlobReference(final String blobName)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getPageBlobReference(final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getPageBlobReference(final String blobName, final String snapshotID)
  name: getPageBlobReference(final String blobName, final String snapshotID)
  nameWithType: CloudBlobDirectory.getPageBlobReference(final String blobName, final String snapshotID)
  parameters:
  - description: <p>A <code>String</code> that represents the name of the blob. </p>
    name: blobName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that represents the snapshot ID of the blob.</p>
    name: snapshotID
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudPageBlob" data-throw-if-not-resolved="false" data-raw-source="CloudPageBlob"></xref> object that represents a reference to the specified page blob.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudPageBlob?alt=com.microsoft.azure.storage.blob.CloudPageBlob&text=CloudPageBlob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.blob.CloudPageBlob" data-throw-if-not-resolved="false" data-raw-source="CloudPageBlob"></xref> object that represents a page blob in the directory, using the specified snapshot ID.</p>

    <p></p>
  syntax: public CloudPageBlob getPageBlobReference(final String blobName, final String snapshotID)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getPageBlobReference(final String,final String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getParent()
  name: getParent()
  nameWithType: CloudBlobDirectory.getParent()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getParent()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobDirectory" data-throw-if-not-resolved="false" data-raw-source="CloudBlobDirectory"></xref> object that represents the parent of this directory.</p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobDirectory?alt=com.microsoft.azure.storage.blob.CloudBlobDirectory&text=CloudBlobDirectory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the parent directory of this directory.</p>

    <p></p>
  syntax: public CloudBlobDirectory getParent()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getParent()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getPrefix()
  name: getPrefix()
  nameWithType: CloudBlobDirectory.getPrefix()
  returns:
    description: <p>A <code>String</code> that represents the prefix for this directory. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the prefix for this directory.</p>

    <p></p>
  syntax: public String getPrefix()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getPrefix()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getServiceClient()
  name: getServiceClient()
  nameWithType: CloudBlobDirectory.getServiceClient()
  returns:
    description: <p>An <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object that represents the service client associated with the directory. </p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the Blob service client associated with this directory.</p>

    <p></p>
  syntax: public CloudBlobClient getServiceClient()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getServiceClient()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getStorageUri()
  name: getStorageUri()
  nameWithType: CloudBlobDirectory.getStorageUri()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getStorageUri()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> that represents the list of URIs for all locations.. </p>
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of URIs for all locations.</p>

    <p></p>
  syntax: public final StorageUri getStorageUri()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getStorageUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.getUri()
  name: getUri()
  nameWithType: CloudBlobDirectory.getUri()
  overridden: com.microsoft.azure.storage.blob.ListBlobItem.getUri()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the URI for this directory. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the URI for this directory.</p>

    <p></p>
  syntax: public URI getUri()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.getUri()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobs()
  name: listBlobs()
  nameWithType: CloudBlobDirectory.listBlobs()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="false" data-raw-source="ListBlobItem"></xref> objects that represent the block items in this container.</p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns an enumerable collection of blob items for the directory.</p>

    <p></p>
  syntax: public Iterable<ListBlobItem> listBlobs()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobs()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobs(String prefix)
  name: listBlobs(String prefix)
  nameWithType: CloudBlobDirectory.listBlobs(String prefix)
  parameters:
  - description: <p>A <code>String</code> that represents the blob name prefix.</p>
    name: prefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="false" data-raw-source="ListBlobItem"></xref> objects that represent the block items whose names begin with the specified prefix in this directory.</p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns an enumerable collection of blob items whose names begin with the specified prefix for the directory.</p>

    <p></p>
  syntax: public Iterable<ListBlobItem> listBlobs(String prefix)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobs(String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobs(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final BlobRequestOptions options, final OperationContext opContext)
  name: listBlobs(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final BlobRequestOptions options, final OperationContext opContext)
  nameWithType: CloudBlobDirectory.listBlobs(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final BlobRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> that represents the prefix of the blob name. </p>
    name: prefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <code>true</code> to indicate that the returned list will be flat; <code>false</code> to indicate that the returned list will be hierarchical. </p>
    name: useFlatBlobListing
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.util.EnumSet</code> object that contains <xref uid="com.microsoft.azure.storage.blob.BlobListingDetails" data-throw-if-not-resolved="false" data-raw-source="BlobListingDetails"></xref> values that indicate whether snapshots, metadata, and/or uncommitted blocks are returned. Committed blocks are always returned. </p>
    name: listingDetails
    type: final EnumSet&lt;<xref href="com.microsoft.azure.storage.blob.BlobListingDetails?alt=com.microsoft.azure.storage.blob.BlobListingDetails&text=BlobListingDetails" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="false" data-raw-source="ListBlobItem"></xref> objects that represent the block items whose names begin with the specified prefix in this directory.</p>
    type: Iterable&lt;<xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns an enumerable collection of blob items whose names begin with the specified prefix, using the specified flat or hierarchical option, listing details options, request options, and operation context.</p>

    <p></p>
  syntax: public Iterable<ListBlobItem> listBlobs(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final BlobRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobs(String,final boolean,final EnumSet<BlobListingDetails>,final BlobRequestOptions,final OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobsSegmented()
  name: listBlobsSegmented()
  nameWithType: CloudBlobDirectory.listBlobsSegmented()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="false" data-raw-source="ListBlobItem"></xref> objects that represent the blob items in the directory.</p>
    type: <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a result segment of an enumerable collection of blob items in the directory.</p>

    <p></p>
  syntax: public ResultSegment<ListBlobItem> listBlobsSegmented()
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobsSegmented()
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobsSegmented(String prefix)
  name: listBlobsSegmented(String prefix)
  nameWithType: CloudBlobDirectory.listBlobsSegmented(String prefix)
  parameters:
  - description: <p>A <code>String</code> that represents the prefix of the blob name.</p>
    name: prefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="false" data-raw-source="ListBlobItem"></xref> objects that represent the blob items whose names begin with the specified prefix in the directory.</p>
    type: <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a result segment containing a collection of blob items whose names begin with the specified prefix.</p>

    <p></p>
  syntax: public ResultSegment<ListBlobItem> listBlobsSegmented(String prefix)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobsSegmented(String)
- fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobsSegmented(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final Integer maxResults, final ResultContinuation continuationToken, final BlobRequestOptions options, final OperationContext opContext)
  name: listBlobsSegmented(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final Integer maxResults, final ResultContinuation continuationToken, final BlobRequestOptions options, final OperationContext opContext)
  nameWithType: CloudBlobDirectory.listBlobsSegmented(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final Integer maxResults, final ResultContinuation continuationToken, final BlobRequestOptions options, final OperationContext opContext)
  parameters:
  - description: <p>A <code>String</code> that represents the prefix of the blob name. </p>
    name: prefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <code>true</code> to indicate that the returned list will be flat; <code>false</code> to indicate that the returned list will be hierarchical. </p>
    name: useFlatBlobListing
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.util.EnumSet</code> object that contains <xref uid="com.microsoft.azure.storage.blob.BlobListingDetails" data-throw-if-not-resolved="false" data-raw-source="BlobListingDetails"></xref> values that indicate whether snapshots, metadata, and/or uncommitted blocks are returned. Committed blocks are always returned. </p>
    name: listingDetails
    type: final EnumSet&lt;<xref href="com.microsoft.azure.storage.blob.BlobListingDetails?alt=com.microsoft.azure.storage.blob.BlobListingDetails&text=BlobListingDetails" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>The maximum number of results to retrieve. </p>
    name: maxResults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.ResultContinuation" data-throw-if-not-resolved="false" data-raw-source="ResultContinuation"></xref> object that represents a continuation token returned by a previous listing operation. </p>
    name: continuationToken
    type: final <xref href="com.microsoft.azure.storage.ResultContinuation?alt=com.microsoft.azure.storage.ResultContinuation&text=ResultContinuation" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.ResultSegment" data-throw-if-not-resolved="false" data-raw-source="ResultSegment"></xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.blob.ListBlobItem" data-throw-if-not-resolved="false" data-raw-source="ListBlobItem"></xref> objects that represent the block items whose names begin with the specified prefix in the directory.</p>
    type: <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.storage.blob.ListBlobItem?alt=com.microsoft.azure.storage.blob.ListBlobItem&text=ListBlobItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a result segment containing a collection of blob items whose names begin with the specified prefix, using the specified flat or hierarchical option, listing details options, request options, and operation context.</p>

    <p></p>
  syntax: public ResultSegment<ListBlobItem> listBlobsSegmented(String prefix, final boolean useFlatBlobListing, final EnumSet<BlobListingDetails> listingDetails, final Integer maxResults, final ResultContinuation continuationToken, final BlobRequestOptions options, final OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlobDirectory.listBlobsSegmented(String,final boolean,final EnumSet<BlobListingDetails>,final Integer,final ResultContinuation,final BlobRequestOptions,final OperationContext)
nameWithType: CloudBlobDirectory
syntax: public class CloudBlobDirectory implements ListBlobItem
type: class
uid: com.microsoft.azure.storage.blob.CloudBlobDirectory
fullName: com.microsoft.azure.storage.blob.CloudBlobDirectory
name: CloudBlobDirectory
package: com.microsoft.azure.storage.blob
summary: >-
  <p>Represents a virtual directory of blobs, designated by a delimiter character. </p>

  <p>Containers, which are encapsulated as <xref uid="com.microsoft.azure.storage.blob.CloudBlobContainer" data-throw-if-not-resolved="false" data-raw-source="CloudBlobContainer"></xref> objects, hold directories, and directories hold block blobs and page blobs. Directories can also contain sub-directories. </p>
metadata: {}
