### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContent(String resourceGroupName, String containerName, String containerGroupName)
  name: getLogContent(String resourceGroupName, String containerName, String containerGroupName)
  nameWithType: ContainerGroups.getLogContent(String resourceGroupName, String containerName, String containerGroupName)
  parameters:
  - description: <p>the Azure resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container instance name </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container group name </p>
    name: containerGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>all available log lines </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the log content for the specified container instance within a container group.</p>

    <p></p>
  syntax: public String getLogContent(String resourceGroupName, String containerName, String containerGroupName)
  uid: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContent(String,String,String)
- fullName: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContent(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  name: getLogContent(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  nameWithType: ContainerGroups.getLogContent(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  parameters:
  - description: <p>the Azure resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container instance name </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container group name </p>
    name: containerGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>only get the last log lines up to this </p>
    name: tailLineCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the log lines from the end, up to the number specified </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the log content for the specified container instance within a container group.</p>

    <p></p>
  syntax: public String getLogContent(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  uid: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContent(String,String,String,int)
- fullName: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName)
  name: getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName)
  nameWithType: ContainerGroups.getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName)
  parameters:
  - description: <p>the Azure resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container instance name </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container group name </p>
    name: containerGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>a representation of the future computation of this call </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the log content for the specified container instance within a container group.</p>

    <p></p>
  syntax: public Observable<String> getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName)
  uid: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContentAsync(String,String,String)
- fullName: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  name: getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  nameWithType: ContainerGroups.getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  parameters:
  - description: <p>the Azure resource group name </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container instance name </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the container group name </p>
    name: containerGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>only get the last log lines up to this </p>
    name: tailLineCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>a representation of the future computation of this call </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the log content for the specified container instance within a container group.</p>

    <p></p>
  syntax: public Observable<String> getLogContentAsync(String resourceGroupName, String containerName, String containerGroupName, int tailLineCount)
  uid: com.microsoft.azure.management.containerinstance.ContainerGroups.getLogContentAsync(String,String,String,int)
nameWithType: ContainerGroups
syntax: public interface ContainerGroups extends SupportsCreating<ContainerGroup.DefinitionStages.Blank>,HasManager<ContainerInstanceManager>,HasInner<ContainerGroupsInner>,SupportsBatchCreation<ContainerGroup>,SupportsGettingByResourceGroup<ContainerGroup>,SupportsGettingById<ContainerGroup>,SupportsDeletingByResourceGroup,SupportsDeletingById,SupportsBatchDeletion,SupportsListingByResourceGroup<ContainerGroup>,SupportsListing<ContainerGroup>
type: interface
uid: com.microsoft.azure.management.containerinstance.ContainerGroups
fullName: com.microsoft.azure.management.containerinstance.ContainerGroups
name: ContainerGroups
package: com.microsoft.azure.management.containerinstance
summary: <p>Entry point to the container instance management API. </p>
metadata: {}
