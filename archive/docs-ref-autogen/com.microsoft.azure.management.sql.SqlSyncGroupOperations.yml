### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
methods:
- fullName: com.microsoft.azure.management.sql.SqlSyncGroupOperations.getBySqlServer(String resourceGroupName, String sqlServerName, String databaseName, String name)
  name: getBySqlServer(String resourceGroupName, String sqlServerName, String databaseName, String name)
  nameWithType: SqlSyncGroupOperations.getBySqlServer(String resourceGroupName, String sqlServerName, String databaseName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL server resource </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL Database parent resource </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="com.microsoft.azure.management.sql.SqlSyncGroup?alt=com.microsoft.azure.management.sql.SqlSyncGroup&text=SqlSyncGroup" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public SqlSyncGroup getBySqlServer(String resourceGroupName, String sqlServerName, String databaseName, String name)
  uid: com.microsoft.azure.management.sql.SqlSyncGroupOperations.getBySqlServer(String,String,String,String)
- fullName: com.microsoft.azure.management.sql.SqlSyncGroupOperations.getBySqlServerAsync(String resourceGroupName, String sqlServerName, String databaseName, String name)
  name: getBySqlServerAsync(String resourceGroupName, String sqlServerName, String databaseName, String name)
  nameWithType: SqlSyncGroupOperations.getBySqlServerAsync(String resourceGroupName, String sqlServerName, String databaseName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL server parent resource </p>
    name: sqlServerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of SQL Database parent resource </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the child resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the found resource </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.sql.SqlSyncGroup?alt=com.microsoft.azure.management.sql.SqlSyncGroup&text=SqlSyncGroup" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Asynchronously gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group.</p>

    <p></p>
  syntax: public Observable<SqlSyncGroup> getBySqlServerAsync(String resourceGroupName, String sqlServerName, String databaseName, String name)
  uid: com.microsoft.azure.management.sql.SqlSyncGroupOperations.getBySqlServerAsync(String,String,String,String)
- fullName: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIds(Region region)
  name: listSyncDatabaseIds(Region region)
  nameWithType: SqlSyncGroupOperations.listSyncDatabaseIds(Region region)
  parameters:
  - description: <p>the region where the resource is located. </p>
    name: region
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a paged list of database IDs if successful. </p>
    type: <xref href="PagedList%3CString%3E?alt=PagedList%3CString%3E&text=PagedList%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a collection of sync database ids.</p>

    <p></p>
  syntax: public PagedList<String> listSyncDatabaseIds(Region region)
  uid: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIds(Region)
- fullName: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIds(String locationName)
  name: listSyncDatabaseIds(String locationName)
  nameWithType: SqlSyncGroupOperations.listSyncDatabaseIds(String locationName)
  parameters:
  - description: <p>The name of the region where the resource is located. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a paged list of database IDs if successful. </p>
    type: <xref href="PagedList%3CString%3E?alt=PagedList%3CString%3E&text=PagedList%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a collection of sync database ids.</p>

    <p></p>
  syntax: public PagedList<String> listSyncDatabaseIds(String locationName)
  uid: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIds(String)
- fullName: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIdsAsync(Region region)
  name: listSyncDatabaseIdsAsync(Region region)
  nameWithType: SqlSyncGroupOperations.listSyncDatabaseIdsAsync(Region region)
  parameters:
  - description: <p>the region where the resource is located. </p>
    name: region
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.arm.Region?alt=com.microsoft.azure.management.resources.fluentcore.arm.Region&text=Region" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a paged list of database IDs if successful. </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a collection of sync database ids.</p>

    <p></p>
  syntax: public Observable<String> listSyncDatabaseIdsAsync(Region region)
  uid: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIdsAsync(Region)
- fullName: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIdsAsync(String locationName)
  name: listSyncDatabaseIdsAsync(String locationName)
  nameWithType: SqlSyncGroupOperations.listSyncDatabaseIdsAsync(String locationName)
  parameters:
  - description: <p>The name of the region where the resource is located. </p>
    name: locationName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a paged list of database IDs if successful. </p>
    type: <xref href="Observable%3CString%3E?alt=Observable%3CString%3E&text=Observable%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a collection of sync database ids.</p>

    <p></p>
  syntax: public Observable<String> listSyncDatabaseIdsAsync(String locationName)
  uid: com.microsoft.azure.management.sql.SqlSyncGroupOperations.listSyncDatabaseIdsAsync(String)
nameWithType: SqlSyncGroupOperations
syntax: public interface SqlSyncGroupOperations extends SupportsCreating<SqlSyncGroupOperations.DefinitionStages.WithSqlServer>
type: interface
uid: com.microsoft.azure.management.sql.SqlSyncGroupOperations
fullName: com.microsoft.azure.management.sql.SqlSyncGroupOperations
name: SqlSyncGroupOperations
package: com.microsoft.azure.management.sql
summary: <p>A representation of the Azure SQL Sync Group operations. </p>
metadata: {}
