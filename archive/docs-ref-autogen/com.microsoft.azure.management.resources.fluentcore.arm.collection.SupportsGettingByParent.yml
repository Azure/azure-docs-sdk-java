### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T, ParentT extends Resource &HasResourceGroup, ManagerT>.getByParent(ParentT parentResource, String name)
  name: getByParent(ParentT parentResource, String name)
  nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>.getByParent(ParentT parentResource, String name)
  parameters:
  - description: <p>the instance of parent resource </p>
    name: parentResource
    type: <xref href="ParentT?alt=ParentT&text=ParentT" data-throw-if-not-resolved="False"/>
  - description: <p>the name of resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public T getByParent(ParentT parentResource, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParent(ParentT,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T, ParentT extends Resource &HasResourceGroup, ManagerT>.getByParent(String resourceGroup, String parentName, String name)
  name: getByParent(String resourceGroup, String parentName, String name)
  nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>.getByParent(String resourceGroup, String parentName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroup
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of parent resource </p>
    name: parentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public T getByParent(String resourceGroup, String parentName, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParent(String,String,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T, ParentT extends Resource &HasResourceGroup, ManagerT>.getByParentAsync(ParentT parentResource, String name)
  name: getByParentAsync(ParentT parentResource, String name)
  nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(ParentT parentResource, String name)
  parameters:
  - description: <p>the instance of parent resource. </p>
    name: parentResource
    type: <xref href="ParentT?alt=ParentT&text=ParentT" data-throw-if-not-resolved="False"/>
  - description: <p>the name of resource. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the found resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public Observable<T> getByParentAsync(ParentT parentResource, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(ParentT,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T, ParentT extends Resource &HasResourceGroup, ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)
  name: getByParentAsync(String resourceGroup, String parentName, String name)
  nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroup
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of parent resource </p>
    name: parentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the found resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public Observable<T> getByParentAsync(String resourceGroup, String parentName, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(String,String,String)
nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>
syntax: public interface SupportsGettingByParent<T,ParentT extends Resource &HasResourceGroup,ManagerT>
type: interface
typeParameters:
- description: <p>the type of the resource collection </p>
  name: T
- description: <p>the parent resource type </p>
  name: ParentT
- description: <p>the client manager type representing the service </p>
  name: ManagerT
uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent
fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T,ParentT,ManagerT>
name: SupportsGettingByParent<T,ParentT,ManagerT>
package: com.microsoft.azure.management.resources.fluentcore.arm.collection
summary: >-
  <p>Provides access to getting a specific Azure resource based on its resource group and parent. </p>

  <p>(Note this interface is not intended to be implemented by user code.) </p>
metadata: {}
