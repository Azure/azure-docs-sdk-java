### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.attributes()
  name: attributes()
  nameWithType: CertificateBundle.attributes()
  returns:
    description: <p>the attributes value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateAttributes?alt=com.microsoft.azure.keyvault.models.CertificateAttributes&text=CertificateAttributes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the attributes value.</p>

    <p></p>
  syntax: public CertificateAttributes attributes()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.attributes()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.cer()
  name: cer()
  nameWithType: CertificateBundle.cer()
  returns:
    description: <p>the cer value </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the cer value.</p>

    <p></p>
  syntax: public byte [] cer()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.cer()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.certificateIdentifier()
  name: certificateIdentifier()
  nameWithType: CertificateBundle.certificateIdentifier()
  returns:
    description: <p>certificate identifier </p>
    type: <xref href="com.microsoft.azure.keyvault.CertificateIdentifier?alt=com.microsoft.azure.keyvault.CertificateIdentifier&text=CertificateIdentifier" data-throw-if-not-resolved="False"/>
  summary: <p>The certificate identifier. </p>
  syntax: public CertificateIdentifier certificateIdentifier()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.certificateIdentifier()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.contentType()
  name: contentType()
  nameWithType: CertificateBundle.contentType()
  returns:
    description: <p>the contentType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the contentType value.</p>

    <p></p>
  syntax: public String contentType()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.contentType()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.id()
  name: id()
  nameWithType: CertificateBundle.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.id()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.keyIdentifier()
  name: keyIdentifier()
  nameWithType: CertificateBundle.keyIdentifier()
  returns:
    description: <p>key identifier </p>
    type: <xref href="com.microsoft.azure.keyvault.KeyIdentifier?alt=com.microsoft.azure.keyvault.KeyIdentifier&text=KeyIdentifier" data-throw-if-not-resolved="False"/>
  summary: <p>The key identifier. </p>
  syntax: public KeyIdentifier keyIdentifier()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.keyIdentifier()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.kid()
  name: kid()
  nameWithType: CertificateBundle.kid()
  returns:
    description: <p>the kid value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the kid value.</p>

    <p></p>
  syntax: public String kid()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.kid()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.policy()
  name: policy()
  nameWithType: CertificateBundle.policy()
  returns:
    description: <p>the policy value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the policy value.</p>

    <p></p>
  syntax: public CertificatePolicy policy()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.policy()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.secretIdentifier()
  name: secretIdentifier()
  nameWithType: CertificateBundle.secretIdentifier()
  returns:
    description: <p>secret identifier </p>
    type: <xref href="com.microsoft.azure.keyvault.SecretIdentifier?alt=com.microsoft.azure.keyvault.SecretIdentifier&text=SecretIdentifier" data-throw-if-not-resolved="False"/>
  summary: <p>The secret identifier. </p>
  syntax: public SecretIdentifier secretIdentifier()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.secretIdentifier()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.sid()
  name: sid()
  nameWithType: CertificateBundle.sid()
  returns:
    description: <p>the sid value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the sid value.</p>

    <p></p>
  syntax: public String sid()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.sid()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.tags()
  name: tags()
  nameWithType: CertificateBundle.tags()
  returns:
    description: <p>the tags value </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tags value.</p>

    <p></p>
  syntax: public Map<String, String> tags()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.tags()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.toString()
  name: toString()
  nameWithType: CertificateBundle.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.toString()
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.withAttributes(CertificateAttributes attributes)
  name: withAttributes(CertificateAttributes attributes)
  nameWithType: CertificateBundle.withAttributes(CertificateAttributes attributes)
  parameters:
  - description: <p>the attributes value to set </p>
    name: attributes
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateAttributes?alt=com.microsoft.azure.keyvault.models.CertificateAttributes&text=CertificateAttributes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the attributes value.</p>

    <p></p>
  syntax: public CertificateBundle withAttributes(CertificateAttributes attributes)
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.withAttributes(CertificateAttributes)
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.withCer(byte[] cer)
  name: withCer(byte[] cer)
  nameWithType: CertificateBundle.withCer(byte[] cer)
  parameters:
  - description: <p>the cer value to set </p>
    name: cer
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the cer value.</p>

    <p></p>
  syntax: public CertificateBundle withCer(byte[] cer)
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.withCer(byte [])
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.withContentType(String contentType)
  name: withContentType(String contentType)
  nameWithType: CertificateBundle.withContentType(String contentType)
  parameters:
  - description: <p>the contentType value to set </p>
    name: contentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the contentType value.</p>

    <p></p>
  syntax: public CertificateBundle withContentType(String contentType)
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.withContentType(String)
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: CertificateBundle.withTags(Map<String, String> tags)
  parameters:
  - description: <p>the tags value to set </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tags value.</p>

    <p></p>
  syntax: public CertificateBundle withTags(Map<String, String> tags)
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.withTags(Map<String, String>)
- fullName: com.microsoft.azure.keyvault.models.CertificateBundle.x509Thumbprint()
  name: x509Thumbprint()
  nameWithType: CertificateBundle.x509Thumbprint()
  returns:
    description: <p>the x509Thumbprint value </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the x509Thumbprint value.</p>

    <p></p>
  syntax: public byte [] x509Thumbprint()
  uid: com.microsoft.azure.keyvault.models.CertificateBundle.x509Thumbprint()
nameWithType: CertificateBundle
syntax: public class CertificateBundle
type: class
uid: com.microsoft.azure.keyvault.models.CertificateBundle
fullName: com.microsoft.azure.keyvault.models.CertificateBundle
name: CertificateBundle
package: com.microsoft.azure.keyvault.models
summary: <p>A certificate bundle consists of a certificate (X509) plus its attributes. </p>
metadata: {}
