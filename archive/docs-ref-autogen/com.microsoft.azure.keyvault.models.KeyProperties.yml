### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.exportable()
  name: exportable()
  nameWithType: KeyProperties.exportable()
  returns:
    description: <p>the exportable value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the exportable value.</p>

    <p></p>
  syntax: public Boolean exportable()
  uid: com.microsoft.azure.keyvault.models.KeyProperties.exportable()
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.keySize()
  name: keySize()
  nameWithType: KeyProperties.keySize()
  returns:
    description: <p>the keySize value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the keySize value.</p>

    <p></p>
  syntax: public Integer keySize()
  uid: com.microsoft.azure.keyvault.models.KeyProperties.keySize()
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.keyType()
  name: keyType()
  nameWithType: KeyProperties.keyType()
  returns:
    description: <p>the keyType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the keyType value.</p>

    <p></p>
  syntax: public String keyType()
  uid: com.microsoft.azure.keyvault.models.KeyProperties.keyType()
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.reuseKey()
  name: reuseKey()
  nameWithType: KeyProperties.reuseKey()
  returns:
    description: <p>the reuseKey value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the reuseKey value.</p>

    <p></p>
  syntax: public Boolean reuseKey()
  uid: com.microsoft.azure.keyvault.models.KeyProperties.reuseKey()
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.withExportable(Boolean exportable)
  name: withExportable(Boolean exportable)
  nameWithType: KeyProperties.withExportable(Boolean exportable)
  parameters:
  - description: <p>the exportable value to set </p>
    name: exportable
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyProperties object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyProperties?alt=com.microsoft.azure.keyvault.models.KeyProperties&text=KeyProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the exportable value.</p>

    <p></p>
  syntax: public KeyProperties withExportable(Boolean exportable)
  uid: com.microsoft.azure.keyvault.models.KeyProperties.withExportable(Boolean)
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.withKeySize(Integer keySize)
  name: withKeySize(Integer keySize)
  nameWithType: KeyProperties.withKeySize(Integer keySize)
  parameters:
  - description: <p>the keySize value to set </p>
    name: keySize
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyProperties object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyProperties?alt=com.microsoft.azure.keyvault.models.KeyProperties&text=KeyProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the keySize value.</p>

    <p></p>
  syntax: public KeyProperties withKeySize(Integer keySize)
  uid: com.microsoft.azure.keyvault.models.KeyProperties.withKeySize(Integer)
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.withKeyType(String keyType)
  name: withKeyType(String keyType)
  nameWithType: KeyProperties.withKeyType(String keyType)
  parameters:
  - description: <p>the keyType value to set </p>
    name: keyType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyProperties object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyProperties?alt=com.microsoft.azure.keyvault.models.KeyProperties&text=KeyProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the keyType value.</p>

    <p></p>
  syntax: public KeyProperties withKeyType(String keyType)
  uid: com.microsoft.azure.keyvault.models.KeyProperties.withKeyType(String)
- fullName: com.microsoft.azure.keyvault.models.KeyProperties.withReuseKey(Boolean reuseKey)
  name: withReuseKey(Boolean reuseKey)
  nameWithType: KeyProperties.withReuseKey(Boolean reuseKey)
  parameters:
  - description: <p>the reuseKey value to set </p>
    name: reuseKey
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the KeyProperties object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.KeyProperties?alt=com.microsoft.azure.keyvault.models.KeyProperties&text=KeyProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the reuseKey value.</p>

    <p></p>
  syntax: public KeyProperties withReuseKey(Boolean reuseKey)
  uid: com.microsoft.azure.keyvault.models.KeyProperties.withReuseKey(Boolean)
nameWithType: KeyProperties
syntax: public class KeyProperties
type: class
uid: com.microsoft.azure.keyvault.models.KeyProperties
fullName: com.microsoft.azure.keyvault.models.KeyProperties
name: KeyProperties
package: com.microsoft.azure.keyvault.models
summary: <p>Properties of the key pair backing a certificate. </p>
metadata: {}
