### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.resources.Dependency.dependsOn()
  name: dependsOn()
  nameWithType: Dependency.dependsOn()
  returns:
    description: <p>the dependsOn value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.resources.BasicDependency?alt=com.microsoft.azure.management.resources.BasicDependency&text=BasicDependency" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the dependsOn value.</p>

    <p></p>
  syntax: public List<BasicDependency> dependsOn()
  uid: com.microsoft.azure.management.resources.Dependency.dependsOn()
- fullName: com.microsoft.azure.management.resources.Dependency.id()
  name: id()
  nameWithType: Dependency.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.management.resources.Dependency.id()
- fullName: com.microsoft.azure.management.resources.Dependency.resourceName()
  name: resourceName()
  nameWithType: Dependency.resourceName()
  returns:
    description: <p>the resourceName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the resourceName value.</p>

    <p></p>
  syntax: public String resourceName()
  uid: com.microsoft.azure.management.resources.Dependency.resourceName()
- fullName: com.microsoft.azure.management.resources.Dependency.resourceType()
  name: resourceType()
  nameWithType: Dependency.resourceType()
  returns:
    description: <p>the resourceType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the resourceType value.</p>

    <p></p>
  syntax: public String resourceType()
  uid: com.microsoft.azure.management.resources.Dependency.resourceType()
- fullName: com.microsoft.azure.management.resources.Dependency.withDependsOn(List<BasicDependency> dependsOn)
  name: withDependsOn(List<BasicDependency> dependsOn)
  nameWithType: Dependency.withDependsOn(List<BasicDependency> dependsOn)
  parameters:
  - description: <p>the dependsOn value to set </p>
    name: dependsOn
    type: List&lt;<xref href="com.microsoft.azure.management.resources.BasicDependency?alt=com.microsoft.azure.management.resources.BasicDependency&text=BasicDependency" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Dependency object itself. </p>
    type: <xref href="com.microsoft.azure.management.resources.Dependency?alt=com.microsoft.azure.management.resources.Dependency&text=Dependency" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the dependsOn value.</p>

    <p></p>
  syntax: public Dependency withDependsOn(List<BasicDependency> dependsOn)
  uid: com.microsoft.azure.management.resources.Dependency.withDependsOn(List<BasicDependency>)
- fullName: com.microsoft.azure.management.resources.Dependency.withId(String id)
  name: withId(String id)
  nameWithType: Dependency.withId(String id)
  parameters:
  - description: <p>the id value to set </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Dependency object itself. </p>
    type: <xref href="com.microsoft.azure.management.resources.Dependency?alt=com.microsoft.azure.management.resources.Dependency&text=Dependency" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the id value.</p>

    <p></p>
  syntax: public Dependency withId(String id)
  uid: com.microsoft.azure.management.resources.Dependency.withId(String)
- fullName: com.microsoft.azure.management.resources.Dependency.withResourceName(String resourceName)
  name: withResourceName(String resourceName)
  nameWithType: Dependency.withResourceName(String resourceName)
  parameters:
  - description: <p>the resourceName value to set </p>
    name: resourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Dependency object itself. </p>
    type: <xref href="com.microsoft.azure.management.resources.Dependency?alt=com.microsoft.azure.management.resources.Dependency&text=Dependency" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the resourceName value.</p>

    <p></p>
  syntax: public Dependency withResourceName(String resourceName)
  uid: com.microsoft.azure.management.resources.Dependency.withResourceName(String)
- fullName: com.microsoft.azure.management.resources.Dependency.withResourceType(String resourceType)
  name: withResourceType(String resourceType)
  nameWithType: Dependency.withResourceType(String resourceType)
  parameters:
  - description: <p>the resourceType value to set </p>
    name: resourceType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Dependency object itself. </p>
    type: <xref href="com.microsoft.azure.management.resources.Dependency?alt=com.microsoft.azure.management.resources.Dependency&text=Dependency" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the resourceType value.</p>

    <p></p>
  syntax: public Dependency withResourceType(String resourceType)
  uid: com.microsoft.azure.management.resources.Dependency.withResourceType(String)
nameWithType: Dependency
syntax: public class Dependency
type: class
uid: com.microsoft.azure.management.resources.Dependency
fullName: com.microsoft.azure.management.resources.Dependency
name: Dependency
package: com.microsoft.azure.management.resources
summary: <p>Deployment dependency information. </p>
metadata: {}
