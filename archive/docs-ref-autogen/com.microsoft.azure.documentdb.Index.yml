### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.documentdb.Index.Index(IndexKind indexKind)
  name: Index(IndexKind indexKind)
  nameWithType: Index.Index(IndexKind indexKind)
  parameters:
  - description: <p>the kind of the index </p>
    name: indexKind
    type: <xref href="com.microsoft.azure.documentdb.IndexKind?alt=com.microsoft.azure.documentdb.IndexKind&text=IndexKind" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: protected Index(IndexKind indexKind)
  uid: com.microsoft.azure.documentdb.Index.Index(IndexKind)
- fullName: com.microsoft.azure.documentdb.Index.Index(JSONObject jsonObject, IndexKind indexKind)
  name: Index(JSONObject jsonObject, IndexKind indexKind)
  nameWithType: Index.Index(JSONObject jsonObject, IndexKind indexKind)
  parameters:
  - description: <p>the json object that represents the index. </p>
    name: jsonObject
    type: <xref href="JSONObject?alt=JSONObject&text=JSONObject" data-throw-if-not-resolved="False"/>
  - description: <p>the kind of the index </p>
    name: indexKind
    type: <xref href="com.microsoft.azure.documentdb.IndexKind?alt=com.microsoft.azure.documentdb.IndexKind&text=IndexKind" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: protected Index(JSONObject jsonObject, IndexKind indexKind)
  uid: com.microsoft.azure.documentdb.Index.Index(JSONObject,IndexKind)
- fullName: com.microsoft.azure.documentdb.Index.Index(String jsonString, IndexKind indexKind)
  name: Index(String jsonString, IndexKind indexKind)
  nameWithType: Index.Index(String jsonString, IndexKind indexKind)
  parameters:
  - description: <p>the json string that represents the index. </p>
    name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the kind of the index </p>
    name: indexKind
    type: <xref href="com.microsoft.azure.documentdb.IndexKind?alt=com.microsoft.azure.documentdb.IndexKind&text=IndexKind" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: protected Index(String jsonString, IndexKind indexKind)
  uid: com.microsoft.azure.documentdb.Index.Index(String,IndexKind)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Serializable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.documentdb.JsonSerializable?alt=com.microsoft.azure.documentdb.JsonSerializable&text=JsonSerializable" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.documentdb.JsonSerializable.get(String)
- com.microsoft.azure.documentdb.JsonSerializable.getBoolean(String)
- com.microsoft.azure.documentdb.JsonSerializable.getCollection(String)
- com.microsoft.azure.documentdb.JsonSerializable.getDouble(String)
- com.microsoft.azure.documentdb.JsonSerializable.getHashMap()
- com.microsoft.azure.documentdb.JsonSerializable.getInt(String)
- com.microsoft.azure.documentdb.JsonSerializable.getLogger()
- com.microsoft.azure.documentdb.JsonSerializable.getLong(String)
- com.microsoft.azure.documentdb.JsonSerializable.getMapper()
- com.microsoft.azure.documentdb.JsonSerializable.getObject(String)
- com.microsoft.azure.documentdb.JsonSerializable.getObjectByPath(Collection<String>)
- com.microsoft.azure.documentdb.JsonSerializable.getString(String)
- com.microsoft.azure.documentdb.JsonSerializable.has(String)
- com.microsoft.azure.documentdb.JsonSerializable.JsonSerializable()
- com.microsoft.azure.documentdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
- com.microsoft.azure.documentdb.JsonSerializable.JsonSerializable(String)
- com.microsoft.azure.documentdb.JsonSerializable.JsonSerializable(JSONObject)
- com.microsoft.azure.documentdb.JsonSerializable.remove(String)
- com.microsoft.azure.documentdb.JsonSerializable.toJson()
- com.microsoft.azure.documentdb.JsonSerializable.toJson(SerializationFormattingPolicy)
- com.microsoft.azure.documentdb.JsonSerializable.toString()
- com.microsoft.azure.documentdb.JsonSerializable.toString(int)
methods:
- fullName: com.microsoft.azure.documentdb.Index.getKind()
  name: getKind()
  nameWithType: Index.getKind()
  returns:
    description: <p>the index kind. </p>
    type: <xref href="com.microsoft.azure.documentdb.IndexKind?alt=com.microsoft.azure.documentdb.IndexKind&text=IndexKind" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets index kind.</p>

    <p></p>
  syntax: public IndexKind getKind()
  uid: com.microsoft.azure.documentdb.Index.getKind()
- fullName: com.microsoft.azure.documentdb.Index.Hash(DataType dataType)
  name: Hash(DataType dataType)
  nameWithType: Index.Hash(DataType dataType)
  parameters:
  - description: <p>specifies the target data type for the index path specification. </p>
    name: dataType
    type: <xref href="com.microsoft.azure.documentdb.DataType?alt=com.microsoft.azure.documentdb.DataType&text=DataType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an instance of HashIndex type. </p>
    type: <xref href="com.microsoft.azure.documentdb.HashIndex?alt=com.microsoft.azure.documentdb.HashIndex&text=HashIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns an instance of HashIndex class with specified DataType. </p>

    <p>Here is an example to create HashIndex instance passing in the DataType: <pre><code>HashIndex hashIndex = Index.Hash(DataType.String);

        </code></pre></p>

    <p></p>
  syntax: public static HashIndex Hash(DataType dataType)
  uid: com.microsoft.azure.documentdb.Index.Hash(DataType)
- fullName: com.microsoft.azure.documentdb.Index.Hash(DataType dataType, int precision)
  name: Hash(DataType dataType, int precision)
  nameWithType: Index.Hash(DataType dataType, int precision)
  parameters:
  - description: <p>specifies the target data type for the index path specification. </p>
    name: dataType
    type: <xref href="com.microsoft.azure.documentdb.DataType?alt=com.microsoft.azure.documentdb.DataType&text=DataType" data-throw-if-not-resolved="False"/>
  - description: <p>specifies the precision to be used for the data type associated with this index. </p>
    name: precision
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an instance of HashIndex type. </p>
    type: <xref href="com.microsoft.azure.documentdb.HashIndex?alt=com.microsoft.azure.documentdb.HashIndex&text=HashIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns an instance of HashIndex class with specified DataType and precision. </p>

    <p>Here is an example to create HashIndex instance passing in the DataType and precision: </p>

    <p>HashIndex hashIndex = Index.Hash(DataType.String, 3);</p>

    <p></p>
  syntax: public static HashIndex Hash(DataType dataType, int precision)
  uid: com.microsoft.azure.documentdb.Index.Hash(DataType,int)
- fullName: com.microsoft.azure.documentdb.Index.Range(DataType dataType)
  name: Range(DataType dataType)
  nameWithType: Index.Range(DataType dataType)
  parameters:
  - description: <p>the data type. </p>
    name: dataType
    type: <xref href="com.microsoft.azure.documentdb.DataType?alt=com.microsoft.azure.documentdb.DataType&text=DataType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an instance of RangeIndex type. </p>
    type: <xref href="com.microsoft.azure.documentdb.RangeIndex?alt=com.microsoft.azure.documentdb.RangeIndex&text=RangeIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns an instance of RangeIndex class with specified DataType. </p>

    <p>Here is an example to create RangeIndex instance passing in the DataType: <pre><code>RangeIndex rangeIndex = Index.Range(DataType.Number);

        </code></pre></p>

    <p></p>
  syntax: public static RangeIndex Range(DataType dataType)
  uid: com.microsoft.azure.documentdb.Index.Range(DataType)
- fullName: com.microsoft.azure.documentdb.Index.Range(DataType dataType, int precision)
  name: Range(DataType dataType, int precision)
  nameWithType: Index.Range(DataType dataType, int precision)
  parameters:
  - description: <p>specifies the target data type for the index path specification. </p>
    name: dataType
    type: <xref href="com.microsoft.azure.documentdb.DataType?alt=com.microsoft.azure.documentdb.DataType&text=DataType" data-throw-if-not-resolved="False"/>
  - description: <p>specifies the precision to be used for the data type associated with this index. </p>
    name: precision
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an instance of RangeIndex type. </p>
    type: <xref href="com.microsoft.azure.documentdb.RangeIndex?alt=com.microsoft.azure.documentdb.RangeIndex&text=RangeIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns an instance of RangeIndex class with specified DataType and precision. </p>

    <p>Here is an example to create RangeIndex instance passing in the DataType and precision: <pre><code>RangeIndex rangeIndex = Index.Range(DataType.Number, -1);

        </code></pre></p>

    <p></p>
  syntax: public static RangeIndex Range(DataType dataType, int precision)
  uid: com.microsoft.azure.documentdb.Index.Range(DataType,int)
- fullName: com.microsoft.azure.documentdb.Index.Spatial(DataType dataType)
  name: Spatial(DataType dataType)
  nameWithType: Index.Spatial(DataType dataType)
  parameters:
  - description: <p>specifies the target data type for the index path specification. </p>
    name: dataType
    type: <xref href="com.microsoft.azure.documentdb.DataType?alt=com.microsoft.azure.documentdb.DataType&text=DataType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an instance of SpatialIndex type. </p>
    type: <xref href="com.microsoft.azure.documentdb.SpatialIndex?alt=com.microsoft.azure.documentdb.SpatialIndex&text=SpatialIndex" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns an instance of SpatialIndex class with specified DataType. </p>

    <p>Here is an example to create SpatialIndex instance passing in the DataType: </p>

    <p>SpatialIndex spatialIndex = Index.Spatial(DataType.Point);</p>

    <p></p>
  syntax: public static SpatialIndex Spatial(DataType dataType)
  uid: com.microsoft.azure.documentdb.Index.Spatial(DataType)
nameWithType: Index
syntax: public class Index extends JsonSerializable
type: class
uid: com.microsoft.azure.documentdb.Index
fullName: com.microsoft.azure.documentdb.Index
name: Index
package: com.microsoft.azure.documentdb
summary: <p>Represents the index of a collection in the Azure Cosmos DB database service. </p>
metadata: {}
