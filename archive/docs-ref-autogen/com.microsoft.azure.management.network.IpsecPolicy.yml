### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.network.IpsecPolicy.dhGroup()
  name: dhGroup()
  nameWithType: IpsecPolicy.dhGroup()
  returns:
    description: <p>the dhGroup value </p>
    type: <xref href="com.microsoft.azure.management.network.DhGroup?alt=com.microsoft.azure.management.network.DhGroup&text=DhGroup" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the dhGroup value.</p>

    <p></p>
  syntax: public DhGroup dhGroup()
  uid: com.microsoft.azure.management.network.IpsecPolicy.dhGroup()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.ikeEncryption()
  name: ikeEncryption()
  nameWithType: IpsecPolicy.ikeEncryption()
  returns:
    description: <p>the ikeEncryption value </p>
    type: <xref href="com.microsoft.azure.management.network.IkeEncryption?alt=com.microsoft.azure.management.network.IkeEncryption&text=IkeEncryption" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ikeEncryption value.</p>

    <p></p>
  syntax: public IkeEncryption ikeEncryption()
  uid: com.microsoft.azure.management.network.IpsecPolicy.ikeEncryption()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.ikeIntegrity()
  name: ikeIntegrity()
  nameWithType: IpsecPolicy.ikeIntegrity()
  returns:
    description: <p>the ikeIntegrity value </p>
    type: <xref href="com.microsoft.azure.management.network.IkeIntegrity?alt=com.microsoft.azure.management.network.IkeIntegrity&text=IkeIntegrity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ikeIntegrity value.</p>

    <p></p>
  syntax: public IkeIntegrity ikeIntegrity()
  uid: com.microsoft.azure.management.network.IpsecPolicy.ikeIntegrity()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.ipsecEncryption()
  name: ipsecEncryption()
  nameWithType: IpsecPolicy.ipsecEncryption()
  returns:
    description: <p>the ipsecEncryption value </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecEncryption?alt=com.microsoft.azure.management.network.IpsecEncryption&text=IpsecEncryption" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ipsecEncryption value.</p>

    <p></p>
  syntax: public IpsecEncryption ipsecEncryption()
  uid: com.microsoft.azure.management.network.IpsecPolicy.ipsecEncryption()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.ipsecIntegrity()
  name: ipsecIntegrity()
  nameWithType: IpsecPolicy.ipsecIntegrity()
  returns:
    description: <p>the ipsecIntegrity value </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecIntegrity?alt=com.microsoft.azure.management.network.IpsecIntegrity&text=IpsecIntegrity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ipsecIntegrity value.</p>

    <p></p>
  syntax: public IpsecIntegrity ipsecIntegrity()
  uid: com.microsoft.azure.management.network.IpsecPolicy.ipsecIntegrity()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.pfsGroup()
  name: pfsGroup()
  nameWithType: IpsecPolicy.pfsGroup()
  returns:
    description: <p>the pfsGroup value </p>
    type: <xref href="com.microsoft.azure.management.network.PfsGroup?alt=com.microsoft.azure.management.network.PfsGroup&text=PfsGroup" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the pfsGroup value.</p>

    <p></p>
  syntax: public PfsGroup pfsGroup()
  uid: com.microsoft.azure.management.network.IpsecPolicy.pfsGroup()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.saDataSizeKilobytes()
  name: saDataSizeKilobytes()
  nameWithType: IpsecPolicy.saDataSizeKilobytes()
  returns:
    description: <p>the saDataSizeKilobytes value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the saDataSizeKilobytes value.</p>

    <p></p>
  syntax: public int saDataSizeKilobytes()
  uid: com.microsoft.azure.management.network.IpsecPolicy.saDataSizeKilobytes()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.saLifeTimeSeconds()
  name: saLifeTimeSeconds()
  nameWithType: IpsecPolicy.saLifeTimeSeconds()
  returns:
    description: <p>the saLifeTimeSeconds value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the saLifeTimeSeconds value.</p>

    <p></p>
  syntax: public int saLifeTimeSeconds()
  uid: com.microsoft.azure.management.network.IpsecPolicy.saLifeTimeSeconds()
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withDhGroup(DhGroup dhGroup)
  name: withDhGroup(DhGroup dhGroup)
  nameWithType: IpsecPolicy.withDhGroup(DhGroup dhGroup)
  parameters:
  - description: <p>the dhGroup value to set </p>
    name: dhGroup
    type: <xref href="com.microsoft.azure.management.network.DhGroup?alt=com.microsoft.azure.management.network.DhGroup&text=DhGroup" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the dhGroup value.</p>

    <p></p>
  syntax: public IpsecPolicy withDhGroup(DhGroup dhGroup)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withDhGroup(DhGroup)
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withIkeEncryption(IkeEncryption ikeEncryption)
  name: withIkeEncryption(IkeEncryption ikeEncryption)
  nameWithType: IpsecPolicy.withIkeEncryption(IkeEncryption ikeEncryption)
  parameters:
  - description: <p>the ikeEncryption value to set </p>
    name: ikeEncryption
    type: <xref href="com.microsoft.azure.management.network.IkeEncryption?alt=com.microsoft.azure.management.network.IkeEncryption&text=IkeEncryption" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ikeEncryption value.</p>

    <p></p>
  syntax: public IpsecPolicy withIkeEncryption(IkeEncryption ikeEncryption)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withIkeEncryption(IkeEncryption)
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withIkeIntegrity(IkeIntegrity ikeIntegrity)
  name: withIkeIntegrity(IkeIntegrity ikeIntegrity)
  nameWithType: IpsecPolicy.withIkeIntegrity(IkeIntegrity ikeIntegrity)
  parameters:
  - description: <p>the ikeIntegrity value to set </p>
    name: ikeIntegrity
    type: <xref href="com.microsoft.azure.management.network.IkeIntegrity?alt=com.microsoft.azure.management.network.IkeIntegrity&text=IkeIntegrity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ikeIntegrity value.</p>

    <p></p>
  syntax: public IpsecPolicy withIkeIntegrity(IkeIntegrity ikeIntegrity)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withIkeIntegrity(IkeIntegrity)
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withIpsecEncryption(IpsecEncryption ipsecEncryption)
  name: withIpsecEncryption(IpsecEncryption ipsecEncryption)
  nameWithType: IpsecPolicy.withIpsecEncryption(IpsecEncryption ipsecEncryption)
  parameters:
  - description: <p>the ipsecEncryption value to set </p>
    name: ipsecEncryption
    type: <xref href="com.microsoft.azure.management.network.IpsecEncryption?alt=com.microsoft.azure.management.network.IpsecEncryption&text=IpsecEncryption" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ipsecEncryption value.</p>

    <p></p>
  syntax: public IpsecPolicy withIpsecEncryption(IpsecEncryption ipsecEncryption)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withIpsecEncryption(IpsecEncryption)
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)
  name: withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)
  nameWithType: IpsecPolicy.withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)
  parameters:
  - description: <p>the ipsecIntegrity value to set </p>
    name: ipsecIntegrity
    type: <xref href="com.microsoft.azure.management.network.IpsecIntegrity?alt=com.microsoft.azure.management.network.IpsecIntegrity&text=IpsecIntegrity" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ipsecIntegrity value.</p>

    <p></p>
  syntax: public IpsecPolicy withIpsecIntegrity(IpsecIntegrity ipsecIntegrity)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withIpsecIntegrity(IpsecIntegrity)
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withPfsGroup(PfsGroup pfsGroup)
  name: withPfsGroup(PfsGroup pfsGroup)
  nameWithType: IpsecPolicy.withPfsGroup(PfsGroup pfsGroup)
  parameters:
  - description: <p>the pfsGroup value to set </p>
    name: pfsGroup
    type: <xref href="com.microsoft.azure.management.network.PfsGroup?alt=com.microsoft.azure.management.network.PfsGroup&text=PfsGroup" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the pfsGroup value.</p>

    <p></p>
  syntax: public IpsecPolicy withPfsGroup(PfsGroup pfsGroup)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withPfsGroup(PfsGroup)
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withSaDataSizeKilobytes(int saDataSizeKilobytes)
  name: withSaDataSizeKilobytes(int saDataSizeKilobytes)
  nameWithType: IpsecPolicy.withSaDataSizeKilobytes(int saDataSizeKilobytes)
  parameters:
  - description: <p>the saDataSizeKilobytes value to set </p>
    name: saDataSizeKilobytes
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the saDataSizeKilobytes value.</p>

    <p></p>
  syntax: public IpsecPolicy withSaDataSizeKilobytes(int saDataSizeKilobytes)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withSaDataSizeKilobytes(int)
- fullName: com.microsoft.azure.management.network.IpsecPolicy.withSaLifeTimeSeconds(int saLifeTimeSeconds)
  name: withSaLifeTimeSeconds(int saLifeTimeSeconds)
  nameWithType: IpsecPolicy.withSaLifeTimeSeconds(int saLifeTimeSeconds)
  parameters:
  - description: <p>the saLifeTimeSeconds value to set </p>
    name: saLifeTimeSeconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the IpsecPolicy object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.IpsecPolicy?alt=com.microsoft.azure.management.network.IpsecPolicy&text=IpsecPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the saLifeTimeSeconds value.</p>

    <p></p>
  syntax: public IpsecPolicy withSaLifeTimeSeconds(int saLifeTimeSeconds)
  uid: com.microsoft.azure.management.network.IpsecPolicy.withSaLifeTimeSeconds(int)
nameWithType: IpsecPolicy
syntax: public class IpsecPolicy
type: class
uid: com.microsoft.azure.management.network.IpsecPolicy
fullName: com.microsoft.azure.management.network.IpsecPolicy
name: IpsecPolicy
package: com.microsoft.azure.management.network
summary: <p>An IPSec Policy configuration for a virtual network gateway connection. </p>
metadata: {}
