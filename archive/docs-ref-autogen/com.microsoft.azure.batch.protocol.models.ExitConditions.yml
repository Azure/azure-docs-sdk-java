### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.defaultProperty()
  name: defaultProperty()
  nameWithType: ExitConditions.defaultProperty()
  returns:
    description: <p>the defaultProperty value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this value is used if the task exits with any nonzero exit code not listed in the exitCodes or exitCodeRanges collection, with a pre-processing error if the preProcessingError property is not present, or with a file upload error if the fileUploadError property is not present. If you want non-default behavior on exit code 0, you must list it explicitly using the exitCodes or exitCodeRanges collection.</p>

    <p></p>
  syntax: public ExitOptions defaultProperty()
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.defaultProperty()
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.exitCodeRanges()
  name: exitCodeRanges()
  nameWithType: ExitConditions.exitCodeRanges()
  returns:
    description: <p>the exitCodeRanges value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ExitCodeRangeMapping?alt=com.microsoft.azure.batch.protocol.models.ExitCodeRangeMapping&text=ExitCodeRangeMapping" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the exitCodeRanges value.</p>

    <p></p>
  syntax: public List<ExitCodeRangeMapping> exitCodeRanges()
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.exitCodeRanges()
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.exitCodes()
  name: exitCodes()
  nameWithType: ExitConditions.exitCodes()
  returns:
    description: <p>the exitCodes value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ExitCodeMapping?alt=com.microsoft.azure.batch.protocol.models.ExitCodeMapping&text=ExitCodeMapping" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the exitCodes value.</p>

    <p></p>
  syntax: public List<ExitCodeMapping> exitCodes()
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.exitCodes()
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.fileUploadError()
  name: fileUploadError()
  nameWithType: ExitConditions.fileUploadError()
  returns:
    description: <p>the fileUploadError value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the task exited with an exit code that was specified via exitCodes or exitCodeRanges, and then encountered a file upload error, then the action specified by the exit code takes precedence.</p>

    <p></p>
  syntax: public ExitOptions fileUploadError()
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.fileUploadError()
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.preProcessingError()
  name: preProcessingError()
  nameWithType: ExitConditions.preProcessingError()
  returns:
    description: <p>the preProcessingError value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the preProcessingError value.</p>

    <p></p>
  syntax: public ExitOptions preProcessingError()
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.preProcessingError()
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.withDefaultProperty(ExitOptions defaultProperty)
  name: withDefaultProperty(ExitOptions defaultProperty)
  nameWithType: ExitConditions.withDefaultProperty(ExitOptions defaultProperty)
  parameters:
  - description: <p>the defaultProperty value to set </p>
    name: defaultProperty
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExitConditions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this value is used if the task exits with any nonzero exit code not listed in the exitCodes or exitCodeRanges collection, with a pre-processing error if the preProcessingError property is not present, or with a file upload error if the fileUploadError property is not present. If you want non-default behavior on exit code 0, you must list it explicitly using the exitCodes or exitCodeRanges collection.</p>

    <p></p>
  syntax: public ExitConditions withDefaultProperty(ExitOptions defaultProperty)
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.withDefaultProperty(ExitOptions)
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.withExitCodeRanges(List<ExitCodeRangeMapping> exitCodeRanges)
  name: withExitCodeRanges(List<ExitCodeRangeMapping> exitCodeRanges)
  nameWithType: ExitConditions.withExitCodeRanges(List<ExitCodeRangeMapping> exitCodeRanges)
  parameters:
  - description: <p>the exitCodeRanges value to set </p>
    name: exitCodeRanges
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ExitCodeRangeMapping?alt=com.microsoft.azure.batch.protocol.models.ExitCodeRangeMapping&text=ExitCodeRangeMapping" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the ExitConditions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the exitCodeRanges value.</p>

    <p></p>
  syntax: public ExitConditions withExitCodeRanges(List<ExitCodeRangeMapping> exitCodeRanges)
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.withExitCodeRanges(List<ExitCodeRangeMapping>)
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.withExitCodes(List<ExitCodeMapping> exitCodes)
  name: withExitCodes(List<ExitCodeMapping> exitCodes)
  nameWithType: ExitConditions.withExitCodes(List<ExitCodeMapping> exitCodes)
  parameters:
  - description: <p>the exitCodes value to set </p>
    name: exitCodes
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ExitCodeMapping?alt=com.microsoft.azure.batch.protocol.models.ExitCodeMapping&text=ExitCodeMapping" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the ExitConditions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the exitCodes value.</p>

    <p></p>
  syntax: public ExitConditions withExitCodes(List<ExitCodeMapping> exitCodes)
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.withExitCodes(List<ExitCodeMapping>)
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.withFileUploadError(ExitOptions fileUploadError)
  name: withFileUploadError(ExitOptions fileUploadError)
  nameWithType: ExitConditions.withFileUploadError(ExitOptions fileUploadError)
  parameters:
  - description: <p>the fileUploadError value to set </p>
    name: fileUploadError
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExitConditions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the task exited with an exit code that was specified via exitCodes or exitCodeRanges, and then encountered a file upload error, then the action specified by the exit code takes precedence.</p>

    <p></p>
  syntax: public ExitConditions withFileUploadError(ExitOptions fileUploadError)
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.withFileUploadError(ExitOptions)
- fullName: com.microsoft.azure.batch.protocol.models.ExitConditions.withPreProcessingError(ExitOptions preProcessingError)
  name: withPreProcessingError(ExitOptions preProcessingError)
  nameWithType: ExitConditions.withPreProcessingError(ExitOptions preProcessingError)
  parameters:
  - description: <p>the preProcessingError value to set </p>
    name: preProcessingError
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExitConditions object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the preProcessingError value.</p>

    <p></p>
  syntax: public ExitConditions withPreProcessingError(ExitOptions preProcessingError)
  uid: com.microsoft.azure.batch.protocol.models.ExitConditions.withPreProcessingError(ExitOptions)
nameWithType: ExitConditions
syntax: public class ExitConditions
type: class
uid: com.microsoft.azure.batch.protocol.models.ExitConditions
fullName: com.microsoft.azure.batch.protocol.models.ExitConditions
name: ExitConditions
package: com.microsoft.azure.batch.protocol.models
summary: <p>Specifies how the Batch service should respond when the task completes. </p>
metadata: {}
