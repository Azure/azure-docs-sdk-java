### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dnsServiceIP()
  name: dnsServiceIP()
  nameWithType: ContainerServiceNetworkProfile.dnsServiceIP()
  returns:
    description: <p>the dnsServiceIP value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get an IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.</p>

    <p></p>
  syntax: public String dnsServiceIP()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dnsServiceIP()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dockerBridgeCidr()
  name: dockerBridgeCidr()
  nameWithType: ContainerServiceNetworkProfile.dockerBridgeCidr()
  returns:
    description: <p>the dockerBridgeCidr value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.</p>

    <p></p>
  syntax: public String dockerBridgeCidr()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.dockerBridgeCidr()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerProfile()
  name: loadBalancerProfile()
  nameWithType: ContainerServiceNetworkProfile.loadBalancerProfile()
  returns:
    description: <p>the loadBalancerProfile value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile&text=ManagedClusterLoadBalancerProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get profile of the cluster load balancer.</p>

    <p></p>
  syntax: public ManagedClusterLoadBalancerProfile loadBalancerProfile()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerProfile()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerSku()
  name: loadBalancerSku()
  nameWithType: ContainerServiceNetworkProfile.loadBalancerSku()
  returns:
    description: <p>the loadBalancerSku value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.LoadBalancerSku?alt=com.microsoft.azure.management.containerservice.LoadBalancerSku&text=LoadBalancerSku" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the load balancer sku for the managed cluster. Possible values include: 'standard', 'basic'.</p>

    <p></p>
  syntax: public LoadBalancerSku loadBalancerSku()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.loadBalancerSku()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkMode()
  name: networkMode()
  nameWithType: ContainerServiceNetworkProfile.networkMode()
  returns:
    description: <p>the networkMode value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.NetworkMode?alt=com.microsoft.azure.management.containerservice.NetworkMode&text=NetworkMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get network mode used for building Kubernetes network. Possible values include: 'transparent', 'bridge'.</p>

    <p></p>
  syntax: public NetworkMode networkMode()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkMode()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPlugin()
  name: networkPlugin()
  nameWithType: ContainerServiceNetworkProfile.networkPlugin()
  returns:
    description: <p>the networkPlugin value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.NetworkPlugin?alt=com.microsoft.azure.management.containerservice.NetworkPlugin&text=NetworkPlugin" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get network plugin used for building Kubernetes network. Possible values include: 'azure', 'kubenet'.</p>

    <p></p>
  syntax: public NetworkPlugin networkPlugin()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPlugin()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPolicy()
  name: networkPolicy()
  nameWithType: ContainerServiceNetworkProfile.networkPolicy()
  returns:
    description: <p>the networkPolicy value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.NetworkPolicy?alt=com.microsoft.azure.management.containerservice.NetworkPolicy&text=NetworkPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get network policy used for building Kubernetes network. Possible values include: 'calico', 'azure'.</p>

    <p></p>
  syntax: public NetworkPolicy networkPolicy()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.networkPolicy()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.outboundType()
  name: outboundType()
  nameWithType: ContainerServiceNetworkProfile.outboundType()
  returns:
    description: <p>the outboundType value </p>
    type: <xref href="com.microsoft.azure.management.containerservice.OutboundType?alt=com.microsoft.azure.management.containerservice.OutboundType&text=OutboundType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the outbound (egress) routing method. Possible values include: 'loadBalancer', 'userDefinedRouting'.</p>

    <p></p>
  syntax: public OutboundType outboundType()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.outboundType()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.podCidr()
  name: podCidr()
  nameWithType: ContainerServiceNetworkProfile.podCidr()
  returns:
    description: <p>the podCidr value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a CIDR notation IP range from which to assign pod IPs when kubenet is used.</p>

    <p></p>
  syntax: public String podCidr()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.podCidr()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.serviceCidr()
  name: serviceCidr()
  nameWithType: ContainerServiceNetworkProfile.serviceCidr()
  returns:
    description: <p>the serviceCidr value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.</p>

    <p></p>
  syntax: public String serviceCidr()
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.serviceCidr()
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDnsServiceIP(String dnsServiceIP)
  name: withDnsServiceIP(String dnsServiceIP)
  nameWithType: ContainerServiceNetworkProfile.withDnsServiceIP(String dnsServiceIP)
  parameters:
  - description: <p>the dnsServiceIP value to set </p>
    name: dnsServiceIP
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set an IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withDnsServiceIP(String dnsServiceIP)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDnsServiceIP(String)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDockerBridgeCidr(String dockerBridgeCidr)
  name: withDockerBridgeCidr(String dockerBridgeCidr)
  nameWithType: ContainerServiceNetworkProfile.withDockerBridgeCidr(String dockerBridgeCidr)
  parameters:
  - description: <p>the dockerBridgeCidr value to set </p>
    name: dockerBridgeCidr
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withDockerBridgeCidr(String dockerBridgeCidr)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withDockerBridgeCidr(String)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)
  name: withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)
  nameWithType: ContainerServiceNetworkProfile.withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)
  parameters:
  - description: <p>the loadBalancerProfile value to set </p>
    name: loadBalancerProfile
    type: <xref href="com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile?alt=com.microsoft.azure.management.containerservice.ManagedClusterLoadBalancerProfile&text=ManagedClusterLoadBalancerProfile" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set profile of the cluster load balancer.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withLoadBalancerProfile(ManagedClusterLoadBalancerProfile loadBalancerProfile)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerProfile(ManagedClusterLoadBalancerProfile)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)
  name: withLoadBalancerSku(LoadBalancerSku loadBalancerSku)
  nameWithType: ContainerServiceNetworkProfile.withLoadBalancerSku(LoadBalancerSku loadBalancerSku)
  parameters:
  - description: <p>the loadBalancerSku value to set </p>
    name: loadBalancerSku
    type: <xref href="com.microsoft.azure.management.containerservice.LoadBalancerSku?alt=com.microsoft.azure.management.containerservice.LoadBalancerSku&text=LoadBalancerSku" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the load balancer sku for the managed cluster. Possible values include: 'standard', 'basic'.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withLoadBalancerSku(LoadBalancerSku loadBalancerSku)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withLoadBalancerSku(LoadBalancerSku)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkMode(NetworkMode networkMode)
  name: withNetworkMode(NetworkMode networkMode)
  nameWithType: ContainerServiceNetworkProfile.withNetworkMode(NetworkMode networkMode)
  parameters:
  - description: <p>the networkMode value to set </p>
    name: networkMode
    type: <xref href="com.microsoft.azure.management.containerservice.NetworkMode?alt=com.microsoft.azure.management.containerservice.NetworkMode&text=NetworkMode" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set network mode used for building Kubernetes network. Possible values include: 'transparent', 'bridge'.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withNetworkMode(NetworkMode networkMode)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkMode(NetworkMode)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPlugin(NetworkPlugin networkPlugin)
  name: withNetworkPlugin(NetworkPlugin networkPlugin)
  nameWithType: ContainerServiceNetworkProfile.withNetworkPlugin(NetworkPlugin networkPlugin)
  parameters:
  - description: <p>the networkPlugin value to set </p>
    name: networkPlugin
    type: <xref href="com.microsoft.azure.management.containerservice.NetworkPlugin?alt=com.microsoft.azure.management.containerservice.NetworkPlugin&text=NetworkPlugin" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set network plugin used for building Kubernetes network. Possible values include: 'azure', 'kubenet'.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withNetworkPlugin(NetworkPlugin networkPlugin)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPlugin(NetworkPlugin)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)
  name: withNetworkPolicy(NetworkPolicy networkPolicy)
  nameWithType: ContainerServiceNetworkProfile.withNetworkPolicy(NetworkPolicy networkPolicy)
  parameters:
  - description: <p>the networkPolicy value to set </p>
    name: networkPolicy
    type: <xref href="com.microsoft.azure.management.containerservice.NetworkPolicy?alt=com.microsoft.azure.management.containerservice.NetworkPolicy&text=NetworkPolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set network policy used for building Kubernetes network. Possible values include: 'calico', 'azure'.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withNetworkPolicy(NetworkPolicy networkPolicy)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withNetworkPolicy(NetworkPolicy)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withOutboundType(OutboundType outboundType)
  name: withOutboundType(OutboundType outboundType)
  nameWithType: ContainerServiceNetworkProfile.withOutboundType(OutboundType outboundType)
  parameters:
  - description: <p>the outboundType value to set </p>
    name: outboundType
    type: <xref href="com.microsoft.azure.management.containerservice.OutboundType?alt=com.microsoft.azure.management.containerservice.OutboundType&text=OutboundType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the outbound (egress) routing method. Possible values include: 'loadBalancer', 'userDefinedRouting'.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withOutboundType(OutboundType outboundType)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withOutboundType(OutboundType)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withPodCidr(String podCidr)
  name: withPodCidr(String podCidr)
  nameWithType: ContainerServiceNetworkProfile.withPodCidr(String podCidr)
  parameters:
  - description: <p>the podCidr value to set </p>
    name: podCidr
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a CIDR notation IP range from which to assign pod IPs when kubenet is used.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withPodCidr(String podCidr)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withPodCidr(String)
- fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withServiceCidr(String serviceCidr)
  name: withServiceCidr(String serviceCidr)
  nameWithType: ContainerServiceNetworkProfile.withServiceCidr(String serviceCidr)
  parameters:
  - description: <p>the serviceCidr value to set </p>
    name: serviceCidr
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ContainerServiceNetworkProfile object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile?alt=com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile&text=ContainerServiceNetworkProfile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.</p>

    <p></p>
  syntax: public ContainerServiceNetworkProfile withServiceCidr(String serviceCidr)
  uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile.withServiceCidr(String)
nameWithType: ContainerServiceNetworkProfile
syntax: public class ContainerServiceNetworkProfile
type: class
uid: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile
fullName: com.microsoft.azure.management.containerservice.ContainerServiceNetworkProfile
name: ContainerServiceNetworkProfile
package: com.microsoft.azure.management.containerservice
summary: <p>Profile of network configuration. </p>
metadata: {}
