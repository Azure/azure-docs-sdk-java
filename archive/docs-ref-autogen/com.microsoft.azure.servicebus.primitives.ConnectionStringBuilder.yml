### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessSingature)
  name: ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessSingature)
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessSingature)
  parameters:
  - description: '<p>Namespace name (dns suffix - ex: .servicebus.windows.net is not required) </p>'
    name: namespaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Entity path. For queue or topic, use name. For subscription use &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p>
    name: entityPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Shared Access Signature already generated </p>
    name: sharedAccessSingature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new instance from namespace, entity path and already generated SAS token. </p>
  syntax: public ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessSingature)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final String,final String,final String)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  name: ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  parameters:
  - description: '<p>Namespace name (dns suffix - ex: .servicebus.windows.net is not required) </p>'
    name: namespaceName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Entity path. For queue or topic, use name. For subscription use &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p>
    name: entityPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Shared Access Key name </p>
    name: sharedAccessKeyName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Shared Access Key </p>
    name: sharedAccessKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new instance from namespace, entity path and SAS Key name and value. </p>
  syntax: public ConnectionStringBuilder(final String namespaceName, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final String,final String,final String,final String)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessSingature)
  name: ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessSingature)
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessSingature)
  parameters:
  - description: <p>namespace level endpoint. This needs to be in the format of scheme://fullyQualifiedServiceBusNamespaceEndpointName </p>
    name: endpointAddress
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>Entity path. For queue or topic, use name. For subscription use &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p>
    name: entityPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Shared Access Signature already generated </p>
    name: sharedAccessSingature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new instance from endpoint address of the namesapce, entity path and already generated SAS token. </p>
  syntax: public ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessSingature)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final URI,final String,final String)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  name: ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  parameters:
  - description: <p>namespace level endpoint. This needs to be in the format of scheme://fullyQualifiedServiceBusNamespaceEndpointName </p>
    name: endpointAddress
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>Entity path. For queue or topic, use name. For subscription use &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p>
    name: entityPath
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Shared Access Key name </p>
    name: sharedAccessKeyName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Shared Access Key </p>
    name: sharedAccessKey
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a new instance from endpoint address of the namesapce, entity path and SAS Key name and value </p>
  syntax: public ConnectionStringBuilder(final URI endpointAddress, final String entityPath, final String sharedAccessKeyName, final String sharedAccessKey)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(final URI,final String,final String,final String)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(String connectionString)
  name: ConnectionStringBuilder(String connectionString)
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder(String connectionString)
  parameters:
  - description: <p>ServiceBus ConnectionString </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalConnectionStringFormatException?alt=IllegalConnectionStringFormatException&text=IllegalConnectionStringFormatException" data-throw-if-not-resolved="False"/>
    description: <p>when the format of the ConnectionString is not valid </p>
  summary: '<p>Creates a new instance from the given connection string. ConnectionString format: Endpoint=sb://namespace_DNS_Name;EntityPath=EVENT_HUB_NAME;SharedAccessKeyName=SHARED_ACCESS_KEY_NAME;SharedAccessKey=SHARED_ACCESS_KEY or Endpoint=sb://namespace_DNS_Name;EntityPath=EVENT_HUB_NAME;SharedAccessSignatureToken=SHARED_ACCESS_SIGNATURE_TOKEN </p>'
  syntax: public ConnectionStringBuilder(String connectionString)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(String)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(String namespaceConnectionString, String entityPath)
  name: ConnectionStringBuilder(String namespaceConnectionString, String entityPath)
  nameWithType: ConnectionStringBuilder.ConnectionStringBuilder(String namespaceConnectionString, String entityPath)
  parameters:
  - description: <p>connections string of the ServiceBus namespace. This doesn't include the entity path. </p>
    name: namespaceConnectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>path to the entity within the namespace </p>
    name: entityPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates a new instance from the given connection string and entity path. A connection string may or may not include the entity path. ConnectionString format: Endpoint=sb://namespace_DNS_Name;EntityPath=EVENT_HUB_NAME;SharedAccessKeyName=SHARED_ACCESS_KEY_NAME;SharedAccessKey=SHARED_ACCESS_KEY or Endpoint=sb://namespace_DNS_Name;EntityPath=EVENT_HUB_NAME;SharedAccessSignatureToken=SHARED_ACCESS_SIGNATURE_TOKEN </p>'
  syntax: public ConnectionStringBuilder(String namespaceConnectionString, String entityPath)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.ConnectionStringBuilder(String,String)
fields:
- field:
    type: <xref href="final+Duration?alt=final+Duration&text=final+Duration" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.DefaultOperationTimeout
  name: DefaultOperationTimeout
  nameWithType: ConnectionStringBuilder.DefaultOperationTimeout
  summary: <p>Default operation timeout if timeout is not specified in the connection string. 30 seconds. </p>
  syntax: public static final Duration DefaultOperationTimeout= Duration.ofSeconds(ClientConstants.DEFAULT_OPERATION_TIMEOUT_IN_SECONDS)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.DefaultOperationTimeout
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getEndpoint()
  name: getEndpoint()
  nameWithType: ConnectionStringBuilder.getEndpoint()
  returns:
    description: <p>Endpoint representing the service bus namespace </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: <p>Get the endpoint which can be used to connect to the ServiceBus Namespace </p>
  syntax: public URI getEndpoint()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getEndpoint()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getEntityPath()
  name: getEntityPath()
  nameWithType: ConnectionStringBuilder.getEntityPath()
  returns:
    description: <p>Entity Path </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Get the entity path value from the connection string </p>
  syntax: public String getEntityPath()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getEntityPath()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getOperationTimeout()
  name: getOperationTimeout()
  nameWithType: ConnectionStringBuilder.getOperationTimeout()
  returns:
    description: <p>operationTimeout </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the duration after which a pending operation like Send or RECEIVE will time out. If a timeout is not specified, it defaults to <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.DefaultOperationTimeout" data-throw-if-not-resolved="false" data-raw-source="DefaultOperationTimeout"></xref> This value will be used by all operations which uses this <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref>, unless explicitly over-ridden. </p>
  syntax: public Duration getOperationTimeout()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getOperationTimeout()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getRetryPolicy()
  name: getRetryPolicy()
  nameWithType: ConnectionStringBuilder.getRetryPolicy()
  returns:
    description: <p>RetryPolicy applied for any operation performed using this ConnectionString </p>
    type: <xref href="com.microsoft.azure.servicebus.primitives.RetryPolicy?alt=com.microsoft.azure.servicebus.primitives.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: <p>Get the retry policy instance that was created as part of this builder's creation. </p>
  syntax: public RetryPolicy getRetryPolicy()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getRetryPolicy()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getSasKey()
  name: getSasKey()
  nameWithType: ConnectionStringBuilder.getSasKey()
  returns:
    description: <p>Shared Access Signature key value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Get the shared access policy key value from the connection string or null. </p>
  syntax: public String getSasKey()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getSasKey()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getSasKeyName()
  name: getSasKeyName()
  nameWithType: ConnectionStringBuilder.getSasKeyName()
  returns:
    description: <p>Shared Access Signature key name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Get the shared access policy owner name from the connection string or null. </p>
  syntax: public String getSasKeyName()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getSasKeyName()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getSharedAccessSignatureToken()
  name: getSharedAccessSignatureToken()
  nameWithType: ConnectionStringBuilder.getSharedAccessSignatureToken()
  returns:
    description: <p>Shared Access Signature Token </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Returns the shared access signature token from the connection string or null. </p>
  syntax: public String getSharedAccessSignatureToken()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getSharedAccessSignatureToken()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getTransportType()
  name: getTransportType()
  nameWithType: ConnectionStringBuilder.getTransportType()
  returns:
    description: <p>transportType </p>
    type: <xref href="com.microsoft.azure.servicebus.primitives.TransportType?alt=com.microsoft.azure.servicebus.primitives.TransportType&text=TransportType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>TransportType on which all the communication for the Service Bus created using this ConnectionString. Default value is <xref uid="com.microsoft.azure.servicebus.primitives.TransportType.AMQP" data-throw-if-not-resolved="false" data-raw-source="TransportType#AMQP"></xref>.</p>

    <p></p>
  syntax: public TransportType getTransportType()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.getTransportType()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.setOperationTimeout(final Duration operationTimeout)
  name: setOperationTimeout(final Duration operationTimeout)
  nameWithType: ConnectionStringBuilder.setOperationTimeout(final Duration operationTimeout)
  parameters:
  - description: <p>Operation Timeout </p>
    name: operationTimeout
    type: <xref href="final+Duration?alt=final+Duration&text=final+Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the OperationTimeout value in the Connection String. This value will be used by all operations which uses this <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref>, unless explicitly over-ridden. </p>

    <p>ConnectionString with operationTimeout is not inter-operable between java and clients in other platforms. </p>
  syntax: public void setOperationTimeout(final Duration operationTimeout)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.setOperationTimeout(final Duration)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.setRetryPolicy(final RetryPolicy retryPolicy)
  name: setRetryPolicy(final RetryPolicy retryPolicy)
  nameWithType: ConnectionStringBuilder.setRetryPolicy(final RetryPolicy retryPolicy)
  parameters:
  - description: <p>RetryPolicy applied for any operation performed using this ConnectionString </p>
    name: retryPolicy
    type: final <xref href="com.microsoft.azure.servicebus.primitives.RetryPolicy?alt=com.microsoft.azure.servicebus.primitives.RetryPolicy&text=RetryPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the retry policy. </p>

    <p>RetryPolicy is not Serialized as part of <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.toString()" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder#toString()"></xref> and is not interoperable with ServiceBus clients in other platforms. </p>
  syntax: public void setRetryPolicy(final RetryPolicy retryPolicy)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.setRetryPolicy(final RetryPolicy)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.setTransportType(final TransportType transportType)
  name: setTransportType(final TransportType transportType)
  nameWithType: ConnectionStringBuilder.setTransportType(final TransportType transportType)
  parameters:
  - description: <p>Transport Type </p>
    name: transportType
    type: final <xref href="com.microsoft.azure.servicebus.primitives.TransportType?alt=com.microsoft.azure.servicebus.primitives.TransportType&text=TransportType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the <xref uid="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder" data-throw-if-not-resolved="false" data-raw-source="ConnectionStringBuilder"></xref> instance being set. </p>
    type: <xref href="com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder?alt=com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder&text=ConnectionStringBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the TransportType value in the Connection String. If no TransportType is set, this defaults to <xref uid="com.microsoft.azure.servicebus.primitives.TransportType.AMQP" data-throw-if-not-resolved="false" data-raw-source="TransportType#AMQP"></xref>.</p>

    <p></p>
  syntax: public ConnectionStringBuilder setTransportType(final TransportType transportType)
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.setTransportType(final TransportType)
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.toLoggableString()
  name: toLoggableString()
  nameWithType: ConnectionStringBuilder.toLoggableString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toLoggableString()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.toLoggableString()
- fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.toString()
  name: toString()
  nameWithType: ConnectionStringBuilder.toString()
  returns:
    description: <p>connection string </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Returns an inter-operable connection string that can be used to connect to ServiceBus Namespace </p>
  syntax: public String toString()
  uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.toString()
nameWithType: ConnectionStringBuilder
syntax: public class ConnectionStringBuilder
type: class
uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
name: ConnectionStringBuilder
package: com.microsoft.azure.servicebus.primitives
summary: >-
  <p>This class can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>

  <p>Sample Code: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(

                                               "ServiceBusNamespaceName", 

                                               "ServiceBusEntityName", // QueueName or TopicName or SubscriptionPath

                                               "SharedAccessSignatureKeyName", 

                                               "SharedAccessSignatureKey");

       

      String connectionString = connectionStringBuilder.toString();

      </code></pre></p>

  <p>A connection string is basically a string consisted of key-value pair separated by ";". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - URL that points to the servicebus namespace </p></li><li><p>EntityPath - Path to the service bus entity (queue/topic/subscription/). For queues and topics, it is just the entity name. For subscriptions, path is &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></li><li><p>SharedAccessKeyName - Key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - Key value for the corresponding shared access policy rule of the namespace or entity. </p></li><li><p>SharedAccessSignatureToken - Instead of a key name and key value, clients can provide an already generated SAS Token. </p></li><li><p>OperationTimeout - Default timeout to be used for all senders, receiver and clients created from this connection string. </p></li><li><p>RetryPolicy - Name of the retry policy. </p></li></ul></p>
metadata: {}
