### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.functions.annotation.EventHubTrigger.cardinality()
  name: cardinality()
  nameWithType: EventHubTrigger.cardinality()
  returns:
    description: <p>An <xref uid="com.microsoft.azure.functions.annotation.Cardinality" data-throw-if-not-resolved="false" data-raw-source="Cardinality"></xref> value representing the Cardinality </p>
    type: <xref href="com.microsoft.azure.functions.annotation.Cardinality?alt=com.microsoft.azure.functions.annotation.Cardinality&text=Cardinality" data-throw-if-not-resolved="False"/>
  summary: <p>Cardinality of the trigger input. Choose 'One' if the input is a single message or 'Many' if the input is an array of messages. 'Many' is the default if unspecified </p>
  syntax: public Cardinality cardinality() default Cardinality.MANY
  uid: com.microsoft.azure.functions.annotation.EventHubTrigger.cardinality()
- fullName: com.microsoft.azure.functions.annotation.EventHubTrigger.connection()
  name: connection()
  nameWithType: EventHubTrigger.connection()
  returns:
    description: <p>The app setting name of the connection string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the app setting name that contains the Azure Eventhub connection string. </p>
  syntax: public String connection()
  uid: com.microsoft.azure.functions.annotation.EventHubTrigger.connection()
- fullName: com.microsoft.azure.functions.annotation.EventHubTrigger.consumerGroup()
  name: consumerGroup()
  nameWithType: EventHubTrigger.consumerGroup()
  returns:
    description: <p>The event hub consumer group string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the consumer group of the event hub to which to bind. </p>
  syntax: public String consumerGroup() default "$Default"
  uid: com.microsoft.azure.functions.annotation.EventHubTrigger.consumerGroup()
- fullName: com.microsoft.azure.functions.annotation.EventHubTrigger.dataType()
  name: dataType()
  nameWithType: EventHubTrigger.dataType()
  returns:
    description: <p>The dataType which will be used by the Functions runtime. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines how Functions runtime should treat the parameter value. Possible values are:</p>

    <p>

      <ul>

        <li>

          <p>"": get the value as a string, and try to deserialize to actual parameter type like POJO </p>

        </li>

        <li>

          <p>string: always get the value as a string </p>

        </li>

        <li>

          <p>binary: get the value as a binary data, and try to deserialize to actual parameter type byte[] </p>

        </li>

      </ul>

    </p>
  syntax: public String dataType() default ""
  uid: com.microsoft.azure.functions.annotation.EventHubTrigger.dataType()
- fullName: com.microsoft.azure.functions.annotation.EventHubTrigger.eventHubName()
  name: eventHubName()
  nameWithType: EventHubTrigger.eventHubName()
  returns:
    description: <p>The event hub name string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the name of the event hub to which to bind. </p>
  syntax: public String eventHubName()
  uid: com.microsoft.azure.functions.annotation.EventHubTrigger.eventHubName()
- fullName: com.microsoft.azure.functions.annotation.EventHubTrigger.name()
  name: name()
  nameWithType: EventHubTrigger.name()
  returns:
    description: <p>The variable name used in function.json. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>The variable name used in function.json. </p>
  syntax: public String name()
  uid: com.microsoft.azure.functions.annotation.EventHubTrigger.name()
nameWithType: EventHubTrigger
syntax: public interface EventHubTrigger
type: interface
uid: com.microsoft.azure.functions.annotation.EventHubTrigger
fullName: com.microsoft.azure.functions.annotation.EventHubTrigger
name: EventHubTrigger
package: com.microsoft.azure.functions.annotation
summary: >-
  <p>EventHubTrigger(name = "event", eventHubName = "samples-workitems", connection = "AzureEventHubConnection") String message, final ExecutionContext context ) { context.getLogger().info("Event hub message received: " + message); }</p>

  <p></p>
metadata: {}
