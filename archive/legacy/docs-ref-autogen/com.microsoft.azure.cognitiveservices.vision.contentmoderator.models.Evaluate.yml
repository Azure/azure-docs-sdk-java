### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.adultClassificationScore()
  name: adultClassificationScore()
  nameWithType: Evaluate.adultClassificationScore()
  returns:
    description: <p>the adultClassificationScore value </p>
    type: <xref href="Double?alt=Double&text=Double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the adultClassificationScore value.</p>

    <p></p>
  syntax: public Double adultClassificationScore()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.adultClassificationScore()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.advancedInfo()
  name: advancedInfo()
  nameWithType: Evaluate.advancedInfo()
  returns:
    description: <p>the advancedInfo value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair&text=KeyValuePair" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the advancedInfo value.</p>

    <p></p>
  syntax: public List<KeyValuePair> advancedInfo()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.advancedInfo()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.cacheID()
  name: cacheID()
  nameWithType: Evaluate.cacheID()
  returns:
    description: <p>the cacheID value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the cacheID value.</p>

    <p></p>
  syntax: public String cacheID()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.cacheID()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.isImageAdultClassified()
  name: isImageAdultClassified()
  nameWithType: Evaluate.isImageAdultClassified()
  returns:
    description: <p>the isImageAdultClassified value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the isImageAdultClassified value.</p>

    <p></p>
  syntax: public Boolean isImageAdultClassified()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.isImageAdultClassified()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.isImageRacyClassified()
  name: isImageRacyClassified()
  nameWithType: Evaluate.isImageRacyClassified()
  returns:
    description: <p>the isImageRacyClassified value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the isImageRacyClassified value.</p>

    <p></p>
  syntax: public Boolean isImageRacyClassified()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.isImageRacyClassified()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.racyClassificationScore()
  name: racyClassificationScore()
  nameWithType: Evaluate.racyClassificationScore()
  returns:
    description: <p>the racyClassificationScore value </p>
    type: <xref href="Double?alt=Double&text=Double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the racyClassificationScore value.</p>

    <p></p>
  syntax: public Double racyClassificationScore()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.racyClassificationScore()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.result()
  name: result()
  nameWithType: Evaluate.result()
  returns:
    description: <p>the result value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the result value.</p>

    <p></p>
  syntax: public Boolean result()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.result()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.status()
  name: status()
  nameWithType: Evaluate.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the status value.</p>

    <p></p>
  syntax: public Status status()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.status()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.trackingId()
  name: trackingId()
  nameWithType: Evaluate.trackingId()
  returns:
    description: <p>the trackingId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the trackingId value.</p>

    <p></p>
  syntax: public String trackingId()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.trackingId()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withAdultClassificationScore(Double adultClassificationScore)
  name: withAdultClassificationScore(Double adultClassificationScore)
  nameWithType: Evaluate.withAdultClassificationScore(Double adultClassificationScore)
  parameters:
  - description: <p>the adultClassificationScore value to set </p>
    name: adultClassificationScore
    type: <xref href="Double?alt=Double&text=Double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the adultClassificationScore value.</p>

    <p></p>
  syntax: public Evaluate withAdultClassificationScore(Double adultClassificationScore)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withAdultClassificationScore(Double)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withAdvancedInfo(List<KeyValuePair> advancedInfo)
  name: withAdvancedInfo(List<KeyValuePair> advancedInfo)
  nameWithType: Evaluate.withAdvancedInfo(List<KeyValuePair> advancedInfo)
  parameters:
  - description: <p>the advancedInfo value to set </p>
    name: advancedInfo
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.KeyValuePair&text=KeyValuePair" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the advancedInfo value.</p>

    <p></p>
  syntax: public Evaluate withAdvancedInfo(List<KeyValuePair> advancedInfo)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withAdvancedInfo(List<KeyValuePair>)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withCacheID(String cacheID)
  name: withCacheID(String cacheID)
  nameWithType: Evaluate.withCacheID(String cacheID)
  parameters:
  - description: <p>the cacheID value to set </p>
    name: cacheID
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the cacheID value.</p>

    <p></p>
  syntax: public Evaluate withCacheID(String cacheID)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withCacheID(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withIsImageAdultClassified(Boolean isImageAdultClassified)
  name: withIsImageAdultClassified(Boolean isImageAdultClassified)
  nameWithType: Evaluate.withIsImageAdultClassified(Boolean isImageAdultClassified)
  parameters:
  - description: <p>the isImageAdultClassified value to set </p>
    name: isImageAdultClassified
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isImageAdultClassified value.</p>

    <p></p>
  syntax: public Evaluate withIsImageAdultClassified(Boolean isImageAdultClassified)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withIsImageAdultClassified(Boolean)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withIsImageRacyClassified(Boolean isImageRacyClassified)
  name: withIsImageRacyClassified(Boolean isImageRacyClassified)
  nameWithType: Evaluate.withIsImageRacyClassified(Boolean isImageRacyClassified)
  parameters:
  - description: <p>the isImageRacyClassified value to set </p>
    name: isImageRacyClassified
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isImageRacyClassified value.</p>

    <p></p>
  syntax: public Evaluate withIsImageRacyClassified(Boolean isImageRacyClassified)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withIsImageRacyClassified(Boolean)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withRacyClassificationScore(Double racyClassificationScore)
  name: withRacyClassificationScore(Double racyClassificationScore)
  nameWithType: Evaluate.withRacyClassificationScore(Double racyClassificationScore)
  parameters:
  - description: <p>the racyClassificationScore value to set </p>
    name: racyClassificationScore
    type: <xref href="Double?alt=Double&text=Double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the racyClassificationScore value.</p>

    <p></p>
  syntax: public Evaluate withRacyClassificationScore(Double racyClassificationScore)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withRacyClassificationScore(Double)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withResult(Boolean result)
  name: withResult(Boolean result)
  nameWithType: Evaluate.withResult(Boolean result)
  parameters:
  - description: <p>the result value to set </p>
    name: result
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the result value.</p>

    <p></p>
  syntax: public Evaluate withResult(Boolean result)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withResult(Boolean)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withStatus(Status status)
  name: withStatus(Status status)
  nameWithType: Evaluate.withStatus(Status status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Status&text=Status" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the status value.</p>

    <p></p>
  syntax: public Evaluate withStatus(Status status)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withStatus(Status)
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withTrackingId(String trackingId)
  name: withTrackingId(String trackingId)
  nameWithType: Evaluate.withTrackingId(String trackingId)
  parameters:
  - description: <p>the trackingId value to set </p>
    name: trackingId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Evaluate object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the trackingId value.</p>

    <p></p>
  syntax: public Evaluate withTrackingId(String trackingId)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate.withTrackingId(String)
nameWithType: Evaluate
syntax: public class Evaluate
type: class
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate
name: Evaluate
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator.models
summary: <p>Evaluate response object. </p>
metadata: {}
