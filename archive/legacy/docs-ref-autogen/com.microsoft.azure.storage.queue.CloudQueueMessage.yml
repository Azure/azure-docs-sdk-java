### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.CloudQueueMessage()
  name: CloudQueueMessage()
  nameWithType: CloudQueueMessage.CloudQueueMessage()
  summary: <p>Initializes a new instance of the  class (used internally). </p>
  syntax: protected CloudQueueMessage()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.CloudQueueMessage()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.CloudQueueMessage(final byte[] content)
  name: CloudQueueMessage(final byte[] content)
  nameWithType: CloudQueueMessage.CloudQueueMessage(final byte[] content)
  parameters:
  - description: <p>A <code>byte</code> array which contains the message. </p>
    name: content
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the  class with a  array containing the message.</p>

    <p></p>
  syntax: public CloudQueueMessage(final byte[] content)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.CloudQueueMessage(final byte [])
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.CloudQueueMessage(final String content)
  name: CloudQueueMessage(final String content)
  nameWithType: CloudQueueMessage.CloudQueueMessage(final String content)
  parameters:
  - description: <p>A <code>String</code> which contains the message. </p>
    name: content
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the  class with a  containing the message.</p>

    <p></p>
  syntax: public CloudQueueMessage(final String content)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.CloudQueueMessage(final String)
fields:
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.messageContent
  name: messageContent
  nameWithType: CloudQueueMessage.messageContent
  summary: <p>Holds the message content. </p>
  syntax: protected String messageContent
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.messageContent
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getDequeueCount()
  name: getDequeueCount()
  nameWithType: CloudQueueMessage.getDequeueCount()
  returns:
    description: <p>An <code>int</code> which contains the dequeue count. </p>
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the dequeue count.</p>

    <p></p>
  syntax: public final int getDequeueCount()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getDequeueCount()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getExpirationTime()
  name: getExpirationTime()
  nameWithType: CloudQueueMessage.getExpirationTime()
  returns:
    description: <p>A <code>java.util.Date</code> object which represents the time that the message expires. </p>
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the time that the message expires.</p>

    <p></p>
  syntax: public final Date getExpirationTime()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getExpirationTime()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getId()
  name: getId()
  nameWithType: CloudQueueMessage.getId()
  returns:
    description: <p>A <code>String</code> which contains the message ID. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the message ID.</p>

    <p></p>
  syntax: public final String getId()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getId()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getInsertionTime()
  name: getInsertionTime()
  nameWithType: CloudQueueMessage.getInsertionTime()
  returns:
    description: <p>A <code>java.util.Date</code> which represents the time the message was added to the queue. </p>
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the time the message was added to the queue.</p>

    <p></p>
  syntax: public final Date getInsertionTime()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getInsertionTime()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageContentAsByte()
  name: getMessageContentAsByte()
  nameWithType: CloudQueueMessage.getMessageContentAsByte()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>byte</code> array which contains the content of the message.</p>
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content of the message as a byte array.</p>

    <p></p>
  syntax: public final byte [] getMessageContentAsByte()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageContentAsByte()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageContentAsString()
  name: getMessageContentAsString()
  nameWithType: CloudQueueMessage.getMessageContentAsString()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which contains the content of the message.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content of the message as a string.</p>

    <p></p>
  syntax: public final String getMessageContentAsString()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageContentAsString()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageContentForTransfer(final boolean shouldEncodeMessage, QueueRequestOptions options)
  name: getMessageContentForTransfer(final boolean shouldEncodeMessage, QueueRequestOptions options)
  nameWithType: CloudQueueMessage.getMessageContentForTransfer(final boolean shouldEncodeMessage, QueueRequestOptions options)
  parameters:
  - description: <p>Indicates if the message should be encoded. </p>
    name: shouldEncodeMessage
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.queue.QueueRequestOptions" data-throw-if-not-resolved="false" data-raw-source="QueueRequestOptions"></xref> object that specifies additional options for the request.</p>
    name: options
    type: <xref href="com.microsoft.azure.storage.queue.QueueRequestOptions?alt=com.microsoft.azure.storage.queue.QueueRequestOptions&text=QueueRequestOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>A <code>String</code> which contains the content of the message.</p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content of the message for transfer (internal use only).</p>

    <p></p>
  syntax: protected final String getMessageContentForTransfer(final boolean shouldEncodeMessage, QueueRequestOptions options)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageContentForTransfer(final boolean,QueueRequestOptions)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageId()
  name: getMessageId()
  nameWithType: CloudQueueMessage.getMessageId()
  returns:
    description: <p>A <code>String</code> which contains the message ID. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the message ID.</p>

    <p></p>
  syntax: public final String getMessageId()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageId()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageType()
  name: getMessageType()
  nameWithType: CloudQueueMessage.getMessageType()
  returns:
    description: <p>A <code>QueueMessageType</code> value which represents the message type. </p>
    type: <xref href="final+QueueMessageType?alt=final+QueueMessageType&text=final+QueueMessageType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the message type.</p>

    <p></p>
  syntax: protected final QueueMessageType getMessageType()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getMessageType()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getNextVisibleTime()
  name: getNextVisibleTime()
  nameWithType: CloudQueueMessage.getNextVisibleTime()
  returns:
    description: <p>A <code>java.util.Date</code> with the time that the message will next be visible. </p>
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the time that the message will next be visible.</p>

    <p></p>
  syntax: public final Date getNextVisibleTime()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getNextVisibleTime()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.getPopReceipt()
  name: getPopReceipt()
  nameWithType: CloudQueueMessage.getPopReceipt()
  returns:
    description: <p>A <code>String</code> which contains the message's pop receipt. </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the message's pop receipt.</p>

    <p></p>
  syntax: public final String getPopReceipt()
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.getPopReceipt()
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setDequeueCount(int dequeueCount)
  name: setDequeueCount(int dequeueCount)
  nameWithType: CloudQueueMessage.setDequeueCount(int dequeueCount)
  parameters:
  - description: <p>An <code>int</code> which contains the dequeue count. </p>
    name: dequeueCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the dequeue count.</p>

    <p></p>
  syntax: protected final void setDequeueCount(int dequeueCount)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setDequeueCount(int)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setExpirationTime(final Date expirationTime)
  name: setExpirationTime(final Date expirationTime)
  nameWithType: CloudQueueMessage.setExpirationTime(final Date expirationTime)
  parameters:
  - description: <p>The <code>java.util.Date</code> which represents the expiration time to set on the message. </p>
    name: expirationTime
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the expiration time for the message.</p>

    <p></p>
  syntax: protected final void setExpirationTime(final Date expirationTime)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setExpirationTime(final Date)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setInsertionTime(Date insertionTime)
  name: setInsertionTime(Date insertionTime)
  nameWithType: CloudQueueMessage.setInsertionTime(Date insertionTime)
  parameters:
  - description: <p>The <code>java.util.Date</code> representing the time the message was added to the queue. </p>
    name: insertionTime
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the  representing the time the message was added to the queue.</p>

    <p></p>
  syntax: protected final void setInsertionTime(Date insertionTime)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setInsertionTime(Date)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageContent(final byte[] content)
  name: setMessageContent(final byte[] content)
  nameWithType: CloudQueueMessage.setMessageContent(final byte[] content)
  parameters:
  - description: <p>A <code>byte</code> array which contains the content of the message. </p>
    name: content
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content of the message as a  array.</p>

    <p></p>
  syntax: public final void setMessageContent(final byte[] content)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageContent(final byte [])
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageContent(final String content)
  name: setMessageContent(final String content)
  nameWithType: CloudQueueMessage.setMessageContent(final String content)
  parameters:
  - description: <p>A <code>String</code> which contains the content of the message. </p>
    name: content
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content of the message as a .</p>

    <p></p>
  syntax: public final void setMessageContent(final String content)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageContent(final String)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageId(String id)
  name: setMessageId(String id)
  nameWithType: CloudQueueMessage.setMessageId(String id)
  parameters:
  - description: <p>A <code>String</code> which represents the message ID. </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the message ID.</p>

    <p></p>
  syntax: protected final void setMessageId(String id)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageId(String)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageType(final QueueMessageType messageType)
  name: setMessageType(final QueueMessageType messageType)
  nameWithType: CloudQueueMessage.setMessageType(final QueueMessageType messageType)
  parameters:
  - description: <p>A <code>QueueMessageType</code> value which represents the message type. </p>
    name: messageType
    type: <xref href="final+QueueMessageType?alt=final+QueueMessageType&text=final+QueueMessageType" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the message's type</p>

    <p></p>
  syntax: protected final void setMessageType(final QueueMessageType messageType)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setMessageType(final QueueMessageType)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setNextVisibleTime(final Date nextVisibleTime)
  name: setNextVisibleTime(final Date nextVisibleTime)
  nameWithType: CloudQueueMessage.setNextVisibleTime(final Date nextVisibleTime)
  parameters:
  - description: <p>A <code>java.util.Date</code> with the time that the message will next be visible. </p>
    name: nextVisibleTime
    type: <xref href="final+Date?alt=final+Date&text=final+Date" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the time for the message to become visible in the queue.</p>

    <p></p>
  syntax: protected final void setNextVisibleTime(final Date nextVisibleTime)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setNextVisibleTime(final Date)
- fullName: com.microsoft.azure.storage.queue.CloudQueueMessage.setPopReceipt(final String popReceipt)
  name: setPopReceipt(final String popReceipt)
  nameWithType: CloudQueueMessage.setPopReceipt(final String popReceipt)
  parameters:
  - description: <p>A <code>String</code> which contains the message's pop receipt. </p>
    name: popReceipt
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the message's pop receipt.</p>

    <p></p>
  syntax: protected final void setPopReceipt(final String popReceipt)
  uid: com.microsoft.azure.storage.queue.CloudQueueMessage.setPopReceipt(final String)
nameWithType: CloudQueueMessage
syntax: public class CloudQueueMessage
type: class
uid: com.microsoft.azure.storage.queue.CloudQueueMessage
fullName: com.microsoft.azure.storage.queue.CloudQueueMessage
name: CloudQueueMessage
package: com.microsoft.azure.storage.queue
summary: <p>Represents a message in the Microsoft Azure Queue service. </p>
metadata: {}
