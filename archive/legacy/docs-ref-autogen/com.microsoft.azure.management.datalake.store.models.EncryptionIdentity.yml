### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.EncryptionIdentity()
  name: EncryptionIdentity()
  nameWithType: EncryptionIdentity.EncryptionIdentity()
  summary: <p>Creates an instance of EncryptionIdentity class. </p>
  syntax: public EncryptionIdentity()
  uid: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.EncryptionIdentity()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.principalId()
  name: principalId()
  nameWithType: EncryptionIdentity.principalId()
  returns:
    description: <p>the principalId value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the principalId value.</p>

    <p></p>
  syntax: public UUID principalId()
  uid: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.principalId()
- fullName: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.tenantId()
  name: tenantId()
  nameWithType: EncryptionIdentity.tenantId()
  returns:
    description: <p>the tenantId value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tenantId value.</p>

    <p></p>
  syntax: public UUID tenantId()
  uid: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.tenantId()
- fullName: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.type()
  name: type()
  nameWithType: EncryptionIdentity.type()
  returns:
    description: <p>the type value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type value.</p>

    <p></p>
  syntax: public String type()
  uid: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.type()
- fullName: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.withType(String type)
  name: withType(String type)
  nameWithType: EncryptionIdentity.withType(String type)
  parameters:
  - description: <p>the type value to set </p>
    name: type
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the EncryptionIdentity object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.store.models.EncryptionIdentity?alt=com.microsoft.azure.management.datalake.store.models.EncryptionIdentity&text=EncryptionIdentity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type value.</p>

    <p></p>
  syntax: public EncryptionIdentity withType(String type)
  uid: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity.withType(String)
nameWithType: EncryptionIdentity
syntax: public class EncryptionIdentity
type: class
uid: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity
fullName: com.microsoft.azure.management.datalake.store.models.EncryptionIdentity
name: EncryptionIdentity
package: com.microsoft.azure.management.datalake.store.models
summary: <p>The encryption identity properties. </p>
metadata: {}
