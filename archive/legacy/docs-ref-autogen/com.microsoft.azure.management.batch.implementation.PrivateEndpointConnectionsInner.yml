### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.PrivateEndpointConnectionsInner(Retrofit retrofit, BatchManagementClientImpl client)
  name: PrivateEndpointConnectionsInner(Retrofit retrofit, BatchManagementClientImpl client)
  nameWithType: PrivateEndpointConnectionsInner.PrivateEndpointConnectionsInner(Retrofit retrofit, BatchManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl?alt=com.microsoft.azure.management.batch.implementation.BatchManagementClientImpl&text=BatchManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of PrivateEndpointConnectionsInner.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionsInner(Retrofit retrofit, BatchManagementClientImpl client)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.PrivateEndpointConnectionsInner(Retrofit,BatchManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionInner beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdate(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  name: beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionInner beginUpdate(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdate(String,String,String,PrivateEndpointConnectionInner,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionInner> beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionInner> beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String,String,String,PrivateEndpointConnectionInner,final ServiceCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  name: beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionInner> beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String,String,String,PrivateEndpointConnectionInner,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionInner> beginUpdateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateAsync(String,String,String,PrivateEndpointConnectionInner,String,final ServiceCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders?alt=com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders&text=PrivateEndpointConnectionUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<PrivateEndpointConnectionInner, PrivateEndpointConnectionUpdateHeaders>> beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateWithServiceResponseAsync(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  name: beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  nameWithType: PrivateEndpointConnectionsInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders?alt=com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders&text=PrivateEndpointConnectionUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<PrivateEndpointConnectionInner, PrivateEndpointConnectionUpdateHeaders>> beginUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.beginUpdateWithServiceResponseAsync(String,String,String,PrivateEndpointConnectionInner,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.get(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  name: get(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.get(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about the specified private endpoint connection.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionInner get(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.get(String,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  name: getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified private endpoint connection.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionInner> getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified private endpoint connection.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionInner> getAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.getAsync(String,String,String,final ServiceCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  name: getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  nameWithType: PrivateEndpointConnectionsInner.getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateEndpointConnectionInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about the specified private endpoint connection.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<PrivateEndpointConnectionInner>> getWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.getWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccount(final String resourceGroupName, final String accountName)
  name: listByBatchAccount(final String resourceGroupName, final String accountName)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccount(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PrivateEndpointConnectionInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public PagedList<PrivateEndpointConnectionInner> listByBatchAccount(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccount(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PrivateEndpointConnectionInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public PagedList<PrivateEndpointConnectionInner> listByBatchAccount(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccount(final String,final String,final Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateEndpointConnectionInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<PrivateEndpointConnectionInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateEndpointConnectionInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<PrivateEndpointConnectionInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String,final String,final Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<PrivateEndpointConnectionInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName, final Integer maxresults, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String,final String,final Integer,final ListOperationCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<PrivateEndpointConnectionInner>> listByBatchAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountAsync(final String,final String,final ListOperationCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNext(final String nextPageLink)
  name: listByBatchAccountNext(final String nextPageLink)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountNext(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PagedList&lt;PrivateEndpointConnectionInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public PagedList<PrivateEndpointConnectionInner> listByBatchAccountNext(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNext(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextAsync(final String nextPageLink)
  name: listByBatchAccountNextAsync(final String nextPageLink)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateEndpointConnectionInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<PrivateEndpointConnectionInner>> listByBatchAccountNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateEndpointConnectionInner>> serviceFuture, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateEndpointConnectionInner>> serviceFuture, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateEndpointConnectionInner>> serviceFuture, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<PrivateEndpointConnectionInner>> listByBatchAccountNextAsync(final String nextPageLink, final ServiceFuture<List<PrivateEndpointConnectionInner>> serviceFuture, final ListOperationCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextAsync(final String,final ServiceFuture<List<PrivateEndpointConnectionInner>>,final ListOperationCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  name: listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;PrivateEndpointConnectionInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p>ServiceResponse&lt;PageImpl&lt;PrivateEndpointConnectionInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<PrivateEndpointConnectionInner>>> listByBatchAccountNextSinglePageAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextSinglePageAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  name: listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateEndpointConnectionInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateEndpointConnectionInner>>> listByBatchAccountNextWithServiceResponseAsync(final String nextPageLink)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountNextWithServiceResponseAsync(final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  name: listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;PrivateEndpointConnectionInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateEndpointConnectionInner>>> listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountSinglePageAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. ServiceResponse&lt;PageImpl&lt;PrivateEndpointConnectionInner&gt;&gt; * </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. ServiceResponse&lt;PageImpl&lt;PrivateEndpointConnectionInner&gt;&gt; * </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the PagedList&lt;PrivateEndpointConnectionInner&gt; object wrapped in <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> if successful. </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p>ServiceResponse&lt;PageImpl&lt;PrivateEndpointConnectionInner&gt;&gt; * </p>
  syntax: public Observable<ServiceResponse<Page<PrivateEndpointConnectionInner>>> listByBatchAccountSinglePageAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountSinglePageAsync(final String,final String,final Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  name: listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateEndpointConnectionInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateEndpointConnectionInner>>> listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountWithServiceResponseAsync(final String,final String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  name: listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  nameWithType: PrivateEndpointConnectionsInner.listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of items to return in the response. </p>
    name: maxresults
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PrivateEndpointConnectionInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;Page&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Lists all of the private endpoint connections in the specified account.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Page<PrivateEndpointConnectionInner>>> listByBatchAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName, final Integer maxresults)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.listByBatchAccountWithServiceResponseAsync(final String,final String,final Integer)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionInner update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.update(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  name: update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  nameWithType: PrivateEndpointConnectionsInner.update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PrivateEndpointConnectionInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public PrivateEndpointConnectionInner update(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.update(String,String,String,PrivateEndpointConnectionInner,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionInner> updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionInner> updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String,String,String,PrivateEndpointConnectionInner,final ServiceCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  name: updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  nameWithType: PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<PrivateEndpointConnectionInner> updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String,String,String,PrivateEndpointConnectionInner,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  nameWithType: PrivateEndpointConnectionsInner.updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateEndpointConnectionInner> updateAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch, final ServiceCallback<PrivateEndpointConnectionInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateAsync(String,String,String,PrivateEndpointConnectionInner,String,final ServiceCallback<PrivateEndpointConnectionInner>)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  name: updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  nameWithType: PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders?alt=com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders&text=PrivateEndpointConnectionUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<PrivateEndpointConnectionInner, PrivateEndpointConnectionUpdateHeaders>> updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String,String,String,PrivateEndpointConnectionInner)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  name: updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  nameWithType: PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private endpoint connection name. This must be unique within the account. </p>
    name: privateEndpointConnectionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>PrivateEndpointConnection properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>
  - description: <p>The state (ETag) version of the private endpoint connection to update. This value can be omitted or set to "*" to apply the operation unconditionally. </p>
    name: ifMatch
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable for the request </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner?alt=com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders?alt=com.microsoft.azure.management.batch.PrivateEndpointConnectionUpdateHeaders&text=PrivateEndpointConnectionUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates the properties of an existing private endpoint connection.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<PrivateEndpointConnectionInner, PrivateEndpointConnectionUpdateHeaders>> updateWithServiceResponseAsync(String resourceGroupName, String accountName, String privateEndpointConnectionName, PrivateEndpointConnectionInner parameters, String ifMatch)
  uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner.updateWithServiceResponseAsync(String,String,String,PrivateEndpointConnectionInner,String)
nameWithType: PrivateEndpointConnectionsInner
syntax: public class PrivateEndpointConnectionsInner
type: class
uid: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner
fullName: com.microsoft.azure.management.batch.implementation.PrivateEndpointConnectionsInner
name: PrivateEndpointConnectionsInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>An instance of this class provides access to all the operations defined in PrivateEndpointConnections. </p>
metadata: {}
