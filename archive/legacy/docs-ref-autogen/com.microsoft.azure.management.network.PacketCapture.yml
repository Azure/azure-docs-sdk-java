### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
methods:
- fullName: com.microsoft.azure.management.network.PacketCapture.bytesToCapturePerPacket()
  name: bytesToCapturePerPacket()
  nameWithType: PacketCapture.bytesToCapturePerPacket()
  returns:
    description: <p>the number of bytes captured per packet, the remaining bytes are truncated. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int bytesToCapturePerPacket()
  uid: com.microsoft.azure.management.network.PacketCapture.bytesToCapturePerPacket()
- fullName: com.microsoft.azure.management.network.PacketCapture.filters()
  name: filters()
  nameWithType: PacketCapture.filters()
  returns:
    description: <p>the filters value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.network.PacketCaptureFilter?alt=com.microsoft.azure.management.network.PacketCaptureFilter&text=PacketCaptureFilter" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<PacketCaptureFilter> filters()
  uid: com.microsoft.azure.management.network.PacketCapture.filters()
- fullName: com.microsoft.azure.management.network.PacketCapture.getStatus()
  name: getStatus()
  nameWithType: PacketCapture.getStatus()
  returns:
    description: <p>packet capture status </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptureStatus?alt=com.microsoft.azure.management.network.PacketCaptureStatus&text=PacketCaptureStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Query the status of a running packet capture session.</p>

    <p></p>
  syntax: public PacketCaptureStatus getStatus()
  uid: com.microsoft.azure.management.network.PacketCapture.getStatus()
- fullName: com.microsoft.azure.management.network.PacketCapture.getStatusAsync()
  name: getStatusAsync()
  nameWithType: PacketCapture.getStatusAsync()
  returns:
    description: <p>packet capture status </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.network.PacketCaptureStatus?alt=com.microsoft.azure.management.network.PacketCaptureStatus&text=PacketCaptureStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Query the status of a running packet capture session asynchronously.</p>

    <p></p>
  syntax: public Observable<PacketCaptureStatus> getStatusAsync()
  uid: com.microsoft.azure.management.network.PacketCapture.getStatusAsync()
- fullName: com.microsoft.azure.management.network.PacketCapture.provisioningState()
  name: provisioningState()
  nameWithType: PacketCapture.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.network.ProvisioningState?alt=com.microsoft.azure.management.network.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the provisioning state of the packet capture session. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'.</p>

    <p></p>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.network.PacketCapture.provisioningState()
- fullName: com.microsoft.azure.management.network.PacketCapture.stop()
  name: stop()
  nameWithType: PacketCapture.stop()
  summary: <p>Stops a specified packet capture session. </p>
  syntax: public void stop()
  uid: com.microsoft.azure.management.network.PacketCapture.stop()
- fullName: com.microsoft.azure.management.network.PacketCapture.stopAsync()
  name: stopAsync()
  nameWithType: PacketCapture.stopAsync()
  returns:
    description: <p>the handle to the REST call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: <p>Stops a specified packet capture session asynchronously. </p>
  syntax: public Completable stopAsync()
  uid: com.microsoft.azure.management.network.PacketCapture.stopAsync()
- fullName: com.microsoft.azure.management.network.PacketCapture.storageLocation()
  name: storageLocation()
  nameWithType: PacketCapture.storageLocation()
  returns:
    description: <p>the storageLocation value </p>
    type: <xref href="com.microsoft.azure.management.network.PacketCaptureStorageLocation?alt=com.microsoft.azure.management.network.PacketCaptureStorageLocation&text=PacketCaptureStorageLocation" data-throw-if-not-resolved="False"/>
  syntax: public PacketCaptureStorageLocation storageLocation()
  uid: com.microsoft.azure.management.network.PacketCapture.storageLocation()
- fullName: com.microsoft.azure.management.network.PacketCapture.targetId()
  name: targetId()
  nameWithType: PacketCapture.targetId()
  returns:
    description: <p>the target id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String targetId()
  uid: com.microsoft.azure.management.network.PacketCapture.targetId()
- fullName: com.microsoft.azure.management.network.PacketCapture.timeLimitInSeconds()
  name: timeLimitInSeconds()
  nameWithType: PacketCapture.timeLimitInSeconds()
  returns:
    description: <p>the maximum duration of the capture session in seconds </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int timeLimitInSeconds()
  uid: com.microsoft.azure.management.network.PacketCapture.timeLimitInSeconds()
- fullName: com.microsoft.azure.management.network.PacketCapture.totalBytesPerSession()
  name: totalBytesPerSession()
  nameWithType: PacketCapture.totalBytesPerSession()
  returns:
    description: <p>the maximum size of the capture output </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int totalBytesPerSession()
  uid: com.microsoft.azure.management.network.PacketCapture.totalBytesPerSession()
nameWithType: PacketCapture
syntax: public interface PacketCapture extends HasInner<PacketCaptureResultInner>,HasName,HasId,Indexable
type: interface
uid: com.microsoft.azure.management.network.PacketCapture
fullName: com.microsoft.azure.management.network.PacketCapture
name: PacketCapture
package: com.microsoft.azure.management.network
summary: <p>Client-side representation of Packet capture object, associated with Network Watcher. </p>
metadata: {}
