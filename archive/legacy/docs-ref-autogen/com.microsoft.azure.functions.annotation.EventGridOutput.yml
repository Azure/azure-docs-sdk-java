### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.functions.annotation.EventGridOutput.dataType()
  name: dataType()
  nameWithType: EventGridOutput.dataType()
  returns:
    description: <p>The dataType which will be used by the Functions runtime. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines how Functions runtime should treat the parameter value. Possible values are:</p>

    <p>

      <ul>

        <li>

          <p>"" or string: treat it as a string whose value is serialized from the parameter </p>

        </li>

        <li>

          <p>binary: treat it as a binary data whose value comes from for example OutputBinding&lt;byte[]&gt; </p>

        </li>

      </ul>

    </p>
  syntax: public String dataType() default ""
  uid: com.microsoft.azure.functions.annotation.EventGridOutput.dataType()
- fullName: com.microsoft.azure.functions.annotation.EventGridOutput.name()
  name: name()
  nameWithType: EventGridOutput.name()
  returns:
    description: <p>The variable name used in function.json. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>The variable name used in function.json. </p>
  syntax: public String name()
  uid: com.microsoft.azure.functions.annotation.EventGridOutput.name()
- fullName: com.microsoft.azure.functions.annotation.EventGridOutput.topicEndpointUri()
  name: topicEndpointUri()
  nameWithType: EventGridOutput.topicEndpointUri()
  returns:
    description: <p>The topic events endpoint URI of the eventGrid topic. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: "<p>Gets or sets the topic events endpoint URI. Eg: <a href=\"https://topic1.westus2-1.eventgrid.azure.net/api/events\">https://topic1.westus2-1.eventgrid.azure.net/api/events</a> This is found in the Event Grid Topic's definition. You can find information on getting the Url for a topic here: <a href=\"https://docs.microsoft.com/en-us/azure/event-grid/custom-event-quickstart#send-an-event-to-your-topic\">https://docs.microsoft.com/en-us/azure/event-grid/custom-event-quickstart#send-an-event-to-your-topic</a></p>"
  syntax: public String topicEndpointUri()
  uid: com.microsoft.azure.functions.annotation.EventGridOutput.topicEndpointUri()
- fullName: com.microsoft.azure.functions.annotation.EventGridOutput.topicKeySetting()
  name: topicKeySetting()
  nameWithType: EventGridOutput.topicKeySetting()
  returns:
    description: <p>The topic key setting of the eventGrid topic. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Gets or sets the Topic Key setting. You can find information on getting the Key for a topic here: <a href="https://docs.microsoft.com/en-us/azure/event-grid/custom-event-quickstart#send-an-event-to-your-topic">https://docs.microsoft.com/en-us/azure/event-grid/custom-event-quickstart#send-an-event-to-your-topic</a></p>'
  syntax: public String topicKeySetting()
  uid: com.microsoft.azure.functions.annotation.EventGridOutput.topicKeySetting()
nameWithType: EventGridOutput
syntax: public interface EventGridOutput
type: interface
uid: com.microsoft.azure.functions.annotation.EventGridOutput
fullName: com.microsoft.azure.functions.annotation.EventGridOutput
name: EventGridOutput
package: com.microsoft.azure.functions.annotation
summary: >-
  <p>EventGridOutput(name = "outputEvent", topicEndpointUri = "MyEventGridTopicUriSetting", topicKeySetting = "MyEventGridTopicKeySetting") OutputBinding&lt;String&gt; outputEvent final ExecutionContext context ) { context.getLogger().info(content); final String eventGridOutputDocument = "{\"id": "100", "eventType":"recordInserted", "subject": "myapp/test/java", "eventTime":"2017-08-10T21:03:07+00:00", "data": {"tag1": "value1","tag2":"value2"}, "dataVersion": "1.0"}"; outputEvent.setValue(eventGridOutputDocument); }</p>

  <p></p>
metadata: {}
