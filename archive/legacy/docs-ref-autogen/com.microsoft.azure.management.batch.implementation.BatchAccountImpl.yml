### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.BatchAccountImpl(String name, BatchAccountInner innerObject, BatchManager manager, final StorageManager storageManager)
  name: BatchAccountImpl(String name, BatchAccountInner innerObject, BatchManager manager, final StorageManager storageManager)
  nameWithType: BatchAccountImpl.BatchAccountImpl(String name, BatchAccountInner innerObject, BatchManager manager, final StorageManager storageManager)
  parameters:
  - name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: innerObject
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>
  - name: manager
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManager?alt=com.microsoft.azure.management.batch.implementation.BatchManager&text=BatchManager" data-throw-if-not-resolved="False"/>
  - name: storageManager
    type: <xref href="final+StorageManager?alt=final+StorageManager&text=final+StorageManager" data-throw-if-not-resolved="False"/>
  syntax: protected BatchAccountImpl(String name, BatchAccountInner innerObject, BatchManager manager, final StorageManager storageManager)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.BatchAccountImpl(String,BatchAccountInner,BatchManager,final StorageManager)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupableResourceImpl&lt;BatchAccount, BatchAccountInner, BatchAccountImpl, BatchManager&gt;" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(Region)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
methods:
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.accountEndpoint()
  name: accountEndpoint()
  nameWithType: BatchAccountImpl.accountEndpoint()
  overridden: com.microsoft.azure.management.batch.BatchAccount.accountEndpoint()
  returns:
    description: <p>Batch account endpoint </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String accountEndpoint()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.accountEndpoint()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.activeJobAndJobScheduleQuota()
  name: activeJobAndJobScheduleQuota()
  nameWithType: BatchAccountImpl.activeJobAndJobScheduleQuota()
  overridden: com.microsoft.azure.management.batch.BatchAccount.activeJobAndJobScheduleQuota()
  returns:
    description: <p>the active job and job schedule quota for this Batch account </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int activeJobAndJobScheduleQuota()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.activeJobAndJobScheduleQuota()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.applications()
  name: applications()
  nameWithType: BatchAccountImpl.applications()
  overridden: com.microsoft.azure.management.batch.BatchAccount.applications()
  returns:
    description: <p>applications in this Batch account, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.batch.Application?alt=com.microsoft.azure.management.batch.Application&text=Application" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, Application> applications()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.applications()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.autoStorage()
  name: autoStorage()
  nameWithType: BatchAccountImpl.autoStorage()
  overridden: com.microsoft.azure.management.batch.BatchAccount.autoStorage()
  returns:
    description: <p>the properties and status of any auto storage account associated with the Batch account </p>
    type: <xref href="com.microsoft.azure.management.batch.AutoStorageProperties?alt=com.microsoft.azure.management.batch.AutoStorageProperties&text=AutoStorageProperties" data-throw-if-not-resolved="False"/>
  syntax: public AutoStorageProperties autoStorage()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.autoStorage()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.coreQuota()
  name: coreQuota()
  nameWithType: BatchAccountImpl.coreQuota()
  overridden: com.microsoft.azure.management.batch.BatchAccount.coreQuota()
  returns:
    description: <p>the core quota for this Batch account </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int coreQuota()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.coreQuota()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.createResourceAsync()
  name: createResourceAsync()
  nameWithType: BatchAccountImpl.createResourceAsync()
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.BatchAccount?alt=com.microsoft.azure.management.batch.BatchAccount&text=BatchAccount" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Observable<BatchAccount> createResourceAsync()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.createResourceAsync()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuota()
  name: dedicatedCoreQuota()
  nameWithType: BatchAccountImpl.dedicatedCoreQuota()
  overridden: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuota()
  returns:
    description: <p>the dedicated core quota for the Batch account </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer dedicatedCoreQuota()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuota()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuotaPerVMFamily()
  name: dedicatedCoreQuotaPerVMFamily()
  nameWithType: BatchAccountImpl.dedicatedCoreQuotaPerVMFamily()
  overridden: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuotaPerVMFamily()
  returns:
    description: <p>a list of the dedicated core quota per Virtual Machine family for the Batch account </p>
    type: List&lt;<xref href="com.microsoft.azure.management.batch.VirtualMachineFamilyCoreQuota?alt=com.microsoft.azure.management.batch.VirtualMachineFamilyCoreQuota&text=VirtualMachineFamilyCoreQuota" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<VirtualMachineFamilyCoreQuota> dedicatedCoreQuotaPerVMFamily()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuotaPerVMFamily()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuotaPerVMFamilyEnforced()
  name: dedicatedCoreQuotaPerVMFamilyEnforced()
  nameWithType: BatchAccountImpl.dedicatedCoreQuotaPerVMFamilyEnforced()
  overridden: com.microsoft.azure.management.batch.BatchAccount.dedicatedCoreQuotaPerVMFamilyEnforced()
  returns:
    description: <p>value indicating whether the core quota for the Batch Account is enforced per Virtual Machine family or not </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean dedicatedCoreQuotaPerVMFamilyEnforced()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.dedicatedCoreQuotaPerVMFamilyEnforced()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.defineNewApplication(String applicationId)
  name: defineNewApplication(String applicationId)
  nameWithType: BatchAccountImpl.defineNewApplication(String applicationId)
  overridden: com.microsoft.azure.management.batch.BatchAccount.DefinitionStages.WithApplication.defineNewApplication(String)
  parameters:
  - description: <p>the id of the application to create </p>
    name: applicationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.ApplicationImpl?alt=com.microsoft.azure.management.batch.implementation.ApplicationImpl&text=ApplicationImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The stage of a Batch account definition allowing to add a Batch application.</p>

    <p></p>
  syntax: public ApplicationImpl defineNewApplication(String applicationId)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.defineNewApplication(String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.defineNewPool(String poolId)
  name: defineNewPool(String poolId)
  nameWithType: BatchAccountImpl.defineNewPool(String poolId)
  overridden: com.microsoft.azure.management.batch.BatchAccount.DefinitionStages.WithPool.defineNewPool(String)
  parameters:
  - description: <p>the id of the pool to create </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The stage of a Batch account definition allowing to add a Batch pool.</p>

    <p></p>
  syntax: public PoolImpl defineNewPool(String poolId)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.defineNewPool(String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.getInnerAsync()
  name: getInnerAsync()
  nameWithType: BatchAccountImpl.getInnerAsync()
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.BatchAccountInner?alt=com.microsoft.azure.management.batch.implementation.BatchAccountInner&text=BatchAccountInner" data-throw-if-not-resolved="False"/>&gt;
  syntax: protected Observable<BatchAccountInner> getInnerAsync()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.getInnerAsync()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.getKeys()
  name: getKeys()
  nameWithType: BatchAccountImpl.getKeys()
  overridden: com.microsoft.azure.management.batch.BatchAccount.getKeys()
  returns:
    description: <p>the access keys for this Batch account </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountKeys?alt=com.microsoft.azure.management.batch.BatchAccountKeys&text=BatchAccountKeys" data-throw-if-not-resolved="False"/>
  syntax: public BatchAccountKeys getKeys()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.getKeys()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.lowPriorityCoreQuota()
  name: lowPriorityCoreQuota()
  nameWithType: BatchAccountImpl.lowPriorityCoreQuota()
  overridden: com.microsoft.azure.management.batch.BatchAccount.lowPriorityCoreQuota()
  returns:
    description: <p>the low-priority core quota for the Batch account </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  syntax: public Integer lowPriorityCoreQuota()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.lowPriorityCoreQuota()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.poolQuota()
  name: poolQuota()
  nameWithType: BatchAccountImpl.poolQuota()
  overridden: com.microsoft.azure.management.batch.BatchAccount.poolQuota()
  returns:
    description: <p>the pool quota for this Batch account </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int poolQuota()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.poolQuota()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.pools()
  name: pools()
  nameWithType: BatchAccountImpl.pools()
  overridden: com.microsoft.azure.management.batch.BatchAccount.pools()
  returns:
    description: <p>pools in this Batch account, indexed by name </p>
    type: Map&lt;String, <xref href="com.microsoft.azure.management.batch.Pool?alt=com.microsoft.azure.management.batch.Pool&text=Pool" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Map<String, Pool> pools()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.pools()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.provisioningState()
  name: provisioningState()
  nameWithType: BatchAccountImpl.provisioningState()
  overridden: com.microsoft.azure.management.batch.BatchAccount.provisioningState()
  returns:
    description: <p>the provisioned state of the resource </p>
    type: <xref href="com.microsoft.azure.management.batch.ProvisioningState?alt=com.microsoft.azure.management.batch.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.provisioningState()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.refreshAsync()
  name: refreshAsync()
  nameWithType: BatchAccountImpl.refreshAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
  returns:
    description: <p>the Observable to refreshed resource </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.BatchAccount?alt=com.microsoft.azure.management.batch.BatchAccount&text=BatchAccount" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Refreshes the resource to sync with Azure.</p>

    <p></p>
  syntax: public Observable<BatchAccount> refreshAsync()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.refreshAsync()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.regenerateKeys(AccountKeyType keyType)
  name: regenerateKeys(AccountKeyType keyType)
  nameWithType: BatchAccountImpl.regenerateKeys(AccountKeyType keyType)
  overridden: com.microsoft.azure.management.batch.BatchAccount.regenerateKeys(AccountKeyType)
  parameters:
  - description: <p>the type if key to regenerate </p>
    name: keyType
    type: <xref href="com.microsoft.azure.management.batch.AccountKeyType?alt=com.microsoft.azure.management.batch.AccountKeyType&text=AccountKeyType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>regenerated access keys for this Batch account </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccountKeys?alt=com.microsoft.azure.management.batch.BatchAccountKeys&text=BatchAccountKeys" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Regenerates the access keys for the Batch account.</p>

    <p></p>
  syntax: public BatchAccountKeys regenerateKeys(AccountKeyType keyType)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.regenerateKeys(AccountKeyType)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.synchronizeAutoStorageKeys()
  name: synchronizeAutoStorageKeys()
  nameWithType: BatchAccountImpl.synchronizeAutoStorageKeys()
  overridden: com.microsoft.azure.management.batch.BatchAccount.synchronizeAutoStorageKeys()
  summary: <p>Synchronizes the storage account keys for this Batch account. </p>
  syntax: public void synchronizeAutoStorageKeys()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.synchronizeAutoStorageKeys()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updateApplication(String applicationId)
  name: updateApplication(String applicationId)
  nameWithType: BatchAccountImpl.updateApplication(String applicationId)
  overridden: com.microsoft.azure.management.batch.BatchAccount.UpdateStages.WithApplication.updateApplication(String)
  parameters:
  - description: <p>the reference name of the application to be updated </p>
    name: applicationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of a Batch application update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.ApplicationImpl?alt=com.microsoft.azure.management.batch.implementation.ApplicationImpl&text=ApplicationImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins the description of an update of an existing Batch application in this Batch account.</p>

    <p></p>
  syntax: public ApplicationImpl updateApplication(String applicationId)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updateApplication(String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updatePool(String poolId)
  name: updatePool(String poolId)
  nameWithType: BatchAccountImpl.updatePool(String poolId)
  overridden: com.microsoft.azure.management.batch.BatchAccount.UpdateStages.WithPool.updatePool(String)
  parameters:
  - description: <p>the reference name of the pool to be updated </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of a Batch pool update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.PoolImpl?alt=com.microsoft.azure.management.batch.implementation.PoolImpl&text=PoolImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Begins the description of an update of an existing Batch pool in this Batch account.</p>

    <p></p>
  syntax: public PoolImpl updatePool(String poolId)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updatePool(String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updateResourceAsync()
  name: updateResourceAsync()
  nameWithType: BatchAccountImpl.updateResourceAsync()
  returns:
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.BatchAccount?alt=com.microsoft.azure.management.batch.BatchAccount&text=BatchAccount" data-throw-if-not-resolved="False"/>&gt;
  syntax: public Observable<BatchAccount> updateResourceAsync()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.updateResourceAsync()
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withExistingStorageAccount(StorageAccount storageAccount)
  name: withExistingStorageAccount(StorageAccount storageAccount)
  nameWithType: BatchAccountImpl.withExistingStorageAccount(StorageAccount storageAccount)
  overridden: com.microsoft.azure.management.batch.BatchAccount.DefinitionStages.WithStorage.withExistingStorageAccount(StorageAccount)
  parameters:
  - description: <p>an existing storage account </p>
    name: storageAccount
    type: <xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountImpl?alt=com.microsoft.azure.management.batch.implementation.BatchAccountImpl&text=BatchAccountImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an existing storage account to associate with the Batch account.</p>

    <p></p>
  syntax: public BatchAccountImpl withExistingStorageAccount(StorageAccount storageAccount)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withExistingStorageAccount(StorageAccount)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withNewStorageAccount(Creatable<StorageAccount> creatable)
  name: withNewStorageAccount(Creatable<StorageAccount> creatable)
  nameWithType: BatchAccountImpl.withNewStorageAccount(Creatable<StorageAccount> creatable)
  overridden: com.microsoft.azure.management.batch.BatchAccount.DefinitionStages.WithStorage.withNewStorageAccount(Creatable<StorageAccount>)
  parameters:
  - description: <p>a storage account to be created along with and used in the Batch account </p>
    name: storageAccountCreatable
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountImpl?alt=com.microsoft.azure.management.batch.implementation.BatchAccountImpl&text=BatchAccountImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies a new storage account to associate with the Batch account.</p>

    <p></p>
  syntax: public BatchAccountImpl withNewStorageAccount(Creatable<StorageAccount> creatable)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withNewStorageAccount(Creatable<StorageAccount>)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withNewStorageAccount(String storageAccountName)
  name: withNewStorageAccount(String storageAccountName)
  nameWithType: BatchAccountImpl.withNewStorageAccount(String storageAccountName)
  overridden: com.microsoft.azure.management.batch.BatchAccount.DefinitionStages.WithStorage.withNewStorageAccount(String)
  parameters:
  - description: <p>the name of a new storage account </p>
    name: storageAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountImpl?alt=com.microsoft.azure.management.batch.implementation.BatchAccountImpl&text=BatchAccountImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the name of a new storage account to be created and associated with this Batch account.</p>

    <p></p>
  syntax: public BatchAccountImpl withNewStorageAccount(String storageAccountName)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withNewStorageAccount(String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutApplication(String applicationId)
  name: withoutApplication(String applicationId)
  nameWithType: BatchAccountImpl.withoutApplication(String applicationId)
  overridden: com.microsoft.azure.management.batch.BatchAccount.UpdateStages.WithApplication.withoutApplication(String)
  parameters:
  - description: <p>the reference name for the application to be removed </p>
    name: applicationId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccount.Update?alt=com.microsoft.azure.management.batch.BatchAccount.Update&text=BatchAccount.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes the specified application from the Batch account.</p>

    <p></p>
  syntax: public Update withoutApplication(String applicationId)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutApplication(String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutPool(String poolId)
  name: withoutPool(String poolId)
  nameWithType: BatchAccountImpl.withoutPool(String poolId)
  overridden: com.microsoft.azure.management.batch.BatchAccount.UpdateStages.WithPool.withoutPool(String)
  parameters:
  - description: <p>the reference name for the pool to be removed </p>
    name: poolId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccount.Update?alt=com.microsoft.azure.management.batch.BatchAccount.Update&text=BatchAccount.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes the specified pool from the Batch account.</p>

    <p></p>
  syntax: public Update withoutPool(String poolId)
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutPool(String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutStorageAccount()
  name: withoutStorageAccount()
  nameWithType: BatchAccountImpl.withoutStorageAccount()
  overridden: com.microsoft.azure.management.batch.BatchAccount.UpdateStages.WithStorageAccount.withoutStorageAccount()
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchAccountImpl?alt=com.microsoft.azure.management.batch.implementation.BatchAccountImpl&text=BatchAccountImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes the associated storage account.</p>

    <p></p>
  syntax: public BatchAccountImpl withoutStorageAccount()
  uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl.withoutStorageAccount()
nameWithType: BatchAccountImpl
syntax: public class BatchAccountImpl implements BatchAccount,BatchAccount.Definition,BatchAccount.Update
type: class
uid: com.microsoft.azure.management.batch.implementation.BatchAccountImpl
fullName: com.microsoft.azure.management.batch.implementation.BatchAccountImpl
name: BatchAccountImpl
package: com.microsoft.azure.management.batch.implementation
summary: <p>Implementation for BatchAccount and its parent interfaces. </p>
metadata: {}
