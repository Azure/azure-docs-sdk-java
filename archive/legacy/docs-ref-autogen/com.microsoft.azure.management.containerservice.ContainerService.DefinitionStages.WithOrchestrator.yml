### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
  name: withDcosOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux?alt=com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux&text=ContainerService.DefinitionStages.WithLinux" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the DCOS orchestration type for the container service. </p>
  syntax: public WithLinux withDcosOrchestration()
  uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
  name: withKubernetesOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile?alt=com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile&text=ContainerService.DefinitionStages.WithServicePrincipalProfile" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the Kubernetes orchestration type for the container service. </p>
  syntax: public WithServicePrincipalProfile withKubernetesOrchestration()
  uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
- fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
  name: withSwarmOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux?alt=com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux&text=ContainerService.DefinitionStages.WithLinux" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the Swarm orchestration type for the container service. </p>
  syntax: public WithLinux withSwarmOrchestration()
  uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
nameWithType: ContainerService.DefinitionStages.WithOrchestrator
syntax: public interface WithOrchestrator
type: interface
uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator
fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator
name: ContainerService.DefinitionStages.WithOrchestrator
package: com.microsoft.azure.management.containerservice
summary: <p>The stage of the container service definition allowing to specify orchestration type. </p>
metadata: {}
