### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.containerId()
  name: containerId()
  nameWithType: TaskContainerExecutionInformation.containerId()
  returns:
    description: <p>the containerId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the containerId value.</p>

    <p></p>
  syntax: public String containerId()
  uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.containerId()
- fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.error()
  name: error()
  nameWithType: TaskContainerExecutionInformation.error()
  returns:
    description: <p>the error value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is the detailed error string from the Docker service, if available. It is equivalent to the error field returned by "docker inspect".</p>

    <p></p>
  syntax: public String error()
  uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.error()
- fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.state()
  name: state()
  nameWithType: TaskContainerExecutionInformation.state()
  returns:
    description: <p>the state value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is the state of the container according to the Docker service. It is equivalent to the status field returned by "docker inspect".</p>

    <p></p>
  syntax: public String state()
  uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.state()
- fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.withContainerId(String containerId)
  name: withContainerId(String containerId)
  nameWithType: TaskContainerExecutionInformation.withContainerId(String containerId)
  parameters:
  - description: <p>the containerId value to set </p>
    name: containerId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskContainerExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the containerId value.</p>

    <p></p>
  syntax: public TaskContainerExecutionInformation withContainerId(String containerId)
  uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.withContainerId(String)
- fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.withError(String error)
  name: withError(String error)
  nameWithType: TaskContainerExecutionInformation.withError(String error)
  parameters:
  - description: <p>the error value to set </p>
    name: error
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskContainerExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this is the detailed error string from the Docker service, if available. It is equivalent to the error field returned by "docker inspect".</p>

    <p></p>
  syntax: public TaskContainerExecutionInformation withError(String error)
  uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.withError(String)
- fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.withState(String state)
  name: withState(String state)
  nameWithType: TaskContainerExecutionInformation.withState(String state)
  parameters:
  - description: <p>the state value to set </p>
    name: state
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the TaskContainerExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this is the state of the container according to the Docker service. It is equivalent to the status field returned by "docker inspect".</p>

    <p></p>
  syntax: public TaskContainerExecutionInformation withState(String state)
  uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation.withState(String)
nameWithType: TaskContainerExecutionInformation
syntax: public class TaskContainerExecutionInformation
type: class
uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
name: TaskContainerExecutionInformation
package: com.microsoft.azure.batch.protocol.models
summary: <p>Contains information about the container which a task is executing. </p>
metadata: {}
