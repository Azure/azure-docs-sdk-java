### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingProvider?alt=microsoft.servicefabric.services.remoting.ServiceRemotingProvider&text=ServiceRemotingProvider" data-throw-if-not-resolved="False"/>
inheritedMembers:
- microsoft.servicefabric.services.remoting.ServiceRemotingProvider.getProvider(Class<?>)
methods:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  name: createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  parameters:
  - description: <p>The client implementation where the callbacks should be dispatched. </p>
    name: callbackClient
    type: <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingCallbackClient&text=ServiceRemotingCallbackClient" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory"></xref> as <xref uid="microsoft.servicefabric.services.remoting.client.ServiceProxyFactory" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.client.ServiceProxyFactory"></xref> to generate service proxy to talk to a stateless or stateful service over remoted actor interface. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory?alt=microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory&text=ServiceRemotingClientFactory" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a service remoting client factory for connecting to the service over remoted service interfaces. </p>
  syntax: public ServiceRemotingClientFactory createServiceRemotingClientFactory(ServiceRemotingCallbackClient callbackClient)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  name: createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The service implementation object. </p>
    name: serviceImplementation
    type: <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider" data-throw-if-not-resolved="false" data-raw-source="FabricTransportServiceRemotingProvider"></xref> as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceRemotingListener"></xref> for the specified service implementation. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener&text=ServiceRemotingListener" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a service remoting listener for remoting the service interface. </p>
  syntax: public ServiceRemotingListener createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext,Service)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds()
  name: getConnectTimeoutInMilliseconds()
  nameWithType: FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds()
  returns:
    description: <p>The connect timeout in Milliseconds. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>
  syntax: public long getConnectTimeoutInMilliseconds()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getConnectTimeoutInMilliseconds()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds()
  name: getKeepAliveTimeoutInSeconds()
  nameWithType: FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds()
  returns:
    description: <p>value in Seconds. <b>Remarks:</b>Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option.If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the keepAliveTimeoutInSeconds that provides a way to configure Tcp keep-alive option. </p>
  syntax: public long getKeepAliveTimeoutInSeconds()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getKeepAliveTimeoutInSeconds()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize()
  name: getMaxMessageSize()
  nameWithType: FabricTransportServiceRemotingProvider.getMaxMessageSize()
  returns:
    description: <p>The maximum size of the message in bytes. Default Value for MaxMessageSize used is 4194304 bytes </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the maximum size for a message that can be received on a channel configured with this setting. </p>
  syntax: public long getMaxMessageSize()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getMaxMessageSize()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds()
  name: getOperationTimeoutInSeconds()
  nameWithType: FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds()
  returns:
    description: <p>value in seconds. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method. </p>
  syntax: public long getOperationTimeoutInSeconds()
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.getOperationTimeoutInSeconds()
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  name: setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  nameWithType: FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  parameters:
  - description: <p>The connect timeout in Milliseconds. </p>
    name: connectTimeoutInMilliseconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the connect timeout in milliseconds. This settings specifies the maximum time allowed for the connection to be established. </p>
  syntax: public void setConnectTimeoutInMilliseconds(long connectTimeoutInMilliseconds)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setConnectTimeoutInMilliseconds(long)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  nameWithType: FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  parameters:
  - description: <p>keep alive timeout in seconds. </p>
    name: keepAliveTimeoutInSeconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the keepAliveTimeoutInSeconds that provides a way to configure Tcp keep-alive option. <b>Remarks:</b> Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option.If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time. </p>
  syntax: public void setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize(long maxMessageSize)
  name: setMaxMessageSize(long maxMessageSize)
  nameWithType: FabricTransportServiceRemotingProvider.setMaxMessageSize(long maxMessageSize)
  parameters:
  - description: <p>The maximum size of the message in bytes. </p>
    name: maxMessageSize
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the maximum size for a message that can be received on a channel configured with this setting. </p>
  syntax: public void setMaxMessageSize(long maxMessageSize)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setMaxMessageSize(long)
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  name: setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  nameWithType: FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  parameters:
  - description: <p>value in Seconds. </p>
    name: operationTimeoutInSeconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the operation Timeout which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation. This timeout also applies when sending reply messages from a callback contract method. </p>
  syntax: public void setOperationTimeoutInSeconds(long operationTimeoutInSeconds)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setOperationTimeoutInSeconds(long)
nameWithType: FabricTransportServiceRemotingProvider
syntax: public class FabricTransportServiceRemotingProvider extends ServiceRemotingProvider
type: class
uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider
name: FabricTransportServiceRemotingProvider
package: microsoft.servicefabric.services.remoting.fabrictransport
summary: <p>Sets Fabric TCP transport as the default service remoting transport provider in the assembly. </p>
metadata: {}
