### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool<ParentT>.fromRestorePoint(RestorePoint restorePoint)
  name: fromRestorePoint(RestorePoint restorePoint)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool<ParentT>.fromRestorePoint(RestorePoint restorePoint)
  parameters:
  - description: <p>the restore point </p>
    name: restorePoint
    type: <xref href="com.microsoft.azure.management.sql.RestorePoint?alt=com.microsoft.azure.management.sql.RestorePoint&text=RestorePoint" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The next stage of the definition. </p>
    type: <xref href="SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions%3CParentT%3E?alt=SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions%3CParentT%3E&text=SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions%3CParentT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new database from a restore point.</p>

    <p></p>
  syntax: public SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions<ParentT> fromRestorePoint(RestorePoint restorePoint)
  uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool.fromRestorePoint(RestorePoint)
- fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool<ParentT>.fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  name: fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool<ParentT>.fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  parameters:
  - description: <p>the restore point </p>
    name: restorePoint
    type: <xref href="com.microsoft.azure.management.sql.RestorePoint?alt=com.microsoft.azure.management.sql.RestorePoint&text=RestorePoint" data-throw-if-not-resolved="False"/>
  - description: <p>date and time to restore from </p>
    name: restorePointDateTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The next stage of the definition. </p>
    type: <xref href="SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions%3CParentT%3E?alt=SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions%3CParentT%3E&text=SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions%3CParentT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new database from a restore point.</p>

    <p></p>
  syntax: public SqlDatabase.DefinitionStages.WithAttachAfterElasticPoolOptions<ParentT> fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool.fromRestorePoint(RestorePoint,DateTime)
nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool<ParentT>
syntax: public interface WithRestorePointDatabaseAfterElasticPool<ParentT>
type: interface
typeParameters:
- description: <p>the stage of the parent definition to return to after attaching this definition </p>
  name: ParentT
uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool
fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool<ParentT>
name: SqlDatabase.DefinitionStages.WithRestorePointDatabaseAfterElasticPool<ParentT>
package: com.microsoft.azure.management.sql
summary: >-
  <p>The SQL Database definition to set a restore point as the source database within an elastic pool.</p>

  <p></p>
metadata: {}
