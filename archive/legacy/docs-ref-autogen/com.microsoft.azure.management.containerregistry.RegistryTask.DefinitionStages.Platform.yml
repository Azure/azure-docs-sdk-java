### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux()
  name: withLinux()
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux()
  returns:
    description: <p>the next stage of the container registry task definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType?alt=com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType&text=RegistryTask.DefinitionStages.TaskStepType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Linux OS system for the platform.</p>

    <p></p>
  syntax: public TaskStepType withLinux()
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux()
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture)
  name: withLinux(Architecture architecture)
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture)
  parameters:
  - description: <p>the CPU architecture. </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType?alt=com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType&text=RegistryTask.DefinitionStages.TaskStepType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Linux OS system and architecture for the platform.</p>

    <p></p>
  syntax: public TaskStepType withLinux(Architecture architecture)
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture)
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  name: withLinux(Architecture architecture, Variant variant)
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  parameters:
  - description: <p>the CPU architecture. </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  - description: <p>the CPU variant. </p>
    name: variant
    type: <xref href="com.microsoft.azure.management.containerregistry.Variant?alt=com.microsoft.azure.management.containerregistry.Variant&text=Variant" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType?alt=com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType&text=RegistryTask.DefinitionStages.TaskStepType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Linux OS system, architecture, and CPU variant.</p>

    <p></p>
  syntax: public TaskStepType withLinux(Architecture architecture, Variant variant)
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture,Variant)
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  name: withPlatform(PlatformProperties platformProperties)
  nameWithType: RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  parameters:
  - description: <p>the properties of the platform. </p>
    name: platformProperties
    type: <xref href="com.microsoft.azure.management.containerregistry.PlatformProperties?alt=com.microsoft.azure.management.containerregistry.PlatformProperties&text=PlatformProperties" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType?alt=com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType&text=RegistryTask.DefinitionStages.TaskStepType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a platform.</p>

    <p></p>
  syntax: public TaskStepType withPlatform(PlatformProperties platformProperties)
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties)
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows()
  name: withWindows()
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows()
  returns:
    description: <p>the next stage of the container registry task definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType?alt=com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType&text=RegistryTask.DefinitionStages.TaskStepType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Windows OS system for the platform.</p>

    <p></p>
  syntax: public TaskStepType withWindows()
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows()
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture)
  name: withWindows(Architecture architecture)
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture)
  parameters:
  - description: <p>the CPU architecture </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType?alt=com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType&text=RegistryTask.DefinitionStages.TaskStepType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Windows OS system and architecture for the platform.</p>

    <p></p>
  syntax: public TaskStepType withWindows(Architecture architecture)
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture)
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  name: withWindows(Architecture architecture, Variant variant)
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  parameters:
  - description: <p>the CPU architecture. </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  - description: <p>the CPU variant. </p>
    name: variant
    type: <xref href="com.microsoft.azure.management.containerregistry.Variant?alt=com.microsoft.azure.management.containerregistry.Variant&text=Variant" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task definition. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType?alt=com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType&text=RegistryTask.DefinitionStages.TaskStepType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Windows OS system, architecture, and CPU variant.</p>

    <p></p>
  syntax: public TaskStepType withWindows(Architecture architecture, Variant variant)
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture,Variant)
nameWithType: RegistryTask.DefinitionStages.Platform
syntax: public interface Platform
type: interface
uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
name: RegistryTask.DefinitionStages.Platform
package: com.microsoft.azure.management.containerregistry
summary: <p>The stage of the container registry task definition allowing to specify the platform. </p>
metadata: {}
