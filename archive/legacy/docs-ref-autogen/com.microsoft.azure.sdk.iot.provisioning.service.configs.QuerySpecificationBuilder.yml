### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.QuerySpecificationBuilder(String selection, FromType fromType)
  name: QuerySpecificationBuilder(String selection, FromType fromType)
  nameWithType: QuerySpecificationBuilder.QuerySpecificationBuilder(String selection, FromType fromType)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> with the mandatory SELECT clause. It cannot be<code>null 

          </code> or empty. </p>
    name: selection
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType" data-throw-if-not-resolved="false" data-raw-source="FromType"></xref> with the mandatory FROM clause. It cannot be<code>null 

          </code> . </p>
    name: fromType
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.FromType&text=QuerySpecificationBuilder.FromType" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if one of the provided clauses is invalid. </p>
  summary: >-
    <p>CONSTRUCTOR</p>

    <p>Creates a new instance of the builder, receiving the mandatory parameters.</p>

    <p></p>
  syntax: public QuerySpecificationBuilder(String selection, FromType fromType)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.QuerySpecificationBuilder(String,FromType)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.createSqlQuery()
  name: createSqlQuery()
  nameWithType: QuerySpecificationBuilder.createSqlQuery()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false" data-raw-source="QuerySpecification"></xref> that contains a sql query with the provided clauses. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification&text=QuerySpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new instance of the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false" data-raw-source="QuerySpecification"></xref> using the provided clauses to make the sql query.</p>

    <p></p>
  syntax: public QuerySpecification createSqlQuery()
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.createSqlQuery()
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.groupBy(String groupBy)
  name: groupBy(String groupBy)
  nameWithType: QuerySpecificationBuilder.groupBy(String groupBy)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> with the new clause `group by`. It can be<code>null 

          </code> or empty. </p>
    name: groupBy
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>The same instance of the<code>QuerySpecificationBuilder 

          </code> . </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder&text=QuerySpecificationBuilder" data-throw-if-not-resolved="False"/>
  summary: <p>Setter for the `groupBy` clause. </p>
  syntax: public QuerySpecificationBuilder groupBy(String groupBy)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.groupBy(String)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.where(String where)
  name: where(String where)
  nameWithType: QuerySpecificationBuilder.where(String where)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> with the new clause `where`. It can be<code>null 

          </code> or empty. </p>
    name: where
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>The same instance of the<code>QuerySpecificationBuilder 

          </code> . </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder&text=QuerySpecificationBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Setter for the `where` clause.</p>

    <p></p>
  syntax: public QuerySpecificationBuilder where(String where)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder.where(String)
nameWithType: QuerySpecificationBuilder
syntax: public class QuerySpecificationBuilder
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder
fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecificationBuilder
name: QuerySpecificationBuilder
package: com.microsoft.azure.sdk.iot.provisioning.service.configs
summary: >-
  <p>This is a helper to create a new instance of the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false" data-raw-source="QuerySpecification"></xref>.</p>

  <p>This helper will create a query forcing the correct sql format. It expects the <b>SELECT</b> and <b>FROM</b>, but optionally accepts <b>WHERE</b> and <b>GROUP BY</b>. As a result, it will return a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false" data-raw-source="QuerySpecification"></xref> object, accepted by the provisioning service.</p>

  <p>

    <b>Sample:</b>

  </p>

  <p>The follow line will create a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false" data-raw-source="QuerySpecification"></xref>. <pre><code>QuerySpecification querySpecification = new QuerySpecificationBuilder("*", QuerySpecificationBuilder.FromType.ENROLLMENTS)

              .where("iotHubHostName=`ContosoIoTHub.azure-devices.net`").createSqlQuery();

      </code></pre></p>

  <p>Will generate the sql query: <pre><code>{

          "query":"select * from enrollments where iotHubHostName=`ContosoIoTHub.azure-devices.net`"

      }

      </code></pre></p>

  <p></p>
metadata: {}
