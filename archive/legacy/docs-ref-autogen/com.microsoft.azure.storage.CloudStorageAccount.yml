### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials)
  name: CloudStorageAccount(final StorageCredentials storageCredentials)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account.</p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>storageCredentials</code> specify an invalid account name. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials. </p>

    <p>With this constructor, the  object is constructed using the default HTTP storage service endpoints. The default HTTP storage service endpoints are , , , and , where  is the name of your storage account. </p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps)
  name: CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account. </p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <code>true</code> to use HTTPS to connect to the storage service endpoints; otherwise, <code>false</code>.</p>
    name: useHttps
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>storageCredentials</code> specify an invalid account name. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials and the default service endpoints, using HTTP or HTTPS as specified. </p>

    <p>With this constructor, the  object is constructed using the default storage service endpoints. The default storage service endpoints are: ; ; ; and , where  is the name of your storage account. Access to the cloud storage account may be via HTTP or HTTPS, as specified by the  parameter. </p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials,final boolean)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix)
  name: CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account. </p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <code>true</code> to use HTTPS to connect to the storage service endpoints; otherwise, <code>false</code>. </p>
    name: useHttps
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A String that represents the endpointSuffix to use, if any.</p>
    name: endpointSuffix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>storageCredentials</code> specify an invalid account name. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials. </p>

    <p>With this constructor, the  object is constructed using the given HTTP storage service endpoint suffix (if any, otherwise the default is used).</p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials,final boolean,final String)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix, String accountName)
  name: CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix, String accountName)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix, String accountName)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account. </p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <code>true</code> to use HTTPS to connect to the storage service endpoints; otherwise, <code>false</code>. </p>
    name: useHttps
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  - description: <p>A String that represents the endpointSuffix to use, if any. </p>
    name: endpointSuffix
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>String</code> that contains the account name. This will be used in place of a <code>null</code><xref uid="com.microsoft.azure.storage.StorageCredentials.getAccountName()" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials#getAccountName()"></xref>, but the two must match if both are not <code>null</code>.</p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>storageCredentials</code> specify an invalid account name. </p>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials. </p>

    <p>With this constructor, the  object is constructed using the given HTTP storage service endpoint suffix (if any, otherwise the default is used).</p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials, final boolean useHttps, final String endpointSuffix, String accountName)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials,final boolean,final String,String)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri)
  name: CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account. </p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Blob service endpoint. </p>
    name: blobStorageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Queue service endpoint. </p>
    name: queueStorageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Table service endpoint. </p>
    name: tableStorageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials and service endpoints. </p>

    <p>Use this constructor to construct a  object using custom endpoints, in the case where you've configured a custom domain name for your storage account. </p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials,final StorageUri,final StorageUri,final StorageUri)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri, final StorageUri fileStorageUri)
  name: CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri, final StorageUri fileStorageUri)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri, final StorageUri fileStorageUri)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account. </p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Blob service endpoint. </p>
    name: blobStorageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Queue service endpoint. </p>
    name: queueStorageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Table service endpoint. </p>
    name: tableStorageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the File service endpoint. </p>
    name: fileStorageUri
    type: final <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials and service endpoints. </p>

    <p>Use this constructor to construct a  object using custom endpoints, in the case where you've configured a custom domain name for your storage account. </p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials, final StorageUri blobStorageUri, final StorageUri queueStorageUri, final StorageUri tableStorageUri, final StorageUri fileStorageUri)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials,final StorageUri,final StorageUri,final StorageUri,final StorageUri)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint)
  name: CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account. </p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object that represents the Blob service endpoint. </p>
    name: blobEndpoint
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object that represents the Queue service endpoint. </p>
    name: queueEndpoint
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object that represents the Table service endpoint. </p>
    name: tableEndpoint
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials and service endpoints. </p>

    <p>Use this constructor to construct a  object using custom endpoints, in the case where you've configured a custom domain name for your storage account. </p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials,final URI,final URI,final URI)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint, final URI fileEndpoint)
  name: CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint, final URI fileEndpoint)
  nameWithType: CloudStorageAccount.CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint, final URI fileEndpoint)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the storage credentials to use to authenticate this account. </p>
    name: storageCredentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object that represents the Blob service endpoint. </p>
    name: blobEndpoint
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object that represents the Queue service endpoint. </p>
    name: queueEndpoint
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object that represents the Table service endpoint. </p>
    name: tableEndpoint
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object that represents the File service endpoint. </p>
    name: fileEndpoint
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class using the specified account credentials and service endpoints. </p>

    <p>Use this constructor to construct a  object using custom endpoints, in the case where you've configured a custom domain name for your storage account. </p>

    <p>The credentials provided when constructing the  object are used to authenticate all further requests against resources that are accessed via the  object or a client object created from it. A client object may be a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object.</p>

    <p></p>
  syntax: public CloudStorageAccount(final StorageCredentials storageCredentials, final URI blobEndpoint, final URI queueEndpoint, final URI tableEndpoint, final URI fileEndpoint)
  uid: com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(final StorageCredentials,final URI,final URI,final URI,final URI)
fields:
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_KEY_NAME
  name: ACCOUNT_KEY_NAME
  nameWithType: CloudStorageAccount.ACCOUNT_KEY_NAME
  summary: <p>Represents the setting name for the account key. </p>
  syntax: protected static final String ACCOUNT_KEY_NAME= "AccountKey"
  uid: com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_KEY_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_NAME_NAME
  name: ACCOUNT_NAME_NAME
  nameWithType: CloudStorageAccount.ACCOUNT_NAME_NAME
  summary: <p>Represents the setting name for the account name. </p>
  syntax: protected static final String ACCOUNT_NAME_NAME= "AccountName"
  uid: com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_NAME_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_TOKEN_NAME
  name: ACCOUNT_TOKEN_NAME
  nameWithType: CloudStorageAccount.ACCOUNT_TOKEN_NAME
  summary: <p>Represents the setting name for the token credential. </p>
  syntax: protected static final String ACCOUNT_TOKEN_NAME= "AccountToken"
  uid: com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_TOKEN_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.BLOB_ENDPOINT_NAME
  name: BLOB_ENDPOINT_NAME
  nameWithType: CloudStorageAccount.BLOB_ENDPOINT_NAME
  summary: <p>Represents the setting name for a custom blob storage endpoint. </p>
  syntax: protected static final String BLOB_ENDPOINT_NAME= "BlobEndpoint"
  uid: com.microsoft.azure.storage.CloudStorageAccount.BLOB_ENDPOINT_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.BLOB_SECONDARY_ENDPOINT_NAME
  name: BLOB_SECONDARY_ENDPOINT_NAME
  nameWithType: CloudStorageAccount.BLOB_SECONDARY_ENDPOINT_NAME
  summary: <p>Represents the setting name for a custom blob storage secondary endpoint. </p>
  syntax: protected static final String BLOB_SECONDARY_ENDPOINT_NAME= "BlobSecondaryEndpoint"
  uid: com.microsoft.azure.storage.CloudStorageAccount.BLOB_SECONDARY_ENDPOINT_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.QUEUE_ENDPOINT_NAME
  name: QUEUE_ENDPOINT_NAME
  nameWithType: CloudStorageAccount.QUEUE_ENDPOINT_NAME
  summary: <p>Represents the setting name for a custom queue endpoint. </p>
  syntax: protected static final String QUEUE_ENDPOINT_NAME= "QueueEndpoint"
  uid: com.microsoft.azure.storage.CloudStorageAccount.QUEUE_ENDPOINT_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.QUEUE_SECONDARY_ENDPOINT_NAME
  name: QUEUE_SECONDARY_ENDPOINT_NAME
  nameWithType: CloudStorageAccount.QUEUE_SECONDARY_ENDPOINT_NAME
  summary: <p>Represents the setting name for a custom queue secondary endpoint. </p>
  syntax: protected static final String QUEUE_SECONDARY_ENDPOINT_NAME= "QueueSecondaryEndpoint"
  uid: com.microsoft.azure.storage.CloudStorageAccount.QUEUE_SECONDARY_ENDPOINT_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME
  name: SHARED_ACCESS_SIGNATURE_NAME
  nameWithType: CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME
  summary: <p>Represents the setting name for a shared access key. </p>
  syntax: protected static final String SHARED_ACCESS_SIGNATURE_NAME= "SharedAccessSignature"
  uid: com.microsoft.azure.storage.CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.TABLE_ENDPOINT_NAME
  name: TABLE_ENDPOINT_NAME
  nameWithType: CloudStorageAccount.TABLE_ENDPOINT_NAME
  summary: <p>Represents the setting name for a custom table storage endpoint. </p>
  syntax: protected static final String TABLE_ENDPOINT_NAME= "TableEndpoint"
  uid: com.microsoft.azure.storage.CloudStorageAccount.TABLE_ENDPOINT_NAME
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.CloudStorageAccount.TABLE_SECONDARY_ENDPOINT_NAME
  name: TABLE_SECONDARY_ENDPOINT_NAME
  nameWithType: CloudStorageAccount.TABLE_SECONDARY_ENDPOINT_NAME
  summary: <p>Represents the setting name for a custom table storage secondary endpoint. </p>
  syntax: protected static final String TABLE_SECONDARY_ENDPOINT_NAME= "TableSecondaryEndpoint"
  uid: com.microsoft.azure.storage.CloudStorageAccount.TABLE_SECONDARY_ENDPOINT_NAME
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient()
  name: createCloudAnalyticsClient()
  nameWithType: CloudStorageAccount.createCloudAnalyticsClient()
  returns:
    description: <p>An analytics client object that uses the Blob and Table service endpoints. </p>
    type: <xref href="com.microsoft.azure.storage.analytics.CloudAnalyticsClient?alt=com.microsoft.azure.storage.analytics.CloudAnalyticsClient&text=CloudAnalyticsClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new Analytics service client.</p>

    <p></p>
  syntax: public CloudAnalyticsClient createCloudAnalyticsClient()
  uid: com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient()
  name: createCloudBlobClient()
  nameWithType: CloudStorageAccount.createCloudBlobClient()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> that represents the cloud Blob client. </p>
    type: <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new Blob service client.</p>

    <p></p>
  syntax: public CloudBlobClient createCloudBlobClient()
  uid: com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient()
  name: createCloudFileClient()
  nameWithType: CloudStorageAccount.createCloudFileClient()
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudFileClient"></xref> that represents the cloud File client. </p>
    type: <xref href="com.microsoft.azure.storage.file.CloudFileClient?alt=com.microsoft.azure.storage.file.CloudFileClient&text=CloudFileClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new File service client.</p>

    <p></p>
  syntax: public CloudFileClient createCloudFileClient()
  uid: com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient()
  name: createCloudQueueClient()
  nameWithType: CloudStorageAccount.createCloudQueueClient()
  returns:
    description: <p>A client object that uses the Queue service endpoint. </p>
    type: <xref href="com.microsoft.azure.storage.queue.CloudQueueClient?alt=com.microsoft.azure.storage.queue.CloudQueueClient&text=CloudQueueClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new Queue service client.</p>

    <p></p>
  syntax: public CloudQueueClient createCloudQueueClient()
  uid: com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient()
  name: createCloudTableClient()
  nameWithType: CloudStorageAccount.createCloudTableClient()
  returns:
    description: <p>A client object that uses the Table service endpoint. </p>
    type: <xref href="com.microsoft.azure.storage.table.CloudTableClient?alt=com.microsoft.azure.storage.table.CloudTableClient&text=CloudTableClient" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new Table service client.</p>

    <p></p>
  syntax: public CloudTableClient createCloudTableClient()
  uid: com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature(SharedAccessAccountPolicy policy)
  name: generateSharedAccessSignature(SharedAccessAccountPolicy policy)
  nameWithType: CloudStorageAccount.generateSharedAccessSignature(SharedAccessAccountPolicy policy)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessAccountPolicy" data-throw-if-not-resolved="false" data-raw-source="SharedAccessAccountPolicy"></xref> specifying the access policy for the shared access signature.</p>
    name: policy
    type: <xref href="com.microsoft.azure.storage.SharedAccessAccountPolicy?alt=com.microsoft.azure.storage.SharedAccessAccountPolicy&text=SharedAccessAccountPolicy" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If the key is invalid. </p>
  returns:
    description: <p>The query string returned includes the leading question mark. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a shared access signature for the account.</p>

    <p></p>
  syntax: public String generateSharedAccessSignature(SharedAccessAccountPolicy policy)
  uid: com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature(SharedAccessAccountPolicy)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint()
  name: getBlobEndpoint()
  nameWithType: CloudStorageAccount.getBlobEndpoint()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the Blob endpoint associated with this account. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the Blob service for the storage account. This method is not supported when using shared access signature credentials.</p>

    <p></p>
  syntax: public URI getBlobEndpoint()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri()
  name: getBlobStorageUri()
  nameWithType: CloudStorageAccount.getBlobStorageUri()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Blob endpoint associated with this account. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the Blob service for the storage account. This method is not supported when using shared access signature credentials.</p>

    <p></p>
  syntax: public StorageUri getBlobStorageUri()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getCredentials()
  name: getCredentials()
  nameWithType: CloudStorageAccount.getCredentials()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageCredentials" data-throw-if-not-resolved="false" data-raw-source="StorageCredentials"></xref> object that represents the credentials for this storage account. </p>
    type: <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the credentials for the storage account.</p>

    <p></p>
  syntax: public StorageCredentials getCredentials()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getCredentials()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount()
  name: getDevelopmentStorageAccount()
  nameWithType: CloudStorageAccount.getDevelopmentStorageAccount()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.CloudStorageAccount" data-throw-if-not-resolved="false" data-raw-source="CloudStorageAccount"></xref> object for the development storage credentials. </p>
    type: <xref href="com.microsoft.azure.storage.CloudStorageAccount?alt=com.microsoft.azure.storage.CloudStorageAccount&text=CloudStorageAccount" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a <xref uid="com.microsoft.azure.storage.CloudStorageAccount" data-throw-if-not-resolved="false" data-raw-source="CloudStorageAccount"></xref> object that represents the development storage credentials. Secondary endpoints are enabled by default.</p>

    <p></p>
  syntax: public static CloudStorageAccount getDevelopmentStorageAccount()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount(final URI proxyUri)
  name: getDevelopmentStorageAccount(final URI proxyUri)
  nameWithType: CloudStorageAccount.getDevelopmentStorageAccount(final URI proxyUri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object that represents the proxy endpoint to use. Specifying <code>null</code> will use the default <code><a href="http://127.0.0.1">http://127.0.0.1</a></code>.</p>
    name: proxyUri
    type: <xref href="final+URI?alt=final+URI&text=final+URI" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the resource URI is invalid. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.CloudStorageAccount" data-throw-if-not-resolved="false" data-raw-source="CloudStorageAccount"></xref> object for the development storage credentials.</p>
    type: <xref href="com.microsoft.azure.storage.CloudStorageAccount?alt=com.microsoft.azure.storage.CloudStorageAccount&text=CloudStorageAccount" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a <xref uid="com.microsoft.azure.storage.CloudStorageAccount" data-throw-if-not-resolved="false" data-raw-source="CloudStorageAccount"></xref> object that represents the development storage credentials, using the specified proxy URI. Secondary endpoints are enabled by default.</p>

    <p></p>
  syntax: public static CloudStorageAccount getDevelopmentStorageAccount(final URI proxyUri)
  uid: com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount(final URI)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix()
  name: getEndpointSuffix()
  nameWithType: CloudStorageAccount.getEndpointSuffix()
  returns:
    description: <p>the endpoint suffix </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>If an endpoint suffix was specified, return it </p>
  syntax: public String getEndpointSuffix()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint()
  name: getFileEndpoint()
  nameWithType: CloudStorageAccount.getFileEndpoint()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the File endpoint associated with this account. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the File service for the storage account. This method is not supported when using shared access signature credentials.</p>

    <p></p>
  syntax: public URI getFileEndpoint()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri()
  name: getFileStorageUri()
  nameWithType: CloudStorageAccount.getFileStorageUri()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the File endpoint associated with this account. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the File service for the storage account. This method is not supported when using shared access signature credentials.</p>

    <p></p>
  syntax: public StorageUri getFileStorageUri()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint()
  name: getQueueEndpoint()
  nameWithType: CloudStorageAccount.getQueueEndpoint()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the queue endpoint associated with this account. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the Queue service for the storage account.</p>

    <p></p>
  syntax: public URI getQueueEndpoint()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri()
  name: getQueueStorageUri()
  nameWithType: CloudStorageAccount.getQueueStorageUri()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Queue endpoint associated with this account. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the Queue service for the storage account.</p>

    <p></p>
  syntax: public StorageUri getQueueStorageUri()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint()
  name: getTableEndpoint()
  nameWithType: CloudStorageAccount.getTableEndpoint()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object that represents the Table endpoint associated with this account. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the Table service for the storage account.</p>

    <p></p>
  syntax: public URI getTableEndpoint()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri()
  name: getTableStorageUri()
  nameWithType: CloudStorageAccount.getTableStorageUri()
  returns:
    description: <p>A <code>java.net.URI</code> object that represents the Table endpoint associated with this account. </p>
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the endpoint for the Table service for the storage account.</p>

    <p></p>
  syntax: public StorageUri getTableStorageUri()
  uid: com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.parse(final String connectionString)
  name: parse(final String connectionString)
  nameWithType: CloudStorageAccount.parse(final String connectionString)
  parameters:
  - description: <p>A <code>String</code> that represents the connection string to parse.</p>
    name: connectionString
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InvalidKeyException?alt=InvalidKeyException&text=InvalidKeyException" data-throw-if-not-resolved="False"/>
    description: <p>If credentials in the connection string contain an invalid key. </p>
  - type: <xref href="URISyntaxException?alt=URISyntaxException&text=URISyntaxException" data-throw-if-not-resolved="False"/>
    description: <p>If the connection string specifies an invalid URI. </p>
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.CloudStorageAccount" data-throw-if-not-resolved="false" data-raw-source="CloudStorageAccount"></xref> object that represents the cloud storage account constructed from the values provided in the connection string.</p>
    type: <xref href="com.microsoft.azure.storage.CloudStorageAccount?alt=com.microsoft.azure.storage.CloudStorageAccount&text=CloudStorageAccount" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Parses a connection string and returns a cloud storage account created from the connection string. </p>

    <p>The connection string should be in the <a href="http://msdn.microsoft.com/library/azure/ee758697.aspx">Azure connection string</a> format. </p>

    <p>Note that while a connection string may include a SAS token, it is often easier to use the <xref uid="com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(final URI)" data-throw-if-not-resolved="false" data-raw-source="CloudBlobContainer#CloudBlobContainer(URI)"></xref>, <xref uid="com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(final URI)" data-throw-if-not-resolved="false" data-raw-source="CloudQueue#CloudQueue(URI)"></xref>, <xref uid="com.microsoft.azure.storage.table.CloudTable.CloudTable(final URI)" data-throw-if-not-resolved="false" data-raw-source="CloudTable#CloudTable(URI)"></xref> constructors directly. To do this, create a <xref uid="com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature.StorageCredentialsSharedAccessSignature(final String)" data-throw-if-not-resolved="false" data-raw-source="StorageCredentialsSharedAccessSignature#StorageCredentialsSharedAccessSignature(String)"></xref> object with your SAS token, use the <xref uid="com.microsoft.azure.storage.StorageCredentials.transformUri(final URI)" data-throw-if-not-resolved="false" data-raw-source="StorageCredentialsSharedAccessSignature#transformUri(URI)"></xref> method on the container, queue, or table URI, and then use that URI to construct the object.</p>

    <p></p>
  syntax: public static CloudStorageAccount parse(final String connectionString)
  uid: com.microsoft.azure.storage.CloudStorageAccount.parse(final String)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.setCredentials(final StorageCredentials credentials)
  name: setCredentials(final StorageCredentials credentials)
  nameWithType: CloudStorageAccount.setCredentials(final StorageCredentials credentials)
  parameters:
  - description: <p>the credentials to set </p>
    name: credentials
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the StorageCredentials to use with this account. Warning: for internal use only, as updating the credentials to a new account can invalidate pre-existing objects.</p>

    <p></p>
  syntax: protected void setCredentials(final StorageCredentials credentials)
  uid: com.microsoft.azure.storage.CloudStorageAccount.setCredentials(final StorageCredentials)
- fullName: com.microsoft.azure.storage.CloudStorageAccount.toString()
  name: toString()
  nameWithType: CloudStorageAccount.toString()
  returns:
    description: <p>A <code>String</code> that represents the connection string for this storage account, without sensitive data. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a connection string for this storage account, without sensitive data.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.storage.CloudStorageAccount.toString()
- fullName: com.microsoft.azure.storage.CloudStorageAccount.toString(final boolean exportSecrets)
  name: toString(final boolean exportSecrets)
  nameWithType: CloudStorageAccount.toString(final boolean exportSecrets)
  parameters:
  - description: >-
      <p>

        <code>true</code> to include sensitive data in the string; otherwise, <code>false</code>. </p>
    name: exportSecrets
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>String</code> that represents the connection string for this storage account, optionally with sensitive data. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a connection string for this storage account, optionally with sensitive data.</p>

    <p></p>
  syntax: public String toString(final boolean exportSecrets)
  uid: com.microsoft.azure.storage.CloudStorageAccount.toString(final boolean)
nameWithType: CloudStorageAccount
syntax: public class CloudStorageAccount
type: class
uid: com.microsoft.azure.storage.CloudStorageAccount
fullName: com.microsoft.azure.storage.CloudStorageAccount
name: CloudStorageAccount
package: com.microsoft.azure.storage
summary: <p>Represents a Microsoft Azure storage account. </p>
metadata: {}
