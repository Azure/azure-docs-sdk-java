### YamlMime:JavaType
methods:
- fullName: ReturnT com.microsoft.azure.management.network.model.HasProtocol<ProtocolT>.DefinitionStages.WithProtocol<ReturnT, ProtocolT>.withProtocol(ProtocolT protocol)
  name: withProtocol(ProtocolT protocol)
  nameWithType: HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>.withProtocol(ProtocolT protocol)
  parameters:
  - description: <p>a transport protocol </p>
    name: protocol
    type: <xref href="ProtocolT?alt=ProtocolT&text=ProtocolT" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="ReturnT?alt=ReturnT&text=ReturnT" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the transport protocol. </p>
  syntax: public ReturnT withProtocol(ProtocolT protocol)
  uid: com.microsoft.azure.management.network.model.HasProtocol.DefinitionStages.WithProtocol.withProtocol(ProtocolT)
nameWithType: HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>
syntax: public interface WithProtocol<ReturnT,ProtocolT>
type: interface
typeParameters:
- description: <p>the next stage of the definition </p>
  name: ReturnT
- description: <p>the type of the protocol value </p>
  name: ProtocolT
uid: com.microsoft.azure.management.network.model.HasProtocol.DefinitionStages.WithProtocol
fullName: com.microsoft.azure.management.network.model.HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>
name: HasProtocol.DefinitionStages.WithProtocol<ReturnT,ProtocolT>
package: com.microsoft.azure.management.network.model
summary: <p>The stage of a definition allowing to specify the protocol. </p>
metadata: {}
