### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest()
  name: HttpsRequest()
  nameWithType: HttpsRequest.HttpsRequest()
  syntax: protected HttpsRequest()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
  name: HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
  nameWithType: HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
  parameters:
  - description: <p>the URL for the request. </p>
    name: url
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  - description: <p>the HTTPS request method (i.e. GET). </p>
    name: method
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod&text=HttpsMethod" data-throw-if-not-resolved="False"/>
  - description: <p>the request body. Must be an array of size 0 if the request method is GET or DELETE. </p>
    name: body
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the user agent string to attach to all http communications </p>
    name: userAgentString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor. Takes a URL as an argument and returns an HTTPS request that is ready to be sent.</p>

    <p></p>
  syntax: public HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL,HttpsMethod,byte [],String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
  name: HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
  nameWithType: HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
  parameters:
  - description: <p>the URL for the request. </p>
    name: url
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  - description: <p>the HTTPS request method (i.e. GET). </p>
    name: method
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod&text=HttpsMethod" data-throw-if-not-resolved="False"/>
  - description: <p>the request body. Must be an array of size 0 if the request method is GET or DELETE. </p>
    name: body
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the user agent string to attach to all http communications </p>
    name: userAgentString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The proxy settings to use when connecting. If null then no proxy will be used </p>
    name: proxySettings
    type: <xref href="com.microsoft.azure.sdk.iot.device.ProxySettings?alt=com.microsoft.azure.sdk.iot.device.ProxySettings&text=ProxySettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor. Takes a URL as an argument and returns an HTTPS request that is ready to be sent.</p>

    <p></p>
  syntax: public HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL,HttpsMethod,byte [],String,ProxySettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody()
  name: getBody()
  nameWithType: HttpsRequest.getBody()
  returns:
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  syntax: public byte [] getBody()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod()
  name: getHttpMethod()
  nameWithType: HttpsRequest.getHttpMethod()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getHttpMethod()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders()
  name: getRequestHeaders()
  nameWithType: HttpsRequest.getRequestHeaders()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getRequestHeaders()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl()
  name: getRequestUrl()
  nameWithType: HttpsRequest.getRequestUrl()
  returns:
    type: <xref href="URL?alt=URL&text=URL" data-throw-if-not-resolved="False"/>
  syntax: public URL getRequestUrl()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send()
  name: send()
  nameWithType: HttpsRequest.send()
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the connection could not be established, or the input/output streams could not be accessed. </p>
  returns:
    description: <p>an HTTPS response.</p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse&text=HttpsResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes the HTTPS request.</p>

    <p></p>
  syntax: public HttpsResponse send()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.sendAsHttpRequest()
  name: sendAsHttpRequest()
  nameWithType: HttpsRequest.sendAsHttpRequest()
  exceptions:
  - type: <xref href="TransportException?alt=TransportException&text=TransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the connection could not be established, or the input/output streams could not be accessed. </p>
  returns:
    description: <p>an HTTPS response.</p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse&text=HttpsResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Executes the HTTPS request as an HTTP request. This method should only be called when a user supplied url contains HTTP rather than HTTPS. Currently, this only happens from the <xref uid="com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient" data-throw-if-not-resolved="false" data-raw-source="com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient"></xref> for some edge workload urls.</p>

    <p></p>
  syntax: public HttpsResponse sendAsHttpRequest()
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.sendAsHttpRequest()
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout(int timeout)
  name: setConnectTimeout(int timeout)
  nameWithType: HttpsRequest.setConnectTimeout(int timeout)
  parameters:
  - description: <p>the connect timeout in milliseconds.</p>
    name: timeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>itself, for fluent setting. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest&text=HttpsRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the connect timeout, in milliseconds, for the request.</p>

    <p></p>
  syntax: public HttpsRequest setConnectTimeout(int timeout)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout(int)
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField(String field, String value)
  name: setHeaderField(String field, String value)
  nameWithType: HttpsRequest.setHeaderField(String field, String value)
  parameters:
  - description: <p>the header field name. </p>
    name: field
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the header field value.</p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>itself, for fluent setting. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest&text=HttpsRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the header field to the given value.</p>

    <p></p>
  syntax: public HttpsRequest setHeaderField(String field, String value)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField(String,String)
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout(int timeout)
  name: setReadTimeout(int timeout)
  nameWithType: HttpsRequest.setReadTimeout(int timeout)
  parameters:
  - description: <p>the read timeout.</p>
    name: timeout
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>itself, for fluent setting. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest&text=HttpsRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the read timeout, in milliseconds, for the request. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.</p>

    <p></p>
  syntax: public HttpsRequest setReadTimeout(int timeout)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout(int)
- fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext(SSLContext sslContext)
  name: setSSLContext(SSLContext sslContext)
  nameWithType: HttpsRequest.setSSLContext(SSLContext sslContext)
  parameters:
  - description: <p>the value to set this object's SSL context too </p>
    name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if sslContext is null </p>
  returns:
    description: <p>itself, for fluent setting. </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest?alt=com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest&text=HttpsRequest" data-throw-if-not-resolved="False"/>
  summary: <p>Sets this object's SSL context </p>
  syntax: public HttpsRequest setSSLContext(SSLContext sslContext)
  uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext(SSLContext)
nameWithType: HttpsRequest
syntax: public class HttpsRequest
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
name: HttpsRequest
package: com.microsoft.azure.sdk.iot.device.transport.https
summary: <p>An HTTPS request. </p>
metadata: {}
