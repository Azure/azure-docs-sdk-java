### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.keyvault.Permissions.certificates()
  name: certificates()
  nameWithType: Permissions.certificates()
  returns:
    description: <p>the certificates value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.CertificatePermissions?alt=com.microsoft.azure.management.keyvault.CertificatePermissions&text=CertificatePermissions" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the certificates value.</p>

    <p></p>
  syntax: public List<CertificatePermissions> certificates()
  uid: com.microsoft.azure.management.keyvault.Permissions.certificates()
- fullName: com.microsoft.azure.management.keyvault.Permissions.keys()
  name: keys()
  nameWithType: Permissions.keys()
  returns:
    description: <p>the keys value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.KeyPermissions?alt=com.microsoft.azure.management.keyvault.KeyPermissions&text=KeyPermissions" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the keys value.</p>

    <p></p>
  syntax: public List<KeyPermissions> keys()
  uid: com.microsoft.azure.management.keyvault.Permissions.keys()
- fullName: com.microsoft.azure.management.keyvault.Permissions.secrets()
  name: secrets()
  nameWithType: Permissions.secrets()
  returns:
    description: <p>the secrets value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.SecretPermissions?alt=com.microsoft.azure.management.keyvault.SecretPermissions&text=SecretPermissions" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the secrets value.</p>

    <p></p>
  syntax: public List<SecretPermissions> secrets()
  uid: com.microsoft.azure.management.keyvault.Permissions.secrets()
- fullName: com.microsoft.azure.management.keyvault.Permissions.withCertificates(List<CertificatePermissions> certificates)
  name: withCertificates(List<CertificatePermissions> certificates)
  nameWithType: Permissions.withCertificates(List<CertificatePermissions> certificates)
  parameters:
  - description: <p>the certificates value to set </p>
    name: certificates
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.CertificatePermissions?alt=com.microsoft.azure.management.keyvault.CertificatePermissions&text=CertificatePermissions" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Permissions object itself. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the certificates value.</p>

    <p></p>
  syntax: public Permissions withCertificates(List<CertificatePermissions> certificates)
  uid: com.microsoft.azure.management.keyvault.Permissions.withCertificates(List<CertificatePermissions>)
- fullName: com.microsoft.azure.management.keyvault.Permissions.withKeys(List<KeyPermissions> keys)
  name: withKeys(List<KeyPermissions> keys)
  nameWithType: Permissions.withKeys(List<KeyPermissions> keys)
  parameters:
  - description: <p>the keys value to set </p>
    name: keys
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.KeyPermissions?alt=com.microsoft.azure.management.keyvault.KeyPermissions&text=KeyPermissions" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Permissions object itself. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the keys value.</p>

    <p></p>
  syntax: public Permissions withKeys(List<KeyPermissions> keys)
  uid: com.microsoft.azure.management.keyvault.Permissions.withKeys(List<KeyPermissions>)
- fullName: com.microsoft.azure.management.keyvault.Permissions.withSecrets(List<SecretPermissions> secrets)
  name: withSecrets(List<SecretPermissions> secrets)
  nameWithType: Permissions.withSecrets(List<SecretPermissions> secrets)
  parameters:
  - description: <p>the secrets value to set </p>
    name: secrets
    type: List&lt;<xref href="com.microsoft.azure.management.keyvault.SecretPermissions?alt=com.microsoft.azure.management.keyvault.SecretPermissions&text=SecretPermissions" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Permissions object itself. </p>
    type: <xref href="com.microsoft.azure.management.keyvault.Permissions?alt=com.microsoft.azure.management.keyvault.Permissions&text=Permissions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the secrets value.</p>

    <p></p>
  syntax: public Permissions withSecrets(List<SecretPermissions> secrets)
  uid: com.microsoft.azure.management.keyvault.Permissions.withSecrets(List<SecretPermissions>)
nameWithType: Permissions
syntax: public class Permissions
type: class
uid: com.microsoft.azure.management.keyvault.Permissions
fullName: com.microsoft.azure.management.keyvault.Permissions
name: Permissions
package: com.microsoft.azure.management.keyvault
summary: <p>Permissions the identity has for keys, secrets and certificates. </p>
metadata: {}
