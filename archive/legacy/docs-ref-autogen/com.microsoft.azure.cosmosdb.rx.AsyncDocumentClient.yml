### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
  name: close()
  nameWithType: AsyncDocumentClient.close()
  summary: <p>Close this <xref uid="com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient" data-throw-if-not-resolved="false" data-raw-source="AsyncDocumentClient"></xref> instance and cleans up the resources. </p>
  syntax: public void close()
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.close()
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  name: createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the attachment to create. </p>
    name: attachment
    type: <xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created attachment or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates an attachment. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created attachment. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Attachment>> createAttachment(String documentLink, Attachment attachment, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,Attachment,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  name: createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  nameWithType: AsyncDocumentClient.createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the media stream for creating the attachment. </p>
    name: mediaStream
    type: <xref href="InputStream?alt=InputStream&text=InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>the media options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.MediaOptions?alt=com.microsoft.azure.cosmosdb.MediaOptions&text=MediaOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the request options </p>
    name: requestOptions
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created attachment or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates an attachment. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created attachment. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Attachment>> createAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createAttachment(String,InputStream,MediaOptions,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  name: createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  nameWithType: AsyncDocumentClient.createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the collection. </p>
    name: collection
    type: <xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created collection or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created collection. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<DocumentCollection>> createCollection(String databaseLink, DocumentCollection collection, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createCollection(String,DocumentCollection,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database database, RequestOptions options)
  name: createDatabase(Database database, RequestOptions options)
  nameWithType: AsyncDocumentClient.createDatabase(Database database, RequestOptions options)
  parameters:
  - description: <p>the database. </p>
    name: database
    type: <xref href="com.microsoft.azure.cosmosdb.Database?alt=com.microsoft.azure.cosmosdb.Database&text=Database" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created database or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Database?alt=com.microsoft.azure.cosmosdb.Database&text=Database" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created database. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Database>> createDatabase(Database database, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDatabase(Database,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  name: createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: AsyncDocumentClient.createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  parameters:
  - description: <p>the link to the parent document collection. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the document represented as a POJO or Document object. </p>
    name: document
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the flag for disabling automatic id generation. </p>
    name: disableAutomaticIdGeneration
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created document or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a document. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created document. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Document>> createDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createDocument(String,Object,RequestOptions,boolean)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String userLink, Permission permission, RequestOptions options)
  name: createPermission(String userLink, Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.createPermission(String userLink, Permission permission, RequestOptions options)
  parameters:
  - description: <p>the user link. </p>
    name: userLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the permission to create. </p>
    name: permission
    type: <xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created permission or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a permission. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created permission. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Permission>> createPermission(String userLink, Permission permission, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createPermission(String,Permission,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  name: createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the stored procedure to create. </p>
    name: storedProcedure
    type: <xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created stored procedure or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a stored procedure. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created stored procedure. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<StoredProcedure>> createStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createStoredProcedure(String,StoredProcedure,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  name: createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the trigger. </p>
    name: trigger
    type: <xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created trigger or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a trigger. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created trigger. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Trigger>> createTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createTrigger(String,Trigger,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String databaseLink, User user, RequestOptions options)
  name: createUser(String databaseLink, User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.createUser(String databaseLink, User user, RequestOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the user to create. </p>
    name: user
    type: <xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created user or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a user. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created user. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<User>> createUser(String databaseLink, User user, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUser(String,User,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  name: createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the user defined function. </p>
    name: udf
    type: <xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the created user defined function or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates a user defined function. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the created user defined function. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<UserDefinedFunction>> createUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.createUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String attachmentLink, RequestOptions options)
  name: deleteAttachment(String attachmentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteAttachment(String attachmentLink, RequestOptions options)
  parameters:
  - description: <p>the attachment link. </p>
    name: attachmentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted attachment or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes an attachment. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted attachment. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Attachment>> deleteAttachment(String attachmentLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteAttachment(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String collectionLink, RequestOptions options)
  name: deleteCollection(String collectionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteCollection(String collectionLink, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted database or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a document collection by the collection link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted database. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<DocumentCollection>> deleteCollection(String collectionLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteCollection(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String conflictLink, RequestOptions options)
  name: deleteConflict(String conflictLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteConflict(String conflictLink, RequestOptions options)
  parameters:
  - description: <p>the conflict link. </p>
    name: conflictLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted conflict or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Conflict?alt=com.microsoft.azure.cosmosdb.Conflict&text=Conflict" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a conflict. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted conflict. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Conflict>> deleteConflict(String conflictLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteConflict(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String databaseLink, RequestOptions options)
  name: deleteDatabase(String databaseLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteDatabase(String databaseLink, RequestOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the deleted database or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Database?alt=com.microsoft.azure.cosmosdb.Database&text=Database" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the deleted database. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Database>> deleteDatabase(String databaseLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDatabase(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String documentLink, RequestOptions options)
  name: deleteDocument(String documentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteDocument(String documentLink, RequestOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted document or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a document by the document link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted document. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Document>> deleteDocument(String documentLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteDocument(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String permissionLink, RequestOptions options)
  name: deletePermission(String permissionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deletePermission(String permissionLink, RequestOptions options)
  parameters:
  - description: <p>the permission link. </p>
    name: permissionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted permission or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a permission. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted permission. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Permission>> deletePermission(String permissionLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deletePermission(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  name: deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  parameters:
  - description: <p>the stored procedure link. </p>
    name: storedProcedureLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted stored procedure or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a stored procedure by the stored procedure link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted stored procedure. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<StoredProcedure>> deleteStoredProcedure(String storedProcedureLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteStoredProcedure(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String triggerLink, RequestOptions options)
  name: deleteTrigger(String triggerLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteTrigger(String triggerLink, RequestOptions options)
  parameters:
  - description: <p>the trigger link. </p>
    name: triggerLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted trigger or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a trigger. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted trigger. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Trigger>> deleteTrigger(String triggerLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteTrigger(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String userLink, RequestOptions options)
  name: deleteUser(String userLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteUser(String userLink, RequestOptions options)
  parameters:
  - description: <p>the user link. </p>
    name: userLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted user or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a user. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted user. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<User>> deleteUser(String userLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUser(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String udfLink, RequestOptions options)
  name: deleteUserDefinedFunction(String udfLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.deleteUserDefinedFunction(String udfLink, RequestOptions options)
  parameters:
  - description: <p>the user defined function link. </p>
    name: udfLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the deleted user defined function or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Deletes a user defined function. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the deleted user defined function. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<UserDefinedFunction>> deleteUserDefinedFunction(String udfLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.deleteUserDefinedFunction(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  name: executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  nameWithType: AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  parameters:
  - description: <p>the stored procedure link. </p>
    name: storedProcedureLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the array of procedure parameter values. </p>
    name: procedureParams
    type: <xref href="Object+%5B%5D?alt=Object+%5B%5D&text=Object+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the stored procedure response or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedureResponse?alt=com.microsoft.azure.cosmosdb.StoredProcedureResponse&text=StoredProcedureResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Executes a stored procedure by the stored procedure link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the stored procedure response. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, Object[] procedureParams)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,Object [])
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  name: executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  nameWithType: AsyncDocumentClient.executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  parameters:
  - description: <p>the stored procedure link. </p>
    name: storedProcedureLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the array of procedure parameter values. </p>
    name: procedureParams
    type: <xref href="Object+%5B%5D?alt=Object+%5B%5D&text=Object+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the stored procedure response or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedureResponse?alt=com.microsoft.azure.cosmosdb.StoredProcedureResponse&text=StoredProcedureResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Executes a stored procedure by the stored procedure link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the stored procedure response. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<StoredProcedureResponse> executeStoredProcedure(String storedProcedureLink, RequestOptions options, Object[] procedureParams)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.executeStoredProcedure(String,RequestOptions,Object [])
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
  name: getConnectionPolicy()
  nameWithType: AsyncDocumentClient.getConnectionPolicy()
  returns:
    description: <p>the connection policy </p>
    type: <xref href="com.microsoft.azure.cosmosdb.ConnectionPolicy?alt=com.microsoft.azure.cosmosdb.ConnectionPolicy&text=ConnectionPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the connection policy</p>

    <p></p>
  syntax: public ConnectionPolicy getConnectionPolicy()
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getConnectionPolicy()
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
  name: getDatabaseAccount()
  nameWithType: AsyncDocumentClient.getDatabaseAccount()
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the database account or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.DatabaseAccount?alt=com.microsoft.azure.cosmosdb.DatabaseAccount&text=DatabaseAccount" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets database account information. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the database account. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<DatabaseAccount> getDatabaseAccount()
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getDatabaseAccount()
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
  name: getReadEndpoint()
  nameWithType: AsyncDocumentClient.getReadEndpoint()
  returns:
    description: <p>the read endpoint URI </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current read endpoint chosen based on availability and preference.</p>

    <p></p>
  syntax: public URI getReadEndpoint()
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getReadEndpoint()
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
  name: getServiceEndpoint()
  nameWithType: AsyncDocumentClient.getServiceEndpoint()
  returns:
    description: <p>the service endpoint URI </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the default service endpoint as passed in by the user during construction.</p>

    <p></p>
  syntax: public URI getServiceEndpoint()
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getServiceEndpoint()
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
  name: getWriteEndpoint()
  nameWithType: AsyncDocumentClient.getWriteEndpoint()
  returns:
    description: <p>the write endpoint URI </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the current write endpoint chosen based on availability and preference.</p>

    <p></p>
  syntax: public URI getWriteEndpoint()
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.getWriteEndpoint()
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor(MeterRegistry registry)
  name: monitor(MeterRegistry registry)
  nameWithType: AsyncDocumentClient.monitor(MeterRegistry registry)
  parameters:
  - description: <p>a meter registry to use for reporting Direct TCP metrics </p>
    name: registry
    type: <xref href="MeterRegistry?alt=MeterRegistry&text=MeterRegistry" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a meter registry for reporting Direct TCP metrics</p>

    <p></p>
  syntax: public static void monitor(MeterRegistry registry)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.monitor(MeterRegistry)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained attachments or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for attachments. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained attachments. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Attachment>> queryAttachments(String documentLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String documentLink, String query, FeedOptions options)
  name: queryAttachments(String documentLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryAttachments(String documentLink, String query, FeedOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained attachments or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for attachments. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained attachments. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Attachment>> queryAttachments(String documentLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryAttachments(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained collections or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for document collections in a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the obtained collections. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String databaseLink, String query, FeedOptions options)
  name: queryCollections(String databaseLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryCollections(String databaseLink, String query, FeedOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained collections or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for document collections in a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the obtained collections. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<DocumentCollection>> queryCollections(String databaseLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryCollections(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained conflicts or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Conflict?alt=com.microsoft.azure.cosmosdb.Conflict&text=Conflict" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for conflicts. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained conflicts. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Conflict>> queryConflicts(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String collectionLink, String query, FeedOptions options)
  name: queryConflicts(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryConflicts(String collectionLink, String query, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained conflicts or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Conflict?alt=com.microsoft.azure.cosmosdb.Conflict&text=Conflict" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for conflicts. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained conflicts. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Conflict>> queryConflicts(String collectionLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryConflicts(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  name: queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained databases or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Database?alt=com.microsoft.azure.cosmosdb.Database&text=Database" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for databases. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the obtained databases. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Database>> queryDatabases(SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String query, FeedOptions options)
  name: queryDatabases(String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDatabases(String query, FeedOptions options)
  parameters:
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of read databases or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Database?alt=com.microsoft.azure.cosmosdb.Database&text=Database" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for databases. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the read databases. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Database>> queryDatabases(String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDatabases(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  name: queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  nameWithType: AsyncDocumentClient.queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  parameters:
  - description: <p>the link to the parent document collection. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the change feed options. </p>
    name: changeFeedOptions
    type: <xref href="com.microsoft.azure.cosmosdb.ChangeFeedOptions?alt=com.microsoft.azure.cosmosdb.ChangeFeedOptions&text=ChangeFeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained documents or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for documents change feed in a document collection. After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained documents. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Document>> queryDocumentChangeFeed(String collectionLink, ChangeFeedOptions changeFeedOptions)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocumentChangeFeed(String,ChangeFeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the link to the parent document collection. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained documents or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for documents in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the obtained documents. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Document>> queryDocuments(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String collectionLink, String query, FeedOptions options)
  name: queryDocuments(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryDocuments(String collectionLink, String query, FeedOptions options)
  parameters:
  - description: <p>the link to the parent document collection. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained document or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for documents in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the obtained documents. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Document>> queryDocuments(String collectionLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryDocuments(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  name: queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained offers or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Offer?alt=com.microsoft.azure.cosmosdb.Offer&text=Offer" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for offers in a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of obtained obtained offers. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Offer>> queryOffers(SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String query, FeedOptions options)
  name: queryOffers(String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryOffers(String query, FeedOptions options)
  parameters:
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained offers or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Offer?alt=com.microsoft.azure.cosmosdb.Offer&text=Offer" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for offers in a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of obtained obtained offers. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Offer>> queryOffers(String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryOffers(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the permission link. </p>
    name: permissionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained permissions or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for permissions. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Permission>> queryPermissions(String permissionLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String permissionLink, String query, FeedOptions options)
  name: queryPermissions(String permissionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryPermissions(String permissionLink, String query, FeedOptions options)
  parameters:
  - description: <p>the permission link. </p>
    name: permissionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained permissions or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for permissions. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained permissions. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Permission>> queryPermissions(String permissionLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryPermissions(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained stored procedures or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for stored procedures in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained stored procedures. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  name: queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained stored procedures or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for stored procedures in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained stored procedures. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<StoredProcedure>> queryStoredProcedures(String collectionLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryStoredProcedures(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained triggers or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for triggers. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained triggers. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Trigger>> queryTriggers(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String collectionLink, String query, FeedOptions options)
  name: queryTriggers(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryTriggers(String collectionLink, String query, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained triggers or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for triggers. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained triggers. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Trigger>> queryTriggers(String collectionLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryTriggers(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained user defined functions or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for user defined functions. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained user defined functions. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  name: queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained user defined functions or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for user defined functions. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained user defined functions. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<UserDefinedFunction>> queryUserDefinedFunctions(String collectionLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUserDefinedFunctions(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  name: queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL query specification. </p>
    name: querySpec
    type: <xref href="com.microsoft.azure.cosmosdb.SqlQuerySpec?alt=com.microsoft.azure.cosmosdb.SqlQuerySpec&text=SqlQuerySpec" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained users or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for users. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained users. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<User>> queryUsers(String databaseLink, SqlQuerySpec querySpec, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,SqlQuerySpec,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String databaseLink, String query, FeedOptions options)
  name: queryUsers(String databaseLink, String query, FeedOptions options)
  nameWithType: AsyncDocumentClient.queryUsers(String databaseLink, String query, FeedOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the query. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained users or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Query for users. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained users. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<User>> queryUsers(String databaseLink, String query, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.queryUsers(String,String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String attachmentLink, RequestOptions options)
  name: readAttachment(String attachmentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readAttachment(String attachmentLink, RequestOptions options)
  parameters:
  - description: <p>the attachment link. </p>
    name: attachmentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read attachment or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads an attachment. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read attachment. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Attachment>> readAttachment(String attachmentLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachment(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String documentLink, FeedOptions options)
  name: readAttachments(String documentLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readAttachments(String documentLink, FeedOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read attachments or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all attachments in a document. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read attachments. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Attachment>> readAttachments(String documentLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readAttachments(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String collectionLink, RequestOptions options)
  name: readCollection(String collectionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readCollection(String collectionLink, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read collection or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads a document collection by the collection link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read collection. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<DocumentCollection>> readCollection(String collectionLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollection(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String databaseLink, FeedOptions options)
  name: readCollections(String databaseLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readCollections(String databaseLink, FeedOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the fee options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read collections or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all document collections in a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the read collections. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<DocumentCollection>> readCollections(String databaseLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readCollections(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String conflictLink, RequestOptions options)
  name: readConflict(String conflictLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readConflict(String conflictLink, RequestOptions options)
  parameters:
  - description: <p>the conflict link. </p>
    name: conflictLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read conflict or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Conflict?alt=com.microsoft.azure.cosmosdb.Conflict&text=Conflict" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads a conflict. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read conflict. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Conflict>> readConflict(String conflictLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflict(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String collectionLink, FeedOptions options)
  name: readConflicts(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readConflicts(String collectionLink, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read conflicts or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Conflict?alt=com.microsoft.azure.cosmosdb.Conflict&text=Conflict" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all conflicts in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read conflicts. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Conflict>> readConflicts(String collectionLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readConflicts(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String databaseLink, RequestOptions options)
  name: readDatabase(String databaseLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readDatabase(String databaseLink, RequestOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read database or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Database?alt=com.microsoft.azure.cosmosdb.Database&text=Database" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read database. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Database>> readDatabase(String databaseLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabase(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions options)
  name: readDatabases(FeedOptions options)
  nameWithType: AsyncDocumentClient.readDatabases(FeedOptions options)
  parameters:
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of read databases or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Database?alt=com.microsoft.azure.cosmosdb.Database&text=Database" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all databases. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the read databases. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Database>> readDatabases(FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDatabases(FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String documentLink, RequestOptions options)
  name: readDocument(String documentLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readDocument(String documentLink, RequestOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read document or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads a document by the document link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read document. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Document>> readDocument(String documentLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocument(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String collectionLink, FeedOptions options)
  name: readDocuments(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readDocuments(String collectionLink, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read documents or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all documents in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response of the read documents. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Document>> readDocuments(String collectionLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readDocuments(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String mediaLink)
  name: readMedia(String mediaLink)
  nameWithType: AsyncDocumentClient.readMedia(String mediaLink)
  parameters:
  - description: <p>the media link. </p>
    name: mediaLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the media response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.MediaResponse?alt=com.microsoft.azure.cosmosdb.MediaResponse&text=MediaResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Reads a media by the media link.</p>

    <p></p>
  syntax: public Observable<MediaResponse> readMedia(String mediaLink)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readMedia(String)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String offerLink)
  name: readOffer(String offerLink)
  nameWithType: AsyncDocumentClient.readOffer(String offerLink)
  parameters:
  - description: <p>the offer link. </p>
    name: offerLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read offer or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Offer?alt=com.microsoft.azure.cosmosdb.Offer&text=Offer" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads an offer. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read offer. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Offer>> readOffer(String offerLink)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffer(String)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions options)
  name: readOffers(FeedOptions options)
  nameWithType: AsyncDocumentClient.readOffers(FeedOptions options)
  parameters:
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read offers or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Offer?alt=com.microsoft.azure.cosmosdb.Offer&text=Offer" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads offers. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read offers. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Offer>> readOffers(FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readOffers(FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String collectionLink, FeedOptions options)
  name: readPartitionKeyRanges(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readPartitionKeyRanges(String collectionLink, FeedOptions options)
  parameters:
  - description: <p>the link to the parent document collection. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the obtained partition key ranges or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.PartitionKeyRange?alt=com.microsoft.azure.cosmosdb.PartitionKeyRange&text=PartitionKeyRange" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all partition key ranges in a document collection. After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the obtained partition key ranges. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<PartitionKeyRange>> readPartitionKeyRanges(String collectionLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPartitionKeyRanges(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String permissionLink, RequestOptions options)
  name: readPermission(String permissionLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readPermission(String permissionLink, RequestOptions options)
  parameters:
  - description: <p>the permission link. </p>
    name: permissionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read permission or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads a permission. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read permission. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Permission>> readPermission(String permissionLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermission(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String permissionLink, FeedOptions options)
  name: readPermissions(String permissionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readPermissions(String permissionLink, FeedOptions options)
  parameters:
  - description: <p>the permission link. </p>
    name: permissionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read permissions or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all permissions. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read permissions. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Permission>> readPermissions(String permissionLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readPermissions(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String storedProcedureLink, RequestOptions options)
  name: readStoredProcedure(String storedProcedureLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readStoredProcedure(String storedProcedureLink, RequestOptions options)
  parameters:
  - description: <p>the stored procedure link. </p>
    name: storedProcedureLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read stored procedure or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Read a stored procedure by the stored procedure link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read stored procedure. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<StoredProcedure>> readStoredProcedure(String storedProcedureLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedure(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String collectionLink, FeedOptions options)
  name: readStoredProcedures(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readStoredProcedures(String collectionLink, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read stored procedures or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all stored procedures in a document collection link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read stored procedures. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<StoredProcedure>> readStoredProcedures(String collectionLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readStoredProcedures(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String triggerLink, RequestOptions options)
  name: readTrigger(String triggerLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readTrigger(String triggerLink, RequestOptions options)
  parameters:
  - description: <p>the trigger link. </p>
    name: triggerLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the read trigger or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads a trigger by the trigger link. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the read trigger. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Trigger>> readTrigger(String triggerLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTrigger(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String collectionLink, FeedOptions options)
  name: readTriggers(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readTriggers(String collectionLink, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read triggers or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all triggers in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read triggers. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<Trigger>> readTriggers(String collectionLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readTriggers(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String userLink, RequestOptions options)
  name: readUser(String userLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readUser(String userLink, RequestOptions options)
  parameters:
  - description: <p>the user link. </p>
    name: userLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the read user or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads a user. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the read user. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<User>> readUser(String userLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUser(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String udfLink, RequestOptions options)
  name: readUserDefinedFunction(String udfLink, RequestOptions options)
  nameWithType: AsyncDocumentClient.readUserDefinedFunction(String udfLink, RequestOptions options)
  parameters:
  - description: <p>the user defined function link. </p>
    name: udfLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response for the read user defined function or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Read a user defined function. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response for the read user defined function. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<UserDefinedFunction>> readUserDefinedFunction(String udfLink, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunction(String,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String collectionLink, FeedOptions options)
  name: readUserDefinedFunctions(String collectionLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readUserDefinedFunctions(String collectionLink, FeedOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read user defined functions or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all user defined functions in a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read user defined functions. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<UserDefinedFunction>> readUserDefinedFunctions(String collectionLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUserDefinedFunctions(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String databaseLink, FeedOptions options)
  name: readUsers(String databaseLink, FeedOptions options)
  nameWithType: AsyncDocumentClient.readUsers(String databaseLink, FeedOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the feed options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.FeedOptions?alt=com.microsoft.azure.cosmosdb.FeedOptions&text=FeedOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing one or several feed response pages of the read users or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.FeedResponse?alt=com.microsoft.azure.cosmosdb.FeedResponse&text=FeedResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Reads all users in a database. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will contain one or several feed response pages of the read users. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<FeedResponse<User>> readUsers(String databaseLink, FeedOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.readUsers(String,FeedOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment attachment, RequestOptions options)
  name: replaceAttachment(Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceAttachment(Attachment attachment, RequestOptions options)
  parameters:
  - description: <p>the attachment to use. </p>
    name: attachment
    type: <xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced attachment or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces an attachment. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced attachment. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Attachment>> replaceAttachment(Attachment attachment, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceAttachment(Attachment,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection collection, RequestOptions options)
  name: replaceCollection(DocumentCollection collection, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceCollection(DocumentCollection collection, RequestOptions options)
  parameters:
  - description: <p>the document collection to use. </p>
    name: collection
    type: <xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced document collection or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.DocumentCollection?alt=com.microsoft.azure.cosmosdb.DocumentCollection&text=DocumentCollection" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a document collection. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced document collection. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<DocumentCollection>> replaceCollection(DocumentCollection collection, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceCollection(DocumentCollection,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document document, RequestOptions options)
  name: replaceDocument(Document document, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceDocument(Document document, RequestOptions options)
  parameters:
  - description: <p>the document to replace (containing the document id). </p>
    name: document
    type: <xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced document or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a document with the passed in document. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced document. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Document>> replaceDocument(Document document, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(Document,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String documentLink, Object document, RequestOptions options)
  name: replaceDocument(String documentLink, Object document, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceDocument(String documentLink, Object document, RequestOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the document represented as a POJO or Document object. </p>
    name: document
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced document or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a document using a POJO object. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced document. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Document>> replaceDocument(String documentLink, Object document, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceDocument(String,Object,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer offer)
  name: replaceOffer(Offer offer)
  nameWithType: AsyncDocumentClient.replaceOffer(Offer offer)
  parameters:
  - description: <p>the offer to use. </p>
    name: offer
    type: <xref href="com.microsoft.azure.cosmosdb.Offer?alt=com.microsoft.azure.cosmosdb.Offer&text=Offer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced offer or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Offer?alt=com.microsoft.azure.cosmosdb.Offer&text=Offer" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces an offer. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced offer. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Offer>> replaceOffer(Offer offer)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceOffer(Offer)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission permission, RequestOptions options)
  name: replacePermission(Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.replacePermission(Permission permission, RequestOptions options)
  parameters:
  - description: <p>the permission to use. </p>
    name: permission
    type: <xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced permission or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a permission. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced permission. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Permission>> replacePermission(Permission permission, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replacePermission(Permission,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  name: replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  parameters:
  - description: <p>the stored procedure to use. </p>
    name: storedProcedure
    type: <xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced stored procedure or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a stored procedure. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced stored procedure. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<StoredProcedure>> replaceStoredProcedure(StoredProcedure storedProcedure, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceStoredProcedure(StoredProcedure,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger trigger, RequestOptions options)
  name: replaceTrigger(Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceTrigger(Trigger trigger, RequestOptions options)
  parameters:
  - description: <p>the trigger to use. </p>
    name: trigger
    type: <xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced trigger or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a trigger. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced trigger. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Trigger>> replaceTrigger(Trigger trigger, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceTrigger(Trigger,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User user, RequestOptions options)
  name: replaceUser(User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceUser(User user, RequestOptions options)
  parameters:
  - description: <p>the user to use. </p>
    name: user
    type: <xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced user or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a user. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced user. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<User>> replaceUser(User user, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUser(User,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  name: replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  parameters:
  - description: <p>the user defined function. </p>
    name: udf
    type: <xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the replaced user defined function or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Replaces a user defined function. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the replaced user defined function. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<UserDefinedFunction>> replaceUserDefinedFunction(UserDefinedFunction udf, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.replaceUserDefinedFunction(UserDefinedFunction,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  name: updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  nameWithType: AsyncDocumentClient.updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  parameters:
  - description: <p>the media link. </p>
    name: mediaLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the media stream to upload. </p>
    name: mediaStream
    type: <xref href="InputStream?alt=InputStream&text=InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>the media options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.MediaOptions?alt=com.microsoft.azure.cosmosdb.MediaOptions&text=MediaOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the media response. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.MediaResponse?alt=com.microsoft.azure.cosmosdb.MediaResponse&text=MediaResponse" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates a media by the media link.</p>

    <p></p>
  syntax: public Observable<MediaResponse> updateMedia(String mediaLink, InputStream mediaStream, MediaOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.updateMedia(String,InputStream,MediaOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  name: upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the attachment to upsert. </p>
    name: attachment
    type: <xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted attachment or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts an attachment. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted attachment. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Attachment>> upsertAttachment(String documentLink, Attachment attachment, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,Attachment,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  name: upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  nameWithType: AsyncDocumentClient.upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  parameters:
  - description: <p>the document link. </p>
    name: documentLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the media stream for upserting the attachment. </p>
    name: mediaStream
    type: <xref href="InputStream?alt=InputStream&text=InputStream" data-throw-if-not-resolved="False"/>
  - description: <p>the media options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.MediaOptions?alt=com.microsoft.azure.cosmosdb.MediaOptions&text=MediaOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the request options </p>
    name: requestOptions
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted attachment or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Attachment?alt=com.microsoft.azure.cosmosdb.Attachment&text=Attachment" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts an attachment to the media stream </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted attachment. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Attachment>> upsertAttachment(String documentLink, InputStream mediaStream, MediaOptions options, RequestOptions requestOptions)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertAttachment(String,InputStream,MediaOptions,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  name: upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  nameWithType: AsyncDocumentClient.upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  parameters:
  - description: <p>the link to the parent document collection. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the document represented as a POJO or Document object to upsert. </p>
    name: document
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the flag for disabling automatic id generation. </p>
    name: disableAutomaticIdGeneration
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted document or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Document?alt=com.microsoft.azure.cosmosdb.Document&text=Document" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts a document. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted document. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Document>> upsertDocument(String collectionLink, Object document, RequestOptions options, boolean disableAutomaticIdGeneration)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertDocument(String,Object,RequestOptions,boolean)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String userLink, Permission permission, RequestOptions options)
  name: upsertPermission(String userLink, Permission permission, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertPermission(String userLink, Permission permission, RequestOptions options)
  parameters:
  - description: <p>the user link. </p>
    name: userLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the permission to upsert. </p>
    name: permission
    type: <xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted permission or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Permission?alt=com.microsoft.azure.cosmosdb.Permission&text=Permission" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts a permission. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted permission. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Permission>> upsertPermission(String userLink, Permission permission, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertPermission(String,Permission,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  name: upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the stored procedure to upsert. </p>
    name: storedProcedure
    type: <xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted stored procedure or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.StoredProcedure?alt=com.microsoft.azure.cosmosdb.StoredProcedure&text=StoredProcedure" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts a stored procedure. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted stored procedure. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<StoredProcedure>> upsertStoredProcedure(String collectionLink, StoredProcedure storedProcedure, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertStoredProcedure(String,StoredProcedure,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  name: upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the trigger to upsert. </p>
    name: trigger
    type: <xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted trigger or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.Trigger?alt=com.microsoft.azure.cosmosdb.Trigger&text=Trigger" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts a trigger. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted trigger. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<Trigger>> upsertTrigger(String collectionLink, Trigger trigger, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertTrigger(String,Trigger,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String databaseLink, User user, RequestOptions options)
  name: upsertUser(String databaseLink, User user, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertUser(String databaseLink, User user, RequestOptions options)
  parameters:
  - description: <p>the database link. </p>
    name: databaseLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the user to upsert. </p>
    name: user
    type: <xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted user or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.User?alt=com.microsoft.azure.cosmosdb.User&text=User" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts a user. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted user. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<User>> upsertUser(String databaseLink, User user, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUser(String,User,RequestOptions)
- fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  name: upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  nameWithType: AsyncDocumentClient.upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  parameters:
  - description: <p>the collection link. </p>
    name: collectionLink
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the user defined function to upsert. </p>
    name: udf
    type: <xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>
  - description: <p>the request options. </p>
    name: options
    type: <xref href="com.microsoft.azure.cosmosdb.RequestOptions?alt=com.microsoft.azure.cosmosdb.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> containing the single resource response with the upserted user defined function or an error. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cosmosdb.ResourceResponse?alt=com.microsoft.azure.cosmosdb.ResourceResponse&text=ResourceResponse" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.azure.cosmosdb.UserDefinedFunction?alt=com.microsoft.azure.cosmosdb.UserDefinedFunction&text=UserDefinedFunction" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Upserts a user defined function. </p>

    <p>After subscription the operation will be performed. The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> upon successful completion will contain a single resource response with the upserted user defined function. In case of failure the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> will error.</p>

    <p></p>
  syntax: public Observable<ResourceResponse<UserDefinedFunction>> upsertUserDefinedFunction(String collectionLink, UserDefinedFunction udf, RequestOptions options)
  uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.upsertUserDefinedFunction(String,UserDefinedFunction,RequestOptions)
nameWithType: AsyncDocumentClient
syntax: public interface AsyncDocumentClient
type: interface
uid: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
fullName: com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient
name: AsyncDocumentClient
package: com.microsoft.azure.cosmosdb.rx
summary: >-
  <p>Provides a client-side logical representation of the Azure Cosmos DB database service. This async client is used to configure and execute requests against the service.</p>

  <p>

    <xref uid="com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient" data-throw-if-not-resolved="false" data-raw-source="AsyncDocumentClient"></xref> async APIs return <a href="https://github.com/ReactiveX/RxJava">rxJava</a>'s<code>Observable 

      </code> , and so you can use rxJava <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> functionality. <b>The async <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Observable"></xref> based APIs perform the requested operation only after subscription.</b></p>

  <p>The service client encapsulates the endpoint and credentials used to access the Cosmos DB service. </p>

  <p>To instantiate you can use the <xref uid="com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient.Builder" data-throw-if-not-resolved="false" data-raw-source="Builder"></xref><pre><code>ConnectionPolicy connectionPolicy = new ConnectionPolicy();

      connectionPolicy.setConnectionMode(ConnectionMode.Direct);

      AsyncDocumentClient client = new AsyncDocumentClient.Builder()

              .withServiceEndpoint(serviceEndpoint)

              .withMasterKeyOrResourceToken(masterKey)

              .withConnectionPolicy(connectionPolicy)

              .withConsistencyLevel(ConsistencyLevel.Session)

              .build();

      </code></pre></p>
metadata: {}
