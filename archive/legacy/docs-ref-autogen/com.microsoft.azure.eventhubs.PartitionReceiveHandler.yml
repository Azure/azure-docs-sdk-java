### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler.getMaxEventCount()
  name: getMaxEventCount()
  nameWithType: PartitionReceiveHandler.getMaxEventCount()
  returns:
    description: <p>value indicating the maximum number of <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false" data-raw-source="EventData"></xref> to supply while invoking <xref uid="" data-throw-if-not-resolved="false" data-raw-source="onReceive(Iterable)"></xref></p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Maximum number of <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false" data-raw-source="EventData"></xref> to supply while invoking <xref uid="" data-throw-if-not-resolved="false" data-raw-source="onReceive(Iterable)"></xref></p>

    <p>Ensure that the value should be less than or equal to the value of <xref uid="com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount()" data-throw-if-not-resolved="false" data-raw-source="ReceiverOptions#getPrefetchCount()"></xref></p>

    <p></p>
  syntax: public int getMaxEventCount()
  uid: com.microsoft.azure.eventhubs.PartitionReceiveHandler.getMaxEventCount()
- fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler.onError(final Throwable error)
  name: onError(final Throwable error)
  nameWithType: PartitionReceiveHandler.onError(final Throwable error)
  parameters:
  - description: <p>fatal error encountered while running the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiveHandler" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiveHandler"></xref> pump </p>
    name: error
    type: <xref href="final+Throwable?alt=final+Throwable&text=final+Throwable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Implement this method to Listen to errors which lead to Closure of the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiveHandler" data-throw-if-not-resolved="false" data-raw-source="PartitionReceiveHandler"></xref> pump.</p>

    <p></p>
  syntax: public void onError(final Throwable error)
  uid: com.microsoft.azure.eventhubs.PartitionReceiveHandler.onError(final Throwable)
- fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive(final Iterable<EventData> events)
  name: onReceive(final Iterable<EventData> events)
  nameWithType: PartitionReceiveHandler.onReceive(final Iterable<EventData> events)
  parameters:
  - description: <p>the list of fetched events from the corresponding PartitionReceiver. </p>
    name: events
    type: final Iterable&lt;<xref href="com.microsoft.azure.eventhubs.EventData?alt=com.microsoft.azure.eventhubs.EventData&text=EventData" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>user should implement this method to specify the action to be performed on the received events.</p>

    <p></p>
  syntax: public void onReceive(final Iterable<EventData> events)
  uid: com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive(final Iterable<EventData>)
nameWithType: PartitionReceiveHandler
syntax: public interface PartitionReceiveHandler
type: interface
uid: com.microsoft.azure.eventhubs.PartitionReceiveHandler
fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
name: PartitionReceiveHandler
package: com.microsoft.azure.eventhubs
summary: >-
  <p>The handler to invoke after receiving <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false" data-raw-source="EventData"></xref>s from Microsoft Azure EventHubs. Use any implementation of this abstract class to specify user action when using PartitionReceiver's setReceiveHandler().</p>

  <p></p>
metadata: {}
