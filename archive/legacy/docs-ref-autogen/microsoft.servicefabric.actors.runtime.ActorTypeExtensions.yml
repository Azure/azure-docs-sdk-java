### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces(Class<?> cls)
  name: getActorEventInterfaces(Class<?> cls)
  nameWithType: ActorTypeExtensions.getActorEventInterfaces(Class<?> cls)
  parameters:
  - description: <p>The type of class implementing actor. </p>
    name: cls
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An array containing actor event interface which the type implements. </p>
    type: <xref href="Class%3C%3F%3E+%5B%5D?alt=Class%3C%3F%3E+%5B%5D&text=Class%3C%3F%3E+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the actor event interfaces implemented by the actor class. </p>
  syntax: public static Class<?> [] getActorEventInterfaces(Class<?> cls)
  uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorEventInterfaces(Class<?>)
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces(Class<?> cls)
  name: getActorInterfaces(Class<?> cls)
  nameWithType: ActorTypeExtensions.getActorInterfaces(Class<?> cls)
  parameters:
  - description: <p>The type of class implementing actor. </p>
    name: cls
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An array containing actor interface which the type implements. </p>
    type: <xref href="Class%3C%3F%3E+%5B%5D?alt=Class%3C%3F%3E+%5B%5D&text=Class%3C%3F%3E+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the actor interfaces implemented by the actor class. </p>
  syntax: public static Class<?> [] getActorInterfaces(Class<?> cls)
  uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.getActorInterfaces(Class<?>)
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor(Class<?> actorClass)
  name: isActor(Class<?> actorClass)
  nameWithType: ActorTypeExtensions.isActor(Class<?> actorClass)
  parameters:
  - description: <p>The type implementing actor. </p>
    name: actorClass
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>true, if the actorClass is an <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.Actor"></xref>; otherwise, false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Indicates a value whether the actorType is an actor. </p>
  syntax: public static boolean isActor(Class<?> actorClass)
  uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActor(Class<?>)
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface(Class<?> actorInterfaceClass)
  name: isActorInterface(Class<?> actorInterfaceClass)
  nameWithType: ActorTypeExtensions.isActorInterface(Class<?> actorInterfaceClass)
  parameters:
  - description: <p>The interface type of the actor. </p>
    name: actorInterfaceClass
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>true, if the actorInterfaceClass is an interface only implements <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.Actor"></xref> or <xref uid="microsoft.servicefabric.actors.Actor" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.Actor"></xref> and <xref uid="microsoft.servicefabric.actors.ActorEventPublisher" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.ActorEventPublisher"></xref>; otherwise, false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Indicates whether the interface type is an actor interface. </p>
  syntax: public static boolean isActorInterface(Class<?> actorInterfaceClass)
  uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isActorInterface(Class<?>)
- fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor(Class<?> actorClass)
  name: isRemindableActor(Class<?> actorClass)
  nameWithType: ActorTypeExtensions.isRemindableActor(Class<?> actorClass)
  parameters:
  - description: <p>The type implementing actor. </p>
    name: actorClass
    type: <xref href="Class%3C%3F%3E?alt=Class%3C%3F%3E&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>true, if the actorClass implements an <xref uid="microsoft.servicefabric.actors.runtime.Remindable" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.runtime.Remindable"></xref> interface; otherwise, false. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Indicates a value whether an actor type implements <xref uid="microsoft.servicefabric.actors.runtime.Remindable" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.actors.runtime.Remindable"></xref> interface. </p>
  syntax: public static boolean isRemindableActor(Class<?> actorClass)
  uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions.isRemindableActor(Class<?>)
nameWithType: ActorTypeExtensions
syntax: public class ActorTypeExtensions
type: class
uid: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
fullName: microsoft.servicefabric.actors.runtime.ActorTypeExtensions
name: ActorTypeExtensions
package: microsoft.servicefabric.actors.runtime
summary: <p>Contains extension method for Actor types. </p>
metadata: {}
