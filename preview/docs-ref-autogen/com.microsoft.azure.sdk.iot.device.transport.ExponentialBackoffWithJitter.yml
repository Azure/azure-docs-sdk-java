### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter"
fullName: "com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter"
name: "ExponentialBackoffWithJitter"
nameWithType: "ExponentialBackoffWithJitter"
summary: "Represents a retry policy that performs exponential backoff with jitter retries."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ExponentialBackoffWithJitter implements RetryPolicy"
constructors:
- "com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.ExponentialBackoffWithJitter()"
- "com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.ExponentialBackoffWithJitter(int,long,long,long,boolean)"
methods:
- "com.microsoft.azure.sdk.iot.device.transport.ExponentialBackoffWithJitter.getRetryDecision(int,com.microsoft.azure.sdk.iot.device.exceptions.TransportException)"
type: "class"
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.RetryPolicy?alt=com.microsoft.azure.sdk.iot.device.transport.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
