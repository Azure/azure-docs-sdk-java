### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.sym.Name2
  id: Name2
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym
  children:
  - com.fasterxml.jackson.core.sym.Name2.equals(int)
  - com.fasterxml.jackson.core.sym.Name2.equals(int,int)
  - com.fasterxml.jackson.core.sym.Name2.equals(int,int,int)
  - com.fasterxml.jackson.core.sym.Name2.equals(int[],int)
  langs:
  - java
  name: Name2
  nameWithType: Name2
  fullName: com.fasterxml.jackson.core.sym.Name2
  type: Class
  package: com.fasterxml.jackson.core.sym
  summary: >-
    Specialized implementation of PName: can be used for short Strings that consists of 5 to 8 bytes. Usually this means relatively short ascii-only names.


    The reason for such specialized classes is mostly space efficiency; and to a lesser degree performance. Both are achieved for short Strings by avoiding another level of indirection (via quad arrays)
  syntax:
    content: public final class Name2 extends Name
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.sym.Name
  inheritedMembers:
  - com.fasterxml.jackson.core.sym.Name.equals(int)
  - com.fasterxml.jackson.core.sym.Name.equals(int,int)
  - com.fasterxml.jackson.core.sym.Name.equals(int,int,int)
  - com.fasterxml.jackson.core.sym.Name.equals(int[],int)
  - com.fasterxml.jackson.core.sym.Name.equals(java.lang.Object)
  - com.fasterxml.jackson.core.sym.Name.getName()
  - com.fasterxml.jackson.core.sym.Name.hashCode()
  - com.fasterxml.jackson.core.sym.Name.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.sym.Name2.Name2(java.lang.String,int,int,int)
  id: Name2(java.lang.String,int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.Name2
  langs:
  - java
  name: Name2(String name, int hash, int quad1, int quad2)
  nameWithType: Name2.Name2(String name, int hash, int quad1, int quad2)
  fullName: com.fasterxml.jackson.core.sym.Name2.Name2(String name, int hash, int quad1, int quad2)
  overload: com.fasterxml.jackson.core.sym.Name2.Name2*
  type: Constructor
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: " Name2(String name, int hash, int quad1, int quad2)"
    parameters:
    - id: name
      type: java.lang.String
    - id: hash
      type: int
    - id: quad1
      type: int
    - id: quad2
      type: int
- uid: com.fasterxml.jackson.core.sym.Name2.equals(int)
  id: equals(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.Name2
  langs:
  - java
  name: equals(int quad)
  nameWithType: Name2.equals(int quad)
  fullName: com.fasterxml.jackson.core.sym.Name2.equals(int quad)
  overload: com.fasterxml.jackson.core.sym.Name2.equals*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public boolean equals(int quad)
    parameters:
    - id: quad
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.sym.Name2.equals(int,int)
  id: equals(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.Name2
  langs:
  - java
  name: equals(int quad1, int quad2)
  nameWithType: Name2.equals(int quad1, int quad2)
  fullName: com.fasterxml.jackson.core.sym.Name2.equals(int quad1, int quad2)
  overload: com.fasterxml.jackson.core.sym.Name2.equals*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public boolean equals(int quad1, int quad2)
    parameters:
    - id: quad1
      type: int
    - id: quad2
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.sym.Name2.equals(int,int,int)
  id: equals(int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.Name2
  langs:
  - java
  name: equals(int quad1, int quad2, int q3)
  nameWithType: Name2.equals(int quad1, int quad2, int q3)
  fullName: com.fasterxml.jackson.core.sym.Name2.equals(int quad1, int quad2, int q3)
  overload: com.fasterxml.jackson.core.sym.Name2.equals*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public boolean equals(int quad1, int quad2, int q3)
    parameters:
    - id: quad1
      type: int
    - id: quad2
      type: int
    - id: q3
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.sym.Name2.equals(int[],int)
  id: equals(int[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.Name2
  langs:
  - java
  name: equals(int[] quads, int qlen)
  nameWithType: Name2.equals(int[] quads, int qlen)
  fullName: com.fasterxml.jackson.core.sym.Name2.equals(int[] quads, int qlen)
  overload: com.fasterxml.jackson.core.sym.Name2.equals*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public boolean equals(int[] quads, int qlen)
    parameters:
    - id: quads
      type: int[]
    - id: qlen
      type: int
    return:
      type: boolean
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.sym.Name2.Name2*
  name: Name2
  nameWithType: Name2.Name2
  fullName: com.fasterxml.jackson.core.sym.Name2.Name2
  package: com.fasterxml.jackson.core.sym
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.sym.Name2.equals*
  name: equals
  nameWithType: Name2.equals
  fullName: com.fasterxml.jackson.core.sym.Name2.equals
  package: com.fasterxml.jackson.core.sym
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.sym.Name
  name: Name
  nameWithType: Name
  fullName: com.fasterxml.jackson.core.sym.Name
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.core.sym.Name.equals(java.lang.Object)
  name: Name.equals(Object)
  nameWithType: Name.equals(Object)
  fullName: com.fasterxml.jackson.core.sym.Name.equals(java.lang.Object)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.sym.Name.toString()
  name: Name.toString()
  nameWithType: Name.toString()
  fullName: com.fasterxml.jackson.core.sym.Name.toString()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.sym.Name.equals(int,int)
  name: Name.equals(int,int)
  nameWithType: Name.equals(int,int)
  fullName: com.fasterxml.jackson.core.sym.Name.equals(int,int)
- uid: com.fasterxml.jackson.core.sym.Name.getName()
  name: Name.getName()
  nameWithType: Name.getName()
  fullName: com.fasterxml.jackson.core.sym.Name.getName()
- uid: com.fasterxml.jackson.core.sym.Name.equals(int[],int)
  name: Name.equals(int[],int)
  nameWithType: Name.equals(int[],int)
  fullName: com.fasterxml.jackson.core.sym.Name.equals(int[],int)
- uid: com.fasterxml.jackson.core.sym.Name.equals(int)
  name: Name.equals(int)
  nameWithType: Name.equals(int)
  fullName: com.fasterxml.jackson.core.sym.Name.equals(int)
- uid: com.fasterxml.jackson.core.sym.Name.equals(int,int,int)
  name: Name.equals(int,int,int)
  nameWithType: Name.equals(int,int,int)
  fullName: com.fasterxml.jackson.core.sym.Name.equals(int,int,int)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.sym.Name.hashCode()
  name: Name.hashCode()
  nameWithType: Name.hashCode()
  fullName: com.fasterxml.jackson.core.sym.Name.hashCode()
