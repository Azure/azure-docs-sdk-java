### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk*"
fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk"
name: "encodeBase64Chunk"
nameWithType: "Base64Variant.encodeBase64Chunk"
members:
- uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,byte[],int)"
  fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int b24, byte[] buffer, int outPtr)"
  name: "encodeBase64Chunk(int b24, byte[] buffer, int outPtr)"
  nameWithType: "Base64Variant.encodeBase64Chunk(int b24, byte[] buffer, int outPtr)"
  summary: "Method that encodes given right-aligned (LSB) 24-bit value into 4 base64 bytes (ascii), stored in given result buffer."
  parameters:
  - description: "3-byte value to encode"
    name: "b24"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Output buffer to append characters (as bytes) to"
    name: "buffer"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Starting position within <code>buffer</code> to append encoded characters"
    name: "outPtr"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int encodeBase64Chunk(int b24, byte[] buffer, int outPtr)"
  returns:
    description: "Pointer in output buffer after appending 4 encoded characters"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,char[],int)"
  fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int b24, char[] buffer, int outPtr)"
  name: "encodeBase64Chunk(int b24, char[] buffer, int outPtr)"
  nameWithType: "Base64Variant.encodeBase64Chunk(int b24, char[] buffer, int outPtr)"
  summary: "Method that encodes given right-aligned (LSB) 24-bit value into 4 base64 characters, stored in given result buffer. Caller must ensure there is sufficient space for 4 encoded characters at specified position."
  parameters:
  - description: "3-byte value to encode"
    name: "b24"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Output buffer to append characters to"
    name: "buffer"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Starting position within <code>buffer</code> to append encoded characters"
    name: "outPtr"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int encodeBase64Chunk(int b24, char[] buffer, int outPtr)"
  returns:
    description: "Pointer in output buffer after appending 4 encoded characters"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder,int)"
  fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(StringBuilder sb, int b24)"
  name: "encodeBase64Chunk(StringBuilder sb, int b24)"
  nameWithType: "Base64Variant.encodeBase64Chunk(StringBuilder sb, int b24)"
  parameters:
  - name: "sb"
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "b24"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void encodeBase64Chunk(StringBuilder sb, int b24)"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
