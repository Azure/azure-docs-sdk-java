### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.models.IndexBatchBase"
  id: "IndexBatchBase"
  parent: "com.azure.search.documents.models"
  children:
  - "com.azure.search.documents.models.IndexBatchBase.IndexBatchBase()"
  - "com.azure.search.documents.models.IndexBatchBase.getActions()"
  - "com.azure.search.documents.models.IndexBatchBase.setActions(java.util.List<com.azure.search.documents.models.IndexAction<T>>)"
  langs:
  - "java"
  name: "IndexBatchBase<T>"
  nameWithType: "IndexBatchBase<T>"
  fullName: "com.azure.search.documents.models.IndexBatchBase<T>"
  type: "Class"
  package: "com.azure.search.documents.models"
  summary: "Contains a batch of document write actions to send to the index."
  syntax:
    content: "public class IndexBatchBase<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.models.IndexBatchBase.IndexBatchBase()"
  id: "IndexBatchBase()"
  parent: "com.azure.search.documents.models.IndexBatchBase"
  langs:
  - "java"
  name: "IndexBatchBase()"
  nameWithType: "IndexBatchBase<T>.IndexBatchBase()"
  fullName: "com.azure.search.documents.models.IndexBatchBase<T>.IndexBatchBase()"
  overload: "com.azure.search.documents.models.IndexBatchBase.IndexBatchBase*"
  type: "Constructor"
  package: "com.azure.search.documents.models"
  syntax:
    content: "public IndexBatchBase()"
- uid: "com.azure.search.documents.models.IndexBatchBase.getActions()"
  id: "getActions()"
  parent: "com.azure.search.documents.models.IndexBatchBase"
  langs:
  - "java"
  name: "getActions()"
  nameWithType: "IndexBatchBase<T>.getActions()"
  fullName: "com.azure.search.documents.models.IndexBatchBase<T>.getActions()"
  overload: "com.azure.search.documents.models.IndexBatchBase.getActions*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the actions property: The actions in the batch."
  syntax:
    content: "public List<IndexAction<T>> getActions()"
    return:
      type: "java.util.List<com.azure.search.documents.models.IndexAction<T>>"
      description: "the actions value."
- uid: "com.azure.search.documents.models.IndexBatchBase.setActions(java.util.List<com.azure.search.documents.models.IndexAction<T>>)"
  id: "setActions(java.util.List<com.azure.search.documents.models.IndexAction<T>>)"
  parent: "com.azure.search.documents.models.IndexBatchBase"
  langs:
  - "java"
  name: "setActions(List<IndexAction<T>> actions)"
  nameWithType: "IndexBatchBase<T>.setActions(List<IndexAction<T>> actions)"
  fullName: "com.azure.search.documents.models.IndexBatchBase<T>.setActions(List<IndexAction<T>> actions)"
  overload: "com.azure.search.documents.models.IndexBatchBase.setActions*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the actions property: The actions in the batch."
  syntax:
    content: "protected IndexBatchBase<T> setActions(List<IndexAction<T>> actions)"
    parameters:
    - id: "actions"
      type: "java.util.List<com.azure.search.documents.models.IndexAction<T>>"
      description: "the actions value to set."
    return:
      type: "com.azure.search.documents.models.IndexBatchBase<T>"
      description: "the IndexBatchBase object itself."
references:
- uid: "com.azure.search.documents.models.IndexBatchBase.IndexBatchBase*"
  name: "IndexBatchBase"
  nameWithType: "IndexBatchBase<T>.IndexBatchBase"
  fullName: "com.azure.search.documents.models.IndexBatchBase<T>.IndexBatchBase"
  package: "com.azure.search.documents.models"
- uid: "java.util.List<com.azure.search.documents.models.IndexAction<T>>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.IndexAction"
    name: "IndexAction"
    fullName: "com.azure.search.documents.models.IndexAction"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.models.IndexBatchBase.getActions*"
  name: "getActions"
  nameWithType: "IndexBatchBase<T>.getActions"
  fullName: "com.azure.search.documents.models.IndexBatchBase<T>.getActions"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.IndexBatchBase<T>"
  spec.java:
  - uid: "com.azure.search.documents.models.IndexBatchBase"
    name: "IndexBatchBase"
    fullName: "com.azure.search.documents.models.IndexBatchBase"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.models.IndexBatchBase.setActions*"
  name: "setActions"
  nameWithType: "IndexBatchBase<T>.setActions"
  fullName: "com.azure.search.documents.models.IndexBatchBase<T>.setActions"
  package: "com.azure.search.documents.models"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.search.documents.models.IndexAction"
  name: "IndexAction"
  nameWithType: "IndexAction"
  fullName: "com.azure.search.documents.models.IndexAction"
