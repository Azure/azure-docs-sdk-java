### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.DocumentCollection"
  id: "DocumentCollection"
  parent: "com.azure.cosmos.implementation"
  children:
  - "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection()"
  - "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection(com.fasterxml.jackson.databind.node.ObjectNode)"
  - "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection(java.lang.String)"
  - "com.azure.cosmos.implementation.DocumentCollection.equals(java.lang.Object)"
  - "com.azure.cosmos.implementation.DocumentCollection.getConflictResolutionPolicy()"
  - "com.azure.cosmos.implementation.DocumentCollection.getConflictsLink()"
  - "com.azure.cosmos.implementation.DocumentCollection.getDefaultTimeToLive()"
  - "com.azure.cosmos.implementation.DocumentCollection.getDocumentsLink()"
  - "com.azure.cosmos.implementation.DocumentCollection.getIndexingPolicy()"
  - "com.azure.cosmos.implementation.DocumentCollection.getPartitionKey()"
  - "com.azure.cosmos.implementation.DocumentCollection.getStoredProceduresLink()"
  - "com.azure.cosmos.implementation.DocumentCollection.getTriggersLink()"
  - "com.azure.cosmos.implementation.DocumentCollection.getUniqueKeyPolicy()"
  - "com.azure.cosmos.implementation.DocumentCollection.getUserDefinedFunctionsLink()"
  - "com.azure.cosmos.implementation.DocumentCollection.hashCode()"
  - "com.azure.cosmos.implementation.DocumentCollection.populatePropertyBag()"
  - "com.azure.cosmos.implementation.DocumentCollection.setConflictResolutionPolicy(com.azure.cosmos.models.ConflictResolutionPolicy)"
  - "com.azure.cosmos.implementation.DocumentCollection.setDefaultTimeToLive(java.lang.Integer)"
  - "com.azure.cosmos.implementation.DocumentCollection.setId(java.lang.String)"
  - "com.azure.cosmos.implementation.DocumentCollection.setIndexingPolicy(com.azure.cosmos.models.IndexingPolicy)"
  - "com.azure.cosmos.implementation.DocumentCollection.setPartitionKey(com.azure.cosmos.models.PartitionKeyDefinition)"
  - "com.azure.cosmos.implementation.DocumentCollection.setUniqueKeyPolicy(com.azure.cosmos.models.UniqueKeyPolicy)"
  - "com.azure.cosmos.implementation.DocumentCollection.toJson()"
  langs:
  - "java"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection"
  fullName: "com.azure.cosmos.implementation.DocumentCollection"
  type: "Class"
  package: "com.azure.cosmos.implementation"
  summary: "Represents a document collection in the Azure Cosmos DB database service. A collection is a named logical container for documents.\n\nA database may contain zero or more named collections and each collection consists of zero or more JSON documents. Being schema-free, the documents in a collection do not need to share the same structure or fields. Since collections are application resources, they can be authorized using either the master key or resource keys."
  syntax:
    content: "public final class DocumentCollection extends Resource"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.models.JsonSerializable"
  - "com.azure.cosmos.models.Resource"
  inheritedMembers:
  - "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getLogger()"
  - "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getMap()"
  - "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  - "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.models.JsonSerializable.toJson()"
  - "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  - "com.azure.cosmos.models.JsonSerializable.toString()"
  - "com.azure.cosmos.models.Resource.getAltLink()"
  - "com.azure.cosmos.models.Resource.getETag()"
  - "com.azure.cosmos.models.Resource.getId()"
  - "com.azure.cosmos.models.Resource.getResourceId()"
  - "com.azure.cosmos.models.Resource.getSelfLink()"
  - "com.azure.cosmos.models.Resource.getTimestamp()"
  - "com.azure.cosmos.models.Resource.setAltLink(java.lang.String)"
  - "com.azure.cosmos.models.Resource.setETag(java.lang.String)"
  - "com.azure.cosmos.models.Resource.setId(java.lang.String)"
  - "com.azure.cosmos.models.Resource.setResourceId(java.lang.String)"
  - "com.azure.cosmos.models.Resource.setSelfLink(java.lang.String)"
  - "com.azure.cosmos.models.Resource.setTimestamp(java.time.OffsetDateTime)"
  - "com.azure.cosmos.models.Resource.validateResource(com.azure.cosmos.models.Resource)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection()"
  id: "DocumentCollection()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "DocumentCollection()"
  nameWithType: "DocumentCollection.DocumentCollection()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  summary: "Initialize a document collection object."
  syntax:
    content: "public DocumentCollection()"
- uid: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection(com.fasterxml.jackson.databind.node.ObjectNode)"
  id: "DocumentCollection(com.fasterxml.jackson.databind.node.ObjectNode)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "DocumentCollection(ObjectNode objectNode)"
  nameWithType: "DocumentCollection.DocumentCollection(ObjectNode objectNode)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection(ObjectNode objectNode)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  summary: "Constructor."
  syntax:
    content: "public DocumentCollection(ObjectNode objectNode)"
    parameters:
    - id: "objectNode"
      type: "com.fasterxml.jackson.databind.node.ObjectNode"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ObjectNode</xref> that represent the\n <xref uid=\"com.azure.cosmos.models.JsonSerializable\" data-throw-if-not-resolved=\"false\">JsonSerializable</xref>"
- uid: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection(java.lang.String)"
  id: "DocumentCollection(java.lang.String)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "DocumentCollection(String jsonString)"
  nameWithType: "DocumentCollection.DocumentCollection(String jsonString)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection(String jsonString)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation"
  summary: "Initialize a document collection object from json string."
  syntax:
    content: "public DocumentCollection(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the document collection."
- uid: "com.azure.cosmos.implementation.DocumentCollection.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "DocumentCollection.equals(Object obj)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.equals(Object obj)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.equals*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getConflictResolutionPolicy()"
  id: "getConflictResolutionPolicy()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getConflictResolutionPolicy()"
  nameWithType: "DocumentCollection.getConflictResolutionPolicy()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getConflictResolutionPolicy()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getConflictResolutionPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the conflictResolutionPolicy that is used for resolving conflicting writes on documents in different regions, in a collection in the Azure Cosmos DB service."
  syntax:
    content: "public ConflictResolutionPolicy getConflictResolutionPolicy()"
    return:
      type: "com.azure.cosmos.models.ConflictResolutionPolicy"
      description: "ConflictResolutionPolicy"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getConflictsLink()"
  id: "getConflictsLink()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getConflictsLink()"
  nameWithType: "DocumentCollection.getConflictsLink()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getConflictsLink()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getConflictsLink*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the self-link for conflicts in a collection."
  syntax:
    content: "public String getConflictsLink()"
    return:
      type: "java.lang.String"
      description: "the conflicts link."
- uid: "com.azure.cosmos.implementation.DocumentCollection.getDefaultTimeToLive()"
  id: "getDefaultTimeToLive()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getDefaultTimeToLive()"
  nameWithType: "DocumentCollection.getDefaultTimeToLive()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getDefaultTimeToLive()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getDefaultTimeToLive*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the collection's default time-to-live value."
  syntax:
    content: "public Integer getDefaultTimeToLive()"
    return:
      type: "java.lang.Integer"
      description: "the default time-to-live value in seconds."
- uid: "com.azure.cosmos.implementation.DocumentCollection.getDocumentsLink()"
  id: "getDocumentsLink()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getDocumentsLink()"
  nameWithType: "DocumentCollection.getDocumentsLink()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getDocumentsLink()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getDocumentsLink*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the self-link for documents in a collection."
  syntax:
    content: "public String getDocumentsLink()"
    return:
      type: "java.lang.String"
      description: "the document link."
- uid: "com.azure.cosmos.implementation.DocumentCollection.getIndexingPolicy()"
  id: "getIndexingPolicy()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getIndexingPolicy()"
  nameWithType: "DocumentCollection.getIndexingPolicy()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getIndexingPolicy()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getIndexingPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the indexing policy."
  syntax:
    content: "public IndexingPolicy getIndexingPolicy()"
    return:
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the indexing policy."
- uid: "com.azure.cosmos.implementation.DocumentCollection.getPartitionKey()"
  id: "getPartitionKey()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getPartitionKey()"
  nameWithType: "DocumentCollection.getPartitionKey()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getPartitionKey()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getPartitionKey*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the collection's partition key definition."
  syntax:
    content: "public PartitionKeyDefinition getPartitionKey()"
    return:
      type: "com.azure.cosmos.models.PartitionKeyDefinition"
      description: "the partition key definition."
- uid: "com.azure.cosmos.implementation.DocumentCollection.getStoredProceduresLink()"
  id: "getStoredProceduresLink()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getStoredProceduresLink()"
  nameWithType: "DocumentCollection.getStoredProceduresLink()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getStoredProceduresLink()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getStoredProceduresLink*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the self-link for stored procedures in a collection."
  syntax:
    content: "public String getStoredProceduresLink()"
    return:
      type: "java.lang.String"
      description: "the stored procedures link."
- uid: "com.azure.cosmos.implementation.DocumentCollection.getTriggersLink()"
  id: "getTriggersLink()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getTriggersLink()"
  nameWithType: "DocumentCollection.getTriggersLink()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getTriggersLink()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getTriggersLink*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the self-link for triggers in a collection."
  syntax:
    content: "public String getTriggersLink()"
    return:
      type: "java.lang.String"
      description: "the trigger link."
- uid: "com.azure.cosmos.implementation.DocumentCollection.getUniqueKeyPolicy()"
  id: "getUniqueKeyPolicy()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getUniqueKeyPolicy()"
  nameWithType: "DocumentCollection.getUniqueKeyPolicy()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getUniqueKeyPolicy()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getUniqueKeyPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the Uni that guarantees uniqueness of documents in collection in the Azure Cosmos DB service."
  syntax:
    content: "public UniqueKeyPolicy getUniqueKeyPolicy()"
    return:
      type: "com.azure.cosmos.models.UniqueKeyPolicy"
      description: "UniqueKeyPolicy"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getUserDefinedFunctionsLink()"
  id: "getUserDefinedFunctionsLink()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "getUserDefinedFunctionsLink()"
  nameWithType: "DocumentCollection.getUserDefinedFunctionsLink()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getUserDefinedFunctionsLink()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.getUserDefinedFunctionsLink*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Gets the self-link for user defined functions in a collection."
  syntax:
    content: "public String getUserDefinedFunctionsLink()"
    return:
      type: "java.lang.String"
      description: "the user defined functions link."
- uid: "com.azure.cosmos.implementation.DocumentCollection.hashCode()"
  id: "hashCode()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "DocumentCollection.hashCode()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.hashCode()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.hashCode*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.azure.cosmos.implementation.DocumentCollection.populatePropertyBag()"
  id: "populatePropertyBag()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "populatePropertyBag()"
  nameWithType: "DocumentCollection.populatePropertyBag()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.populatePropertyBag()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.populatePropertyBag*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "protected void populatePropertyBag()"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setConflictResolutionPolicy(com.azure.cosmos.models.ConflictResolutionPolicy)"
  id: "setConflictResolutionPolicy(com.azure.cosmos.models.ConflictResolutionPolicy)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "setConflictResolutionPolicy(ConflictResolutionPolicy value)"
  nameWithType: "DocumentCollection.setConflictResolutionPolicy(ConflictResolutionPolicy value)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setConflictResolutionPolicy(ConflictResolutionPolicy value)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.setConflictResolutionPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the conflictResolutionPolicy that is used for resolving conflicting writes on documents in different regions, in a collection in the Azure Cosmos DB service."
  syntax:
    content: "public void setConflictResolutionPolicy(ConflictResolutionPolicy value)"
    parameters:
    - id: "value"
      type: "com.azure.cosmos.models.ConflictResolutionPolicy"
      description: "ConflictResolutionPolicy to be used."
- uid: "com.azure.cosmos.implementation.DocumentCollection.setDefaultTimeToLive(java.lang.Integer)"
  id: "setDefaultTimeToLive(java.lang.Integer)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "setDefaultTimeToLive(Integer timeToLive)"
  nameWithType: "DocumentCollection.setDefaultTimeToLive(Integer timeToLive)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setDefaultTimeToLive(Integer timeToLive)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.setDefaultTimeToLive*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the collection's default time-to-live value.\n\nThe default time-to-live value on a collection is an optional property. If set, the documents within the collection expires after the specified number of seconds since their last write time. The value of this property should be one of the following:\n\nnull - indicates evaluation of time-to-live is disabled and documents within the collection will never expire, regardless whether individual documents have their time-to-live set.\n\nnonzero positive integer - indicates the default time-to-live value for all documents within the collection. This value can be overridden by individual documents' time-to-live value.\n\n\\-1 - indicates by default all documents within the collection never expire. This value can be overridden by individual documents' time-to-live value."
  syntax:
    content: "public void setDefaultTimeToLive(Integer timeToLive)"
    parameters:
    - id: "timeToLive"
      type: "java.lang.Integer"
      description: "the default time-to-live value in seconds."
- uid: "com.azure.cosmos.implementation.DocumentCollection.setId(java.lang.String)"
  id: "setId(java.lang.String)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "setId(String id)"
  nameWithType: "DocumentCollection.setId(String id)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setId(String id)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.setId*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the id and returns the document collection"
  syntax:
    content: "public DocumentCollection setId(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the name of the resource."
    return:
      type: "com.azure.cosmos.implementation.DocumentCollection"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setIndexingPolicy(com.azure.cosmos.models.IndexingPolicy)"
  id: "setIndexingPolicy(com.azure.cosmos.models.IndexingPolicy)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "setIndexingPolicy(IndexingPolicy indexingPolicy)"
  nameWithType: "DocumentCollection.setIndexingPolicy(IndexingPolicy indexingPolicy)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setIndexingPolicy(IndexingPolicy indexingPolicy)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.setIndexingPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the indexing policy."
  syntax:
    content: "public void setIndexingPolicy(IndexingPolicy indexingPolicy)"
    parameters:
    - id: "indexingPolicy"
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the indexing policy."
- uid: "com.azure.cosmos.implementation.DocumentCollection.setPartitionKey(com.azure.cosmos.models.PartitionKeyDefinition)"
  id: "setPartitionKey(com.azure.cosmos.models.PartitionKeyDefinition)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "setPartitionKey(PartitionKeyDefinition partitionKey)"
  nameWithType: "DocumentCollection.setPartitionKey(PartitionKeyDefinition partitionKey)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setPartitionKey(PartitionKeyDefinition partitionKey)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.setPartitionKey*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  summary: "Sets the collection's partition key definition."
  syntax:
    content: "public void setPartitionKey(PartitionKeyDefinition partitionKey)"
    parameters:
    - id: "partitionKey"
      type: "com.azure.cosmos.models.PartitionKeyDefinition"
      description: "the partition key definition."
- uid: "com.azure.cosmos.implementation.DocumentCollection.setUniqueKeyPolicy(com.azure.cosmos.models.UniqueKeyPolicy)"
  id: "setUniqueKeyPolicy(com.azure.cosmos.models.UniqueKeyPolicy)"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
  nameWithType: "DocumentCollection.setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
  overload: "com.azure.cosmos.implementation.DocumentCollection.setUniqueKeyPolicy*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public void setUniqueKeyPolicy(UniqueKeyPolicy uniqueKeyPolicy)"
    parameters:
    - id: "uniqueKeyPolicy"
      type: "com.azure.cosmos.models.UniqueKeyPolicy"
- uid: "com.azure.cosmos.implementation.DocumentCollection.toJson()"
  id: "toJson()"
  parent: "com.azure.cosmos.implementation.DocumentCollection"
  langs:
  - "java"
  name: "toJson()"
  nameWithType: "DocumentCollection.toJson()"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.toJson()"
  overload: "com.azure.cosmos.implementation.DocumentCollection.toJson*"
  type: "Method"
  package: "com.azure.cosmos.implementation"
  syntax:
    content: "public String toJson()"
    return:
      type: "java.lang.String"
references:
- uid: "com.fasterxml.jackson.databind.node.ObjectNode"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.node.ObjectNode"
    name: "ObjectNode"
    fullName: "com.fasterxml.jackson.databind.node.ObjectNode"
- uid: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection*"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection.DocumentCollection"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.DocumentCollection"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setId*"
  name: "setId"
  nameWithType: "DocumentCollection.setId"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setId"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.models.IndexingPolicy"
  name: "IndexingPolicy"
  nameWithType: "IndexingPolicy"
  fullName: "com.azure.cosmos.models.IndexingPolicy"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getIndexingPolicy*"
  name: "getIndexingPolicy"
  nameWithType: "DocumentCollection.getIndexingPolicy"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getIndexingPolicy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setIndexingPolicy*"
  name: "setIndexingPolicy"
  nameWithType: "DocumentCollection.setIndexingPolicy"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setIndexingPolicy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition"
  name: "PartitionKeyDefinition"
  nameWithType: "PartitionKeyDefinition"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getPartitionKey*"
  name: "getPartitionKey"
  nameWithType: "DocumentCollection.getPartitionKey"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getPartitionKey"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setPartitionKey*"
  name: "setPartitionKey"
  nameWithType: "DocumentCollection.setPartitionKey"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setPartitionKey"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getDefaultTimeToLive*"
  name: "getDefaultTimeToLive"
  nameWithType: "DocumentCollection.getDefaultTimeToLive"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getDefaultTimeToLive"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setDefaultTimeToLive*"
  name: "setDefaultTimeToLive"
  nameWithType: "DocumentCollection.setDefaultTimeToLive"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setDefaultTimeToLive"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.models.UniqueKeyPolicy"
  name: "UniqueKeyPolicy"
  nameWithType: "UniqueKeyPolicy"
  fullName: "com.azure.cosmos.models.UniqueKeyPolicy"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getUniqueKeyPolicy*"
  name: "getUniqueKeyPolicy"
  nameWithType: "DocumentCollection.getUniqueKeyPolicy"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getUniqueKeyPolicy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setUniqueKeyPolicy*"
  name: "setUniqueKeyPolicy"
  nameWithType: "DocumentCollection.setUniqueKeyPolicy"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setUniqueKeyPolicy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.models.ConflictResolutionPolicy"
  name: "ConflictResolutionPolicy"
  nameWithType: "ConflictResolutionPolicy"
  fullName: "com.azure.cosmos.models.ConflictResolutionPolicy"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getConflictResolutionPolicy*"
  name: "getConflictResolutionPolicy"
  nameWithType: "DocumentCollection.getConflictResolutionPolicy"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getConflictResolutionPolicy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.setConflictResolutionPolicy*"
  name: "setConflictResolutionPolicy"
  nameWithType: "DocumentCollection.setConflictResolutionPolicy"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.setConflictResolutionPolicy"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getDocumentsLink*"
  name: "getDocumentsLink"
  nameWithType: "DocumentCollection.getDocumentsLink"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getDocumentsLink"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getStoredProceduresLink*"
  name: "getStoredProceduresLink"
  nameWithType: "DocumentCollection.getStoredProceduresLink"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getStoredProceduresLink"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getTriggersLink*"
  name: "getTriggersLink"
  nameWithType: "DocumentCollection.getTriggersLink"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getTriggersLink"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getUserDefinedFunctionsLink*"
  name: "getUserDefinedFunctionsLink"
  nameWithType: "DocumentCollection.getUserDefinedFunctionsLink"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getUserDefinedFunctionsLink"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.getConflictsLink*"
  name: "getConflictsLink"
  nameWithType: "DocumentCollection.getConflictsLink"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.getConflictsLink"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.populatePropertyBag*"
  name: "populatePropertyBag"
  nameWithType: "DocumentCollection.populatePropertyBag"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.populatePropertyBag"
  package: "com.azure.cosmos.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.implementation.DocumentCollection.equals*"
  name: "equals"
  nameWithType: "DocumentCollection.equals"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.equals"
  package: "com.azure.cosmos.implementation"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.implementation.DocumentCollection.hashCode*"
  name: "hashCode"
  nameWithType: "DocumentCollection.hashCode"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.hashCode"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.implementation.DocumentCollection.toJson*"
  name: "toJson"
  nameWithType: "DocumentCollection.toJson"
  fullName: "com.azure.cosmos.implementation.DocumentCollection.toJson"
  package: "com.azure.cosmos.implementation"
- uid: "com.azure.cosmos.models.Resource"
  name: "Resource"
  nameWithType: "Resource"
  fullName: "com.azure.cosmos.models.Resource"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.models.Resource.setETag(java.lang.String)"
  name: "Resource.setETag(String)"
  nameWithType: "Resource.setETag(String)"
  fullName: "com.azure.cosmos.models.Resource.setETag(java.lang.String)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.models.Resource.validateResource(com.azure.cosmos.models.Resource)"
  name: "Resource.validateResource(Resource)"
  nameWithType: "Resource.validateResource(Resource)"
  fullName: "com.azure.cosmos.models.Resource.validateResource(com.azure.cosmos.models.Resource)"
- uid: "com.azure.cosmos.models.Resource.getId()"
  name: "Resource.getId()"
  nameWithType: "Resource.getId()"
  fullName: "com.azure.cosmos.models.Resource.getId()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  name: "JsonSerializable.serializeJsonToByteBuffer()"
  nameWithType: "JsonSerializable.serializeJsonToByteBuffer()"
  fullName: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
- uid: "com.azure.cosmos.models.Resource.setId(java.lang.String)"
  name: "Resource.setId(String)"
  nameWithType: "Resource.setId(String)"
  fullName: "com.azure.cosmos.models.Resource.setId(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  name: "JsonSerializable.getPropertyBag()"
  nameWithType: "JsonSerializable.getPropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
- uid: "com.azure.cosmos.models.Resource.setTimestamp(java.time.OffsetDateTime)"
  name: "Resource.setTimestamp(OffsetDateTime)"
  nameWithType: "Resource.setTimestamp(OffsetDateTime)"
  fullName: "com.azure.cosmos.models.Resource.setTimestamp(java.time.OffsetDateTime)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getMap()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.models.Resource.setAltLink(java.lang.String)"
  name: "Resource.setAltLink(String)"
  nameWithType: "Resource.setAltLink(String)"
  fullName: "com.azure.cosmos.models.Resource.setAltLink(java.lang.String)"
- uid: "com.azure.cosmos.models.Resource.getAltLink()"
  name: "Resource.getAltLink()"
  nameWithType: "Resource.getAltLink()"
  fullName: "com.azure.cosmos.models.Resource.getAltLink()"
- uid: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.models.Resource.setSelfLink(java.lang.String)"
  name: "Resource.setSelfLink(String)"
  nameWithType: "Resource.setSelfLink(String)"
  fullName: "com.azure.cosmos.models.Resource.setSelfLink(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.Resource.getETag()"
  name: "Resource.getETag()"
  nameWithType: "Resource.getETag()"
  fullName: "com.azure.cosmos.models.Resource.getETag()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
- uid: "com.azure.cosmos.models.Resource.getTimestamp()"
  name: "Resource.getTimestamp()"
  nameWithType: "Resource.getTimestamp()"
  fullName: "com.azure.cosmos.models.Resource.getTimestamp()"
- uid: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.models.Resource.getResourceId()"
  name: "Resource.getResourceId()"
  nameWithType: "Resource.getResourceId()"
  fullName: "com.azure.cosmos.models.Resource.getResourceId()"
- uid: "com.azure.cosmos.models.Resource.setResourceId(java.lang.String)"
  name: "Resource.setResourceId(String)"
  nameWithType: "Resource.setResourceId(String)"
  fullName: "com.azure.cosmos.models.Resource.setResourceId(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson()"
- uid: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
- uid: "com.azure.cosmos.models.Resource.getSelfLink()"
  name: "Resource.getSelfLink()"
  nameWithType: "Resource.getSelfLink()"
  fullName: "com.azure.cosmos.models.Resource.getSelfLink()"
- uid: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toString()"
- uid: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.models.JsonSerializable."
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
