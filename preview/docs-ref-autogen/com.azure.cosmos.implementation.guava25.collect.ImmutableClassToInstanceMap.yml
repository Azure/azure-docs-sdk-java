### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  id: ImmutableClassToInstanceMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B,S>copyOf(java.util.Map<? extends java.lang.Class<? extends S>,? extends S>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B,T>of(java.lang.Class<T>,T)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B>builder()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B>of()
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<T>getInstance(java.lang.Class<T>)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<T>putInstance(java.lang.Class<T>,T)
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder
  - com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.delegate()
  langs:
  - java
  name: ImmutableClassToInstanceMap<B>
  nameWithType: ImmutableClassToInstanceMap<B>
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A <xref uid="com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap" data-throw-if-not-resolved="false">ClassToInstanceMap</xref> whose contents will never change, with many other important properties detailed at <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableCollection" data-throw-if-not-resolved="false">ImmutableCollection</xref>.
  syntax:
    content: public final class ImmutableClassToInstanceMap<B> extends ForwardingMap<Class<? extends B>,B> implements ClassToInstanceMap<B>, Serializable
    typeParameters:
    - id: B
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  implements:
  - com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>
  - java.io.Serializable
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B,S>copyOf(java.util.Map<? extends java.lang.Class<? extends S>,? extends S>)
  id: <B,S>copyOf(java.util.Map<? extends java.lang.Class<? extends S>,? extends S>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: <B,S>copyOf(Map<? extends Class<? extends S>,? extends S> map)
  nameWithType: ImmutableClassToInstanceMap<B>.<B,S>copyOf(Map<? extends Class<? extends S>,? extends S> map)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<B,S>copyOf(Map<? extends Class<? extends S>,? extends S> map)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.copyOf*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns an immutable map containing the same entries as `map`. If `map` somehow contains entries with duplicate keys (for example, if it is a `SortedMap` whose comparator is not *consistent with equals*), the results of this method are undefined.


    **Note:** Despite what the method name suggests, if `map` is an `ImmutableClassToInstanceMap`, no copy will actually be performed.
  syntax:
    content: public static ImmutableClassToInstanceMap<B> <B,S>copyOf(Map<? extends Class<? extends S>,? extends S> map)
    parameters:
    - id: map
      type: java.util.Map<? extends java.lang.Class<? extends S>,? extends S>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B,T>of(java.lang.Class<T>,T)
  id: <B,T>of(java.lang.Class<T>,T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: <B,T>of(Class<T> type, T value)
  nameWithType: ImmutableClassToInstanceMap<B>.<B,T>of(Class<T> type, T value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<B,T>of(Class<T> type, T value)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.of*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an `ImmutableClassToInstanceMap` containing a single entry.
  syntax:
    content: public static ImmutableClassToInstanceMap<B> <B,T>of(Class<T> type, T value)
    parameters:
    - id: type
      type: java.lang.Class<T>
    - id: value
      type: T
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B>builder()
  id: <B>builder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: <B>builder()
  nameWithType: ImmutableClassToInstanceMap<B>.<B>builder()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<B>builder()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.builder*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new builder. The generated builder is equivalent to the builder created by the <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder" data-throw-if-not-resolved="false">Builder</xref> constructor.
  syntax:
    content: public static ImmutableClassToInstanceMap.Builder<B> <B>builder()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder<B>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<B>of()
  id: <B>of()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: <B>of()
  nameWithType: ImmutableClassToInstanceMap<B>.<B>of()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<B>of()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.of*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an empty `ImmutableClassToInstanceMap`.
  syntax:
    content: public static ImmutableClassToInstanceMap<B> <B>of()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<T>getInstance(java.lang.Class<T>)
  id: <T>getInstance(java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: <T>getInstance(Class<T> type)
  nameWithType: ImmutableClassToInstanceMap<B>.<T>getInstance(Class<T> type)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<T>getInstance(Class<T> type)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.getInstance*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the value the specified class is mapped to, or `null` if no entry for this class is present. This will only return a value that was bound to this specific class, not a value that may have been bound to a subtype.
  syntax:
    content: public T <T>getInstance(Class<T> type)
    parameters:
    - id: type
      type: java.lang.Class<T>
    return:
      type: T
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.<T>putInstance(java.lang.Class<T>,T)
  id: <T>putInstance(java.lang.Class<T>,T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: <T>putInstance(Class<T> type, T value)
  nameWithType: ImmutableClassToInstanceMap<B>.<T>putInstance(Class<T> type, T value)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<T>putInstance(Class<T> type, T value)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.putInstance*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Guaranteed to throw an exception and leave the map unmodified.
  syntax:
    content: public T <T>putInstance(Class<T> type, T value)
    parameters:
    - id: type
      type: java.lang.Class<T>
    - id: value
      type: T
    return:
      type: T
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.ImmutableClassToInstanceMap(com.azure.cosmos.implementation.guava25.collect.ImmutableMap<java.lang.Class<? extends B>,B>)
  id: ImmutableClassToInstanceMap(com.azure.cosmos.implementation.guava25.collect.ImmutableMap<java.lang.Class<? extends B>,B>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: ImmutableClassToInstanceMap(ImmutableMap<Class<? extends B>,B> delegate)
  nameWithType: ImmutableClassToInstanceMap<B>.ImmutableClassToInstanceMap(ImmutableMap<Class<? extends B>,B> delegate)
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.ImmutableClassToInstanceMap(ImmutableMap<Class<? extends B>,B> delegate)
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.ImmutableClassToInstanceMap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private ImmutableClassToInstanceMap(ImmutableMap<Class<? extends B>,B> delegate)
    parameters:
    - id: delegate
      type: com.azure.cosmos.implementation.guava25.collect.ImmutableMap<java.lang.Class<? extends B>,B>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  langs:
  - java
  name: delegate()
  nameWithType: ImmutableClassToInstanceMap<B>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected Map<Class<? extends B>,B> delegate()
    return:
      type: java.util.Map<java.lang.Class<? extends B>,B>
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMap<java.lang.Class<? extends B>,B>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
    name: ImmutableMap
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends B'
    name: '? extends B'
    fullName: '? extends B'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: B
    name: B
    fullName: B
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.ImmutableClassToInstanceMap*
  name: ImmutableClassToInstanceMap
  nameWithType: ImmutableClassToInstanceMap<B>.ImmutableClassToInstanceMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.ImmutableClassToInstanceMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
    name: ImmutableClassToInstanceMap
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap
  - name: <
    fullName: <
  - uid: B
    name: B
    fullName: B
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.of*
  name: <B>of
  nameWithType: ImmutableClassToInstanceMap<B>.<B>of
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<B>of
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder<B>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder
    name: Builder
    fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder
  - name: <
    fullName: <
  - uid: B
    name: B
    fullName: B
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.builder*
  name: <B>builder
  nameWithType: ImmutableClassToInstanceMap<B>.<B>builder
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<B>builder
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<? extends java.lang.Class<? extends S>,? extends S>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '? extends java.lang.Class'
    name: Class
    fullName: '? extends java.lang.Class'
  - name: <
    fullName: <
  - uid: '? extends S'
    name: '? extends S'
    fullName: '? extends S'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: '? extends S'
    name: '? extends S'
    fullName: '? extends S'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.copyOf*
  name: <B,S>copyOf
  nameWithType: ImmutableClassToInstanceMap<B>.<B,S>copyOf
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<B,S>copyOf
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<java.lang.Class<? extends B>,B>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends B'
    name: '? extends B'
    fullName: '? extends B'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: B
    name: B
    fullName: B
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.delegate*
  name: delegate
  nameWithType: ImmutableClassToInstanceMap<B>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.getInstance*
  name: <T>getInstance
  nameWithType: ImmutableClassToInstanceMap<B>.<T>getInstance
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<T>getInstance
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.putInstance*
  name: <T>putInstance
  nameWithType: ImmutableClassToInstanceMap<B>.<T>putInstance
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap<B>.<T>putInstance
  package: com.azure.cosmos.implementation.guava25.collect
- uid: B
  name: B
  nameWithType: B
  fullName: B
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<java.lang.Class<? extends B>,B>
  name: ForwardingMap<Class<? extends B>,B>
  nameWithType: ForwardingMap<Class<? extends B>,B>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<java.lang.Class<? extends B>,B>
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>
  name: ClassToInstanceMap<B>
  nameWithType: ClassToInstanceMap<B>
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  name: ForwardingMap.equals(Object)
  nameWithType: ForwardingMap.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
  name: ForwardingMap.keySet()
  nameWithType: ForwardingMap.keySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
  name: ForwardingMap.entrySet()
  nameWithType: ForwardingMap.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  name: ForwardingMap.standardHashCode()
  nameWithType: ForwardingMap.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  name: ForwardingMap.standardContainsValue(Object)
  nameWithType: ForwardingMap.standardContainsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
  name: ForwardingMap.containsValue(Object)
  nameWithType: ForwardingMap.containsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
  name: ForwardingMap.remove(Object)
  nameWithType: ForwardingMap.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
  name: ForwardingMap.clear()
  nameWithType: ForwardingMap.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  name: ForwardingMap.standardClear()
  nameWithType: ForwardingMap.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  name: ForwardingMap.size()
  nameWithType: ForwardingMap.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  name: ForwardingMap.hashCode()
  nameWithType: ForwardingMap.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  name: ForwardingMap.standardContainsKey(Object)
  nameWithType: ForwardingMap.standardContainsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  name: ForwardingMap.standardToString()
  nameWithType: ForwardingMap.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  name: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  nameWithType: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
  name: ForwardingMap.putAll(Map<? extends K,? extends V>)
  nameWithType: ForwardingMap.putAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
  name: ForwardingMap.values()
  nameWithType: ForwardingMap.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  name: ForwardingMap.get(Object)
  nameWithType: ForwardingMap.get(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
  name: ForwardingMap.put(K,V)
  nameWithType: ForwardingMap.put(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  name: ForwardingMap.standardRemove(Object)
  nameWithType: ForwardingMap.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  name: ForwardingMap.standardIsEmpty()
  nameWithType: ForwardingMap.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
  name: ForwardingMap.delegate()
  nameWithType: ForwardingMap.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  name: ForwardingMap.isEmpty()
  nameWithType: ForwardingMap.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  name: ForwardingMap.standardEquals(Object)
  nameWithType: ForwardingMap.standardEquals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  name: ForwardingMap.containsKey(Object)
  nameWithType: ForwardingMap.containsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder
  name: ImmutableClassToInstanceMap.Builder<B>
  nameWithType: ImmutableClassToInstanceMap.Builder<B>
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap.Builder<B>
- uid: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
  name: ImmutableMap
  nameWithType: ImmutableMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ImmutableMap
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '? extends B>,B'
  name: '? extends B>,B'
  nameWithType: '? extends B>,B'
  fullName: '? extends B>,B'
- uid: '? extends java.lang.Class'
  name: '? extends Class'
  nameWithType: '? extends Class'
  fullName: '? extends java.lang.Class'
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: '? extends S>,? extends S'
  name: '? extends S>,? extends S'
  nameWithType: '? extends S>,? extends S'
  fullName: '? extends S>,? extends S'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  name: ForwardingMap
  nameWithType: ForwardingMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap
  name: ClassToInstanceMap
  nameWithType: ClassToInstanceMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
  name: ForwardingMap.standardPutAll(Map
  nameWithType: ForwardingMap.standardPutAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map
  name: ForwardingMap.putAll(Map
  nameWithType: ForwardingMap.putAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map
