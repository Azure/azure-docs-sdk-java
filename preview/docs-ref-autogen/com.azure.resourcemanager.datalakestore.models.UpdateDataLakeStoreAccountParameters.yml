### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters"
fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters"
name: "UpdateDataLakeStoreAccountParameters"
nameWithType: "UpdateDataLakeStoreAccountParameters"
summary: "Data Lake Store account information to update."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class UpdateDataLakeStoreAccountParameters"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.UpdateDataLakeStoreAccountParameters()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.UpdateDataLakeStoreAccountParameters()"
  name: "UpdateDataLakeStoreAccountParameters()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.UpdateDataLakeStoreAccountParameters()"
  syntax: "public UpdateDataLakeStoreAccountParameters()"
methods:
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.defaultGroup()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.defaultGroup()"
  name: "defaultGroup()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.defaultGroup()"
  summary: "Get the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  syntax: "public String defaultGroup()"
  desc: "Get the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the defaultGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.encryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.encryptionConfig()"
  name: "encryptionConfig()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.encryptionConfig()"
  summary: "Get the encryption<wbr>Config property: Used for rotation of user managed Key Vault keys."
  syntax: "public UpdateEncryptionConfig encryptionConfig()"
  desc: "Get the encryptionConfig property: Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key."
  returns:
    description: "the encryptionConfig value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.firewallAllowAzureIps()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.firewallAllowAzureIps()"
  name: "firewallAllowAzureIps()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.firewallAllowAzureIps()"
  summary: "Get the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  syntax: "public FirewallAllowAzureIpsState firewallAllowAzureIps()"
  desc: "Get the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the firewallAllowAzureIps value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.firewallRules()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.firewallRules()"
  name: "firewallRules()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.firewallRules()"
  summary: "Get the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  syntax: "public List<UpdateFirewallRuleWithAccountParameters> firewallRules()"
  desc: "Get the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the firewallRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters&text=UpdateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.firewallState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.firewallState()"
  name: "firewallState()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.firewallState()"
  summary: "Get the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  syntax: "public FirewallState firewallState()"
  desc: "Get the firewallState property: The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled."
  returns:
    description: "the firewallState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.newTier()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.newTier()"
  name: "newTier()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.newTier()"
  summary: "Get the new<wbr>Tier property: The commitment tier to use for next month."
  syntax: "public TierType newTier()"
  desc: "Get the newTier property: The commitment tier to use for next month."
  returns:
    description: "the newTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.tags()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.tags()"
  name: "tags()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.tags()"
  summary: "Get the tags property: Resource tags."
  syntax: "public Map<String,String> tags()"
  desc: "Get the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.trustedIdProviderState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.trustedIdProviderState()"
  name: "trustedIdProviderState()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.trustedIdProviderState()"
  summary: "Get the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  syntax: "public TrustedIdProviderState trustedIdProviderState()"
  desc: "Get the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled."
  returns:
    description: "the trustedIdProviderState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.trustedIdProviders()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.trustedIdProviders()"
  name: "trustedIdProviders()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.trustedIdProviders()"
  summary: "Get the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  syntax: "public List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders()"
  desc: "Get the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the trustedIdProviders value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters&text=UpdateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.validate()"
  name: "validate()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "UpdateDataLakeStoreAccountParameters.virtualNetworkRules()"
  summary: "Get the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  syntax: "public List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules()"
  desc: "Get the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the virtualNetworkRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters&text=UpdateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withDefaultGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withDefaultGroup(String defaultGroup)"
  name: "withDefaultGroup(String defaultGroup)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withDefaultGroup(String defaultGroup)"
  summary: "Set the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  parameters:
  - description: "the defaultGroup value to set."
    name: "defaultGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountParameters withDefaultGroup(String defaultGroup)"
  desc: "Set the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withEncryptionConfig(com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  name: "withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  summary: "Set the encryption<wbr>Config property: Used for rotation of user managed Key Vault keys."
  parameters:
  - description: "the encryptionConfig value to set."
    name: "encryptionConfig"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountParameters withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  desc: "Set the encryptionConfig property: Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withFirewallAllowAzureIps(com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  name: "withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  summary: "Set the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  parameters:
  - description: "the firewallAllowAzureIps value to set."
    name: "firewallAllowAzureIps"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountParameters withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  desc: "Set the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withFirewallRules(java.util.List<com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  name: "withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  summary: "Set the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  parameters:
  - description: "the firewallRules value to set."
    name: "firewallRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters&text=UpdateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UpdateDataLakeStoreAccountParameters withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  desc: "Set the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withFirewallState(com.azure.resourcemanager.datalakestore.models.FirewallState)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withFirewallState(FirewallState firewallState)"
  name: "withFirewallState(FirewallState firewallState)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withFirewallState(FirewallState firewallState)"
  summary: "Set the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  parameters:
  - description: "the firewallState value to set."
    name: "firewallState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountParameters withFirewallState(FirewallState firewallState)"
  desc: "Set the firewallState property: The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withNewTier(com.azure.resourcemanager.datalakestore.models.TierType)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withNewTier(TierType newTier)"
  name: "withNewTier(TierType newTier)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withNewTier(TierType newTier)"
  summary: "Set the new<wbr>Tier property: The commitment tier to use for next month."
  parameters:
  - description: "the newTier value to set."
    name: "newTier"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountParameters withNewTier(TierType newTier)"
  desc: "Set the newTier property: The commitment tier to use for next month."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withTags(Map<String,String> tags)"
  summary: "Set the tags property: Resource tags."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UpdateDataLakeStoreAccountParameters withTags(Map<String,String> tags)"
  desc: "Set the tags property: Resource tags."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withTrustedIdProviderState(com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  name: "withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  summary: "Set the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviderState value to set."
    name: "trustedIdProviderState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountParameters withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  desc: "Set the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withTrustedIdProviders(java.util.List<com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  name: "withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  summary: "Set the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviders value to set."
    name: "trustedIdProviders"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters&text=UpdateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UpdateDataLakeStoreAccountParameters withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  desc: "Set the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withVirtualNetworkRules(java.util.List<com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters.withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  name: "withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  nameWithType: "UpdateDataLakeStoreAccountParameters.withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  summary: "Set the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  parameters:
  - description: "the virtualNetworkRules value to set."
    name: "virtualNetworkRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters&text=UpdateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UpdateDataLakeStoreAccountParameters withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  desc: "Set the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateDataLakeStoreAccountParameters&text=UpdateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Data Lake Store account information to update."
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
