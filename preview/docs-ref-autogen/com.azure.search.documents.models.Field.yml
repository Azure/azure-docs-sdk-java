### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.models.Field"
  id: "Field"
  parent: "com.azure.search.documents.models"
  children:
  - "com.azure.search.documents.models.Field.Field()"
  - "com.azure.search.documents.models.Field.getAnalyzer()"
  - "com.azure.search.documents.models.Field.getFields()"
  - "com.azure.search.documents.models.Field.getIndexAnalyzer()"
  - "com.azure.search.documents.models.Field.getName()"
  - "com.azure.search.documents.models.Field.getSearchAnalyzer()"
  - "com.azure.search.documents.models.Field.getSynonymMaps()"
  - "com.azure.search.documents.models.Field.getType()"
  - "com.azure.search.documents.models.Field.isFacetable()"
  - "com.azure.search.documents.models.Field.isFilterable()"
  - "com.azure.search.documents.models.Field.isKey()"
  - "com.azure.search.documents.models.Field.isRetrievable()"
  - "com.azure.search.documents.models.Field.isSearchable()"
  - "com.azure.search.documents.models.Field.isSortable()"
  - "com.azure.search.documents.models.Field.setAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  - "com.azure.search.documents.models.Field.setFacetable(java.lang.Boolean)"
  - "com.azure.search.documents.models.Field.setFields(java.util.List<com.azure.search.documents.models.Field>)"
  - "com.azure.search.documents.models.Field.setFilterable(java.lang.Boolean)"
  - "com.azure.search.documents.models.Field.setIndexAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  - "com.azure.search.documents.models.Field.setKey(java.lang.Boolean)"
  - "com.azure.search.documents.models.Field.setName(java.lang.String)"
  - "com.azure.search.documents.models.Field.setRetrievable(java.lang.Boolean)"
  - "com.azure.search.documents.models.Field.setSearchAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  - "com.azure.search.documents.models.Field.setSearchable(java.lang.Boolean)"
  - "com.azure.search.documents.models.Field.setSortable(java.lang.Boolean)"
  - "com.azure.search.documents.models.Field.setSynonymMaps(java.util.List<java.lang.String>)"
  - "com.azure.search.documents.models.Field.setType(com.azure.search.documents.models.DataType)"
  langs:
  - "java"
  name: "Field"
  nameWithType: "Field"
  fullName: "com.azure.search.documents.models.Field"
  type: "Class"
  package: "com.azure.search.documents.models"
  summary: "Represents a field in an index definition, which describes the name, data type, and search behavior of a field."
  syntax:
    content: "public final class Field"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.models.Field.Field()"
  id: "Field()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "Field()"
  nameWithType: "Field.Field()"
  fullName: "com.azure.search.documents.models.Field.Field()"
  overload: "com.azure.search.documents.models.Field.Field*"
  type: "Constructor"
  package: "com.azure.search.documents.models"
  syntax:
    content: "public Field()"
- uid: "com.azure.search.documents.models.Field.getAnalyzer()"
  id: "getAnalyzer()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "getAnalyzer()"
  nameWithType: "Field.getAnalyzer()"
  fullName: "com.azure.search.documents.models.Field.getAnalyzer()"
  overload: "com.azure.search.documents.models.Field.getAnalyzer*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the analyzer property: The name of the analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields. Possible values include: 'ArMicrosoft', 'ArLucene', 'HyLucene', 'BnMicrosoft', 'EuLucene', 'BgMicrosoft', 'BgLucene', 'CaMicrosoft', 'CaLucene', 'ZhHansMicrosoft', 'ZhHansLucene', 'ZhHantMicrosoft', 'ZhHantLucene', 'HrMicrosoft', 'CsMicrosoft', 'CsLucene', 'DaMicrosoft', 'DaLucene', 'NlMicrosoft', 'NlLucene', 'EnMicrosoft', 'EnLucene', 'EtMicrosoft', 'FiMicrosoft', 'FiLucene', 'FrMicrosoft', 'FrLucene', 'GlLucene', 'DeMicrosoft', 'DeLucene', 'ElMicrosoft', 'ElLucene', 'GuMicrosoft', 'HeMicrosoft', 'HiMicrosoft', 'HiLucene', 'HuMicrosoft', 'HuLucene', 'IsMicrosoft', 'IdMicrosoft', 'IdLucene', 'GaLucene', 'ItMicrosoft', 'ItLucene', 'JaMicrosoft', 'JaLucene', 'KnMicrosoft', 'KoMicrosoft', 'KoLucene', 'LvMicrosoft', 'LvLucene', 'LtMicrosoft', 'MlMicrosoft', 'MsMicrosoft', 'MrMicrosoft', 'NbMicrosoft', 'NoLucene', 'FaLucene', 'PlMicrosoft', 'PlLucene', 'PtBrMicrosoft', 'PtBrLucene', 'PtPtMicrosoft', 'PtPtLucene', 'PaMicrosoft', 'RoMicrosoft', 'RoLucene', 'RuMicrosoft', 'RuLucene', 'SrCyrillicMicrosoft', 'SrLatinMicrosoft', 'SkMicrosoft', 'SlMicrosoft', 'EsMicrosoft', 'EsLucene', 'SvMicrosoft', 'SvLucene', 'TaMicrosoft', 'TeMicrosoft', 'ThMicrosoft', 'ThLucene', 'TrMicrosoft', 'TrLucene', 'UkMicrosoft', 'UrMicrosoft', 'ViMicrosoft', 'StandardLucene', 'StandardAsciiFoldingLucene', 'Keyword', 'Pattern', 'Simple', 'Stop', 'Whitespace'."
  syntax:
    content: "public AnalyzerName getAnalyzer()"
    return:
      type: "com.azure.search.documents.models.AnalyzerName"
      description: "the analyzer value."
- uid: "com.azure.search.documents.models.Field.getFields()"
  id: "getFields()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "getFields()"
  nameWithType: "Field.getFields()"
  fullName: "com.azure.search.documents.models.Field.getFields()"
  overload: "com.azure.search.documents.models.Field.getFields*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the fields property: A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields."
  syntax:
    content: "public List<Field> getFields()"
    return:
      type: "java.util.List<com.azure.search.documents.models.Field>"
      description: "the fields value."
- uid: "com.azure.search.documents.models.Field.getIndexAnalyzer()"
  id: "getIndexAnalyzer()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "getIndexAnalyzer()"
  nameWithType: "Field.getIndexAnalyzer()"
  fullName: "com.azure.search.documents.models.Field.getIndexAnalyzer()"
  overload: "com.azure.search.documents.models.Field.getIndexAnalyzer*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the indexAnalyzer property: The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields. Possible values include: 'ArMicrosoft', 'ArLucene', 'HyLucene', 'BnMicrosoft', 'EuLucene', 'BgMicrosoft', 'BgLucene', 'CaMicrosoft', 'CaLucene', 'ZhHansMicrosoft', 'ZhHansLucene', 'ZhHantMicrosoft', 'ZhHantLucene', 'HrMicrosoft', 'CsMicrosoft', 'CsLucene', 'DaMicrosoft', 'DaLucene', 'NlMicrosoft', 'NlLucene', 'EnMicrosoft', 'EnLucene', 'EtMicrosoft', 'FiMicrosoft', 'FiLucene', 'FrMicrosoft', 'FrLucene', 'GlLucene', 'DeMicrosoft', 'DeLucene', 'ElMicrosoft', 'ElLucene', 'GuMicrosoft', 'HeMicrosoft', 'HiMicrosoft', 'HiLucene', 'HuMicrosoft', 'HuLucene', 'IsMicrosoft', 'IdMicrosoft', 'IdLucene', 'GaLucene', 'ItMicrosoft', 'ItLucene', 'JaMicrosoft', 'JaLucene', 'KnMicrosoft', 'KoMicrosoft', 'KoLucene', 'LvMicrosoft', 'LvLucene', 'LtMicrosoft', 'MlMicrosoft', 'MsMicrosoft', 'MrMicrosoft', 'NbMicrosoft', 'NoLucene', 'FaLucene', 'PlMicrosoft', 'PlLucene', 'PtBrMicrosoft', 'PtBrLucene', 'PtPtMicrosoft', 'PtPtLucene', 'PaMicrosoft', 'RoMicrosoft', 'RoLucene', 'RuMicrosoft', 'RuLucene', 'SrCyrillicMicrosoft', 'SrLatinMicrosoft', 'SkMicrosoft', 'SlMicrosoft', 'EsMicrosoft', 'EsLucene', 'SvMicrosoft', 'SvLucene', 'TaMicrosoft', 'TeMicrosoft', 'ThMicrosoft', 'ThLucene', 'TrMicrosoft', 'TrLucene', 'UkMicrosoft', 'UrMicrosoft', 'ViMicrosoft', 'StandardLucene', 'StandardAsciiFoldingLucene', 'Keyword', 'Pattern', 'Simple', 'Stop', 'Whitespace'."
  syntax:
    content: "public AnalyzerName getIndexAnalyzer()"
    return:
      type: "com.azure.search.documents.models.AnalyzerName"
      description: "the indexAnalyzer value."
- uid: "com.azure.search.documents.models.Field.getName()"
  id: "getName()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "Field.getName()"
  fullName: "com.azure.search.documents.models.Field.getName()"
  overload: "com.azure.search.documents.models.Field.getName*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the name property: The name of the field, which must be unique within the fields collection of the index or parent field."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "the name value."
- uid: "com.azure.search.documents.models.Field.getSearchAnalyzer()"
  id: "getSearchAnalyzer()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "getSearchAnalyzer()"
  nameWithType: "Field.getSearchAnalyzer()"
  fullName: "com.azure.search.documents.models.Field.getSearchAnalyzer()"
  overload: "com.azure.search.documents.models.Field.getSearchAnalyzer*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the searchAnalyzer property: The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. This analyzer can be updated on an existing field. Must be null for complex fields. Possible values include: 'ArMicrosoft', 'ArLucene', 'HyLucene', 'BnMicrosoft', 'EuLucene', 'BgMicrosoft', 'BgLucene', 'CaMicrosoft', 'CaLucene', 'ZhHansMicrosoft', 'ZhHansLucene', 'ZhHantMicrosoft', 'ZhHantLucene', 'HrMicrosoft', 'CsMicrosoft', 'CsLucene', 'DaMicrosoft', 'DaLucene', 'NlMicrosoft', 'NlLucene', 'EnMicrosoft', 'EnLucene', 'EtMicrosoft', 'FiMicrosoft', 'FiLucene', 'FrMicrosoft', 'FrLucene', 'GlLucene', 'DeMicrosoft', 'DeLucene', 'ElMicrosoft', 'ElLucene', 'GuMicrosoft', 'HeMicrosoft', 'HiMicrosoft', 'HiLucene', 'HuMicrosoft', 'HuLucene', 'IsMicrosoft', 'IdMicrosoft', 'IdLucene', 'GaLucene', 'ItMicrosoft', 'ItLucene', 'JaMicrosoft', 'JaLucene', 'KnMicrosoft', 'KoMicrosoft', 'KoLucene', 'LvMicrosoft', 'LvLucene', 'LtMicrosoft', 'MlMicrosoft', 'MsMicrosoft', 'MrMicrosoft', 'NbMicrosoft', 'NoLucene', 'FaLucene', 'PlMicrosoft', 'PlLucene', 'PtBrMicrosoft', 'PtBrLucene', 'PtPtMicrosoft', 'PtPtLucene', 'PaMicrosoft', 'RoMicrosoft', 'RoLucene', 'RuMicrosoft', 'RuLucene', 'SrCyrillicMicrosoft', 'SrLatinMicrosoft', 'SkMicrosoft', 'SlMicrosoft', 'EsMicrosoft', 'EsLucene', 'SvMicrosoft', 'SvLucene', 'TaMicrosoft', 'TeMicrosoft', 'ThMicrosoft', 'ThLucene', 'TrMicrosoft', 'TrLucene', 'UkMicrosoft', 'UrMicrosoft', 'ViMicrosoft', 'StandardLucene', 'StandardAsciiFoldingLucene', 'Keyword', 'Pattern', 'Simple', 'Stop', 'Whitespace'."
  syntax:
    content: "public AnalyzerName getSearchAnalyzer()"
    return:
      type: "com.azure.search.documents.models.AnalyzerName"
      description: "the searchAnalyzer value."
- uid: "com.azure.search.documents.models.Field.getSynonymMaps()"
  id: "getSynonymMaps()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "getSynonymMaps()"
  nameWithType: "Field.getSynonymMaps()"
  fullName: "com.azure.search.documents.models.Field.getSynonymMaps()"
  overload: "com.azure.search.documents.models.Field.getSynonymMaps*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the synonymMaps property: A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields."
  syntax:
    content: "public List<String> getSynonymMaps()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "the synonymMaps value."
- uid: "com.azure.search.documents.models.Field.getType()"
  id: "getType()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "Field.getType()"
  fullName: "com.azure.search.documents.models.Field.getType()"
  overload: "com.azure.search.documents.models.Field.getType*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the type property: The data type of the field. Possible values include: 'Edm.String', 'Edm.Int32', 'Edm.Int64', 'Edm.Double', 'Edm.Boolean', 'Edm.DateTimeOffset', 'Edm.GeographyPoint', 'Edm.ComplexType'."
  syntax:
    content: "public DataType getType()"
    return:
      type: "com.azure.search.documents.models.DataType"
      description: "the type value."
- uid: "com.azure.search.documents.models.Field.isFacetable()"
  id: "isFacetable()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "isFacetable()"
  nameWithType: "Field.isFacetable()"
  fullName: "com.azure.search.documents.models.Field.isFacetable()"
  overload: "com.azure.search.documents.models.Field.isFacetable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the facetable property: A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields."
  syntax:
    content: "public Boolean isFacetable()"
    return:
      type: "java.lang.Boolean"
      description: "the facetable value."
- uid: "com.azure.search.documents.models.Field.isFilterable()"
  id: "isFilterable()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "isFilterable()"
  nameWithType: "Field.isFilterable()"
  fullName: "com.azure.search.documents.models.Field.isFilterable()"
  overload: "com.azure.search.documents.models.Field.isFilterable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the filterable property: A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to \"sunny day\", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields."
  syntax:
    content: "public Boolean isFilterable()"
    return:
      type: "java.lang.Boolean"
      description: "the filterable value."
- uid: "com.azure.search.documents.models.Field.isKey()"
  id: "isKey()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "isKey()"
  nameWithType: "Field.isKey()"
  fullName: "com.azure.search.documents.models.Field.isKey()"
  overload: "com.azure.search.documents.models.Field.isKey*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the key property: A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields."
  syntax:
    content: "public Boolean isKey()"
    return:
      type: "java.lang.Boolean"
      description: "the key value."
- uid: "com.azure.search.documents.models.Field.isRetrievable()"
  id: "isRetrievable()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "isRetrievable()"
  nameWithType: "Field.isRetrievable()"
  fullName: "com.azure.search.documents.models.Field.isRetrievable()"
  overload: "com.azure.search.documents.models.Field.isRetrievable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the retrievable property: A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields."
  syntax:
    content: "public Boolean isRetrievable()"
    return:
      type: "java.lang.Boolean"
      description: "the retrievable value."
- uid: "com.azure.search.documents.models.Field.isSearchable()"
  id: "isSearchable()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "isSearchable()"
  nameWithType: "Field.isSearchable()"
  fullName: "com.azure.search.documents.models.Field.isSearchable()"
  overload: "com.azure.search.documents.models.Field.isSearchable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the searchable property: A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like \"sunny day\", internally it will be split into the individual tokens \"sunny\" and \"day\". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false."
  syntax:
    content: "public Boolean isSearchable()"
    return:
      type: "java.lang.Boolean"
      description: "the searchable value."
- uid: "com.azure.search.documents.models.Field.isSortable()"
  id: "isSortable()"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "isSortable()"
  nameWithType: "Field.isSortable()"
  fullName: "com.azure.search.documents.models.Field.isSortable()"
  overload: "com.azure.search.documents.models.Field.isSortable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Get the sortable property: A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields."
  syntax:
    content: "public Boolean isSortable()"
    return:
      type: "java.lang.Boolean"
      description: "the sortable value."
- uid: "com.azure.search.documents.models.Field.setAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  id: "setAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setAnalyzer(AnalyzerName analyzer)"
  nameWithType: "Field.setAnalyzer(AnalyzerName analyzer)"
  fullName: "com.azure.search.documents.models.Field.setAnalyzer(AnalyzerName analyzer)"
  overload: "com.azure.search.documents.models.Field.setAnalyzer*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the analyzer property: The name of the analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields. Possible values include: 'ArMicrosoft', 'ArLucene', 'HyLucene', 'BnMicrosoft', 'EuLucene', 'BgMicrosoft', 'BgLucene', 'CaMicrosoft', 'CaLucene', 'ZhHansMicrosoft', 'ZhHansLucene', 'ZhHantMicrosoft', 'ZhHantLucene', 'HrMicrosoft', 'CsMicrosoft', 'CsLucene', 'DaMicrosoft', 'DaLucene', 'NlMicrosoft', 'NlLucene', 'EnMicrosoft', 'EnLucene', 'EtMicrosoft', 'FiMicrosoft', 'FiLucene', 'FrMicrosoft', 'FrLucene', 'GlLucene', 'DeMicrosoft', 'DeLucene', 'ElMicrosoft', 'ElLucene', 'GuMicrosoft', 'HeMicrosoft', 'HiMicrosoft', 'HiLucene', 'HuMicrosoft', 'HuLucene', 'IsMicrosoft', 'IdMicrosoft', 'IdLucene', 'GaLucene', 'ItMicrosoft', 'ItLucene', 'JaMicrosoft', 'JaLucene', 'KnMicrosoft', 'KoMicrosoft', 'KoLucene', 'LvMicrosoft', 'LvLucene', 'LtMicrosoft', 'MlMicrosoft', 'MsMicrosoft', 'MrMicrosoft', 'NbMicrosoft', 'NoLucene', 'FaLucene', 'PlMicrosoft', 'PlLucene', 'PtBrMicrosoft', 'PtBrLucene', 'PtPtMicrosoft', 'PtPtLucene', 'PaMicrosoft', 'RoMicrosoft', 'RoLucene', 'RuMicrosoft', 'RuLucene', 'SrCyrillicMicrosoft', 'SrLatinMicrosoft', 'SkMicrosoft', 'SlMicrosoft', 'EsMicrosoft', 'EsLucene', 'SvMicrosoft', 'SvLucene', 'TaMicrosoft', 'TeMicrosoft', 'ThMicrosoft', 'ThLucene', 'TrMicrosoft', 'TrLucene', 'UkMicrosoft', 'UrMicrosoft', 'ViMicrosoft', 'StandardLucene', 'StandardAsciiFoldingLucene', 'Keyword', 'Pattern', 'Simple', 'Stop', 'Whitespace'."
  syntax:
    content: "public Field setAnalyzer(AnalyzerName analyzer)"
    parameters:
    - id: "analyzer"
      type: "com.azure.search.documents.models.AnalyzerName"
      description: "the analyzer value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setFacetable(java.lang.Boolean)"
  id: "setFacetable(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setFacetable(Boolean facetable)"
  nameWithType: "Field.setFacetable(Boolean facetable)"
  fullName: "com.azure.search.documents.models.Field.setFacetable(Boolean facetable)"
  overload: "com.azure.search.documents.models.Field.setFacetable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the facetable property: A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields."
  syntax:
    content: "public Field setFacetable(Boolean facetable)"
    parameters:
    - id: "facetable"
      type: "java.lang.Boolean"
      description: "the facetable value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setFields(java.util.List<com.azure.search.documents.models.Field>)"
  id: "setFields(java.util.List<com.azure.search.documents.models.Field>)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setFields(List<Field> fields)"
  nameWithType: "Field.setFields(List<Field> fields)"
  fullName: "com.azure.search.documents.models.Field.setFields(List<Field> fields)"
  overload: "com.azure.search.documents.models.Field.setFields*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the fields property: A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields."
  syntax:
    content: "public Field setFields(List<Field> fields)"
    parameters:
    - id: "fields"
      type: "java.util.List<com.azure.search.documents.models.Field>"
      description: "the fields value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setFilterable(java.lang.Boolean)"
  id: "setFilterable(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setFilterable(Boolean filterable)"
  nameWithType: "Field.setFilterable(Boolean filterable)"
  fullName: "com.azure.search.documents.models.Field.setFilterable(Boolean filterable)"
  overload: "com.azure.search.documents.models.Field.setFilterable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the filterable property: A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to \"sunny day\", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields."
  syntax:
    content: "public Field setFilterable(Boolean filterable)"
    parameters:
    - id: "filterable"
      type: "java.lang.Boolean"
      description: "the filterable value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setIndexAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  id: "setIndexAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setIndexAnalyzer(AnalyzerName indexAnalyzer)"
  nameWithType: "Field.setIndexAnalyzer(AnalyzerName indexAnalyzer)"
  fullName: "com.azure.search.documents.models.Field.setIndexAnalyzer(AnalyzerName indexAnalyzer)"
  overload: "com.azure.search.documents.models.Field.setIndexAnalyzer*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the indexAnalyzer property: The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields. Possible values include: 'ArMicrosoft', 'ArLucene', 'HyLucene', 'BnMicrosoft', 'EuLucene', 'BgMicrosoft', 'BgLucene', 'CaMicrosoft', 'CaLucene', 'ZhHansMicrosoft', 'ZhHansLucene', 'ZhHantMicrosoft', 'ZhHantLucene', 'HrMicrosoft', 'CsMicrosoft', 'CsLucene', 'DaMicrosoft', 'DaLucene', 'NlMicrosoft', 'NlLucene', 'EnMicrosoft', 'EnLucene', 'EtMicrosoft', 'FiMicrosoft', 'FiLucene', 'FrMicrosoft', 'FrLucene', 'GlLucene', 'DeMicrosoft', 'DeLucene', 'ElMicrosoft', 'ElLucene', 'GuMicrosoft', 'HeMicrosoft', 'HiMicrosoft', 'HiLucene', 'HuMicrosoft', 'HuLucene', 'IsMicrosoft', 'IdMicrosoft', 'IdLucene', 'GaLucene', 'ItMicrosoft', 'ItLucene', 'JaMicrosoft', 'JaLucene', 'KnMicrosoft', 'KoMicrosoft', 'KoLucene', 'LvMicrosoft', 'LvLucene', 'LtMicrosoft', 'MlMicrosoft', 'MsMicrosoft', 'MrMicrosoft', 'NbMicrosoft', 'NoLucene', 'FaLucene', 'PlMicrosoft', 'PlLucene', 'PtBrMicrosoft', 'PtBrLucene', 'PtPtMicrosoft', 'PtPtLucene', 'PaMicrosoft', 'RoMicrosoft', 'RoLucene', 'RuMicrosoft', 'RuLucene', 'SrCyrillicMicrosoft', 'SrLatinMicrosoft', 'SkMicrosoft', 'SlMicrosoft', 'EsMicrosoft', 'EsLucene', 'SvMicrosoft', 'SvLucene', 'TaMicrosoft', 'TeMicrosoft', 'ThMicrosoft', 'ThLucene', 'TrMicrosoft', 'TrLucene', 'UkMicrosoft', 'UrMicrosoft', 'ViMicrosoft', 'StandardLucene', 'StandardAsciiFoldingLucene', 'Keyword', 'Pattern', 'Simple', 'Stop', 'Whitespace'."
  syntax:
    content: "public Field setIndexAnalyzer(AnalyzerName indexAnalyzer)"
    parameters:
    - id: "indexAnalyzer"
      type: "com.azure.search.documents.models.AnalyzerName"
      description: "the indexAnalyzer value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setKey(java.lang.Boolean)"
  id: "setKey(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setKey(Boolean key)"
  nameWithType: "Field.setKey(Boolean key)"
  fullName: "com.azure.search.documents.models.Field.setKey(Boolean key)"
  overload: "com.azure.search.documents.models.Field.setKey*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the key property: A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields."
  syntax:
    content: "public Field setKey(Boolean key)"
    parameters:
    - id: "key"
      type: "java.lang.Boolean"
      description: "the key value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setName(java.lang.String)"
  id: "setName(java.lang.String)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setName(String name)"
  nameWithType: "Field.setName(String name)"
  fullName: "com.azure.search.documents.models.Field.setName(String name)"
  overload: "com.azure.search.documents.models.Field.setName*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the name property: The name of the field, which must be unique within the fields collection of the index or parent field."
  syntax:
    content: "public Field setName(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the name value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setRetrievable(java.lang.Boolean)"
  id: "setRetrievable(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setRetrievable(Boolean retrievable)"
  nameWithType: "Field.setRetrievable(Boolean retrievable)"
  fullName: "com.azure.search.documents.models.Field.setRetrievable(Boolean retrievable)"
  overload: "com.azure.search.documents.models.Field.setRetrievable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the retrievable property: A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields."
  syntax:
    content: "public Field setRetrievable(Boolean retrievable)"
    parameters:
    - id: "retrievable"
      type: "java.lang.Boolean"
      description: "the retrievable value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setSearchAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  id: "setSearchAnalyzer(com.azure.search.documents.models.AnalyzerName)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setSearchAnalyzer(AnalyzerName searchAnalyzer)"
  nameWithType: "Field.setSearchAnalyzer(AnalyzerName searchAnalyzer)"
  fullName: "com.azure.search.documents.models.Field.setSearchAnalyzer(AnalyzerName searchAnalyzer)"
  overload: "com.azure.search.documents.models.Field.setSearchAnalyzer*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the searchAnalyzer property: The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. This analyzer can be updated on an existing field. Must be null for complex fields. Possible values include: 'ArMicrosoft', 'ArLucene', 'HyLucene', 'BnMicrosoft', 'EuLucene', 'BgMicrosoft', 'BgLucene', 'CaMicrosoft', 'CaLucene', 'ZhHansMicrosoft', 'ZhHansLucene', 'ZhHantMicrosoft', 'ZhHantLucene', 'HrMicrosoft', 'CsMicrosoft', 'CsLucene', 'DaMicrosoft', 'DaLucene', 'NlMicrosoft', 'NlLucene', 'EnMicrosoft', 'EnLucene', 'EtMicrosoft', 'FiMicrosoft', 'FiLucene', 'FrMicrosoft', 'FrLucene', 'GlLucene', 'DeMicrosoft', 'DeLucene', 'ElMicrosoft', 'ElLucene', 'GuMicrosoft', 'HeMicrosoft', 'HiMicrosoft', 'HiLucene', 'HuMicrosoft', 'HuLucene', 'IsMicrosoft', 'IdMicrosoft', 'IdLucene', 'GaLucene', 'ItMicrosoft', 'ItLucene', 'JaMicrosoft', 'JaLucene', 'KnMicrosoft', 'KoMicrosoft', 'KoLucene', 'LvMicrosoft', 'LvLucene', 'LtMicrosoft', 'MlMicrosoft', 'MsMicrosoft', 'MrMicrosoft', 'NbMicrosoft', 'NoLucene', 'FaLucene', 'PlMicrosoft', 'PlLucene', 'PtBrMicrosoft', 'PtBrLucene', 'PtPtMicrosoft', 'PtPtLucene', 'PaMicrosoft', 'RoMicrosoft', 'RoLucene', 'RuMicrosoft', 'RuLucene', 'SrCyrillicMicrosoft', 'SrLatinMicrosoft', 'SkMicrosoft', 'SlMicrosoft', 'EsMicrosoft', 'EsLucene', 'SvMicrosoft', 'SvLucene', 'TaMicrosoft', 'TeMicrosoft', 'ThMicrosoft', 'ThLucene', 'TrMicrosoft', 'TrLucene', 'UkMicrosoft', 'UrMicrosoft', 'ViMicrosoft', 'StandardLucene', 'StandardAsciiFoldingLucene', 'Keyword', 'Pattern', 'Simple', 'Stop', 'Whitespace'."
  syntax:
    content: "public Field setSearchAnalyzer(AnalyzerName searchAnalyzer)"
    parameters:
    - id: "searchAnalyzer"
      type: "com.azure.search.documents.models.AnalyzerName"
      description: "the searchAnalyzer value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setSearchable(java.lang.Boolean)"
  id: "setSearchable(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setSearchable(Boolean searchable)"
  nameWithType: "Field.setSearchable(Boolean searchable)"
  fullName: "com.azure.search.documents.models.Field.setSearchable(Boolean searchable)"
  overload: "com.azure.search.documents.models.Field.setSearchable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the searchable property: A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like \"sunny day\", internally it will be split into the individual tokens \"sunny\" and \"day\". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false."
  syntax:
    content: "public Field setSearchable(Boolean searchable)"
    parameters:
    - id: "searchable"
      type: "java.lang.Boolean"
      description: "the searchable value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setSortable(java.lang.Boolean)"
  id: "setSortable(java.lang.Boolean)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setSortable(Boolean sortable)"
  nameWithType: "Field.setSortable(Boolean sortable)"
  fullName: "com.azure.search.documents.models.Field.setSortable(Boolean sortable)"
  overload: "com.azure.search.documents.models.Field.setSortable*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the sortable property: A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields."
  syntax:
    content: "public Field setSortable(Boolean sortable)"
    parameters:
    - id: "sortable"
      type: "java.lang.Boolean"
      description: "the sortable value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setSynonymMaps(java.util.List<java.lang.String>)"
  id: "setSynonymMaps(java.util.List<java.lang.String>)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setSynonymMaps(List<String> synonymMaps)"
  nameWithType: "Field.setSynonymMaps(List<String> synonymMaps)"
  fullName: "com.azure.search.documents.models.Field.setSynonymMaps(List<String> synonymMaps)"
  overload: "com.azure.search.documents.models.Field.setSynonymMaps*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the synonymMaps property: A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields."
  syntax:
    content: "public Field setSynonymMaps(List<String> synonymMaps)"
    parameters:
    - id: "synonymMaps"
      type: "java.util.List<java.lang.String>"
      description: "the synonymMaps value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
- uid: "com.azure.search.documents.models.Field.setType(com.azure.search.documents.models.DataType)"
  id: "setType(com.azure.search.documents.models.DataType)"
  parent: "com.azure.search.documents.models.Field"
  langs:
  - "java"
  name: "setType(DataType type)"
  nameWithType: "Field.setType(DataType type)"
  fullName: "com.azure.search.documents.models.Field.setType(DataType type)"
  overload: "com.azure.search.documents.models.Field.setType*"
  type: "Method"
  package: "com.azure.search.documents.models"
  summary: "Set the type property: The data type of the field. Possible values include: 'Edm.String', 'Edm.Int32', 'Edm.Int64', 'Edm.Double', 'Edm.Boolean', 'Edm.DateTimeOffset', 'Edm.GeographyPoint', 'Edm.ComplexType'."
  syntax:
    content: "public Field setType(DataType type)"
    parameters:
    - id: "type"
      type: "com.azure.search.documents.models.DataType"
      description: "the type value to set."
    return:
      type: "com.azure.search.documents.models.Field"
      description: "the Field object itself."
references:
- uid: "com.azure.search.documents.models.Field.Field*"
  name: "Field"
  nameWithType: "Field.Field"
  fullName: "com.azure.search.documents.models.Field.Field"
  package: "com.azure.search.documents.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.documents.models.Field.getName*"
  name: "getName"
  nameWithType: "Field.getName"
  fullName: "com.azure.search.documents.models.Field.getName"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setName*"
  name: "setName"
  nameWithType: "Field.setName"
  fullName: "com.azure.search.documents.models.Field.setName"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.DataType"
  name: "DataType"
  nameWithType: "DataType"
  fullName: "com.azure.search.documents.models.DataType"
- uid: "com.azure.search.documents.models.Field.getType*"
  name: "getType"
  nameWithType: "Field.getType"
  fullName: "com.azure.search.documents.models.Field.getType"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setType*"
  name: "setType"
  nameWithType: "Field.setType"
  fullName: "com.azure.search.documents.models.Field.setType"
  package: "com.azure.search.documents.models"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.search.documents.models.Field.isKey*"
  name: "isKey"
  nameWithType: "Field.isKey"
  fullName: "com.azure.search.documents.models.Field.isKey"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setKey*"
  name: "setKey"
  nameWithType: "Field.setKey"
  fullName: "com.azure.search.documents.models.Field.setKey"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.isRetrievable*"
  name: "isRetrievable"
  nameWithType: "Field.isRetrievable"
  fullName: "com.azure.search.documents.models.Field.isRetrievable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setRetrievable*"
  name: "setRetrievable"
  nameWithType: "Field.setRetrievable"
  fullName: "com.azure.search.documents.models.Field.setRetrievable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.isSearchable*"
  name: "isSearchable"
  nameWithType: "Field.isSearchable"
  fullName: "com.azure.search.documents.models.Field.isSearchable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setSearchable*"
  name: "setSearchable"
  nameWithType: "Field.setSearchable"
  fullName: "com.azure.search.documents.models.Field.setSearchable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.isFilterable*"
  name: "isFilterable"
  nameWithType: "Field.isFilterable"
  fullName: "com.azure.search.documents.models.Field.isFilterable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setFilterable*"
  name: "setFilterable"
  nameWithType: "Field.setFilterable"
  fullName: "com.azure.search.documents.models.Field.setFilterable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.isSortable*"
  name: "isSortable"
  nameWithType: "Field.isSortable"
  fullName: "com.azure.search.documents.models.Field.isSortable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setSortable*"
  name: "setSortable"
  nameWithType: "Field.setSortable"
  fullName: "com.azure.search.documents.models.Field.setSortable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.isFacetable*"
  name: "isFacetable"
  nameWithType: "Field.isFacetable"
  fullName: "com.azure.search.documents.models.Field.isFacetable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setFacetable*"
  name: "setFacetable"
  nameWithType: "Field.setFacetable"
  fullName: "com.azure.search.documents.models.Field.setFacetable"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.AnalyzerName"
  name: "AnalyzerName"
  nameWithType: "AnalyzerName"
  fullName: "com.azure.search.documents.models.AnalyzerName"
- uid: "com.azure.search.documents.models.Field.getAnalyzer*"
  name: "getAnalyzer"
  nameWithType: "Field.getAnalyzer"
  fullName: "com.azure.search.documents.models.Field.getAnalyzer"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setAnalyzer*"
  name: "setAnalyzer"
  nameWithType: "Field.setAnalyzer"
  fullName: "com.azure.search.documents.models.Field.setAnalyzer"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.getSearchAnalyzer*"
  name: "getSearchAnalyzer"
  nameWithType: "Field.getSearchAnalyzer"
  fullName: "com.azure.search.documents.models.Field.getSearchAnalyzer"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setSearchAnalyzer*"
  name: "setSearchAnalyzer"
  nameWithType: "Field.setSearchAnalyzer"
  fullName: "com.azure.search.documents.models.Field.setSearchAnalyzer"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.getIndexAnalyzer*"
  name: "getIndexAnalyzer"
  nameWithType: "Field.getIndexAnalyzer"
  fullName: "com.azure.search.documents.models.Field.getIndexAnalyzer"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setIndexAnalyzer*"
  name: "setIndexAnalyzer"
  nameWithType: "Field.setIndexAnalyzer"
  fullName: "com.azure.search.documents.models.Field.setIndexAnalyzer"
  package: "com.azure.search.documents.models"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.models.Field.getSynonymMaps*"
  name: "getSynonymMaps"
  nameWithType: "Field.getSynonymMaps"
  fullName: "com.azure.search.documents.models.Field.getSynonymMaps"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setSynonymMaps*"
  name: "setSynonymMaps"
  nameWithType: "Field.setSynonymMaps"
  fullName: "com.azure.search.documents.models.Field.setSynonymMaps"
  package: "com.azure.search.documents.models"
- uid: "java.util.List<com.azure.search.documents.models.Field>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Field"
    name: "Field"
    fullName: "com.azure.search.documents.models.Field"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.models.Field.getFields*"
  name: "getFields"
  nameWithType: "Field.getFields"
  fullName: "com.azure.search.documents.models.Field.getFields"
  package: "com.azure.search.documents.models"
- uid: "com.azure.search.documents.models.Field.setFields*"
  name: "setFields"
  nameWithType: "Field.setFields"
  fullName: "com.azure.search.documents.models.Field.setFields"
  package: "com.azure.search.documents.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
