### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.ObjectBatch"
fullName: "com.azure.messaging.eventhubs.ObjectBatch<T>"
name: "ObjectBatch<T>"
nameWithType: "ObjectBatch<T>"
summary: "A class for aggregating Java objects into a single, size-limited, batch. Objects are serialized into EventData objects and are added to the batch. It is treated as a single message when sent to the Azure Event Hubs service."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.messaging.eventhubs.EventDataBatchBase\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.messaging.eventhubs.EventDataBatchBase.getCount()"
- "com.azure.messaging.eventhubs.EventDataBatchBase.getMaxSizeInBytes()"
- "com.azure.messaging.eventhubs.EventDataBatchBase.getSizeInBytes()"
- "com.azure.messaging.eventhubs.EventDataBatchBase.getStartingPublishedSequenceNumber()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ObjectBatch<T> extends EventDataBatchBase"
methods:
- "com.azure.messaging.eventhubs.ObjectBatch.tryAdd(T)"
- "com.azure.messaging.eventhubs.ObjectBatch.tryAdd(T,java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.messaging.eventhubs.ObjectBatch.tryAddAsync(T)"
- "com.azure.messaging.eventhubs.ObjectBatch.tryAddAsync(T,java.util.Map<java.lang.String,java.lang.Object>)"
type: "class"
typeParameters:
- name: "T"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.3.0-beta.1
