### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Streams.findLast*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>findLast"
name: "<T>findLast"
nameWithType: "Streams.<T>findLast"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>findLast(java.util.stream.Stream<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>findLast(Stream<T> stream)"
  name: "<T>findLast(Stream<T> stream)"
  nameWithType: "Streams.<T>findLast(Stream<T> stream)"
  summary: "Returns the last element of the specified stream, or <xref uid=\"java.util.Optional.empty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Optional#empty\"></xref> if the stream is empty.\n\nEquivalent to `stream.reduce((a, b) -> b)`, but may perform significantly better. This method's runtime will be between O(log n) and O(n), performing better on [efficiently splittable][] streams.\n\nIf the stream has nondeterministic order, this has equivalent semantics to <xref uid=\"java.util.stream.Stream.findAny\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream#findAny\"></xref> (which you might as well use).\n\n\n[efficiently splittable]: http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Optional<T> <T>findLast(Stream<T> stream)"
  returns:
    type: "<xref href=\"java.util.Optional?alt=java.util.Optional&text=Optional\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(java.util.stream.DoubleStream)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(DoubleStream stream)"
  name: "findLast(DoubleStream stream)"
  nameWithType: "Streams.findLast(DoubleStream stream)"
  summary: "Returns the last element of the specified stream, or <xref uid=\"java.util.OptionalDouble.empty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OptionalDouble#empty\"></xref> if the stream is empty.\n\nEquivalent to `stream.reduce((a, b) -> b)`, but may perform significantly better. This method's runtime will be between O(log n) and O(n), performing better on [efficiently splittable][] streams.\n\n\n[efficiently splittable]: http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.util.stream.DoubleStream?alt=java.util.stream.DoubleStream&text=DoubleStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static OptionalDouble findLast(DoubleStream stream)"
  returns:
    type: "<xref href=\"java.util.OptionalDouble?alt=java.util.OptionalDouble&text=OptionalDouble\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(java.util.stream.IntStream)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(IntStream stream)"
  name: "findLast(IntStream stream)"
  nameWithType: "Streams.findLast(IntStream stream)"
  summary: "Returns the last element of the specified stream, or <xref uid=\"java.util.OptionalInt.empty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OptionalInt#empty\"></xref> if the stream is empty.\n\nEquivalent to `stream.reduce((a, b) -> b)`, but may perform significantly better. This method's runtime will be between O(log n) and O(n), performing better on [efficiently splittable][] streams.\n\n\n[efficiently splittable]: http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.util.stream.IntStream?alt=java.util.stream.IntStream&text=IntStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static OptionalInt findLast(IntStream stream)"
  returns:
    type: "<xref href=\"java.util.OptionalInt?alt=java.util.OptionalInt&text=OptionalInt\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(java.util.stream.LongStream)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.findLast(LongStream stream)"
  name: "findLast(LongStream stream)"
  nameWithType: "Streams.findLast(LongStream stream)"
  summary: "Returns the last element of the specified stream, or <xref uid=\"java.util.OptionalLong.empty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OptionalLong#empty\"></xref> if the stream is empty.\n\nEquivalent to `stream.reduce((a, b) -> b)`, but may perform significantly better. This method's runtime will be between O(log n) and O(n), performing better on [efficiently splittable][] streams.\n\n\n[efficiently splittable]: http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.util.stream.LongStream?alt=java.util.stream.LongStream&text=LongStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static OptionalLong findLast(LongStream stream)"
  returns:
    type: "<xref href=\"java.util.OptionalLong?alt=java.util.OptionalLong&text=OptionalLong\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
