### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService"
fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService"
name: "PhoenixLinkedService"
nameWithType: "PhoenixLinkedService"
summary: "Phoenix server linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getAdditionalProperties()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getAnnotations()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getConnectVia()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getDescription()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.getParameters()"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setConnectVia(com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setDescription(java.lang.String)"
- "com.azure.analytics.synapse.artifacts.models.LinkedService.setParameters(java.util.Map<java.lang.String,com.azure.analytics.synapse.artifacts.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PhoenixLinkedService extends LinkedService"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.PhoenixLinkedService()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.PhoenixLinkedService()"
  name: "PhoenixLinkedService()"
  nameWithType: "PhoenixLinkedService.PhoenixLinkedService()"
  syntax: "public PhoenixLinkedService()"
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getAllowHostNameCNMismatch()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getAllowHostNameCNMismatch()"
  name: "getAllowHostNameCNMismatch()"
  nameWithType: "PhoenixLinkedService.getAllowHostNameCNMismatch()"
  summary: "Get the allowHostNameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  syntax: "public Object getAllowHostNameCNMismatch()"
  returns:
    description: "the allowHostNameCNMismatch value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getAllowSelfSignedServerCert()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getAllowSelfSignedServerCert()"
  name: "getAllowSelfSignedServerCert()"
  nameWithType: "PhoenixLinkedService.getAllowSelfSignedServerCert()"
  summary: "Get the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  syntax: "public Object getAllowSelfSignedServerCert()"
  returns:
    description: "the allowSelfSignedServerCert value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getAuthenticationType()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getAuthenticationType()"
  name: "getAuthenticationType()"
  nameWithType: "PhoenixLinkedService.getAuthenticationType()"
  summary: "Get the authenticationType property: The authentication mechanism used to connect to the Phoenix server."
  syntax: "public PhoenixAuthenticationType getAuthenticationType()"
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixAuthenticationType?alt=com.azure.analytics.synapse.artifacts.models.PhoenixAuthenticationType&text=PhoenixAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getEnableSsl()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getEnableSsl()"
  name: "getEnableSsl()"
  nameWithType: "PhoenixLinkedService.getEnableSsl()"
  summary: "Get the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  syntax: "public Object getEnableSsl()"
  returns:
    description: "the enableSsl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getEncryptedCredential()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getEncryptedCredential()"
  name: "getEncryptedCredential()"
  nameWithType: "PhoenixLinkedService.getEncryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object getEncryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getHost()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getHost()"
  name: "getHost()"
  nameWithType: "PhoenixLinkedService.getHost()"
  summary: "Get the host property: The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)."
  syntax: "public Object getHost()"
  returns:
    description: "the host value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getHttpPath()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getHttpPath()"
  name: "getHttpPath()"
  nameWithType: "PhoenixLinkedService.getHttpPath()"
  summary: "Get the httpPath property: The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService."
  syntax: "public Object getHttpPath()"
  returns:
    description: "the httpPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getPassword()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getPassword()"
  name: "getPassword()"
  nameWithType: "PhoenixLinkedService.getPassword()"
  summary: "Get the password property: The password corresponding to the user name."
  syntax: "public SecretBase getPassword()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SecretBase?alt=com.azure.analytics.synapse.artifacts.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getPort()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getPort()"
  name: "getPort()"
  nameWithType: "PhoenixLinkedService.getPort()"
  summary: "Get the port property: The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765."
  syntax: "public Object getPort()"
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getTrustedCertPath()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getTrustedCertPath()"
  name: "getTrustedCertPath()"
  nameWithType: "PhoenixLinkedService.getTrustedCertPath()"
  summary: "Get the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  syntax: "public Object getTrustedCertPath()"
  returns:
    description: "the trustedCertPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getUseSystemTrustStore()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getUseSystemTrustStore()"
  name: "getUseSystemTrustStore()"
  nameWithType: "PhoenixLinkedService.getUseSystemTrustStore()"
  summary: "Get the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  syntax: "public Object getUseSystemTrustStore()"
  returns:
    description: "the useSystemTrustStore value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getUsername()"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.getUsername()"
  name: "getUsername()"
  nameWithType: "PhoenixLinkedService.getUsername()"
  summary: "Get the username property: The user name used to connect to the Phoenix server."
  syntax: "public Object getUsername()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAllowHostNameCNMismatch(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  name: "setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  nameWithType: "PhoenixLinkedService.setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  summary: "Set the allowHostNameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  parameters:
  - description: "the allowHostNameCNMismatch value to set."
    name: "allowHostNameCNMismatch"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setAllowHostNameCNMismatch(Object allowHostNameCNMismatch)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAllowSelfSignedServerCert(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  name: "setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  nameWithType: "PhoenixLinkedService.setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  summary: "Set the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  parameters:
  - description: "the allowSelfSignedServerCert value to set."
    name: "allowSelfSignedServerCert"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAnnotations(List<Object> annotations)"
  name: "setAnnotations(List<Object> annotations)"
  nameWithType: "PhoenixLinkedService.setAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PhoenixLinkedService setAnnotations(List<Object> annotations)"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAuthenticationType(com.azure.analytics.synapse.artifacts.models.PhoenixAuthenticationType)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setAuthenticationType(PhoenixAuthenticationType authenticationType)"
  name: "setAuthenticationType(PhoenixAuthenticationType authenticationType)"
  nameWithType: "PhoenixLinkedService.setAuthenticationType(PhoenixAuthenticationType authenticationType)"
  summary: "Set the authenticationType property: The authentication mechanism used to connect to the Phoenix server."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixAuthenticationType?alt=com.azure.analytics.synapse.artifacts.models.PhoenixAuthenticationType&text=PhoenixAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setAuthenticationType(PhoenixAuthenticationType authenticationType)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setConnectVia(com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setConnectVia(IntegrationRuntimeReference connectVia)"
  name: "setConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "PhoenixLinkedService.setConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connectVia property: The integration runtime reference."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setConnectVia(com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference?alt=com.azure.analytics.synapse.artifacts.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setConnectVia(IntegrationRuntimeReference connectVia)"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setDescription(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setDescription(String description)"
  name: "setDescription(String description)"
  nameWithType: "PhoenixLinkedService.setDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setDescription(String description)"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setEnableSsl(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setEnableSsl(Object enableSsl)"
  name: "setEnableSsl(Object enableSsl)"
  nameWithType: "PhoenixLinkedService.setEnableSsl(Object enableSsl)"
  summary: "Set the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  parameters:
  - description: "the enableSsl value to set."
    name: "enableSsl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setEnableSsl(Object enableSsl)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setEncryptedCredential(Object encryptedCredential)"
  name: "setEncryptedCredential(Object encryptedCredential)"
  nameWithType: "PhoenixLinkedService.setEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setHost(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setHost(Object host)"
  name: "setHost(Object host)"
  nameWithType: "PhoenixLinkedService.setHost(Object host)"
  summary: "Set the host property: The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)."
  parameters:
  - description: "the host value to set."
    name: "host"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setHost(Object host)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setHttpPath(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setHttpPath(Object httpPath)"
  name: "setHttpPath(Object httpPath)"
  nameWithType: "PhoenixLinkedService.setHttpPath(Object httpPath)"
  summary: "Set the httpPath property: The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService."
  parameters:
  - description: "the httpPath value to set."
    name: "httpPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setHttpPath(Object httpPath)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setParameters(java.util.Map<java.lang.String,com.azure.analytics.synapse.artifacts.models.ParameterSpecification>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setParameters(Map<String,ParameterSpecification> parameters)"
  name: "setParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "PhoenixLinkedService.setParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.analytics.synapse.artifacts.models.LinkedService.setParameters(java.util.Map<java.lang.String,com.azure.analytics.synapse.artifacts.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.analytics.synapse.artifacts.models.ParameterSpecification?alt=com.azure.analytics.synapse.artifacts.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PhoenixLinkedService setParameters(Map<String,ParameterSpecification> parameters)"
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setPassword(com.azure.analytics.synapse.artifacts.models.SecretBase)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setPassword(SecretBase password)"
  name: "setPassword(SecretBase password)"
  nameWithType: "PhoenixLinkedService.setPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SecretBase?alt=com.azure.analytics.synapse.artifacts.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setPassword(SecretBase password)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setPort(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setPort(Object port)"
  name: "setPort(Object port)"
  nameWithType: "PhoenixLinkedService.setPort(Object port)"
  summary: "Set the port property: The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setPort(Object port)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setTrustedCertPath(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setTrustedCertPath(Object trustedCertPath)"
  name: "setTrustedCertPath(Object trustedCertPath)"
  nameWithType: "PhoenixLinkedService.setTrustedCertPath(Object trustedCertPath)"
  summary: "Set the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  parameters:
  - description: "the trustedCertPath value to set."
    name: "trustedCertPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setTrustedCertPath(Object trustedCertPath)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setUseSystemTrustStore(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setUseSystemTrustStore(Object useSystemTrustStore)"
  name: "setUseSystemTrustStore(Object useSystemTrustStore)"
  nameWithType: "PhoenixLinkedService.setUseSystemTrustStore(Object useSystemTrustStore)"
  summary: "Set the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  parameters:
  - description: "the useSystemTrustStore value to set."
    name: "useSystemTrustStore"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setUseSystemTrustStore(Object useSystemTrustStore)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setUsername(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService.setUsername(Object username)"
  name: "setUsername(Object username)"
  nameWithType: "PhoenixLinkedService.setUsername(Object username)"
  summary: "Set the username property: The user name used to connect to the Phoenix server."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PhoenixLinkedService setUsername(Object username)"
  returns:
    description: "the PhoenixLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService?alt=com.azure.analytics.synapse.artifacts.models.PhoenixLinkedService&text=PhoenixLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
