### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value
  id: Value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JsonSetter.Value.EMPTY
  - com.fasterxml.jackson.annotation.JsonSetter.Value.Value(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.empty()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.equals(java.lang.Object)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.forContentNulls(com.fasterxml.jackson.annotation.Nulls)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls(com.fasterxml.jackson.annotation.Nulls)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.from(com.fasterxml.jackson.annotation.JsonSetter)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.getContentNulls()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.getValueNulls()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.hashCode()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.merge(com.fasterxml.jackson.annotation.JsonSetter.Value,com.fasterxml.jackson.annotation.JsonSetter.Value)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultContentNulls()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultValueNulls()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.readResolve()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.toString()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.valueFor()
  - com.fasterxml.jackson.annotation.JsonSetter.Value.withContentNulls(com.fasterxml.jackson.annotation.Nulls)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.withOverrides(com.fasterxml.jackson.annotation.JsonSetter.Value)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls(com.fasterxml.jackson.annotation.Nulls)
  - com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  langs:
  - java
  name: JsonSetter.Value
  nameWithType: JsonSetter.Value
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value
  type: Class
  package: com.fasterxml.jackson.annotation
  summary: Helper class used to contain information from a single <xref uid="com.fasterxml.jackson.annotation.JsonSetter" data-throw-if-not-resolved="false">JsonSetter</xref> annotation, as well as to provide possible overrides from non-annotation sources.
  syntax:
    content: public static class JsonSetter.Value implements JacksonAnnotationValue<JsonSetter>, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JsonSetter>
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.EMPTY
  id: EMPTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: EMPTY
  nameWithType: JsonSetter.Value.EMPTY
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.EMPTY
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Default instance used in place of "default settings".
  syntax:
    content: protected static final JsonSetter.Value EMPTY
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.Value(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  id: Value(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: Value(Nulls nulls, Nulls contentNulls)
  nameWithType: JsonSetter.Value.Value(Nulls nulls, Nulls contentNulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.Value(Nulls nulls, Nulls contentNulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: protected Value(Nulls nulls, Nulls contentNulls)
    parameters:
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    - id: contentNulls
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  id: construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: construct(Nulls nulls, Nulls contentNulls)
  nameWithType: JsonSetter.Value.construct(Nulls nulls, Nulls contentNulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.construct(Nulls nulls, Nulls contentNulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.construct*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Factory method that may be used (although is NOT the recommended way) to construct an instance from a full set of properties. Most users would be better of starting by <xref uid="com.fasterxml.jackson.annotation.JsonSetter.Value.empty()" data-throw-if-not-resolved="false">#empty()</xref> instance and using \`withXxx\`/\`withoutXxx\` methods, as this factory method may need to be changed if new properties are added in <xref uid="com.fasterxml.jackson.annotation.JsonIgnoreProperties" data-throw-if-not-resolved="false">JsonIgnoreProperties</xref> annotation.
  syntax:
    content: public static JsonSetter.Value construct(Nulls nulls, Nulls contentNulls)
    parameters:
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    - id: contentNulls
      type: com.fasterxml.jackson.annotation.Nulls
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.empty()
  id: empty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: empty()
  nameWithType: JsonSetter.Value.empty()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.empty()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.empty*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: >-
    Accessor for default instances which has "empty" settings; that is:

     *  Null handling using global defaults, <xref uid="com.fasterxml.jackson.annotation.Nulls.DEFAULT" data-throw-if-not-resolved="false">Nulls#DEFAULT</xref>.
  syntax:
    content: public static JsonSetter.Value empty()
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: equals(Object o)
  nameWithType: JsonSetter.Value.equals(Object o)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.equals(Object o)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.equals*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.forContentNulls(com.fasterxml.jackson.annotation.Nulls)
  id: forContentNulls(com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: forContentNulls(Nulls nulls)
  nameWithType: JsonSetter.Value.forContentNulls(Nulls nulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.forContentNulls(Nulls nulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.forContentNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonSetter.Value forContentNulls(Nulls nulls)
    parameters:
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls(com.fasterxml.jackson.annotation.Nulls)
  id: forValueNulls(com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: forValueNulls(Nulls nulls)
  nameWithType: JsonSetter.Value.forValueNulls(Nulls nulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls(Nulls nulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonSetter.Value forValueNulls(Nulls nulls)
    parameters:
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  id: forValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: forValueNulls(Nulls nulls, Nulls contentNulls)
  nameWithType: JsonSetter.Value.forValueNulls(Nulls nulls, Nulls contentNulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls(Nulls nulls, Nulls contentNulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonSetter.Value forValueNulls(Nulls nulls, Nulls contentNulls)
    parameters:
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    - id: contentNulls
      type: com.fasterxml.jackson.annotation.Nulls
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.from(com.fasterxml.jackson.annotation.JsonSetter)
  id: from(com.fasterxml.jackson.annotation.JsonSetter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: from(JsonSetter src)
  nameWithType: JsonSetter.Value.from(JsonSetter src)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.from(JsonSetter src)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.from*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonSetter.Value from(JsonSetter src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.annotation.JsonSetter
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.getContentNulls()
  id: getContentNulls()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: getContentNulls()
  nameWithType: JsonSetter.Value.getContentNulls()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.getContentNulls()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.getContentNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Nulls getContentNulls()
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.getValueNulls()
  id: getValueNulls()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: getValueNulls()
  nameWithType: JsonSetter.Value.getValueNulls()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.getValueNulls()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.getValueNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Nulls getValueNulls()
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: hashCode()
  nameWithType: JsonSetter.Value.hashCode()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.hashCode()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.hashCode*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.merge(com.fasterxml.jackson.annotation.JsonSetter.Value,com.fasterxml.jackson.annotation.JsonSetter.Value)
  id: merge(com.fasterxml.jackson.annotation.JsonSetter.Value,com.fasterxml.jackson.annotation.JsonSetter.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: merge(JsonSetter.Value base, JsonSetter.Value overrides)
  nameWithType: JsonSetter.Value.merge(JsonSetter.Value base, JsonSetter.Value overrides)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.merge(JsonSetter.Value base, JsonSetter.Value overrides)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.merge*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Helper method that will try to combine values from two <xref uid="" data-throw-if-not-resolved="false">Value</xref> instances, using one as base settings, and the other as overrides to use instead of base values when defined; base values are only use if override does not specify a value (matching value is null or logically missing). Note that one or both of value instances may be \`null\`, directly; if both are \`null\`, result will also be \`null\`; otherwise never null.
  syntax:
    content: public static JsonSetter.Value merge(JsonSetter.Value base, JsonSetter.Value overrides)
    parameters:
    - id: base
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
    - id: overrides
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultContentNulls()
  id: nonDefaultContentNulls()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: nonDefaultContentNulls()
  nameWithType: JsonSetter.Value.nonDefaultContentNulls()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultContentNulls()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultContentNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Returns same as <xref uid="com.fasterxml.jackson.annotation.JsonSetter.Value.getContentNulls()" data-throw-if-not-resolved="false">#getContentNulls()</xref> unless value would be <xref uid="com.fasterxml.jackson.annotation.Nulls.DEFAULT" data-throw-if-not-resolved="false">Nulls#DEFAULT</xref> in which case \`null\` is returned.
  syntax:
    content: public Nulls nonDefaultContentNulls()
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultValueNulls()
  id: nonDefaultValueNulls()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: nonDefaultValueNulls()
  nameWithType: JsonSetter.Value.nonDefaultValueNulls()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultValueNulls()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultValueNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Returns same as <xref uid="com.fasterxml.jackson.annotation.JsonSetter.Value.getValueNulls()" data-throw-if-not-resolved="false">#getValueNulls()</xref> unless value would be <xref uid="com.fasterxml.jackson.annotation.Nulls.DEFAULT" data-throw-if-not-resolved="false">Nulls#DEFAULT</xref> in which case \`null\` is returned.
  syntax:
    content: public Nulls nonDefaultValueNulls()
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.readResolve()
  id: readResolve()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: readResolve()
  nameWithType: JsonSetter.Value.readResolve()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.readResolve()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.readResolve*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: protected Object readResolve()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: toString()
  nameWithType: JsonSetter.Value.toString()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.toString()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.toString*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.valueFor()
  id: valueFor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: valueFor()
  nameWithType: JsonSetter.Value.valueFor()
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.valueFor()
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.valueFor*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Introspection method that may be used to find actual annotation that may be used as the source for value instance.
  syntax:
    content: public Class<JsonSetter> valueFor()
    return:
      type: java.lang.Class<com.fasterxml.jackson.annotation.JsonSetter>
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.withContentNulls(com.fasterxml.jackson.annotation.Nulls)
  id: withContentNulls(com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: withContentNulls(Nulls nulls)
  nameWithType: JsonSetter.Value.withContentNulls(Nulls nulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.withContentNulls(Nulls nulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.withContentNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonSetter.Value withContentNulls(Nulls nulls)
    parameters:
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.withOverrides(com.fasterxml.jackson.annotation.JsonSetter.Value)
  id: withOverrides(com.fasterxml.jackson.annotation.JsonSetter.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: withOverrides(JsonSetter.Value overrides)
  nameWithType: JsonSetter.Value.withOverrides(JsonSetter.Value overrides)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.withOverrides(JsonSetter.Value overrides)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.withOverrides*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Mutant factory method that merges values of this value with given override values, so that any explicitly defined inclusion in overrides has precedence over settings of this value instance. If no overrides exist will return `this` instance; otherwise new <xref uid="" data-throw-if-not-resolved="false">Value</xref> with changed inclusion values.
  syntax:
    content: public JsonSetter.Value withOverrides(JsonSetter.Value overrides)
    parameters:
    - id: overrides
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls(com.fasterxml.jackson.annotation.Nulls)
  id: withValueNulls(com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: withValueNulls(Nulls nulls)
  nameWithType: JsonSetter.Value.withValueNulls(Nulls nulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls(Nulls nulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonSetter.Value withValueNulls(Nulls nulls)
    parameters:
    - id: nulls
      type: com.fasterxml.jackson.annotation.Nulls
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  id: withValueNulls(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSetter.Value
  langs:
  - java
  name: withValueNulls(Nulls valueNulls, Nulls contentNulls)
  nameWithType: JsonSetter.Value.withValueNulls(Nulls valueNulls, Nulls contentNulls)
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls(Nulls valueNulls, Nulls contentNulls)
  overload: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonSetter.Value withValueNulls(Nulls valueNulls, Nulls contentNulls)
    parameters:
    - id: valueNulls
      type: com.fasterxml.jackson.annotation.Nulls
    - id: contentNulls
      type: com.fasterxml.jackson.annotation.Nulls
    return:
      type: com.fasterxml.jackson.annotation.JsonSetter.Value
references:
- uid: com.fasterxml.jackson.annotation.Nulls
  name: Nulls
  nameWithType: Nulls
  fullName: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.Value*
  name: Value
  nameWithType: JsonSetter.Value.Value
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.Value
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Class<com.fasterxml.jackson.annotation.JsonSetter>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.annotation.JsonSetter
    name: JsonSetter
    fullName: com.fasterxml.jackson.annotation.JsonSetter
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.valueFor*
  name: valueFor
  nameWithType: JsonSetter.Value.valueFor
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.valueFor
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.readResolve*
  name: readResolve
  nameWithType: JsonSetter.Value.readResolve
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.readResolve
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter
  name: JsonSetter
  nameWithType: JsonSetter
  fullName: com.fasterxml.jackson.annotation.JsonSetter
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.from*
  name: from
  nameWithType: JsonSetter.Value.from
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.from
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.construct*
  name: construct
  nameWithType: JsonSetter.Value.construct
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.construct
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.empty*
  name: empty
  nameWithType: JsonSetter.Value.empty
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.empty
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.merge*
  name: merge
  nameWithType: JsonSetter.Value.merge
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.merge
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls*
  name: forValueNulls
  nameWithType: JsonSetter.Value.forValueNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.forValueNulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.forContentNulls*
  name: forContentNulls
  nameWithType: JsonSetter.Value.forContentNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.forContentNulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.withOverrides*
  name: withOverrides
  nameWithType: JsonSetter.Value.withOverrides
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.withOverrides
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls*
  name: withValueNulls
  nameWithType: JsonSetter.Value.withValueNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.withValueNulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.withContentNulls*
  name: withContentNulls
  nameWithType: JsonSetter.Value.withContentNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.withContentNulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.getValueNulls*
  name: getValueNulls
  nameWithType: JsonSetter.Value.getValueNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.getValueNulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.getContentNulls*
  name: getContentNulls
  nameWithType: JsonSetter.Value.getContentNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.getContentNulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultValueNulls*
  name: nonDefaultValueNulls
  nameWithType: JsonSetter.Value.nonDefaultValueNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultValueNulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultContentNulls*
  name: nonDefaultContentNulls
  nameWithType: JsonSetter.Value.nonDefaultContentNulls
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.nonDefaultContentNulls
  package: com.fasterxml.jackson.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.toString*
  name: toString
  nameWithType: JsonSetter.Value.toString
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.toString
  package: com.fasterxml.jackson.annotation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.hashCode*
  name: hashCode
  nameWithType: JsonSetter.Value.hashCode
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.hashCode
  package: com.fasterxml.jackson.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.JsonSetter.Value.equals*
  name: equals
  nameWithType: JsonSetter.Value.equals
  fullName: com.fasterxml.jackson.annotation.JsonSetter.Value.equals
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JsonSetter>
  name: JacksonAnnotationValue<JsonSetter>
  nameWithType: JacksonAnnotationValue<JsonSetter>
  fullName: com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JsonSetter>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.annotation.JacksonAnnotationValue
  name: JacksonAnnotationValue
  nameWithType: JacksonAnnotationValue
  fullName: com.fasterxml.jackson.annotation.JacksonAnnotationValue
