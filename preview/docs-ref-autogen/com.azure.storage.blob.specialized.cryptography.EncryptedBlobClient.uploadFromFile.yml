### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile*"
fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile"
name: "uploadFromFile"
nameWithType: "EncryptedBlobClient.uploadFromFile"
members:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile(String filePath)"
  name: "uploadFromFile(String filePath)"
  nameWithType: "EncryptedBlobClient.uploadFromFile(String filePath)"
  summary: "Creates a new block blob, or updates the content of an existing block blob.\n\n**Code Samples**\n\n```java\ntry {\n     client.uploadFromFile(filePath);\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
  overridden: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String)"
  parameters:
  - description: "Path of the file to upload"
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void uploadFromFile(String filePath)"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile(java.lang.String,boolean)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile(String filePath, boolean overwrite)"
  name: "uploadFromFile(String filePath, boolean overwrite)"
  nameWithType: "EncryptedBlobClient.uploadFromFile(String filePath, boolean overwrite)"
  summary: "Creates a new block blob, or updates the content of an existing block blob.\n\n**Code Samples**\n\n```java\ntry {\n     boolean overwrite = false; // Default value\n     client.uploadFromFile(filePath, overwrite);\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
  overridden: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,boolean)"
  parameters:
  - description: "Path of the file to upload"
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not to overwrite should data already exist on the blob"
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void uploadFromFile(String filePath, boolean overwrite)"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile(java.lang.String,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  name: "uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  nameWithType: "EncryptedBlobClient.uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  summary: "Creates a new block blob, or updates the content of an existing block blob.\n\n**Code Samples**\n\n```java\nBlobHttpHeaders headers = new BlobHttpHeaders()\n     .setContentMd5(\"data\".getBytes(StandardCharsets.UTF_8))\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\");\n \n Map<String, String> metadata = new HashMap<>(Collections.singletonMap(\"metadata\", \"value\"));\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setLeaseId(leaseId)\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n long blockSize = 100 * 1024 * 1024; // 100 MB;\n ParallelTransferOptions parallelTransferOptions = new ParallelTransferOptions().setBlockSizeLong(blockSize);\n \n try {\n     client.uploadFromFile(filePath, parallelTransferOptions, headers, metadata, AccessTier.HOT,\n         requestConditions, timeout);\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
  overridden: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  parameters:
  - description: "Path of the file to upload"
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref> to use to upload from file. Number of parallel\n        transfers parameter is ignored."
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the blob."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> for the uploaded blob"
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  exceptions:
  - description: "If an I/O error occurs"
    type: "<xref href=\"java.io.UncheckedIOException?alt=java.io.UncheckedIOException&text=UncheckedIOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized.cryptography"
artifact: com.azure:azure-storage-blob-cryptography:12.9.0-beta.1
