### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.Jobs
  id: Jobs
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.Jobs.add(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  - com.microsoft.azure.batch.protocol.Jobs.add(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  - com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  - com.microsoft.azure.batch.protocol.Jobs.delete(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  - com.microsoft.azure.batch.protocol.Jobs.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  - com.microsoft.azure.batch.protocol.Jobs.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  - com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.enable(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.enable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  - com.microsoft.azure.batch.protocol.Jobs.get(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.get(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  - com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  - com.microsoft.azure.batch.protocol.Jobs.list()
  - com.microsoft.azure.batch.protocol.Jobs.list(com.microsoft.azure.batch.protocol.models.JobListOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listAsync()
  - com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  - com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  - com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)
  - com.microsoft.azure.batch.protocol.Jobs.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  - com.microsoft.azure.batch.protocol.Jobs.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  - com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  - com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.Jobs.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  - com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  langs:
  - java
  name: Jobs
  nameWithType: Jobs
  fullName: com.microsoft.azure.batch.protocol.Jobs
  type: Interface
  package: com.microsoft.azure.batch.protocol
  summary: An instance of this class provides access to all the operations defined in Jobs.
  syntax:
    content: public interface Jobs
- uid: com.microsoft.azure.batch.protocol.Jobs.add(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  id: add(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: add(JobAddParameter job)
  nameWithType: Jobs.add(JobAddParameter job)
  fullName: com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.Jobs.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract void add(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
- uid: com.microsoft.azure.batch.protocol.Jobs.add(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  id: add(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: add(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.add(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract void add(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: addAsync(JobAddParameter job)
  nameWithType: Jobs.addAsync(JobAddParameter job)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract Observable<Void> addAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract Observable<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(JobAddParameter job, JobAddOptions jobAddOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(JobAddParameter job, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: addWithServiceResponseAsync(JobAddParameter job)
  nameWithType: Jobs.addWithServiceResponseAsync(JobAddParameter job)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job)
  overload: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobAddParameter,com.microsoft.azure.batch.protocol.models.JobAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  nameWithType: Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Adds a Job to the specified Account. The Batch service supports two ways to control the work done as part of a Job. In the first approach, the user specifies a Job Manager Task. The Batch service launches this Task when it is ready to start the Job. The Job Manager Task controls all other Tasks that run under this Job, by using the Task APIs. In the second approach, the user directly controls the execution of Tasks under an active Job, by using the Task APIs. Also note: when naming Jobs, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.'
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobAddHeaders>> addWithServiceResponseAsync(JobAddParameter job, JobAddOptions jobAddOptions)
    parameters:
    - id: job
      type: com.microsoft.azure.batch.protocol.models.JobAddParameter
      description: The Job to be added.
    - id: jobAddOptions
      type: com.microsoft.azure.batch.protocol.models.JobAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.delete(java.lang.String)
  id: delete(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: delete(String jobId)
  nameWithType: Jobs.delete(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.delete(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract void delete(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
- uid: com.microsoft.azure.batch.protocol.Jobs.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  id: delete(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: delete(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.delete(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract void delete(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String)
  id: deleteAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: deleteAsync(String jobId)
  nameWithType: Jobs.deleteAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract Observable<Void> deleteAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  id: deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract Observable<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String jobId, JobDeleteOptions jobDeleteOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String jobId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(java.lang.String)
  id: deleteWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.deleteWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  id: deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  nameWithType: Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Deletes a Job. Deleting a Job also deletes all Tasks that are part of that Job, and all Job statistics. This also overrides the retention period for Task data; that is, if the Job contains Tasks which are still retained on Compute Nodes, the Batch services deletes those Tasks' working directories and all their contents. When a Delete Job request is received, the Batch service sets the Job to the deleting state. All update operations on a Job that is in deleting state will fail with status code 409 (Conflict), with additional information indicating that the Job is being deleted.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobDeleteHeaders>> deleteWithServiceResponseAsync(String jobId, JobDeleteOptions jobDeleteOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to delete.
    - id: jobDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  id: disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disable(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.Jobs.disable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract void disable(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
- uid: com.microsoft.azure.batch.protocol.Jobs.disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  id: disable(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.disable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract void disable(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  id: disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  id: disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract Observable<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract ServiceFuture<Void> disableAsync(String jobId, DisableJobOption disableTasks, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  id: disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  nameWithType: Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDisableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  id: disableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.DisableJobOption,com.microsoft.azure.batch.protocol.models.JobDisableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  nameWithType: Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables the specified Job, preventing new Tasks from running. The Batch Service immediately moves the Job to the disabling state. Batch then uses the disableTasks parameter to determine what to do with the currently running Tasks of the Job. The Job remains in the disabling state until the disable operation is completed and all Tasks have been dealt with according to the disableTasks option; the Job then moves to the disabled state. No new Tasks are started under the Job until it moves back to active state. If you try to disable a Job that is in any state other than active, disabling, or disabled, the request fails with status code 409.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobDisableHeaders>> disableWithServiceResponseAsync(String jobId, DisableJobOption disableTasks, JobDisableOptions jobDisableOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to disable.
    - id: disableTasks
      type: com.microsoft.azure.batch.protocol.models.DisableJobOption
      description: "What to do with active Tasks associated with the Job. Possible values include: 'requeue', 'terminate', 'wait'"
    - id: jobDisableOptions
      type: com.microsoft.azure.batch.protocol.models.JobDisableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDisableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.enable(java.lang.String)
  id: enable(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enable(String jobId)
  nameWithType: Jobs.enable(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enable(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.enable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract void enable(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
- uid: com.microsoft.azure.batch.protocol.Jobs.enable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  id: enable(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enable(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enable(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.enable*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract void enable(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String)
  id: enableAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enableAsync(String jobId)
  nameWithType: Jobs.enableAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract Observable<Void> enableAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  id: enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract Observable<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract ServiceFuture<Void> enableAsync(String jobId, JobEnableOptions jobEnableOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enableAsync(String jobId, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.enableAsync(String jobId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync(String jobId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract ServiceFuture<Void> enableAsync(String jobId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(java.lang.String)
  id: enableWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.enableWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobEnableHeaders>> enableWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobEnableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  id: enableWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobEnableOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  nameWithType: Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables the specified Job, allowing new Tasks to run. When you call this API, the Batch service sets a disabled Job to the enabling state. After the this operation is completed, the Job moves to the active state, and scheduling of new Tasks under the Job resumes. The Batch service does not allow a Task to remain in the active state for more than 180 days. Therefore, if you enable a Job containing active Tasks which were added more than 180 days ago, those Tasks will not run.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobEnableHeaders>> enableWithServiceResponseAsync(String jobId, JobEnableOptions jobEnableOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to enable.
    - id: jobEnableOptions
      type: com.microsoft.azure.batch.protocol.models.JobEnableOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobEnableHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: get(String jobId)
  nameWithType: Jobs.get(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.get(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract CloudJob get(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJob
      description: the CloudJob object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.get(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  id: get(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: get(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.get(String jobId, JobGetOptions jobGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.get(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract CloudJob get(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudJob
      description: the CloudJob object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()
  id: getAllLifetimeStatistics()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatistics()
  nameWithType: Jobs.getAllLifetimeStatistics()
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics()
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract JobStatistics getAllLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobStatistics
      description: the JobStatistics object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract JobStatistics getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.JobStatistics
      description: the JobStatistics object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  id: getAllLifetimeStatisticsAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatisticsAsync()
  nameWithType: Jobs.getAllLifetimeStatisticsAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<JobStatistics> getAllLifetimeStatisticsAsync()
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.JobStatistics>
      description: the observable to the JobStatistics object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.JobStatistics>
      description: the observable to the JobStatistics object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)
  id: getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions, ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.JobStatistics>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)
  id: getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract ServiceFuture<JobStatistics> getAllLifetimeStatisticsAsync(ServiceCallback<JobStatistics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.JobStatistics>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  id: getAllLifetimeStatisticsWithServiceResponseAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync()
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<JobStatistics,JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.JobStatistics,com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders>>
      description: the observable to the JobStatistics object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Jobs in the specified Account. Statistics are aggregated across all Jobs that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<JobStatistics,JobGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(JobGetAllLifetimeStatisticsOptions jobGetAllLifetimeStatisticsOptions)
    parameters:
    - id: jobGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.JobStatistics,com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders>>
      description: the observable to the JobStatistics object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAsync(String jobId)
  nameWithType: Jobs.getAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract Observable<CloudJob> getAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the observable to the CloudJob object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  id: getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract Observable<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the observable to the CloudJob object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract ServiceFuture<CloudJob> getAsync(String jobId, JobGetOptions jobGetOptions, ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract ServiceFuture<CloudJob> getAsync(String jobId, ServiceCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(java.lang.String)
  id: getTaskCounts(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCounts(String jobId)
  nameWithType: Jobs.getTaskCounts(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract TaskCounts getTaskCounts(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskCounts
      description: the TaskCounts object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  id: getTaskCounts(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract TaskCounts getTaskCounts(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskCounts
      description: the TaskCounts object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String)
  id: getTaskCountsAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCountsAsync(String jobId)
  nameWithType: Jobs.getTaskCountsAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract Observable<TaskCounts> getTaskCountsAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.TaskCounts>
      description: the observable to the TaskCounts object
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  id: getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract Observable<TaskCounts> getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.TaskCounts>
      description: the observable to the TaskCounts object
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>)
  id: getTaskCountsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCounts> serviceCallback)
  nameWithType: Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCounts> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCounts> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract ServiceFuture<TaskCounts> getTaskCountsAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions, ServiceCallback<TaskCounts> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.TaskCounts>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>)
  id: getTaskCountsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCountsAsync(String jobId, ServiceCallback<TaskCounts> serviceCallback)
  nameWithType: Jobs.getTaskCountsAsync(String jobId, ServiceCallback<TaskCounts> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync(String jobId, ServiceCallback<TaskCounts> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract ServiceFuture<TaskCounts> getTaskCountsAsync(String jobId, ServiceCallback<TaskCounts> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.TaskCounts>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(java.lang.String)
  id: getTaskCountsWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCountsWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<TaskCounts,JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.TaskCounts,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders>>
      description: the observable to the TaskCounts object
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  id: getTaskCountsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the Task counts for the specified Job. Task counts provide a count of the Tasks by active, running or completed Task state, and a count of Tasks which succeeded or failed. Tasks in the preparing state are counted as running.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<TaskCounts,JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetTaskCountsOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.TaskCounts,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders>>
      description: the observable to the TaskCounts object
- uid: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(java.lang.String)
  id: getWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.getWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<CloudJob,JobGetHeaders>> getWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudJob,com.microsoft.azure.batch.protocol.models.JobGetHeaders>>
      description: the observable to the CloudJob object
- uid: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  id: getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  nameWithType: Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Job.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<CloudJob,JobGetHeaders>> getWithServiceResponseAsync(String jobId, JobGetOptions jobGetOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobGetOptions
      type: com.microsoft.azure.batch.protocol.models.JobGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudJob,com.microsoft.azure.batch.protocol.models.JobGetHeaders>>
      description: the observable to the CloudJob object
- uid: com.microsoft.azure.batch.protocol.Jobs.list()
  id: list()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: list()
  nameWithType: Jobs.list()
  fullName: com.microsoft.azure.batch.protocol.Jobs.list()
  overload: com.microsoft.azure.batch.protocol.Jobs.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJob> list()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.list(com.microsoft.azure.batch.protocol.models.JobListOptions)
  id: list(com.microsoft.azure.batch.protocol.models.JobListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: list(JobListOptions jobListOptions)
  nameWithType: Jobs.list(JobListOptions jobListOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.list(JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJob> list(JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: com.microsoft.azure.batch.protocol.models.JobListOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync()
  id: listAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listAsync()
  nameWithType: Jobs.listAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listAsync()
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listAsync(ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listAsync(ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync(ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listAsync(ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)
  id: listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listAsync(JobListOptions jobListOptions)
  nameWithType: Jobs.listAsync(JobListOptions jobListOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync(JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listAsync(JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: com.microsoft.azure.batch.protocol.models.JobListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listAsync(com.microsoft.azure.batch.protocol.models.JobListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listAsync(JobListOptions jobListOptions, ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobListOptions
      type: com.microsoft.azure.batch.protocol.models.JobListOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(java.lang.String)
  id: listFromJobSchedule(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobSchedule(String jobScheduleId)
  nameWithType: Jobs.listFromJobSchedule(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract PagedList<CloudJob> listFromJobSchedule(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  id: listFromJobSchedule(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract PagedList<CloudJob> listFromJobSchedule(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    - id: jobListFromJobScheduleOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String)
  id: listFromJobScheduleAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleAsync(String jobScheduleId)
  nameWithType: Jobs.listFromJobScheduleAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listFromJobScheduleAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(String jobScheduleId, ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  id: listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    - id: jobListFromJobScheduleOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listFromJobScheduleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions, ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    - id: jobListFromJobScheduleOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(java.lang.String)
  id: listFromJobScheduleNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNext(String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract PagedList<CloudJob> listFromJobScheduleNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract PagedList<CloudJob> listFromJobScheduleNext(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListFromJobScheduleNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String)
  id: listFromJobScheduleNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNextAsync(String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListFromJobScheduleNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listFromJobScheduleNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListFromJobScheduleNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listFromJobScheduleNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listFromJobScheduleNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(java.lang.String)
  id: listFromJobScheduleNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  id: listFromJobScheduleNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleNextWithServiceResponseAsync(String nextPageLink, JobListFromJobScheduleNextOptions jobListFromJobScheduleNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListFromJobScheduleNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(java.lang.String)
  id: listFromJobScheduleWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(String jobScheduleId)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  id: listFromJobScheduleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the Jobs that have been created under the specified Job Schedule.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListFromJobScheduleHeaders>> listFromJobScheduleWithServiceResponseAsync(String jobScheduleId, JobListFromJobScheduleOptions jobListFromJobScheduleOptions)
    parameters:
    - id: jobScheduleId
      type: java.lang.String
      description: The ID of the Job Schedule from which you want to get a list of Jobs.
    - id: jobListFromJobScheduleOptions
      type: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listNext(java.lang.String)
  id: listNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNext(String nextPageLink)
  nameWithType: Jobs.listNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJob> listNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  id: listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNext(String nextPageLink, JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNext(String nextPageLink, JobListNextOptions jobListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNext(String nextPageLink, JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract PagedList<CloudJob> listNext(String nextPageLink, JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the PagedList&lt;CloudJob&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String)
  id: listNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNextAsync(String nextPageLink)
  nameWithType: Jobs.listNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudJob>> listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listNextAsync(String nextPageLink, JobListNextOptions jobListNextOptions, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  id: listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  nameWithType: Jobs.listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudJob>> listNextAsync(String nextPageLink, ServiceFuture<List<CloudJob>> serviceFuture, ListOperationCallback<CloudJob> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(java.lang.String)
  id: listNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: Jobs.listNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  id: listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
  nameWithType: Jobs.listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, JobListNextOptions jobListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(java.lang.String)
  id: listPreparationAndReleaseTaskStatus(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatus(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatus(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String)
  id: listPreparationAndReleaseTaskStatusAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(java.lang.String)
  id: listPreparationAndReleaseTaskStatusNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNext(String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNext(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract PagedList<JobPreparationAndReleaseTaskExecutionInformation> listPreparationAndReleaseTaskStatusNext(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String)
  id: listPreparationAndReleaseTaskStatusNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<Page<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  id: listPreparationAndReleaseTaskStatusNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> listPreparationAndReleaseTaskStatusNextAsync(String nextPageLink, ServiceFuture<List<JobPreparationAndReleaseTaskExecutionInformation>> serviceFuture, ListOperationCallback<JobPreparationAndReleaseTaskExecutionInformation> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String)
  id: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  id: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync(String nextPageLink, JobListPreparationAndReleaseTaskStatusNextOptions jobListPreparationAndReleaseTaskStatusNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: jobListPreparationAndReleaseTaskStatusNextOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String)
  id: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  id: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the execution status of the Job Preparation and Job Release Task for the specified Job across the Compute Nodes where the Job has run. This API returns the Job Preparation and Job Release Task status on all Compute Nodes that have run the Job Preparation or Job Release Task. This includes Compute Nodes which have since been removed from the Pool. If this API is invoked on a Job which has no Job Preparation or Job Release Task, the Batch service returns HTTP status code 409 (Conflict) with an error code of JobPreparationTaskNotSpecified.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders>> listPreparationAndReleaseTaskStatusWithServiceResponseAsync(String jobId, JobListPreparationAndReleaseTaskStatusOptions jobListPreparationAndReleaseTaskStatusOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job.
    - id: jobListPreparationAndReleaseTaskStatusOptions
      type: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders>>
      description: the observable to the PagedList&lt;JobPreparationAndReleaseTaskExecutionInformation&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: Jobs.listWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)
  id: listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.JobListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: listWithServiceResponseAsync(JobListOptions jobListOptions)
  nameWithType: Jobs.listWithServiceResponseAsync(JobListOptions jobListOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync(JobListOptions jobListOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Jobs in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudJob>,JobListHeaders>> listWithServiceResponseAsync(JobListOptions jobListOptions)
    parameters:
    - id: jobListOptions
      type: com.microsoft.azure.batch.protocol.models.JobListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListHeaders>>
      description: the observable to the PagedList&lt;CloudJob&gt; object
- uid: com.microsoft.azure.batch.protocol.Jobs.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  id: patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patch(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.patch*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract void patch(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.Jobs.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  id: patch(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.patch*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract void patch(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract Observable<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract ServiceFuture<Void> patchAsync(String jobId, JobPatchParameter jobPatchParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  id: patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  nameWithType: Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobPatchHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  id: patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobPatchParameter,com.microsoft.azure.batch.protocol.models.JobPatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  nameWithType: Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This replaces only the Job properties specified in the request. For example, if the Job has constraints, and a request does not specify the constraints element, then the Job keeps the existing constraints.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobPatchHeaders>> patchWithServiceResponseAsync(String jobId, JobPatchParameter jobPatchParameter, JobPatchOptions jobPatchOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobPatchParameter
      type: com.microsoft.azure.batch.protocol.models.JobPatchParameter
      description: The parameters for the request.
    - id: jobPatchOptions
      type: com.microsoft.azure.batch.protocol.models.JobPatchOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobPatchHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String)
  id: terminate(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminate(String jobId)
  nameWithType: Jobs.terminate(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminate*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract void terminate(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
- uid: com.microsoft.azure.batch.protocol.Jobs.terminate(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  id: terminate(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminate*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract void terminate(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
    - id: terminateReason
      type: java.lang.String
      description: The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'.
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String)
  id: terminateAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminateAsync(String jobId)
  nameWithType: Jobs.terminateAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract Observable<Void> terminateAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: terminateAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract ServiceFuture<Void> terminateAsync(String jobId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  id: terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract Observable<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
    - id: terminateReason
      type: java.lang.String
      description: The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'.
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: terminateAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract ServiceFuture<Void> terminateAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
    - id: terminateReason
      type: java.lang.String
      description: The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'.
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(java.lang.String)
  id: terminateWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.terminateWithServiceResponseAsync(String jobId)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobTerminateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  id: terminateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.JobTerminateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  nameWithType: Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Terminates the specified Job, marking it as completed. When a Terminate Job request is received, the Batch service sets the Job to the terminating state. The Batch service then terminates any running Tasks associated with the Job and runs any required Job release Tasks. Then the Job moves into the completed state. If there are any Tasks in the Job in the active state, they will remain in the active state. Once a Job is terminated, new Tasks cannot be added and any remaining active Tasks will not be scheduled.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String terminateReason, JobTerminateOptions jobTerminateOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job to terminate.
    - id: terminateReason
      type: java.lang.String
      description: The text you want to appear as the Job's TerminateReason. The default is 'UserTerminate'.
    - id: jobTerminateOptions
      type: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobTerminateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  id: update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: update(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.update*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract void update(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.Jobs.update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  id: update(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.update*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract void update(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updateAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  id: updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobUpdateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  id: updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.JobUpdateParameter,com.microsoft.azure.batch.protocol.models.JobUpdateOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Jobs
  langs:
  - java
  name: updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  overload: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Job. This fully replaces all the updatable properties of the Job. For example, if the Job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,JobUpdateHeaders>> updateWithServiceResponseAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the Job whose properties you want to update.
    - id: jobUpdateParameter
      type: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
      description: The parameters for the request.
    - id: jobUpdateOptions
      type: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobUpdateHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
references:
- uid: com.microsoft.azure.batch.protocol.models.JobStatistics
  name: JobStatistics
  nameWithType: JobStatistics
  fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics*
  name: getAllLifetimeStatistics
  nameWithType: Jobs.getAllLifetimeStatistics
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatistics
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.JobStatistics>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.JobStatistics>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync*
  name: getAllLifetimeStatisticsAsync
  nameWithType: Jobs.getAllLifetimeStatisticsAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.JobStatistics>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.JobStatistics,com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobStatistics
    name: JobStatistics
    fullName: com.microsoft.azure.batch.protocol.models.JobStatistics
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
    name: JobGetAllLifetimeStatisticsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync*
  name: getAllLifetimeStatisticsWithServiceResponseAsync
  nameWithType: Jobs.getAllLifetimeStatisticsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAllLifetimeStatisticsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
  name: JobGetAllLifetimeStatisticsOptions
  nameWithType: JobGetAllLifetimeStatisticsOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsOptions
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.Jobs.delete*
  name: delete
  nameWithType: Jobs.delete
  fullName: com.microsoft.azure.batch.protocol.Jobs.delete
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteAsync*
  name: deleteAsync
  nameWithType: Jobs.deleteAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDeleteHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
    name: JobDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: Jobs.deleteWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
  name: JobDeleteOptions
  nameWithType: JobDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobDeleteOptions
- uid: com.microsoft.azure.batch.protocol.models.CloudJob
  name: CloudJob
  nameWithType: CloudJob
  fullName: com.microsoft.azure.batch.protocol.models.CloudJob
- uid: com.microsoft.azure.batch.protocol.Jobs.get*
  name: get
  nameWithType: Jobs.get
  fullName: com.microsoft.azure.batch.protocol.Jobs.get
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudJob>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getAsync*
  name: getAsync
  nameWithType: Jobs.getAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudJob>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudJob,com.microsoft.azure.batch.protocol.models.JobGetHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobGetHeaders
    name: JobGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Jobs.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobGetOptions
  name: JobGetOptions
  nameWithType: JobGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetOptions
- uid: com.microsoft.azure.batch.protocol.models.JobPatchParameter
  name: JobPatchParameter
  nameWithType: JobPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchParameter
- uid: com.microsoft.azure.batch.protocol.Jobs.patch*
  name: patch
  nameWithType: Jobs.patch
  fullName: com.microsoft.azure.batch.protocol.Jobs.patch
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.patchAsync*
  name: patchAsync
  nameWithType: Jobs.patchAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobPatchHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
    name: JobPatchHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobPatchHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync*
  name: patchWithServiceResponseAsync
  nameWithType: Jobs.patchWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.patchWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobPatchOptions
  name: JobPatchOptions
  nameWithType: JobPatchOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobPatchOptions
- uid: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
  name: JobUpdateParameter
  nameWithType: JobUpdateParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateParameter
- uid: com.microsoft.azure.batch.protocol.Jobs.update*
  name: update
  nameWithType: Jobs.update
  fullName: com.microsoft.azure.batch.protocol.Jobs.update
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
  name: updateAsync
  nameWithType: Jobs.updateAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobUpdateHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
    name: JobUpdateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync*
  name: updateWithServiceResponseAsync
  nameWithType: Jobs.updateWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.updateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
  name: JobUpdateOptions
  nameWithType: JobUpdateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobUpdateOptions
- uid: com.microsoft.azure.batch.protocol.models.DisableJobOption
  name: DisableJobOption
  nameWithType: DisableJobOption
  fullName: com.microsoft.azure.batch.protocol.models.DisableJobOption
- uid: com.microsoft.azure.batch.protocol.Jobs.disable*
  name: disable
  nameWithType: Jobs.disable
  fullName: com.microsoft.azure.batch.protocol.Jobs.disable
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.disableAsync*
  name: disableAsync
  nameWithType: Jobs.disableAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDisableHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
    name: JobDisableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobDisableHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync*
  name: disableWithServiceResponseAsync
  nameWithType: Jobs.disableWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.disableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobDisableOptions
  name: JobDisableOptions
  nameWithType: JobDisableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobDisableOptions
- uid: com.microsoft.azure.batch.protocol.Jobs.enable*
  name: enable
  nameWithType: Jobs.enable
  fullName: com.microsoft.azure.batch.protocol.Jobs.enable
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.enableAsync*
  name: enableAsync
  nameWithType: Jobs.enableAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobEnableHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
    name: JobEnableHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobEnableHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync*
  name: enableWithServiceResponseAsync
  nameWithType: Jobs.enableWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.enableWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobEnableOptions
  name: JobEnableOptions
  nameWithType: JobEnableOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobEnableOptions
- uid: com.microsoft.azure.batch.protocol.Jobs.terminate*
  name: terminate
  nameWithType: Jobs.terminate
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminate
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateAsync*
  name: terminateAsync
  nameWithType: Jobs.terminateAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobTerminateHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
    name: JobTerminateHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync*
  name: terminateWithServiceResponseAsync
  nameWithType: Jobs.terminateWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.terminateWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
  name: JobTerminateOptions
  nameWithType: JobTerminateOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobTerminateOptions
- uid: com.microsoft.azure.batch.protocol.models.JobAddParameter
  name: JobAddParameter
  nameWithType: JobAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.JobAddParameter
- uid: com.microsoft.azure.batch.protocol.Jobs.add*
  name: add
  nameWithType: Jobs.add
  fullName: com.microsoft.azure.batch.protocol.Jobs.add
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.addAsync*
  name: addAsync
  nameWithType: Jobs.addAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.addAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.JobAddHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobAddHeaders
    name: JobAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobAddHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: Jobs.addWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobAddOptions
  name: JobAddOptions
  nameWithType: JobAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobAddOptions
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudJob>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.list*
  name: list
  nameWithType: Jobs.list
  fullName: com.microsoft.azure.batch.protocol.Jobs.list
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudJob>
  spec.java:
  - uid: com.microsoft.azure.ListOperationCallback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudJob>>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listAsync*
  name: listAsync
  nameWithType: Jobs.listAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobListHeaders
    name: JobListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: Jobs.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobListOptions
  name: JobListOptions
  nameWithType: JobListOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListOptions
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule*
  name: listFromJobSchedule
  nameWithType: Jobs.listFromJobSchedule
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobSchedule
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync*
  name: listFromJobScheduleAsync
  nameWithType: Jobs.listFromJobScheduleAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudJob
    name: CloudJob
    fullName: com.microsoft.azure.batch.protocol.models.CloudJob
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
    name: JobListFromJobScheduleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync*
  name: listFromJobScheduleWithServiceResponseAsync
  nameWithType: Jobs.listFromJobScheduleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
  name: JobListFromJobScheduleOptions
  nameWithType: JobListFromJobScheduleOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleOptions
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus*
  name: listPreparationAndReleaseTaskStatus
  nameWithType: Jobs.listPreparationAndReleaseTaskStatus
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatus
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>
  spec.java:
  - uid: com.microsoft.azure.ListOperationCallback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync*
  name: listPreparationAndReleaseTaskStatusAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
    name: JobPreparationAndReleaseTaskExecutionInformation
    fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
    name: JobListPreparationAndReleaseTaskStatusHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync*
  name: listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
  name: JobListPreparationAndReleaseTaskStatusOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusOptions
- uid: com.microsoft.azure.batch.protocol.models.TaskCounts
  name: TaskCounts
  nameWithType: TaskCounts
  fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts*
  name: getTaskCounts
  nameWithType: Jobs.getTaskCounts
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCounts
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.TaskCounts>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.TaskCounts>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync*
  name: getTaskCountsAsync
  nameWithType: Jobs.getTaskCountsAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.TaskCounts>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.TaskCounts,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.TaskCounts
    name: TaskCounts
    fullName: com.microsoft.azure.batch.protocol.models.TaskCounts
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
    name: JobGetTaskCountsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync*
  name: getTaskCountsWithServiceResponseAsync
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
  name: JobGetTaskCountsOptions
  nameWithType: JobGetTaskCountsOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions
- uid: com.microsoft.azure.batch.protocol.Jobs.listNext*
  name: listNext
  nameWithType: Jobs.listNext
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextAsync*
  name: listNextAsync
  nameWithType: Jobs.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: Jobs.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobListNextOptions
  name: JobListNextOptions
  nameWithType: JobListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListNextOptions
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext*
  name: listFromJobScheduleNext
  nameWithType: Jobs.listFromJobScheduleNext
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync*
  name: listFromJobScheduleNextAsync
  nameWithType: Jobs.listFromJobScheduleNextAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync*
  name: listFromJobScheduleNextWithServiceResponseAsync
  nameWithType: Jobs.listFromJobScheduleNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listFromJobScheduleNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
  name: JobListFromJobScheduleNextOptions
  nameWithType: JobListFromJobScheduleNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleNextOptions
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext*
  name: listPreparationAndReleaseTaskStatusNext
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNext
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync*
  name: listPreparationAndReleaseTaskStatusNextAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync*
  name: listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  nameWithType: Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Jobs.listPreparationAndReleaseTaskStatusNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
  name: JobListPreparationAndReleaseTaskStatusNextOptions
  nameWithType: JobListPreparationAndReleaseTaskStatusNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusNextOptions
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: com.microsoft.rest.ServiceResponseWithHeaders
  name: ServiceResponseWithHeaders
  nameWithType: ServiceResponseWithHeaders
  fullName: com.microsoft.rest.ServiceResponseWithHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobStatistics,com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
  name: JobStatistics,JobGetAllLifetimeStatisticsHeaders
  nameWithType: JobStatistics,JobGetAllLifetimeStatisticsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobStatistics,com.microsoft.azure.batch.protocol.models.JobGetAllLifetimeStatisticsHeaders
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
  name: Void,JobDeleteHeaders
  nameWithType: Void,JobDeleteHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDeleteHeaders
- uid: com.microsoft.azure.batch.protocol.models.CloudJob,com.microsoft.azure.batch.protocol.models.JobGetHeaders
  name: CloudJob,JobGetHeaders
  nameWithType: CloudJob,JobGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CloudJob,com.microsoft.azure.batch.protocol.models.JobGetHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobPatchHeaders
  name: Void,JobPatchHeaders
  nameWithType: Void,JobPatchHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobPatchHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
  name: Void,JobUpdateHeaders
  nameWithType: Void,JobUpdateHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobUpdateHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDisableHeaders
  name: Void,JobDisableHeaders
  nameWithType: Void,JobDisableHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobDisableHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobEnableHeaders
  name: Void,JobEnableHeaders
  nameWithType: Void,JobEnableHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobEnableHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
  name: Void,JobTerminateHeaders
  nameWithType: Void,JobTerminateHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobTerminateHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobAddHeaders
  name: Void,JobAddHeaders
  nameWithType: Void,JobAddHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.JobAddHeaders
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: com.microsoft.azure.ListOperationCallback
  name: ListOperationCallback
  nameWithType: ListOperationCallback
  fullName: com.microsoft.azure.ListOperationCallback
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.Page
  name: Page
  nameWithType: Page
  fullName: com.microsoft.azure.Page
- uid: com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListHeaders
  name: CloudJob>,JobListHeaders
  nameWithType: CloudJob>,JobListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListHeaders
- uid: com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
  name: CloudJob>,JobListFromJobScheduleHeaders
  nameWithType: CloudJob>,JobListFromJobScheduleHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CloudJob>,com.microsoft.azure.batch.protocol.models.JobListFromJobScheduleHeaders
- uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
  name: JobPreparationAndReleaseTaskExecutionInformation
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation
- uid: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
  name: JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders
  nameWithType: JobPreparationAndReleaseTaskExecutionInformation>,JobListPreparationAndReleaseTaskStatusHeaders
  fullName: com.microsoft.azure.batch.protocol.models.JobPreparationAndReleaseTaskExecutionInformation>,com.microsoft.azure.batch.protocol.models.JobListPreparationAndReleaseTaskStatusHeaders
- uid: com.microsoft.azure.batch.protocol.models.TaskCounts,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
  name: TaskCounts,JobGetTaskCountsHeaders
  nameWithType: TaskCounts,JobGetTaskCountsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.TaskCounts,com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders
