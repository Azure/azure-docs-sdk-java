### YamlMime:ManagedReference
items:
- uid: com.azure.core.experimental.serializer.ObjectSerializer
  id: ObjectSerializer
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer
  children:
  - com.azure.core.experimental.serializer.ObjectSerializer.<S>serialize(S,java.lang.Object)
  - com.azure.core.experimental.serializer.ObjectSerializer.<T>deserialize(java.io.InputStream,java.lang.Class<T>)
  langs:
  - java
  name: ObjectSerializer
  nameWithType: ObjectSerializer
  fullName: com.azure.core.experimental.serializer.ObjectSerializer
  type: Interface
  package: com.azure.core.experimental.serializer
  summary: Generic interface covering serializing and deserialization objects.
  syntax:
    content: public interface ObjectSerializer
- uid: com.azure.core.experimental.serializer.ObjectSerializer.<S>serialize(S,java.lang.Object)
  id: <S>serialize(S,java.lang.Object)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.ObjectSerializer
  langs:
  - java
  name: <S>serialize(S stream, Object value)
  nameWithType: ObjectSerializer.<S>serialize(S stream, Object value)
  fullName: com.azure.core.experimental.serializer.ObjectSerializer.<S>serialize(S stream, Object value)
  overload: com.azure.core.experimental.serializer.ObjectSerializer.serialize*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Writes the object into a stream.
  syntax:
    content: public abstract Mono<S> <S>serialize(S stream, Object value)
    parameters:
    - id: stream
      type: S
      description: <xref uid="" data-throw-if-not-resolved="false">OutputStream</xref> where the object will be written.
    - id: value
      type: java.lang.Object
      description: The object.
    return:
      type: reactor.core.publisher.Mono<S>
      description: The stream where the object was written.
- uid: com.azure.core.experimental.serializer.ObjectSerializer.<T>deserialize(java.io.InputStream,java.lang.Class<T>)
  id: <T>deserialize(java.io.InputStream,java.lang.Class<T>)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.1
  parent: com.azure.core.experimental.serializer.ObjectSerializer
  langs:
  - java
  name: <T>deserialize(InputStream stream, Class<T> clazz)
  nameWithType: ObjectSerializer.<T>deserialize(InputStream stream, Class<T> clazz)
  fullName: com.azure.core.experimental.serializer.ObjectSerializer.<T>deserialize(InputStream stream, Class<T> clazz)
  overload: com.azure.core.experimental.serializer.ObjectSerializer.deserialize*
  type: Method
  package: com.azure.core.experimental.serializer
  summary: Reads a stream into its object representation.
  syntax:
    content: public abstract Mono<T> <T>deserialize(InputStream stream, Class<T> clazz)
    parameters:
    - id: stream
      type: java.io.InputStream
      description: <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> of data.
    - id: clazz
      type: java.lang.Class<T>
      description: <xref uid="java.lang.Class" data-throw-if-not-resolved="false">Class</xref> representing the object.
    return:
      type: reactor.core.publisher.Mono<T>
      description: The object represented by the deserialized stream.
references:
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<T>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.core.experimental.serializer.ObjectSerializer.deserialize*
  name: <T>deserialize
  nameWithType: ObjectSerializer.<T>deserialize
  fullName: com.azure.core.experimental.serializer.ObjectSerializer.<T>deserialize
  package: com.azure.core.experimental.serializer
- uid: S
  spec.java:
  - uid: S
    name: S
    fullName: S
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: reactor.core.publisher.Mono<S>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: S
    name: S
    fullName: S
  - name: '>'
    fullName: '>'
- uid: com.azure.core.experimental.serializer.ObjectSerializer.serialize*
  name: <S>serialize
  nameWithType: ObjectSerializer.<S>serialize
  fullName: com.azure.core.experimental.serializer.ObjectSerializer.<S>serialize
  package: com.azure.core.experimental.serializer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
