### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Streams.stream*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream"
name: "<T>stream"
nameWithType: "Streams.<T>stream"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(com.azure.cosmos.implementation.guava25.base.Optional<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(Optional<T> optional)"
  name: "<T>stream(Optional<T> optional)"
  nameWithType: "Streams.<T>stream(Optional<T> optional)"
  summary: "If a value is present in `optional`, returns a stream containing only that element, otherwise returns an empty stream."
  parameters:
  - name: "optional"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Optional?alt=com.azure.cosmos.implementation.guava25.base.Optional&text=Optional\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Stream<T> <T>stream(Optional<T> optional)"
  returns:
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.lang.Iterable<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(Iterable<T> iterable)"
  name: "<T>stream(Iterable<T> iterable)"
  nameWithType: "Streams.<T>stream(Iterable<T> iterable)"
  summary: "Returns a sequential <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> of the contents of `iterable`, delegating to <xref uid=\"java.util.Collection.stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection#stream\"></xref> if possible."
  parameters:
  - name: "iterable"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Stream<T> <T>stream(Iterable<T> iterable)"
  returns:
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.util.Collection<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(Collection<T> collection)"
  name: "<T>stream(Collection<T> collection)"
  nameWithType: "Streams.<T>stream(Collection<T> collection)"
  summary: "Returns <xref uid=\"java.util.Collection.stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection#stream\"></xref>."
  parameters:
  - name: "collection"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Stream<T> <T>stream(Collection<T> collection)"
  returns:
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.util.Iterator<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(Iterator<T> iterator)"
  name: "<T>stream(Iterator<T> iterator)"
  nameWithType: "Streams.<T>stream(Iterator<T> iterator)"
  summary: "Returns a sequential <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream\"></xref> of the remaining contents of `iterator`. Do not use `iterator` directly after passing it to this method."
  parameters:
  - name: "iterator"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Stream<T> <T>stream(Iterator<T> iterator)"
  returns:
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(java.util.Optional<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.<T>stream(Optional<T> optional)"
  name: "<T>stream(Optional<T> optional)"
  nameWithType: "Streams.<T>stream(Optional<T> optional)"
  summary: "If a value is present in `optional`, returns a stream containing only that element, otherwise returns an empty stream.\n\n**Java 9 users:** use `optional.stream()` instead."
  parameters:
  - name: "optional"
    type: "<xref href=\"java.util.Optional?alt=java.util.Optional&text=Optional\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Stream<T> <T>stream(Optional<T> optional)"
  returns:
    type: "<xref href=\"java.util.stream.Stream?alt=java.util.stream.Stream&text=Stream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.stream(java.util.OptionalDouble)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.stream(OptionalDouble optional)"
  name: "stream(OptionalDouble optional)"
  nameWithType: "Streams.stream(OptionalDouble optional)"
  summary: "If a value is present in `optional`, returns a stream containing only that element, otherwise returns an empty stream.\n\n**Java 9 users:** use `optional.stream()` instead."
  parameters:
  - name: "optional"
    type: "<xref href=\"java.util.OptionalDouble?alt=java.util.OptionalDouble&text=OptionalDouble\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DoubleStream stream(OptionalDouble optional)"
  returns:
    type: "<xref href=\"java.util.stream.DoubleStream?alt=java.util.stream.DoubleStream&text=DoubleStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.stream(java.util.OptionalInt)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.stream(OptionalInt optional)"
  name: "stream(OptionalInt optional)"
  nameWithType: "Streams.stream(OptionalInt optional)"
  summary: "If a value is present in `optional`, returns a stream containing only that element, otherwise returns an empty stream.\n\n**Java 9 users:** use `optional.stream()` instead."
  parameters:
  - name: "optional"
    type: "<xref href=\"java.util.OptionalInt?alt=java.util.OptionalInt&text=OptionalInt\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static IntStream stream(OptionalInt optional)"
  returns:
    type: "<xref href=\"java.util.stream.IntStream?alt=java.util.stream.IntStream&text=IntStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.Streams.stream(java.util.OptionalLong)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Streams.stream(OptionalLong optional)"
  name: "stream(OptionalLong optional)"
  nameWithType: "Streams.stream(OptionalLong optional)"
  summary: "If a value is present in `optional`, returns a stream containing only that element, otherwise returns an empty stream.\n\n**Java 9 users:** use `optional.stream()` instead."
  parameters:
  - name: "optional"
    type: "<xref href=\"java.util.OptionalLong?alt=java.util.OptionalLong&text=OptionalLong\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LongStream stream(OptionalLong optional)"
  returns:
    type: "<xref href=\"java.util.stream.LongStream?alt=java.util.stream.LongStream&text=LongStream\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
