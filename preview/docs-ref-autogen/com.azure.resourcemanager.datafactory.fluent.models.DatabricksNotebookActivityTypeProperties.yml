### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties"
name: "DatabricksNotebookActivityTypeProperties"
nameWithType: "DatabricksNotebookActivityTypeProperties"
summary: "Databricks Notebook activity properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DatabricksNotebookActivityTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.DatabricksNotebookActivityTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.DatabricksNotebookActivityTypeProperties()"
  name: "DatabricksNotebookActivityTypeProperties()"
  nameWithType: "DatabricksNotebookActivityTypeProperties.DatabricksNotebookActivityTypeProperties()"
  syntax: "public DatabricksNotebookActivityTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.baseParameters()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.baseParameters()"
  name: "baseParameters()"
  nameWithType: "DatabricksNotebookActivityTypeProperties.baseParameters()"
  summary: "Get the base<wbr>Parameters property: Base parameters to be used for each run of this job.<wbr>If the notebook takes a parameter that is not specified, the default value from the notebook will be used."
  syntax: "public Map<String,Object> baseParameters()"
  desc: "Get the baseParameters property: Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used."
  returns:
    description: "the baseParameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.libraries()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.libraries()"
  name: "libraries()"
  nameWithType: "DatabricksNotebookActivityTypeProperties.libraries()"
  summary: "Get the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  syntax: "public List<Map<String,Object>> libraries()"
  desc: "Get the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  returns:
    description: "the libraries value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.notebookPath()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.notebookPath()"
  name: "notebookPath()"
  nameWithType: "DatabricksNotebookActivityTypeProperties.notebookPath()"
  summary: "Get the notebook<wbr>Path property: The absolute path of the notebook to be run in the Databricks Workspace."
  syntax: "public Object notebookPath()"
  desc: "Get the notebookPath property: The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string)."
  returns:
    description: "the notebookPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.validate()"
  name: "validate()"
  nameWithType: "DatabricksNotebookActivityTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.withBaseParameters(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.withBaseParameters(Map<String,Object> baseParameters)"
  name: "withBaseParameters(Map<String,Object> baseParameters)"
  nameWithType: "DatabricksNotebookActivityTypeProperties.withBaseParameters(Map<String,Object> baseParameters)"
  summary: "Set the base<wbr>Parameters property: Base parameters to be used for each run of this job.<wbr>If the notebook takes a parameter that is not specified, the default value from the notebook will be used."
  parameters:
  - description: "the baseParameters value to set."
    name: "baseParameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabricksNotebookActivityTypeProperties withBaseParameters(Map<String,Object> baseParameters)"
  desc: "Set the baseParameters property: Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used."
  returns:
    description: "the DatabricksNotebookActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties&text=DatabricksNotebookActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.withLibraries(java.util.List<java.util.Map<java.lang.String,java.lang.Object>>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.withLibraries(List<Map<String,Object>> libraries)"
  name: "withLibraries(List<Map<String,Object>> libraries)"
  nameWithType: "DatabricksNotebookActivityTypeProperties.withLibraries(List<Map<String,Object>> libraries)"
  summary: "Set the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  parameters:
  - description: "the libraries value to set."
    name: "libraries"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public DatabricksNotebookActivityTypeProperties withLibraries(List<Map<String,Object>> libraries)"
  desc: "Set the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  returns:
    description: "the DatabricksNotebookActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties&text=DatabricksNotebookActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.withNotebookPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties.withNotebookPath(Object notebookPath)"
  name: "withNotebookPath(Object notebookPath)"
  nameWithType: "DatabricksNotebookActivityTypeProperties.withNotebookPath(Object notebookPath)"
  summary: "Set the notebook<wbr>Path property: The absolute path of the notebook to be run in the Databricks Workspace."
  parameters:
  - description: "the notebookPath value to set."
    name: "notebookPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksNotebookActivityTypeProperties withNotebookPath(Object notebookPath)"
  desc: "Set the notebookPath property: The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string)."
  returns:
    description: "the DatabricksNotebookActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.DatabricksNotebookActivityTypeProperties&text=DatabricksNotebookActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Databricks Notebook activity properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
