### YamlMime:JavaType
uid: "com.azure.resourcemanager.logic.models.IntegrationAccountMap.DefinitionStages.WithContent"
fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountMap.DefinitionStages.WithContent"
name: "IntegrationAccountMap.DefinitionStages.WithContent"
nameWithType: "IntegrationAccountMap.DefinitionStages.WithContent"
summary: "The stage of the Integration<wbr>Account<wbr>Map definition allowing to specify content."
syntax: "public static interface IntegrationAccountMap.DefinitionStages.WithContent"
methods:
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountMap.DefinitionStages.WithContent.withContent(java.lang.String)"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountMap.DefinitionStages.WithContent.withContent(String content)"
  name: "withContent(String content)"
  nameWithType: "IntegrationAccountMap.DefinitionStages.WithContent.withContent(String content)"
  summary: "Specifies the content property: The content.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content."
    name: "content"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract IntegrationAccountMap.DefinitionStages.WithCreate withContent(String content)"
  desc: "Specifies the content property: The content.."
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.IntegrationAccountMap.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.logic.models.IntegrationAccountMap.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the IntegrationAccountMap definition allowing to specify content."
metadata: {}
package: "com.azure.resourcemanager.logic.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-logic:1.0.0-beta.1
