### YamlMime:JavaMember
uid: "com.azure.resourcemanager.servicefabric.implementation.ApplicationResourceImpl.withMinimumNodes*"
fullName: "com.azure.resourcemanager.servicefabric.implementation.ApplicationResourceImpl.withMinimumNodes"
name: "withMinimumNodes"
nameWithType: "ApplicationResourceImpl.withMinimumNodes"
members:
- uid: "com.azure.resourcemanager.servicefabric.implementation.ApplicationResourceImpl.withMinimumNodes(java.lang.Long)"
  fullName: "com.azure.resourcemanager.servicefabric.implementation.ApplicationResourceImpl.withMinimumNodes(Long minimumNodes)"
  name: "withMinimumNodes(Long minimumNodes)"
  nameWithType: "ApplicationResourceImpl.withMinimumNodes(Long minimumNodes)"
  summary: "Specifies the minimumNodes property: The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.."
  parameters:
  - name: "minimumNodes"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ApplicationResourceImpl withMinimumNodes(Long minimumNodes)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.implementation.ApplicationResourceImpl?alt=com.azure.resourcemanager.servicefabric.implementation.ApplicationResourceImpl&text=ApplicationResourceImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.servicefabric.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.1
