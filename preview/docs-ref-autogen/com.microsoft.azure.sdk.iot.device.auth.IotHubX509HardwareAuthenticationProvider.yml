### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider"
fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider"
name: "IotHubX509HardwareAuthenticationProvider"
nameWithType: "IotHubX509HardwareAuthenticationProvider"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getIotHubTrustedCert()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getPathToIotHubTrustedCert()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setIotHubTrustedCert(java.lang.String)"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setPathToIotHubTrustedCert(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class IotHubX509HardwareAuthenticationProvider extends IotHubAuthenticationProvider"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.IotHubX509HardwareAuthenticationProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.IotHubX509HardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
  name: "IotHubX509HardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
  nameWithType: "IotHubX509HardwareAuthenticationProvider.IotHubX509HardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
  parameters:
  - name: "hostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "gatewayHostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "securityProvider"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider&text=SecurityProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubX509HardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
fields:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.securityProviderX509"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.securityProviderX509"
  name: "securityProviderX509"
  nameWithType: "IotHubX509HardwareAuthenticationProvider.securityProviderX509"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderX509?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderX509&text=SecurityProviderX509\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected SecurityProviderX509 securityProviderX509"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.getSSLContext()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.getSSLContext()"
  name: "getSSLContext()"
  nameWithType: "IotHubX509HardwareAuthenticationProvider.getSSLContext()"
  summary: "Getter for Iot<wbr>Hub<wbr>SSLContext"
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()"
  syntax: "public SSLContext getSSLContext()"
  exceptions:
  - description: "if an error occurs when generating the SSLContext"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Getter for IotHubSSLContext"
  returns:
    description: "The value of IotHubSSLContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.setIotHubTrustedCert(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.setIotHubTrustedCert(String certificate)"
  name: "setIotHubTrustedCert(String certificate)"
  nameWithType: "IotHubX509HardwareAuthenticationProvider.setIotHubTrustedCert(String certificate)"
  summary: "Setter for the user trusted certificate"
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setIotHubTrustedCert(java.lang.String)"
  parameters:
  - description: "valid user trusted certificate string"
    name: "certificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setIotHubTrustedCert(String certificate)"
  desc: "Setter for the user trusted certificate"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.setPathToIotHubTrustedCert(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubX509HardwareAuthenticationProvider.setPathToIotHubTrustedCert(String pathToCertificate)"
  name: "setPathToIotHubTrustedCert(String pathToCertificate)"
  nameWithType: "IotHubX509HardwareAuthenticationProvider.setPathToIotHubTrustedCert(String pathToCertificate)"
  summary: "Setter for the providing trusted certificate."
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setPathToIotHubTrustedCert(java.lang.String)"
  parameters:
  - description: "path to the certificate for one way authentication."
    name: "pathToCertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setPathToIotHubTrustedCert(String pathToCertificate)"
  desc: "Setter for the providing trusted certificate."
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.auth"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
