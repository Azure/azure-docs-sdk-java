### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  id: RedisResourceInner
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models
  children:
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.RedisResourceInner()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.accessKeys()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.enableNonSslPort()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.hostname()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.linkedServers()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.minimumTlsVersion()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.port()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.provisioningState()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisConfiguration()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisVersion()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.shardCount()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sku()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sslPort()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.staticIp()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.subnetId()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.tenantSettings()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.validate()
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withEnableNonSslPort(java.lang.Boolean)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withShardCount(java.lang.Integer)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSku(com.azure.resourcemanager.redis.models.Sku)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withStaticIp(java.lang.String)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSubnetId(java.lang.String)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withZones(java.util.List<java.lang.String>)
  - com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.zones()
  langs:
  - java
  name: RedisResourceInner
  nameWithType: RedisResourceInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  type: Class
  package: com.azure.resourcemanager.redis.fluent.models
  summary: A single Redis item in List or Get Operation.
  syntax:
    content: public class RedisResourceInner extends Resource
  inheritance:
  - java.lang.Object
  - com.azure.core.management.ProxyResource
  - com.azure.core.management.Resource
  inheritedMembers:
  - com.azure.core.management.ProxyResource.id()
  - com.azure.core.management.ProxyResource.name()
  - com.azure.core.management.ProxyResource.type()
  - com.azure.core.management.Resource.location()
  - com.azure.core.management.Resource.tags()
  - com.azure.core.management.Resource.withLocation(java.lang.String)
  - com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.RedisResourceInner()
  id: RedisResourceInner()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: RedisResourceInner()
  nameWithType: RedisResourceInner.RedisResourceInner()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.RedisResourceInner()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.RedisResourceInner*
  type: Constructor
  package: com.azure.resourcemanager.redis.fluent.models
  syntax:
    content: public RedisResourceInner()
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.accessKeys()
  id: accessKeys()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: accessKeys()
  nameWithType: RedisResourceInner.accessKeys()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.accessKeys()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.accessKeys*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the accessKeys property: The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache.'
  syntax:
    content: public RedisAccessKeysInner accessKeys()
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
      description: the accessKeys value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.enableNonSslPort()
  id: enableNonSslPort()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: enableNonSslPort()
  nameWithType: RedisResourceInner.enableNonSslPort()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.enableNonSslPort()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.enableNonSslPort*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the enableNonSslPort property: Specifies whether the non-ssl Redis server port (6379) is enabled.'
  syntax:
    content: public Boolean enableNonSslPort()
    return:
      type: java.lang.Boolean
      description: the enableNonSslPort value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.hostname()
  id: hostname()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: hostname()
  nameWithType: RedisResourceInner.hostname()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.hostname()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.hostname*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the hostname property: Redis host name.'
  syntax:
    content: public String hostname()
    return:
      type: java.lang.String
      description: the hostname value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.linkedServers()
  id: linkedServers()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: linkedServers()
  nameWithType: RedisResourceInner.linkedServers()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.linkedServers()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.linkedServers*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the linkedServers property: List of the linked servers associated with the cache.'
  syntax:
    content: public List<RedisLinkedServer> linkedServers()
    return:
      type: java.util.List<com.azure.resourcemanager.redis.models.RedisLinkedServer>
      description: the linkedServers value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.minimumTlsVersion()
  id: minimumTlsVersion()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: minimumTlsVersion()
  nameWithType: RedisResourceInner.minimumTlsVersion()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.minimumTlsVersion()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.minimumTlsVersion*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: "Get the minimumTlsVersion property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  syntax:
    content: public TlsVersion minimumTlsVersion()
    return:
      type: com.azure.resourcemanager.redis.models.TlsVersion
      description: the minimumTlsVersion value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.port()
  id: port()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: port()
  nameWithType: RedisResourceInner.port()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.port()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.port*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the port property: Redis non-SSL port.'
  syntax:
    content: public Integer port()
    return:
      type: java.lang.Integer
      description: the port value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.provisioningState()
  id: provisioningState()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: provisioningState()
  nameWithType: RedisResourceInner.provisioningState()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.provisioningState()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.provisioningState*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the provisioningState property: Redis instance provisioning status.'
  syntax:
    content: public ProvisioningState provisioningState()
    return:
      type: com.azure.resourcemanager.redis.models.ProvisioningState
      description: the provisioningState value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisConfiguration()
  id: redisConfiguration()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: redisConfiguration()
  nameWithType: RedisResourceInner.redisConfiguration()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisConfiguration()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisConfiguration*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the redisConfiguration property: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.'
  syntax:
    content: public Map<String,String> redisConfiguration()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the redisConfiguration value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisVersion()
  id: redisVersion()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: redisVersion()
  nameWithType: RedisResourceInner.redisVersion()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisVersion()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisVersion*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the redisVersion property: Redis version.'
  syntax:
    content: public String redisVersion()
    return:
      type: java.lang.String
      description: the redisVersion value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.shardCount()
  id: shardCount()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: shardCount()
  nameWithType: RedisResourceInner.shardCount()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.shardCount()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.shardCount*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the shardCount property: The number of shards to be created on a Premium Cluster Cache.'
  syntax:
    content: public Integer shardCount()
    return:
      type: java.lang.Integer
      description: the shardCount value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sku()
  id: sku()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: sku()
  nameWithType: RedisResourceInner.sku()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sku()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sku*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the sku property: The SKU of the Redis cache to deploy.'
  syntax:
    content: public Sku sku()
    return:
      type: com.azure.resourcemanager.redis.models.Sku
      description: the sku value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sslPort()
  id: sslPort()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: sslPort()
  nameWithType: RedisResourceInner.sslPort()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sslPort()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sslPort*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the sslPort property: Redis SSL port.'
  syntax:
    content: public Integer sslPort()
    return:
      type: java.lang.Integer
      description: the sslPort value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.staticIp()
  id: staticIp()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: staticIp()
  nameWithType: RedisResourceInner.staticIp()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.staticIp()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.staticIp*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the staticIp property: Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.'
  syntax:
    content: public String staticIp()
    return:
      type: java.lang.String
      description: the staticIp value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.subnetId()
  id: subnetId()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: subnetId()
  nameWithType: RedisResourceInner.subnetId()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.subnetId()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.subnetId*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the subnetId property: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/\{subscriptionId\}/resourceGroups/\{resourceGroupName\}/Microsoft.\{Network|ClassicNetwork\}/VirtualNetworks/vnet1/subnets/subnet1.'
  syntax:
    content: public String subnetId()
    return:
      type: java.lang.String
      description: the subnetId value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.tenantSettings()
  id: tenantSettings()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: tenantSettings()
  nameWithType: RedisResourceInner.tenantSettings()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.tenantSettings()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.tenantSettings*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the tenantSettings property: A dictionary of tenant settings.'
  syntax:
    content: public Map<String,String> tenantSettings()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tenantSettings value.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: validate()
  nameWithType: RedisResourceInner.validate()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.validate()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.validate*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withEnableNonSslPort(java.lang.Boolean)
  id: withEnableNonSslPort(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withEnableNonSslPort(Boolean enableNonSslPort)
  nameWithType: RedisResourceInner.withEnableNonSslPort(Boolean enableNonSslPort)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withEnableNonSslPort(Boolean enableNonSslPort)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withEnableNonSslPort*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the enableNonSslPort property: Specifies whether the non-ssl Redis server port (6379) is enabled.'
  syntax:
    content: public RedisResourceInner withEnableNonSslPort(Boolean enableNonSslPort)
    parameters:
    - id: enableNonSslPort
      type: java.lang.Boolean
      description: the enableNonSslPort value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  id: withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  nameWithType: RedisResourceInner.withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withMinimumTlsVersion*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: "Set the minimumTlsVersion property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  syntax:
    content: public RedisResourceInner withMinimumTlsVersion(TlsVersion minimumTlsVersion)
    parameters:
    - id: minimumTlsVersion
      type: com.azure.resourcemanager.redis.models.TlsVersion
      description: the minimumTlsVersion value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  id: withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withRedisConfiguration(Map<String,String> redisConfiguration)
  nameWithType: RedisResourceInner.withRedisConfiguration(Map<String,String> redisConfiguration)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withRedisConfiguration(Map<String,String> redisConfiguration)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withRedisConfiguration*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the redisConfiguration property: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.'
  syntax:
    content: public RedisResourceInner withRedisConfiguration(Map<String,String> redisConfiguration)
    parameters:
    - id: redisConfiguration
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the redisConfiguration value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withShardCount(java.lang.Integer)
  id: withShardCount(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withShardCount(Integer shardCount)
  nameWithType: RedisResourceInner.withShardCount(Integer shardCount)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withShardCount(Integer shardCount)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withShardCount*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the shardCount property: The number of shards to be created on a Premium Cluster Cache.'
  syntax:
    content: public RedisResourceInner withShardCount(Integer shardCount)
    parameters:
    - id: shardCount
      type: java.lang.Integer
      description: the shardCount value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSku(com.azure.resourcemanager.redis.models.Sku)
  id: withSku(com.azure.resourcemanager.redis.models.Sku)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withSku(Sku sku)
  nameWithType: RedisResourceInner.withSku(Sku sku)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSku(Sku sku)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSku*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the sku property: The SKU of the Redis cache to deploy.'
  syntax:
    content: public RedisResourceInner withSku(Sku sku)
    parameters:
    - id: sku
      type: com.azure.resourcemanager.redis.models.Sku
      description: the sku value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withStaticIp(java.lang.String)
  id: withStaticIp(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withStaticIp(String staticIp)
  nameWithType: RedisResourceInner.withStaticIp(String staticIp)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withStaticIp(String staticIp)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withStaticIp*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the staticIp property: Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.'
  syntax:
    content: public RedisResourceInner withStaticIp(String staticIp)
    parameters:
    - id: staticIp
      type: java.lang.String
      description: the staticIp value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSubnetId(java.lang.String)
  id: withSubnetId(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withSubnetId(String subnetId)
  nameWithType: RedisResourceInner.withSubnetId(String subnetId)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSubnetId(String subnetId)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSubnetId*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the subnetId property: The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/\{subscriptionId\}/resourceGroups/\{resourceGroupName\}/Microsoft.\{Network|ClassicNetwork\}/VirtualNetworks/vnet1/subnets/subnet1.'
  syntax:
    content: public RedisResourceInner withSubnetId(String subnetId)
    parameters:
    - id: subnetId
      type: java.lang.String
      description: the subnetId value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  id: withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withTenantSettings(Map<String,String> tenantSettings)
  nameWithType: RedisResourceInner.withTenantSettings(Map<String,String> tenantSettings)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withTenantSettings(Map<String,String> tenantSettings)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withTenantSettings*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the tenantSettings property: A dictionary of tenant settings.'
  syntax:
    content: public RedisResourceInner withTenantSettings(Map<String,String> tenantSettings)
    parameters:
    - id: tenantSettings
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tenantSettings value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withZones(java.util.List<java.lang.String>)
  id: withZones(java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: withZones(List<String> zones)
  nameWithType: RedisResourceInner.withZones(List<String> zones)
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withZones(List<String> zones)
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withZones*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Set the zones property: A list of availability zones denoting where the resource needs to come from.'
  syntax:
    content: public RedisResourceInner withZones(List<String> zones)
    parameters:
    - id: zones
      type: java.util.List<java.lang.String>
      description: the zones value to set.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
      description: the RedisResourceInner object itself.
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.zones()
  id: zones()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner
  langs:
  - java
  name: zones()
  nameWithType: RedisResourceInner.zones()
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.zones()
  overload: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.zones*
  type: Method
  package: com.azure.resourcemanager.redis.fluent.models
  summary: 'Get the zones property: A list of availability zones denoting where the resource needs to come from.'
  syntax:
    content: public List<String> zones()
    return:
      type: java.util.List<java.lang.String>
      description: the zones value.
references:
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.RedisResourceInner*
  name: RedisResourceInner
  nameWithType: RedisResourceInner.RedisResourceInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.RedisResourceInner
  package: com.azure.resourcemanager.redis.fluent.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.zones*
  name: zones
  nameWithType: RedisResourceInner.zones
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.zones
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withZones*
  name: withZones
  nameWithType: RedisResourceInner.withZones
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withZones
  package: com.azure.resourcemanager.redis.fluent.models
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisConfiguration*
  name: redisConfiguration
  nameWithType: RedisResourceInner.redisConfiguration
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisConfiguration
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withRedisConfiguration*
  name: withRedisConfiguration
  nameWithType: RedisResourceInner.withRedisConfiguration
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withRedisConfiguration
  package: com.azure.resourcemanager.redis.fluent.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.enableNonSslPort*
  name: enableNonSslPort
  nameWithType: RedisResourceInner.enableNonSslPort
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.enableNonSslPort
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withEnableNonSslPort*
  name: withEnableNonSslPort
  nameWithType: RedisResourceInner.withEnableNonSslPort
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withEnableNonSslPort
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.tenantSettings*
  name: tenantSettings
  nameWithType: RedisResourceInner.tenantSettings
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.tenantSettings
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withTenantSettings*
  name: withTenantSettings
  nameWithType: RedisResourceInner.withTenantSettings
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withTenantSettings
  package: com.azure.resourcemanager.redis.fluent.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.shardCount*
  name: shardCount
  nameWithType: RedisResourceInner.shardCount
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.shardCount
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withShardCount*
  name: withShardCount
  nameWithType: RedisResourceInner.withShardCount
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withShardCount
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.models.TlsVersion
  name: TlsVersion
  nameWithType: TlsVersion
  fullName: com.azure.resourcemanager.redis.models.TlsVersion
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.minimumTlsVersion*
  name: minimumTlsVersion
  nameWithType: RedisResourceInner.minimumTlsVersion
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.minimumTlsVersion
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withMinimumTlsVersion*
  name: withMinimumTlsVersion
  nameWithType: RedisResourceInner.withMinimumTlsVersion
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withMinimumTlsVersion
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.models.Sku
  name: Sku
  nameWithType: Sku
  fullName: com.azure.resourcemanager.redis.models.Sku
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sku*
  name: sku
  nameWithType: RedisResourceInner.sku
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sku
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSku*
  name: withSku
  nameWithType: RedisResourceInner.withSku
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSku
  package: com.azure.resourcemanager.redis.fluent.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.subnetId*
  name: subnetId
  nameWithType: RedisResourceInner.subnetId
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.subnetId
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSubnetId*
  name: withSubnetId
  nameWithType: RedisResourceInner.withSubnetId
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withSubnetId
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.staticIp*
  name: staticIp
  nameWithType: RedisResourceInner.staticIp
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.staticIp
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withStaticIp*
  name: withStaticIp
  nameWithType: RedisResourceInner.withStaticIp
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.withStaticIp
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisVersion*
  name: redisVersion
  nameWithType: RedisResourceInner.redisVersion
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.redisVersion
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.models.ProvisioningState
  name: ProvisioningState
  nameWithType: ProvisioningState
  fullName: com.azure.resourcemanager.redis.models.ProvisioningState
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.provisioningState*
  name: provisioningState
  nameWithType: RedisResourceInner.provisioningState
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.provisioningState
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.hostname*
  name: hostname
  nameWithType: RedisResourceInner.hostname
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.hostname
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.port*
  name: port
  nameWithType: RedisResourceInner.port
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.port
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sslPort*
  name: sslPort
  nameWithType: RedisResourceInner.sslPort
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.sslPort
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
  name: RedisAccessKeysInner
  nameWithType: RedisAccessKeysInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisAccessKeysInner
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.accessKeys*
  name: accessKeys
  nameWithType: RedisResourceInner.accessKeys
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.accessKeys
  package: com.azure.resourcemanager.redis.fluent.models
- uid: java.util.List<com.azure.resourcemanager.redis.models.RedisLinkedServer>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.models.RedisLinkedServer
    name: RedisLinkedServer
    fullName: com.azure.resourcemanager.redis.models.RedisLinkedServer
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.linkedServers*
  name: linkedServers
  nameWithType: RedisResourceInner.linkedServers
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.linkedServers
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.validate*
  name: validate
  nameWithType: RedisResourceInner.validate
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisResourceInner.validate
  package: com.azure.resourcemanager.redis.fluent.models
- uid: com.azure.core.management.Resource
  name: Resource
  nameWithType: Resource
  fullName: com.azure.core.management.Resource
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.core.management.Resource.location()
  name: Resource.location()
  nameWithType: Resource.location()
  fullName: com.azure.core.management.Resource.location()
- uid: com.azure.core.management.ProxyResource.id()
  name: ProxyResource.id()
  nameWithType: ProxyResource.id()
  fullName: com.azure.core.management.ProxyResource.id()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.management.ProxyResource.name()
  name: ProxyResource.name()
  nameWithType: ProxyResource.name()
  fullName: com.azure.core.management.ProxyResource.name()
- uid: com.azure.core.management.Resource.tags()
  name: Resource.tags()
  nameWithType: Resource.tags()
  fullName: com.azure.core.management.Resource.tags()
- uid: com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)
  name: Resource.withTags(Map<String,String>)
  nameWithType: Resource.withTags(Map<String,String>)
  fullName: com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)
- uid: com.azure.core.management.Resource.withLocation(java.lang.String)
  name: Resource.withLocation(String)
  nameWithType: Resource.withLocation(String)
  fullName: com.azure.core.management.Resource.withLocation(java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.management.ProxyResource.type()
  name: ProxyResource.type()
  nameWithType: ProxyResource.type()
  fullName: com.azure.core.management.ProxyResource.type()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.azure.resourcemanager.redis.models.RedisLinkedServer
  name: RedisLinkedServer
  nameWithType: RedisLinkedServer
  fullName: com.azure.resourcemanager.redis.models.RedisLinkedServer
- uid: com.azure.core.management.Resource.withTags(java.util.Map
  name: Resource.withTags(Map
  nameWithType: Resource.withTags(Map
  fullName: com.azure.core.management.Resource.withTags(java.util.Map
- uid: java.lang.String,java.lang.String>)
  name: String,String>)
  nameWithType: String,String>)
  fullName: java.lang.String,java.lang.String>)
