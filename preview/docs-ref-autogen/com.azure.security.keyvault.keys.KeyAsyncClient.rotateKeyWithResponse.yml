### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.rotateKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.rotateKeyWithResponse"
name: "rotateKeyWithResponse"
nameWithType: "KeyAsyncClient.rotateKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.rotateKeyWithResponse(java.lang.String)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.rotateKeyWithResponse(String name)"
  name: "rotateKeyWithResponse(String name)"
  nameWithType: "KeyAsyncClient.rotateKeyWithResponse(String name)"
  summary: "Rotates a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. The rotate key operation will do so based on <xref uid=\"com.azure.security.keyvault.keys.models.KeyRotationPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key's rotation policy\"></xref>. This operation requires the `keys/rotate` permission.\n\n**Code Samples**\n\nRotates a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. Subscribes to the call asynchronously and prints out the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP Response\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rotated key\"></xref> details when a response has been received.\n\n```java\nkeyAsyncClient.rotateKeyWithResponse(\"keyName\")\n     .subscribe(rotateKeyResponse ->\n         System.out.printf(\"Response received successfully with status code: %d. Rotated key with name: %s and\"\n                 + \"version: %s%n\", rotateKeyResponse.getStatusCode(), rotateKeyResponse.getValue().getName(),\n             rotateKeyResponse.getValue().getProperties().getVersion()));\n```"
  parameters:
  - description: "The name of <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> to be rotated. The system will generate a new version in the\n specified <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultKey>> rotateKeyWithResponse(String name)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> for this operation and the new version of\n the rotated <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.5
