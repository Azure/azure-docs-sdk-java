### YamlMime:JavaType
uid: "com.azure.search.documents.models.VectorizableImageUrlQuery"
fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery"
name: "VectorizableImageUrlQuery"
nameWithType: "VectorizableImageUrlQuery"
summary: "The query parameters to use for vector search when an url that represents an image value that needs to be vectorized is provided."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.models.VectorQuery?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.fromJson(com.azure.json.JsonReader)?alt=com.azure.search.documents.models.VectorQuery.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.getFields()?alt=com.azure.search.documents.models.VectorQuery.getFields&text=getFields\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.getFilterOverride()?alt=com.azure.search.documents.models.VectorQuery.getFilterOverride&text=getFilterOverride\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.getKNearestNeighborsCount()?alt=com.azure.search.documents.models.VectorQuery.getKNearestNeighborsCount&text=getKNearestNeighborsCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.getKind()?alt=com.azure.search.documents.models.VectorQuery.getKind&text=getKind\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.getOversampling()?alt=com.azure.search.documents.models.VectorQuery.getOversampling&text=getOversampling\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.getThreshold()?alt=com.azure.search.documents.models.VectorQuery.getThreshold&text=getThreshold\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.getWeight()?alt=com.azure.search.documents.models.VectorQuery.getWeight&text=getWeight\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.isExhaustive()?alt=com.azure.search.documents.models.VectorQuery.isExhaustive&text=isExhaustive\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.setExhaustive(java.lang.Boolean)?alt=com.azure.search.documents.models.VectorQuery.setExhaustive&text=setExhaustive\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.setFields(java.lang.String...)?alt=com.azure.search.documents.models.VectorQuery.setFields&text=setFields\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.setFilterOverride(java.lang.String)?alt=com.azure.search.documents.models.VectorQuery.setFilterOverride&text=setFilterOverride\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.setKNearestNeighborsCount(java.lang.Integer)?alt=com.azure.search.documents.models.VectorQuery.setKNearestNeighborsCount&text=setKNearestNeighborsCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.setOversampling(java.lang.Double)?alt=com.azure.search.documents.models.VectorQuery.setOversampling&text=setOversampling\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.setThreshold(com.azure.search.documents.models.VectorThreshold)?alt=com.azure.search.documents.models.VectorQuery.setThreshold&text=setThreshold\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.setWeight(java.lang.Float)?alt=com.azure.search.documents.models.VectorQuery.setWeight&text=setWeight\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.models.VectorQuery.toJson(com.azure.json.JsonWriter)?alt=com.azure.search.documents.models.VectorQuery.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **VectorizableImageUrlQuery**</br> extends <xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.VectorizableImageUrlQuery()"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.VectorizableImageUrlQuery()"
  name: "VectorizableImageUrlQuery()"
  nameWithType: "VectorizableImageUrlQuery.VectorizableImageUrlQuery()"
  summary: "Creates an instance of Vectorizable<wbr>Image<wbr>Url<wbr>Query class."
  syntax: "public VectorizableImageUrlQuery()"
  desc: "Creates an instance of VectorizableImageUrlQuery class."
methods:
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "VectorizableImageUrlQuery.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Vectorizable<wbr>Image<wbr>Url<wbr>Query from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static VectorizableImageUrlQuery fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the VectorizableImageUrlQuery."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of VectorizableImageUrlQuery from the JsonReader."
  returns:
    description: "An instance of VectorizableImageUrlQuery if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.getKind()"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.getKind()"
  name: "getKind()"
  nameWithType: "VectorizableImageUrlQuery.getKind()"
  summary: "Get the kind property: The kind of vector query being performed."
  overridden: "com.azure.search.documents.models.VectorQuery.getKind()"
  syntax: "public VectorQueryKind getKind()"
  desc: "Get the kind property: The kind of vector query being performed."
  returns:
    description: "the kind value."
    type: "<xref href=\"com.azure.search.documents.models.VectorQueryKind?alt=com.azure.search.documents.models.VectorQueryKind&text=VectorQueryKind\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.getUrl()"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.getUrl()"
  name: "getUrl()"
  nameWithType: "VectorizableImageUrlQuery.getUrl()"
  summary: "Get the url property: The URL of an image to be vectorized to perform a vector search query."
  syntax: "public String getUrl()"
  desc: "Get the url property: The URL of an image to be vectorized to perform a vector search query."
  returns:
    description: "the url value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setExhaustive(java.lang.Boolean)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setExhaustive(Boolean exhaustive)"
  name: "setExhaustive(Boolean exhaustive)"
  nameWithType: "VectorizableImageUrlQuery.setExhaustive(Boolean exhaustive)"
  summary: "Set the exhaustive property: When true, triggers an exhaustive k-nearest neighbor search across all vectors within the vector index."
  overridden: "com.azure.search.documents.models.VectorQuery.setExhaustive(java.lang.Boolean)"
  parameters:
  - name: "exhaustive"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public VectorizableImageUrlQuery setExhaustive(Boolean exhaustive)"
  desc: "Set the exhaustive property: When true, triggers an exhaustive k-nearest neighbor search across all vectors within the vector index. Useful for scenarios where exact matches are critical, such as determining ground truth values."
  returns:
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setFields(java.lang.String...)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setFields(String[] fields)"
  name: "setFields(String[] fields)"
  nameWithType: "VectorizableImageUrlQuery.setFields(String[] fields)"
  summary: "Set the fields property: Vector Fields of type Collection(Edm.<wbr>Single) to be included in the vector searched."
  overridden: "com.azure.search.documents.models.VectorQuery.setFields(java.lang.String...)"
  parameters:
  - name: "fields"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
  syntax: "public VectorizableImageUrlQuery setFields(String[] fields)"
  desc: "Set the fields property: Vector Fields of type Collection(Edm.Single) to be included in the vector searched."
  returns:
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setFilterOverride(java.lang.String)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setFilterOverride(String filterOverride)"
  name: "setFilterOverride(String filterOverride)"
  nameWithType: "VectorizableImageUrlQuery.setFilterOverride(String filterOverride)"
  summary: "Set the filter<wbr>Override property: The OData filter expression to apply to this specific vector query."
  overridden: "com.azure.search.documents.models.VectorQuery.setFilterOverride(java.lang.String)"
  parameters:
  - name: "filterOverride"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VectorizableImageUrlQuery setFilterOverride(String filterOverride)"
  desc: "Set the filterOverride property: The OData filter expression to apply to this specific vector query. If no filter expression is defined at the vector level, the expression defined in the top level filter parameter is used instead."
  returns:
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setKNearestNeighborsCount(java.lang.Integer)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  name: "setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  nameWithType: "VectorizableImageUrlQuery.setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  summary: "Set the k<wbr>Nearest<wbr>Neighbors<wbr>Count property: Number of nearest neighbors to return as top hits."
  overridden: "com.azure.search.documents.models.VectorQuery.setKNearestNeighborsCount(java.lang.Integer)"
  parameters:
  - name: "kNearestNeighborsCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public VectorizableImageUrlQuery setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  desc: "Set the kNearestNeighborsCount property: Number of nearest neighbors to return as top hits."
  returns:
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setOversampling(java.lang.Double)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setOversampling(Double oversampling)"
  name: "setOversampling(Double oversampling)"
  nameWithType: "VectorizableImageUrlQuery.setOversampling(Double oversampling)"
  summary: "Set the oversampling property: Oversampling factor."
  overridden: "com.azure.search.documents.models.VectorQuery.setOversampling(java.lang.Double)"
  parameters:
  - name: "oversampling"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Double</a>"
  syntax: "public VectorizableImageUrlQuery setOversampling(Double oversampling)"
  desc: "Set the oversampling property: Oversampling factor. Minimum value is 1. It overrides the 'defaultOversampling' parameter configured in the index definition. It can be set only when 'rerankWithOriginalVectors' is true. This parameter is only permitted when a compression method is used on the underlying vector field."
  returns:
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setThreshold(com.azure.search.documents.models.VectorThreshold)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setThreshold(VectorThreshold threshold)"
  name: "setThreshold(VectorThreshold threshold)"
  nameWithType: "VectorizableImageUrlQuery.setThreshold(VectorThreshold threshold)"
  summary: "Set the threshold property: The threshold used for vector queries."
  overridden: "com.azure.search.documents.models.VectorQuery.setThreshold(com.azure.search.documents.models.VectorThreshold)"
  parameters:
  - name: "threshold"
    type: "<xref href=\"com.azure.search.documents.models.VectorThreshold?alt=com.azure.search.documents.models.VectorThreshold&text=VectorThreshold\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VectorizableImageUrlQuery setThreshold(VectorThreshold threshold)"
  desc: "Set the threshold property: The threshold used for vector queries. Note this can only be set if all 'fields' use the same similarity metric."
  returns:
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setUrl(java.lang.String)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setUrl(String url)"
  name: "setUrl(String url)"
  nameWithType: "VectorizableImageUrlQuery.setUrl(String url)"
  summary: "Set the url property: The URL of an image to be vectorized to perform a vector search query."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VectorizableImageUrlQuery setUrl(String url)"
  desc: "Set the url property: The URL of an image to be vectorized to perform a vector search query."
  returns:
    description: "the VectorizableImageUrlQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.setWeight(java.lang.Float)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.setWeight(Float weight)"
  name: "setWeight(Float weight)"
  nameWithType: "VectorizableImageUrlQuery.setWeight(Float weight)"
  summary: "Set the weight property: Relative weight of the vector query when compared to other vector query and/or the text query within the same search request."
  overridden: "com.azure.search.documents.models.VectorQuery.setWeight(java.lang.Float)"
  parameters:
  - name: "weight"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html\">Float</a>"
  syntax: "public VectorizableImageUrlQuery setWeight(Float weight)"
  desc: "Set the weight property: Relative weight of the vector query when compared to other vector query and/or the text query within the same search request. This value is used when combining the results of multiple ranking lists produced by the different vector queries and/or the results retrieved through the text query. The higher the weight, the higher the documents that matched that query will be in the final ranking. Default is 1.0 and the value needs to be a positive number larger than zero."
  returns:
    type: "<xref href=\"com.azure.search.documents.models.VectorizableImageUrlQuery?alt=com.azure.search.documents.models.VectorizableImageUrlQuery&text=VectorizableImageUrlQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorizableImageUrlQuery.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.models.VectorizableImageUrlQuery.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "VectorizableImageUrlQuery.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.search.documents.models.VectorQuery.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The query parameters to use for vector search when an url that represents an image value that needs to be vectorized is provided."
metadata: {}
package: "com.azure.search.documents.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
