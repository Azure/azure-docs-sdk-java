### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.io.OutputDecorator
  id: OutputDecorator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io
  children:
  - com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator()
  - com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)
  - com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)
  langs:
  - java
  name: OutputDecorator
  nameWithType: OutputDecorator
  fullName: com.fasterxml.jackson.core.io.OutputDecorator
  type: Class
  package: com.fasterxml.jackson.core.io
  summary: Handler class that can be used to decorate output destinations. Typical use is to use a filter abstraction (filtered output stream, writer) around original output destination, and apply additional processing during write operations.
  syntax:
    content: public abstract class OutputDecorator implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator()
  id: OutputDecorator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.OutputDecorator
  langs:
  - java
  name: OutputDecorator()
  nameWithType: OutputDecorator.OutputDecorator()
  fullName: com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator()
  overload: com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator*
  type: Constructor
  package: com.fasterxml.jackson.core.io
  syntax:
    content: public OutputDecorator()
- uid: com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)
  id: decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.OutputDecorator
  langs:
  - java
  name: decorate(IOContext ctxt, OutputStream out)
  nameWithType: OutputDecorator.decorate(IOContext ctxt, OutputStream out)
  fullName: com.fasterxml.jackson.core.io.OutputDecorator.decorate(IOContext ctxt, OutputStream out)
  overload: com.fasterxml.jackson.core.io.OutputDecorator.decorate*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Method called by <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonFactory</xref> instance when creating generator for given <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref>, when this decorator has been registered.
  syntax:
    content: public abstract OutputStream decorate(IOContext ctxt, OutputStream out)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
      description: IO context in use (provides access to declared encoding)
    - id: out
      type: java.io.OutputStream
      description: Original output destination
    return:
      type: java.io.OutputStream
      description: >-
        OutputStream to use; either passed in argument, or something that
           calls it
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.io.OutputDecorator.decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)
  id: decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.io.OutputDecorator
  langs:
  - java
  name: decorate(IOContext ctxt, Writer w)
  nameWithType: OutputDecorator.decorate(IOContext ctxt, Writer w)
  fullName: com.fasterxml.jackson.core.io.OutputDecorator.decorate(IOContext ctxt, Writer w)
  overload: com.fasterxml.jackson.core.io.OutputDecorator.decorate*
  type: Method
  package: com.fasterxml.jackson.core.io
  summary: Method called by <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonFactory</xref> instance when creating generator for given <xref uid="java.io.Writer" data-throw-if-not-resolved="false">Writer</xref>, when this decorator has been registered.
  syntax:
    content: public abstract Writer decorate(IOContext ctxt, Writer w)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
      description: IO context in use (provides access to declared encoding)
    - id: w
      type: java.io.Writer
      description: Original output writer
    return:
      type: java.io.Writer
      description: Writer to use; either passed in argument, or something that calls it
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator*
  name: OutputDecorator
  nameWithType: OutputDecorator.OutputDecorator
  fullName: com.fasterxml.jackson.core.io.OutputDecorator.OutputDecorator
  package: com.fasterxml.jackson.core.io
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.io.IOContext
  name: IOContext
  nameWithType: IOContext
  fullName: com.fasterxml.jackson.core.io.IOContext
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.fasterxml.jackson.core.io.OutputDecorator.decorate*
  name: decorate
  nameWithType: OutputDecorator.decorate
  fullName: com.fasterxml.jackson.core.io.OutputDecorator.decorate
  package: com.fasterxml.jackson.core.io
- uid: java.io.Writer
  spec.java:
  - uid: java.io.Writer
    name: Writer
    fullName: java.io.Writer
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
