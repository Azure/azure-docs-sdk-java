### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAnomaliesForAlert*"
fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAnomaliesForAlert"
name: "listAnomaliesForAlert"
nameWithType: "MetricsAdvisorClient.listAnomaliesForAlert"
members:
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAnomaliesForAlert(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  name: "listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  nameWithType: "MetricsAdvisorClient.listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  summary: "Fetch the anomalies in an alert.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final String alertId = \"1746b031c00\";\n PagedIterable<DataPointAnomaly> anomaliesIterable = metricsAdvisorClient.listAnomaliesForAlert(\n     alertConfigurationId,\n     alertId\n );\n \n for (DataPointAnomaly dataPointAnomaly : anomaliesIterable) {\n     System.out.printf(\"Data Feed Metric Id: %s%n\", dataPointAnomaly.getMetricId());\n     System.out.printf(\"Detection Configuration Id: %s%n\", dataPointAnomaly.getDetectionConfigurationId());\n     System.out.printf(\"DataPoint Anomaly Created Time: %s%n\", dataPointAnomaly.getCreatedTime());\n     System.out.printf(\"DataPoint Anomaly Modified Time: %s%n\", dataPointAnomaly.getModifiedTime());\n     System.out.printf(\"DataPoint Anomaly AnomalySeverity: %s%n\", dataPointAnomaly.getSeverity());\n     System.out.printf(\"DataPoint Anomaly Status: %s%n\", dataPointAnomaly.getStatus());\n     System.out.printf(\"Series Key:\");\n     System.out.println(dataPointAnomaly.getSeriesKey().asMap());\n }\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The alert id."
    name: "alertId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<DataPointAnomaly> listAnomaliesForAlert(String alertConfigurationId, String alertId)"
  returns:
    description: "The anomalies."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DataPointAnomaly?alt=com.azure.ai.metricsadvisor.models.DataPointAnomaly&text=DataPointAnomaly\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAnomaliesForAlert(java.lang.String,java.lang.String,com.azure.ai.metricsadvisor.models.ListAnomaliesAlertedOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options, Context context)"
  name: "listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options, Context context)"
  nameWithType: "MetricsAdvisorClient.listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options, Context context)"
  summary: "Fetch the anomalies in an alert.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final String alertId = \"1746b031c00\";\n final ListAnomaliesAlertedOptions options = new ListAnomaliesAlertedOptions()\n     .setTop(10);\n PagedIterable<DataPointAnomaly> anomaliesIterable = metricsAdvisorClient.listAnomaliesForAlert(\n     alertConfigurationId,\n     alertId,\n     options,\n     Context.NONE);\n \n Stream<PagedResponse<DataPointAnomaly>> anomaliesPageStream = anomaliesIterable.streamByPage();\n int[] pageCount = new int[1];\n anomaliesPageStream.forEach(anomaliesPage -> {\n     System.out.printf(\"Page: %d%n\", pageCount[0]++);\n     IterableStream<DataPointAnomaly> anomaliesPageItems = anomaliesPage.getElements();\n     for (DataPointAnomaly dataPointAnomaly : anomaliesPageItems) {\n         System.out.printf(\"Data Feed Metric Id: %s%n\", dataPointAnomaly.getMetricId());\n         System.out.printf(\"Detection Configuration Id: %s%n\", dataPointAnomaly.getDetectionConfigurationId());\n         System.out.printf(\"DataPoint Anomaly Created Time: %s%n\", dataPointAnomaly.getCreatedTime());\n         System.out.printf(\"DataPoint Anomaly Modified Time: %s%n\", dataPointAnomaly.getModifiedTime());\n         System.out.printf(\"DataPoint Anomaly AnomalySeverity: %s%n\", dataPointAnomaly.getSeverity());\n         System.out.printf(\"DataPoint Anomaly Status: %s%n\", dataPointAnomaly.getStatus());\n         System.out.printf(\"Series Key:\");\n         System.out.println(dataPointAnomaly.getSeriesKey().asMap());\n     }\n });\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The alert id."
    name: "alertId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListAnomaliesAlertedOptions?alt=com.azure.ai.metricsadvisor.models.ListAnomaliesAlertedOptions&text=ListAnomaliesAlertedOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<DataPointAnomaly> listAnomaliesForAlert(String alertConfigurationId, String alertId, ListAnomaliesAlertedOptions options, Context context)"
  returns:
    description: "The anomalies."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DataPointAnomaly?alt=com.azure.ai.metricsadvisor.models.DataPointAnomaly&text=DataPointAnomaly\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
