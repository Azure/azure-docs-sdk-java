### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Ordering.allEqual*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Ordering<T>.allEqual"
name: "allEqual"
nameWithType: "Ordering<T>.allEqual"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Ordering.allEqual()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Ordering<T>.allEqual()"
  name: "allEqual()"
  nameWithType: "Ordering<T>.allEqual()"
  summary: "Returns an ordering which treats all values as equal, indicating \"no ordering.\" Passing this ordering to any *stable* sort algorithm results in no change to the order of elements. Note especially that <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Ordering.sortedCopy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#sortedCopy\"></xref> and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Ordering.immutableSortedCopy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#immutableSortedCopy\"></xref> are stable, and in the returned instance these are implemented by simply copying the source list.\n\nExample:\n\n```java\nOrdering.allEqual().nullsLast().sortedCopy(\n     asList(t, null, e, s, null, t, null))\n```\n\nAssuming `t`, `e` and `s` are non-null, this returns `[t, e, s, t, null, null, null]` regardless of the true comparison order of those three values (which might not even implement <xref uid=\"java.lang.Comparable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable\"></xref> at all).\n\n**Warning:** by definition, this comparator is not *consistent with equals* (as defined <xref uid=\"? extends java.util.Comparator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"here\"></xref>). Avoid its use in APIs, such as <xref uid=\"java.util.TreeSet.TreeSet*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TreeSet#TreeSet(Comparator)\"></xref>, where such consistency is expected.\n\nThe returned comparator is serializable.\n\n**Java 8 users:** Use the lambda expression `(a, b) -> 0` instead (in certain cases you may need to cast that to `Comparator`)."
  syntax: "public static Ordering<Object> allEqual()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Ordering?alt=com.azure.cosmos.implementation.guava25.collect.Ordering&text=Ordering\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
