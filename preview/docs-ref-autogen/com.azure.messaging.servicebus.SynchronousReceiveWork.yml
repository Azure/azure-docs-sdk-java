### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.SynchronousReceiveWork
  id: SynchronousReceiveWork
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus
  langs:
  - java
  name: SynchronousReceiveWork
  nameWithType: SynchronousReceiveWork
  fullName: com.azure.messaging.servicebus.SynchronousReceiveWork
  type: Class
  package: com.azure.messaging.servicebus
  summary: Synchronous work for receiving messages.
  syntax:
    content: " class SynchronousReceiveWork"
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.SynchronousReceiveWork.SynchronousReceiveWork(long,int,java.time.Duration,reactor.core.publisher.FluxSink<com.azure.messaging.servicebus.ServiceBusReceivedMessageContext>)
  id: SynchronousReceiveWork(long,int,java.time.Duration,reactor.core.publisher.FluxSink<com.azure.messaging.servicebus.ServiceBusReceivedMessageContext>)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.SynchronousReceiveWork
  langs:
  - java
  name: SynchronousReceiveWork(long id, int numberToReceive, Duration timeout, FluxSink<ServiceBusReceivedMessageContext> emitter)
  nameWithType: SynchronousReceiveWork.SynchronousReceiveWork(long id, int numberToReceive, Duration timeout, FluxSink<ServiceBusReceivedMessageContext> emitter)
  fullName: com.azure.messaging.servicebus.SynchronousReceiveWork.SynchronousReceiveWork(long id, int numberToReceive, Duration timeout, FluxSink<ServiceBusReceivedMessageContext> emitter)
  overload: com.azure.messaging.servicebus.SynchronousReceiveWork.SynchronousReceiveWork*
  type: Constructor
  package: com.azure.messaging.servicebus
  summary: Creates a new synchronous receive work.
  syntax:
    content: " SynchronousReceiveWork(long id, int numberToReceive, Duration timeout, FluxSink<ServiceBusReceivedMessageContext> emitter)"
    parameters:
    - id: id
      type: long
      description: Identifier for the work.
    - id: numberToReceive
      type: int
      description: Maximum number of events to receive.
    - id: timeout
      type: java.time.Duration
      description: Maximum duration to wait for <code>numberOfReceive</code> events.
    - id: emitter
      type: reactor.core.publisher.FluxSink<com.azure.messaging.servicebus.ServiceBusReceivedMessageContext>
      description: Sink to publish received messages to.
references:
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: reactor.core.publisher.FluxSink<com.azure.messaging.servicebus.ServiceBusReceivedMessageContext>
  spec.java:
  - uid: reactor.core.publisher.FluxSink
    name: FluxSink
    fullName: reactor.core.publisher.FluxSink
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
    name: ServiceBusReceivedMessageContext
    fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.SynchronousReceiveWork.SynchronousReceiveWork*
  name: SynchronousReceiveWork
  nameWithType: SynchronousReceiveWork.SynchronousReceiveWork
  fullName: com.azure.messaging.servicebus.SynchronousReceiveWork.SynchronousReceiveWork
  package: com.azure.messaging.servicebus
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  name: ServiceBusReceivedMessageContext
  nameWithType: ServiceBusReceivedMessageContext
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
- uid: reactor.core.publisher.FluxSink
  name: FluxSink
  nameWithType: FluxSink
  fullName: reactor.core.publisher.FluxSink
