### YamlMime:JavaType
uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties"
fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties"
name: "SignalRProperties"
nameWithType: "SignalRProperties"
summary: "A class that describes the properties of the resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SignalRProperties"
constructors:
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.SignalRProperties()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.SignalRProperties()"
  name: "SignalRProperties()"
  nameWithType: "SignalRProperties.SignalRProperties()"
  syntax: "public SignalRProperties()"
methods:
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.cors()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.cors()"
  name: "cors()"
  nameWithType: "SignalRProperties.cors()"
  summary: "Get the cors property: Cross-Origin Resource Sharing (CORS) settings."
  syntax: "public SignalRCorsSettings cors()"
  desc: "Get the cors property: Cross-Origin Resource Sharing (CORS) settings."
  returns:
    description: "the cors value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRCorsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRCorsSettings&text=SignalRCorsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.disableAadAuth()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.disableAadAuth()"
  name: "disableAadAuth()"
  nameWithType: "SignalRProperties.disableAadAuth()"
  summary: "Get the disable<wbr>Aad<wbr>Auth property: Disable<wbr>Local<wbr>Auth Enable or disable aad auth When set as true, connection with Auth<wbr>Type=aad won't work."
  syntax: "public Boolean disableAadAuth()"
  desc: "Get the disableAadAuth property: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won't work."
  returns:
    description: "the disableAadAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "SignalRProperties.disableLocalAuth()"
  summary: "Get the disable<wbr>Local<wbr>Auth property: Disable<wbr>Local<wbr>Auth Enable or disable local auth with Access<wbr>Key When set as true, connection with Access<wbr>Key=xxx won't work."
  syntax: "public Boolean disableLocalAuth()"
  desc: "Get the disableLocalAuth property: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won't work."
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.externalIp()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.externalIp()"
  name: "externalIp()"
  nameWithType: "SignalRProperties.externalIp()"
  summary: "Get the external<wbr>Ip property: The publicly accessible IP of the resource."
  syntax: "public String externalIp()"
  desc: "Get the externalIp property: The publicly accessible IP of the resource."
  returns:
    description: "the externalIp value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.features()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.features()"
  name: "features()"
  nameWithType: "SignalRProperties.features()"
  summary: "Get the features property: List of the feature<wbr>Flags."
  syntax: "public List<SignalRFeature> features()"
  desc: "Get the features property: List of the featureFlags.\n\nFeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags."
  returns:
    description: "the features value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.SignalRFeature?alt=com.azure.resourcemanager.signalr.models.SignalRFeature&text=SignalRFeature\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.hostname()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.hostname()"
  name: "hostname()"
  nameWithType: "SignalRProperties.hostname()"
  summary: "Get the hostname property: FQDN of the service instance."
  syntax: "public String hostname()"
  desc: "Get the hostname property: FQDN of the service instance."
  returns:
    description: "the hostname value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.hostnamePrefix()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.hostnamePrefix()"
  name: "hostnamePrefix()"
  nameWithType: "SignalRProperties.hostnamePrefix()"
  summary: "Get the hostname<wbr>Prefix property: Deprecated."
  syntax: "public String hostnamePrefix()"
  desc: "Get the hostnamePrefix property: Deprecated."
  returns:
    description: "the hostnamePrefix value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.liveTraceConfiguration()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.liveTraceConfiguration()"
  name: "liveTraceConfiguration()"
  nameWithType: "SignalRProperties.liveTraceConfiguration()"
  summary: "Get the live<wbr>Trace<wbr>Configuration property: Live trace configuration of a Microsoft.<wbr>Signal<wbr>RService resource."
  syntax: "public LiveTraceConfiguration liveTraceConfiguration()"
  desc: "Get the liveTraceConfiguration property: Live trace configuration of a Microsoft.SignalRService resource."
  returns:
    description: "the liveTraceConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.LiveTraceConfiguration?alt=com.azure.resourcemanager.signalr.models.LiveTraceConfiguration&text=LiveTraceConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.networkACLs()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.networkACLs()"
  name: "networkACLs()"
  nameWithType: "SignalRProperties.networkACLs()"
  summary: "Get the network<wbr>ACLs property: Network ACLs for the resource."
  syntax: "public SignalRNetworkACLs networkACLs()"
  desc: "Get the networkACLs property: Network ACLs for the resource."
  returns:
    description: "the networkACLs value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRNetworkACLs?alt=com.azure.resourcemanager.signalr.models.SignalRNetworkACLs&text=SignalRNetworkACLs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "SignalRProperties.privateEndpointConnections()"
  summary: "Get the private<wbr>Endpoint<wbr>Connections property: Private endpoint connections to the resource."
  syntax: "public List<PrivateEndpointConnectionInner> privateEndpointConnections()"
  desc: "Get the privateEndpointConnections property: Private endpoint connections to the resource."
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.PrivateEndpointConnectionInner?alt=com.azure.resourcemanager.signalr.fluent.models.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "SignalRProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ProvisioningState?alt=com.azure.resourcemanager.signalr.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "SignalRProperties.publicNetworkAccess()"
  summary: "Get the public<wbr>Network<wbr>Access property: Enable or disable public network access."
  syntax: "public String publicNetworkAccess()"
  desc: "Get the publicNetworkAccess property: Enable or disable public network access. Default to \"Enabled\". When it's Enabled, network ACLs still apply. When it's Disabled, public network access is always disabled no matter what you set in network ACLs."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.publicPort()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.publicPort()"
  name: "publicPort()"
  nameWithType: "SignalRProperties.publicPort()"
  summary: "Get the public<wbr>Port property: The publicly accessible port of the resource which is designed for browser/client side usage."
  syntax: "public Integer publicPort()"
  desc: "Get the publicPort property: The publicly accessible port of the resource which is designed for browser/client side usage."
  returns:
    description: "the publicPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.resourceLogConfiguration()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.resourceLogConfiguration()"
  name: "resourceLogConfiguration()"
  nameWithType: "SignalRProperties.resourceLogConfiguration()"
  summary: "Get the resource<wbr>Log<wbr>Configuration property: Resource log configuration of a Microsoft.<wbr>Signal<wbr>RService resource."
  syntax: "public ResourceLogConfiguration resourceLogConfiguration()"
  desc: "Get the resourceLogConfiguration property: Resource log configuration of a Microsoft.SignalRService resource."
  returns:
    description: "the resourceLogConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ResourceLogConfiguration?alt=com.azure.resourcemanager.signalr.models.ResourceLogConfiguration&text=ResourceLogConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.serverPort()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.serverPort()"
  name: "serverPort()"
  nameWithType: "SignalRProperties.serverPort()"
  summary: "Get the server<wbr>Port property: The publicly accessible port of the resource which is designed for customer server side usage."
  syntax: "public Integer serverPort()"
  desc: "Get the serverPort property: The publicly accessible port of the resource which is designed for customer server side usage."
  returns:
    description: "the serverPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.sharedPrivateLinkResources()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.sharedPrivateLinkResources()"
  name: "sharedPrivateLinkResources()"
  nameWithType: "SignalRProperties.sharedPrivateLinkResources()"
  summary: "Get the shared<wbr>Private<wbr>Link<wbr>Resources property: The list of shared private link resources."
  syntax: "public List<SharedPrivateLinkResourceInner> sharedPrivateLinkResources()"
  desc: "Get the sharedPrivateLinkResources property: The list of shared private link resources."
  returns:
    description: "the sharedPrivateLinkResources value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SharedPrivateLinkResourceInner?alt=com.azure.resourcemanager.signalr.fluent.models.SharedPrivateLinkResourceInner&text=SharedPrivateLinkResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.tls()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.tls()"
  name: "tls()"
  nameWithType: "SignalRProperties.tls()"
  summary: "Get the tls property: TLS settings for the resource."
  syntax: "public SignalRTlsSettings tls()"
  desc: "Get the tls property: TLS settings for the resource."
  returns:
    description: "the tls value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRTlsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRTlsSettings&text=SignalRTlsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.upstream()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.upstream()"
  name: "upstream()"
  nameWithType: "SignalRProperties.upstream()"
  summary: "Get the upstream property: The settings for the Upstream when the service is in server-less mode."
  syntax: "public ServerlessUpstreamSettings upstream()"
  desc: "Get the upstream property: The settings for the Upstream when the service is in server-less mode."
  returns:
    description: "the upstream value."
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings?alt=com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings&text=ServerlessUpstreamSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.validate()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.validate()"
  name: "validate()"
  nameWithType: "SignalRProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.version()"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.version()"
  name: "version()"
  nameWithType: "SignalRProperties.version()"
  summary: "Get the version property: Version of the resource."
  syntax: "public String version()"
  desc: "Get the version property: Version of the resource. Probably you need the same or higher version of client SDKs."
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withCors(com.azure.resourcemanager.signalr.models.SignalRCorsSettings)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withCors(SignalRCorsSettings cors)"
  name: "withCors(SignalRCorsSettings cors)"
  nameWithType: "SignalRProperties.withCors(SignalRCorsSettings cors)"
  summary: "Set the cors property: Cross-Origin Resource Sharing (CORS) settings."
  parameters:
  - description: "the cors value to set."
    name: "cors"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRCorsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRCorsSettings&text=SignalRCorsSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withCors(SignalRCorsSettings cors)"
  desc: "Set the cors property: Cross-Origin Resource Sharing (CORS) settings."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withDisableAadAuth(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withDisableAadAuth(Boolean disableAadAuth)"
  name: "withDisableAadAuth(Boolean disableAadAuth)"
  nameWithType: "SignalRProperties.withDisableAadAuth(Boolean disableAadAuth)"
  summary: "Set the disable<wbr>Aad<wbr>Auth property: Disable<wbr>Local<wbr>Auth Enable or disable aad auth When set as true, connection with Auth<wbr>Type=aad won't work."
  parameters:
  - description: "the disableAadAuth value to set."
    name: "disableAadAuth"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withDisableAadAuth(Boolean disableAadAuth)"
  desc: "Set the disableAadAuth property: DisableLocalAuth Enable or disable aad auth When set as true, connection with AuthType=aad won't work."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withDisableLocalAuth(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withDisableLocalAuth(Boolean disableLocalAuth)"
  name: "withDisableLocalAuth(Boolean disableLocalAuth)"
  nameWithType: "SignalRProperties.withDisableLocalAuth(Boolean disableLocalAuth)"
  summary: "Set the disable<wbr>Local<wbr>Auth property: Disable<wbr>Local<wbr>Auth Enable or disable local auth with Access<wbr>Key When set as true, connection with Access<wbr>Key=xxx won't work."
  parameters:
  - description: "the disableLocalAuth value to set."
    name: "disableLocalAuth"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withDisableLocalAuth(Boolean disableLocalAuth)"
  desc: "Set the disableLocalAuth property: DisableLocalAuth Enable or disable local auth with AccessKey When set as true, connection with AccessKey=xxx won't work."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withFeatures(java.util.List<com.azure.resourcemanager.signalr.models.SignalRFeature>)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withFeatures(List<SignalRFeature> features)"
  name: "withFeatures(List<SignalRFeature> features)"
  nameWithType: "SignalRProperties.withFeatures(List<SignalRFeature> features)"
  summary: "Set the features property: List of the feature<wbr>Flags."
  parameters:
  - description: "the features value to set."
    name: "features"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.signalr.models.SignalRFeature?alt=com.azure.resourcemanager.signalr.models.SignalRFeature&text=SignalRFeature\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SignalRProperties withFeatures(List<SignalRFeature> features)"
  desc: "Set the features property: List of the featureFlags.\n\nFeatureFlags that are not included in the parameters for the update operation will not be modified. And the response will only include featureFlags that are explicitly set. When a featureFlag is not explicitly set, its globally default value will be used But keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withLiveTraceConfiguration(com.azure.resourcemanager.signalr.models.LiveTraceConfiguration)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withLiveTraceConfiguration(LiveTraceConfiguration liveTraceConfiguration)"
  name: "withLiveTraceConfiguration(LiveTraceConfiguration liveTraceConfiguration)"
  nameWithType: "SignalRProperties.withLiveTraceConfiguration(LiveTraceConfiguration liveTraceConfiguration)"
  summary: "Set the live<wbr>Trace<wbr>Configuration property: Live trace configuration of a Microsoft.<wbr>Signal<wbr>RService resource."
  parameters:
  - description: "the liveTraceConfiguration value to set."
    name: "liveTraceConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.LiveTraceConfiguration?alt=com.azure.resourcemanager.signalr.models.LiveTraceConfiguration&text=LiveTraceConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withLiveTraceConfiguration(LiveTraceConfiguration liveTraceConfiguration)"
  desc: "Set the liveTraceConfiguration property: Live trace configuration of a Microsoft.SignalRService resource."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withNetworkACLs(com.azure.resourcemanager.signalr.models.SignalRNetworkACLs)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withNetworkACLs(SignalRNetworkACLs networkACLs)"
  name: "withNetworkACLs(SignalRNetworkACLs networkACLs)"
  nameWithType: "SignalRProperties.withNetworkACLs(SignalRNetworkACLs networkACLs)"
  summary: "Set the network<wbr>ACLs property: Network ACLs for the resource."
  parameters:
  - description: "the networkACLs value to set."
    name: "networkACLs"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRNetworkACLs?alt=com.azure.resourcemanager.signalr.models.SignalRNetworkACLs&text=SignalRNetworkACLs\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withNetworkACLs(SignalRNetworkACLs networkACLs)"
  desc: "Set the networkACLs property: Network ACLs for the resource."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withPublicNetworkAccess(java.lang.String)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withPublicNetworkAccess(String publicNetworkAccess)"
  name: "withPublicNetworkAccess(String publicNetworkAccess)"
  nameWithType: "SignalRProperties.withPublicNetworkAccess(String publicNetworkAccess)"
  summary: "Set the public<wbr>Network<wbr>Access property: Enable or disable public network access."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withPublicNetworkAccess(String publicNetworkAccess)"
  desc: "Set the publicNetworkAccess property: Enable or disable public network access. Default to \"Enabled\". When it's Enabled, network ACLs still apply. When it's Disabled, public network access is always disabled no matter what you set in network ACLs."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withResourceLogConfiguration(com.azure.resourcemanager.signalr.models.ResourceLogConfiguration)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withResourceLogConfiguration(ResourceLogConfiguration resourceLogConfiguration)"
  name: "withResourceLogConfiguration(ResourceLogConfiguration resourceLogConfiguration)"
  nameWithType: "SignalRProperties.withResourceLogConfiguration(ResourceLogConfiguration resourceLogConfiguration)"
  summary: "Set the resource<wbr>Log<wbr>Configuration property: Resource log configuration of a Microsoft.<wbr>Signal<wbr>RService resource."
  parameters:
  - description: "the resourceLogConfiguration value to set."
    name: "resourceLogConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ResourceLogConfiguration?alt=com.azure.resourcemanager.signalr.models.ResourceLogConfiguration&text=ResourceLogConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withResourceLogConfiguration(ResourceLogConfiguration resourceLogConfiguration)"
  desc: "Set the resourceLogConfiguration property: Resource log configuration of a Microsoft.SignalRService resource."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withTls(com.azure.resourcemanager.signalr.models.SignalRTlsSettings)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withTls(SignalRTlsSettings tls)"
  name: "withTls(SignalRTlsSettings tls)"
  nameWithType: "SignalRProperties.withTls(SignalRTlsSettings tls)"
  summary: "Set the tls property: TLS settings for the resource."
  parameters:
  - description: "the tls value to set."
    name: "tls"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.SignalRTlsSettings?alt=com.azure.resourcemanager.signalr.models.SignalRTlsSettings&text=SignalRTlsSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withTls(SignalRTlsSettings tls)"
  desc: "Set the tls property: TLS settings for the resource."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withUpstream(com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings)"
  fullName: "com.azure.resourcemanager.signalr.fluent.models.SignalRProperties.withUpstream(ServerlessUpstreamSettings upstream)"
  name: "withUpstream(ServerlessUpstreamSettings upstream)"
  nameWithType: "SignalRProperties.withUpstream(ServerlessUpstreamSettings upstream)"
  summary: "Set the upstream property: The settings for the Upstream when the service is in server-less mode."
  parameters:
  - description: "the upstream value to set."
    name: "upstream"
    type: "<xref href=\"com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings?alt=com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings&text=ServerlessUpstreamSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SignalRProperties withUpstream(ServerlessUpstreamSettings upstream)"
  desc: "Set the upstream property: The settings for the Upstream when the service is in server-less mode."
  returns:
    description: "the SignalRProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.signalr.fluent.models.SignalRProperties?alt=com.azure.resourcemanager.signalr.fluent.models.SignalRProperties&text=SignalRProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A class that describes the properties of the resource."
metadata: {}
package: "com.azure.resourcemanager.signalr.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-signalr:1.0.0-beta.4
