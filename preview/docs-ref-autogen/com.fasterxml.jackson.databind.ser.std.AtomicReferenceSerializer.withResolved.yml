### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer.withResolved*"
fullName: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer.withResolved"
name: "withResolved"
nameWithType: "AtomicReferenceSerializer.withResolved"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer.withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.util.NameTransformer)"
  fullName: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer.withResolved(BeanProperty prop, TypeSerializer vts, JsonSerializer<?> valueSer, NameTransformer unwrapper)"
  name: "withResolved(BeanProperty prop, TypeSerializer vts, JsonSerializer<?> valueSer, NameTransformer unwrapper)"
  nameWithType: "AtomicReferenceSerializer.withResolved(BeanProperty prop, TypeSerializer vts, JsonSerializer<?> valueSer, NameTransformer unwrapper)"
  summary: "Mutant factory method called when changes are needed; should construct newly configured instance with new values as indicated.\n\nNOTE: caller has verified that there are changes, so implementations need NOT check if a new instance is needed."
  overridden: "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.util.NameTransformer)"
  parameters:
  - name: "prop"
    type: "<xref href=\"com.fasterxml.jackson.databind.BeanProperty?alt=com.fasterxml.jackson.databind.BeanProperty&text=BeanProperty\" data-throw-if-not-resolved=\"False\" />"
  - name: "vts"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer?alt=com.fasterxml.jackson.databind.jsontype.TypeSerializer&text=TypeSerializer\" data-throw-if-not-resolved=\"False\" />"
  - name: "valueSer"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "unwrapper"
    type: "<xref href=\"com.fasterxml.jackson.databind.util.NameTransformer?alt=com.fasterxml.jackson.databind.util.NameTransformer&text=NameTransformer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected ReferenceTypeSerializer<AtomicReference<?>> withResolved(BeanProperty prop, TypeSerializer vts, JsonSerializer<?> valueSer, NameTransformer unwrapper)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer?alt=com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer&text=ReferenceTypeSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.concurrent.atomic.AtomicReference?alt=java.util.concurrent.atomic.AtomicReference&text=AtomicReference\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
