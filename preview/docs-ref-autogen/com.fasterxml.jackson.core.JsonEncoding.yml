### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.JsonEncoding
  id: JsonEncoding
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.JsonEncoding.UTF16_BE
  - com.fasterxml.jackson.core.JsonEncoding.UTF16_LE
  - com.fasterxml.jackson.core.JsonEncoding.UTF32_BE
  - com.fasterxml.jackson.core.JsonEncoding.UTF32_LE
  - com.fasterxml.jackson.core.JsonEncoding.UTF8
  - com.fasterxml.jackson.core.JsonEncoding.bits()
  - com.fasterxml.jackson.core.JsonEncoding.getJavaName()
  - com.fasterxml.jackson.core.JsonEncoding.isBigEndian()
  - com.fasterxml.jackson.core.JsonEncoding.valueOf(java.lang.String)
  - com.fasterxml.jackson.core.JsonEncoding.values()
  langs:
  - java
  name: JsonEncoding
  nameWithType: JsonEncoding
  fullName: com.fasterxml.jackson.core.JsonEncoding
  type: Enum
  package: com.fasterxml.jackson.core
  summary: >-
    Enumeration that defines legal encodings that can be used for JSON content, based on list of allowed encodings from [JSON specification][].


    Note: if application want to explicitly disregard Encoding limitations (to read in JSON encoded using an encoding not listed as allowed), they can use <xref uid="java.io.Reader" data-throw-if-not-resolved="false">java.io.Reader</xref> / <xref uid="java.io.Writer" data-throw-if-not-resolved="false">java.io.Writer</xref> instances as input



    [JSON specification]: http://www.ietf.org/rfc/rfc4627.txt
  syntax:
    content: public enum JsonEncoding extends Enum<JsonEncoding>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(java.lang.String,boolean,int)
  id: JsonEncoding(java.lang.String,boolean,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: JsonEncoding(String javaName, boolean bigEndian, int bits)
  nameWithType: JsonEncoding.JsonEncoding(String javaName, boolean bigEndian, int bits)
  fullName: com.fasterxml.jackson.core.JsonEncoding.JsonEncoding(String javaName, boolean bigEndian, int bits)
  overload: com.fasterxml.jackson.core.JsonEncoding.JsonEncoding*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: private JsonEncoding(String javaName, boolean bigEndian, int bits)
    parameters:
    - id: javaName
      type: java.lang.String
    - id: bigEndian
      type: boolean
    - id: bits
      type: int
- uid: com.fasterxml.jackson.core.JsonEncoding.UTF16_BE
  id: UTF16_BE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: UTF16_BE
  nameWithType: JsonEncoding.UTF16_BE
  fullName: com.fasterxml.jackson.core.JsonEncoding.UTF16_BE
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: public static final JsonEncoding UTF16_BE
    return:
      type: com.fasterxml.jackson.core.JsonEncoding
- uid: com.fasterxml.jackson.core.JsonEncoding.UTF16_LE
  id: UTF16_LE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: UTF16_LE
  nameWithType: JsonEncoding.UTF16_LE
  fullName: com.fasterxml.jackson.core.JsonEncoding.UTF16_LE
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: public static final JsonEncoding UTF16_LE
    return:
      type: com.fasterxml.jackson.core.JsonEncoding
- uid: com.fasterxml.jackson.core.JsonEncoding.UTF32_BE
  id: UTF32_BE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: UTF32_BE
  nameWithType: JsonEncoding.UTF32_BE
  fullName: com.fasterxml.jackson.core.JsonEncoding.UTF32_BE
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: public static final JsonEncoding UTF32_BE
    return:
      type: com.fasterxml.jackson.core.JsonEncoding
- uid: com.fasterxml.jackson.core.JsonEncoding.UTF32_LE
  id: UTF32_LE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: UTF32_LE
  nameWithType: JsonEncoding.UTF32_LE
  fullName: com.fasterxml.jackson.core.JsonEncoding.UTF32_LE
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: public static final JsonEncoding UTF32_LE
    return:
      type: com.fasterxml.jackson.core.JsonEncoding
- uid: com.fasterxml.jackson.core.JsonEncoding.UTF8
  id: UTF8
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: UTF8
  nameWithType: JsonEncoding.UTF8
  fullName: com.fasterxml.jackson.core.JsonEncoding.UTF8
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: public static final JsonEncoding UTF8
    return:
      type: com.fasterxml.jackson.core.JsonEncoding
- uid: com.fasterxml.jackson.core.JsonEncoding.bits()
  id: bits()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: bits()
  nameWithType: JsonEncoding.bits()
  fullName: com.fasterxml.jackson.core.JsonEncoding.bits()
  overload: com.fasterxml.jackson.core.JsonEncoding.bits*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int bits()
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonEncoding.getJavaName()
  id: getJavaName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: getJavaName()
  nameWithType: JsonEncoding.getJavaName()
  fullName: com.fasterxml.jackson.core.JsonEncoding.getJavaName()
  overload: com.fasterxml.jackson.core.JsonEncoding.getJavaName*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for accessing encoding name that JDK will support.
  syntax:
    content: public String getJavaName()
    return:
      type: java.lang.String
      description: Matching encoding name that JDK will support.
- uid: com.fasterxml.jackson.core.JsonEncoding.isBigEndian()
  id: isBigEndian()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: isBigEndian()
  nameWithType: JsonEncoding.isBigEndian()
  fullName: com.fasterxml.jackson.core.JsonEncoding.isBigEndian()
  overload: com.fasterxml.jackson.core.JsonEncoding.isBigEndian*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Whether encoding is big-endian (if encoding supports such notion). If no such distinction is made (as is the case for <xref uid="com.fasterxml.jackson.core.JsonEncoding.UTF8" data-throw-if-not-resolved="false">#UTF8</xref>), return value is undefined.
  syntax:
    content: public boolean isBigEndian()
    return:
      type: boolean
      description: >-
        True for big-endian encodings; false for little-endian
           (or if not applicable)
- uid: com.fasterxml.jackson.core.JsonEncoding.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: valueOf(String name)
  nameWithType: JsonEncoding.valueOf(String name)
  fullName: com.fasterxml.jackson.core.JsonEncoding.valueOf(String name)
  overload: com.fasterxml.jackson.core.JsonEncoding.valueOf*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static JsonEncoding valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonEncoding
- uid: com.fasterxml.jackson.core.JsonEncoding.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonEncoding
  langs:
  - java
  name: values()
  nameWithType: JsonEncoding.values()
  fullName: com.fasterxml.jackson.core.JsonEncoding.values()
  overload: com.fasterxml.jackson.core.JsonEncoding.values*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static JsonEncoding[] values()
    return:
      type: com.fasterxml.jackson.core.JsonEncoding[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.JsonEncoding.JsonEncoding*
  name: JsonEncoding
  nameWithType: JsonEncoding.JsonEncoding
  fullName: com.fasterxml.jackson.core.JsonEncoding.JsonEncoding
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonEncoding[]
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonEncoding
    name: JsonEncoding
    fullName: com.fasterxml.jackson.core.JsonEncoding
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonEncoding.values*
  name: values
  nameWithType: JsonEncoding.values
  fullName: com.fasterxml.jackson.core.JsonEncoding.values
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonEncoding.valueOf*
  name: valueOf
  nameWithType: JsonEncoding.valueOf
  fullName: com.fasterxml.jackson.core.JsonEncoding.valueOf
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonEncoding.getJavaName*
  name: getJavaName
  nameWithType: JsonEncoding.getJavaName
  fullName: com.fasterxml.jackson.core.JsonEncoding.getJavaName
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonEncoding.isBigEndian*
  name: isBigEndian
  nameWithType: JsonEncoding.isBigEndian
  fullName: com.fasterxml.jackson.core.JsonEncoding.isBigEndian
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonEncoding.bits*
  name: bits
  nameWithType: JsonEncoding.bits
  fullName: com.fasterxml.jackson.core.JsonEncoding.bits
  package: com.fasterxml.jackson.core
- uid: java.lang.Enum<com.fasterxml.jackson.core.JsonEncoding>
  name: Enum<JsonEncoding>
  nameWithType: Enum<JsonEncoding>
  fullName: java.lang.Enum<com.fasterxml.jackson.core.JsonEncoding>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
