### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.orderedBy*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>orderedBy"
name: "<E>orderedBy"
nameWithType: "ImmutableSortedSet<E>.<E>orderedBy"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.<E>orderedBy(java.util.Comparator<E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet<E>.<E>orderedBy(Comparator<E> comparator)"
  name: "<E>orderedBy(Comparator<E> comparator)"
  nameWithType: "ImmutableSortedSet<E>.<E>orderedBy(Comparator<E> comparator)"
  summary: "Returns a builder that creates immutable sorted sets with an explicit comparator. If the comparator has a more general type than the set being generated, such as creating a `SortedSet` with a `Comparator`, use the <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.Builder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Builder\"></xref> constructor instead."
  parameters:
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSortedSet.Builder<E> <E>orderedBy(Comparator<E> comparator)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.Builder?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
