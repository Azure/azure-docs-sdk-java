### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse*"
fullName: "com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse"
name: "getCopyAuthorizationWithResponse"
nameWithType: "FormTrainingAsyncClient.getCopyAuthorizationWithResponse"
members:
- uid: "com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)"
  name: "getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)"
  nameWithType: "FormTrainingAsyncClient.getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)"
  summary: "Generate authorization for copying a custom model into the target Form Recognizer resource. This should be called by the target resource (where the model will be copied to) and the output can be passed as the target parameter into <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FormTrainingAsyncClient#beginCopyModel(String, CopyAuthorization)\"></xref>."
  parameters:
  - description: "Azure Resource Id of the target Form Recognizer resource where the model will be copied to."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Location of the target Form Recognizer resource. A valid Azure region name supported by\n Cognitive Services.\n\n <p><strong>Code sample</strong></p>\n <pre>\n String resourceId = &quot;target-resource-Id&quot;;\n String resourceRegion = &quot;target-resource-region&quot;;\n formTrainingAsyncClient.getCopyAuthorizationWithResponse&#40;resourceId, resourceRegion&#41;\n     .subscribe&#40;copyAuthorization -&gt;\n         System.out.printf&#40;&quot;Copy Authorization response status: %s, for model id: %s, access token: %s, &quot;\n                 + &quot;expiration time: %s, target resource Id; %s, target resource region: %s%n&quot;,\n         copyAuthorization.getStatusCode&#40;&#41;,\n         copyAuthorization.getValue&#40;&#41;.getModelId&#40;&#41;,\n         copyAuthorization.getValue&#40;&#41;.getAccessToken&#40;&#41;,\n         copyAuthorization.getValue&#40;&#41;.getExpiresOn&#40;&#41;,\n         copyAuthorization.getValue&#40;&#41;.getResourceId&#40;&#41;,\n         copyAuthorization.getValue&#40;&#41;.getResourceRegion&#40;&#41;\n     &#41;&#41;;\n </pre>"
    name: "resourceRegion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<CopyAuthorization>> getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the <xref uid=\"com.azure.ai.formrecognizer.training.models.CopyAuthorization\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CopyAuthorization\"></xref> that could be used to authorize copying\n model between resources."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.training.models.CopyAuthorization?alt=com.azure.ai.formrecognizer.training.models.CopyAuthorization&text=CopyAuthorization\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer.training"
artifact: com.azure:azure-ai-formrecognizer:3.1.0-beta.1
