### YamlMime:JavaMember
uid: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon*"
fullName: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon"
name: "abandon"
nameWithType: "ServiceBusReceiverAsyncClient.abandon"
members:
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon(com.azure.messaging.servicebus.ServiceBusReceivedMessage)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon(ServiceBusReceivedMessage message)"
  name: "abandon(ServiceBusReceivedMessage message)"
  nameWithType: "ServiceBusReceiverAsyncClient.abandon(ServiceBusReceivedMessage message)"
  summary: "Abandon a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref>. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> abandon(ServiceBusReceivedMessage message)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when the Service Bus abandon operation completes."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon(com.azure.messaging.servicebus.ServiceBusReceivedMessage,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify)"
  name: "abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify)"
  nameWithType: "ServiceBusReceiverAsyncClient.abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify)"
  summary: "Abandon a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> updates the message's properties. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "Properties to modify on the message."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Void> abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when the Service Bus operation finishes."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon(com.azure.messaging.servicebus.ServiceBusReceivedMessage,java.util.Map<java.lang.String,java.lang.Object>,com.azure.messaging.servicebus.ServiceBusTransactionContext)"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)"
  name: "abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)"
  nameWithType: "ServiceBusReceiverAsyncClient.abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)"
  summary: "Abandon a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"message\"></xref> with its lock token and updates the message's properties. This will make the message available again for processing. Abandoning a message will increase the delivery count on the message.\n\n**Complete a message with a transaction**\n\n```java\n// messageContext: This is instance `ServiceBusReceivedMessageContext` which you have received previously.\n // propertiesToModify : This is Map of any properties to modify while abandoning the message.\n // transactionContext: This is the transaction which you have created previously.\n \n // Keep a reference to `subscription`. When the program is finished receiving messages, call\n // subscription.dispose(). This will dispose it cleanly.\n Disposable subscriber = receiver.abandon(messageContext.getMessage(), propertiesToModify,\n     transactionContext).subscribe();\n \n // When all the messages are processed and settled, you should commit/rollback this transaction.\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceivedMessage\"></xref> to perform this operation."
    name: "message"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceivedMessage?alt=com.azure.messaging.servicebus.ServiceBusReceivedMessage&text=ServiceBusReceivedMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "Properties to modify on the message."
    name: "propertiesToModify"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "in which this operation is taking part in. The transaction should be created first by\n <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient.createTransaction()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverAsyncClient#createTransaction()\"></xref> or\n <xref uid=\"com.azure.messaging.servicebus.ServiceBusSenderAsyncClient.createTransaction()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusSenderAsyncClient#createTransaction()\"></xref>."
    name: "transactionContext"
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusTransactionContext?alt=com.azure.messaging.servicebus.ServiceBusTransactionContext&text=ServiceBusTransactionContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> abandon(ServiceBusReceivedMessage message, Map<String,Object> propertiesToModify, ServiceBusTransactionContext transactionContext)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when the Service Bus operation finishes."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.6
