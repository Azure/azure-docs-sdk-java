### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer"
fullName: "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer"
name: "AsExternalTypeDeserializer"
nameWithType: "AsExternalTypeDeserializer"
summary: "Type deserializer used with <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"As#EXTERNAL_PROPERTY\"></xref> inclusion mechanism. Actual implementation may look bit strange since it depends on comprehensive pre-processing done by <xref uid=\"com.fasterxml.jackson.databind.deser.BeanDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.deser.BeanDeserializer\"></xref> to basically transform external type id into structure that looks more like \"wrapper-array\" style inclusion. This intermediate form is chosen to allow supporting all possible JSON structures."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AsExternalTypeDeserializer extends AsArrayTypeDeserializer"
constructors:
- "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer.AsExternalTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer.AsExternalTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)"
methods:
- "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer._usesExternalId()"
- "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer.getTypeInclusion()"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
