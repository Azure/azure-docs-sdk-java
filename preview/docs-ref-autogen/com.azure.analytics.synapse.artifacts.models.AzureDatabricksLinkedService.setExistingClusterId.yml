### YamlMime:JavaMember
uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksLinkedService.setExistingClusterId*"
fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksLinkedService.setExistingClusterId"
name: "setExistingClusterId"
nameWithType: "AzureDatabricksLinkedService.setExistingClusterId"
members:
- uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksLinkedService.setExistingClusterId(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksLinkedService.setExistingClusterId(Object existingClusterId)"
  name: "setExistingClusterId(Object existingClusterId)"
  nameWithType: "AzureDatabricksLinkedService.setExistingClusterId(Object existingClusterId)"
  summary: "Set the existingClusterId property: The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the existingClusterId value to set."
    name: "existingClusterId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService setExistingClusterId(Object existingClusterId)"
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.AzureDatabricksLinkedService?alt=com.azure.analytics.synapse.artifacts.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.4
