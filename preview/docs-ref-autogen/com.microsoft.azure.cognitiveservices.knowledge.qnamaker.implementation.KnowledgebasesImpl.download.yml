### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download*"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download"
name: "download"
nameWithType: "KnowledgebasesImpl.download"
members:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download()"
  name: "download()"
  nameWithType: "KnowledgebasesImpl.download()"
  summary: "Download the knowledgebase."
  syntax: "public KnowledgebasesImpl.KnowledgebasesDownloadParameters download()"
  returns:
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesDownloadParameters?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesDownloadParameters&text=KnowledgebasesDownloadParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)"
  name: "download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)"
  nameWithType: "KnowledgebasesImpl.download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)"
  summary: "Download the knowledgebase."
  parameters:
  - description: "Knowledgebase id."
    name: "kbId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Specifies whether environment is Test or Prod. Possible values include: 'Prod', 'Test'"
    name: "environment"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType&text=EnvironmentType\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "downloadOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter&text=DownloadOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QnADocumentsDTO download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)"
  returns:
    description: "the QnADocumentsDTO object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO&text=QnADocumentsDTO\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
