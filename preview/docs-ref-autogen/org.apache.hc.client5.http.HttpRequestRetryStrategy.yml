### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.HttpRequestRetryStrategy
  id: HttpRequestRetryStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http
  children:
  - org.apache.hc.client5.http.HttpRequestRetryStrategy.getRetryInterval(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpRequest,java.io.IOException,int,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: HttpRequestRetryStrategy
  nameWithType: HttpRequestRetryStrategy
  fullName: org.apache.hc.client5.http.HttpRequestRetryStrategy
  type: Interface
  package: org.apache.hc.client5.http
  summary: Strategy interface that allows API users to plug in their own logic to control whether or not a retry should automatically be done, how many times it should be done and so on.
  syntax:
    content: public interface HttpRequestRetryStrategy
- uid: org.apache.hc.client5.http.HttpRequestRetryStrategy.getRetryInterval(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: getRetryInterval(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRequestRetryStrategy
  langs:
  - java
  name: getRetryInterval(HttpResponse response, int execCount, HttpContext context)
  nameWithType: HttpRequestRetryStrategy.getRetryInterval(HttpResponse response, int execCount, HttpContext context)
  fullName: org.apache.hc.client5.http.HttpRequestRetryStrategy.getRetryInterval(HttpResponse response, int execCount, HttpContext context)
  overload: org.apache.hc.client5.http.HttpRequestRetryStrategy.getRetryInterval*
  type: Method
  package: org.apache.hc.client5.http
  summary: Determines the retry interval between subsequent retries.
  syntax:
    content: public abstract TimeValue getRetryInterval(HttpResponse response, int execCount, HttpContext context)
    parameters:
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
      description: the response from the target server
    - id: execCount
      type: int
      description: >-
        the number of times this method has been
                          unsuccessfully executed
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the context for the request execution
    return:
      type: org.apache.hc.core5.util.TimeValue
      description: the retry interval between subsequent retries
- uid: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpRequest,java.io.IOException,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: retryRequest(org.apache.hc.core5.http.HttpRequest,java.io.IOException,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRequestRetryStrategy
  langs:
  - java
  name: retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
  nameWithType: HttpRequestRetryStrategy.retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
  fullName: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
  overload: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest*
  type: Method
  package: org.apache.hc.client5.http
  summary: Determines if a method should be retried after an I/O exception occured during execution.
  syntax:
    content: public abstract boolean retryRequest(HttpRequest request, IOException exception, int execCount, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
      description: the request failed due to an I/O exception
    - id: exception
      type: java.io.IOException
      description: the exception that occurred
    - id: execCount
      type: int
      description: >-
        the number of times this method has been
                          unsuccessfully executed
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the context for the request execution
    return:
      type: boolean
      description: >-
        <code>true</code> if the request should be retried, <code>false</code>
                 otherwise
- uid: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: retryRequest(org.apache.hc.core5.http.HttpResponse,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.HttpRequestRetryStrategy
  langs:
  - java
  name: retryRequest(HttpResponse response, int execCount, HttpContext context)
  nameWithType: HttpRequestRetryStrategy.retryRequest(HttpResponse response, int execCount, HttpContext context)
  fullName: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest(HttpResponse response, int execCount, HttpContext context)
  overload: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest*
  type: Method
  package: org.apache.hc.client5.http
  summary: Determines if a method should be retried given the response from the target server.
  syntax:
    content: public abstract boolean retryRequest(HttpResponse response, int execCount, HttpContext context)
    parameters:
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
      description: the response from the target server
    - id: execCount
      type: int
      description: >-
        the number of times this method has been
                          unsuccessfully executed
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the context for the request execution
    return:
      type: boolean
      description: >-
        <code>true</code> if the request should be retried, <code>false</code>
                 otherwise
references:
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest*
  name: retryRequest
  nameWithType: HttpRequestRetryStrategy.retryRequest
  fullName: org.apache.hc.client5.http.HttpRequestRetryStrategy.retryRequest
  package: org.apache.hc.client5.http
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.HttpRequestRetryStrategy.getRetryInterval*
  name: getRetryInterval
  nameWithType: HttpRequestRetryStrategy.getRetryInterval
  fullName: org.apache.hc.client5.http.HttpRequestRetryStrategy.getRetryInterval
  package: org.apache.hc.client5.http
