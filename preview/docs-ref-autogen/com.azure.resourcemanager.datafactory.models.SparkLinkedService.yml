### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.SparkLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.SparkLinkedService"
name: "SparkLinkedService"
nameWithType: "SparkLinkedService"
summary: "Spark Server linked service."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SparkLinkedService extends LinkedService"
constructors:
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.SparkLinkedService()"
methods:
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.allowHostnameCNMismatch()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.allowSelfSignedServerCert()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.authenticationType()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.enableSsl()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.encryptedCredential()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.host()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.httpPath()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.password()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.port()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.serverType()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.thriftTransportProtocol()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.trustedCertPath()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.useSystemTrustStore()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.username()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withAllowHostnameCNMismatch(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withAllowSelfSignedServerCert(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withAuthenticationType(com.azure.resourcemanager.datafactory.models.SparkAuthenticationType)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withEnableSsl(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withEncryptedCredential(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withHost(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withHttpPath(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withPort(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withServerType(com.azure.resourcemanager.datafactory.models.SparkServerType)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withThriftTransportProtocol(com.azure.resourcemanager.datafactory.models.SparkThriftTransportProtocol)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withTrustedCertPath(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withUseSystemTrustStore(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.SparkLinkedService.withUsername(java.lang.Object)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
