### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.Channel"
fullName: "com.azure.resourcemanager.eventgrid.models.Channel"
name: "Channel"
nameWithType: "Channel"
summary: "An immutable client-side representation of Channel."
syntax: "public interface Channel"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.channelType()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.channelType()"
  name: "channelType()"
  nameWithType: "Channel.channelType()"
  summary: "Gets the channel<wbr>Type property: The type of the event channel which represents the direction flow of events."
  modifiers:
  - "abstract"
  syntax: "public abstract ChannelType channelType()"
  desc: "Gets the channelType property: The type of the event channel which represents the direction flow of events."
  returns:
    description: "the channelType value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ChannelType?alt=com.azure.resourcemanager.eventgrid.models.ChannelType&text=ChannelType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.expirationTimeIfNotActivatedUtc()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.expirationTimeIfNotActivatedUtc()"
  name: "expirationTimeIfNotActivatedUtc()"
  nameWithType: "Channel.expirationTimeIfNotActivatedUtc()"
  summary: "Gets the expiration<wbr>Time<wbr>IfNot<wbr>Activated<wbr>Utc property: Expiration time of the channel."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime expirationTimeIfNotActivatedUtc()"
  desc: "Gets the expirationTimeIfNotActivatedUtc property: Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated, the channel and corresponding partner topic are deleted."
  returns:
    description: "the expirationTimeIfNotActivatedUtc value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.getFullUrl()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.getFullUrl()"
  name: "getFullUrl()"
  nameWithType: "Channel.getFullUrl()"
  summary: "Get the full endpoint URL of a partner destination channel."
  modifiers:
  - "abstract"
  syntax: "public abstract EventSubscriptionFullUrl getFullUrl()"
  desc: "Get the full endpoint URL of a partner destination channel."
  returns:
    description: "the full endpoint URL of a partner destination channel."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFullUrl?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFullUrl&text=EventSubscriptionFullUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.getFullUrlWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.getFullUrlWithResponse(Context context)"
  name: "getFullUrlWithResponse(Context context)"
  nameWithType: "Channel.getFullUrlWithResponse(Context context)"
  summary: "Get the full endpoint URL of a partner destination channel."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EventSubscriptionFullUrl> getFullUrlWithResponse(Context context)"
  desc: "Get the full endpoint URL of a partner destination channel."
  returns:
    description: "the full endpoint URL of a partner destination channel along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFullUrl?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFullUrl&text=EventSubscriptionFullUrl\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.id()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.id()"
  name: "id()"
  nameWithType: "Channel.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.innerModel()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.innerModel()"
  name: "innerModel()"
  nameWithType: "Channel.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>eventgrid.<wbr>fluent.<wbr>models.<wbr>Channel<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract ChannelInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.eventgrid.fluent.models.ChannelInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.ChannelInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.ChannelInner&text=ChannelInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.messageForActivation()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.messageForActivation()"
  name: "messageForActivation()"
  nameWithType: "Channel.messageForActivation()"
  summary: "Gets the message<wbr>For<wbr>Activation property: Context or helpful message that can be used during the approval process by the subscriber."
  modifiers:
  - "abstract"
  syntax: "public abstract String messageForActivation()"
  desc: "Gets the messageForActivation property: Context or helpful message that can be used during the approval process by the subscriber."
  returns:
    description: "the messageForActivation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.name()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.name()"
  name: "name()"
  nameWithType: "Channel.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.partnerTopicInfo()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.partnerTopicInfo()"
  name: "partnerTopicInfo()"
  nameWithType: "Channel.partnerTopicInfo()"
  summary: "Gets the partner<wbr>Topic<wbr>Info property: This property should be populated when channel<wbr>Type is Partner<wbr>Topic and represents information about the partner topic resource corresponding to the channel."
  modifiers:
  - "abstract"
  syntax: "public abstract PartnerTopicInfo partnerTopicInfo()"
  desc: "Gets the partnerTopicInfo property: This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel."
  returns:
    description: "the partnerTopicInfo value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicInfo?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicInfo&text=PartnerTopicInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Channel.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning state of the channel."
  modifiers:
  - "abstract"
  syntax: "public abstract ChannelProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning state of the channel."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState&text=ChannelProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.readinessState()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.readinessState()"
  name: "readinessState()"
  nameWithType: "Channel.readinessState()"
  summary: "Gets the readiness<wbr>State property: The readiness state of the corresponding partner topic."
  modifiers:
  - "abstract"
  syntax: "public abstract ReadinessState readinessState()"
  desc: "Gets the readinessState property: The readiness state of the corresponding partner topic."
  returns:
    description: "the readinessState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ReadinessState?alt=com.azure.resourcemanager.eventgrid.models.ReadinessState&text=ReadinessState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.refresh()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.refresh()"
  name: "refresh()"
  nameWithType: "Channel.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Channel refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Channel?alt=com.azure.resourcemanager.eventgrid.models.Channel&text=Channel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Channel.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Channel refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Channel?alt=com.azure.resourcemanager.eventgrid.models.Channel&text=Channel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.resourceGroupName()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "Channel.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.systemData()"
  name: "systemData()"
  nameWithType: "Channel.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to Channel resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to Channel resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.type()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.type()"
  name: "type()"
  nameWithType: "Channel.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.Channel.update()"
  fullName: "com.azure.resourcemanager.eventgrid.models.Channel.update()"
  name: "update()"
  nameWithType: "Channel.update()"
  summary: "Begins update for the Channel resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Channel.Update update()"
  desc: "Begins update for the Channel resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Channel.Update?alt=com.azure.resourcemanager.eventgrid.models.Channel.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of Channel."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
