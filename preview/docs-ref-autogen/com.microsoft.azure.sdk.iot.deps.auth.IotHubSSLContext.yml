### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext"
fullName: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext"
name: "IotHubSSLContext"
nameWithType: "IotHubSSLContext"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **IotHubSSLContext**"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext()"
  fullName: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext()"
  name: "IotHubSSLContext()"
  nameWithType: "IotHubSSLContext.IotHubSSLContext()"
  summary: "Creates a SSLContext for the Iot<wbr>Hub."
  syntax: "public IotHubSSLContext()"
  exceptions:
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.KeyStoreException?alt=java.security.KeyStoreException&text=KeyStoreException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.KeyManagementException?alt=java.security.KeyManagementException&text=KeyManagementException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.cert.CertificateException?alt=java.security.cert.CertificateException&text=CertificateException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.NoSuchAlgorithmException?alt=java.security.NoSuchAlgorithmException&text=NoSuchAlgorithmException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a SSLContext for the IotHub."
- uid: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(java.lang.String,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(String trustedCert, boolean isPath)"
  name: "IotHubSSLContext(String trustedCert, boolean isPath)"
  nameWithType: "IotHubSSLContext.IotHubSSLContext(String trustedCert, boolean isPath)"
  summary: "Creates a default SSLContext for the Iot<wbr>Hub with the specified certificate."
  parameters:
  - description: "the certificate to be trusted"
    name: "trustedCert"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the trustedCert is a path to the trusted cert, or if it is the certificate itself"
    name: "isPath"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSSLContext(String trustedCert, boolean isPath)"
  exceptions:
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.KeyStoreException?alt=java.security.KeyStoreException&text=KeyStoreException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.KeyManagementException?alt=java.security.KeyManagementException&text=KeyManagementException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.cert.CertificateException?alt=java.security.cert.CertificateException&text=CertificateException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.NoSuchAlgorithmException?alt=java.security.NoSuchAlgorithmException&text=NoSuchAlgorithmException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a default SSLContext for the IotHub with the specified certificate."
- uid: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(String publicKeyCertificateString, String privateKeyString)"
  name: "IotHubSSLContext(String publicKeyCertificateString, String privateKeyString)"
  nameWithType: "IotHubSSLContext.IotHubSSLContext(String publicKeyCertificateString, String privateKeyString)"
  summary: "Constructor that takes a public key certificate and private key pair."
  parameters:
  - description: "The PEM formatted public key certificate string"
    name: "publicKeyCertificateString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The PEM formatted private key string"
    name: "privateKeyString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSSLContext(String publicKeyCertificateString, String privateKeyString)"
  exceptions:
  - description: "If the SSLContext could not be initialized"
    type: "<xref href=\"java.security.KeyManagementException?alt=java.security.KeyManagementException&text=KeyManagementException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the SSLContext could not be initialized"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the SSLContext could not be initialized"
    type: "<xref href=\"java.security.cert.CertificateException?alt=java.security.cert.CertificateException&text=CertificateException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the SSLContext could not be initialized"
    type: "<xref href=\"java.security.KeyStoreException?alt=java.security.KeyStoreException&text=KeyStoreException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the SSLContext could not be initialized"
    type: "<xref href=\"java.security.NoSuchAlgorithmException?alt=java.security.NoSuchAlgorithmException&text=NoSuchAlgorithmException\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the SSLContext could not be initialized"
    type: "<xref href=\"java.security.UnrecoverableKeyException?alt=java.security.UnrecoverableKeyException&text=UnrecoverableKeyException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor that takes a public key certificate and private key pair."
- uid: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(java.lang.String,java.lang.String,java.lang.String,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(String publicKeyCertificateString, String privateKeyString, String cert, boolean isPath)"
  name: "IotHubSSLContext(String publicKeyCertificateString, String privateKeyString, String cert, boolean isPath)"
  nameWithType: "IotHubSSLContext.IotHubSSLContext(String publicKeyCertificateString, String privateKeyString, String cert, boolean isPath)"
  summary: "Creates a default SSLContext for the Iot<wbr>Hub with the specified certificate."
  parameters:
  - description: "the public key for x509 authentication"
    name: "publicKeyCertificateString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the private key for x509 authentication"
    name: "privateKeyString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the trusted certificate"
    name: "cert"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "If the provided cert is a path, or the actual certificate itself"
    name: "isPath"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSSLContext(String publicKeyCertificateString, String privateKeyString, String cert, boolean isPath)"
  exceptions:
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.KeyStoreException?alt=java.security.KeyStoreException&text=KeyStoreException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.KeyManagementException?alt=java.security.KeyManagementException&text=KeyManagementException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.cert.CertificateException?alt=java.security.cert.CertificateException&text=CertificateException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.NoSuchAlgorithmException?alt=java.security.NoSuchAlgorithmException&text=NoSuchAlgorithmException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if no Provider supports a KeyStoreSpi implementation for the specified type or\n                            if the keystore has not been initialized,\n                            or the given alias already exists and does not identify an entry containing a trusted certificate,\n                            or this operation fails for some other reason."
    type: "<xref href=\"java.security.UnrecoverableKeyException?alt=java.security.UnrecoverableKeyException&text=UnrecoverableKeyException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a default SSLContext for the IotHub with the specified certificate."
- uid: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.IotHubSSLContext(SSLContext sslContext)"
  name: "IotHubSSLContext(SSLContext sslContext)"
  nameWithType: "IotHubSSLContext.IotHubSSLContext(SSLContext sslContext)"
  summary: "Constructor that takes and saves an SSLContext object"
  parameters:
  - description: "the ssl context to save"
    name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSSLContext(SSLContext sslContext)"
  desc: "Constructor that takes and saves an SSLContext object"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.getSSLContext()"
  fullName: "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.getSSLContext()"
  name: "getSSLContext()"
  nameWithType: "IotHubSSLContext.getSSLContext()"
  summary: "Getter for the Iot<wbr>Hub<wbr>SSLContext"
  syntax: "public SSLContext getSSLContext()"
  desc: "Getter for the IotHubSSLContext"
  returns:
    description: "SSLContext defined for the IotHub."
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.auth"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
