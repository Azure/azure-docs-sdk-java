### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.Prefixes"
fullName: "com.azure.resourcemanager.peering.models.Prefixes"
name: "Prefixes"
nameWithType: "Prefixes"
summary: "Resource collection API of Prefixes."
syntax: "public interface Prefixes"
methods:
- uid: "com.azure.resourcemanager.peering.models.Prefixes.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.define(String name)"
  name: "define(String name)"
  nameWithType: "Prefixes.define(String name)"
  summary: "Begins definition for a new Peering<wbr>Service<wbr>Prefix resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServicePrefix.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new PeeringServicePrefix resource."
  returns:
    description: "the first stage of the new PeeringServicePrefix definition."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix.DefinitionStages.Blank?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  name: "delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  nameWithType: "Prefixes.delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  summary: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String peeringServiceName, String prefixName)"
  desc: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
- uid: "com.azure.resourcemanager.peering.models.Prefixes.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Prefixes.deleteById(String id)"
  summary: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
- uid: "com.azure.resourcemanager.peering.models.Prefixes.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Prefixes.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  nameWithType: "Prefixes.deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  summary: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, Context context)"
  desc: "Deletes an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.get(String resourceGroupName, String peeringServiceName, String prefixName)"
  name: "get(String resourceGroupName, String peeringServiceName, String prefixName)"
  nameWithType: "Prefixes.get(String resourceGroupName, String peeringServiceName, String prefixName)"
  summary: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServicePrefix get(String resourceGroupName, String peeringServiceName, String prefixName)"
  desc: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "an existing prefix with the specified name under the given subscription, resource group and peering\n     service."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Prefixes.getById(String id)"
  summary: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServicePrefix getById(String id)"
  desc: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "an existing prefix with the specified name under the given subscription, resource group and peering\n     service."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.getByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.getByIdWithResponse(String id, String expand, Context context)"
  name: "getByIdWithResponse(String id, String expand, Context context)"
  nameWithType: "Prefixes.getByIdWithResponse(String id, String expand, Context context)"
  summary: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties to be expanded."
    name: "expand"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringServicePrefix> getByIdWithResponse(String id, String expand, Context context)"
  desc: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "an existing prefix with the specified name under the given subscription, resource group and peering\n     service."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.getWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  name: "getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  nameWithType: "Prefixes.getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  summary: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the prefix."
    name: "prefixName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties to be expanded."
    name: "expand"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringServicePrefix> getWithResponse(String resourceGroupName, String peeringServiceName, String prefixName, String expand, Context context)"
  desc: "Gets an existing prefix with the specified name under the given subscription, resource group and peering service."
  returns:
    description: "an existing prefix with the specified name under the given subscription, resource group and peering\n     service."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.listByPeeringService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.listByPeeringService(String resourceGroupName, String peeringServiceName)"
  name: "listByPeeringService(String resourceGroupName, String peeringServiceName)"
  nameWithType: "Prefixes.listByPeeringService(String resourceGroupName, String peeringServiceName)"
  summary: "Lists all prefixes under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringServicePrefix> listByPeeringService(String resourceGroupName, String peeringServiceName)"
  desc: "Lists all prefixes under the given subscription, resource group and peering service."
  returns:
    description: "the paginated list of peering service prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.Prefixes.listByPeeringService(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.Prefixes.listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  name: "listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  nameWithType: "Prefixes.listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  summary: "Lists all prefixes under the given subscription, resource group and peering service."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties to be expanded."
    name: "expand"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringServicePrefix> listByPeeringService(String resourceGroupName, String peeringServiceName, String expand, Context context)"
  desc: "Lists all prefixes under the given subscription, resource group and peering service."
  returns:
    description: "the paginated list of peering service prefixes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Prefixes."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
