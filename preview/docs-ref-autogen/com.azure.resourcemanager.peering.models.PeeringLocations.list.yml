### YamlMime:JavaMember
uid: "com.azure.resourcemanager.peering.models.PeeringLocations.list*"
fullName: "com.azure.resourcemanager.peering.models.PeeringLocations.list"
name: "list"
nameWithType: "PeeringLocations.list"
members:
- uid: "com.azure.resourcemanager.peering.models.PeeringLocations.list(com.azure.resourcemanager.peering.models.PeeringLocationsKind)"
  fullName: "com.azure.resourcemanager.peering.models.PeeringLocations.list(PeeringLocationsKind kind)"
  name: "list(PeeringLocationsKind kind)"
  nameWithType: "PeeringLocations.list(PeeringLocationsKind kind)"
  summary: "Lists all of the available peering locations for the specified kind of peering."
  parameters:
  - description: "The kind of the peering."
    name: "kind"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringLocationsKind?alt=com.azure.resourcemanager.peering.models.PeeringLocationsKind&text=PeeringLocationsKind\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringLocation> list(PeeringLocationsKind kind)"
  returns:
    description: "the paginated list of peering locations."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringLocation?alt=com.azure.resourcemanager.peering.models.PeeringLocation&text=PeeringLocation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.PeeringLocations.list(com.azure.resourcemanager.peering.models.PeeringLocationsKind,com.azure.resourcemanager.peering.models.PeeringLocationsDirectPeeringType,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.PeeringLocations.list(PeeringLocationsKind kind, PeeringLocationsDirectPeeringType directPeeringType, Context context)"
  name: "list(PeeringLocationsKind kind, PeeringLocationsDirectPeeringType directPeeringType, Context context)"
  nameWithType: "PeeringLocations.list(PeeringLocationsKind kind, PeeringLocationsDirectPeeringType directPeeringType, Context context)"
  summary: "Lists all of the available peering locations for the specified kind of peering."
  parameters:
  - description: "The kind of the peering."
    name: "kind"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringLocationsKind?alt=com.azure.resourcemanager.peering.models.PeeringLocationsKind&text=PeeringLocationsKind\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of direct peering."
    name: "directPeeringType"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringLocationsDirectPeeringType?alt=com.azure.resourcemanager.peering.models.PeeringLocationsDirectPeeringType&text=PeeringLocationsDirectPeeringType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringLocation> list(PeeringLocationsKind kind, PeeringLocationsDirectPeeringType directPeeringType, Context context)"
  returns:
    description: "the paginated list of peering locations."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringLocation?alt=com.azure.resourcemanager.peering.models.PeeringLocation&text=PeeringLocation\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
