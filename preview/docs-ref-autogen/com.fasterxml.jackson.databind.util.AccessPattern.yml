### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.AccessPattern
  id: AccessPattern
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.AccessPattern.ALWAYS_NULL
  - com.fasterxml.jackson.databind.util.AccessPattern.CONSTANT
  - com.fasterxml.jackson.databind.util.AccessPattern.DYNAMIC
  - com.fasterxml.jackson.databind.util.AccessPattern.valueOf(java.lang.String)
  - com.fasterxml.jackson.databind.util.AccessPattern.values()
  langs:
  - java
  name: AccessPattern
  nameWithType: AccessPattern
  fullName: com.fasterxml.jackson.databind.util.AccessPattern
  type: Enum
  package: com.fasterxml.jackson.databind.util
  summary: 'Enumeration used to indicate required access pattern for providers: this can sometimes be used to optimize out dynamic calls. The main difference is between constant values (which can be resolved once) and dynamic ones (which must be resolved anew every time).'
  syntax:
    content: public enum AccessPattern extends Enum<AccessPattern>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.AccessPattern.ALWAYS_NULL
  id: ALWAYS_NULL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.AccessPattern
  langs:
  - java
  name: ALWAYS_NULL
  nameWithType: AccessPattern.ALWAYS_NULL
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.ALWAYS_NULL
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Value that indicates that provider never returns anything other than Java \`null\`.
  syntax:
    content: public static final AccessPattern ALWAYS_NULL
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.util.AccessPattern.AccessPattern()
  id: AccessPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.AccessPattern
  langs:
  - java
  name: AccessPattern()
  nameWithType: AccessPattern.AccessPattern()
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.AccessPattern()
  overload: com.fasterxml.jackson.databind.util.AccessPattern.AccessPattern*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: private AccessPattern()
- uid: com.fasterxml.jackson.databind.util.AccessPattern.CONSTANT
  id: CONSTANT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.AccessPattern
  langs:
  - java
  name: CONSTANT
  nameWithType: AccessPattern.CONSTANT
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.CONSTANT
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Value that indicates that provider will always return a constant value, regardless of when it is called; and also that it never uses \`context\` argument (which may then be passed as \`null\`)
  syntax:
    content: public static final AccessPattern CONSTANT
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.util.AccessPattern.DYNAMIC
  id: DYNAMIC
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.AccessPattern
  langs:
  - java
  name: DYNAMIC
  nameWithType: AccessPattern.DYNAMIC
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.DYNAMIC
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Value that indicates that provider may return different values at different times (often a freshly constructed empty container), and thus must be called every time "null replacement" value is needed.
  syntax:
    content: public static final AccessPattern DYNAMIC
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.util.AccessPattern.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.AccessPattern
  langs:
  - java
  name: valueOf(String name)
  nameWithType: AccessPattern.valueOf(String name)
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.valueOf(String name)
  overload: com.fasterxml.jackson.databind.util.AccessPattern.valueOf*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static AccessPattern valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern
- uid: com.fasterxml.jackson.databind.util.AccessPattern.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.AccessPattern
  langs:
  - java
  name: values()
  nameWithType: AccessPattern.values()
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.values()
  overload: com.fasterxml.jackson.databind.util.AccessPattern.values*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static AccessPattern[] values()
    return:
      type: com.fasterxml.jackson.databind.util.AccessPattern[]
references:
- uid: com.fasterxml.jackson.databind.util.AccessPattern.AccessPattern*
  name: AccessPattern
  nameWithType: AccessPattern.AccessPattern
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.AccessPattern
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.AccessPattern[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.AccessPattern
    name: AccessPattern
    fullName: com.fasterxml.jackson.databind.util.AccessPattern
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.AccessPattern.values*
  name: values
  nameWithType: AccessPattern.values
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.values
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.util.AccessPattern.valueOf*
  name: valueOf
  nameWithType: AccessPattern.valueOf
  fullName: com.fasterxml.jackson.databind.util.AccessPattern.valueOf
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Enum<com.fasterxml.jackson.databind.util.AccessPattern>
  name: Enum<AccessPattern>
  nameWithType: Enum<AccessPattern>
  fullName: java.lang.Enum<com.fasterxml.jackson.databind.util.AccessPattern>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
