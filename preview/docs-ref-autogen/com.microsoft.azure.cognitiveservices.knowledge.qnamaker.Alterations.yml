### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations"
name: "Alterations"
nameWithType: "Alterations"
summary: "An instance of this class provides access to all the operations defined in Alterations."
syntax: "public interface Alterations"
methods:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.get()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.get()"
  name: "get()"
  nameWithType: "Alterations.get()"
  summary: "Download alterations from runtime."
  modifiers:
  - "abstract"
  syntax: "public abstract WordAlterationsDTO get()"
  desc: "Download alterations from runtime."
  returns:
    description: "the WordAlterationsDTO object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO&text=WordAlterationsDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.getAlterationsForKb(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.getAlterationsForKb(String kbId)"
  name: "getAlterationsForKb(String kbId)"
  nameWithType: "Alterations.getAlterationsForKb(String kbId)"
  summary: "Download alterations per Knowledgebase (Qn<wbr>AMaker Managed)."
  modifiers:
  - "abstract"
  parameters:
  - description: "Knowledgebase id."
    name: "kbId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WordAlterationsDTO getAlterationsForKb(String kbId)"
  desc: "Download alterations per Knowledgebase (QnAMaker Managed)."
  returns:
    description: "the WordAlterationsDTO object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO&text=WordAlterationsDTO\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.getAlterationsForKbAsync(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.getAlterationsForKbAsync(String kbId)"
  name: "getAlterationsForKbAsync(String kbId)"
  nameWithType: "Alterations.getAlterationsForKbAsync(String kbId)"
  summary: "Download alterations per Knowledgebase (Qn<wbr>AMaker Managed)."
  modifiers:
  - "abstract"
  parameters:
  - description: "Knowledgebase id."
    name: "kbId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<WordAlterationsDTO> getAlterationsForKbAsync(String kbId)"
  desc: "Download alterations per Knowledgebase (QnAMaker Managed)."
  returns:
    description: "the observable to the WordAlterationsDTO object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO&text=WordAlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.getAsync()"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.getAsync()"
  name: "getAsync()"
  nameWithType: "Alterations.getAsync()"
  summary: "Download alterations from runtime."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<WordAlterationsDTO> getAsync()"
  desc: "Download alterations from runtime."
  returns:
    description: "the observable to the WordAlterationsDTO object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.WordAlterationsDTO&text=WordAlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replace(java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replace(List<AlterationsDTO> wordAlterations)"
  name: "replace(List<AlterationsDTO> wordAlterations)"
  nameWithType: "Alterations.replace(List<AlterationsDTO> wordAlterations)"
  summary: "Replace alterations data."
  modifiers:
  - "abstract"
  parameters:
  - description: "Collection of word alterations."
    name: "wordAlterations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO&text=AlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void replace(List<AlterationsDTO> wordAlterations)"
  desc: "Replace alterations data."
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replaceAlterationsForKb(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replaceAlterationsForKb(String kbId, List<AlterationsDTO> wordAlterations)"
  name: "replaceAlterationsForKb(String kbId, List<AlterationsDTO> wordAlterations)"
  nameWithType: "Alterations.replaceAlterationsForKb(String kbId, List<AlterationsDTO> wordAlterations)"
  summary: "Replace alterations data per Knowledgebase (Qn<wbr>AMaker Managed)."
  modifiers:
  - "abstract"
  parameters:
  - description: "Knowledgebase id."
    name: "kbId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Collection of word alterations."
    name: "wordAlterations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO&text=AlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void replaceAlterationsForKb(String kbId, List<AlterationsDTO> wordAlterations)"
  desc: "Replace alterations data per Knowledgebase (QnAMaker Managed)."
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replaceAlterationsForKbAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replaceAlterationsForKbAsync(String kbId, List<AlterationsDTO> wordAlterations)"
  name: "replaceAlterationsForKbAsync(String kbId, List<AlterationsDTO> wordAlterations)"
  nameWithType: "Alterations.replaceAlterationsForKbAsync(String kbId, List<AlterationsDTO> wordAlterations)"
  summary: "Replace alterations data per Knowledgebase (Qn<wbr>AMaker Managed)."
  modifiers:
  - "abstract"
  parameters:
  - description: "Knowledgebase id."
    name: "kbId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Collection of word alterations."
    name: "wordAlterations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO&text=AlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Observable<Void> replaceAlterationsForKbAsync(String kbId, List<AlterationsDTO> wordAlterations)"
  desc: "Replace alterations data per Knowledgebase (QnAMaker Managed)."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replaceAsync(java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Alterations.replaceAsync(List<AlterationsDTO> wordAlterations)"
  name: "replaceAsync(List<AlterationsDTO> wordAlterations)"
  nameWithType: "Alterations.replaceAsync(List<AlterationsDTO> wordAlterations)"
  summary: "Replace alterations data."
  modifiers:
  - "abstract"
  parameters:
  - description: "Collection of word alterations."
    name: "wordAlterations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO&text=AlterationsDTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Observable<Void> replaceAsync(List<AlterationsDTO> wordAlterations)"
  desc: "Replace alterations data."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in Alterations."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
