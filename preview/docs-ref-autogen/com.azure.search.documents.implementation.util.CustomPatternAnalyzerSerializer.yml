### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer
  id: CustomPatternAnalyzerSerializer
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.util
  children:
  - com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer()
  - com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serialize(com.azure.search.documents.models.PatternAnalyzer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serializeWithType(com.azure.search.documents.models.PatternAnalyzer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  langs:
  - java
  name: CustomPatternAnalyzerSerializer
  nameWithType: CustomPatternAnalyzerSerializer
  fullName: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer
  type: Class
  package: com.azure.search.documents.implementation.util
  summary: Custom serializer for <xref uid="com.azure.search.documents.models.PatternAnalyzer" data-throw-if-not-resolved="false">PatternAnalyzer</xref>, which flatten the list of <xref uid="com.azure.search.documents.models.RegexFlags" data-throw-if-not-resolved="false">RegexFlags</xref>.
  syntax:
    content: public class CustomPatternAnalyzerSerializer extends JsonSerializer<PatternAnalyzer>
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.handledType()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.properties()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  - com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer()
  id: CustomPatternAnalyzerSerializer()
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer
  langs:
  - java
  name: CustomPatternAnalyzerSerializer()
  nameWithType: CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer()
  fullName: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer()
  overload: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer*
  type: Constructor
  package: com.azure.search.documents.implementation.util
  syntax:
    content: public CustomPatternAnalyzerSerializer()
- uid: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serialize(com.azure.search.documents.models.PatternAnalyzer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.azure.search.documents.models.PatternAnalyzer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer
  langs:
  - java
  name: serialize(PatternAnalyzer analyzer, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)
  nameWithType: CustomPatternAnalyzerSerializer.serialize(PatternAnalyzer analyzer, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)
  fullName: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serialize(PatternAnalyzer analyzer, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)
  overload: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serialize*
  type: Method
  package: com.azure.search.documents.implementation.util
  syntax:
    content: public void serialize(PatternAnalyzer analyzer, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)
    parameters:
    - id: analyzer
      type: com.azure.search.documents.models.PatternAnalyzer
      description: The <xref uid="com.azure.search.documents.models.PatternAnalyzer" data-throw-if-not-resolved="false">PatternAnalyzer</xref> needs to serialize
    - id: jsonGenerator
      type: com.fasterxml.jackson.core.JsonGenerator
      description: Generator used to output resulting Json content
    - id: serializerProvider
      type: com.fasterxml.jackson.databind.SerializerProvider
      description: >-
        Provider that can be used to get serializers for
           serializing Objects value contains, if any.
  exceptions:
  - type: java.io.IOException
    description: If IO operation error occurs.
- uid: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serializeWithType(com.azure.search.documents.models.PatternAnalyzer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.azure.search.documents.models.PatternAnalyzer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-search-documents:1.0.0-beta.3
  parent: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer
  langs:
  - java
  name: serializeWithType(PatternAnalyzer analyzer, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  nameWithType: CustomPatternAnalyzerSerializer.serializeWithType(PatternAnalyzer analyzer, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  fullName: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serializeWithType(PatternAnalyzer analyzer, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
  overload: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serializeWithType*
  type: Method
  package: com.azure.search.documents.implementation.util
  syntax:
    content: public void serializeWithType(PatternAnalyzer analyzer, JsonGenerator gen, SerializerProvider serializers, TypeSerializer typeSer)
    parameters:
    - id: analyzer
      type: com.azure.search.documents.models.PatternAnalyzer
      description: The <xref uid="com.azure.search.documents.models.PatternAnalyzer" data-throw-if-not-resolved="false">PatternAnalyzer</xref> needs to serialize
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
      description: Generator used to output resulting Json content
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
      description: >-
        Provider that can be used to get serializers for
           serializing Objects value contains, if any.
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
      description: Type serializer to use for including type information
  exceptions:
  - type: java.io.IOException
    description: If IO operation error occurs.
references:
- uid: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer*
  name: CustomPatternAnalyzerSerializer
  nameWithType: CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer
  fullName: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.CustomPatternAnalyzerSerializer
  package: com.azure.search.documents.implementation.util
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.azure.search.documents.models.PatternAnalyzer
  name: PatternAnalyzer
  nameWithType: PatternAnalyzer
  fullName: com.azure.search.documents.models.PatternAnalyzer
- uid: com.fasterxml.jackson.core.JsonGenerator
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonGenerator
    name: JsonGenerator
    fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  spec.java:
  - uid: com.fasterxml.jackson.databind.SerializerProvider
    name: SerializerProvider
    fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  spec.java:
  - uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    name: TypeSerializer
    fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serializeWithType*
  name: serializeWithType
  nameWithType: CustomPatternAnalyzerSerializer.serializeWithType
  fullName: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serializeWithType
  package: com.azure.search.documents.implementation.util
- uid: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serialize*
  name: serialize
  nameWithType: CustomPatternAnalyzerSerializer.serialize
  fullName: com.azure.search.documents.implementation.util.CustomPatternAnalyzerSerializer.serialize
  package: com.azure.search.documents.implementation.util
- uid: com.fasterxml.jackson.databind.JsonSerializer<com.azure.search.documents.models.PatternAnalyzer>
  name: JsonSerializer<PatternAnalyzer>
  nameWithType: JsonSerializer<PatternAnalyzer>
  fullName: com.fasterxml.jackson.databind.JsonSerializer<com.azure.search.documents.models.PatternAnalyzer>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonSerializer.properties()
  name: JsonSerializer.properties()
  nameWithType: JsonSerializer.properties()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.properties()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  name: JsonSerializer.withFilterId(Object)
  nameWithType: JsonSerializer.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.handledType()
  name: JsonSerializer.handledType()
  nameWithType: JsonSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.handledType()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  name: JsonSerializer.usesObjectId()
  nameWithType: JsonSerializer.usesObjectId()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
