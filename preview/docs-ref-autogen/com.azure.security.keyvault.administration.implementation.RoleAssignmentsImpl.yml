### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  id: RoleAssignmentsImpl
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.implementation
  children:
  - com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.administration.implementation.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: RoleAssignmentsImpl
  nameWithType: RoleAssignmentsImpl
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  type: Class
  package: com.azure.security.keyvault.administration.implementation
  summary: An instance of this class provides access to all the operations defined in RoleAssignments.
  syntax:
    content: public final class RoleAssignmentsImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.RoleAssignmentsImpl(com.azure.security.keyvault.administration.implementation.KeyVaultAccessControlClientImpl)
  id: RoleAssignmentsImpl(com.azure.security.keyvault.administration.implementation.KeyVaultAccessControlClientImpl)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  langs:
  - java
  name: RoleAssignmentsImpl(KeyVaultAccessControlClientImpl client)
  nameWithType: RoleAssignmentsImpl.RoleAssignmentsImpl(KeyVaultAccessControlClientImpl client)
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.RoleAssignmentsImpl(KeyVaultAccessControlClientImpl client)
  overload: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.RoleAssignmentsImpl*
  type: Constructor
  package: com.azure.security.keyvault.administration.implementation
  summary: Initializes an instance of RoleAssignmentsImpl.
  syntax:
    content: " RoleAssignmentsImpl(KeyVaultAccessControlClientImpl client)"
    parameters:
    - id: client
      type: com.azure.security.keyvault.administration.implementation.KeyVaultAccessControlClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.administration.implementation.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.administration.implementation.models.RoleAssignmentCreateParameters,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  langs:
  - java
  name: createWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  nameWithType: RoleAssignmentsImpl.createWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.createWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
  overload: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.createWithResponseAsync*
  type: Method
  package: com.azure.security.keyvault.administration.implementation
  summary: Creates a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignment>> createWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, RoleAssignmentCreateParameters parameters, Context context)
    parameters:
    - id: vaultBaseUrl
      type: java.lang.String
      description: simple string.
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to create.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to create. It can be any valid GUID.
    - id: parameters
      type: com.azure.security.keyvault.administration.implementation.models.RoleAssignmentCreateParameters
      description: Role assignment create parameters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.implementation.models.RoleAssignment>>
      description: role Assignments.
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  langs:
  - java
  name: deleteWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsImpl.deleteWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.deleteWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
  overload: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.security.keyvault.administration.implementation
  summary: Deletes a role assignment.
  syntax:
    content: public Mono<Response<RoleAssignment>> deleteWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
    parameters:
    - id: vaultBaseUrl
      type: java.lang.String
      description: simple string.
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment to delete.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to delete.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.implementation.models.RoleAssignment>>
      description: role Assignments.
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  langs:
  - java
  name: getWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
  nameWithType: RoleAssignmentsImpl.getWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.getWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
  overload: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.getWithResponseAsync*
  type: Method
  package: com.azure.security.keyvault.administration.implementation
  summary: Get the specified role assignment.
  syntax:
    content: public Mono<Response<RoleAssignment>> getWithResponseAsync(String vaultBaseUrl, String scope, String roleAssignmentName, Context context)
    parameters:
    - id: vaultBaseUrl
      type: java.lang.String
      description: simple string.
    - id: scope
      type: java.lang.String
      description: The scope of the role assignment.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the role assignment to get.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.implementation.models.RoleAssignment>>
      description: the specified role assignment.
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listForScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  langs:
  - java
  name: listForScopeNextSinglePageAsync(String nextLink, Context context)
  nameWithType: RoleAssignmentsImpl.listForScopeNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeNextSinglePageAsync*
  type: Method
  package: com.azure.security.keyvault.administration.implementation
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<RoleAssignment>> listForScopeNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.administration.implementation.models.RoleAssignment>>
      description: role assignment list operation result.
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listForScopeSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl
  langs:
  - java
  name: listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)
  nameWithType: RoleAssignmentsImpl.listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)
  overload: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync*
  type: Method
  package: com.azure.security.keyvault.administration.implementation
  summary: Gets role assignments for a scope.
  syntax:
    content: public Mono<PagedResponse<RoleAssignment>> listForScopeSinglePageAsync(String vaultBaseUrl, String scope, String filter, Context context)
    parameters:
    - id: vaultBaseUrl
      type: java.lang.String
      description: simple string.
    - id: scope
      type: java.lang.String
      description: The scope of the role assignments.
    - id: filter
      type: java.lang.String
      description: >-
        The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or
             above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope
             for the specified principal.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.administration.implementation.models.RoleAssignment>>
      description: role assignments for a scope.
references:
- uid: com.azure.security.keyvault.administration.implementation.KeyVaultAccessControlClientImpl
  name: KeyVaultAccessControlClientImpl
  nameWithType: KeyVaultAccessControlClientImpl
  fullName: com.azure.security.keyvault.administration.implementation.KeyVaultAccessControlClientImpl
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.RoleAssignmentsImpl*
  name: RoleAssignmentsImpl
  nameWithType: RoleAssignmentsImpl.RoleAssignmentsImpl
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.RoleAssignmentsImpl
  package: com.azure.security.keyvault.administration.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.implementation.models.RoleAssignment>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.implementation.models.RoleAssignment
    name: RoleAssignment
    fullName: com.azure.security.keyvault.administration.implementation.models.RoleAssignment
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: RoleAssignmentsImpl.deleteWithResponseAsync
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.deleteWithResponseAsync
  package: com.azure.security.keyvault.administration.implementation
- uid: com.azure.security.keyvault.administration.implementation.models.RoleAssignmentCreateParameters
  name: RoleAssignmentCreateParameters
  nameWithType: RoleAssignmentCreateParameters
  fullName: com.azure.security.keyvault.administration.implementation.models.RoleAssignmentCreateParameters
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: RoleAssignmentsImpl.createWithResponseAsync
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.createWithResponseAsync
  package: com.azure.security.keyvault.administration.implementation
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: RoleAssignmentsImpl.getWithResponseAsync
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.getWithResponseAsync
  package: com.azure.security.keyvault.administration.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.security.keyvault.administration.implementation.models.RoleAssignment>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.implementation.models.RoleAssignment
    name: RoleAssignment
    fullName: com.azure.security.keyvault.administration.implementation.models.RoleAssignment
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync*
  name: listForScopeSinglePageAsync
  nameWithType: RoleAssignmentsImpl.listForScopeSinglePageAsync
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeSinglePageAsync
  package: com.azure.security.keyvault.administration.implementation
- uid: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeNextSinglePageAsync*
  name: listForScopeNextSinglePageAsync
  nameWithType: RoleAssignmentsImpl.listForScopeNextSinglePageAsync
  fullName: com.azure.security.keyvault.administration.implementation.RoleAssignmentsImpl.listForScopeNextSinglePageAsync
  package: com.azure.security.keyvault.administration.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.security.keyvault.administration.implementation.models.RoleAssignment
  name: RoleAssignment
  nameWithType: RoleAssignment
  fullName: com.azure.security.keyvault.administration.implementation.models.RoleAssignment
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
