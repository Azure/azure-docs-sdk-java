### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.type.SimpleType
  id: SimpleType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type
  children:
  - com.fasterxml.jackson.databind.type.SimpleType.SimpleType(com.fasterxml.jackson.databind.type.TypeBase)
  - com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)
  - com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)
  - com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName()
  - com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.SimpleType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.SimpleType.hasContentType()
  - com.fasterxml.jackson.databind.type.SimpleType.isContainerType()
  - com.fasterxml.jackson.databind.type.SimpleType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.type.SimpleType.toString()
  - com.fasterxml.jackson.databind.type.SimpleType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping()
  - com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.withValueHandler(java.lang.Object)
  langs:
  - java
  name: SimpleType
  nameWithType: SimpleType
  fullName: com.fasterxml.jackson.databind.type.SimpleType
  type: Class
  package: com.fasterxml.jackson.databind.type
  summary: Simple types are defined as anything other than one of recognized container types (arrays, Collections, Maps). For our needs we need not know anything further, since we have no way of dealing with generic types other than Collections and Maps.
  syntax:
    content: public class SimpleType extends TypeBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.type.ResolvedType
  - com.fasterxml.jackson.databind.JavaType
  - com.fasterxml.jackson.databind.type.TypeBase
  inheritedMembers:
  - com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  - com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  - com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  - com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.getContentType()
  - com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  - com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  - com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  - com.fasterxml.jackson.databind.JavaType.getKeyType()
  - com.fasterxml.jackson.databind.JavaType.getParameterSource()
  - com.fasterxml.jackson.databind.JavaType.getRawClass()
  - com.fasterxml.jackson.databind.JavaType.getReferencedType()
  - com.fasterxml.jackson.databind.JavaType.hasContentType()
  - com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  - com.fasterxml.jackson.databind.JavaType.hasHandlers()
  - com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  - com.fasterxml.jackson.databind.JavaType.hashCode()
  - com.fasterxml.jackson.databind.JavaType.isAbstract()
  - com.fasterxml.jackson.databind.JavaType.isArrayType()
  - com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  - com.fasterxml.jackson.databind.JavaType.isConcrete()
  - com.fasterxml.jackson.databind.JavaType.isContainerType()
  - com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  - com.fasterxml.jackson.databind.JavaType.isEnumType()
  - com.fasterxml.jackson.databind.JavaType.isFinal()
  - com.fasterxml.jackson.databind.JavaType.isInterface()
  - com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  - com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  - com.fasterxml.jackson.databind.JavaType.isPrimitive()
  - com.fasterxml.jackson.databind.JavaType.isThrowable()
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.JavaType.toString()
  - com.fasterxml.jackson.databind.JavaType.useStaticType()
  - com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  - com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  - com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
  - com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  - com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  - com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  - com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  - com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(com.fasterxml.jackson.databind.type.TypeBase)
  id: SimpleType(com.fasterxml.jackson.databind.type.TypeBase)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: SimpleType(TypeBase base)
  nameWithType: SimpleType.SimpleType(TypeBase base)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(TypeBase base)
  overload: com.fasterxml.jackson.databind.type.SimpleType.SimpleType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  summary: Simple copy-constructor, usually used when upgrading/refining a simple type into more specialized type.
  syntax:
    content: protected SimpleType(TypeBase base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.type.TypeBase
- uid: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>)
  id: SimpleType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: SimpleType(Class<?> cls)
  nameWithType: SimpleType.SimpleType(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(Class<?> cls)
  overload: com.fasterxml.jackson.databind.type.SimpleType.SimpleType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  summary: >-
    Constructor only used by core Jackson databind functionality; should never be called by application code.


    As with other direct construction that by-passes <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">TypeFactory</xref>, no introspection occurs with respect to super-types; caller must be aware of consequences if using this method.
  syntax:
    content: protected SimpleType(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  id: SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts)
  nameWithType: SimpleType.SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts)
  overload: com.fasterxml.jackson.databind.type.SimpleType.SimpleType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInts
      type: com.fasterxml.jackson.databind.JavaType[]
- uid: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)
  id: SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int extraHash, Object valueHandler, Object typeHandler, boolean asStatic)
  nameWithType: SimpleType.SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int extraHash, Object valueHandler, Object typeHandler, boolean asStatic)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int extraHash, Object valueHandler, Object typeHandler, boolean asStatic)
  overload: com.fasterxml.jackson.databind.type.SimpleType.SimpleType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  summary: Pass-through constructor used by <xref uid="com.fasterxml.jackson.databind.type.ReferenceType" data-throw-if-not-resolved="false">ReferenceType</xref>.
  syntax:
    content: protected SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, int extraHash, Object valueHandler, Object typeHandler, boolean asStatic)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInts
      type: com.fasterxml.jackson.databind.JavaType[]
    - id: extraHash
      type: int
    - id: valueHandler
      type: java.lang.Object
    - id: typeHandler
      type: java.lang.Object
    - id: asStatic
      type: boolean
- uid: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)
  id: SimpleType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic)
  nameWithType: SimpleType.SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic)
  overload: com.fasterxml.jackson.databind.type.SimpleType.SimpleType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected SimpleType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, Object valueHandler, Object typeHandler, boolean asStatic)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInts
      type: com.fasterxml.jackson.databind.JavaType[]
    - id: valueHandler
      type: java.lang.Object
    - id: typeHandler
      type: java.lang.Object
    - id: asStatic
      type: boolean
- uid: com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class<?>)
  id: _narrow(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: _narrow(Class<?> subclass)
  nameWithType: SimpleType._narrow(Class<?> subclass)
  fullName: com.fasterxml.jackson.databind.type.SimpleType._narrow(Class<?> subclass)
  overload: com.fasterxml.jackson.databind.type.SimpleType._narrow*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected JavaType _narrow(Class<?> subclass)
    parameters:
    - id: subclass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName()
  id: buildCanonicalName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: buildCanonicalName()
  nameWithType: SimpleType.buildCanonicalName()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName()
  overload: com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected String buildCanonicalName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class<?>)
  id: construct(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: construct(Class<?> cls)
  nameWithType: SimpleType.construct(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.construct(Class<?> cls)
  overload: com.fasterxml.jackson.databind.type.SimpleType.construct*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: >-
    Method that should NOT to be used by application code: it does NOT properly handle inspection of super-types, so neither parent Classes nor implemented Interfaces are accessible with resulting type instance. Instead, please use <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">TypeFactory</xref>'s `constructType` methods which handle introspection appropriately.


    Note that prior to 2.7, method usage was not limited and would typically have worked acceptably: the problem comes from inability to resolve super-type information, for which <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">TypeFactory</xref> is needed.
  syntax:
    content: public static SimpleType construct(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.type.SimpleType
- uid: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(java.lang.Class<?>)
  id: constructUnsafe(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: constructUnsafe(Class<?> raw)
  nameWithType: SimpleType.constructUnsafe(Class<?> raw)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(Class<?> raw)
  overload: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: >-
    Method used by core Jackson classes: NOT to be used by application code: it does NOT properly handle inspection of super-types, so neither parent Classes nor implemented Interfaces are accessible with resulting type instance.


    NOTE: public only because it is called by `ObjectMapper` which is not in same package
  syntax:
    content: public static SimpleType constructUnsafe(Class<?> raw)
    parameters:
    - id: raw
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.type.SimpleType
- uid: com.fasterxml.jackson.databind.type.SimpleType.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: equals(Object o)
  nameWithType: SimpleType.equals(Object o)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.equals(Object o)
  overload: com.fasterxml.jackson.databind.type.SimpleType.equals*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature(java.lang.StringBuilder)
  id: getErasedSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: getErasedSignature(StringBuilder sb)
  nameWithType: SimpleType.getErasedSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing signature without generic type information, in form compatible with all versions of JVM, and specifically used for type descriptions when generating byte code.
  syntax:
    content: public StringBuilder getErasedSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature(java.lang.StringBuilder)
  id: getGenericSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: getGenericSignature(StringBuilder sb)
  nameWithType: SimpleType.getGenericSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public StringBuilder getGenericSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.SimpleType.hasContentType()
  id: hasContentType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: hasContentType()
  nameWithType: SimpleType.hasContentType()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.hasContentType()
  overload: com.fasterxml.jackson.databind.type.SimpleType.hasContentType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Accessor that allows determining whether <xref uid="com.fasterxml.jackson.databind.type.SimpleType.getContentType*" data-throw-if-not-resolved="false">#getContentType()</xref> should return a non-null value (that is, there is a "content type") or not. True if <xref uid="com.fasterxml.jackson.databind.type.SimpleType.isContainerType()" data-throw-if-not-resolved="false">#isContainerType()</xref> or <xref uid="com.fasterxml.jackson.databind.type.SimpleType.isReferenceType*" data-throw-if-not-resolved="false">#isReferenceType()</xref> return true.
  syntax:
    content: public boolean hasContentType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.SimpleType.isContainerType()
  id: isContainerType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: isContainerType()
  nameWithType: SimpleType.isContainerType()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.isContainerType()
  overload: com.fasterxml.jackson.databind.type.SimpleType.isContainerType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean isContainerType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.SimpleType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  id: refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  nameWithType: SimpleType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  overload: com.fasterxml.jackson.databind.type.SimpleType.refine*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will try to create and return a sub-type instance for known parameterized types; for other types will return \`null\` to indicate that no just refinement makes necessary sense, without trying to detect special status through implemented interfaces.
  syntax:
    content: public JavaType refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
    parameters:
    - id: rawType
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInterfaces
      type: com.fasterxml.jackson.databind.JavaType[]
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.SimpleType.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: toString()
  nameWithType: SimpleType.toString()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.toString()
  overload: com.fasterxml.jackson.databind.type.SimpleType.toString*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentType(com.fasterxml.jackson.databind.JavaType)
  id: withContentType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: withContentType(JavaType contentType)
  nameWithType: SimpleType.withContentType(JavaType contentType)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentType(JavaType contentType)
  overload: com.fasterxml.jackson.databind.type.SimpleType.withContentType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that may be called on structured types that have a so-called content type (element of arrays, value type of Maps, referenced type of referential types), and will construct a new instance that is identical to this instance, except that it has specified content type, instead of current one. If content type is already set to given type, `this` is returned. If type does not have a content type (which is the case with `SimpleType`), <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> will be thrown.
  syntax:
    content: public JavaType withContentType(JavaType contentType)
    parameters:
    - id: contentType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler(java.lang.Object)
  id: withContentTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: withContentTypeHandler(Object h)
  nameWithType: SimpleType.withContentTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content type (element type for arrays, value type for Maps and so forth) handler assigned.
  syntax:
    content: public JavaType withContentTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler(java.lang.Object)
  id: withContentValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: withContentValueHandler(Object h)
  nameWithType: SimpleType.withContentValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content value handler assigned.
  syntax:
    content: public SimpleType withContentValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.SimpleType
- uid: com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping()
  id: withStaticTyping()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: withStaticTyping()
  nameWithType: SimpleType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping()
  overload: com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: 'Method that can be called to get a type instance that indicates that values of the type should be handled using "static typing" for purposes of serialization (as opposed to "dynamic" aka runtime typing): meaning that no runtime information is needed for determining serializers to use. The main use case is to allow forcing of specific root value serialization type, and specifically in resolving serializers for contained types (element types for arrays, Collections and Maps).'
  syntax:
    content: public SimpleType withStaticTyping()
    return:
      type: com.fasterxml.jackson.databind.type.SimpleType
- uid: com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler(java.lang.Object)
  id: withTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: withTypeHandler(Object h)
  nameWithType: SimpleType.withTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: "\"Copy method\" that will construct a new instance that is identical to this instance, except that it will have specified type handler assigned."
  syntax:
    content: public SimpleType withTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.SimpleType
- uid: com.fasterxml.jackson.databind.type.SimpleType.withValueHandler(java.lang.Object)
  id: withValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.SimpleType
  langs:
  - java
  name: withValueHandler(Object h)
  nameWithType: SimpleType.withValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.SimpleType.withValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified value handler assigned.
  syntax:
    content: public SimpleType withValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.SimpleType
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.SimpleType.SimpleType*
  name: SimpleType
  nameWithType: SimpleType.SimpleType
  fullName: com.fasterxml.jackson.databind.type.SimpleType.SimpleType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBindings
  name: TypeBindings
  nameWithType: TypeBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.type.TypeBase
  name: TypeBase
  nameWithType: TypeBase
  fullName: com.fasterxml.jackson.databind.type.TypeBase
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe*
  name: constructUnsafe
  nameWithType: SimpleType.constructUnsafe
  fullName: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.construct*
  name: construct
  nameWithType: SimpleType.construct
  fullName: com.fasterxml.jackson.databind.type.SimpleType.construct
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType._narrow*
  name: _narrow
  nameWithType: SimpleType._narrow
  fullName: com.fasterxml.jackson.databind.type.SimpleType._narrow
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentType*
  name: withContentType
  nameWithType: SimpleType.withContentType
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler*
  name: withTypeHandler
  nameWithType: SimpleType.withTypeHandler
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler*
  name: withContentTypeHandler
  nameWithType: SimpleType.withContentTypeHandler
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.withValueHandler*
  name: withValueHandler
  nameWithType: SimpleType.withValueHandler
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler*
  name: withContentValueHandler
  nameWithType: SimpleType.withContentValueHandler
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping*
  name: withStaticTyping
  nameWithType: SimpleType.withStaticTyping
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.refine*
  name: refine
  nameWithType: SimpleType.refine
  fullName: com.fasterxml.jackson.databind.type.SimpleType.refine
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName*
  name: buildCanonicalName
  nameWithType: SimpleType.buildCanonicalName
  fullName: com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.isContainerType*
  name: isContainerType
  nameWithType: SimpleType.isContainerType
  fullName: com.fasterxml.jackson.databind.type.SimpleType.isContainerType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.hasContentType*
  name: hasContentType
  nameWithType: SimpleType.hasContentType
  fullName: com.fasterxml.jackson.databind.type.SimpleType.hasContentType
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature*
  name: getErasedSignature
  nameWithType: SimpleType.getErasedSignature
  fullName: com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature*
  name: getGenericSignature
  nameWithType: SimpleType.getGenericSignature
  fullName: com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.toString*
  name: toString
  nameWithType: SimpleType.toString
  fullName: com.fasterxml.jackson.databind.type.SimpleType.toString
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType.equals*
  name: equals
  nameWithType: SimpleType.equals
  fullName: com.fasterxml.jackson.databind.type.SimpleType.equals
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  name: JavaType.isJavaLangObject()
  nameWithType: JavaType.isJavaLangObject()
  fullName: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
- uid: com.fasterxml.jackson.databind.JavaType.getRawClass()
  name: JavaType.getRawClass()
  nameWithType: JavaType.getRawClass()
  fullName: com.fasterxml.jackson.databind.JavaType.getRawClass()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  name: JavaType.isCollectionLikeType()
  nameWithType: JavaType.isCollectionLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
  name: TypeBase.getGenericSignature(StringBuilder)
  nameWithType: TypeBase.getGenericSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JavaType.getKeyType()
  name: JavaType.getKeyType()
  nameWithType: JavaType.getKeyType()
  fullName: com.fasterxml.jackson.databind.JavaType.getKeyType()
- uid: com.fasterxml.jackson.databind.JavaType.isFinal()
  name: JavaType.isFinal()
  nameWithType: JavaType.isFinal()
  fullName: com.fasterxml.jackson.databind.JavaType.isFinal()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  name: TypeBase.containedTypeCount()
  nameWithType: TypeBase.containedTypeCount()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  name: TypeBase.findSuperType(Class<?>)
  nameWithType: TypeBase.findSuperType(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isEnumType()
  name: JavaType.isEnumType()
  nameWithType: JavaType.isEnumType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  name: JavaType.getContentTypeHandler()
  nameWithType: JavaType.getContentTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
- uid: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: TypeBase.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: TypeBase.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  name: JavaType.withContentType(JavaType)
  nameWithType: JavaType.withContentType(JavaType)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  name: TypeBase.containedTypeName(int)
  nameWithType: TypeBase.containedTypeName(int)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
- uid: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
  name: TypeBase.buildCanonicalName()
  nameWithType: TypeBase.buildCanonicalName()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
- uid: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  name: JavaType.<T>getValueHandler()
  nameWithType: JavaType.<T>getValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  name: TypeBase._bogusSuperClass(Class<?>)
  nameWithType: TypeBase._bogusSuperClass(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isInterface()
  name: JavaType.isInterface()
  nameWithType: JavaType.isInterface()
  fullName: com.fasterxml.jackson.databind.JavaType.isInterface()
- uid: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  name: JavaType.<T>getTypeHandler()
  nameWithType: JavaType.<T>getTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  name: JavaType.getGenericSignature()
  nameWithType: JavaType.getGenericSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  name: TypeBase.getBindings()
  nameWithType: TypeBase.getBindings()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
- uid: com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  name: JavaType.withTypeHandler(Object)
  nameWithType: JavaType.withTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  name: JavaType._narrow(Class<?>)
  nameWithType: JavaType._narrow(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isConcrete()
  name: JavaType.isConcrete()
  nameWithType: JavaType.isConcrete()
  fullName: com.fasterxml.jackson.databind.JavaType.isConcrete()
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  name: JavaType.forcedNarrowBy(Class<?>)
  nameWithType: JavaType.forcedNarrowBy(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isPrimitive()
  name: JavaType.isPrimitive()
  nameWithType: JavaType.isPrimitive()
  fullName: com.fasterxml.jackson.databind.JavaType.isPrimitive()
- uid: com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  name: JavaType.equals(Object)
  nameWithType: JavaType.equals(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.getContentType()
  name: JavaType.getContentType()
  nameWithType: JavaType.getContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentType()
- uid: com.fasterxml.jackson.databind.JavaType.getReferencedType()
  name: JavaType.getReferencedType()
  nameWithType: JavaType.getReferencedType()
  fullName: com.fasterxml.jackson.databind.JavaType.getReferencedType()
- uid: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  name: JavaType.withHandlersFrom(JavaType)
  nameWithType: JavaType.withHandlersFrom(JavaType)
  fullName: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  name: JavaType.containedTypeOrUnknown(int)
  nameWithType: JavaType.containedTypeOrUnknown(int)
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
- uid: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  name: JavaType.hasGenericTypes()
  nameWithType: JavaType.hasGenericTypes()
  fullName: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
- uid: com.fasterxml.jackson.databind.JavaType.useStaticType()
  name: JavaType.useStaticType()
  nameWithType: JavaType.useStaticType()
  fullName: com.fasterxml.jackson.databind.JavaType.useStaticType()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  name: TypeBase.containedType(int)
  nameWithType: TypeBase.containedType(int)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
- uid: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  name: ResolvedType.isReferenceType()
  nameWithType: ResolvedType.isReferenceType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
- uid: com.fasterxml.jackson.databind.JavaType.hashCode()
  name: JavaType.hashCode()
  nameWithType: JavaType.hashCode()
  fullName: com.fasterxml.jackson.databind.JavaType.hashCode()
- uid: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  name: JavaType.withStaticTyping()
  nameWithType: JavaType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
  name: TypeBase.getErasedSignature(StringBuilder)
  nameWithType: TypeBase.getErasedSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  name: JavaType.getErasedSignature()
  nameWithType: JavaType.getErasedSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  name: TypeBase.getInterfaces()
  nameWithType: TypeBase.getInterfaces()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
- uid: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: JavaType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  nameWithType: JavaType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  fullName: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.JavaType.hasContentType()
  name: JavaType.hasContentType()
  nameWithType: JavaType.hasContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.hasContentType()
- uid: com.fasterxml.jackson.databind.JavaType.isArrayType()
  name: JavaType.isArrayType()
  nameWithType: JavaType.isArrayType()
  fullName: com.fasterxml.jackson.databind.JavaType.isArrayType()
- uid: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  name: JavaType.withContentTypeHandler(Object)
  nameWithType: JavaType.withContentTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSubTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSubTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.hasHandlers()
  name: JavaType.hasHandlers()
  nameWithType: JavaType.hasHandlers()
  fullName: com.fasterxml.jackson.databind.JavaType.hasHandlers()
- uid: com.fasterxml.jackson.databind.JavaType.toString()
  name: JavaType.toString()
  nameWithType: JavaType.toString()
  fullName: com.fasterxml.jackson.databind.JavaType.toString()
- uid: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  name: JavaType.getContentValueHandler()
  nameWithType: JavaType.getContentValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.getParameterSource()
  name: JavaType.getParameterSource()
  nameWithType: JavaType.getParameterSource()
  fullName: com.fasterxml.jackson.databind.JavaType.getParameterSource()
- uid: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  name: JavaType.isMapLikeType()
  nameWithType: JavaType.isMapLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
- uid: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  name: JavaType.hasValueHandler()
  nameWithType: JavaType.hasValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  name: JavaType.withValueHandler(Object)
  nameWithType: JavaType.withValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.isContainerType()
  name: JavaType.isContainerType()
  nameWithType: JavaType.isContainerType()
  fullName: com.fasterxml.jackson.databind.JavaType.isContainerType()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  name: TypeBase.getSuperClass()
  nameWithType: TypeBase.getSuperClass()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
- uid: com.fasterxml.jackson.databind.JavaType.isAbstract()
  name: JavaType.isAbstract()
  nameWithType: JavaType.isAbstract()
  fullName: com.fasterxml.jackson.databind.JavaType.isAbstract()
- uid: com.fasterxml.jackson.databind.JavaType.isThrowable()
  name: JavaType.isThrowable()
  nameWithType: JavaType.isThrowable()
  fullName: com.fasterxml.jackson.databind.JavaType.isThrowable()
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  name: JavaType.hasRawClass(Class<?>)
  nameWithType: JavaType.hasRawClass(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  name: TypeBase.toCanonical()
  nameWithType: TypeBase.toCanonical()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSuperTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  name: TypeBase._classSignature(Class<?>,StringBuilder,boolean)
  nameWithType: TypeBase._classSignature(Class<?>,StringBuilder,boolean)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
- uid: com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: TypeBase.serialize(JsonGenerator,SerializerProvider)
  nameWithType: TypeBase.serialize(JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  name: JavaType.isEnumImplType()
  nameWithType: JavaType.isEnumImplType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
- uid: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  name: JavaType.withContentValueHandler(Object)
  nameWithType: JavaType.withContentValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  name: TypeBase.findTypeParameters(Class<?>)
  nameWithType: TypeBase.findTypeParameters(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class
  name: TypeBase.findSuperType(Class
  nameWithType: TypeBase.findSuperType(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class
- uid: T>getValueHandler()
  name: T>getValueHandler()
  nameWithType: T>getValueHandler()
  fullName: T>getValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.
  name: JavaType.
  nameWithType: JavaType.
  fullName: com.fasterxml.jackson.databind.JavaType.
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class
  name: TypeBase._bogusSuperClass(Class
  nameWithType: TypeBase._bogusSuperClass(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class
- uid: T>getTypeHandler()
  name: T>getTypeHandler()
  nameWithType: T>getTypeHandler()
  fullName: T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class
  name: JavaType._narrow(Class
  nameWithType: JavaType._narrow(Class
  fullName: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
  name: JavaType.forcedNarrowBy(Class
  nameWithType: JavaType.forcedNarrowBy(Class
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class
  name: JavaType.refine(Class
  nameWithType: JavaType.refine(Class
  fullName: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: ?>,TypeBindings,JavaType,JavaType[])
  nameWithType: ?>,TypeBindings,JavaType,JavaType[])
  fullName: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
  name: JavaType.isTypeOrSubTypeOf(Class
  nameWithType: JavaType.isTypeOrSubTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
  name: JavaType.hasRawClass(Class
  nameWithType: JavaType.hasRawClass(Class
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
  name: JavaType.isTypeOrSuperTypeOf(Class
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
- uid: ?>,java.lang.StringBuilder,boolean)
  name: ?>,StringBuilder,boolean)
  nameWithType: ?>,StringBuilder,boolean)
  fullName: ?>,java.lang.StringBuilder,boolean)
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class
  name: TypeBase._classSignature(Class
  nameWithType: TypeBase._classSignature(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class
  name: TypeBase.findTypeParameters(Class
  nameWithType: TypeBase.findTypeParameters(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class
