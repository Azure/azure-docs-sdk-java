### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithNewTier.withNewTier*"
fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithNewTier.withNewTier"
name: "withNewTier"
nameWithType: "DataLakeStoreAccount.UpdateStages.WithNewTier.withNewTier"
members:
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithNewTier.withNewTier(com.azure.resourcemanager.datalakestore.models.TierType)"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithNewTier.withNewTier(TierType newTier)"
  name: "withNewTier(TierType newTier)"
  nameWithType: "DataLakeStoreAccount.UpdateStages.WithNewTier.withNewTier(TierType newTier)"
  summary: "Specifies the newTier property: The commitment tier to use for next month.."
  parameters:
  - description: "The commitment tier to use for next month."
    name: "newTier"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataLakeStoreAccount.Update withNewTier(TierType newTier)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.Update?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
