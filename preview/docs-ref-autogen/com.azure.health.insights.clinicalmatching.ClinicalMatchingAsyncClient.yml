### YamlMime:JavaType
uid: "com.azure.health.insights.clinicalmatching.ClinicalMatchingAsyncClient"
fullName: "com.azure.health.insights.clinicalmatching.ClinicalMatchingAsyncClient"
name: "ClinicalMatchingAsyncClient"
nameWithType: "ClinicalMatchingAsyncClient"
summary: "Initializes a new instance of the asynchronous Clinical<wbr>Matching<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ClinicalMatchingAsyncClient**"
methods:
- uid: "com.azure.health.insights.clinicalmatching.ClinicalMatchingAsyncClient.beginMatchTrials(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.health.insights.clinicalmatching.ClinicalMatchingAsyncClient.beginMatchTrials(BinaryData trialMatcherData, RequestOptions requestOptions)"
  name: "beginMatchTrials(BinaryData trialMatcherData, RequestOptions requestOptions)"
  nameWithType: "ClinicalMatchingAsyncClient.beginMatchTrials(BinaryData trialMatcherData, RequestOptions requestOptions)"
  summary: "Create Trial Matcher job"
  parameters:
  - description: "The body of the Trial Matcher request."
    name: "trialMatcherData"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<BinaryData,BinaryData> beginMatchTrials(BinaryData trialMatcherData, RequestOptions requestOptions)"
  desc: "Create Trial Matcher job\n\nCreates a Trial Matcher job with the given request body.\n\n**Header Parameters**\n\n    | ------------------------ | ------ | -------- | -------------------------------------------- |\n    | Name                     | Type   | Required | Description                                  |\n    | repeatability-request-id | String | No       | Repeatability request ID header              |\n    | repeatability-first-sent | String | No       | Repeatability first sent header as HTTP-date |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     patients (Required): [\n          (Required){\n             id: String (Required)\n             info (Optional): {\n                 sex: String(female/male/unspecified) (Optional)\n                 birthDate: LocalDate (Optional)\n                 clinicalInfo (Optional): [\n                      (Optional){\n                         system: String (Required)\n                         code: String (Required)\n                         name: String (Optional)\n                         value: String (Optional)\n                     }\n                 ]\n             }\n             data (Optional): [\n                  (Optional){\n                     type: String(note/fhirBundle/dicom/genomicSequencing) (Required)\n                     clinicalType: String(consultation/dischargeSummary/historyAndPhysical/procedure/progress/imaging/laboratory/pathology) (Optional)\n                     id: String (Required)\n                     language: String (Optional)\n                     createdDateTime: OffsetDateTime (Optional)\n                     content (Required): {\n                         sourceType: String(inline/reference) (Required)\n                         value: String (Required)\n                     }\n                 }\n             ]\n         }\n     ]\n     configuration (Optional): {\n         verbose: Boolean (Optional)\n         includeEvidence: Boolean (Optional)\n         clinicalTrials (Required): {\n             customTrials (Optional): [\n                  (Optional){\n                     id: String (Required)\n                     eligibilityCriteriaText: String (Optional)\n                     demographics (Optional): {\n                         acceptedSex: String(all/female/male) (Optional)\n                         acceptedAgeRange (Optional): {\n                             minimumAge (Optional): {\n                                 unit: String(years/months/days) (Required)\n                                 value: double (Required)\n                             }\n                             maximumAge (Optional): (recursive schema, see maximumAge above)\n                         }\n                     }\n                     metadata (Required): {\n                         phases (Optional): [\n                             String(notApplicable/earlyPhase1/phase1/phase2/phase3/phase4) (Optional)\n                         ]\n                         studyType: String(interventional/observational/expandedAccess/patientRegistries) (Optional)\n                         recruitmentStatus: String(unknownStatus/notYetRecruiting/recruiting/enrollingByInvitation) (Optional)\n                         conditions (Required): [\n                             String (Required)\n                         ]\n                         sponsors (Optional): [\n                             String (Optional)\n                         ]\n                         contacts (Optional): [\n                              (Optional){\n                                 name: String (Optional)\n                                 email: String (Optional)\n                                 phone: String (Optional)\n                             }\n                         ]\n                         facilities (Optional): [\n                              (Optional){\n                                 name: String (Required)\n                                 city: String (Optional)\n                                 state: String (Optional)\n                                 countryOrRegion: String (Required)\n                             }\n                         ]\n                     }\n                 }\n             ]\n             registryFilters (Optional): [\n                  (Optional){\n                     conditions (Optional): [\n                         String (Optional)\n                     ]\n                     studyTypes (Optional): [\n                         String(interventional/observational/expandedAccess/patientRegistries) (Optional)\n                     ]\n                     recruitmentStatuses (Optional): [\n                         String(unknownStatus/notYetRecruiting/recruiting/enrollingByInvitation) (Optional)\n                     ]\n                     sponsors (Optional): [\n                         String (Optional)\n                     ]\n                     phases (Optional): [\n                         String(notApplicable/earlyPhase1/phase1/phase2/phase3/phase4) (Optional)\n                     ]\n                     purposes (Optional): [\n                         String(notApplicable/screening/diagnostic/prevention/healthServicesResearch/treatment/deviceFeasibility/supportiveCare/basicScience/other) (Optional)\n                     ]\n                     ids (Optional): [\n                         String (Optional)\n                     ]\n                     sources (Optional): [\n                         String(custom/clinicaltrials.gov) (Optional)\n                     ]\n                     facilityNames (Optional): [\n                         String (Optional)\n                     ]\n                     facilityLocations (Optional): [\n                          (Optional){\n                             city: String (Optional)\n                             state: String (Optional)\n                             countryOrRegion: String (Required)\n                         }\n                     ]\n                     facilityAreas (Optional): [\n                          (Optional){\n                             type: String(Feature) (Required)\n                             geometry (Required): {\n                                 type: String(Point) (Required)\n                                 coordinates (Required): [\n                                     double (Required)\n                                 ]\n                             }\n                             properties (Required): {\n                                 subType: String(Circle) (Required)\n                                 radius: double (Required)\n                             }\n                         }\n                     ]\n                 }\n             ]\n         }\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     jobId: String (Required)\n     createdDateTime: OffsetDateTime (Required)\n     expirationDateTime: OffsetDateTime (Required)\n     lastUpdateDateTime: OffsetDateTime (Required)\n     status: String(notStarted/running/succeeded/failed/partiallyCompleted) (Required)\n     errors (Optional): [\n         ResponseError (Optional)\n     ]\n     results (Optional): {\n         patients (Required): [\n              (Required){\n                 id: String (Required)\n                 inferences (Required): [\n                      (Required){\n                         type: String(trialEligibility) (Required)\n                         value: String (Required)\n                         description: String (Optional)\n                         confidenceScore: Double (Optional)\n                         evidence (Optional): [\n                              (Optional){\n                                 eligibilityCriteriaEvidence: String (Optional)\n                                 patientDataEvidence (Optional): {\n                                     id: String (Required)\n                                     text: String (Optional)\n                                     offset: int (Required)\n                                     length: int (Required)\n                                 }\n                                 patientInfoEvidence (Optional): {\n                                     system: String (Required)\n                                     code: String (Required)\n                                     name: String (Optional)\n                                     value: String (Optional)\n                                 }\n                                 importance: Double (Optional)\n                             }\n                         ]\n                         id: String (Optional)\n                         source: String(custom/clinicaltrials.gov) (Optional)\n                         metadata (Optional): {\n                             phases (Optional): [\n                                 String(notApplicable/earlyPhase1/phase1/phase2/phase3/phase4) (Optional)\n                             ]\n                             studyType: String(interventional/observational/expandedAccess/patientRegistries) (Optional)\n                             recruitmentStatus: String(unknownStatus/notYetRecruiting/recruiting/enrollingByInvitation) (Optional)\n                             conditions (Required): [\n                                 String (Required)\n                             ]\n                             sponsors (Optional): [\n                                 String (Optional)\n                             ]\n                             contacts (Optional): [\n                                  (Optional){\n                                     name: String (Optional)\n                                     email: String (Optional)\n                                     phone: String (Optional)\n                                 }\n                             ]\n                             facilities (Optional): [\n                                  (Optional){\n                                     name: String (Required)\n                                     city: String (Optional)\n                                     state: String (Optional)\n                                     countryOrRegion: String (Required)\n                                 }\n                             ]\n                         }\n                     }\n                 ]\n                 neededClinicalInfo (Optional): [\n                      (Optional){\n                         system: String (Required)\n                         code: String (Required)\n                         name: String (Optional)\n                         value: String (Optional)\n                         semanticType: String (Optional)\n                         category: String (Optional)\n                     }\n                 ]\n             }\n         ]\n         modelVersion: String (Required)\n         knowledgeGraphLastUpdateDate: LocalDate (Optional)\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the response for the Trial Matcher request."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.health.insights.clinicalmatching.ClinicalMatchingAsyncClient.beginMatchTrials(com.azure.health.insights.clinicalmatching.models.TrialMatcherData)"
  fullName: "com.azure.health.insights.clinicalmatching.ClinicalMatchingAsyncClient.beginMatchTrials(TrialMatcherData trialMatcherData)"
  name: "beginMatchTrials(TrialMatcherData trialMatcherData)"
  nameWithType: "ClinicalMatchingAsyncClient.beginMatchTrials(TrialMatcherData trialMatcherData)"
  summary: "Create Trial Matcher job"
  parameters:
  - description: "The body of the Trial Matcher request."
    name: "trialMatcherData"
    type: "<xref href=\"com.azure.health.insights.clinicalmatching.models.TrialMatcherData?alt=com.azure.health.insights.clinicalmatching.models.TrialMatcherData&text=TrialMatcherData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<TrialMatcherResult,TrialMatcherResult> beginMatchTrials(TrialMatcherData trialMatcherData)"
  desc: "Create Trial Matcher job\n\nCreates a Trial Matcher job with the given request body."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of the response for the Trial Matcher request."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.health.insights.clinicalmatching.models.TrialMatcherResult?alt=com.azure.health.insights.clinicalmatching.models.TrialMatcherResult&text=TrialMatcherResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.health.insights.clinicalmatching.models.TrialMatcherResult?alt=com.azure.health.insights.clinicalmatching.models.TrialMatcherResult&text=TrialMatcherResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ClinicalMatchingClient type."
metadata: {}
package: "com.azure.health.insights.clinicalmatching"
artifact: com.azure:azure-health-insights-clinicalmatching:1.0.0-beta.1
