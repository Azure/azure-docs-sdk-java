### YamlMime:JavaType
uid: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient"
fullName: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient"
name: "EmergingIssuesClient"
nameWithType: "EmergingIssuesClient"
summary: "An instance of this class provides access to all the operations defined in Emerging<wbr>Issues<wbr>Client."
syntax: "public interface **EmergingIssuesClient**"
methods:
- uid: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.get(com.azure.resourcemanager.resourcehealth.models.IssueNameParameter)"
  fullName: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.get(IssueNameParameter issueName)"
  name: "get(IssueNameParameter issueName)"
  nameWithType: "EmergingIssuesClient.get(IssueNameParameter issueName)"
  summary: "Gets Azure services' emerging issues."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the emerging issue."
    name: "issueName"
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.models.IssueNameParameter?alt=com.azure.resourcemanager.resourcehealth.models.IssueNameParameter&text=IssueNameParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EmergingIssuesGetResultInner get(IssueNameParameter issueName)"
  desc: "Gets Azure services' emerging issues."
  returns:
    description: "azure services' emerging issues."
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner?alt=com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner&text=EmergingIssuesGetResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.getWithResponse(com.azure.resourcemanager.resourcehealth.models.IssueNameParameter,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.getWithResponse(IssueNameParameter issueName, Context context)"
  name: "getWithResponse(IssueNameParameter issueName, Context context)"
  nameWithType: "EmergingIssuesClient.getWithResponse(IssueNameParameter issueName, Context context)"
  summary: "Gets Azure services' emerging issues."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the emerging issue."
    name: "issueName"
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.models.IssueNameParameter?alt=com.azure.resourcemanager.resourcehealth.models.IssueNameParameter&text=IssueNameParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EmergingIssuesGetResultInner> getWithResponse(IssueNameParameter issueName, Context context)"
  desc: "Gets Azure services' emerging issues."
  returns:
    description: "azure services' emerging issues along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner?alt=com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner&text=EmergingIssuesGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.list()"
  fullName: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.list()"
  name: "list()"
  nameWithType: "EmergingIssuesClient.list()"
  summary: "Lists Azure services' emerging issues."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<EmergingIssuesGetResultInner> list()"
  desc: "Lists Azure services' emerging issues."
  returns:
    description: "the list of emerging issues as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner?alt=com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner&text=EmergingIssuesGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "EmergingIssuesClient.list(Context context)"
  summary: "Lists Azure services' emerging issues."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<EmergingIssuesGetResultInner> list(Context context)"
  desc: "Lists Azure services' emerging issues."
  returns:
    description: "the list of emerging issues as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner?alt=com.azure.resourcemanager.resourcehealth.fluent.models.EmergingIssuesGetResultInner&text=EmergingIssuesGetResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in EmergingIssuesClient."
metadata: {}
package: "com.azure.resourcemanager.resourcehealth.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resourcehealth:1.1.0-beta.1
