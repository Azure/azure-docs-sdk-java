### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.JSONPObject
  id: JSONPObject
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject(java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.util.JSONPObject._function
  - com.fasterxml.jackson.databind.util.JSONPObject._serializationType
  - com.fasterxml.jackson.databind.util.JSONPObject._value
  - com.fasterxml.jackson.databind.util.JSONPObject.getFunction()
  - com.fasterxml.jackson.databind.util.JSONPObject.getSerializationType()
  - com.fasterxml.jackson.databind.util.JSONPObject.getValue()
  - com.fasterxml.jackson.databind.util.JSONPObject.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.util.JSONPObject.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  langs:
  - java
  name: JSONPObject
  nameWithType: JSONPObject
  fullName: com.fasterxml.jackson.databind.util.JSONPObject
  type: Class
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Container class that can be used to wrap any Object instances (including nulls), and will serialize embedded in [JSONP][] wrapping.



    [JSONP]: http://en.wikipedia.org/wiki/JSONP
  syntax:
    content: public class JSONPObject implements JsonSerializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.JsonSerializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject(java.lang.String,java.lang.Object)
  id: JSONPObject(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: JSONPObject(String function, Object value)
  nameWithType: JSONPObject.JSONPObject(String function, Object value)
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject(String function, Object value)
  overload: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public JSONPObject(String function, Object value)
    parameters:
    - id: function
      type: java.lang.String
    - id: value
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject(java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  id: JSONPObject(java.lang.String,java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: JSONPObject(String function, Object value, JavaType asType)
  nameWithType: JSONPObject.JSONPObject(String function, Object value, JavaType asType)
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject(String function, Object value, JavaType asType)
  overload: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public JSONPObject(String function, Object value, JavaType asType)
    parameters:
    - id: function
      type: java.lang.String
    - id: value
      type: java.lang.Object
    - id: asType
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.JSONPObject._function
  id: _function
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: _function
  nameWithType: JSONPObject._function
  fullName: com.fasterxml.jackson.databind.util.JSONPObject._function
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: JSONP function name to use for serialization
  syntax:
    content: protected final String _function
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.JSONPObject._serializationType
  id: _serializationType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: _serializationType
  nameWithType: JSONPObject._serializationType
  fullName: com.fasterxml.jackson.databind.util.JSONPObject._serializationType
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Optional static type to use for serialization; if null, runtime type is used. Can be used to specify declared type which defines serializer to use, as well as aspects of extra type information to include (if any).
  syntax:
    content: protected final JavaType _serializationType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.JSONPObject._value
  id: _value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: _value
  nameWithType: JSONPObject._value
  fullName: com.fasterxml.jackson.databind.util.JSONPObject._value
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Value to be serialized as JSONP padded; can be null.
  syntax:
    content: protected final Object _value
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONPObject.getFunction()
  id: getFunction()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: getFunction()
  nameWithType: JSONPObject.getFunction()
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.getFunction()
  overload: com.fasterxml.jackson.databind.util.JSONPObject.getFunction*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public String getFunction()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.JSONPObject.getSerializationType()
  id: getSerializationType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: getSerializationType()
  nameWithType: JSONPObject.getSerializationType()
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.getSerializationType()
  overload: com.fasterxml.jackson.databind.util.JSONPObject.getSerializationType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public JavaType getSerializationType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.util.JSONPObject.getValue()
  id: getValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: getValue()
  nameWithType: JSONPObject.getValue()
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.getValue()
  overload: com.fasterxml.jackson.databind.util.JSONPObject.getValue*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public Object getValue()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONPObject.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: serialize(JsonGenerator gen, SerializerProvider provider)
  nameWithType: JSONPObject.serialize(JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.serialize(JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.util.JSONPObject.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Serialization method called when no additional type information is to be included in serialization.
  syntax:
    content: public void serialize(JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.JSONPObject.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.JSONPObject
  langs:
  - java
  name: serializeWithType(JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  nameWithType: JSONPObject.serializeWithType(JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.serializeWithType(JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.util.JSONPObject.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Serialization method called when additional type information is expected to be included in serialization, for deserialization to use.


    Usually implementation consists of a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypePrefix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypePrefix</xref> followed by serialization of contents, followed by a call to <xref uid="com.fasterxml.jackson.databind.jsontype.TypeSerializer.writeTypeSuffix*" data-throw-if-not-resolved="false">TypeSerializer#writeTypeSuffix</xref>). Details of the type id argument to pass depend on shape of JSON Object used (Array, Object or scalar like String/Number/Boolean).


    Note that some types (most notably, "natural" types: String, Integer, Double and Boolean) never include type information.
  syntax:
    content: public void serializeWithType(JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject*
  name: JSONPObject
  nameWithType: JSONPObject.JSONPObject
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.JSONPObject
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.util.JSONPObject.serializeWithType*
  name: serializeWithType
  nameWithType: JSONPObject.serializeWithType
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.serializeWithType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONPObject.serialize*
  name: serialize
  nameWithType: JSONPObject.serialize
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.serialize
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONPObject.getFunction*
  name: getFunction
  nameWithType: JSONPObject.getFunction
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.getFunction
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONPObject.getValue*
  name: getValue
  nameWithType: JSONPObject.getValue
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.getValue
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.JSONPObject.getSerializationType*
  name: getSerializationType
  nameWithType: JSONPObject.getSerializationType
  fullName: com.fasterxml.jackson.databind.util.JSONPObject.getSerializationType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.fasterxml.jackson.databind.JsonSerializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
