### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.exc.StreamReadException.withParser*"
fullName: "com.fasterxml.jackson.core.exc.StreamReadException.withParser"
name: "withParser"
nameWithType: "StreamReadException.withParser"
members:
- uid: "com.fasterxml.jackson.core.exc.StreamReadException.withParser(com.fasterxml.jackson.core.JsonParser)"
  fullName: "com.fasterxml.jackson.core.exc.StreamReadException.withParser(JsonParser p)"
  name: "withParser(JsonParser p)"
  nameWithType: "StreamReadException.withParser(JsonParser p)"
  summary: "Fluent method that may be used to assign originating <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref>, to be accessed using <xref uid=\"com.fasterxml.jackson.core.exc.StreamReadException.getProcessor()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getProcessor()\"></xref>.\n\nNOTE: \\`this\\` instance is modified and no new instance is constructed."
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract StreamReadException withParser(JsonParser p)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.exc.StreamReadException?alt=com.fasterxml.jackson.core.exc.StreamReadException&text=StreamReadException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.exc"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
