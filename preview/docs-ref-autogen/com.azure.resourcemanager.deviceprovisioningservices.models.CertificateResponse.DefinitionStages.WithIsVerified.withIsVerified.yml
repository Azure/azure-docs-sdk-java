### YamlMime:JavaMember
uid: "com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse.DefinitionStages.WithIsVerified.withIsVerified*"
fullName: "com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse.DefinitionStages.WithIsVerified.withIsVerified"
name: "withIsVerified"
nameWithType: "CertificateResponse.DefinitionStages.WithIsVerified.withIsVerified"
members:
- uid: "com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse.DefinitionStages.WithIsVerified.withIsVerified(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse.DefinitionStages.WithIsVerified.withIsVerified(Boolean isVerified)"
  name: "withIsVerified(Boolean isVerified)"
  nameWithType: "CertificateResponse.DefinitionStages.WithIsVerified.withIsVerified(Boolean isVerified)"
  summary: "Specifies the isVerified property: True indicates that the certificate will be created in verified state and proof of possession will not be required.."
  parameters:
  - description: "True indicates that the certificate will be created in verified state and proof of\n     possession will not be required."
    name: "isVerified"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CertificateResponse.DefinitionStages.WithCreate withIsVerified(Boolean isVerified)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.deviceprovisioningservices.models.CertificateResponse.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.deviceprovisioningservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-deviceprovisioningservices:1.1.0-beta.1
