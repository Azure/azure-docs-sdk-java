### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes
  id: JsonpCharacterEscapes
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.JsonpCharacterEscapes.JsonpCharacterEscapes()
  - com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeCodesForAscii()
  - com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeSequence(int)
  - com.fasterxml.jackson.core.JsonpCharacterEscapes.instance()
  langs:
  - java
  name: JsonpCharacterEscapes
  nameWithType: JsonpCharacterEscapes
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes
  type: Class
  package: com.fasterxml.jackson.core
  summary: Convenience <xref uid="com.fasterxml.jackson.core.io.CharacterEscapes" data-throw-if-not-resolved="false">CharacterEscapes</xref> implementation that escapes Unicode characters \`0x2028\` and \`0x2029\` (in addition to characters escaped otherwise), which are apparently considered linefeeds as per newer Javascript specifications, and consequently problematic when using JSONP (see https://en.wikipedia.org/wiki/JSONP).
  syntax:
    content: public class JsonpCharacterEscapes extends CharacterEscapes
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.io.CharacterEscapes
  inheritedMembers:
  - com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()
  - com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)
  - com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.JsonpCharacterEscapes()
  id: JsonpCharacterEscapes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonpCharacterEscapes
  langs:
  - java
  name: JsonpCharacterEscapes()
  nameWithType: JsonpCharacterEscapes.JsonpCharacterEscapes()
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.JsonpCharacterEscapes()
  overload: com.fasterxml.jackson.core.JsonpCharacterEscapes.JsonpCharacterEscapes*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: public JsonpCharacterEscapes()
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeCodesForAscii()
  id: getEscapeCodesForAscii()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonpCharacterEscapes
  langs:
  - java
  name: getEscapeCodesForAscii()
  nameWithType: JsonpCharacterEscapes.getEscapeCodesForAscii()
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeCodesForAscii()
  overload: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeCodesForAscii*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method generators can call to get lookup table for determining escape handling for first 128 characters of Unicode (ASCII characters. Caller is not to modify contents of this array, since this is expected to be a shared copy.
  syntax:
    content: public int[] getEscapeCodesForAscii()
    return:
      type: int[]
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeSequence(int)
  id: getEscapeSequence(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonpCharacterEscapes
  langs:
  - java
  name: getEscapeSequence(int ch)
  nameWithType: JsonpCharacterEscapes.getEscapeSequence(int ch)
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeSequence(int ch)
  overload: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeSequence*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method generators can call to get lookup table for determining exact escape sequence to use for given character. It can be called for any character, but typically is called for either for ASCII characters for which custom escape sequence is needed; or for any non-ASCII character.
  syntax:
    content: public SerializableString getEscapeSequence(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.instance()
  id: instance()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonpCharacterEscapes
  langs:
  - java
  name: instance()
  nameWithType: JsonpCharacterEscapes.instance()
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.instance()
  overload: com.fasterxml.jackson.core.JsonpCharacterEscapes.instance*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static JsonpCharacterEscapes instance()
    return:
      type: com.fasterxml.jackson.core.JsonpCharacterEscapes
references:
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.JsonpCharacterEscapes*
  name: JsonpCharacterEscapes
  nameWithType: JsonpCharacterEscapes.JsonpCharacterEscapes
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.JsonpCharacterEscapes
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.instance*
  name: instance
  nameWithType: JsonpCharacterEscapes.instance
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.instance
  package: com.fasterxml.jackson.core
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeSequence*
  name: getEscapeSequence
  nameWithType: JsonpCharacterEscapes.getEscapeSequence
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeSequence
  package: com.fasterxml.jackson.core
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeCodesForAscii*
  name: getEscapeCodesForAscii
  nameWithType: JsonpCharacterEscapes.getEscapeCodesForAscii
  fullName: com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeCodesForAscii
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.io.CharacterEscapes
  name: CharacterEscapes
  nameWithType: CharacterEscapes
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)
  name: CharacterEscapes.getEscapeSequence(int)
  nameWithType: CharacterEscapes.getEscapeSequence(int)
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeSequence(int)
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()
  name: CharacterEscapes.standardAsciiEscapesForJSON()
  nameWithType: CharacterEscapes.standardAsciiEscapesForJSON()
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.standardAsciiEscapesForJSON()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()
  name: CharacterEscapes.getEscapeCodesForAscii()
  nameWithType: CharacterEscapes.getEscapeCodesForAscii()
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes.getEscapeCodesForAscii()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
