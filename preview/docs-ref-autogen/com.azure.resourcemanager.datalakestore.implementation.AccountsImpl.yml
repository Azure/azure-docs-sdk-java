### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl"
fullName: "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl"
name: "AccountsImpl"
nameWithType: "AccountsImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AccountsImpl implements Accounts"
constructors:
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.AccountsImpl(com.azure.resourcemanager.datalakestore.fluent.AccountsClient,com.azure.resourcemanager.datalakestore.DataLakeStoreManager)"
methods:
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.checkNameAvailability(java.lang.String,com.azure.resourcemanager.datalakestore.models.CheckNameAvailabilityParameters)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.datalakestore.models.CheckNameAvailabilityParameters,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.define(java.lang.String)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.deleteById(java.lang.String)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.deleteByResourceGroup(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.enableKeyVault(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.enableKeyVaultWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.getById(java.lang.String)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.getByResourceGroup(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.list()"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.listByResourceGroup(java.lang.String)"
- "com.azure.resourcemanager.datalakestore.implementation.AccountsImpl.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.datalakestore.models.Accounts?alt=com.azure.resourcemanager.datalakestore.models.Accounts&text=Accounts\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
