### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer"
  id: "ItemToPageTransformer"
  parent: "com.azure.cosmos.implementation.query"
  children:
  - "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.ItemToPageTransformer(com.azure.cosmos.implementation.RequestChargeTracker,int,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>,java.util.function.Function<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>,java.lang.String>)"
  - "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.apply(reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>)"
  langs:
  - "java"
  name: "OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>"
  nameWithType: "OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>"
  fullName: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>"
  type: "Class"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "private static class OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T> implements Function<Flux<OrderByRowResult<T>>,Flux<FeedResponse<T>>>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.util.function.Function<reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.ItemToPageTransformer(com.azure.cosmos.implementation.RequestChargeTracker,int,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>,java.util.function.Function<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>,java.lang.String>)"
  id: "ItemToPageTransformer(com.azure.cosmos.implementation.RequestChargeTracker,int,java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>,java.util.function.Function<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>,java.lang.String>)"
  parent: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer"
  langs:
  - "java"
  name: "ItemToPageTransformer(RequestChargeTracker tracker, int maxPageSize, ConcurrentMap<String,QueryMetrics> queryMetricsMap, Function<OrderByRowResult<T>,String> orderByContinuationTokenCallback)"
  nameWithType: "OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.ItemToPageTransformer(RequestChargeTracker tracker, int maxPageSize, ConcurrentMap<String,QueryMetrics> queryMetricsMap, Function<OrderByRowResult<T>,String> orderByContinuationTokenCallback)"
  fullName: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.ItemToPageTransformer(RequestChargeTracker tracker, int maxPageSize, ConcurrentMap<String,QueryMetrics> queryMetricsMap, Function<OrderByRowResult<T>,String> orderByContinuationTokenCallback)"
  overload: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.ItemToPageTransformer*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public ItemToPageTransformer(RequestChargeTracker tracker, int maxPageSize, ConcurrentMap<String,QueryMetrics> queryMetricsMap, Function<OrderByRowResult<T>,String> orderByContinuationTokenCallback)"
    parameters:
    - id: "tracker"
      type: "com.azure.cosmos.implementation.RequestChargeTracker"
    - id: "maxPageSize"
      type: "int"
    - id: "queryMetricsMap"
      type: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
    - id: "orderByContinuationTokenCallback"
      type: "java.util.function.Function<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>,java.lang.String>"
- uid: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.apply(reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>)"
  id: "apply(reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>)"
  parent: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer"
  langs:
  - "java"
  name: "apply(Flux<OrderByRowResult<T>> source)"
  nameWithType: "OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.apply(Flux<OrderByRowResult<T>> source)"
  fullName: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.apply(Flux<OrderByRowResult<T>> source)"
  overload: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.apply*"
  type: "Method"
  package: "com.azure.cosmos.implementation.query"
  syntax:
    content: "public Flux<FeedResponse<T>> apply(Flux<OrderByRowResult<T>> source)"
    parameters:
    - id: "source"
      type: "reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>"
references:
- uid: "com.azure.cosmos.implementation.RequestChargeTracker"
  name: "RequestChargeTracker"
  nameWithType: "RequestChargeTracker"
  fullName: "com.azure.cosmos.implementation.RequestChargeTracker"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.util.concurrent.ConcurrentMap<java.lang.String,com.azure.cosmos.implementation.QueryMetrics>"
  spec.java:
  - uid: "java.util.concurrent.ConcurrentMap"
    name: "ConcurrentMap"
    fullName: "java.util.concurrent.ConcurrentMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.azure.cosmos.implementation.QueryMetrics"
    name: "QueryMetrics"
    fullName: "com.azure.cosmos.implementation.QueryMetrics"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.Function<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>,java.lang.String>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult"
    name: "OrderByRowResult"
    fullName: "com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.ItemToPageTransformer*"
  name: "ItemToPageTransformer"
  nameWithType: "OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.ItemToPageTransformer"
  fullName: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.ItemToPageTransformer"
  package: "com.azure.cosmos.implementation.query"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult"
    name: "OrderByRowResult"
    fullName: "com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.models.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer.apply*"
  name: "apply"
  nameWithType: "OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.apply"
  fullName: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.ItemToPageTransformer<T>.apply"
  package: "com.azure.cosmos.implementation.query"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.util.function.Function<reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>"
  name: "Function<Flux<OrderByRowResult<T>>,Flux<FeedResponse<T>>>"
  nameWithType: "Function<Flux<OrderByRowResult<T>>,Flux<FeedResponse<T>>>"
  fullName: "java.util.function.Function<reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult<T>>,reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,com.azure.cosmos.implementation.QueryMetrics"
  name: "String,QueryMetrics"
  nameWithType: "String,QueryMetrics"
  fullName: "java.lang.String,com.azure.cosmos.implementation.QueryMetrics"
- uid: "java.util.concurrent.ConcurrentMap"
  name: "ConcurrentMap"
  nameWithType: "ConcurrentMap"
  fullName: "java.util.concurrent.ConcurrentMap"
- uid: "T>,java.lang.String"
  name: "T>,String"
  nameWithType: "T>,String"
  fullName: "T>,java.lang.String"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult"
  name: "OrderByRowResult"
  nameWithType: "OrderByRowResult"
  fullName: "com.azure.cosmos.implementation.query.orderbyquery.OrderByRowResult"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.cosmos.models.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.models.FeedResponse"
- uid: "T>>,reactor.core.publisher.Flux"
  name: "T>>,Flux"
  nameWithType: "T>>,Flux"
  fullName: "T>>,reactor.core.publisher.Flux"
