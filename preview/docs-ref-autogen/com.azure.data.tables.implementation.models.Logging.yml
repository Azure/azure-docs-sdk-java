### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.implementation.models.Logging
  id: Logging
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models
  children:
  - com.azure.data.tables.implementation.models.Logging.Logging()
  - com.azure.data.tables.implementation.models.Logging.getRetentionPolicy()
  - com.azure.data.tables.implementation.models.Logging.getVersion()
  - com.azure.data.tables.implementation.models.Logging.isDelete()
  - com.azure.data.tables.implementation.models.Logging.isRead()
  - com.azure.data.tables.implementation.models.Logging.isWrite()
  - com.azure.data.tables.implementation.models.Logging.setDelete(boolean)
  - com.azure.data.tables.implementation.models.Logging.setRead(boolean)
  - com.azure.data.tables.implementation.models.Logging.setRetentionPolicy(com.azure.data.tables.implementation.models.RetentionPolicy)
  - com.azure.data.tables.implementation.models.Logging.setVersion(java.lang.String)
  - com.azure.data.tables.implementation.models.Logging.setWrite(boolean)
  langs:
  - java
  name: Logging
  nameWithType: Logging
  fullName: com.azure.data.tables.implementation.models.Logging
  type: Class
  package: com.azure.data.tables.implementation.models
  summary: The Logging model.
  syntax:
    content: public final class Logging
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.implementation.models.Logging.Logging()
  id: Logging()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: Logging()
  nameWithType: Logging.Logging()
  fullName: com.azure.data.tables.implementation.models.Logging.Logging()
  overload: com.azure.data.tables.implementation.models.Logging.Logging*
  type: Constructor
  package: com.azure.data.tables.implementation.models
  syntax:
    content: public Logging()
- uid: com.azure.data.tables.implementation.models.Logging.getRetentionPolicy()
  id: getRetentionPolicy()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: getRetentionPolicy()
  nameWithType: Logging.getRetentionPolicy()
  fullName: com.azure.data.tables.implementation.models.Logging.getRetentionPolicy()
  overload: com.azure.data.tables.implementation.models.Logging.getRetentionPolicy*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Get the retentionPolicy property: The retention policy.'
  syntax:
    content: public RetentionPolicy getRetentionPolicy()
    return:
      type: com.azure.data.tables.implementation.models.RetentionPolicy
      description: the retentionPolicy value.
- uid: com.azure.data.tables.implementation.models.Logging.getVersion()
  id: getVersion()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: getVersion()
  nameWithType: Logging.getVersion()
  fullName: com.azure.data.tables.implementation.models.Logging.getVersion()
  overload: com.azure.data.tables.implementation.models.Logging.getVersion*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Get the version property: The version of Analytics to configure.'
  syntax:
    content: public String getVersion()
    return:
      type: java.lang.String
      description: the version value.
- uid: com.azure.data.tables.implementation.models.Logging.isDelete()
  id: isDelete()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: isDelete()
  nameWithType: Logging.isDelete()
  fullName: com.azure.data.tables.implementation.models.Logging.isDelete()
  overload: com.azure.data.tables.implementation.models.Logging.isDelete*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Get the delete property: Indicates whether all delete requests should be logged.'
  syntax:
    content: public boolean isDelete()
    return:
      type: boolean
      description: the delete value.
- uid: com.azure.data.tables.implementation.models.Logging.isRead()
  id: isRead()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: isRead()
  nameWithType: Logging.isRead()
  fullName: com.azure.data.tables.implementation.models.Logging.isRead()
  overload: com.azure.data.tables.implementation.models.Logging.isRead*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Get the read property: Indicates whether all read requests should be logged.'
  syntax:
    content: public boolean isRead()
    return:
      type: boolean
      description: the read value.
- uid: com.azure.data.tables.implementation.models.Logging.isWrite()
  id: isWrite()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: isWrite()
  nameWithType: Logging.isWrite()
  fullName: com.azure.data.tables.implementation.models.Logging.isWrite()
  overload: com.azure.data.tables.implementation.models.Logging.isWrite*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Get the write property: Indicates whether all write requests should be logged.'
  syntax:
    content: public boolean isWrite()
    return:
      type: boolean
      description: the write value.
- uid: com.azure.data.tables.implementation.models.Logging.setDelete(boolean)
  id: setDelete(boolean)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: setDelete(boolean delete)
  nameWithType: Logging.setDelete(boolean delete)
  fullName: com.azure.data.tables.implementation.models.Logging.setDelete(boolean delete)
  overload: com.azure.data.tables.implementation.models.Logging.setDelete*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Set the delete property: Indicates whether all delete requests should be logged.'
  syntax:
    content: public Logging setDelete(boolean delete)
    parameters:
    - id: delete
      type: boolean
      description: the delete value to set.
    return:
      type: com.azure.data.tables.implementation.models.Logging
      description: the Logging object itself.
- uid: com.azure.data.tables.implementation.models.Logging.setRead(boolean)
  id: setRead(boolean)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: setRead(boolean read)
  nameWithType: Logging.setRead(boolean read)
  fullName: com.azure.data.tables.implementation.models.Logging.setRead(boolean read)
  overload: com.azure.data.tables.implementation.models.Logging.setRead*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Set the read property: Indicates whether all read requests should be logged.'
  syntax:
    content: public Logging setRead(boolean read)
    parameters:
    - id: read
      type: boolean
      description: the read value to set.
    return:
      type: com.azure.data.tables.implementation.models.Logging
      description: the Logging object itself.
- uid: com.azure.data.tables.implementation.models.Logging.setRetentionPolicy(com.azure.data.tables.implementation.models.RetentionPolicy)
  id: setRetentionPolicy(com.azure.data.tables.implementation.models.RetentionPolicy)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: setRetentionPolicy(RetentionPolicy retentionPolicy)
  nameWithType: Logging.setRetentionPolicy(RetentionPolicy retentionPolicy)
  fullName: com.azure.data.tables.implementation.models.Logging.setRetentionPolicy(RetentionPolicy retentionPolicy)
  overload: com.azure.data.tables.implementation.models.Logging.setRetentionPolicy*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Set the retentionPolicy property: The retention policy.'
  syntax:
    content: public Logging setRetentionPolicy(RetentionPolicy retentionPolicy)
    parameters:
    - id: retentionPolicy
      type: com.azure.data.tables.implementation.models.RetentionPolicy
      description: the retentionPolicy value to set.
    return:
      type: com.azure.data.tables.implementation.models.Logging
      description: the Logging object itself.
- uid: com.azure.data.tables.implementation.models.Logging.setVersion(java.lang.String)
  id: setVersion(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: setVersion(String version)
  nameWithType: Logging.setVersion(String version)
  fullName: com.azure.data.tables.implementation.models.Logging.setVersion(String version)
  overload: com.azure.data.tables.implementation.models.Logging.setVersion*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Set the version property: The version of Analytics to configure.'
  syntax:
    content: public Logging setVersion(String version)
    parameters:
    - id: version
      type: java.lang.String
      description: the version value to set.
    return:
      type: com.azure.data.tables.implementation.models.Logging
      description: the Logging object itself.
- uid: com.azure.data.tables.implementation.models.Logging.setWrite(boolean)
  id: setWrite(boolean)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.implementation.models.Logging
  langs:
  - java
  name: setWrite(boolean write)
  nameWithType: Logging.setWrite(boolean write)
  fullName: com.azure.data.tables.implementation.models.Logging.setWrite(boolean write)
  overload: com.azure.data.tables.implementation.models.Logging.setWrite*
  type: Method
  package: com.azure.data.tables.implementation.models
  summary: 'Set the write property: Indicates whether all write requests should be logged.'
  syntax:
    content: public Logging setWrite(boolean write)
    parameters:
    - id: write
      type: boolean
      description: the write value to set.
    return:
      type: com.azure.data.tables.implementation.models.Logging
      description: the Logging object itself.
references:
- uid: com.azure.data.tables.implementation.models.Logging.Logging*
  name: Logging
  nameWithType: Logging.Logging
  fullName: com.azure.data.tables.implementation.models.Logging.Logging
  package: com.azure.data.tables.implementation.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.implementation.models.Logging.getVersion*
  name: getVersion
  nameWithType: Logging.getVersion
  fullName: com.azure.data.tables.implementation.models.Logging.getVersion
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.Logging.setVersion*
  name: setVersion
  nameWithType: Logging.setVersion
  fullName: com.azure.data.tables.implementation.models.Logging.setVersion
  package: com.azure.data.tables.implementation.models
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.data.tables.implementation.models.Logging.isDelete*
  name: isDelete
  nameWithType: Logging.isDelete
  fullName: com.azure.data.tables.implementation.models.Logging.isDelete
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.Logging.setDelete*
  name: setDelete
  nameWithType: Logging.setDelete
  fullName: com.azure.data.tables.implementation.models.Logging.setDelete
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.Logging.isRead*
  name: isRead
  nameWithType: Logging.isRead
  fullName: com.azure.data.tables.implementation.models.Logging.isRead
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.Logging.setRead*
  name: setRead
  nameWithType: Logging.setRead
  fullName: com.azure.data.tables.implementation.models.Logging.setRead
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.Logging.isWrite*
  name: isWrite
  nameWithType: Logging.isWrite
  fullName: com.azure.data.tables.implementation.models.Logging.isWrite
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.Logging.setWrite*
  name: setWrite
  nameWithType: Logging.setWrite
  fullName: com.azure.data.tables.implementation.models.Logging.setWrite
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.RetentionPolicy
  name: RetentionPolicy
  nameWithType: RetentionPolicy
  fullName: com.azure.data.tables.implementation.models.RetentionPolicy
- uid: com.azure.data.tables.implementation.models.Logging.getRetentionPolicy*
  name: getRetentionPolicy
  nameWithType: Logging.getRetentionPolicy
  fullName: com.azure.data.tables.implementation.models.Logging.getRetentionPolicy
  package: com.azure.data.tables.implementation.models
- uid: com.azure.data.tables.implementation.models.Logging.setRetentionPolicy*
  name: setRetentionPolicy
  nameWithType: Logging.setRetentionPolicy
  fullName: com.azure.data.tables.implementation.models.Logging.setRetentionPolicy
  package: com.azure.data.tables.implementation.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
