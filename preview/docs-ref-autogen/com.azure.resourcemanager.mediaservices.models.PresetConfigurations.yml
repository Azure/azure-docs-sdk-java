### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations"
fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations"
name: "PresetConfigurations"
nameWithType: "PresetConfigurations"
summary: "An object of optional configuration settings for encoder."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PresetConfigurations"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.PresetConfigurations()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.PresetConfigurations()"
  name: "PresetConfigurations()"
  nameWithType: "PresetConfigurations.PresetConfigurations()"
  syntax: "public PresetConfigurations()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.complexity()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.complexity()"
  name: "complexity()"
  nameWithType: "PresetConfigurations.complexity()"
  summary: "Get the complexity property: Allows you to configure the encoder settings to control the balance between speed and quality. Example: set Complexity as Speed for faster encoding but less compression efficiency."
  syntax: "public Complexity complexity()"
  returns:
    description: "the complexity value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Complexity?alt=com.azure.resourcemanager.mediaservices.models.Complexity&text=Complexity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.interleaveOutput()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.interleaveOutput()"
  name: "interleaveOutput()"
  nameWithType: "PresetConfigurations.interleaveOutput()"
  summary: "Get the interleaveOutput property: Sets the interleave mode of the output to control how audio and video are stored in the container format. Example: set InterleavedOutput as NonInterleavedOutput to produce audio-only and video-only outputs in separate MP4 files."
  syntax: "public InterleaveOutput interleaveOutput()"
  returns:
    description: "the interleaveOutput value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InterleaveOutput?alt=com.azure.resourcemanager.mediaservices.models.InterleaveOutput&text=InterleaveOutput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.keyFrameIntervalInSeconds()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.keyFrameIntervalInSeconds()"
  name: "keyFrameIntervalInSeconds()"
  nameWithType: "PresetConfigurations.keyFrameIntervalInSeconds()"
  summary: "Get the keyFrameIntervalInSeconds property: The key frame interval in seconds. Example: set KeyFrameIntervalInSeconds as 2 to reduce the playback buffering for some players."
  syntax: "public Float keyFrameIntervalInSeconds()"
  returns:
    description: "the keyFrameIntervalInSeconds value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.maxBitrateBps()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.maxBitrateBps()"
  name: "maxBitrateBps()"
  nameWithType: "PresetConfigurations.maxBitrateBps()"
  summary: "Get the maxBitrateBps property: The maximum bitrate in bits per second (threshold for the top video layer). Example: set MaxBitrateBps as 6000000 to avoid producing very high bitrate outputs for contents with high complexity."
  syntax: "public Integer maxBitrateBps()"
  returns:
    description: "the maxBitrateBps value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.maxHeight()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.maxHeight()"
  name: "maxHeight()"
  nameWithType: "PresetConfigurations.maxHeight()"
  summary: "Get the maxHeight property: The maximum height of output video layers. Example: set MaxHeight as 720 to produce output layers up to 720P even if the input is 4K."
  syntax: "public Integer maxHeight()"
  returns:
    description: "the maxHeight value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.maxLayers()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.maxLayers()"
  name: "maxLayers()"
  nameWithType: "PresetConfigurations.maxLayers()"
  summary: "Get the maxLayers property: The maximum number of output video layers. Example: set MaxLayers as 4 to make sure at most 4 output layers are produced to control the overall cost of the encoding job."
  syntax: "public Integer maxLayers()"
  returns:
    description: "the maxLayers value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.minBitrateBps()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.minBitrateBps()"
  name: "minBitrateBps()"
  nameWithType: "PresetConfigurations.minBitrateBps()"
  summary: "Get the minBitrateBps property: The minimum bitrate in bits per second (threshold for the bottom video layer). Example: set MinBitrateBps as 200000 to have a bottom layer that covers users with low network bandwidth."
  syntax: "public Integer minBitrateBps()"
  returns:
    description: "the minBitrateBps value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.minHeight()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.minHeight()"
  name: "minHeight()"
  nameWithType: "PresetConfigurations.minHeight()"
  summary: "Get the minHeight property: The minimum height of output video layers. Example: set MinHeight as 360 to avoid output layers of smaller resolutions like 180P."
  syntax: "public Integer minHeight()"
  returns:
    description: "the minHeight value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.validate()"
  name: "validate()"
  nameWithType: "PresetConfigurations.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withComplexity(com.azure.resourcemanager.mediaservices.models.Complexity)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withComplexity(Complexity complexity)"
  name: "withComplexity(Complexity complexity)"
  nameWithType: "PresetConfigurations.withComplexity(Complexity complexity)"
  summary: "Set the complexity property: Allows you to configure the encoder settings to control the balance between speed and quality. Example: set Complexity as Speed for faster encoding but less compression efficiency."
  parameters:
  - description: "the complexity value to set."
    name: "complexity"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Complexity?alt=com.azure.resourcemanager.mediaservices.models.Complexity&text=Complexity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withComplexity(Complexity complexity)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withInterleaveOutput(com.azure.resourcemanager.mediaservices.models.InterleaveOutput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withInterleaveOutput(InterleaveOutput interleaveOutput)"
  name: "withInterleaveOutput(InterleaveOutput interleaveOutput)"
  nameWithType: "PresetConfigurations.withInterleaveOutput(InterleaveOutput interleaveOutput)"
  summary: "Set the interleaveOutput property: Sets the interleave mode of the output to control how audio and video are stored in the container format. Example: set InterleavedOutput as NonInterleavedOutput to produce audio-only and video-only outputs in separate MP4 files."
  parameters:
  - description: "the interleaveOutput value to set."
    name: "interleaveOutput"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.InterleaveOutput?alt=com.azure.resourcemanager.mediaservices.models.InterleaveOutput&text=InterleaveOutput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withInterleaveOutput(InterleaveOutput interleaveOutput)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withKeyFrameIntervalInSeconds(java.lang.Float)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withKeyFrameIntervalInSeconds(Float keyFrameIntervalInSeconds)"
  name: "withKeyFrameIntervalInSeconds(Float keyFrameIntervalInSeconds)"
  nameWithType: "PresetConfigurations.withKeyFrameIntervalInSeconds(Float keyFrameIntervalInSeconds)"
  summary: "Set the keyFrameIntervalInSeconds property: The key frame interval in seconds. Example: set KeyFrameIntervalInSeconds as 2 to reduce the playback buffering for some players."
  parameters:
  - description: "the keyFrameIntervalInSeconds value to set."
    name: "keyFrameIntervalInSeconds"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withKeyFrameIntervalInSeconds(Float keyFrameIntervalInSeconds)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMaxBitrateBps(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMaxBitrateBps(Integer maxBitrateBps)"
  name: "withMaxBitrateBps(Integer maxBitrateBps)"
  nameWithType: "PresetConfigurations.withMaxBitrateBps(Integer maxBitrateBps)"
  summary: "Set the maxBitrateBps property: The maximum bitrate in bits per second (threshold for the top video layer). Example: set MaxBitrateBps as 6000000 to avoid producing very high bitrate outputs for contents with high complexity."
  parameters:
  - description: "the maxBitrateBps value to set."
    name: "maxBitrateBps"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withMaxBitrateBps(Integer maxBitrateBps)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMaxHeight(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMaxHeight(Integer maxHeight)"
  name: "withMaxHeight(Integer maxHeight)"
  nameWithType: "PresetConfigurations.withMaxHeight(Integer maxHeight)"
  summary: "Set the maxHeight property: The maximum height of output video layers. Example: set MaxHeight as 720 to produce output layers up to 720P even if the input is 4K."
  parameters:
  - description: "the maxHeight value to set."
    name: "maxHeight"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withMaxHeight(Integer maxHeight)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMaxLayers(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMaxLayers(Integer maxLayers)"
  name: "withMaxLayers(Integer maxLayers)"
  nameWithType: "PresetConfigurations.withMaxLayers(Integer maxLayers)"
  summary: "Set the maxLayers property: The maximum number of output video layers. Example: set MaxLayers as 4 to make sure at most 4 output layers are produced to control the overall cost of the encoding job."
  parameters:
  - description: "the maxLayers value to set."
    name: "maxLayers"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withMaxLayers(Integer maxLayers)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMinBitrateBps(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMinBitrateBps(Integer minBitrateBps)"
  name: "withMinBitrateBps(Integer minBitrateBps)"
  nameWithType: "PresetConfigurations.withMinBitrateBps(Integer minBitrateBps)"
  summary: "Set the minBitrateBps property: The minimum bitrate in bits per second (threshold for the bottom video layer). Example: set MinBitrateBps as 200000 to have a bottom layer that covers users with low network bandwidth."
  parameters:
  - description: "the minBitrateBps value to set."
    name: "minBitrateBps"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withMinBitrateBps(Integer minBitrateBps)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMinHeight(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PresetConfigurations.withMinHeight(Integer minHeight)"
  name: "withMinHeight(Integer minHeight)"
  nameWithType: "PresetConfigurations.withMinHeight(Integer minHeight)"
  summary: "Set the minHeight property: The minimum height of output video layers. Example: set MinHeight as 360 to avoid output layers of smaller resolutions like 180P."
  parameters:
  - description: "the minHeight value to set."
    name: "minHeight"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PresetConfigurations withMinHeight(Integer minHeight)"
  returns:
    description: "the PresetConfigurations object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresetConfigurations?alt=com.azure.resourcemanager.mediaservices.models.PresetConfigurations&text=PresetConfigurations\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
