### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.PeeringServiceProvider"
fullName: "com.azure.resourcemanager.peering.models.PeeringServiceProvider"
name: "PeeringServiceProvider"
nameWithType: "PeeringServiceProvider"
summary: "An immutable client-side representation of PeeringServiceProvider."
syntax: "public interface PeeringServiceProvider"
methods:
- uid: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.id()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.id()"
  name: "id()"
  nameWithType: "PeeringServiceProvider.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.innerModel()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.innerModel()"
  name: "innerModel()"
  nameWithType: "PeeringServiceProvider.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringServiceProviderInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner&text=PeeringServiceProviderInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.name()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.name()"
  name: "name()"
  nameWithType: "PeeringServiceProvider.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.peeringLocations()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.peeringLocations()"
  name: "peeringLocations()"
  nameWithType: "PeeringServiceProvider.peeringLocations()"
  summary: "Gets the peeringLocations property: The list of locations at which the service provider peers with Microsoft."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> peeringLocations()"
  returns:
    description: "the peeringLocations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.serviceProviderName()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.serviceProviderName()"
  name: "serviceProviderName()"
  nameWithType: "PeeringServiceProvider.serviceProviderName()"
  summary: "Gets the serviceProviderName property: The name of the service provider."
  modifiers:
  - "abstract"
  syntax: "public abstract String serviceProviderName()"
  returns:
    description: "the serviceProviderName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.type()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServiceProvider.type()"
  name: "type()"
  nameWithType: "PeeringServiceProvider.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
