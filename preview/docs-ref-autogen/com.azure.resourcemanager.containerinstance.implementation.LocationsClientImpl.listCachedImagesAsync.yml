### YamlMime:JavaMember
uid: "com.azure.resourcemanager.containerinstance.implementation.LocationsClientImpl.listCachedImagesAsync*"
fullName: "com.azure.resourcemanager.containerinstance.implementation.LocationsClientImpl.listCachedImagesAsync"
name: "listCachedImagesAsync"
nameWithType: "LocationsClientImpl.listCachedImagesAsync"
members:
- uid: "com.azure.resourcemanager.containerinstance.implementation.LocationsClientImpl.listCachedImagesAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerinstance.implementation.LocationsClientImpl.listCachedImagesAsync(String location)"
  name: "listCachedImagesAsync(String location)"
  nameWithType: "LocationsClientImpl.listCachedImagesAsync(String location)"
  summary: "Get the list of cached images on specific OS type for a subscription in a region."
  parameters:
  - description: "The identifier for the physical azure location."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<CachedImages> listCachedImagesAsync(String location)"
  returns:
    description: "the list of cached images on specific OS type for a subscription in a region."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerinstance.models.CachedImages?alt=com.azure.resourcemanager.containerinstance.models.CachedImages&text=CachedImages\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.containerinstance.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerinstance:2.0.0-beta.5
