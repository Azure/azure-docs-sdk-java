### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils
  id: ISO8601Utils
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.ISO8601Utils.DEF_8601_LEN
  - com.fasterxml.jackson.databind.util.ISO8601Utils.ISO8601Utils()
  - com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date)
  - com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date,boolean)
  - com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date,boolean,java.util.TimeZone)
  - com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date,boolean,java.util.TimeZone,java.util.Locale)
  - com.fasterxml.jackson.databind.util.ISO8601Utils.parse(java.lang.String,java.text.ParsePosition)
  langs:
  - java
  name: ISO8601Utils
  nameWithType: ISO8601Utils
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils
  type: Class
  package: com.fasterxml.jackson.databind.util
  summary: 'Utilities methods for manipulating dates in iso8601 format. This is much much faster and GC friendly than using SimpleDateFormat so highly suitable if you (un)serialize lots of date objects. Supported parse format: \[yyyy-MM-dd|yyyyMMdd\]\[T(hh:mm\[:ss\[.sss\]\]|hhmm\[ss\[.sss\]\])\]?\[Z|\[+-\]hh\[:\]mm\]\]'
  syntax:
    content: public class ISO8601Utils
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.DEF_8601_LEN
  id: DEF_8601_LEN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ISO8601Utils
  langs:
  - java
  name: DEF_8601_LEN
  nameWithType: ISO8601Utils.DEF_8601_LEN
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.DEF_8601_LEN
  type: Field
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected static final int DEF_8601_LEN
    return:
      type: int
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.ISO8601Utils()
  id: ISO8601Utils()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ISO8601Utils
  langs:
  - java
  name: ISO8601Utils()
  nameWithType: ISO8601Utils.ISO8601Utils()
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.ISO8601Utils()
  overload: com.fasterxml.jackson.databind.util.ISO8601Utils.ISO8601Utils*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public ISO8601Utils()
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date)
  id: format(java.util.Date)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ISO8601Utils
  langs:
  - java
  name: format(Date date)
  nameWithType: ISO8601Utils.format(Date date)
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.format(Date date)
  overload: com.fasterxml.jackson.databind.util.ISO8601Utils.format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Format a date into 'yyyy-MM-ddThh:mm:ssZ' (default timezone, no milliseconds precision)
  syntax:
    content: public static String format(Date date)
    parameters:
    - id: date
      type: java.util.Date
      description: the date to format
    return:
      type: java.lang.String
      description: the date formatted as 'yyyy-MM-ddThh:mm:ssZ'
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date,boolean)
  id: format(java.util.Date,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ISO8601Utils
  langs:
  - java
  name: format(Date date, boolean millis)
  nameWithType: ISO8601Utils.format(Date date, boolean millis)
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.format(Date date, boolean millis)
  overload: com.fasterxml.jackson.databind.util.ISO8601Utils.format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Format a date into 'yyyy-MM-ddThh:mm:ss\[.sss\]Z' (GMT timezone)
  syntax:
    content: public static String format(Date date, boolean millis)
    parameters:
    - id: date
      type: java.util.Date
      description: the date to format
    - id: millis
      type: boolean
      description: true to include millis precision otherwise false
    return:
      type: java.lang.String
      description: the date formatted as 'yyyy-MM-ddThh:mm:ss[.sss]Z'
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date,boolean,java.util.TimeZone)
  id: format(java.util.Date,boolean,java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ISO8601Utils
  langs:
  - java
  name: format(Date date, boolean millis, TimeZone tz)
  nameWithType: ISO8601Utils.format(Date date, boolean millis, TimeZone tz)
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.format(Date date, boolean millis, TimeZone tz)
  overload: com.fasterxml.jackson.databind.util.ISO8601Utils.format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static String format(Date date, boolean millis, TimeZone tz)
    parameters:
    - id: date
      type: java.util.Date
    - id: millis
      type: boolean
    - id: tz
      type: java.util.TimeZone
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.format(java.util.Date,boolean,java.util.TimeZone,java.util.Locale)
  id: format(java.util.Date,boolean,java.util.TimeZone,java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ISO8601Utils
  langs:
  - java
  name: format(Date date, boolean millis, TimeZone tz, Locale loc)
  nameWithType: ISO8601Utils.format(Date date, boolean millis, TimeZone tz, Locale loc)
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.format(Date date, boolean millis, TimeZone tz, Locale loc)
  overload: com.fasterxml.jackson.databind.util.ISO8601Utils.format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Format date into yyyy-MM-ddThh:mm:ss\[.sss\]\[Z|\[+-\]hh:mm\]
  syntax:
    content: public static String format(Date date, boolean millis, TimeZone tz, Locale loc)
    parameters:
    - id: date
      type: java.util.Date
      description: the date to format
    - id: millis
      type: boolean
      description: true to include millis precision otherwise false
    - id: tz
      type: java.util.TimeZone
      description: timezone to use for the formatting (UTC will produce 'Z')
    - id: loc
      type: java.util.Locale
    return:
      type: java.lang.String
      description: the date formatted as yyyy-MM-ddThh:mm:ss[.sss][Z|[+-]hh:mm]
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.parse(java.lang.String,java.text.ParsePosition)
  id: parse(java.lang.String,java.text.ParsePosition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ISO8601Utils
  langs:
  - java
  name: parse(String date, ParsePosition pos)
  nameWithType: ISO8601Utils.parse(String date, ParsePosition pos)
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.parse(String date, ParsePosition pos)
  overload: com.fasterxml.jackson.databind.util.ISO8601Utils.parse*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Parse a date from ISO-8601 formatted string. It expects a format \[yyyy-MM-dd|yyyyMMdd\]\[T(hh:mm\[:ss\[.sss\]\]|hhmm\[ss\[.sss\]\])\]?\[Z|\[+-\]hh:mm\]\]
  syntax:
    content: public static Date parse(String date, ParsePosition pos)
    parameters:
    - id: date
      type: java.lang.String
      description: ISO string to parse in the appropriate format.
    - id: pos
      type: java.text.ParsePosition
      description: The position to start parsing from, updated to where parsing stopped.
    return:
      type: java.util.Date
      description: the parsed date
  exceptions:
  - type: java.text.ParseException
    description: if the date is not in the appropriate format
references:
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.ISO8601Utils*
  name: ISO8601Utils
  nameWithType: ISO8601Utils.ISO8601Utils
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.ISO8601Utils
  package: com.fasterxml.jackson.databind.util
- uid: java.util.Date
  spec.java:
  - uid: java.util.Date
    name: Date
    fullName: java.util.Date
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.format*
  name: format
  nameWithType: ISO8601Utils.format
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.format
  package: com.fasterxml.jackson.databind.util
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: java.text.ParseException
  spec.java:
  - uid: java.text.ParseException
    name: ParseException
    fullName: java.text.ParseException
- uid: java.text.ParsePosition
  spec.java:
  - uid: java.text.ParsePosition
    name: ParsePosition
    fullName: java.text.ParsePosition
- uid: com.fasterxml.jackson.databind.util.ISO8601Utils.parse*
  name: parse
  nameWithType: ISO8601Utils.parse
  fullName: com.fasterxml.jackson.databind.util.ISO8601Utils.parse
  package: com.fasterxml.jackson.databind.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
