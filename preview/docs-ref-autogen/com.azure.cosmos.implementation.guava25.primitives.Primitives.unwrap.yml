### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.primitives.Primitives.unwrap*"
fullName: "com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>unwrap"
name: "<T>unwrap"
nameWithType: "Primitives.<T>unwrap"
members:
- uid: "com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>unwrap(java.lang.Class<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.primitives.Primitives.<T>unwrap(Class<T> type)"
  name: "<T>unwrap(Class<T> type)"
  nameWithType: "Primitives.<T>unwrap(Class<T> type)"
  summary: "Returns the corresponding primitive type of `type` if it is a wrapper type; otherwise returns `type` itself. Idempotent.\n\n```java\nunwrap(Integer.class) == int.class\n     unwrap(int.class) == int.class\n     unwrap(String.class) == String.class\n```"
  parameters:
  - name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Class<T> <T>unwrap(Class<T> type)"
  returns:
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.primitives"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
