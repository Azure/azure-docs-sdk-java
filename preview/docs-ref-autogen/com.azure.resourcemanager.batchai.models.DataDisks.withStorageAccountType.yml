### YamlMime:JavaMember
uid: "com.azure.resourcemanager.batchai.models.DataDisks.withStorageAccountType*"
fullName: "com.azure.resourcemanager.batchai.models.DataDisks.withStorageAccountType"
name: "withStorageAccountType"
nameWithType: "DataDisks.withStorageAccountType"
members:
- uid: "com.azure.resourcemanager.batchai.models.DataDisks.withStorageAccountType(com.azure.resourcemanager.batchai.models.StorageAccountType)"
  fullName: "com.azure.resourcemanager.batchai.models.DataDisks.withStorageAccountType(StorageAccountType storageAccountType)"
  name: "withStorageAccountType(StorageAccountType storageAccountType)"
  nameWithType: "DataDisks.withStorageAccountType(StorageAccountType storageAccountType)"
  summary: "Set the storageAccountType property: Type of storage account to be used on the disk. Possible values are: Standard\\_LRS or Premium\\_LRS. Premium storage account type can only be used with VM sizes supporting premium storage."
  parameters:
  - description: "the storageAccountType value to set."
    name: "storageAccountType"
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.StorageAccountType?alt=com.azure.resourcemanager.batchai.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisks withStorageAccountType(StorageAccountType storageAccountType)"
  returns:
    description: "the DataDisks object itself."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.DataDisks?alt=com.azure.resourcemanager.batchai.models.DataDisks&text=DataDisks\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.batchai.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batchai:1.0.0-beta.1
