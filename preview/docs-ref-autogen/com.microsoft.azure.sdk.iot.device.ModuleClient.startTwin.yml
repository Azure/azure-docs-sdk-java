### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin*"
fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin"
name: "startTwin"
nameWithType: "ModuleClient.startTwin"
members:
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  name: "startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  nameWithType: "ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  summary: "Starts the module twin. This module client will receive a callback with the current state of the full twin, including reported properties and desired properties. After that callback is received, this module client will receive a callback each time a desired property is updated. That callback will either contain the full desired properties set, or only the updated desired property depending on how the desired property was changed. IoT Hub supports a PUT and a PATCH on the twin. The PUT will cause this module client to receive the full desired properties set, and the PATCH will cause this module client to only receive the updated desired properties. Similarly, the version of each desired property will be incremented from a PUT call, and only the actually updated desired property will have its version incremented from a PATCH call. The java service client library uses the PATCH call when updated desired properties, but it builds the patch such that all properties are included in the patch. As a result, the device side will receive full twin updates, not partial updates. See [PUT][] and [PATCH][]\n\n\n[PUT]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/replacemoduletwin\n[PATCH]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/updatemoduletwin"
  parameters:
  - description: "the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be <code>null</code>."
    name: "deviceTwinStatusCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubEventCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubEventCallback&text=IotHubEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to be passed to the status callback. Can be <code>null</code>."
    name: "deviceTwinStatusCallbackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "the PropertyCallBack callback for providing any changes in desired properties. Cannot be <code>null</code>."
    name: "genericPropertyCallBack"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack?alt=com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack&text=PropertyCallBack\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to be passed to the property callback. Can be <code>null</code>.     *"
    name: "genericPropertyCallBackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  exceptions:
  - description: "if the callback is <code>null</code>"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the callback is <code>null</code>"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the callback is <code>null</code>"
    type: "<xref href=\"java.lang.UnsupportedOperationException?alt=java.lang.UnsupportedOperationException&text=UnsupportedOperationException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object,com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  name: "startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  nameWithType: "ModuleClient.startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  summary: "Starts the module twin. This module client will receive a callback with the current state of the full twin, including reported properties and desired properties. After that callback is received, this module client will receive a callback each time a desired property is updated. That callback will either contain the full desired properties set, or only the updated desired property depending on how the desired property was changed. IoT Hub supports a PUT and a PATCH on the twin. The PUT will cause this module client to receive the full desired properties set, and the PATCH will cause this module client to only receive the updated desired properties. Similarly, the version of each desired property will be incremented from a PUT call, and only the actually updated desired property will have its version incremented from a PATCH call. The java service client library uses the PATCH call when updated desired properties, but it builds the patch such that all properties are included in the patch. As a result, the device side will receive full twin updates, not partial updates. See [PUT][] and [PATCH][]\n\n\n[PUT]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/replacemoduletwin\n[PATCH]: https://docs.microsoft.com/en-us/rest/api/iothub/service/twin/updatemoduletwin"
  parameters:
  - description: "the IotHubEventCallback callback for providing the status of Device Twin operations. Cannot be <code>null</code>."
    name: "deviceTwinStatusCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubEventCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubEventCallback&text=IotHubEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to be passed to the status callback. Can be <code>null</code>."
    name: "deviceTwinStatusCallbackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "the TwinPropertyCallBack callback for providing any changes in desired properties. Cannot be <code>null</code>."
    name: "genericPropertyCallBack"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack?alt=com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack&text=TwinPropertyCallBack\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to be passed to the property callback. Can be <code>null</code>.     *"
    name: "genericPropertyCallBackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void startTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, DeviceTwin.TwinPropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)"
  exceptions:
  - description: "if the callback is <code>null</code>"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the callback is <code>null</code>"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the callback is <code>null</code>"
    type: "<xref href=\"java.lang.UnsupportedOperationException?alt=java.lang.UnsupportedOperationException&text=UnsupportedOperationException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
