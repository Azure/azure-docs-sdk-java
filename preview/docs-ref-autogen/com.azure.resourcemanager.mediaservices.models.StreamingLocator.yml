### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator"
fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator"
name: "StreamingLocator"
nameWithType: "StreamingLocator"
summary: "An immutable client-side representation of Streaming<wbr>Locator."
syntax: "public interface StreamingLocator"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.alternativeMediaId()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.alternativeMediaId()"
  name: "alternativeMediaId()"
  nameWithType: "StreamingLocator.alternativeMediaId()"
  summary: "Gets the alternative<wbr>Media<wbr>Id property: Alternative Media ID of this Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract String alternativeMediaId()"
  desc: "Gets the alternativeMediaId property: Alternative Media ID of this Streaming Locator."
  returns:
    description: "the alternativeMediaId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.assetName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.assetName()"
  name: "assetName()"
  nameWithType: "StreamingLocator.assetName()"
  summary: "Gets the asset<wbr>Name property: Asset Name."
  modifiers:
  - "abstract"
  syntax: "public abstract String assetName()"
  desc: "Gets the assetName property: Asset Name."
  returns:
    description: "the assetName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.contentKeys()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.contentKeys()"
  name: "contentKeys()"
  nameWithType: "StreamingLocator.contentKeys()"
  summary: "Gets the content<wbr>Keys property: The Content<wbr>Keys used by this Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract List<StreamingLocatorContentKey> contentKeys()"
  desc: "Gets the contentKeys property: The ContentKeys used by this Streaming Locator."
  returns:
    description: "the contentKeys value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey&text=StreamingLocatorContentKey\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.created()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.created()"
  name: "created()"
  nameWithType: "StreamingLocator.created()"
  summary: "Gets the created property: The creation time of the Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime created()"
  desc: "Gets the created property: The creation time of the Streaming Locator."
  returns:
    description: "the created value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.defaultContentKeyPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.defaultContentKeyPolicyName()"
  name: "defaultContentKeyPolicyName()"
  nameWithType: "StreamingLocator.defaultContentKeyPolicyName()"
  summary: "Gets the default<wbr>Content<wbr>Key<wbr>Policy<wbr>Name property: Name of the default Content<wbr>Key<wbr>Policy used by this Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract String defaultContentKeyPolicyName()"
  desc: "Gets the defaultContentKeyPolicyName property: Name of the default ContentKeyPolicy used by this Streaming Locator."
  returns:
    description: "the defaultContentKeyPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.endTime()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.endTime()"
  name: "endTime()"
  nameWithType: "StreamingLocator.endTime()"
  summary: "Gets the end<wbr>Time property: The end time of the Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime endTime()"
  desc: "Gets the endTime property: The end time of the Streaming Locator."
  returns:
    description: "the endTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.filters()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.filters()"
  name: "filters()"
  nameWithType: "StreamingLocator.filters()"
  summary: "Gets the filters property: A list of asset or account filters which apply to this streaming locator."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> filters()"
  desc: "Gets the filters property: A list of asset or account filters which apply to this streaming locator."
  returns:
    description: "the filters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.id()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.id()"
  name: "id()"
  nameWithType: "StreamingLocator.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.innerModel()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.innerModel()"
  name: "innerModel()"
  nameWithType: "StreamingLocator.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>mediaservices.<wbr>fluent.<wbr>models.<wbr>Streaming<wbr>Locator<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract StreamingLocatorInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listContentKeys()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listContentKeys()"
  name: "listContentKeys()"
  nameWithType: "StreamingLocator.listContentKeys()"
  summary: "List Content Keys used by this Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract ListContentKeysResponse listContentKeys()"
  desc: "List Content Keys used by this Streaming Locator."
  returns:
    description: "class of response for listContentKeys action."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListContentKeysResponse?alt=com.azure.resourcemanager.mediaservices.models.ListContentKeysResponse&text=ListContentKeysResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listContentKeysWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listContentKeysWithResponse(Context context)"
  name: "listContentKeysWithResponse(Context context)"
  nameWithType: "StreamingLocator.listContentKeysWithResponse(Context context)"
  summary: "List Content Keys used by this Streaming Locator."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ListContentKeysResponse> listContentKeysWithResponse(Context context)"
  desc: "List Content Keys used by this Streaming Locator."
  returns:
    description: "class of response for listContentKeys action along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.ListContentKeysResponse?alt=com.azure.resourcemanager.mediaservices.models.ListContentKeysResponse&text=ListContentKeysResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listPaths()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listPaths()"
  name: "listPaths()"
  nameWithType: "StreamingLocator.listPaths()"
  summary: "List Paths supported by this Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract ListPathsResponse listPaths()"
  desc: "List Paths supported by this Streaming Locator."
  returns:
    description: "class of response for listPaths action."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ListPathsResponse?alt=com.azure.resourcemanager.mediaservices.models.ListPathsResponse&text=ListPathsResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listPathsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.listPathsWithResponse(Context context)"
  name: "listPathsWithResponse(Context context)"
  nameWithType: "StreamingLocator.listPathsWithResponse(Context context)"
  summary: "List Paths supported by this Streaming Locator."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ListPathsResponse> listPathsWithResponse(Context context)"
  desc: "List Paths supported by this Streaming Locator."
  returns:
    description: "class of response for listPaths action along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.ListPathsResponse?alt=com.azure.resourcemanager.mediaservices.models.ListPathsResponse&text=ListPathsResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.name()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.name()"
  name: "name()"
  nameWithType: "StreamingLocator.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.refresh()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.refresh()"
  name: "refresh()"
  nameWithType: "StreamingLocator.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract StreamingLocator refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingLocator?alt=com.azure.resourcemanager.mediaservices.models.StreamingLocator&text=StreamingLocator\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "StreamingLocator.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract StreamingLocator refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingLocator?alt=com.azure.resourcemanager.mediaservices.models.StreamingLocator&text=StreamingLocator\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.startTime()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.startTime()"
  name: "startTime()"
  nameWithType: "StreamingLocator.startTime()"
  summary: "Gets the start<wbr>Time property: The start time of the Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime startTime()"
  desc: "Gets the startTime property: The start time of the Streaming Locator."
  returns:
    description: "the startTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.streamingLocatorId()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.streamingLocatorId()"
  name: "streamingLocatorId()"
  nameWithType: "StreamingLocator.streamingLocatorId()"
  summary: "Gets the streaming<wbr>Locator<wbr>Id property: The Streaming<wbr>Locator<wbr>Id of the Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID streamingLocatorId()"
  desc: "Gets the streamingLocatorId property: The StreamingLocatorId of the Streaming Locator."
  returns:
    description: "the streamingLocatorId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.streamingPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.streamingPolicyName()"
  name: "streamingPolicyName()"
  nameWithType: "StreamingLocator.streamingPolicyName()"
  summary: "Gets the streaming<wbr>Policy<wbr>Name property: Name of the Streaming Policy used by this Streaming Locator."
  modifiers:
  - "abstract"
  syntax: "public abstract String streamingPolicyName()"
  desc: "Gets the streamingPolicyName property: Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined\\_DownloadOnly', 'Predefined\\_ClearStreamingOnly', 'Predefined\\_DownloadAndClearStreaming', 'Predefined\\_ClearKey', 'Predefined\\_MultiDrmCencStreaming' and 'Predefined\\_MultiDrmStreaming'."
  returns:
    description: "the streamingPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.systemData()"
  name: "systemData()"
  nameWithType: "StreamingLocator.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.type()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingLocator.type()"
  name: "type()"
  nameWithType: "StreamingLocator.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of StreamingLocator."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
