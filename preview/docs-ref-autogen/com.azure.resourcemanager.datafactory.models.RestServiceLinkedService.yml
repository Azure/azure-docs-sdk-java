### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService"
name: "RestServiceLinkedService"
nameWithType: "RestServiceLinkedService"
summary: "Rest Service linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RestServiceLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.RestServiceLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.RestServiceLinkedService()"
  name: "RestServiceLinkedService()"
  nameWithType: "RestServiceLinkedService.RestServiceLinkedService()"
  syntax: "public RestServiceLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.aadResourceId()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.aadResourceId()"
  name: "aadResourceId()"
  nameWithType: "RestServiceLinkedService.aadResourceId()"
  summary: "Get the aad<wbr>Resource<wbr>Id property: The resource you are requesting authorization to use."
  syntax: "public Object aadResourceId()"
  desc: "Get the aadResourceId property: The resource you are requesting authorization to use."
  returns:
    description: "the aadResourceId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.authHeaders()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.authHeaders()"
  name: "authHeaders()"
  nameWithType: "RestServiceLinkedService.authHeaders()"
  summary: "Get the auth<wbr>Headers property: The additional HTTP headers in the request to RESTful API used for authorization."
  syntax: "public Object authHeaders()"
  desc: "Get the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  returns:
    description: "the authHeaders value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.authenticationType()"
  name: "authenticationType()"
  nameWithType: "RestServiceLinkedService.authenticationType()"
  summary: "Get the authentication<wbr>Type property: Type of authentication used to connect to the REST service."
  syntax: "public RestServiceAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: Type of authentication used to connect to the REST service."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType&text=RestServiceAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.azureCloudType()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.azureCloudType()"
  name: "azureCloudType()"
  nameWithType: "RestServiceLinkedService.azureCloudType()"
  summary: "Get the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  syntax: "public Object azureCloudType()"
  desc: "Get the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the azureCloudType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.clientId()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.clientId()"
  name: "clientId()"
  nameWithType: "RestServiceLinkedService.clientId()"
  summary: "Get the client<wbr>Id property: The client ID associated with your application."
  syntax: "public Object clientId()"
  desc: "Get the clientId property: The client ID associated with your application. Type: string (or Expression with resultType string)."
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.clientSecret()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.clientSecret()"
  name: "clientSecret()"
  nameWithType: "RestServiceLinkedService.clientSecret()"
  summary: "Get the client<wbr>Secret property: The client secret associated with your application."
  syntax: "public SecretBase clientSecret()"
  desc: "Get the clientSecret property: The client secret associated with your application."
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.credential()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.credential()"
  name: "credential()"
  nameWithType: "RestServiceLinkedService.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  desc: "Get the credential property: The credential reference containing authentication information."
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.enableServerCertificateValidation()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.enableServerCertificateValidation()"
  name: "enableServerCertificateValidation()"
  nameWithType: "RestServiceLinkedService.enableServerCertificateValidation()"
  summary: "Get the enable<wbr>Server<wbr>Certificate<wbr>Validation property: Whether to validate server side SSL certificate when connecting to the endpoint.<wbr>The default value is true."
  syntax: "public Object enableServerCertificateValidation()"
  desc: "Get the enableServerCertificateValidation property: Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the enableServerCertificateValidation value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "RestServiceLinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.password()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.password()"
  name: "password()"
  nameWithType: "RestServiceLinkedService.password()"
  summary: "Get the password property: The password used in Basic authentication type."
  syntax: "public SecretBase password()"
  desc: "Get the password property: The password used in Basic authentication type."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.resource()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.resource()"
  name: "resource()"
  nameWithType: "RestServiceLinkedService.resource()"
  summary: "Get the resource property: The target service or resource to which the access will be requested."
  syntax: "public Object resource()"
  desc: "Get the resource property: The target service or resource to which the access will be requested. Type: string (or Expression with resultType string)."
  returns:
    description: "the resource value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.scope()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.scope()"
  name: "scope()"
  nameWithType: "RestServiceLinkedService.scope()"
  summary: "Get the scope property: The scope of the access required."
  syntax: "public Object scope()"
  desc: "Get the scope property: The scope of the access required. It describes what kind of access will be requested. Type: string (or Expression with resultType string)."
  returns:
    description: "the scope value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "RestServiceLinkedService.servicePrincipalId()"
  summary: "Get the service<wbr>Principal<wbr>Id property: The application's client ID used in Aad<wbr>Service<wbr>Principal authentication type."
  syntax: "public Object servicePrincipalId()"
  desc: "Get the servicePrincipalId property: The application's client ID used in AadServicePrincipal authentication type."
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.servicePrincipalKey()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.servicePrincipalKey()"
  name: "servicePrincipalKey()"
  nameWithType: "RestServiceLinkedService.servicePrincipalKey()"
  summary: "Get the service<wbr>Principal<wbr>Key property: The application's key used in Aad<wbr>Service<wbr>Principal authentication type."
  syntax: "public SecretBase servicePrincipalKey()"
  desc: "Get the servicePrincipalKey property: The application's key used in AadServicePrincipal authentication type."
  returns:
    description: "the servicePrincipalKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.tenant()"
  name: "tenant()"
  nameWithType: "RestServiceLinkedService.tenant()"
  summary: "Get the tenant property: The tenant information (domain name or tenant ID) used in Aad<wbr>Service<wbr>Principal authentication type under which your application resides."
  syntax: "public Object tenant()"
  desc: "Get the tenant property: The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides."
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.tokenEndpoint()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.tokenEndpoint()"
  name: "tokenEndpoint()"
  nameWithType: "RestServiceLinkedService.tokenEndpoint()"
  summary: "Get the token<wbr>Endpoint property: The token endpoint of the authorization server to acquire access token."
  syntax: "public Object tokenEndpoint()"
  desc: "Get the tokenEndpoint property: The token endpoint of the authorization server to acquire access token. Type: string (or Expression with resultType string)."
  returns:
    description: "the tokenEndpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.url()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.url()"
  name: "url()"
  nameWithType: "RestServiceLinkedService.url()"
  summary: "Get the url property: The base URL of the REST service."
  syntax: "public Object url()"
  desc: "Get the url property: The base URL of the REST service."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.username()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.username()"
  name: "username()"
  nameWithType: "RestServiceLinkedService.username()"
  summary: "Get the username property: The user name used in Basic authentication type."
  syntax: "public Object username()"
  desc: "Get the username property: The user name used in Basic authentication type."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.validate()"
  name: "validate()"
  nameWithType: "RestServiceLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAadResourceId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAadResourceId(Object aadResourceId)"
  name: "withAadResourceId(Object aadResourceId)"
  nameWithType: "RestServiceLinkedService.withAadResourceId(Object aadResourceId)"
  summary: "Set the aad<wbr>Resource<wbr>Id property: The resource you are requesting authorization to use."
  parameters:
  - description: "the aadResourceId value to set."
    name: "aadResourceId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withAadResourceId(Object aadResourceId)"
  desc: "Set the aadResourceId property: The resource you are requesting authorization to use."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "RestServiceLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RestServiceLinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAuthHeaders(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAuthHeaders(Object authHeaders)"
  name: "withAuthHeaders(Object authHeaders)"
  nameWithType: "RestServiceLinkedService.withAuthHeaders(Object authHeaders)"
  summary: "Set the auth<wbr>Headers property: The additional HTTP headers in the request to RESTful API used for authorization."
  parameters:
  - description: "the authHeaders value to set."
    name: "authHeaders"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withAuthHeaders(Object authHeaders)"
  desc: "Set the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAuthenticationType(com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  name: "withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  nameWithType: "RestServiceLinkedService.withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: Type of authentication used to connect to the REST service."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.RestServiceAuthenticationType&text=RestServiceAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withAuthenticationType(RestServiceAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: Type of authentication used to connect to the REST service."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAzureCloudType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withAzureCloudType(Object azureCloudType)"
  name: "withAzureCloudType(Object azureCloudType)"
  nameWithType: "RestServiceLinkedService.withAzureCloudType(Object azureCloudType)"
  summary: "Set the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  parameters:
  - description: "the azureCloudType value to set."
    name: "azureCloudType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withAzureCloudType(Object azureCloudType)"
  desc: "Set the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withClientId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withClientId(Object clientId)"
  name: "withClientId(Object clientId)"
  nameWithType: "RestServiceLinkedService.withClientId(Object clientId)"
  summary: "Set the client<wbr>Id property: The client ID associated with your application."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withClientId(Object clientId)"
  desc: "Set the clientId property: The client ID associated with your application. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withClientSecret(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withClientSecret(SecretBase clientSecret)"
  name: "withClientSecret(SecretBase clientSecret)"
  nameWithType: "RestServiceLinkedService.withClientSecret(SecretBase clientSecret)"
  summary: "Set the client<wbr>Secret property: The client secret associated with your application."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withClientSecret(SecretBase clientSecret)"
  desc: "Set the clientSecret property: The client secret associated with your application."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "RestServiceLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "RestServiceLinkedService.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withCredential(CredentialReference credential)"
  desc: "Set the credential property: The credential reference containing authentication information."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "RestServiceLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEnableServerCertificateValidation(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  name: "withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  nameWithType: "RestServiceLinkedService.withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  summary: "Set the enable<wbr>Server<wbr>Certificate<wbr>Validation property: Whether to validate server side SSL certificate when connecting to the endpoint.<wbr>The default value is true."
  parameters:
  - description: "the enableServerCertificateValidation value to set."
    name: "enableServerCertificateValidation"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withEnableServerCertificateValidation(Object enableServerCertificateValidation)"
  desc: "Set the enableServerCertificateValidation property: Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "RestServiceLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "RestServiceLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RestServiceLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "RestServiceLinkedService.withPassword(SecretBase password)"
  summary: "Set the password property: The password used in Basic authentication type."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withPassword(SecretBase password)"
  desc: "Set the password property: The password used in Basic authentication type."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withResource(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withResource(Object resource)"
  name: "withResource(Object resource)"
  nameWithType: "RestServiceLinkedService.withResource(Object resource)"
  summary: "Set the resource property: The target service or resource to which the access will be requested."
  parameters:
  - description: "the resource value to set."
    name: "resource"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withResource(Object resource)"
  desc: "Set the resource property: The target service or resource to which the access will be requested. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withScope(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withScope(Object scope)"
  name: "withScope(Object scope)"
  nameWithType: "RestServiceLinkedService.withScope(Object scope)"
  summary: "Set the scope property: The scope of the access required."
  parameters:
  - description: "the scope value to set."
    name: "scope"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withScope(Object scope)"
  desc: "Set the scope property: The scope of the access required. It describes what kind of access will be requested. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "RestServiceLinkedService.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the service<wbr>Principal<wbr>Id property: The application's client ID used in Aad<wbr>Service<wbr>Principal authentication type."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withServicePrincipalId(Object servicePrincipalId)"
  desc: "Set the servicePrincipalId property: The application's client ID used in AadServicePrincipal authentication type."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withServicePrincipalKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  name: "withServicePrincipalKey(SecretBase servicePrincipalKey)"
  nameWithType: "RestServiceLinkedService.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  summary: "Set the service<wbr>Principal<wbr>Key property: The application's key used in Aad<wbr>Service<wbr>Principal authentication type."
  parameters:
  - description: "the servicePrincipalKey value to set."
    name: "servicePrincipalKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withServicePrincipalKey(SecretBase servicePrincipalKey)"
  desc: "Set the servicePrincipalKey property: The application's key used in AadServicePrincipal authentication type."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "RestServiceLinkedService.withTenant(Object tenant)"
  summary: "Set the tenant property: The tenant information (domain name or tenant ID) used in Aad<wbr>Service<wbr>Principal authentication type under which your application resides."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withTenant(Object tenant)"
  desc: "Set the tenant property: The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withTokenEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withTokenEndpoint(Object tokenEndpoint)"
  name: "withTokenEndpoint(Object tokenEndpoint)"
  nameWithType: "RestServiceLinkedService.withTokenEndpoint(Object tokenEndpoint)"
  summary: "Set the token<wbr>Endpoint property: The token endpoint of the authorization server to acquire access token."
  parameters:
  - description: "the tokenEndpoint value to set."
    name: "tokenEndpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withTokenEndpoint(Object tokenEndpoint)"
  desc: "Set the tokenEndpoint property: The token endpoint of the authorization server to acquire access token. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withUrl(Object url)"
  name: "withUrl(Object url)"
  nameWithType: "RestServiceLinkedService.withUrl(Object url)"
  summary: "Set the url property: The base URL of the REST service."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withUrl(Object url)"
  desc: "Set the url property: The base URL of the REST service."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestServiceLinkedService.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "RestServiceLinkedService.withUsername(Object username)"
  summary: "Set the username property: The user name used in Basic authentication type."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestServiceLinkedService withUsername(Object username)"
  desc: "Set the username property: The user name used in Basic authentication type."
  returns:
    description: "the RestServiceLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestServiceLinkedService?alt=com.azure.resourcemanager.datafactory.models.RestServiceLinkedService&text=RestServiceLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Rest Service linked service."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
