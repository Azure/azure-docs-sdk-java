### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex
  id: FunctionWithIndex
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex.apply(T,long)
  langs:
  - java
  name: Streams.FunctionWithIndex<T,R>
  nameWithType: Streams.FunctionWithIndex<T,R>
  fullName: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex<T,R>
  type: Interface
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    An analogue of <xref uid="java.util.function.Function" data-throw-if-not-resolved="false">java.util.function.Function</xref> also accepting an index.


    This interface is only intended for use by callers of <xref uid="#mapWithIndex(Stream,
     FunctionWithIndex)" data-throw-if-not-resolved="false">#mapWithIndex(Stream,
     FunctionWithIndex)</xref>.
  syntax:
    content: public static interface Streams.FunctionWithIndex<T,R>
    typeParameters:
    - id: T
    - id: R
- uid: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex.apply(T,long)
  id: apply(T,long)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex
  langs:
  - java
  name: apply(T from, long index)
  nameWithType: Streams.FunctionWithIndex<T,R>.apply(T from, long index)
  fullName: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex<T,R>.apply(T from, long index)
  overload: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex.apply*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Applies this function to the given argument and its index within a stream.
  syntax:
    content: public abstract R apply(T from, long index)
    parameters:
    - id: from
      type: T
    - id: index
      type: long
    return:
      type: R
references:
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: R
  spec.java:
  - uid: R
    name: R
    fullName: R
- uid: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex.apply*
  name: apply
  nameWithType: Streams.FunctionWithIndex<T,R>.apply
  fullName: com.azure.cosmos.implementation.guava25.collect.Streams.FunctionWithIndex<T,R>.apply
  package: com.azure.cosmos.implementation.guava25.collect
