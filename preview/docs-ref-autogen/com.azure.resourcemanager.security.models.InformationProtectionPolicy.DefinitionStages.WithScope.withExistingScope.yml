### YamlMime:JavaMember
uid: "com.azure.resourcemanager.security.models.InformationProtectionPolicy.DefinitionStages.WithScope.withExistingScope*"
fullName: "com.azure.resourcemanager.security.models.InformationProtectionPolicy.DefinitionStages.WithScope.withExistingScope"
name: "withExistingScope"
nameWithType: "InformationProtectionPolicy.DefinitionStages.WithScope.withExistingScope"
members:
- uid: "com.azure.resourcemanager.security.models.InformationProtectionPolicy.DefinitionStages.WithScope.withExistingScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.security.models.InformationProtectionPolicy.DefinitionStages.WithScope.withExistingScope(String scope)"
  name: "withExistingScope(String scope)"
  nameWithType: "InformationProtectionPolicy.DefinitionStages.WithScope.withExistingScope(String scope)"
  summary: "Specifies scope."
  parameters:
  - description: "Scope of the query, can be subscription\n     (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group\n     (/providers/Microsoft.Management/managementGroups/mgName)."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract InformationProtectionPolicy.DefinitionStages.WithCreate withExistingScope(String scope)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.security.models.InformationProtectionPolicy.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.security.models.InformationProtectionPolicy.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.security.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-security:1.0.0-beta.1
