### YamlMime:JavaType
uid: "com.azure.resourcemanager.policyinsights.models.Attestations"
fullName: "com.azure.resourcemanager.policyinsights.models.Attestations"
name: "Attestations"
nameWithType: "Attestations"
summary: "Resource collection API of Attestations."
syntax: "public interface Attestations"
methods:
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtResource(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  name: "createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  nameWithType: "Attestations.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at resource scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtResource(java.lang.String,java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  name: "createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "Attestations.createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation createOrUpdateAtResource(String resourceId, String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at resource scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtSubscription(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  name: "createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  nameWithType: "Attestations.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  summary: "Creates or updates an attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation createOrUpdateAtSubscription(String attestationName, AttestationInner parameters)"
  desc: "Creates or updates an attestation at subscription scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtSubscription(java.lang.String,com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  name: "createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  nameWithType: "Attestations.createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  summary: "Creates or updates an attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner?alt=com.azure.resourcemanager.policyinsights.fluent.models.AttestationInner&text=AttestationInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation createOrUpdateAtSubscription(String attestationName, AttestationInner parameters, Context context)"
  desc: "Creates or updates an attestation at subscription scope."
  returns:
    description: "an attestation resource."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.define(String name)"
  name: "define(String name)"
  nameWithType: "Attestations.define(String name)"
  summary: "Begins definition for a new Attestation resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Attestation resource."
  returns:
    description: "the first stage of the new Attestation definition."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation.DefinitionStages.Blank?alt=com.azure.resourcemanager.policyinsights.models.Attestation.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtResource(String resourceId, String attestationName)"
  name: "deleteAtResource(String resourceId, String attestationName)"
  nameWithType: "Attestations.deleteAtResource(String resourceId, String attestationName)"
  summary: "Deletes an existing attestation at individual resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtResource(String resourceId, String attestationName)"
  desc: "Deletes an existing attestation at individual resource scope."
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  name: "deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  nameWithType: "Attestations.deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  summary: "Deletes an existing attestation at individual resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  desc: "Deletes an existing attestation at individual resource scope."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtSubscription(String attestationName)"
  name: "deleteAtSubscription(String attestationName)"
  nameWithType: "Attestations.deleteAtSubscription(String attestationName)"
  summary: "Deletes an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtSubscription(String attestationName)"
  desc: "Deletes an existing attestation at subscription scope."
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtSubscriptionWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  name: "deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  nameWithType: "Attestations.deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  summary: "Deletes an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteAtSubscriptionWithResponse(String attestationName, Context context)"
  desc: "Deletes an existing attestation at subscription scope."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Attestations.deleteById(String id)"
  summary: "Deletes an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes an existing attestation at resource group scope."
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Attestations.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes an existing attestation at resource group scope."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteByResourceGroup(String resourceGroupName, String attestationName)"
  name: "deleteByResourceGroup(String resourceGroupName, String attestationName)"
  nameWithType: "Attestations.deleteByResourceGroup(String resourceGroupName, String attestationName)"
  summary: "Deletes an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String attestationName)"
  desc: "Deletes an existing attestation at resource group scope."
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  nameWithType: "Attestations.deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  summary: "Deletes an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String attestationName, Context context)"
  desc: "Deletes an existing attestation at resource group scope."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtResource(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtResource(String resourceId, String attestationName)"
  name: "getAtResource(String resourceId, String attestationName)"
  nameWithType: "Attestations.getAtResource(String resourceId, String attestationName)"
  summary: "Gets an existing attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation getAtResource(String resourceId, String attestationName)"
  desc: "Gets an existing attestation at resource scope."
  returns:
    description: "an existing attestation at resource scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtResourceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  name: "getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  nameWithType: "Attestations.getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  summary: "Gets an existing attestation at resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Attestation> getAtResourceWithResponse(String resourceId, String attestationName, Context context)"
  desc: "Gets an existing attestation at resource scope."
  returns:
    description: "an existing attestation at resource scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtSubscription(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtSubscription(String attestationName)"
  name: "getAtSubscription(String attestationName)"
  nameWithType: "Attestations.getAtSubscription(String attestationName)"
  summary: "Gets an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation getAtSubscription(String attestationName)"
  desc: "Gets an existing attestation at subscription scope."
  returns:
    description: "an existing attestation at subscription scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtSubscriptionWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getAtSubscriptionWithResponse(String attestationName, Context context)"
  name: "getAtSubscriptionWithResponse(String attestationName, Context context)"
  nameWithType: "Attestations.getAtSubscriptionWithResponse(String attestationName, Context context)"
  summary: "Gets an existing attestation at subscription scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Attestation> getAtSubscriptionWithResponse(String attestationName, Context context)"
  desc: "Gets an existing attestation at subscription scope."
  returns:
    description: "an existing attestation at subscription scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Attestations.getById(String id)"
  summary: "Gets an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation getById(String id)"
  desc: "Gets an existing attestation at resource group scope."
  returns:
    description: "an existing attestation at resource group scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Attestations.getByIdWithResponse(String id, Context context)"
  summary: "Gets an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Attestation> getByIdWithResponse(String id, Context context)"
  desc: "Gets an existing attestation at resource group scope."
  returns:
    description: "an existing attestation at resource group scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getByResourceGroup(String resourceGroupName, String attestationName)"
  name: "getByResourceGroup(String resourceGroupName, String attestationName)"
  nameWithType: "Attestations.getByResourceGroup(String resourceGroupName, String attestationName)"
  summary: "Gets an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Attestation getByResourceGroup(String resourceGroupName, String attestationName)"
  desc: "Gets an existing attestation at resource group scope."
  returns:
    description: "an existing attestation at resource group scope."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  nameWithType: "Attestations.getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  summary: "Gets an existing attestation at resource group scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the attestation."
    name: "attestationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Attestation> getByResourceGroupWithResponse(String resourceGroupName, String attestationName, Context context)"
  desc: "Gets an existing attestation at resource group scope."
  returns:
    description: "an existing attestation at resource group scope."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.list()"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.list()"
  name: "list()"
  nameWithType: "Attestations.list()"
  summary: "Gets all attestations for the subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Attestation> list()"
  desc: "Gets all attestations for the subscription."
  returns:
    description: "all attestations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.list(Integer top, String filter, Context context)"
  name: "list(Integer top, String filter, Context context)"
  nameWithType: "Attestations.list(Integer top, String filter, Context context)"
  summary: "Gets all attestations for the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Attestation> list(Integer top, String filter, Context context)"
  desc: "Gets all attestations for the subscription."
  returns:
    description: "all attestations for the subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Attestations.listByResourceGroup(String resourceGroupName)"
  summary: "Gets all attestations for the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Attestation> listByResourceGroup(String resourceGroupName)"
  desc: "Gets all attestations for the resource group."
  returns:
    description: "all attestations for the resource group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.listByResourceGroup(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  nameWithType: "Attestations.listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  summary: "Gets all attestations for the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Attestation> listByResourceGroup(String resourceGroupName, Integer top, String filter, Context context)"
  desc: "Gets all attestations for the resource group."
  returns:
    description: "all attestations for the resource group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.listForResource(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.listForResource(String resourceId)"
  name: "listForResource(String resourceId)"
  nameWithType: "Attestations.listForResource(String resourceId)"
  summary: "Gets all attestations for a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Attestation> listForResource(String resourceId)"
  desc: "Gets all attestations for a resource."
  returns:
    description: "all attestations for a resource."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.Attestations.listForResource(java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.policyinsights.models.Attestations.listForResource(String resourceId, Integer top, String filter, Context context)"
  name: "listForResource(String resourceId, Integer top, String filter, Context context)"
  nameWithType: "Attestations.listForResource(String resourceId, Integer top, String filter, Context context)"
  summary: "Gets all attestations for a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource ID."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter expression."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Attestation> listForResource(String resourceId, Integer top, String filter, Context context)"
  desc: "Gets all attestations for a resource."
  returns:
    description: "all attestations for a resource."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.policyinsights.models.Attestation?alt=com.azure.resourcemanager.policyinsights.models.Attestation&text=Attestation\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Attestations."
metadata: {}
package: "com.azure.resourcemanager.policyinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-policyinsights:1.0.0-beta.2
