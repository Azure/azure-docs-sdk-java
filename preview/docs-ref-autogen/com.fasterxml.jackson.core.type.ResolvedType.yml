### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.type.ResolvedType
  id: ResolvedType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type
  children:
  - com.fasterxml.jackson.core.type.ResolvedType.ResolvedType()
  - com.fasterxml.jackson.core.type.ResolvedType.containedType(int)
  - com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()
  - com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)
  - com.fasterxml.jackson.core.type.ResolvedType.getContentType()
  - com.fasterxml.jackson.core.type.ResolvedType.getKeyType()
  - com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()
  - com.fasterxml.jackson.core.type.ResolvedType.getRawClass()
  - com.fasterxml.jackson.core.type.ResolvedType.getReferencedType()
  - com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()
  - com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class<?>)
  - com.fasterxml.jackson.core.type.ResolvedType.isAbstract()
  - com.fasterxml.jackson.core.type.ResolvedType.isArrayType()
  - com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()
  - com.fasterxml.jackson.core.type.ResolvedType.isConcrete()
  - com.fasterxml.jackson.core.type.ResolvedType.isContainerType()
  - com.fasterxml.jackson.core.type.ResolvedType.isEnumType()
  - com.fasterxml.jackson.core.type.ResolvedType.isFinal()
  - com.fasterxml.jackson.core.type.ResolvedType.isInterface()
  - com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()
  - com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()
  - com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  - com.fasterxml.jackson.core.type.ResolvedType.isThrowable()
  - com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
  langs:
  - java
  name: ResolvedType
  nameWithType: ResolvedType
  fullName: com.fasterxml.jackson.core.type.ResolvedType
  type: Class
  package: com.fasterxml.jackson.core.type
  summary: Type abstraction that represents Java type that has been resolved (i.e. has all generic information, if any, resolved to concrete types). Note that this is an intermediate type, and all concrete instances MUST be of type `JavaType` from "databind" bundle -- this abstraction is only needed so that types can be passed through <xref uid="com.fasterxml.jackson.core.JsonParser.readValueAs" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonParser#readValueAs</xref> methods.
  syntax:
    content: public abstract class ResolvedType
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.type.ResolvedType.ResolvedType()
  id: ResolvedType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: ResolvedType()
  nameWithType: ResolvedType.ResolvedType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.ResolvedType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.ResolvedType*
  type: Constructor
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public ResolvedType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedType(int)
  id: containedType(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: containedType(int index)
  nameWithType: ResolvedType.containedType(int index)
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedType(int index)
  overload: com.fasterxml.jackson.core.type.ResolvedType.containedType*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Method for accessing definitions of contained ("child") types.
  syntax:
    content: public abstract ResolvedType containedType(int index)
    parameters:
    - id: index
      type: int
      description: Index of contained type to return
    return:
      type: com.fasterxml.jackson.core.type.ResolvedType
      description: >-
        Contained type at index, or null if no such type
            exists (no exception thrown)
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()
  id: containedTypeCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: containedTypeCount()
  nameWithType: ResolvedType.containedTypeCount()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()
  overload: com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Method for checking how many contained types this type has. Contained types are usually generic types, so that generic Maps have 2 contained types.
  syntax:
    content: public abstract int containedTypeCount()
    return:
      type: int
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)
  id: containedTypeName(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: containedTypeName(int index)
  nameWithType: ResolvedType.containedTypeName(int index)
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int index)
  overload: com.fasterxml.jackson.core.type.ResolvedType.containedTypeName*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Method for accessing name of type variable in indicated position. If no name is bound, will use placeholders (derived from 0-based index); if no type variable or argument exists with given index, null is returned.
  syntax:
    content: public abstract String containedTypeName(int index)
    parameters:
    - id: index
      type: int
      description: Index of contained type to return
    return:
      type: java.lang.String
      description: >-
        Contained type at index, or null if no such type
            exists (no exception thrown)
- uid: com.fasterxml.jackson.core.type.ResolvedType.getContentType()
  id: getContentType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: getContentType()
  nameWithType: ResolvedType.getContentType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getContentType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.getContentType*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: 'Method for accessing content type of this type, if type has such a thing: simple types do not, structured types do (like arrays, Collections and Maps)'
  syntax:
    content: public abstract ResolvedType getContentType()
    return:
      type: com.fasterxml.jackson.core.type.ResolvedType
- uid: com.fasterxml.jackson.core.type.ResolvedType.getKeyType()
  id: getKeyType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: getKeyType()
  nameWithType: ResolvedType.getKeyType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getKeyType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.getKeyType*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Method for accessing key type for this type, assuming type has such a concept (only Map types do)
  syntax:
    content: public abstract ResolvedType getKeyType()
    return:
      type: com.fasterxml.jackson.core.type.ResolvedType
- uid: com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()
  id: getParameterSource()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: getParameterSource()
  nameWithType: ResolvedType.getParameterSource()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()
  overload: com.fasterxml.jackson.core.type.ResolvedType.getParameterSource*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: >-
    Accessor that can be used to find out type for which parameterization is applied: this is often NOT same as what <xref uid="com.fasterxml.jackson.core.type.ResolvedType.getRawClass*" data-throw-if-not-resolved="false">#getRawClass</xref> returns, but rather one of it supertype.


    For example: for type like <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">java.util.HashMap</xref>, raw type is <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">java.util.HashMap</xref>; but this method would return <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>, because relevant type parameters that are resolved (and accessible using <xref uid="com.fasterxml.jackson.core.type.ResolvedType.containedType(int)" data-throw-if-not-resolved="false">#containedType(int)</xref> and <xref uid="com.fasterxml.jackson.core.type.ResolvedType.getKeyType()" data-throw-if-not-resolved="false">#getKeyType()</xref>) are parameter for <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> (which may or may not be same as type parameters for subtype; in case of <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">java.util.HashMap</xref> they are, but for further subtypes they may be different parameters or possibly none at all).
  syntax:
    content: public Class<?> getParameterSource()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.core.type.ResolvedType.getRawClass()
  id: getRawClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: getRawClass()
  nameWithType: ResolvedType.getRawClass()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getRawClass()
  overload: com.fasterxml.jackson.core.type.ResolvedType.getRawClass*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Accessor for type-erased <xref uid="java.lang.Class" data-throw-if-not-resolved="false">Class</xref> of resolved type.
  syntax:
    content: public abstract Class<?> getRawClass()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.core.type.ResolvedType.getReferencedType()
  id: getReferencedType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: getReferencedType()
  nameWithType: ResolvedType.getReferencedType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getReferencedType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.getReferencedType*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Method for accessing type of value that instances of this type references, if any.
  syntax:
    content: public abstract ResolvedType getReferencedType()
    return:
      type: com.fasterxml.jackson.core.type.ResolvedType
      description: Referenced type, if any; null if not.
- uid: com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()
  id: hasGenericTypes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: hasGenericTypes()
  nameWithType: ResolvedType.hasGenericTypes()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()
  overload: com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Method that can be used to find out if the type directly declares generic parameters (for its direct super-class and/or super-interfaces).
  syntax:
    content: public abstract boolean hasGenericTypes()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class<?>)
  id: hasRawClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: hasRawClass(Class<?> clz)
  nameWithType: ResolvedType.hasRawClass(Class<?> clz)
  fullName: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(Class<?> clz)
  overload: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean hasRawClass(Class<?> clz)
    parameters:
    - id: clz
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isAbstract()
  id: isAbstract()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isAbstract()
  nameWithType: ResolvedType.isAbstract()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isAbstract()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isAbstract*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isAbstract()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isArrayType()
  id: isArrayType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isArrayType()
  nameWithType: ResolvedType.isArrayType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isArrayType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isArrayType*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isArrayType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()
  id: isCollectionLikeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isCollectionLikeType()
  nameWithType: ResolvedType.isCollectionLikeType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isCollectionLikeType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isConcrete()
  id: isConcrete()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isConcrete()
  nameWithType: ResolvedType.isConcrete()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isConcrete()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isConcrete*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isConcrete()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isContainerType()
  id: isContainerType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isContainerType()
  nameWithType: ResolvedType.isContainerType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isContainerType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isContainerType*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isContainerType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isEnumType()
  id: isEnumType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isEnumType()
  nameWithType: ResolvedType.isEnumType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isEnumType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isEnumType*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isEnumType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isFinal()
  id: isFinal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isFinal()
  nameWithType: ResolvedType.isFinal()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isFinal()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isFinal*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isFinal()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isInterface()
  id: isInterface()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isInterface()
  nameWithType: ResolvedType.isInterface()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isInterface()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isInterface*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isInterface()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()
  id: isMapLikeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isMapLikeType()
  nameWithType: ResolvedType.isMapLikeType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isMapLikeType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()
  id: isPrimitive()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isPrimitive()
  nameWithType: ResolvedType.isPrimitive()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isPrimitive*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isPrimitive()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  id: isReferenceType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isReferenceType()
  nameWithType: ResolvedType.isReferenceType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Whether this type is a referential type, meaning that values are basically pointers to "real" values (or null) and not regular values themselves. Typical examples include things like <xref uid="java.util.concurrent.atomic.AtomicReference" data-throw-if-not-resolved="false">java.util.concurrent.atomic.AtomicReference</xref>, and various `Optional` types (in JDK8, Guava).
  syntax:
    content: public boolean isReferenceType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.isThrowable()
  id: isThrowable()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: isThrowable()
  nameWithType: ResolvedType.isThrowable()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isThrowable()
  overload: com.fasterxml.jackson.core.type.ResolvedType.isThrowable*
  type: Method
  package: com.fasterxml.jackson.core.type
  syntax:
    content: public abstract boolean isThrowable()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
  id: toCanonical()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.type.ResolvedType
  langs:
  - java
  name: toCanonical()
  nameWithType: ResolvedType.toCanonical()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
  overload: com.fasterxml.jackson.core.type.ResolvedType.toCanonical*
  type: Method
  package: com.fasterxml.jackson.core.type
  summary: Method that can be used to serialize type into form from which it can be fully deserialized from at a later point (using `TypeFactory` from mapper package). For simple types this is same as calling <xref uid="java.lang.Class.getName" data-throw-if-not-resolved="false">Class#getName</xref>, but for structured types it may additionally contain type information about contents.
  syntax:
    content: public abstract String toCanonical()
    return:
      type: java.lang.String
references:
- uid: com.fasterxml.jackson.core.type.ResolvedType.ResolvedType*
  name: ResolvedType
  nameWithType: ResolvedType.ResolvedType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.ResolvedType
  package: com.fasterxml.jackson.core.type
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.type.ResolvedType.getRawClass*
  name: getRawClass
  nameWithType: ResolvedType.getRawClass
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getRawClass
  package: com.fasterxml.jackson.core.type
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass*
  name: hasRawClass
  nameWithType: ResolvedType.hasRawClass
  fullName: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isAbstract*
  name: isAbstract
  nameWithType: ResolvedType.isAbstract
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isAbstract
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isConcrete*
  name: isConcrete
  nameWithType: ResolvedType.isConcrete
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isConcrete
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isThrowable*
  name: isThrowable
  nameWithType: ResolvedType.isThrowable
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isThrowable
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isArrayType*
  name: isArrayType
  nameWithType: ResolvedType.isArrayType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isArrayType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isEnumType*
  name: isEnumType
  nameWithType: ResolvedType.isEnumType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isEnumType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isInterface*
  name: isInterface
  nameWithType: ResolvedType.isInterface
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isInterface
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isPrimitive*
  name: isPrimitive
  nameWithType: ResolvedType.isPrimitive
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isPrimitive
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isFinal*
  name: isFinal
  nameWithType: ResolvedType.isFinal
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isFinal
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isContainerType*
  name: isContainerType
  nameWithType: ResolvedType.isContainerType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isContainerType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType*
  name: isCollectionLikeType
  nameWithType: ResolvedType.isCollectionLikeType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType*
  name: isReferenceType
  nameWithType: ResolvedType.isReferenceType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType*
  name: isMapLikeType
  nameWithType: ResolvedType.isMapLikeType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes*
  name: hasGenericTypes
  nameWithType: ResolvedType.hasGenericTypes
  fullName: com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.getParameterSource*
  name: getParameterSource
  nameWithType: ResolvedType.getParameterSource
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getParameterSource
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.getKeyType*
  name: getKeyType
  nameWithType: ResolvedType.getKeyType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getKeyType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.getContentType*
  name: getContentType
  nameWithType: ResolvedType.getContentType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getContentType
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.getReferencedType*
  name: getReferencedType
  nameWithType: ResolvedType.getReferencedType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getReferencedType
  package: com.fasterxml.jackson.core.type
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount*
  name: containedTypeCount
  nameWithType: ResolvedType.containedTypeCount
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedType*
  name: containedType
  nameWithType: ResolvedType.containedType
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedType
  package: com.fasterxml.jackson.core.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedTypeName*
  name: containedTypeName
  nameWithType: ResolvedType.containedTypeName
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedTypeName
  package: com.fasterxml.jackson.core.type
- uid: com.fasterxml.jackson.core.type.ResolvedType.toCanonical*
  name: toCanonical
  nameWithType: ResolvedType.toCanonical
  fullName: com.fasterxml.jackson.core.type.ResolvedType.toCanonical
  package: com.fasterxml.jackson.core.type
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
