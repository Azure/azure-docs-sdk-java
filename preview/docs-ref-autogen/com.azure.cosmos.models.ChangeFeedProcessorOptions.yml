### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions
  id: ChangeFeedProcessorOptions
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models
  children:
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning()
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay(java.time.Duration)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval(java.time.Duration)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval(java.time.Duration)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix(java.lang.String)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval(java.time.Duration)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount(int)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount(int)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount(int)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation(java.lang.String)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning(boolean)
  - com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime(java.time.Instant)
  langs:
  - java
  name: ChangeFeedProcessorOptions
  nameWithType: ChangeFeedProcessorOptions
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions
  type: Class
  package: com.azure.cosmos.models
  summary: Specifies the options associated with <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref>.
  syntax:
    content: public final class ChangeFeedProcessorOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions()
  id: ChangeFeedProcessorOptions()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: ChangeFeedProcessorOptions()
  nameWithType: ChangeFeedProcessorOptions.ChangeFeedProcessorOptions()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Instantiates a new Change feed processor options.
  syntax:
    content: public ChangeFeedProcessorOptions()
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay()
  id: getFeedPollDelay()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getFeedPollDelay()
  nameWithType: ChangeFeedProcessorOptions.getFeedPollDelay()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the delay in between polling a partition for new changes on the feed, after all current changes are drained.
  syntax:
    content: public Duration getFeedPollDelay()
    return:
      type: java.time.Duration
      description: the delay in between polling a partition for new changes on the feed.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval()
  id: getLeaseAcquireInterval()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getLeaseAcquireInterval()
  nameWithType: ChangeFeedProcessorOptions.getLeaseAcquireInterval()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the interval to kick off a task to compute if partitions are distributed evenly among known host instances.
  syntax:
    content: public Duration getLeaseAcquireInterval()
    return:
      type: java.time.Duration
      description: >-
        the interval to kick off a task to compute if partitions are distributed evenly among known host
         instances.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval()
  id: getLeaseExpirationInterval()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getLeaseExpirationInterval()
  nameWithType: ChangeFeedProcessorOptions.getLeaseExpirationInterval()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets the interval for which the lease is taken on a lease representing a partition.


    If the lease is not renewed within this interval, it will cause it to expire and ownership of the partition will move to another <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> instance.
  syntax:
    content: public Duration getLeaseExpirationInterval()
    return:
      type: java.time.Duration
      description: the interval for which the lease is taken on a lease representing a partition.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix()
  id: getLeasePrefix()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getLeasePrefix()
  nameWithType: ChangeFeedProcessorOptions.getLeasePrefix()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets a prefix to be used as part of the lease ID.


    This can be used to support multiple instances of <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> instances pointing at the same feed while using the same auxiliary container.
  syntax:
    content: public String getLeasePrefix()
    return:
      type: java.lang.String
      description: a prefix to be used as part of the lease ID.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval()
  id: getLeaseRenewInterval()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getLeaseRenewInterval()
  nameWithType: ChangeFeedProcessorOptions.getLeaseRenewInterval()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the renew interval for all leases for partitions currently held by <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> instance.
  syntax:
    content: public Duration getLeaseRenewInterval()
    return:
      type: java.time.Duration
      description: the renew interval for all leases for partitions.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount()
  id: getMaxItemCount()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getMaxItemCount()
  nameWithType: ChangeFeedProcessorOptions.getMaxItemCount()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the maximum number of items to be returned in the enumeration operation in the Azure Cosmos DB service.
  syntax:
    content: public int getMaxItemCount()
    return:
      type: int
      description: the maximum number of items to be returned in the enumeration operation in the Azure Cosmos DB service.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount()
  id: getMaxScaleCount()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getMaxScaleCount()
  nameWithType: ChangeFeedProcessorOptions.getMaxScaleCount()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets the maximum number of partitions (parallel workers) the host can run.


    This option can be used to limit the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts. Default setting is "0", unlimited.
  syntax:
    content: public int getMaxScaleCount()
    return:
      type: int
      description: the maximum number of partitions (parallel workers) the host can run.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount()
  id: getMinScaleCount()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getMinScaleCount()
  nameWithType: ChangeFeedProcessorOptions.getMinScaleCount()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets the minimum partition count (parallel workers) for the current host.


    This option can be used to increase the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts.
  syntax:
    content: public int getMinScaleCount()
    return:
      type: int
      description: the minimum scale count for the host.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation()
  id: getStartContinuation()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getStartContinuation()
  nameWithType: ChangeFeedProcessorOptions.getStartContinuation()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets the start request continuation token to start looking for changes after.


    This option can be used when lease store is not initialized and it is ignored if a lease item exists and has continuation token that is not null. If this is specified, both StartTime and StartFromBeginning are ignored.
  syntax:
    content: public String getStartContinuation()
    return:
      type: java.lang.String
      description: the string representing a continuation token that will be used to get item feeds starting with.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime()
  id: getStartTime()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: getStartTime()
  nameWithType: ChangeFeedProcessorOptions.getStartTime()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets the time (exclusive) to start looking for changes after.


    This option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. If this option is specified, "start from beginning" option is ignored.
  syntax:
    content: public Instant getStartTime()
    return:
      type: java.time.Instant
      description: the time (exclusive) to start looking for changes after.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning()
  id: isStartFromBeginning()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: isStartFromBeginning()
  nameWithType: ChangeFeedProcessorOptions.isStartFromBeginning()
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning()
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets a value indicating whether change feed in the Azure Cosmos DB service should start from beginning (true) or from current (false). By default it's start from current (false).


    This option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. (3) Start time option is not specified.
  syntax:
    content: public boolean isStartFromBeginning()
    return:
      type: boolean
      description: a value indicating whether change feed in the Azure Cosmos DB service should start from.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay(java.time.Duration)
  id: setFeedPollDelay(java.time.Duration)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setFeedPollDelay(Duration feedPollDelay)
  nameWithType: ChangeFeedProcessorOptions.setFeedPollDelay(Duration feedPollDelay)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay(Duration feedPollDelay)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the delay in between polling a partition for new changes on the feed, after all current changes are drained.
  syntax:
    content: public ChangeFeedProcessorOptions setFeedPollDelay(Duration feedPollDelay)
    parameters:
    - id: feedPollDelay
      type: java.time.Duration
      description: >-
        the delay in between polling a partition for new changes on the feed, after all current
         changes are drained.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval(java.time.Duration)
  id: setLeaseAcquireInterval(java.time.Duration)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setLeaseAcquireInterval(Duration leaseAcquireInterval)
  nameWithType: ChangeFeedProcessorOptions.setLeaseAcquireInterval(Duration leaseAcquireInterval)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval(Duration leaseAcquireInterval)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets he interval to kick off a task to compute if partitions are distributed evenly among known host instances.
  syntax:
    content: public ChangeFeedProcessorOptions setLeaseAcquireInterval(Duration leaseAcquireInterval)
    parameters:
    - id: leaseAcquireInterval
      type: java.time.Duration
      description: >-
        he interval to kick off a task to compute if partitions are distributed evenly
         among known host instances.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval(java.time.Duration)
  id: setLeaseExpirationInterval(java.time.Duration)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setLeaseExpirationInterval(Duration leaseExpirationInterval)
  nameWithType: ChangeFeedProcessorOptions.setLeaseExpirationInterval(Duration leaseExpirationInterval)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval(Duration leaseExpirationInterval)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets the interval for which the lease is taken on a lease representing a partition.


    If the lease is not renewed within this interval, it will cause it to expire and ownership of the partition will move to another <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> instance.
  syntax:
    content: public ChangeFeedProcessorOptions setLeaseExpirationInterval(Duration leaseExpirationInterval)
    parameters:
    - id: leaseExpirationInterval
      type: java.time.Duration
      description: the interval for which the lease is taken on a lease representing a partition.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix(java.lang.String)
  id: setLeasePrefix(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setLeasePrefix(String leasePrefix)
  nameWithType: ChangeFeedProcessorOptions.setLeasePrefix(String leasePrefix)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix(String leasePrefix)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets a prefix to be used as part of the lease ID.
  syntax:
    content: public ChangeFeedProcessorOptions setLeasePrefix(String leasePrefix)
    parameters:
    - id: leasePrefix
      type: java.lang.String
      description: a prefix to be used as part of the lease ID.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval(java.time.Duration)
  id: setLeaseRenewInterval(java.time.Duration)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setLeaseRenewInterval(Duration leaseRenewInterval)
  nameWithType: ChangeFeedProcessorOptions.setLeaseRenewInterval(Duration leaseRenewInterval)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval(Duration leaseRenewInterval)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the renew interval for all leases for partitions currently held by <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> instance.
  syntax:
    content: public ChangeFeedProcessorOptions setLeaseRenewInterval(Duration leaseRenewInterval)
    parameters:
    - id: leaseRenewInterval
      type: java.time.Duration
      description: >-
        the renew interval for all leases for partitions currently held by
         <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> instance.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount(int)
  id: setMaxItemCount(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setMaxItemCount(int maxItemCount)
  nameWithType: ChangeFeedProcessorOptions.setMaxItemCount(int maxItemCount)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount(int maxItemCount)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the maximum number of items to be returned in the enumeration operation.
  syntax:
    content: public ChangeFeedProcessorOptions setMaxItemCount(int maxItemCount)
    parameters:
    - id: maxItemCount
      type: int
      description: the maximum number of items to be returned in the enumeration operation.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount(int)
  id: setMaxScaleCount(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setMaxScaleCount(int maxScaleCount)
  nameWithType: ChangeFeedProcessorOptions.setMaxScaleCount(int maxScaleCount)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount(int maxScaleCount)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets the maximum number of partitions (parallel workers) the host can run.


    This option can be used to limit the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts. Default setting is "0", unlimited.
  syntax:
    content: public ChangeFeedProcessorOptions setMaxScaleCount(int maxScaleCount)
    parameters:
    - id: maxScaleCount
      type: int
      description: the maximum number of partitions (parallel workers) the host can run.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount(int)
  id: setMinScaleCount(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setMinScaleCount(int minScaleCount)
  nameWithType: ChangeFeedProcessorOptions.setMinScaleCount(int minScaleCount)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount(int minScaleCount)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets the minimum partition count (parallel workers) for the current host.


    This option can be used to increase the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts.
  syntax:
    content: public ChangeFeedProcessorOptions setMinScaleCount(int minScaleCount)
    parameters:
    - id: minScaleCount
      type: int
      description: the minimum partition count for the host.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation(java.lang.String)
  id: setStartContinuation(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setStartContinuation(String startContinuation)
  nameWithType: ChangeFeedProcessorOptions.setStartContinuation(String startContinuation)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation(String startContinuation)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets the start request continuation token to start looking for changes after.


    This option can be used when lease store is not initialized and it is ignored if a lease item exists and has continuation token that is not null. If this is specified, both StartTime and StartFromBeginning are ignored.
  syntax:
    content: public ChangeFeedProcessorOptions setStartContinuation(String startContinuation)
    parameters:
    - id: startContinuation
      type: java.lang.String
      description: the start request continuation token to start looking for changes after.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the string representing a continuation token that will be used to get item feeds starting with.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning(boolean)
  id: setStartFromBeginning(boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setStartFromBeginning(boolean startFromBeginning)
  nameWithType: ChangeFeedProcessorOptions.setStartFromBeginning(boolean startFromBeginning)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning(boolean startFromBeginning)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets a value indicating whether change feed in the Azure Cosmos DB service should start from beginning.


    This option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. (3) Start time option is not specified.
  syntax:
    content: public ChangeFeedProcessorOptions setStartFromBeginning(boolean startFromBeginning)
    parameters:
    - id: startFromBeginning
      type: boolean
      description: Indicates to start from beginning if true
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime(java.time.Instant)
  id: setStartTime(java.time.Instant)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.models.ChangeFeedProcessorOptions
  langs:
  - java
  name: setStartTime(Instant startTime)
  nameWithType: ChangeFeedProcessorOptions.setStartTime(Instant startTime)
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime(Instant startTime)
  overload: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets the time (exclusive) to start looking for changes after (UTC time).


    This option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. If this option is specified, "start from beginning" option is ignored.
  syntax:
    content: public ChangeFeedProcessorOptions setStartTime(Instant startTime)
    parameters:
    - id: startTime
      type: java.time.Instant
      description: the time (exclusive) to start looking for changes after.
    return:
      type: com.azure.cosmos.models.ChangeFeedProcessorOptions
      description: the current ChangeFeedProcessorOptions instance.
references:
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions*
  name: ChangeFeedProcessorOptions
  nameWithType: ChangeFeedProcessorOptions.ChangeFeedProcessorOptions
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions
  package: com.azure.cosmos.models
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval*
  name: getLeaseRenewInterval
  nameWithType: ChangeFeedProcessorOptions.getLeaseRenewInterval
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval*
  name: setLeaseRenewInterval
  nameWithType: ChangeFeedProcessorOptions.setLeaseRenewInterval
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval*
  name: getLeaseAcquireInterval
  nameWithType: ChangeFeedProcessorOptions.getLeaseAcquireInterval
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval*
  name: setLeaseAcquireInterval
  nameWithType: ChangeFeedProcessorOptions.setLeaseAcquireInterval
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval*
  name: getLeaseExpirationInterval
  nameWithType: ChangeFeedProcessorOptions.getLeaseExpirationInterval
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval*
  name: setLeaseExpirationInterval
  nameWithType: ChangeFeedProcessorOptions.setLeaseExpirationInterval
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay*
  name: getFeedPollDelay
  nameWithType: ChangeFeedProcessorOptions.getFeedPollDelay
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay*
  name: setFeedPollDelay
  nameWithType: ChangeFeedProcessorOptions.setFeedPollDelay
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay
  package: com.azure.cosmos.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix*
  name: getLeasePrefix
  nameWithType: ChangeFeedProcessorOptions.getLeasePrefix
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix*
  name: setLeasePrefix
  nameWithType: ChangeFeedProcessorOptions.setLeasePrefix
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix
  package: com.azure.cosmos.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount*
  name: getMaxItemCount
  nameWithType: ChangeFeedProcessorOptions.getMaxItemCount
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount*
  name: setMaxItemCount
  nameWithType: ChangeFeedProcessorOptions.setMaxItemCount
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation*
  name: getStartContinuation
  nameWithType: ChangeFeedProcessorOptions.getStartContinuation
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation*
  name: setStartContinuation
  nameWithType: ChangeFeedProcessorOptions.setStartContinuation
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation
  package: com.azure.cosmos.models
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime*
  name: getStartTime
  nameWithType: ChangeFeedProcessorOptions.getStartTime
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime*
  name: setStartTime
  nameWithType: ChangeFeedProcessorOptions.setStartTime
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime
  package: com.azure.cosmos.models
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning*
  name: isStartFromBeginning
  nameWithType: ChangeFeedProcessorOptions.isStartFromBeginning
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning*
  name: setStartFromBeginning
  nameWithType: ChangeFeedProcessorOptions.setStartFromBeginning
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount*
  name: getMinScaleCount
  nameWithType: ChangeFeedProcessorOptions.getMinScaleCount
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount*
  name: setMinScaleCount
  nameWithType: ChangeFeedProcessorOptions.setMinScaleCount
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount*
  name: getMaxScaleCount
  nameWithType: ChangeFeedProcessorOptions.getMaxScaleCount
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount*
  name: setMaxScaleCount
  nameWithType: ChangeFeedProcessorOptions.setMaxScaleCount
  fullName: com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount
  package: com.azure.cosmos.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
