### YamlMime:JavaType
uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
name: "ChangeFeedProcessorOptions"
nameWithType: "ChangeFeedProcessorOptions"
summary: "Specifies the options associated with <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ChangeFeedProcessorOptions"
constructors:
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.ChangeFeedProcessorOptions()"
  name: "ChangeFeedProcessorOptions()"
  nameWithType: "ChangeFeedProcessorOptions.ChangeFeedProcessorOptions()"
  summary: "Instantiates a new Change feed processor options."
  syntax: "public ChangeFeedProcessorOptions()"
  desc: "Instantiates a new Change feed processor options."
fields:
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_ACQUIRE_INTERVAL"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_ACQUIRE_INTERVAL"
  name: "DEFAULT_ACQUIRE_INTERVAL"
  nameWithType: "ChangeFeedProcessorOptions.DEFAULT_ACQUIRE_INTERVAL"
  summary: "Default acquire interval."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final Duration DEFAULT_ACQUIRE_INTERVAL"
  desc: "Default acquire interval."
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_EXPIRATION_INTERVAL"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_EXPIRATION_INTERVAL"
  name: "DEFAULT_EXPIRATION_INTERVAL"
  nameWithType: "ChangeFeedProcessorOptions.DEFAULT_EXPIRATION_INTERVAL"
  summary: "Default expiration interval."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final Duration DEFAULT_EXPIRATION_INTERVAL"
  desc: "Default expiration interval."
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_FEED_POLL_DELAY"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_FEED_POLL_DELAY"
  name: "DEFAULT_FEED_POLL_DELAY"
  nameWithType: "ChangeFeedProcessorOptions.DEFAULT_FEED_POLL_DELAY"
  summary: "Default feed poll delay."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final Duration DEFAULT_FEED_POLL_DELAY"
  desc: "Default feed poll delay."
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_RENEW_INTERVAL"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.DEFAULT_RENEW_INTERVAL"
  name: "DEFAULT_RENEW_INTERVAL"
  nameWithType: "ChangeFeedProcessorOptions.DEFAULT_RENEW_INTERVAL"
  summary: "Default renew interval."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final Duration DEFAULT_RENEW_INTERVAL"
  desc: "Default renew interval."
methods:
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getFeedPollDelay()"
  name: "getFeedPollDelay()"
  nameWithType: "ChangeFeedProcessorOptions.getFeedPollDelay()"
  summary: "Gets the delay in between polling a partition for new changes on the feed, after all current changes are drained."
  syntax: "public Duration getFeedPollDelay()"
  desc: "Gets the delay in between polling a partition for new changes on the feed, after all current changes are drained."
  returns:
    description: "the delay in between polling a partition for new changes on the feed."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseAcquireInterval()"
  name: "getLeaseAcquireInterval()"
  nameWithType: "ChangeFeedProcessorOptions.getLeaseAcquireInterval()"
  summary: "Gets the interval to kick off a task to compute if partitions are distributed evenly among known host instances."
  syntax: "public Duration getLeaseAcquireInterval()"
  desc: "Gets the interval to kick off a task to compute if partitions are distributed evenly among known host instances."
  returns:
    description: "the interval to kick off a task to compute if partitions are distributed evenly among known host\n instances."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseExpirationInterval()"
  name: "getLeaseExpirationInterval()"
  nameWithType: "ChangeFeedProcessorOptions.getLeaseExpirationInterval()"
  summary: "Gets the interval for which the lease is taken on a lease representing a partition."
  syntax: "public Duration getLeaseExpirationInterval()"
  desc: "Gets the interval for which the lease is taken on a lease representing a partition.\n\nIf the lease is not renewed within this interval, it will cause it to expire and ownership of the partition will move to another <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance."
  returns:
    description: "the interval for which the lease is taken on a lease representing a partition."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeasePrefix()"
  name: "getLeasePrefix()"
  nameWithType: "ChangeFeedProcessorOptions.getLeasePrefix()"
  summary: "Gets a prefix to be used as part of the lease ID."
  syntax: "public String getLeasePrefix()"
  desc: "Gets a prefix to be used as part of the lease ID.\n\nThis can be used to support multiple instances of <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instances pointing at the same feed while using the same auxiliary container."
  returns:
    description: "a prefix to be used as part of the lease ID."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getLeaseRenewInterval()"
  name: "getLeaseRenewInterval()"
  nameWithType: "ChangeFeedProcessorOptions.getLeaseRenewInterval()"
  summary: "Gets the renew interval for all leases for partitions currently held by <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance."
  syntax: "public Duration getLeaseRenewInterval()"
  desc: "Gets the renew interval for all leases for partitions currently held by <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance."
  returns:
    description: "the renew interval for all leases for partitions."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxItemCount()"
  name: "getMaxItemCount()"
  nameWithType: "ChangeFeedProcessorOptions.getMaxItemCount()"
  summary: "Gets the maximum number of items to be returned in the enumeration operation in the Azure Cosmos DB service."
  syntax: "public int getMaxItemCount()"
  desc: "Gets the maximum number of items to be returned in the enumeration operation in the Azure Cosmos DB service."
  returns:
    description: "the maximum number of items to be returned in the enumeration operation in the Azure Cosmos DB service."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getMaxScaleCount()"
  name: "getMaxScaleCount()"
  nameWithType: "ChangeFeedProcessorOptions.getMaxScaleCount()"
  summary: "Gets the maximum number of partitions (parallel workers) the host can run."
  syntax: "public int getMaxScaleCount()"
  desc: "Gets the maximum number of partitions (parallel workers) the host can run.\n\nThis option can be used to limit the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts. Default setting is \"0\", unlimited."
  returns:
    description: "the maximum number of partitions (parallel workers) the host can run."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getMinScaleCount()"
  name: "getMinScaleCount()"
  nameWithType: "ChangeFeedProcessorOptions.getMinScaleCount()"
  summary: "Gets the minimum partition count (parallel workers) for the current host."
  syntax: "public int getMinScaleCount()"
  desc: "Gets the minimum partition count (parallel workers) for the current host.\n\nThis option can be used to increase the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts."
  returns:
    description: "the minimum scale count for the host."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartContinuation()"
  name: "getStartContinuation()"
  nameWithType: "ChangeFeedProcessorOptions.getStartContinuation()"
  summary: "Gets the start request continuation token to start looking for changes after."
  syntax: "public String getStartContinuation()"
  desc: "Gets the start request continuation token to start looking for changes after.\n\nThis option can be used when lease store is not initialized and it is ignored if a lease item exists and has continuation token that is not null. If this is specified, both StartTime and StartFromBeginning are ignored."
  returns:
    description: "the string representing a continuation token that will be used to get item feeds starting with."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.getStartTime()"
  name: "getStartTime()"
  nameWithType: "ChangeFeedProcessorOptions.getStartTime()"
  summary: "Gets the time (exclusive) to start looking for changes after."
  syntax: "public Instant getStartTime()"
  desc: "Gets the time (exclusive) to start looking for changes after.\n\nThis option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. If this option is specified, \"start from beginning\" option is ignored."
  returns:
    description: "the time (exclusive) to start looking for changes after."
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning()"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.isStartFromBeginning()"
  name: "isStartFromBeginning()"
  nameWithType: "ChangeFeedProcessorOptions.isStartFromBeginning()"
  summary: "Gets a value indicating whether change feed in the Azure Cosmos DB service should start from beginning (true) or from current (false)."
  syntax: "public boolean isStartFromBeginning()"
  desc: "Gets a value indicating whether change feed in the Azure Cosmos DB service should start from beginning (true) or from current (false). By default it's start from current (false).\n\nThis option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. (3) Start time option is not specified."
  returns:
    description: "a value indicating whether change feed in the Azure Cosmos DB service should start from."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay(java.time.Duration)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setFeedPollDelay(Duration feedPollDelay)"
  name: "setFeedPollDelay(Duration feedPollDelay)"
  nameWithType: "ChangeFeedProcessorOptions.setFeedPollDelay(Duration feedPollDelay)"
  summary: "Sets the delay in between polling a partition for new changes on the feed, after all current changes are drained."
  parameters:
  - description: "the delay in between polling a partition for new changes on the feed, after all current\n changes are drained."
    name: "feedPollDelay"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setFeedPollDelay(Duration feedPollDelay)"
  desc: "Sets the delay in between polling a partition for new changes on the feed, after all current changes are drained."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval(java.time.Duration)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseAcquireInterval(Duration leaseAcquireInterval)"
  name: "setLeaseAcquireInterval(Duration leaseAcquireInterval)"
  nameWithType: "ChangeFeedProcessorOptions.setLeaseAcquireInterval(Duration leaseAcquireInterval)"
  summary: "Sets he interval to kick off a task to compute if partitions are distributed evenly among known host instances."
  parameters:
  - description: "he interval to kick off a task to compute if partitions are distributed evenly\n among known host instances."
    name: "leaseAcquireInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setLeaseAcquireInterval(Duration leaseAcquireInterval)"
  desc: "Sets he interval to kick off a task to compute if partitions are distributed evenly among known host instances."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval(java.time.Duration)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseExpirationInterval(Duration leaseExpirationInterval)"
  name: "setLeaseExpirationInterval(Duration leaseExpirationInterval)"
  nameWithType: "ChangeFeedProcessorOptions.setLeaseExpirationInterval(Duration leaseExpirationInterval)"
  summary: "Sets the interval for which the lease is taken on a lease representing a partition."
  parameters:
  - description: "the interval for which the lease is taken on a lease representing a partition."
    name: "leaseExpirationInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setLeaseExpirationInterval(Duration leaseExpirationInterval)"
  desc: "Sets the interval for which the lease is taken on a lease representing a partition.\n\nIf the lease is not renewed within this interval, it will cause it to expire and ownership of the partition will move to another <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix(java.lang.String)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeasePrefix(String leasePrefix)"
  name: "setLeasePrefix(String leasePrefix)"
  nameWithType: "ChangeFeedProcessorOptions.setLeasePrefix(String leasePrefix)"
  summary: "Sets a prefix to be used as part of the lease ID."
  parameters:
  - description: "a prefix to be used as part of the lease ID."
    name: "leasePrefix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setLeasePrefix(String leasePrefix)"
  desc: "Sets a prefix to be used as part of the lease ID."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval(java.time.Duration)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setLeaseRenewInterval(Duration leaseRenewInterval)"
  name: "setLeaseRenewInterval(Duration leaseRenewInterval)"
  nameWithType: "ChangeFeedProcessorOptions.setLeaseRenewInterval(Duration leaseRenewInterval)"
  summary: "Sets the renew interval for all leases for partitions currently held by <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance."
  parameters:
  - description: "the renew interval for all leases for partitions currently held by\n <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance."
    name: "leaseRenewInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setLeaseRenewInterval(Duration leaseRenewInterval)"
  desc: "Sets the renew interval for all leases for partitions currently held by <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref> instance."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount(int)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxItemCount(int maxItemCount)"
  name: "setMaxItemCount(int maxItemCount)"
  nameWithType: "ChangeFeedProcessorOptions.setMaxItemCount(int maxItemCount)"
  summary: "Sets the maximum number of items to be returned in the enumeration operation."
  parameters:
  - description: "the maximum number of items to be returned in the enumeration operation."
    name: "maxItemCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setMaxItemCount(int maxItemCount)"
  desc: "Sets the maximum number of items to be returned in the enumeration operation."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount(int)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setMaxScaleCount(int maxScaleCount)"
  name: "setMaxScaleCount(int maxScaleCount)"
  nameWithType: "ChangeFeedProcessorOptions.setMaxScaleCount(int maxScaleCount)"
  summary: "Sets the maximum number of partitions (parallel workers) the host can run."
  parameters:
  - description: "the maximum number of partitions (parallel workers) the host can run."
    name: "maxScaleCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setMaxScaleCount(int maxScaleCount)"
  desc: "Sets the maximum number of partitions (parallel workers) the host can run.\n\nThis option can be used to limit the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts. Default setting is \"0\", unlimited."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount(int)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setMinScaleCount(int minScaleCount)"
  name: "setMinScaleCount(int minScaleCount)"
  nameWithType: "ChangeFeedProcessorOptions.setMinScaleCount(int minScaleCount)"
  summary: "Sets the minimum partition count (parallel workers) for the current host."
  parameters:
  - description: "the minimum partition count for the host."
    name: "minScaleCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setMinScaleCount(int minScaleCount)"
  desc: "Sets the minimum partition count (parallel workers) for the current host.\n\nThis option can be used to increase the number of partitions (parallel workers) for the host and thus override the default equal distribution of leases between multiple hosts."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation(java.lang.String)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartContinuation(String startContinuation)"
  name: "setStartContinuation(String startContinuation)"
  nameWithType: "ChangeFeedProcessorOptions.setStartContinuation(String startContinuation)"
  summary: "Sets the start request continuation token to start looking for changes after."
  parameters:
  - description: "the start request continuation token to start looking for changes after."
    name: "startContinuation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setStartContinuation(String startContinuation)"
  desc: "Sets the start request continuation token to start looking for changes after.\n\nThis option can be used when lease store is not initialized and it is ignored if a lease item exists and has continuation token that is not null. If this is specified, both StartTime and StartFromBeginning are ignored."
  returns:
    description: "the string representing a continuation token that will be used to get item feeds starting with."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning(boolean)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartFromBeginning(boolean startFromBeginning)"
  name: "setStartFromBeginning(boolean startFromBeginning)"
  nameWithType: "ChangeFeedProcessorOptions.setStartFromBeginning(boolean startFromBeginning)"
  summary: "Sets a value indicating whether change feed in the Azure Cosmos DB service should start from beginning."
  parameters:
  - description: "Indicates to start from beginning if true"
    name: "startFromBeginning"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setStartFromBeginning(boolean startFromBeginning)"
  desc: "Sets a value indicating whether change feed in the Azure Cosmos DB service should start from beginning.\n\nThis option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. (3) Start time option is not specified."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime(java.time.Instant)"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions.setStartTime(Instant startTime)"
  name: "setStartTime(Instant startTime)"
  nameWithType: "ChangeFeedProcessorOptions.setStartTime(Instant startTime)"
  summary: "Sets the time (exclusive) to start looking for changes after (UTC time)."
  parameters:
  - description: "the time (exclusive) to start looking for changes after."
    name: "startTime"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChangeFeedProcessorOptions setStartTime(Instant startTime)"
  desc: "Sets the time (exclusive) to start looking for changes after (UTC time).\n\nThis option can be used when: (1) Lease items are not initialized; this setting will be ignored if the lease items exists and have a valid continuation token. (2) Start continuation token option is not specified. If this option is specified, \"start from beginning\" option is ignored."
  returns:
    description: "the current ChangeFeedProcessorOptions instance."
    type: "<xref href=\"com.azure.cosmos.models.ChangeFeedProcessorOptions?alt=com.azure.cosmos.models.ChangeFeedProcessorOptions&text=ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies the options associated with <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedProcessor\"></xref>."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.26.0-beta.1
