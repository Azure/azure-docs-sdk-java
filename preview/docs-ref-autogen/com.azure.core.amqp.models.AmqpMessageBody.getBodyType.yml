### YamlMime:JavaMember
uid: "com.azure.core.amqp.models.AmqpMessageBody.getBodyType*"
fullName: "com.azure.core.amqp.models.AmqpMessageBody.getBodyType"
name: "getBodyType"
nameWithType: "AmqpMessageBody.getBodyType"
members:
- uid: "com.azure.core.amqp.models.AmqpMessageBody.getBodyType()"
  fullName: "com.azure.core.amqp.models.AmqpMessageBody.getBodyType()"
  name: "getBodyType()"
  nameWithType: "AmqpMessageBody.getBodyType()"
  summary: "Gets the <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpMessageBodyType\"></xref> of the message.\n\n**How to check for <xref uid=\"com.azure.core.amqp.models.AmqpMessageBodyType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpMessageBodyType\"></xref>**\n\n```java\nObject amqpValue;\n AmqpMessageBodyType bodyType = amqpAnnotatedMessage.getBody().getBodyType();\n \n switch (bodyType) {\n     case DATA:\n         byte[] payload = amqpAnnotatedMessage.getBody().getFirstData();\n         System.out.println(new String(payload));\n         break;\n     case SEQUENCE:\n         List<Object> sequenceData = amqpAnnotatedMessage.getBody().getSequence();\n         sequenceData.forEach(System.out::println);\n         break;\n     case VALUE:\n         amqpValue = amqpAnnotatedMessage.getBody().getValue();\n         System.out.println(amqpValue);\n         break;\n     default:\n         throw new RuntimeException(String.format(Locale.US, \"Body type [%s] is not valid.\", bodyType));\n }\n```"
  syntax: "public AmqpMessageBodyType getBodyType()"
  returns:
    description: "AmqpBodyType type of the message."
    type: "<xref href=\"com.azure.core.amqp.models.AmqpMessageBodyType?alt=com.azure.core.amqp.models.AmqpMessageBodyType&text=AmqpMessageBodyType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.amqp.models"
artifact: com.azure:azure-core-amqp:2.2.0-beta.1
