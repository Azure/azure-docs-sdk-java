### YamlMime:JavaMember
uid: "com.azure.messaging.eventgrid.CloudEvent.getDataAsync*"
fullName: "com.azure.messaging.eventgrid.CloudEvent.<T>getDataAsync"
name: "<T>getDataAsync"
nameWithType: "CloudEvent.<T>getDataAsync"
members:
- uid: "com.azure.messaging.eventgrid.CloudEvent.<T>getDataAsync(java.lang.Class<T>)"
  fullName: "com.azure.messaging.eventgrid.CloudEvent.<T>getDataAsync(Class<T> clazz)"
  name: "<T>getDataAsync(Class<T> clazz)"
  nameWithType: "CloudEvent.<T>getDataAsync(Class<T> clazz)"
  summary: "Get the deserialized data property from the parsed event. Note that this is only intended to work on events with `application/json` data and has unspecified results on other media types, such as binary data."
  parameters:
  - description: "the class of the type to deserialize the data into, using a default deserializer."
    name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<T> <T>getDataAsync(Class<T> clazz)"
  returns:
    description: "the data deserialized into the given type using a default deserializer, wrapped asynchronously in a\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventgrid.CloudEvent.<T>getDataAsync(java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)"
  fullName: "com.azure.messaging.eventgrid.CloudEvent.<T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)"
  name: "<T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)"
  nameWithType: "CloudEvent.<T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)"
  summary: "Deserialize and get the data property from the parsed event. Note that this is only intended to work on events with `application/json` data and has unspecified results on other media types."
  parameters:
  - description: "the class of the type to deserialize the data into."
    name: "clazz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the deserializer to use."
    name: "dataDeserializer"
    type: "<xref href=\"com.azure.core.util.serializer.JsonSerializer?alt=com.azure.core.util.serializer.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<T> <T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)"
  returns:
    description: "the data deserialized into the given type using the given deserializer, wrapped asynchronously in a\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.messaging.eventgrid"
artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
