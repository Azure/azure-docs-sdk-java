### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint"
fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint"
name: "TlsEndpoint"
nameWithType: "TlsEndpoint"
summary: "TLS endpoint describes an endpoint that the pipeline can connect to over TLS transport (data is encrypted in transit)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EndpointBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.credentials()"
- "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.tunnel()"
- "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.url()"
- "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.validate()"
- "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.withCredentials(com.azure.resourcemanager.videoanalyzer.models.CredentialsBase)"
- "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.withTunnel(com.azure.resourcemanager.videoanalyzer.models.TunnelBase)"
- "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.withUrl(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TlsEndpoint extends EndpointBase"
constructors:
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.TlsEndpoint()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.TlsEndpoint()"
  name: "TlsEndpoint()"
  nameWithType: "TlsEndpoint.TlsEndpoint()"
  syntax: "public TlsEndpoint()"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.trustedCertificates()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.trustedCertificates()"
  name: "trustedCertificates()"
  nameWithType: "TlsEndpoint.trustedCertificates()"
  summary: "Get the trusted<wbr>Certificates property: List of trusted certificate authorities when authenticating a TLS connection."
  syntax: "public CertificateSource trustedCertificates()"
  desc: "Get the trustedCertificates property: List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used."
  returns:
    description: "the trustedCertificates value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.CertificateSource?alt=com.azure.resourcemanager.videoanalyzer.models.CertificateSource&text=CertificateSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.validate()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.validate()"
  name: "validate()"
  nameWithType: "TlsEndpoint.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.validationOptions()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.validationOptions()"
  name: "validationOptions()"
  nameWithType: "TlsEndpoint.validationOptions()"
  summary: "Get the validation<wbr>Options property: Validation options to use when authenticating a TLS connection."
  syntax: "public TlsValidationOptions validationOptions()"
  desc: "Get the validationOptions property: Validation options to use when authenticating a TLS connection. By default, strict validation is used."
  returns:
    description: "the validationOptions value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsValidationOptions?alt=com.azure.resourcemanager.videoanalyzer.models.TlsValidationOptions&text=TlsValidationOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withCredentials(com.azure.resourcemanager.videoanalyzer.models.CredentialsBase)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withCredentials(CredentialsBase credentials)"
  name: "withCredentials(CredentialsBase credentials)"
  nameWithType: "TlsEndpoint.withCredentials(CredentialsBase credentials)"
  summary: "Set the credentials property: Credentials to be presented to the endpoint."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.withCredentials(com.azure.resourcemanager.videoanalyzer.models.CredentialsBase)"
  parameters:
  - name: "credentials"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.CredentialsBase?alt=com.azure.resourcemanager.videoanalyzer.models.CredentialsBase&text=CredentialsBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint withCredentials(CredentialsBase credentials)"
  desc: "Set the credentials property: Credentials to be presented to the endpoint."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint?alt=com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTrustedCertificates(com.azure.resourcemanager.videoanalyzer.models.CertificateSource)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTrustedCertificates(CertificateSource trustedCertificates)"
  name: "withTrustedCertificates(CertificateSource trustedCertificates)"
  nameWithType: "TlsEndpoint.withTrustedCertificates(CertificateSource trustedCertificates)"
  summary: "Set the trusted<wbr>Certificates property: List of trusted certificate authorities when authenticating a TLS connection."
  parameters:
  - description: "the trustedCertificates value to set."
    name: "trustedCertificates"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.CertificateSource?alt=com.azure.resourcemanager.videoanalyzer.models.CertificateSource&text=CertificateSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint withTrustedCertificates(CertificateSource trustedCertificates)"
  desc: "Set the trustedCertificates property: List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used."
  returns:
    description: "the TlsEndpoint object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint?alt=com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTunnel(com.azure.resourcemanager.videoanalyzer.models.TunnelBase)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withTunnel(TunnelBase tunnel)"
  name: "withTunnel(TunnelBase tunnel)"
  nameWithType: "TlsEndpoint.withTunnel(TunnelBase tunnel)"
  summary: "Set the tunnel property: Describes the tunnel through which Video Analyzer can connect to the endpoint URL."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.withTunnel(com.azure.resourcemanager.videoanalyzer.models.TunnelBase)"
  parameters:
  - name: "tunnel"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TunnelBase?alt=com.azure.resourcemanager.videoanalyzer.models.TunnelBase&text=TunnelBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint withTunnel(TunnelBase tunnel)"
  desc: "Set the tunnel property: Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint?alt=com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withUrl(String url)"
  name: "withUrl(String url)"
  nameWithType: "TlsEndpoint.withUrl(String url)"
  summary: "Set the url property: The endpoint URL for Video Analyzer to connect to."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.EndpointBase.withUrl(java.lang.String)"
  parameters:
  - name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint withUrl(String url)"
  desc: "Set the url property: The endpoint URL for Video Analyzer to connect to."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint?alt=com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withValidationOptions(com.azure.resourcemanager.videoanalyzer.models.TlsValidationOptions)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint.withValidationOptions(TlsValidationOptions validationOptions)"
  name: "withValidationOptions(TlsValidationOptions validationOptions)"
  nameWithType: "TlsEndpoint.withValidationOptions(TlsValidationOptions validationOptions)"
  summary: "Set the validation<wbr>Options property: Validation options to use when authenticating a TLS connection."
  parameters:
  - description: "the validationOptions value to set."
    name: "validationOptions"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsValidationOptions?alt=com.azure.resourcemanager.videoanalyzer.models.TlsValidationOptions&text=TlsValidationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TlsEndpoint withValidationOptions(TlsValidationOptions validationOptions)"
  desc: "Set the validationOptions property: Validation options to use when authenticating a TLS connection. By default, strict validation is used."
  returns:
    description: "the TlsEndpoint object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint?alt=com.azure.resourcemanager.videoanalyzer.models.TlsEndpoint&text=TlsEndpoint\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "TLS endpoint describes an endpoint that the pipeline can connect to over TLS transport (data is encrypted in transit)."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
