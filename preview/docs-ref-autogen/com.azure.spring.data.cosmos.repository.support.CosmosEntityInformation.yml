### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  id: CosmosEntityInformation
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support
  children:
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.CosmosEntityInformation(java.lang.Class<T>)
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getContainerName()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getId(T)
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdField()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdFieldName()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdType()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIndexingPolicy()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getInstance(java.lang.Class<?>)
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyFieldValue(T)
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyPath()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getRequestUnit()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getTimeToLive()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldName()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldValue(java.lang.Object)
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isAutoCreateContainer()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isVersioned()
  - com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.shouldGenerateId()
  langs:
  - java
  name: CosmosEntityInformation<T,ID>
  nameWithType: CosmosEntityInformation<T,ID>
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>
  type: Class
  package: com.azure.spring.data.cosmos.repository.support
  summary: Class to describe cosmosDb entity
  syntax:
    content: public class CosmosEntityInformation<T,ID> extends AbstractEntityInformation<T,ID>
    typeParameters:
    - id: T
    - id: ID
  inheritance:
  - java.lang.Object
  - org.springframework.data.repository.core.support.AbstractEntityInformation
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.repository.core.support.AbstractEntityInformation.getJavaType()
  - org.springframework.data.repository.core.support.AbstractEntityInformation.isNew(T)
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.CosmosEntityInformation(java.lang.Class<T>)
  id: CosmosEntityInformation(java.lang.Class<T>)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: CosmosEntityInformation(Class<T> domainType)
  nameWithType: CosmosEntityInformation<T,ID>.CosmosEntityInformation(Class<T> domainType)
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.CosmosEntityInformation(Class<T> domainType)
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.CosmosEntityInformation*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.support
  summary: Initialization
  syntax:
    content: public CosmosEntityInformation(Class<T> domainType)
    parameters:
    - id: domainType
      type: java.lang.Class<T>
      description: to specify id field
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getContainerName()
  id: getContainerName()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getContainerName()
  nameWithType: CosmosEntityInformation<T,ID>.getContainerName()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getContainerName()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getContainerName*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get container name
  syntax:
    content: public String getContainerName()
    return:
      type: java.lang.String
      description: container name
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getId(T)
  id: getId(T)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getId(T entity)
  nameWithType: CosmosEntityInformation<T,ID>.getId(T entity)
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getId(T entity)
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getId*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get the field represented by the supplied id field on the specified entity.
  syntax:
    content: public ID getId(T entity)
    parameters:
    - id: entity
      type: T
      description: the target object from which to get the field
    return:
      type: ID
      description: the id's current value
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdField()
  id: getIdField()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getIdField()
  nameWithType: CosmosEntityInformation<T,ID>.getIdField()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdField()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdField*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get id field
  syntax:
    content: public Field getIdField()
    return:
      type: java.lang.reflect.Field
      description: id
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdFieldName()
  id: getIdFieldName()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getIdFieldName()
  nameWithType: CosmosEntityInformation<T,ID>.getIdFieldName()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdFieldName()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdFieldName*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get id field name
  syntax:
    content: public String getIdFieldName()
    return:
      type: java.lang.String
      description: string
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdType()
  id: getIdType()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getIdType()
  nameWithType: CosmosEntityInformation<T,ID>.getIdType()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdType()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdType*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get id type
  syntax:
    content: public Class<ID> getIdType()
    return:
      type: java.lang.Class<ID>
      description: class of id type
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIndexingPolicy()
  id: getIndexingPolicy()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getIndexingPolicy()
  nameWithType: CosmosEntityInformation<T,ID>.getIndexingPolicy()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIndexingPolicy()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIndexingPolicy*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get indexing policy
  syntax:
    content: public IndexingPolicy getIndexingPolicy()
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: IndexingPolicy
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getInstance(java.lang.Class<?>)
  id: getInstance(java.lang.Class<?>)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getInstance(Class<?> domainClass)
  nameWithType: CosmosEntityInformation<T,ID>.getInstance(Class<?> domainClass)
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getInstance(Class<?> domainClass)
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getInstance*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Static Factory
  syntax:
    content: public static CosmosEntityInformation<?,?> getInstance(Class<?> domainClass)
    parameters:
    - id: domainClass
      type: java.lang.Class<?>
      description: to specify id field
    return:
      type: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<?,?>
      description: new CosmosEntityInformation
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyFieldValue(T)
  id: getPartitionKeyFieldValue(T)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getPartitionKeyFieldValue(T entity)
  nameWithType: CosmosEntityInformation<T,ID>.getPartitionKeyFieldValue(T entity)
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getPartitionKeyFieldValue(T entity)
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyFieldValue*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get the field value represented by the supplied partitionKeyField object on the specified entity object.
  syntax:
    content: public Object getPartitionKeyFieldValue(T entity)
    parameters:
    - id: entity
      type: T
      description: the target object from which to get the field
    return:
      type: java.lang.Object
      description: partition key field
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyPath()
  id: getPartitionKeyPath()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getPartitionKeyPath()
  nameWithType: CosmosEntityInformation<T,ID>.getPartitionKeyPath()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getPartitionKeyPath()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyPath*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get the computed partition key path for container
  syntax:
    content: public String getPartitionKeyPath()
    return:
      type: java.lang.String
      description: partition key path
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getRequestUnit()
  id: getRequestUnit()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getRequestUnit()
  nameWithType: CosmosEntityInformation<T,ID>.getRequestUnit()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getRequestUnit()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getRequestUnit*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get request unit value
  syntax:
    content: public Integer getRequestUnit()
    return:
      type: java.lang.Integer
      description: request unit
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getTimeToLive()
  id: getTimeToLive()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getTimeToLive()
  nameWithType: CosmosEntityInformation<T,ID>.getTimeToLive()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getTimeToLive()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getTimeToLive*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get timeToLive value
  syntax:
    content: public Integer getTimeToLive()
    return:
      type: java.lang.Integer
      description: timeToLive
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldName()
  id: getVersionFieldName()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getVersionFieldName()
  nameWithType: CosmosEntityInformation<T,ID>.getVersionFieldName()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getVersionFieldName()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldName*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get name of field annotated with @Version if any
  syntax:
    content: public String getVersionFieldName()
    return:
      type: java.lang.String
      description: String
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldValue(java.lang.Object)
  id: getVersionFieldValue(java.lang.Object)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: getVersionFieldValue(Object entity)
  nameWithType: CosmosEntityInformation<T,ID>.getVersionFieldValue(Object entity)
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getVersionFieldValue(Object entity)
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldValue*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Get the value of the field marked as the version field
  syntax:
    content: public String getVersionFieldValue(Object entity)
    parameters:
    - id: entity
      type: java.lang.Object
      description: the object to get the value from
    return:
      type: java.lang.String
      description: the value of the version field
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isAutoCreateContainer()
  id: isAutoCreateContainer()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: isAutoCreateContainer()
  nameWithType: CosmosEntityInformation<T,ID>.isAutoCreateContainer()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isAutoCreateContainer()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isAutoCreateContainer*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Check if auto creating container is allowed
  syntax:
    content: public boolean isAutoCreateContainer()
    return:
      type: boolean
      description: boolean
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isVersioned()
  id: isVersioned()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: isVersioned()
  nameWithType: CosmosEntityInformation<T,ID>.isVersioned()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isVersioned()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isVersioned*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Check if is versioned
  syntax:
    content: public boolean isVersioned()
    return:
      type: boolean
      description: boolean
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.shouldGenerateId()
  id: shouldGenerateId()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  langs:
  - java
  name: shouldGenerateId()
  nameWithType: CosmosEntityInformation<T,ID>.shouldGenerateId()
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.shouldGenerateId()
  overload: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.shouldGenerateId*
  type: Method
  package: com.azure.spring.data.cosmos.repository.support
  summary: Should generate Id field value
  syntax:
    content: public boolean shouldGenerateId()
    return:
      type: boolean
      description: boolean
references:
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.CosmosEntityInformation*
  name: CosmosEntityInformation
  nameWithType: CosmosEntityInformation<T,ID>.CosmosEntityInformation
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.CosmosEntityInformation
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<?,?>
  spec.java:
  - uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
    name: CosmosEntityInformation
    fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getInstance*
  name: getInstance
  nameWithType: CosmosEntityInformation<T,ID>.getInstance
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getInstance
  package: com.azure.spring.data.cosmos.repository.support
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: ID
  spec.java:
  - uid: ID
    name: ID
    fullName: ID
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getId*
  name: getId
  nameWithType: CosmosEntityInformation<T,ID>.getId
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getId
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.reflect.Field
  spec.java:
  - uid: java.lang.reflect.Field
    name: Field
    fullName: java.lang.reflect.Field
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdField*
  name: getIdField
  nameWithType: CosmosEntityInformation<T,ID>.getIdField
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdField
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdFieldName*
  name: getIdFieldName
  nameWithType: CosmosEntityInformation<T,ID>.getIdFieldName
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdFieldName
  package: com.azure.spring.data.cosmos.repository.support
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.shouldGenerateId*
  name: shouldGenerateId
  nameWithType: CosmosEntityInformation<T,ID>.shouldGenerateId
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.shouldGenerateId
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.Class<ID>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: ID
    name: ID
    fullName: ID
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIdType*
  name: getIdType
  nameWithType: CosmosEntityInformation<T,ID>.getIdType
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIdType
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getContainerName*
  name: getContainerName
  nameWithType: CosmosEntityInformation<T,ID>.getContainerName
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getContainerName
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getRequestUnit*
  name: getRequestUnit
  nameWithType: CosmosEntityInformation<T,ID>.getRequestUnit
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getRequestUnit
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getTimeToLive*
  name: getTimeToLive
  nameWithType: CosmosEntityInformation<T,ID>.getTimeToLive
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getTimeToLive
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.cosmos.models.IndexingPolicy
  spec.java:
  - uid: com.azure.cosmos.models.IndexingPolicy
    name: IndexingPolicy
    fullName: com.azure.cosmos.models.IndexingPolicy
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getIndexingPolicy*
  name: getIndexingPolicy
  nameWithType: CosmosEntityInformation<T,ID>.getIndexingPolicy
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getIndexingPolicy
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isVersioned*
  name: isVersioned
  nameWithType: CosmosEntityInformation<T,ID>.isVersioned
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isVersioned
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldName*
  name: getVersionFieldName
  nameWithType: CosmosEntityInformation<T,ID>.getVersionFieldName
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getVersionFieldName
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyPath*
  name: getPartitionKeyPath
  nameWithType: CosmosEntityInformation<T,ID>.getPartitionKeyPath
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getPartitionKeyPath
  package: com.azure.spring.data.cosmos.repository.support
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getVersionFieldValue*
  name: getVersionFieldValue
  nameWithType: CosmosEntityInformation<T,ID>.getVersionFieldValue
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getVersionFieldValue
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.getPartitionKeyFieldValue*
  name: getPartitionKeyFieldValue
  nameWithType: CosmosEntityInformation<T,ID>.getPartitionKeyFieldValue
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.getPartitionKeyFieldValue
  package: com.azure.spring.data.cosmos.repository.support
- uid: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation.isAutoCreateContainer*
  name: isAutoCreateContainer
  nameWithType: CosmosEntityInformation<T,ID>.isAutoCreateContainer
  fullName: com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<T,ID>.isAutoCreateContainer
  package: com.azure.spring.data.cosmos.repository.support
- uid: org.springframework.data.repository.core.support.AbstractEntityInformation<T,ID>
  name: AbstractEntityInformation<T,ID>
  nameWithType: AbstractEntityInformation<T,ID>
  fullName: org.springframework.data.repository.core.support.AbstractEntityInformation<T,ID>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.data.repository.core.support.AbstractEntityInformation.getJavaType()
  name: AbstractEntityInformation.getJavaType()
  nameWithType: AbstractEntityInformation.getJavaType()
  fullName: org.springframework.data.repository.core.support.AbstractEntityInformation.getJavaType()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: org.springframework.data.repository.core.support.AbstractEntityInformation.isNew(T)
  name: AbstractEntityInformation.isNew(T)
  nameWithType: AbstractEntityInformation.isNew(T)
  fullName: org.springframework.data.repository.core.support.AbstractEntityInformation.isNew(T)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: T,ID
  name: T,ID
  nameWithType: T,ID
  fullName: T,ID
- uid: org.springframework.data.repository.core.support.AbstractEntityInformation
  name: AbstractEntityInformation
  nameWithType: AbstractEntityInformation
  fullName: org.springframework.data.repository.core.support.AbstractEntityInformation
