### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonFactory.canUseSchema*"
fullName: "com.fasterxml.jackson.core.JsonFactory.canUseSchema"
name: "canUseSchema"
nameWithType: "JsonFactory.canUseSchema"
members:
- uid: "com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
  fullName: "com.fasterxml.jackson.core.JsonFactory.canUseSchema(FormatSchema schema)"
  name: "canUseSchema(FormatSchema schema)"
  nameWithType: "JsonFactory.canUseSchema(FormatSchema schema)"
  summary: "Method that can be used to quickly check whether given schema is something that parsers and/or generators constructed by this factory could use. Note that this means possible use, at the level of data format (i.e. schema is for same data format as parsers and generators this factory constructs); individual schema instances may have further usage restrictions."
  overridden: "com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
  parameters:
  - name: "schema"
    type: "<xref href=\"com.fasterxml.jackson.core.FormatSchema?alt=com.fasterxml.jackson.core.FormatSchema&text=FormatSchema\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean canUseSchema(FormatSchema schema)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
