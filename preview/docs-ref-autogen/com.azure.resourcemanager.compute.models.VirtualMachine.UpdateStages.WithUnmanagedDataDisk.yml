### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  id: WithUnmanagedDataDisk
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models
  children:
  - com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(java.lang.String)
  - com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(java.lang.String)
  - com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(java.lang.Integer)
  - com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int)
  - com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(java.lang.String)
  langs:
  - java
  name: VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  type: Interface
  package: com.azure.resourcemanager.compute.models
  summary: The stage of a virtual machine definition allowing to specify unmanaged data disk configuration.
  syntax:
    content: public static interface VirtualMachine.UpdateStages.WithUnmanagedDataDisk
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(java.lang.String)
  id: defineUnmanagedDataDisk(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  langs:
  - java
  name: defineUnmanagedDataDisk(String name)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String name)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String name)
  overload: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Begins the definition of a blank unmanaged data disk to be attached to the virtual machine along with its configuration.
  syntax:
    content: public abstract VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank<VirtualMachine.Update> defineUnmanagedDataDisk(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name for the data disk
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank<com.azure.resourcemanager.compute.models.VirtualMachine.Update>
      description: the first stage of the data disk definition
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(java.lang.String)
  id: updateUnmanagedDataDisk(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  langs:
  - java
  name: updateUnmanagedDataDisk(String name)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(String name)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk(String name)
  overload: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Begins the description of an update of an existing unmanaged data disk of this virtual machine.
  syntax:
    content: public abstract VirtualMachineUnmanagedDataDisk.Update updateUnmanagedDataDisk(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name of an existing disk
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.Update
      description: the first stage of the data disk update
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(java.lang.String,java.lang.String,java.lang.String)
  id: withExistingUnmanagedDataDisk(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  langs:
  - java
  name: withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  overload: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Specifies an existing VHD that needs to be attached to the virtual machine as data disk.
  syntax:
    content: public abstract VirtualMachine.Update withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
    parameters:
    - id: storageAccountName
      type: java.lang.String
      description: the storage account name
    - id: containerName
      type: java.lang.String
      description: the name of the container holding the VHD file
    - id: vhdName
      type: java.lang.String
      description: the name for the VHD file
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachine.Update
      description: the stage representing creatable VM definition
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(java.lang.Integer)
  id: withNewUnmanagedDataDisk(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  langs:
  - java
  name: withNewUnmanagedDataDisk(Integer sizeInGB)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer sizeInGB)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer sizeInGB)
  overload: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Specifies that a new blank unmanaged data disk needs to be attached to virtual machine.
  syntax:
    content: public abstract VirtualMachine.Update withNewUnmanagedDataDisk(Integer sizeInGB)
    parameters:
    - id: sizeInGB
      type: java.lang.Integer
      description: the disk size in GB
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachine.Update
      description: the stage representing creatable VM definition
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int)
  id: withoutUnmanagedDataDisk(int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  langs:
  - java
  name: withoutUnmanagedDataDisk(int lun)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int lun)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(int lun)
  overload: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Detaches a unmanaged data disk from the virtual machine.
  syntax:
    content: public abstract VirtualMachine.Update withoutUnmanagedDataDisk(int lun)
    parameters:
    - id: lun
      type: int
      description: the logical unit number of the data disk to remove
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachine.Update
      description: the next stage of the update
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(java.lang.String)
  id: withoutUnmanagedDataDisk(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk
  langs:
  - java
  name: withoutUnmanagedDataDisk(String name)
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(String name)
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk(String name)
  overload: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Detaches an unmanaged data disk from the virtual machine.
  syntax:
    content: public abstract VirtualMachine.Update withoutUnmanagedDataDisk(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name of an existing data disk to remove
    return:
      type: com.azure.resourcemanager.compute.models.VirtualMachine.Update
      description: the next stage of the update
references:
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.Update
  name: VirtualMachine.Update
  nameWithType: VirtualMachine.Update
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.Update
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk*
  name: withNewUnmanagedDataDisk
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk*
  name: withExistingUnmanagedDataDisk
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank<com.azure.resourcemanager.compute.models.VirtualMachine.Update>
  spec.java:
  - uid: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank
    name: Blank
    fullName: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.models.VirtualMachine.Update
    name: Update
    fullName: com.azure.resourcemanager.compute.models.VirtualMachine.Update
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk*
  name: defineUnmanagedDataDisk
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.Update
  name: VirtualMachineUnmanagedDataDisk.Update
  nameWithType: VirtualMachineUnmanagedDataDisk.Update
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.Update
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk*
  name: updateUnmanagedDataDisk
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.updateUnmanagedDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk*
  name: withoutUnmanagedDataDisk
  nameWithType: VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualMachine.UpdateStages.WithUnmanagedDataDisk.withoutUnmanagedDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank
  name: VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank
  nameWithType: VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank
  fullName: com.azure.resourcemanager.compute.models.VirtualMachineUnmanagedDataDisk.UpdateDefinitionStages.Blank
