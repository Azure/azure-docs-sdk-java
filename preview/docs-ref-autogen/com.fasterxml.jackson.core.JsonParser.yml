### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.JsonParser"
fullName: "com.fasterxml.jackson.core.JsonParser"
name: "JsonParser"
nameWithType: "JsonParser"
summary: "Base class that defines public API for reading JSON content. Instances are created using factory methods of a <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonFactory\"></xref> instance."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class JsonParser implements Closeable, Versioned"
constructors:
- "com.fasterxml.jackson.core.JsonParser.JsonParser()"
- "com.fasterxml.jackson.core.JsonParser.JsonParser(int)"
fields:
- "com.fasterxml.jackson.core.JsonParser._features"
- "com.fasterxml.jackson.core.JsonParser._requestPayload"
methods:
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()"
- "com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)"
- "com.fasterxml.jackson.core.JsonParser._codec()"
- "com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()"
- "com.fasterxml.jackson.core.JsonParser.canParseAsync()"
- "com.fasterxml.jackson.core.JsonParser.canReadObjectId()"
- "com.fasterxml.jackson.core.JsonParser.canReadTypeId()"
- "com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.JsonParser.clearCurrentToken()"
- "com.fasterxml.jackson.core.JsonParser.close()"
- "com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonParser.currentName()"
- "com.fasterxml.jackson.core.JsonParser.currentToken()"
- "com.fasterxml.jackson.core.JsonParser.currentTokenId()"
- "com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonParser.finishToken()"
- "com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()"
- "com.fasterxml.jackson.core.JsonParser.getBinaryValue()"
- "com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.core.JsonParser.getBooleanValue()"
- "com.fasterxml.jackson.core.JsonParser.getByteValue()"
- "com.fasterxml.jackson.core.JsonParser.getCodec()"
- "com.fasterxml.jackson.core.JsonParser.getCurrentLocation()"
- "com.fasterxml.jackson.core.JsonParser.getCurrentName()"
- "com.fasterxml.jackson.core.JsonParser.getCurrentToken()"
- "com.fasterxml.jackson.core.JsonParser.getCurrentTokenId()"
- "com.fasterxml.jackson.core.JsonParser.getCurrentValue()"
- "com.fasterxml.jackson.core.JsonParser.getDecimalValue()"
- "com.fasterxml.jackson.core.JsonParser.getDoubleValue()"
- "com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()"
- "com.fasterxml.jackson.core.JsonParser.getFeatureMask()"
- "com.fasterxml.jackson.core.JsonParser.getFloatValue()"
- "com.fasterxml.jackson.core.JsonParser.getFormatFeatures()"
- "com.fasterxml.jackson.core.JsonParser.getInputSource()"
- "com.fasterxml.jackson.core.JsonParser.getIntValue()"
- "com.fasterxml.jackson.core.JsonParser.getLastClearedToken()"
- "com.fasterxml.jackson.core.JsonParser.getLongValue()"
- "com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()"
- "com.fasterxml.jackson.core.JsonParser.getNumberType()"
- "com.fasterxml.jackson.core.JsonParser.getNumberValue()"
- "com.fasterxml.jackson.core.JsonParser.getObjectId()"
- "com.fasterxml.jackson.core.JsonParser.getParsingContext()"
- "com.fasterxml.jackson.core.JsonParser.getSchema()"
- "com.fasterxml.jackson.core.JsonParser.getShortValue()"
- "com.fasterxml.jackson.core.JsonParser.getText()"
- "com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonParser.getTextCharacters()"
- "com.fasterxml.jackson.core.JsonParser.getTextLength()"
- "com.fasterxml.jackson.core.JsonParser.getTextOffset()"
- "com.fasterxml.jackson.core.JsonParser.getTokenLocation()"
- "com.fasterxml.jackson.core.JsonParser.getTypeId()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)"
- "com.fasterxml.jackson.core.JsonParser.getValueAsDouble()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)"
- "com.fasterxml.jackson.core.JsonParser.getValueAsInt()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)"
- "com.fasterxml.jackson.core.JsonParser.getValueAsLong()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)"
- "com.fasterxml.jackson.core.JsonParser.getValueAsString()"
- "com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser.hasCurrentToken()"
- "com.fasterxml.jackson.core.JsonParser.hasTextCharacters()"
- "com.fasterxml.jackson.core.JsonParser.hasToken(com.fasterxml.jackson.core.JsonToken)"
- "com.fasterxml.jackson.core.JsonParser.hasTokenId(int)"
- "com.fasterxml.jackson.core.JsonParser.isClosed()"
- "com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)"
- "com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()"
- "com.fasterxml.jackson.core.JsonParser.isExpectedStartObjectToken()"
- "com.fasterxml.jackson.core.JsonParser.isNaN()"
- "com.fasterxml.jackson.core.JsonParser.nextBooleanValue()"
- "com.fasterxml.jackson.core.JsonParser.nextFieldName()"
- "com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)"
- "com.fasterxml.jackson.core.JsonParser.nextIntValue(int)"
- "com.fasterxml.jackson.core.JsonParser.nextLongValue(long)"
- "com.fasterxml.jackson.core.JsonParser.nextTextValue()"
- "com.fasterxml.jackson.core.JsonParser.nextToken()"
- "com.fasterxml.jackson.core.JsonParser.nextValue()"
- "com.fasterxml.jackson.core.JsonParser.overrideCurrentName(java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)"
- "com.fasterxml.jackson.core.JsonParser.overrideStdFeatures(int,int)"
- "com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()"
- "com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.core.JsonParser.setCurrentValue(java.lang.Object)"
- "com.fasterxml.jackson.core.JsonParser.setFeatureMask(int)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)"
- "com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)"
- "com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.JsonParser.skipChildren()"
- "com.fasterxml.jackson.core.JsonParser.version()"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.core.Versioned?alt=com.fasterxml.jackson.core.Versioned&text=Versioned\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
