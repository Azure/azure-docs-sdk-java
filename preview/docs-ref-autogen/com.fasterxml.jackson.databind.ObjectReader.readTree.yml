### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectReader.readTree*"
fullName: "com.fasterxml.jackson.databind.ObjectReader.<T>readTree"
name: "<T>readTree"
nameWithType: "ObjectReader.<T>readTree"
members:
- uid: "com.fasterxml.jackson.databind.ObjectReader.<T>readTree(com.fasterxml.jackson.core.JsonParser)"
  fullName: "com.fasterxml.jackson.databind.ObjectReader.<T>readTree(JsonParser p)"
  name: "<T>readTree(JsonParser p)"
  nameWithType: "ObjectReader.<T>readTree(JsonParser p)"
  summary: "Convenience method that binds content read using given parser, using configuration of this reader, except that content is bound as JSON tree instead of configured root value type. Returns <xref uid=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonNode\"></xref> that represents the root of the resulting tree, if there was content to read, or `null` if no more content is accessible via passed <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref>.\n\nNOTE! Behavior with end-of-input (no more content) differs between this `readTree` method, and all other methods that take input source: latter will return \"missing node\", NOT `null`\n\nNote: if an object was specified with <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#withValueToUpdate\"></xref>, it will be ignored.\n\nNOTE: this method never tries to auto-detect format, since actual (data-format specific) parser is given."
  overridden: "com.fasterxml.jackson.core.ObjectCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)"
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public T <T>readTree(JsonParser p)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectReader.readTree(byte[])"
  fullName: "com.fasterxml.jackson.databind.ObjectReader.readTree(byte[] json)"
  name: "readTree(byte[] json)"
  nameWithType: "ObjectReader.readTree(byte[] json)"
  summary: "Same as <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#readTree(InputStream)\"></xref> except content read from passed-in byte array."
  parameters:
  - name: "json"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public JsonNode readTree(byte[] json)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectReader.readTree(byte[],int,int)"
  fullName: "com.fasterxml.jackson.databind.ObjectReader.readTree(byte[] json, int offset, int len)"
  name: "readTree(byte[] json, int offset, int len)"
  nameWithType: "ObjectReader.readTree(byte[] json, int offset, int len)"
  summary: "Same as <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#readTree(InputStream)\"></xref> except content read from passed-in byte array."
  parameters:
  - name: "json"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonNode readTree(byte[] json, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.DataInput)"
  fullName: "com.fasterxml.jackson.databind.ObjectReader.readTree(DataInput src)"
  name: "readTree(DataInput src)"
  nameWithType: "ObjectReader.readTree(DataInput src)"
  summary: "Same as <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#readTree(InputStream)\"></xref> except content read using passed-in <xref uid=\"java.io.DataInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataInput\"></xref>."
  parameters:
  - name: "src"
    type: "<xref href=\"java.io.DataInput?alt=java.io.DataInput&text=DataInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonNode readTree(DataInput src)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)"
  fullName: "com.fasterxml.jackson.databind.ObjectReader.readTree(InputStream src)"
  name: "readTree(InputStream src)"
  nameWithType: "ObjectReader.readTree(InputStream src)"
  summary: "Method that reads content from given input source, using configuration of this reader, and binds it as JSON Tree. Returns <xref uid=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonNode\"></xref> that represents the root of the resulting tree, if there was content to read, or \"missing node\" (instance of <xref uid=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonNode\"></xref> for which <xref uid=\"com.fasterxml.jackson.databind.JsonNode.isMissingNode()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonNode#isMissingNode()\"></xref> returns true, and behaves otherwise similar to \"null node\") if no more content is accessible through passed-in input source.\n\nNOTE! Behavior with end-of-input (no more content) differs between this `readTree` method, and <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readTree(com.fasterxml.jackson.core.JsonParser)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#readTree(JsonParser)\"></xref> \\-- latter returns `null` for \"no content\" case.\n\nNote that if an object was specified with a call to <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#withValueToUpdate(Object)\"></xref> it will just be ignored; result is always a newly constructed <xref uid=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonNode\"></xref> instance."
  parameters:
  - name: "src"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonNode readTree(InputStream src)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.Reader)"
  fullName: "com.fasterxml.jackson.databind.ObjectReader.readTree(Reader src)"
  name: "readTree(Reader src)"
  nameWithType: "ObjectReader.readTree(Reader src)"
  summary: "Same as <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#readTree(InputStream)\"></xref> except content accessed through passed-in <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>"
  parameters:
  - name: "src"
    type: "<xref href=\"java.io.Reader?alt=java.io.Reader&text=Reader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonNode readTree(Reader src)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectReader.readTree(java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.ObjectReader.readTree(String json)"
  name: "readTree(String json)"
  nameWithType: "ObjectReader.readTree(String json)"
  summary: "Same as <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.readTree(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#readTree(InputStream)\"></xref> except content read from passed-in <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>"
  parameters:
  - name: "json"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonNode readTree(String json)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonProcessingException?alt=com.fasterxml.jackson.core.JsonProcessingException&text=JsonProcessingException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
