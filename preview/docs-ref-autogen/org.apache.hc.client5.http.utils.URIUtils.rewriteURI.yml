### YamlMime:JavaMember
uid: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI*"
fullName: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI"
name: "rewriteURI"
nameWithType: "URIUtils.rewriteURI"
members:
- uid: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI(java.net.URI)"
  fullName: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI(URI uri)"
  name: "rewriteURI(URI uri)"
  nameWithType: "URIUtils.rewriteURI(URI uri)"
  summary: "A convenience method that creates a new <xref uid=\"java.net.URI\" data-throw-if-not-resolved=\"false\" data-raw-source=\"URI\"></xref> whose scheme, host, port, path, query are taken from the existing URI, dropping any fragment or user-information. The path is set to \"/\" if not explicitly specified. The existing URI is returned unmodified if it has no fragment or user-information and has a path."
  parameters:
  - description: "original URI."
    name: "uri"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static URI rewriteURI(URI uri)"
  exceptions:
  - description: "If the resulting URI is invalid."
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI(java.net.URI,org.apache.hc.core5.http.HttpHost)"
  fullName: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI(URI uri, HttpHost target)"
  name: "rewriteURI(URI uri, HttpHost target)"
  nameWithType: "URIUtils.rewriteURI(URI uri, HttpHost target)"
  summary: "A convenience method for <xref uid=\"org.apache.hc.client5.http.utils.URIUtils.rewriteURI(java.net.URI,org.apache.hc.core5.http.HttpHost,boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"URIUtils#rewriteURI(URI, HttpHost, boolean)\"></xref> that always keeps the fragment."
  parameters:
  - name: "uri"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - name: "target"
    type: "<xref href=\"org.apache.hc.core5.http.HttpHost?alt=org.apache.hc.core5.http.HttpHost&text=HttpHost\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static URI rewriteURI(URI uri, HttpHost target)"
  exceptions:
  - type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI(java.net.URI,org.apache.hc.core5.http.HttpHost,boolean)"
  fullName: "org.apache.hc.client5.http.utils.URIUtils.rewriteURI(URI uri, HttpHost target, boolean dropFragment)"
  name: "rewriteURI(URI uri, HttpHost target, boolean dropFragment)"
  nameWithType: "URIUtils.rewriteURI(URI uri, HttpHost target, boolean dropFragment)"
  summary: "A convenience method for creating a new <xref uid=\"java.net.URI\" data-throw-if-not-resolved=\"false\" data-raw-source=\"URI\"></xref> whose scheme, host and port are taken from the target host, but whose path, query and fragment are taken from the existing URI. The fragment is only used if dropFragment is false. The path is set to \"/\" if not explicitly specified."
  parameters:
  - description: "Contains the path, query and fragment to use."
    name: "uri"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - description: "Contains the scheme, host and port to use."
    name: "target"
    type: "<xref href=\"org.apache.hc.core5.http.HttpHost?alt=org.apache.hc.core5.http.HttpHost&text=HttpHost\" data-throw-if-not-resolved=\"False\" />"
  - description: "True if the fragment should not be copied."
    name: "dropFragment"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static URI rewriteURI(URI uri, HttpHost target, boolean dropFragment)"
  exceptions:
  - description: "If the resulting URI is invalid."
    type: "<xref href=\"java.net.URISyntaxException?alt=java.net.URISyntaxException&text=URISyntaxException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.client5.http.utils"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
