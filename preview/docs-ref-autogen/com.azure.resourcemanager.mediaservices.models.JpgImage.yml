### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.JpgImage"
fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage"
name: "JpgImage"
nameWithType: "JpgImage"
summary: "Describes the properties for producing a series of JPEG images from the input video."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Codec?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Video?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Image?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.Codec.label()"
- "com.azure.resourcemanager.mediaservices.models.Image.range()"
- "com.azure.resourcemanager.mediaservices.models.Image.start()"
- "com.azure.resourcemanager.mediaservices.models.Image.step()"
- "com.azure.resourcemanager.mediaservices.models.Image.validate()"
- "com.azure.resourcemanager.mediaservices.models.Image.withKeyFrameInterval(java.time.Duration)"
- "com.azure.resourcemanager.mediaservices.models.Image.withLabel(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Image.withRange(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Image.withStart(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Image.withStep(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Image.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
- "com.azure.resourcemanager.mediaservices.models.Image.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
- "com.azure.resourcemanager.mediaservices.models.Video.keyFrameInterval()"
- "com.azure.resourcemanager.mediaservices.models.Video.stretchMode()"
- "com.azure.resourcemanager.mediaservices.models.Video.syncMode()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class JpgImage extends Image"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.JpgImage()"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.JpgImage()"
  name: "JpgImage()"
  nameWithType: "JpgImage.JpgImage()"
  syntax: "public JpgImage()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.layers()"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.layers()"
  name: "layers()"
  nameWithType: "JpgImage.layers()"
  summary: "Get the layers property: A collection of output JPEG image layers to be produced by the encoder."
  syntax: "public List<JpgLayer> layers()"
  desc: "Get the layers property: A collection of output JPEG image layers to be produced by the encoder."
  returns:
    description: "the layers value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgLayer?alt=com.azure.resourcemanager.mediaservices.models.JpgLayer&text=JpgLayer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.spriteColumn()"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.spriteColumn()"
  name: "spriteColumn()"
  nameWithType: "JpgImage.spriteColumn()"
  summary: "Get the sprite<wbr>Column property: Sets the number of columns used in thumbnail sprite image."
  syntax: "public Integer spriteColumn()"
  desc: "Get the spriteColumn property: Sets the number of columns used in thumbnail sprite image. The number of rows are automatically calculated and a VTT file is generated with the coordinate mappings for each thumbnail in the sprite. Note: this value should be a positive integer and a proper value is recommended so that the output image resolution will not go beyond JPEG maximum pixel resolution limit 65535x65535."
  returns:
    description: "the spriteColumn value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.validate()"
  name: "validate()"
  nameWithType: "JpgImage.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withKeyFrameInterval(java.time.Duration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withKeyFrameInterval(Duration keyFrameInterval)"
  name: "withKeyFrameInterval(Duration keyFrameInterval)"
  nameWithType: "JpgImage.withKeyFrameInterval(Duration keyFrameInterval)"
  summary: "Set the key<wbr>Frame<wbr>Interval property: The distance between two key frames."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.withKeyFrameInterval(java.time.Duration)"
  parameters:
  - name: "keyFrameInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withKeyFrameInterval(Duration keyFrameInterval)"
  desc: "Set the keyFrameInterval property: The distance between two key frames. The value should be non-zero in the range \\[0.5, 20\\] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withLabel(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "JpgImage.withLabel(String label)"
  summary: "Set the label property: An optional label for the codec."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.withLabel(java.lang.String)"
  parameters:
  - name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withLabel(String label)"
  desc: "Set the label property: An optional label for the codec. The label can be used to control muxing behavior."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withLayers(java.util.List<com.azure.resourcemanager.mediaservices.models.JpgLayer>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withLayers(List<JpgLayer> layers)"
  name: "withLayers(List<JpgLayer> layers)"
  nameWithType: "JpgImage.withLayers(List<JpgLayer> layers)"
  summary: "Set the layers property: A collection of output JPEG image layers to be produced by the encoder."
  parameters:
  - description: "the layers value to set."
    name: "layers"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgLayer?alt=com.azure.resourcemanager.mediaservices.models.JpgLayer&text=JpgLayer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JpgImage withLayers(List<JpgLayer> layers)"
  desc: "Set the layers property: A collection of output JPEG image layers to be produced by the encoder."
  returns:
    description: "the JpgImage object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withRange(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withRange(String range)"
  name: "withRange(String range)"
  nameWithType: "JpgImage.withRange(String range)"
  summary: "Set the range property: The position relative to transform preset start time in the input video at which to stop generating thumbnails."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.withRange(java.lang.String)"
  parameters:
  - name: "range"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withRange(String range)"
  desc: "Set the range property: The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withSpriteColumn(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withSpriteColumn(Integer spriteColumn)"
  name: "withSpriteColumn(Integer spriteColumn)"
  nameWithType: "JpgImage.withSpriteColumn(Integer spriteColumn)"
  summary: "Set the sprite<wbr>Column property: Sets the number of columns used in thumbnail sprite image."
  parameters:
  - description: "the spriteColumn value to set."
    name: "spriteColumn"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withSpriteColumn(Integer spriteColumn)"
  desc: "Set the spriteColumn property: Sets the number of columns used in thumbnail sprite image. The number of rows are automatically calculated and a VTT file is generated with the coordinate mappings for each thumbnail in the sprite. Note: this value should be a positive integer and a proper value is recommended so that the output image resolution will not go beyond JPEG maximum pixel resolution limit 65535x65535."
  returns:
    description: "the JpgImage object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withStart(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withStart(String start)"
  name: "withStart(String start)"
  nameWithType: "JpgImage.withStart(String start)"
  summary: "Set the start property: The position in the input video from where to start generating thumbnails."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.withStart(java.lang.String)"
  parameters:
  - name: "start"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withStart(String start)"
  desc: "Set the start property: The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro \\{Best\\}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro \\{Best\\}."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withStep(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withStep(String step)"
  name: "withStep(String step)"
  nameWithType: "JpgImage.withStep(String step)"
  summary: "Set the step property: The intervals at which thumbnails are generated."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.withStep(java.lang.String)"
  parameters:
  - name: "step"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withStep(String step)"
  desc: "Set the step property: The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withStretchMode(StretchMode stretchMode)"
  name: "withStretchMode(StretchMode stretchMode)"
  nameWithType: "JpgImage.withStretchMode(StretchMode stretchMode)"
  summary: "Set the stretch<wbr>Mode property: The resizing mode - how the input video will be resized to fit the desired output resolution(s)."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.withStretchMode(com.azure.resourcemanager.mediaservices.models.StretchMode)"
  parameters:
  - name: "stretchMode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StretchMode?alt=com.azure.resourcemanager.mediaservices.models.StretchMode&text=StretchMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withStretchMode(StretchMode stretchMode)"
  desc: "Set the stretchMode property: The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.JpgImage.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
  fullName: "com.azure.resourcemanager.mediaservices.models.JpgImage.withSyncMode(VideoSyncMode syncMode)"
  name: "withSyncMode(VideoSyncMode syncMode)"
  nameWithType: "JpgImage.withSyncMode(VideoSyncMode syncMode)"
  summary: "Set the sync<wbr>Mode property: The Video Sync Mode."
  overridden: "com.azure.resourcemanager.mediaservices.models.Image.withSyncMode(com.azure.resourcemanager.mediaservices.models.VideoSyncMode)"
  parameters:
  - name: "syncMode"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.VideoSyncMode?alt=com.azure.resourcemanager.mediaservices.models.VideoSyncMode&text=VideoSyncMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JpgImage withSyncMode(VideoSyncMode syncMode)"
  desc: "Set the syncMode property: The Video Sync Mode."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.JpgImage?alt=com.azure.resourcemanager.mediaservices.models.JpgImage&text=JpgImage\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the properties for producing a series of JPEG images from the input video."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
