### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer*"
fullName: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer"
name: "FileBasedTimestampSynchronizer"
nameWithType: "FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer"
members:
- uid: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer()"
  fullName: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer()"
  name: "FileBasedTimestampSynchronizer()"
  nameWithType: "FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer()"
  summary: "Constructor that uses default values for names of files to use (files will get created in the current working directory), as well as for the update frequency value (10 seconds)."
  syntax: "public FileBasedTimestampSynchronizer()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer(java.io.File,java.io.File)"
  fullName: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer(File lockFile1, File lockFile2)"
  name: "FileBasedTimestampSynchronizer(File lockFile1, File lockFile2)"
  nameWithType: "FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer(File lockFile1, File lockFile2)"
  parameters:
  - name: "lockFile1"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  - name: "lockFile2"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileBasedTimestampSynchronizer(File lockFile1, File lockFile2)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer(java.io.File,java.io.File,long)"
  fullName: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer(File lockFile1, File lockFile2, long interval)"
  name: "FileBasedTimestampSynchronizer(File lockFile1, File lockFile2, long interval)"
  nameWithType: "FileBasedTimestampSynchronizer.FileBasedTimestampSynchronizer(File lockFile1, File lockFile2, long interval)"
  parameters:
  - name: "lockFile1"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  - name: "lockFile2"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  - name: "interval"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileBasedTimestampSynchronizer(File lockFile1, File lockFile2, long interval)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "constructor"
metadata: {}
package: "com.azure.cosmos.implementation.uuid.ext"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
