### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService"
name: "HiveLinkedService"
nameWithType: "HiveLinkedService"
summary: "Hive Server linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HiveLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.HiveLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.HiveLinkedService()"
  name: "HiveLinkedService()"
  nameWithType: "HiveLinkedService.HiveLinkedService()"
  syntax: "public HiveLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.allowHostnameCNMismatch()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.allowHostnameCNMismatch()"
  name: "allowHostnameCNMismatch()"
  nameWithType: "HiveLinkedService.allowHostnameCNMismatch()"
  summary: "Get the allow<wbr>Hostname<wbr>CNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL."
  syntax: "public Object allowHostnameCNMismatch()"
  desc: "Get the allowHostnameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  returns:
    description: "the allowHostnameCNMismatch value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.allowSelfSignedServerCert()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.allowSelfSignedServerCert()"
  name: "allowSelfSignedServerCert()"
  nameWithType: "HiveLinkedService.allowSelfSignedServerCert()"
  summary: "Get the allow<wbr>Self<wbr>Signed<wbr>Server<wbr>Cert property: Specifies whether to allow self-signed certificates from the server."
  syntax: "public Object allowSelfSignedServerCert()"
  desc: "Get the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  returns:
    description: "the allowSelfSignedServerCert value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.authenticationType()"
  name: "authenticationType()"
  nameWithType: "HiveLinkedService.authenticationType()"
  summary: "Get the authentication<wbr>Type property: The authentication method used to access the Hive server."
  syntax: "public HiveAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: The authentication method used to access the Hive server."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.HiveAuthenticationType&text=HiveAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.enableSsl()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.enableSsl()"
  name: "enableSsl()"
  nameWithType: "HiveLinkedService.enableSsl()"
  summary: "Get the enable<wbr>Ssl property: Specifies whether the connections to the server are encrypted using SSL."
  syntax: "public Object enableSsl()"
  desc: "Get the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  returns:
    description: "the enableSsl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "HiveLinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.host()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.host()"
  name: "host()"
  nameWithType: "HiveLinkedService.host()"
  summary: "Get the host property: IP address or host name of the Hive server, separated by ';' for multiple hosts (only when service<wbr>Discovery<wbr>Mode is enable)."
  syntax: "public Object host()"
  desc: "Get the host property: IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable)."
  returns:
    description: "the host value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.httpPath()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.httpPath()"
  name: "httpPath()"
  nameWithType: "HiveLinkedService.httpPath()"
  summary: "Get the http<wbr>Path property: The partial URL corresponding to the Hive server."
  syntax: "public Object httpPath()"
  desc: "Get the httpPath property: The partial URL corresponding to the Hive server."
  returns:
    description: "the httpPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.password()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.password()"
  name: "password()"
  nameWithType: "HiveLinkedService.password()"
  summary: "Get the password property: The password corresponding to the user name that you provided in the Username field."
  syntax: "public SecretBase password()"
  desc: "Get the password property: The password corresponding to the user name that you provided in the Username field."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.port()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.port()"
  name: "port()"
  nameWithType: "HiveLinkedService.port()"
  summary: "Get the port property: The TCP port that the Hive server uses to listen for client connections."
  syntax: "public Object port()"
  desc: "Get the port property: The TCP port that the Hive server uses to listen for client connections."
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.serverType()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.serverType()"
  name: "serverType()"
  nameWithType: "HiveLinkedService.serverType()"
  summary: "Get the server<wbr>Type property: The type of Hive server."
  syntax: "public HiveServerType serverType()"
  desc: "Get the serverType property: The type of Hive server."
  returns:
    description: "the serverType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveServerType?alt=com.azure.resourcemanager.datafactory.models.HiveServerType&text=HiveServerType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.serviceDiscoveryMode()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.serviceDiscoveryMode()"
  name: "serviceDiscoveryMode()"
  nameWithType: "HiveLinkedService.serviceDiscoveryMode()"
  summary: "Get the service<wbr>Discovery<wbr>Mode property: true to indicate using the Zoo<wbr>Keeper service, false not."
  syntax: "public Object serviceDiscoveryMode()"
  desc: "Get the serviceDiscoveryMode property: true to indicate using the ZooKeeper service, false not."
  returns:
    description: "the serviceDiscoveryMode value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.thriftTransportProtocol()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.thriftTransportProtocol()"
  name: "thriftTransportProtocol()"
  nameWithType: "HiveLinkedService.thriftTransportProtocol()"
  summary: "Get the thrift<wbr>Transport<wbr>Protocol property: The transport protocol to use in the Thrift layer."
  syntax: "public HiveThriftTransportProtocol thriftTransportProtocol()"
  desc: "Get the thriftTransportProtocol property: The transport protocol to use in the Thrift layer."
  returns:
    description: "the thriftTransportProtocol value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol?alt=com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol&text=HiveThriftTransportProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.trustedCertPath()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.trustedCertPath()"
  name: "trustedCertPath()"
  nameWithType: "HiveLinkedService.trustedCertPath()"
  summary: "Get the trusted<wbr>Cert<wbr>Path property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL."
  syntax: "public Object trustedCertPath()"
  desc: "Get the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  returns:
    description: "the trustedCertPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.useNativeQuery()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.useNativeQuery()"
  name: "useNativeQuery()"
  nameWithType: "HiveLinkedService.useNativeQuery()"
  summary: "Get the use<wbr>Native<wbr>Query property: Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
  syntax: "public Object useNativeQuery()"
  desc: "Get the useNativeQuery property: Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
  returns:
    description: "the useNativeQuery value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.useSystemTrustStore()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.useSystemTrustStore()"
  name: "useSystemTrustStore()"
  nameWithType: "HiveLinkedService.useSystemTrustStore()"
  summary: "Get the use<wbr>System<wbr>Trust<wbr>Store property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file."
  syntax: "public Object useSystemTrustStore()"
  desc: "Get the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  returns:
    description: "the useSystemTrustStore value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.username()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.username()"
  name: "username()"
  nameWithType: "HiveLinkedService.username()"
  summary: "Get the username property: The user name that you use to access Hive Server."
  syntax: "public Object username()"
  desc: "Get the username property: The user name that you use to access Hive Server."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.validate()"
  name: "validate()"
  nameWithType: "HiveLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAllowHostnameCNMismatch(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  name: "withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  nameWithType: "HiveLinkedService.withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  summary: "Set the allow<wbr>Hostname<wbr>CNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL."
  parameters:
  - description: "the allowHostnameCNMismatch value to set."
    name: "allowHostnameCNMismatch"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withAllowHostnameCNMismatch(Object allowHostnameCNMismatch)"
  desc: "Set the allowHostnameCNMismatch property: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAllowSelfSignedServerCert(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  name: "withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  nameWithType: "HiveLinkedService.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  summary: "Set the allow<wbr>Self<wbr>Signed<wbr>Server<wbr>Cert property: Specifies whether to allow self-signed certificates from the server."
  parameters:
  - description: "the allowSelfSignedServerCert value to set."
    name: "allowSelfSignedServerCert"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  desc: "Set the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "HiveLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HiveLinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAuthenticationType(com.azure.resourcemanager.datafactory.models.HiveAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withAuthenticationType(HiveAuthenticationType authenticationType)"
  name: "withAuthenticationType(HiveAuthenticationType authenticationType)"
  nameWithType: "HiveLinkedService.withAuthenticationType(HiveAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: The authentication method used to access the Hive server."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.HiveAuthenticationType&text=HiveAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withAuthenticationType(HiveAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: The authentication method used to access the Hive server."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "HiveLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "HiveLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withEnableSsl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withEnableSsl(Object enableSsl)"
  name: "withEnableSsl(Object enableSsl)"
  nameWithType: "HiveLinkedService.withEnableSsl(Object enableSsl)"
  summary: "Set the enable<wbr>Ssl property: Specifies whether the connections to the server are encrypted using SSL."
  parameters:
  - description: "the enableSsl value to set."
    name: "enableSsl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withEnableSsl(Object enableSsl)"
  desc: "Set the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "HiveLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withHost(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withHost(Object host)"
  name: "withHost(Object host)"
  nameWithType: "HiveLinkedService.withHost(Object host)"
  summary: "Set the host property: IP address or host name of the Hive server, separated by ';' for multiple hosts (only when service<wbr>Discovery<wbr>Mode is enable)."
  parameters:
  - description: "the host value to set."
    name: "host"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withHost(Object host)"
  desc: "Set the host property: IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable)."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withHttpPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withHttpPath(Object httpPath)"
  name: "withHttpPath(Object httpPath)"
  nameWithType: "HiveLinkedService.withHttpPath(Object httpPath)"
  summary: "Set the http<wbr>Path property: The partial URL corresponding to the Hive server."
  parameters:
  - description: "the httpPath value to set."
    name: "httpPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withHttpPath(Object httpPath)"
  desc: "Set the httpPath property: The partial URL corresponding to the Hive server."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "HiveLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HiveLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "HiveLinkedService.withPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name that you provided in the Username field."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withPassword(SecretBase password)"
  desc: "Set the password property: The password corresponding to the user name that you provided in the Username field."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withPort(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withPort(Object port)"
  name: "withPort(Object port)"
  nameWithType: "HiveLinkedService.withPort(Object port)"
  summary: "Set the port property: The TCP port that the Hive server uses to listen for client connections."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withPort(Object port)"
  desc: "Set the port property: The TCP port that the Hive server uses to listen for client connections."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withServerType(com.azure.resourcemanager.datafactory.models.HiveServerType)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withServerType(HiveServerType serverType)"
  name: "withServerType(HiveServerType serverType)"
  nameWithType: "HiveLinkedService.withServerType(HiveServerType serverType)"
  summary: "Set the server<wbr>Type property: The type of Hive server."
  parameters:
  - description: "the serverType value to set."
    name: "serverType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveServerType?alt=com.azure.resourcemanager.datafactory.models.HiveServerType&text=HiveServerType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withServerType(HiveServerType serverType)"
  desc: "Set the serverType property: The type of Hive server."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withServiceDiscoveryMode(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  name: "withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  nameWithType: "HiveLinkedService.withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  summary: "Set the service<wbr>Discovery<wbr>Mode property: true to indicate using the Zoo<wbr>Keeper service, false not."
  parameters:
  - description: "the serviceDiscoveryMode value to set."
    name: "serviceDiscoveryMode"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withServiceDiscoveryMode(Object serviceDiscoveryMode)"
  desc: "Set the serviceDiscoveryMode property: true to indicate using the ZooKeeper service, false not."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withThriftTransportProtocol(com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  name: "withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  nameWithType: "HiveLinkedService.withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  summary: "Set the thrift<wbr>Transport<wbr>Protocol property: The transport protocol to use in the Thrift layer."
  parameters:
  - description: "the thriftTransportProtocol value to set."
    name: "thriftTransportProtocol"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol?alt=com.azure.resourcemanager.datafactory.models.HiveThriftTransportProtocol&text=HiveThriftTransportProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withThriftTransportProtocol(HiveThriftTransportProtocol thriftTransportProtocol)"
  desc: "Set the thriftTransportProtocol property: The transport protocol to use in the Thrift layer."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withTrustedCertPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withTrustedCertPath(Object trustedCertPath)"
  name: "withTrustedCertPath(Object trustedCertPath)"
  nameWithType: "HiveLinkedService.withTrustedCertPath(Object trustedCertPath)"
  summary: "Set the trusted<wbr>Cert<wbr>Path property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL."
  parameters:
  - description: "the trustedCertPath value to set."
    name: "trustedCertPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withTrustedCertPath(Object trustedCertPath)"
  desc: "Set the trustedCertPath property: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withUseNativeQuery(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withUseNativeQuery(Object useNativeQuery)"
  name: "withUseNativeQuery(Object useNativeQuery)"
  nameWithType: "HiveLinkedService.withUseNativeQuery(Object useNativeQuery)"
  summary: "Set the use<wbr>Native<wbr>Query property: Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
  parameters:
  - description: "the useNativeQuery value to set."
    name: "useNativeQuery"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withUseNativeQuery(Object useNativeQuery)"
  desc: "Set the useNativeQuery property: Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withUseSystemTrustStore(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withUseSystemTrustStore(Object useSystemTrustStore)"
  name: "withUseSystemTrustStore(Object useSystemTrustStore)"
  nameWithType: "HiveLinkedService.withUseSystemTrustStore(Object useSystemTrustStore)"
  summary: "Set the use<wbr>System<wbr>Trust<wbr>Store property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file."
  parameters:
  - description: "the useSystemTrustStore value to set."
    name: "useSystemTrustStore"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withUseSystemTrustStore(Object useSystemTrustStore)"
  desc: "Set the useSystemTrustStore property: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "HiveLinkedService.withUsername(Object username)"
  summary: "Set the username property: The user name that you use to access Hive Server."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withUsername(Object username)"
  desc: "Set the username property: The user name that you use to access Hive Server."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withZooKeeperNameSpace(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  name: "withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  nameWithType: "HiveLinkedService.withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  summary: "Set the zoo<wbr>Keeper<wbr>Name<wbr>Space property: The namespace on Zoo<wbr>Keeper under which Hive Server 2 nodes are added."
  parameters:
  - description: "the zooKeeperNameSpace value to set."
    name: "zooKeeperNameSpace"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HiveLinkedService withZooKeeperNameSpace(Object zooKeeperNameSpace)"
  desc: "Set the zooKeeperNameSpace property: The namespace on ZooKeeper under which Hive Server 2 nodes are added."
  returns:
    description: "the HiveLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HiveLinkedService?alt=com.azure.resourcemanager.datafactory.models.HiveLinkedService&text=HiveLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.zooKeeperNameSpace()"
  fullName: "com.azure.resourcemanager.datafactory.models.HiveLinkedService.zooKeeperNameSpace()"
  name: "zooKeeperNameSpace()"
  nameWithType: "HiveLinkedService.zooKeeperNameSpace()"
  summary: "Get the zoo<wbr>Keeper<wbr>Name<wbr>Space property: The namespace on Zoo<wbr>Keeper under which Hive Server 2 nodes are added."
  syntax: "public Object zooKeeperNameSpace()"
  desc: "Get the zooKeeperNameSpace property: The namespace on ZooKeeper under which Hive Server 2 nodes are added."
  returns:
    description: "the zooKeeperNameSpace value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Hive Server linked service."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
