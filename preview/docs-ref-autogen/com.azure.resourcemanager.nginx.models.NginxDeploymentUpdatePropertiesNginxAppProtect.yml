### YamlMime:JavaType
uid: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect"
fullName: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect"
name: "NginxDeploymentUpdatePropertiesNginxAppProtect"
nameWithType: "NginxDeploymentUpdatePropertiesNginxAppProtect"
summary: "Update settings for NGINX App Protect (NAP)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **NginxDeploymentUpdatePropertiesNginxAppProtect**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect?alt=com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect&text=NginxDeploymentUpdatePropertiesNginxAppProtect\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.NginxDeploymentUpdatePropertiesNginxAppProtect()"
  fullName: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.NginxDeploymentUpdatePropertiesNginxAppProtect()"
  name: "NginxDeploymentUpdatePropertiesNginxAppProtect()"
  nameWithType: "NginxDeploymentUpdatePropertiesNginxAppProtect.NginxDeploymentUpdatePropertiesNginxAppProtect()"
  summary: "Creates an instance of Nginx<wbr>Deployment<wbr>Update<wbr>Properties<wbr>Nginx<wbr>App<wbr>Protect class."
  syntax: "public NginxDeploymentUpdatePropertiesNginxAppProtect()"
  desc: "Creates an instance of NginxDeploymentUpdatePropertiesNginxAppProtect class."
methods:
- uid: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "NginxDeploymentUpdatePropertiesNginxAppProtect.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Nginx<wbr>Deployment<wbr>Update<wbr>Properties<wbr>Nginx<wbr>App<wbr>Protect from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NginxDeploymentUpdatePropertiesNginxAppProtect fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the NginxDeploymentUpdatePropertiesNginxAppProtect."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of NginxDeploymentUpdatePropertiesNginxAppProtect from the JsonReader."
  returns:
    description: "An instance of NginxDeploymentUpdatePropertiesNginxAppProtect if the JsonReader was pointing to an\n instance of it, or null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect?alt=com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect&text=NginxDeploymentUpdatePropertiesNginxAppProtect\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "NginxDeploymentUpdatePropertiesNginxAppProtect.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.validate()"
  fullName: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.validate()"
  name: "validate()"
  nameWithType: "NginxDeploymentUpdatePropertiesNginxAppProtect.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.webApplicationFirewallSettings()"
  fullName: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.webApplicationFirewallSettings()"
  name: "webApplicationFirewallSettings()"
  nameWithType: "NginxDeploymentUpdatePropertiesNginxAppProtect.webApplicationFirewallSettings()"
  summary: "Get the web<wbr>Application<wbr>Firewall<wbr>Settings property: Settings for the NGINX App Protect Web Application Firewall (WAF)."
  syntax: "public WebApplicationFirewallSettings webApplicationFirewallSettings()"
  desc: "Get the webApplicationFirewallSettings property: Settings for the NGINX App Protect Web Application Firewall (WAF)."
  returns:
    description: "the webApplicationFirewallSettings value."
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings?alt=com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings&text=WebApplicationFirewallSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.withWebApplicationFirewallSettings(com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings)"
  fullName: "com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect.withWebApplicationFirewallSettings(WebApplicationFirewallSettings webApplicationFirewallSettings)"
  name: "withWebApplicationFirewallSettings(WebApplicationFirewallSettings webApplicationFirewallSettings)"
  nameWithType: "NginxDeploymentUpdatePropertiesNginxAppProtect.withWebApplicationFirewallSettings(WebApplicationFirewallSettings webApplicationFirewallSettings)"
  summary: "Set the web<wbr>Application<wbr>Firewall<wbr>Settings property: Settings for the NGINX App Protect Web Application Firewall (WAF)."
  parameters:
  - description: "the webApplicationFirewallSettings value to set."
    name: "webApplicationFirewallSettings"
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings?alt=com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings&text=WebApplicationFirewallSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NginxDeploymentUpdatePropertiesNginxAppProtect withWebApplicationFirewallSettings(WebApplicationFirewallSettings webApplicationFirewallSettings)"
  desc: "Set the webApplicationFirewallSettings property: Settings for the NGINX App Protect Web Application Firewall (WAF)."
  returns:
    description: "the NginxDeploymentUpdatePropertiesNginxAppProtect object itself."
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect?alt=com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect&text=NginxDeploymentUpdatePropertiesNginxAppProtect\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Update settings for NGINX App Protect (NAP)."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect?alt=com.azure.resourcemanager.nginx.models.NginxDeploymentUpdatePropertiesNginxAppProtect&text=NginxDeploymentUpdatePropertiesNginxAppProtect\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.nginx.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-nginx:1.1.0-beta.3
