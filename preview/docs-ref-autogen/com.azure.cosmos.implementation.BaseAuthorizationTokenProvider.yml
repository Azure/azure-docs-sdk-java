### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider
  id: BaseAuthorizationTokenProvider
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation
  children:
  - com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider(com.azure.core.credential.AzureKeyCredential)
  - com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(com.azure.cosmos.implementation.RequestVerb,java.lang.String,com.azure.cosmos.implementation.ResourceType,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(com.azure.cosmos.implementation.RequestVerb,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String)
  langs:
  - java
  name: BaseAuthorizationTokenProvider
  nameWithType: BaseAuthorizationTokenProvider
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider
  type: Class
  package: com.azure.cosmos.implementation
  summary: This class is used internally by both client (for generating the auth header with master/system key) and by the GATEWAY when verifying the auth header in the Azure Cosmos DB database service.
  syntax:
    content: public class BaseAuthorizationTokenProvider implements AuthorizationTokenProvider
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.AuthorizationTokenProvider
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider(com.azure.core.credential.AzureKeyCredential)
  id: BaseAuthorizationTokenProvider(com.azure.core.credential.AzureKeyCredential)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider
  langs:
  - java
  name: BaseAuthorizationTokenProvider(AzureKeyCredential credential)
  nameWithType: BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider(AzureKeyCredential credential)
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider(AzureKeyCredential credential)
  overload: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider*
  type: Constructor
  package: com.azure.cosmos.implementation
  syntax:
    content: public BaseAuthorizationTokenProvider(AzureKeyCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credential.AzureKeyCredential
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(com.azure.cosmos.implementation.RequestVerb,java.lang.String,com.azure.cosmos.implementation.ResourceType,java.util.Map<java.lang.String,java.lang.String>)
  id: generateKeyAuthorizationSignature(com.azure.cosmos.implementation.RequestVerb,java.lang.String,com.azure.cosmos.implementation.ResourceType,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider
  langs:
  - java
  name: generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, ResourceType resourceType, Map<String,String> headers)
  nameWithType: BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, ResourceType resourceType, Map<String,String> headers)
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, ResourceType resourceType, Map<String,String> headers)
  overload: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature*
  type: Method
  package: com.azure.cosmos.implementation
  summary: This API is a helper method to create auth header based on client request using masterkey.
  syntax:
    content: public String generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, ResourceType resourceType, Map<String,String> headers)
    parameters:
    - id: verb
      type: com.azure.cosmos.implementation.RequestVerb
      description: the verb.
    - id: resourceIdOrFullName
      type: java.lang.String
      description: the resource id or full name
    - id: resourceType
      type: com.azure.cosmos.implementation.ResourceType
      description: the resource type.
    - id: headers
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the request headers.
    return:
      type: java.lang.String
      description: the key authorization signature.
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(com.azure.cosmos.implementation.RequestVerb,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: generateKeyAuthorizationSignature(com.azure.cosmos.implementation.RequestVerb,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider
  langs:
  - java
  name: generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, String resourceSegment, Map<String,String> headers)
  nameWithType: BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, String resourceSegment, Map<String,String> headers)
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, String resourceSegment, Map<String,String> headers)
  overload: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature*
  type: Method
  package: com.azure.cosmos.implementation
  summary: This API is a helper method to create auth header based on client request using masterkey.
  syntax:
    content: public String generateKeyAuthorizationSignature(RequestVerb verb, String resourceIdOrFullName, String resourceSegment, Map<String,String> headers)
    parameters:
    - id: verb
      type: com.azure.cosmos.implementation.RequestVerb
      description: the verb
    - id: resourceIdOrFullName
      type: java.lang.String
      description: the resource id or full name
    - id: resourceSegment
      type: java.lang.String
      description: the resource segment
    - id: headers
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the request headers
    return:
      type: java.lang.String
      description: the key authorization signature
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String)
  id: getAuthorizationTokenUsingResourceTokens(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider
  langs:
  - java
  name: getAuthorizationTokenUsingResourceTokens(Map<String,String> resourceTokens, String path, String resourceId)
  nameWithType: BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens(Map<String,String> resourceTokens, String path, String resourceId)
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens(Map<String,String> resourceTokens, String path, String resourceId)
  overload: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens*
  type: Method
  package: com.azure.cosmos.implementation
  summary: This API is a helper method to create auth header based on client request using resourceTokens.
  syntax:
    content: public String getAuthorizationTokenUsingResourceTokens(Map<String,String> resourceTokens, String path, String resourceId)
    parameters:
    - id: resourceTokens
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the resource tokens.
    - id: path
      type: java.lang.String
      description: the path.
    - id: resourceId
      type: java.lang.String
      description: the resource id.
    return:
      type: java.lang.String
      description: the authorization token.
references:
- uid: com.azure.core.credential.AzureKeyCredential
  spec.java:
  - uid: com.azure.core.credential.AzureKeyCredential
    name: AzureKeyCredential
    fullName: com.azure.core.credential.AzureKeyCredential
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider*
  name: BaseAuthorizationTokenProvider
  nameWithType: BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.BaseAuthorizationTokenProvider
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.RequestVerb
  name: RequestVerb
  nameWithType: RequestVerb
  fullName: com.azure.cosmos.implementation.RequestVerb
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.ResourceType
  name: ResourceType
  nameWithType: ResourceType
  fullName: com.azure.cosmos.implementation.ResourceType
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature*
  name: generateKeyAuthorizationSignature
  nameWithType: BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.generateKeyAuthorizationSignature
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens*
  name: getAuthorizationTokenUsingResourceTokens
  nameWithType: BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens
  fullName: com.azure.cosmos.implementation.BaseAuthorizationTokenProvider.getAuthorizationTokenUsingResourceTokens
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.AuthorizationTokenProvider
  name: AuthorizationTokenProvider
  nameWithType: AuthorizationTokenProvider
  fullName: com.azure.cosmos.implementation.AuthorizationTokenProvider
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
