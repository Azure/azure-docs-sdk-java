### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.RegistryManager"
fullName: "com.microsoft.azure.sdk.iot.service.RegistryManager"
name: "RegistryManager"
nameWithType: "RegistryManager"
summary: "Use the RegistryManager class to manage the identity registry in IoT Hubs."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RegistryManager"
constructors:
- "com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()"
methods:
- "com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(com.microsoft.azure.sdk.iot.service.Device)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(com.microsoft.azure.sdk.iot.service.Module)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(java.lang.String,com.microsoft.azure.sdk.iot.service.ConfigurationContent)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.close()"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(com.microsoft.azure.sdk.iot.service.JobProperties)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(java.lang.String,java.lang.Boolean)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(java.lang.String,java.lang.Boolean)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(java.lang.Integer)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(com.microsoft.azure.sdk.iot.service.Device)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(java.lang.Integer)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(java.lang.Integer)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(com.microsoft.azure.sdk.iot.service.JobProperties)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.open()"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(com.microsoft.azure.sdk.iot.service.Device)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(com.microsoft.azure.sdk.iot.service.Module)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration,java.lang.Boolean)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module)"
- "com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module,java.lang.Boolean)"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
