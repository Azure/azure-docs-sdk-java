### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager
  id: RegistryManager
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(com.microsoft.azure.sdk.iot.service.Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(com.microsoft.azure.sdk.iot.service.Module)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(java.lang.String,com.microsoft.azure.sdk.iot.service.ConfigurationContent)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.close()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(com.microsoft.azure.sdk.iot.service.JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(java.lang.String,java.lang.Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(java.lang.String,java.lang.Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(java.lang.Integer)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(com.microsoft.azure.sdk.iot.service.Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(java.lang.Integer)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(java.lang.Integer)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(com.microsoft.azure.sdk.iot.service.JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.open()
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(com.microsoft.azure.sdk.iot.service.Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(com.microsoft.azure.sdk.iot.service.Module)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration,java.lang.Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module)
  - com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module,java.lang.Boolean)
  langs:
  - java
  name: RegistryManager
  nameWithType: RegistryManager
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager
  type: Class
  package: com.microsoft.azure.sdk.iot.service
  summary: Use the RegistryManager class to manage the identity registry in IoT Hubs.
  syntax:
    content: public class RegistryManager
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()
  id: RegistryManager()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: RegistryManager()
  nameWithType: RegistryManager.RegistryManager()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service
  summary: Previously was the java default constructor, should not be used.
  syntax:
    content: public RegistryManager()
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  id: addConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: addConfiguration(Configuration configuration)
  nameWithType: RegistryManager.addConfiguration(Configuration configuration)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration(Configuration configuration)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Add configuration using the given Configuration object Return with the response configuration object from IotHub
  syntax:
    content: public Configuration addConfiguration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The configuration object to add
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The configuration object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(com.microsoft.azure.sdk.iot.service.Device)
  id: addDevice(com.microsoft.azure.sdk.iot.service.Device)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: addDevice(Device device)
  nameWithType: RegistryManager.addDevice(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Add device using the given Device object Return with the response device object from IotHub
  syntax:
    content: public Device addDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object to add
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)
  id: addDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: addDeviceAsync(Device device)
  nameWithType: RegistryManager.addDeviceAsync(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for add() operation
  syntax:
    content: public CompletableFuture<Device> addDeviceAsync(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object to add
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.Device>
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(com.microsoft.azure.sdk.iot.service.Module)
  id: addModule(com.microsoft.azure.sdk.iot.service.Module)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: addModule(Module module)
  nameWithType: RegistryManager.addModule(Module module)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule(Module module)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Add module using the given Module object Return with the response module object from IotHub
  syntax:
    content: public Module addModule(Module module)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The module object to add
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The module object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(java.lang.String,com.microsoft.azure.sdk.iot.service.ConfigurationContent)
  id: applyConfigurationContentOnDevice(java.lang.String,com.microsoft.azure.sdk.iot.service.ConfigurationContent)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  nameWithType: RegistryManager.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Apply the provided configuration content to the provided device
  syntax:
    content: public void applyConfigurationContentOnDevice(String deviceId, ConfigurationContent content)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device to apply the configuration to
    - id: content
      type: com.microsoft.azure.sdk.iot.service.ConfigurationContent
      description: The configuration content to apply to the device
  exceptions:
  - type: java.io.IOException
    description: If the iot hub cannot be reached
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: If the iot hub cannot be reached
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.close()
  id: close()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: close()
  nameWithType: RegistryManager.close()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.close()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.close*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Gracefully close running threads, and then shutdown the underlying executor service
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String)
  id: createFromConnectionString(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Static constructor to create instance from connection string
  syntax:
    content: public static RegistryManager createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: The iot hub connection string
    return:
      type: com.microsoft.azure.sdk.iot.service.RegistryManager
      description: The instance of RegistryManager
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the object creation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)
  id: createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.RegistryManagerOptions)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: createFromConnectionString(String connectionString, RegistryManagerOptions options)
  nameWithType: RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString(String connectionString, RegistryManagerOptions options)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Static constructor to create instance from connection string
  syntax:
    content: public static RegistryManager createFromConnectionString(String connectionString, RegistryManagerOptions options)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: The iot hub connection string
    - id: options
      type: com.microsoft.azure.sdk.iot.service.RegistryManagerOptions
      description: The connection options to use when connecting to the service. May be null if no custom options will be used.
    return:
      type: com.microsoft.azure.sdk.iot.service.RegistryManager
      description: The instance of RegistryManager
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the object creation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(com.microsoft.azure.sdk.iot.service.JobProperties)
  id: exportDevices(com.microsoft.azure.sdk.iot.service.JobProperties)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: exportDevices(JobProperties exportDevicesParameters)
  nameWithType: RegistryManager.exportDevices(JobProperties exportDevicesParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(JobProperties exportDevicesParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Create a bulk export job.
  syntax:
    content: public JobProperties exportDevices(JobProperties exportDevicesParameters)
    parameters:
    - id: exportDevicesParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: >-
        A JobProperties object containing input parameters for export Devices job
                                        This API also supports identity based storage authentication, identity authentication
                                        support is currently available in limited regions. If a user wishes to try it out,
                                        they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1"
                                        otherwise default key based authentication is used for storage
                                        <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support"> More details here </a>
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: A JobProperties object for the newly created bulk export job
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(java.lang.String,java.lang.Boolean)
  id: exportDevices(java.lang.String,java.lang.Boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Create a bulk export job.
  syntax:
    content: public JobProperties exportDevices(String exportBlobContainerUri, Boolean excludeKeys)
    parameters:
    - id: exportBlobContainerUri
      type: java.lang.String
      description: URI containing SAS token to a blob container where export data will be placed
    - id: excludeKeys
      type: java.lang.Boolean
      description: Whether the devices keys should be excluded from the exported data or not
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: A JobProperties object for the newly created bulk export job
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)
  id: exportDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: exportDevicesAsync(JobProperties exportDevicesParameters)
  nameWithType: RegistryManager.exportDevicesAsync(JobProperties exportDevicesParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(JobProperties exportDevicesParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for exportDevices() operation
  syntax:
    content: public CompletableFuture<JobProperties> exportDevicesAsync(JobProperties exportDevicesParameters)
    parameters:
    - id: exportDevicesParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: >-
        A JobProperties object containing input parameters for export Devices job
                                        This API also supports identity based storage authentication, identity authentication
                                        support is currently available in limited regions. If a user wishes to try it out,
                                        they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1"
                                        otherwise default key based authentication is used for storage
                                        <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support"> More details here </a>
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.JobProperties>
      description: The future object for the requested operation
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(java.lang.String,java.lang.Boolean)
  id: exportDevicesAsync(java.lang.String,java.lang.Boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  nameWithType: RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for exportDevices() operation
  syntax:
    content: public CompletableFuture<JobProperties> exportDevicesAsync(String exportBlobContainerUri, Boolean excludeKeys)
    parameters:
    - id: exportBlobContainerUri
      type: java.lang.String
      description: the blob storage container URI to store at.
    - id: excludeKeys
      type: java.lang.Boolean
      description: if to exclude keys or not
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.JobProperties>
      description: The future object for the requested operation
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(java.lang.String)
  id: getConfiguration(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getConfiguration(String configurationId)
  nameWithType: RegistryManager.getConfiguration(String configurationId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration(String configurationId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get configuration by configuration Id from IotHub
  syntax:
    content: public Configuration getConfiguration(String configurationId)
    parameters:
    - id: configurationId
      type: java.lang.String
      description: The id of requested configuration
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The configuration object of requested configuration on the specific device
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(java.lang.Integer)
  id: getConfigurations(java.lang.Integer)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getConfigurations(Integer maxCount)
  nameWithType: RegistryManager.getConfigurations(Integer maxCount)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get list of Configuration
  syntax:
    content: public List<Configuration> getConfigurations(Integer maxCount)
    parameters:
    - id: maxCount
      type: java.lang.Integer
      description: The requested count of configurations
    return:
      type: java.util.List<com.microsoft.azure.sdk.iot.service.Configuration>
      description: The array of requested configuration objects
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(java.lang.String)
  id: getDevice(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getDevice(String deviceId)
  nameWithType: RegistryManager.getDevice(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get device data by device Id from IotHub
  syntax:
    content: public Device getDevice(String deviceId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The id of requested device
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object of requested device
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(java.lang.String)
  id: getDeviceAsync(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getDeviceAsync(String deviceId)
  nameWithType: RegistryManager.getDeviceAsync(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for getDevice() operation
  syntax:
    content: public CompletableFuture<Device> getDeviceAsync(String deviceId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The id of requested device
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.Device>
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(com.microsoft.azure.sdk.iot.service.Device)
  id: getDeviceConnectionString(com.microsoft.azure.sdk.iot.service.Device)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getDeviceConnectionString(Device device)
  nameWithType: RegistryManager.getDeviceConnectionString(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Return the iothub device connection string for a provided device.
  syntax:
    content: public String getDeviceConnectionString(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object to get the connectionString
    return:
      type: java.lang.String
      description: The iothub device connection string
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(java.lang.Integer)
  id: getDevices(java.lang.Integer)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getDevices(Integer maxCount)
  nameWithType: RegistryManager.getDevices(Integer maxCount)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get list of devices
  syntax:
    content: public ArrayList<Device> getDevices(Integer maxCount)
    parameters:
    - id: maxCount
      type: java.lang.Integer
      description: The requested count of devices
    return:
      type: java.util.ArrayList<com.microsoft.azure.sdk.iot.service.Device>
      description: The array of requested device objects
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(java.lang.Integer)
  id: getDevicesAsync(java.lang.Integer)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getDevicesAsync(Integer maxCount)
  nameWithType: RegistryManager.getDevicesAsync(Integer maxCount)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync(Integer maxCount)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for getDevices() operation
  syntax:
    content: public CompletableFuture<ArrayList<Device>> getDevicesAsync(Integer maxCount)
    parameters:
    - id: maxCount
      type: java.lang.Integer
      description: The requested count of devices
    return:
      type: java.util.concurrent.CompletableFuture<java.util.ArrayList<com.microsoft.azure.sdk.iot.service.Device>>
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(java.lang.String)
  id: getJob(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getJob(String jobId)
  nameWithType: RegistryManager.getJob(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get the properties of an existing job.
  syntax:
    content: public JobProperties getJob(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The id of the job to be retrieved.
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: A JobProperties object for the requested job id
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the jobId parameter is null
  - type: java.io.IOException
    description: This exception is thrown if the jobId parameter is null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the jobId parameter is null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the jobId parameter is null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(java.lang.String)
  id: getJobAsync(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getJobAsync(String jobId)
  nameWithType: RegistryManager.getJobAsync(String jobId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync(String jobId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for getJob() operation
  syntax:
    content: public CompletableFuture<JobProperties> getJobAsync(String jobId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: jobID as String
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.JobProperties>
      description: The future object for the requested operation
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the jobId parameter is null
  - type: java.io.IOException
    description: This exception is thrown if the jobId parameter is null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the jobId parameter is null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(java.lang.String,java.lang.String)
  id: getModule(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getModule(String deviceId, String moduleId)
  nameWithType: RegistryManager.getModule(String deviceId, String moduleId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule(String deviceId, String moduleId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get module data by device Id and module Id from IotHub
  syntax:
    content: public Module getModule(String deviceId, String moduleId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The id of requested device
    - id: moduleId
      type: java.lang.String
      description: The id of requested module
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The module object of requested module on the specific device
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(java.lang.String)
  id: getModulesOnDevice(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getModulesOnDevice(String deviceId)
  nameWithType: RegistryManager.getModulesOnDevice(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get modules data by device Id from IotHub
  syntax:
    content: public List<Module> getModulesOnDevice(String deviceId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The id of requested device
    return:
      type: java.util.List<com.microsoft.azure.sdk.iot.service.Module>
      description: The module objects on the specific device
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  id: getStatistics()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getStatistics()
  nameWithType: RegistryManager.getStatistics()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get device statistics
  syntax:
    content: public RegistryStatistics getStatistics()
    return:
      type: com.microsoft.azure.sdk.iot.service.RegistryStatistics
      description: RegistryStatistics object containing the requested data
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()
  id: getStatisticsAsync()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: getStatisticsAsync()
  nameWithType: RegistryManager.getStatisticsAsync()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for getStatistics() operation
  syntax:
    content: public CompletableFuture<RegistryStatistics> getStatisticsAsync()
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.RegistryStatistics>
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(com.microsoft.azure.sdk.iot.service.JobProperties)
  id: importDevices(com.microsoft.azure.sdk.iot.service.JobProperties)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: importDevices(JobProperties importDevicesParameters)
  nameWithType: RegistryManager.importDevices(JobProperties importDevicesParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(JobProperties importDevicesParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Create a bulk import job.
  syntax:
    content: public JobProperties importDevices(JobProperties importDevicesParameters)
    parameters:
    - id: importDevicesParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: >-
        A JobProperties object containing input parameters for import Devices job
                                        This API also supports identity based storage authentication, identity authentication
                                        support is currently available in limited regions. If a user wishes to try it out,
                                        they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1"
                                        otherwise default key based authentication is used for storage
                                        <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support"> More details here </a>
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: A JobProperties object for the newly created bulk import job
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(java.lang.String,java.lang.String)
  id: importDevices(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Create a bulk import job.
  syntax:
    content: public JobProperties importDevices(String importBlobContainerUri, String outputBlobContainerUri)
    parameters:
    - id: importBlobContainerUri
      type: java.lang.String
      description: URI containing SAS token to a blob container that contains registry data to sync
    - id: outputBlobContainerUri
      type: java.lang.String
      description: URI containing SAS token to a blob container where the result of the bulk import operation will be placed
    return:
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: A JobProperties object for the newly created bulk import job
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the importBlobContainerUri or outputBlobContainerUri parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)
  id: importDevicesAsync(com.microsoft.azure.sdk.iot.service.JobProperties)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: importDevicesAsync(JobProperties importParameters)
  nameWithType: RegistryManager.importDevicesAsync(JobProperties importParameters)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(JobProperties importParameters)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for importDevices() operation
  syntax:
    content: public CompletableFuture<JobProperties> importDevicesAsync(JobProperties importParameters)
    parameters:
    - id: importParameters
      type: com.microsoft.azure.sdk.iot.service.JobProperties
      description: >-
        A JobProperties object containing input parameters for import Devices job
                                 This API also supports identity based storage authentication, identity authentication
                                 support is currently available in limited regions. If a user wishes to try it out,
                                 they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1"
                                 otherwise default key based authentication is used for storage
                                 <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support"> More details here </a>
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.JobProperties>
      description: The future object for the requested operation
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(java.lang.String,java.lang.String)
  id: importDevicesAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for importDevices() operation
  syntax:
    content: public CompletableFuture<JobProperties> importDevicesAsync(String importBlobContainerUri, String outputBlobContainerUri)
    parameters:
    - id: importBlobContainerUri
      type: java.lang.String
      description: Uri for importBlobContainer
    - id: outputBlobContainerUri
      type: java.lang.String
      description: Uri for outputBlobContainer
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.JobProperties>
      description: The future object for the requested operation
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: java.io.IOException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the exportBlobContainerUri or excludeKeys parameters are null
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.open()
  id: open()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: open()
  nameWithType: RegistryManager.open()
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.open()
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.open*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  id: removeConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: removeConfiguration(Configuration config)
  nameWithType: RegistryManager.removeConfiguration(Configuration config)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(Configuration config)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Send remove configuration request and verify response
  syntax:
    content: public void removeConfiguration(Configuration config)
    parameters:
    - id: config
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The configuration to be removed
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(java.lang.String)
  id: removeConfiguration(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: removeConfiguration(String configurationId)
  nameWithType: RegistryManager.removeConfiguration(String configurationId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration(String configurationId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Send remove configuration request and verify response
  syntax:
    content: public void removeConfiguration(String configurationId)
    parameters:
    - id: configurationId
      type: java.lang.String
      description: The configuration to be removed
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(com.microsoft.azure.sdk.iot.service.Device)
  id: removeDevice(com.microsoft.azure.sdk.iot.service.Device)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: removeDevice(Device device)
  nameWithType: RegistryManager.removeDevice(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Remove device
  syntax:
    content: public void removeDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device name to remove
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(java.lang.String)
  id: removeDevice(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: removeDevice(String deviceId)
  nameWithType: RegistryManager.removeDevice(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Remove device
  syntax:
    content: public void removeDevice(String deviceId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device name to remove
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(java.lang.String)
  id: removeDeviceAsync(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: removeDeviceAsync(String deviceId)
  nameWithType: RegistryManager.removeDeviceAsync(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for removeDevice() operation
  syntax:
    content: public CompletableFuture<Boolean> removeDeviceAsync(String deviceId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device object to remove
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Boolean>
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(com.microsoft.azure.sdk.iot.service.Module)
  id: removeModule(com.microsoft.azure.sdk.iot.service.Module)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: removeModule(Module module)
  nameWithType: RegistryManager.removeModule(Module module)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(Module module)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Remove module
  syntax:
    content: public void removeModule(Module module)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The module to be removed
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(java.lang.String,java.lang.String)
  id: removeModule(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: removeModule(String deviceId, String moduleId)
  nameWithType: RegistryManager.removeModule(String deviceId, String moduleId)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule(String deviceId, String moduleId)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Remove module
  syntax:
    content: public void removeModule(String deviceId, String moduleId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device name associated with the module to be removed
    - id: moduleId
      type: java.lang.String
      description: The module name to be removed
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  id: updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateConfiguration(Configuration configuration)
  nameWithType: RegistryManager.updateConfiguration(Configuration configuration)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration configuration)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Update configuration not forced
  syntax:
    content: public Configuration updateConfiguration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The configuration object containing updated data
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The updated configuration object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration,java.lang.Boolean)
  id: updateConfiguration(com.microsoft.azure.sdk.iot.service.Configuration,java.lang.Boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateConfiguration(Configuration configuration, Boolean forceUpdate)
  nameWithType: RegistryManager.updateConfiguration(Configuration configuration, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration(Configuration configuration, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Update configuration with forceUpdate input parameter
  syntax:
    content: public Configuration updateConfiguration(Configuration configuration, Boolean forceUpdate)
    parameters:
    - id: configuration
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The configuration object containing updated data
    - id: forceUpdate
      type: java.lang.Boolean
      description: True if the update has to be forced regardless of the configuration state
    return:
      type: com.microsoft.azure.sdk.iot.service.Configuration
      description: The updated configuration object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device)
  id: updateDevice(com.microsoft.azure.sdk.iot.service.Device)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateDevice(Device device)
  nameWithType: RegistryManager.updateDevice(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Update device not forced
  syntax:
    content: public Device updateDevice(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object containing updated data
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The updated device object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)
  id: updateDevice(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateDevice(Device device, Boolean forceUpdate)
  nameWithType: RegistryManager.updateDevice(Device device, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice(Device device, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Update device with forceUpdate input parameter
  syntax:
    content: public Device updateDevice(Device device, Boolean forceUpdate)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object containing updated data
    - id: forceUpdate
      type: java.lang.Boolean
      description: True if the update has to be forced regardless of the device state
    return:
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The updated device object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)
  id: updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateDeviceAsync(Device device)
  nameWithType: RegistryManager.updateDeviceAsync(Device device)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for updateDevice() operation
  syntax:
    content: public CompletableFuture<Device> updateDeviceAsync(Device device)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object containing updated data
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.Device>
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)
  id: updateDeviceAsync(com.microsoft.azure.sdk.iot.service.Device,java.lang.Boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateDeviceAsync(Device device, Boolean forceUpdate)
  nameWithType: RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync(Device device, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Async wrapper for forced updateDevice() operation
  syntax:
    content: public CompletableFuture<Device> updateDeviceAsync(Device device, Boolean forceUpdate)
    parameters:
    - id: device
      type: com.microsoft.azure.sdk.iot.service.Device
      description: The device object containing updated data
    - id: forceUpdate
      type: java.lang.Boolean
      description: True is the update has to be forced regardless if the device state
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.Device>
      description: The future object for the requested operation
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module)
  id: updateModule(com.microsoft.azure.sdk.iot.service.Module)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateModule(Module module)
  nameWithType: RegistryManager.updateModule(Module module)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module module)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Update module not forced
  syntax:
    content: public Module updateModule(Module module)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The module object containing updated data
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The updated module object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(com.microsoft.azure.sdk.iot.service.Module,java.lang.Boolean)
  id: updateModule(com.microsoft.azure.sdk.iot.service.Module,java.lang.Boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.RegistryManager
  langs:
  - java
  name: updateModule(Module module, Boolean forceUpdate)
  nameWithType: RegistryManager.updateModule(Module module, Boolean forceUpdate)
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule(Module module, Boolean forceUpdate)
  overload: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Update module with forceUpdate input parameter
  syntax:
    content: public Module updateModule(Module module, Boolean forceUpdate)
    parameters:
    - id: module
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The module object containing updated data
    - id: forceUpdate
      type: java.lang.Boolean
      description: True if the update has to be forced regardless of the module state
    return:
      type: com.microsoft.azure.sdk.iot.service.Module
      description: The updated module object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the IO operation failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the IO operation failed
  - type: com.google.gson.JsonSyntaxException
    description: This exception is thrown if the IO operation failed
references:
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager*
  name: RegistryManager
  nameWithType: RegistryManager.RegistryManager
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.RegistryManager
  package: com.microsoft.azure.sdk.iot.service
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: RegistryManager.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManagerOptions
  name: RegistryManagerOptions
  nameWithType: RegistryManagerOptions
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManagerOptions
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.open*
  name: open
  nameWithType: RegistryManager.open
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.open
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.close*
  name: close
  nameWithType: RegistryManager.close
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.close
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: com.google.gson.JsonSyntaxException
  spec.java:
  - uid: com.google.gson.JsonSyntaxException
    name: JsonSyntaxException
    fullName: com.google.gson.JsonSyntaxException
- uid: com.microsoft.azure.sdk.iot.service.Device
  name: Device
  nameWithType: Device
  fullName: com.microsoft.azure.sdk.iot.service.Device
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice*
  name: addDevice
  nameWithType: RegistryManager.addDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.Device>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.service.Device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync*
  name: addDeviceAsync
  nameWithType: RegistryManager.addDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice*
  name: getDevice
  nameWithType: RegistryManager.getDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync*
  name: getDeviceAsync
  nameWithType: RegistryManager.getDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: java.util.ArrayList<com.microsoft.azure.sdk.iot.service.Device>
  spec.java:
  - uid: java.util.ArrayList
    name: ArrayList
    fullName: java.util.ArrayList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.service.Device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices*
  name: getDevices
  nameWithType: RegistryManager.getDevices
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.concurrent.CompletableFuture<java.util.ArrayList<com.microsoft.azure.sdk.iot.service.Device>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.ArrayList
    name: ArrayList
    fullName: java.util.ArrayList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.service.Device
    name: Device
    fullName: com.microsoft.azure.sdk.iot.service.Device
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync*
  name: getDevicesAsync
  nameWithType: RegistryManager.getDevicesAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString*
  name: getDeviceConnectionString
  nameWithType: RegistryManager.getDeviceConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getDeviceConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice*
  name: updateDevice
  nameWithType: RegistryManager.updateDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync*
  name: updateDeviceAsync
  nameWithType: RegistryManager.updateDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice*
  name: removeDevice
  nameWithType: RegistryManager.removeDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: java.util.concurrent.CompletableFuture<java.lang.Boolean>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync*
  name: removeDeviceAsync
  nameWithType: RegistryManager.removeDeviceAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryStatistics
  name: RegistryStatistics
  nameWithType: RegistryStatistics
  fullName: com.microsoft.azure.sdk.iot.service.RegistryStatistics
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics*
  name: getStatistics
  nameWithType: RegistryManager.getStatistics
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatistics
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.RegistryStatistics>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.service.RegistryStatistics
    name: RegistryStatistics
    fullName: com.microsoft.azure.sdk.iot.service.RegistryStatistics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync*
  name: getStatisticsAsync
  nameWithType: RegistryManager.getStatisticsAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getStatisticsAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.JobProperties
  name: JobProperties
  nameWithType: JobProperties
  fullName: com.microsoft.azure.sdk.iot.service.JobProperties
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices*
  name: exportDevices
  nameWithType: RegistryManager.exportDevices
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.sdk.iot.service.JobProperties>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.service.JobProperties
    name: JobProperties
    fullName: com.microsoft.azure.sdk.iot.service.JobProperties
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync*
  name: exportDevicesAsync
  nameWithType: RegistryManager.exportDevicesAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.exportDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices*
  name: importDevices
  nameWithType: RegistryManager.importDevices
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevices
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync*
  name: importDevicesAsync
  nameWithType: RegistryManager.importDevicesAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.importDevicesAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob*
  name: getJob
  nameWithType: RegistryManager.getJob
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJob
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync*
  name: getJobAsync
  nameWithType: RegistryManager.getJobAsync
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getJobAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.Module
  name: Module
  nameWithType: Module
  fullName: com.microsoft.azure.sdk.iot.service.Module
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule*
  name: addModule
  nameWithType: RegistryManager.addModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addModule
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule*
  name: getModule
  nameWithType: RegistryManager.getModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModule
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.List<com.microsoft.azure.sdk.iot.service.Module>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.service.Module
    name: Module
    fullName: com.microsoft.azure.sdk.iot.service.Module
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice*
  name: getModulesOnDevice
  nameWithType: RegistryManager.getModulesOnDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getModulesOnDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule*
  name: updateModule
  nameWithType: RegistryManager.updateModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateModule
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule*
  name: removeModule
  nameWithType: RegistryManager.removeModule
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeModule
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.Configuration
  name: Configuration
  nameWithType: Configuration
  fullName: com.microsoft.azure.sdk.iot.service.Configuration
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration*
  name: addConfiguration
  nameWithType: RegistryManager.addConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.addConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration*
  name: getConfiguration
  nameWithType: RegistryManager.getConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.List<com.microsoft.azure.sdk.iot.service.Configuration>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.service.Configuration
    name: Configuration
    fullName: com.microsoft.azure.sdk.iot.service.Configuration
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations*
  name: getConfigurations
  nameWithType: RegistryManager.getConfigurations
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.getConfigurations
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration*
  name: updateConfiguration
  nameWithType: RegistryManager.updateConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.updateConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration*
  name: removeConfiguration
  nameWithType: RegistryManager.removeConfiguration
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.removeConfiguration
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.ConfigurationContent
  name: ConfigurationContent
  nameWithType: ConfigurationContent
  fullName: com.microsoft.azure.sdk.iot.service.ConfigurationContent
- uid: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice*
  name: applyConfigurationContentOnDevice
  nameWithType: RegistryManager.applyConfigurationContentOnDevice
  fullName: com.microsoft.azure.sdk.iot.service.RegistryManager.applyConfigurationContentOnDevice
  package: com.microsoft.azure.sdk.iot.service
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
- uid: java.util.ArrayList
  name: ArrayList
  nameWithType: ArrayList
  fullName: java.util.ArrayList
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
