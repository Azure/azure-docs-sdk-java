### YamlMime:ManagedReference
items:
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar
  id: CosmosReactiveRepositoriesAutoConfigureRegistrar
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.cosmos
  children:
  - com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar()
  - com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation()
  - com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration()
  - com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension()
  langs:
  - java
  name: CosmosReactiveRepositoriesAutoConfigureRegistrar
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar
  type: Class
  package: com.azure.spring.autoconfigure.cosmos
  summary: Declare <xref uid="" data-throw-if-not-resolved="false">EnableReactiveCosmosRepositories</xref> annotation and <xref uid="" data-throw-if-not-resolved="false">EnableCosmosReactiveRepositoriesConfiguration</xref> configuration for default async auto-configuration.
  syntax:
    content: public class CosmosReactiveRepositoriesAutoConfigureRegistrar extends AbstractRepositoryConfigurationSourceSupport
  inheritance:
  - java.lang.Object
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getAnnotation()
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages()
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBootstrapMode()
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getConfiguration()
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getRepositoryConfigurationExtension()
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setBeanFactory(org.springframework.beans.factory.BeanFactory)
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setEnvironment(org.springframework.core.env.Environment)
  - org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setResourceLoader(org.springframework.core.io.ResourceLoader)
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar()
  id: CosmosReactiveRepositoriesAutoConfigureRegistrar()
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar
  langs:
  - java
  name: CosmosReactiveRepositoriesAutoConfigureRegistrar()
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar()
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar()
  overload: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar*
  type: Constructor
  package: com.azure.spring.autoconfigure.cosmos
  syntax:
    content: public CosmosReactiveRepositoriesAutoConfigureRegistrar()
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation()
  id: getAnnotation()
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar
  langs:
  - java
  name: getAnnotation()
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation()
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation()
  overload: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation*
  type: Method
  package: com.azure.spring.autoconfigure.cosmos
  syntax:
    content: protected Class<? extends Annotation> getAnnotation()
    return:
      type: java.lang.Class<? extends java.lang.annotation.Annotation>
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration()
  id: getConfiguration()
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar
  langs:
  - java
  name: getConfiguration()
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration()
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration()
  overload: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration*
  type: Method
  package: com.azure.spring.autoconfigure.cosmos
  syntax:
    content: protected Class<?> getConfiguration()
    return:
      type: java.lang.Class<?>
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension()
  id: getRepositoryConfigurationExtension()
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar
  langs:
  - java
  name: getRepositoryConfigurationExtension()
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension()
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension()
  overload: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension*
  type: Method
  package: com.azure.spring.autoconfigure.cosmos
  syntax:
    content: protected RepositoryConfigurationExtension getRepositoryConfigurationExtension()
    return:
      type: org.springframework.data.repository.config.RepositoryConfigurationExtension
references:
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar*
  name: CosmosReactiveRepositoriesAutoConfigureRegistrar
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.CosmosReactiveRepositoriesAutoConfigureRegistrar
  package: com.azure.spring.autoconfigure.cosmos
- uid: java.lang.Class<? extends java.lang.annotation.Annotation>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends java.lang.annotation.Annotation'
    name: Annotation
    fullName: '? extends java.lang.annotation.Annotation'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation*
  name: getAnnotation
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getAnnotation
  package: com.azure.spring.autoconfigure.cosmos
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration*
  name: getConfiguration
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getConfiguration
  package: com.azure.spring.autoconfigure.cosmos
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtension
  spec.java:
  - uid: org.springframework.data.repository.config.RepositoryConfigurationExtension
    name: RepositoryConfigurationExtension
    fullName: org.springframework.data.repository.config.RepositoryConfigurationExtension
- uid: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension*
  name: getRepositoryConfigurationExtension
  nameWithType: CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension
  fullName: com.azure.spring.autoconfigure.cosmos.CosmosReactiveRepositoriesAutoConfigureRegistrar.getRepositoryConfigurationExtension
  package: com.azure.spring.autoconfigure.cosmos
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport
  name: AbstractRepositoryConfigurationSourceSupport
  nameWithType: AbstractRepositoryConfigurationSourceSupport
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getAnnotation()
  name: AbstractRepositoryConfigurationSourceSupport.getAnnotation()
  nameWithType: AbstractRepositoryConfigurationSourceSupport.getAnnotation()
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getAnnotation()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setEnvironment(org.springframework.core.env.Environment)
  name: AbstractRepositoryConfigurationSourceSupport.setEnvironment(Environment)
  nameWithType: AbstractRepositoryConfigurationSourceSupport.setEnvironment(Environment)
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setEnvironment(org.springframework.core.env.Environment)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBootstrapMode()
  name: AbstractRepositoryConfigurationSourceSupport.getBootstrapMode()
  nameWithType: AbstractRepositoryConfigurationSourceSupport.getBootstrapMode()
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBootstrapMode()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setResourceLoader(org.springframework.core.io.ResourceLoader)
  name: AbstractRepositoryConfigurationSourceSupport.setResourceLoader(ResourceLoader)
  nameWithType: AbstractRepositoryConfigurationSourceSupport.setResourceLoader(ResourceLoader)
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setResourceLoader(org.springframework.core.io.ResourceLoader)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getRepositoryConfigurationExtension()
  name: AbstractRepositoryConfigurationSourceSupport.getRepositoryConfigurationExtension()
  nameWithType: AbstractRepositoryConfigurationSourceSupport.getRepositoryConfigurationExtension()
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getRepositoryConfigurationExtension()
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages()
  name: AbstractRepositoryConfigurationSourceSupport.getBasePackages()
  nameWithType: AbstractRepositoryConfigurationSourceSupport.getBasePackages()
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getConfiguration()
  name: AbstractRepositoryConfigurationSourceSupport.getConfiguration()
  nameWithType: AbstractRepositoryConfigurationSourceSupport.getConfiguration()
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getConfiguration()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setBeanFactory(org.springframework.beans.factory.BeanFactory)
  name: AbstractRepositoryConfigurationSourceSupport.setBeanFactory(BeanFactory)
  nameWithType: AbstractRepositoryConfigurationSourceSupport.setBeanFactory(BeanFactory)
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.setBeanFactory(org.springframework.beans.factory.BeanFactory)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)
  name: AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry)
  nameWithType: AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry)
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry)
- uid: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)
  name: AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry,BeanNameGenerator)
  nameWithType: AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AnnotationMetadata,BeanDefinitionRegistry,BeanNameGenerator)
  fullName: org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.BeanNameGenerator)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '? extends java.lang.annotation.Annotation'
  name: '? extends Annotation'
  nameWithType: '? extends Annotation'
  fullName: '? extends java.lang.annotation.Annotation'
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
