### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner"
fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner"
name: "CacheInner"
nameWithType: "CacheInner"
summary: "A Cache instance."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CacheInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.CacheInner()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.CacheInner()"
  name: "CacheInner()"
  nameWithType: "CacheInner.CacheInner()"
  syntax: "public CacheInner()"
methods:
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.cacheSizeGB()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.cacheSizeGB()"
  name: "cacheSizeGB()"
  nameWithType: "CacheInner.cacheSizeGB()"
  summary: "Get the cache<wbr>SizeGB property: The size of this Cache, in GB."
  syntax: "public Integer cacheSizeGB()"
  desc: "Get the cacheSizeGB property: The size of this Cache, in GB."
  returns:
    description: "the cacheSizeGB value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.directoryServicesSettings()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.directoryServicesSettings()"
  name: "directoryServicesSettings()"
  nameWithType: "CacheInner.directoryServicesSettings()"
  summary: "Get the directory<wbr>Services<wbr>Settings property: Specifies Directory Services settings of the cache."
  syntax: "public CacheDirectorySettings directoryServicesSettings()"
  desc: "Get the directoryServicesSettings property: Specifies Directory Services settings of the cache."
  returns:
    description: "the directoryServicesSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheDirectorySettings?alt=com.azure.resourcemanager.storagecache.models.CacheDirectorySettings&text=CacheDirectorySettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.encryptionSettings()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.encryptionSettings()"
  name: "encryptionSettings()"
  nameWithType: "CacheInner.encryptionSettings()"
  summary: "Get the encryption<wbr>Settings property: Specifies encryption settings of the cache."
  syntax: "public CacheEncryptionSettings encryptionSettings()"
  desc: "Get the encryptionSettings property: Specifies encryption settings of the cache."
  returns:
    description: "the encryptionSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheEncryptionSettings?alt=com.azure.resourcemanager.storagecache.models.CacheEncryptionSettings&text=CacheEncryptionSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.health()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.health()"
  name: "health()"
  nameWithType: "CacheInner.health()"
  summary: "Get the health property: Health of the Cache."
  syntax: "public CacheHealth health()"
  desc: "Get the health property: Health of the Cache."
  returns:
    description: "the health value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheHealth?alt=com.azure.resourcemanager.storagecache.models.CacheHealth&text=CacheHealth\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.identity()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.identity()"
  name: "identity()"
  nameWithType: "CacheInner.identity()"
  summary: "Get the identity property: The identity of the cache, if configured."
  syntax: "public CacheIdentity identity()"
  desc: "Get the identity property: The identity of the cache, if configured."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheIdentity?alt=com.azure.resourcemanager.storagecache.models.CacheIdentity&text=CacheIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.mountAddresses()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.mountAddresses()"
  name: "mountAddresses()"
  nameWithType: "CacheInner.mountAddresses()"
  summary: "Get the mount<wbr>Addresses property: Array of IP addresses that can be used by clients mounting this Cache."
  syntax: "public List<String> mountAddresses()"
  desc: "Get the mountAddresses property: Array of IP addresses that can be used by clients mounting this Cache."
  returns:
    description: "the mountAddresses value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.networkSettings()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.networkSettings()"
  name: "networkSettings()"
  nameWithType: "CacheInner.networkSettings()"
  summary: "Get the network<wbr>Settings property: Specifies network settings of the cache."
  syntax: "public CacheNetworkSettings networkSettings()"
  desc: "Get the networkSettings property: Specifies network settings of the cache."
  returns:
    description: "the networkSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheNetworkSettings?alt=com.azure.resourcemanager.storagecache.models.CacheNetworkSettings&text=CacheNetworkSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.primingJobs()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.primingJobs()"
  name: "primingJobs()"
  nameWithType: "CacheInner.primingJobs()"
  summary: "Get the priming<wbr>Jobs property: Specifies the priming jobs defined in the cache."
  syntax: "public List<PrimingJob> primingJobs()"
  desc: "Get the primingJobs property: Specifies the priming jobs defined in the cache."
  returns:
    description: "the primingJobs value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJob?alt=com.azure.resourcemanager.storagecache.models.PrimingJob&text=PrimingJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.provisioningState()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "CacheInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: ARM provisioning state, see https://github.<wbr>com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.<wbr>md\\#provisioningstate-property."
  syntax: "public ProvisioningStateType provisioningState()"
  desc: "Get the provisioningState property: ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md\\#provisioningstate-property."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ProvisioningStateType?alt=com.azure.resourcemanager.storagecache.models.ProvisioningStateType&text=ProvisioningStateType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.securitySettings()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.securitySettings()"
  name: "securitySettings()"
  nameWithType: "CacheInner.securitySettings()"
  summary: "Get the security<wbr>Settings property: Specifies security settings of the cache."
  syntax: "public CacheSecuritySettings securitySettings()"
  desc: "Get the securitySettings property: Specifies security settings of the cache."
  returns:
    description: "the securitySettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheSecuritySettings?alt=com.azure.resourcemanager.storagecache.models.CacheSecuritySettings&text=CacheSecuritySettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.sku()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.sku()"
  name: "sku()"
  nameWithType: "CacheInner.sku()"
  summary: "Get the sku property: SKU for the Cache."
  syntax: "public CacheSku sku()"
  desc: "Get the sku property: SKU for the Cache."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheSku?alt=com.azure.resourcemanager.storagecache.models.CacheSku&text=CacheSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.spaceAllocation()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.spaceAllocation()"
  name: "spaceAllocation()"
  nameWithType: "CacheInner.spaceAllocation()"
  summary: "Get the space<wbr>Allocation property: Specifies the space allocation percentage for each storage target in the cache."
  syntax: "public List<StorageTargetSpaceAllocation> spaceAllocation()"
  desc: "Get the spaceAllocation property: Specifies the space allocation percentage for each storage target in the cache."
  returns:
    description: "the spaceAllocation value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.StorageTargetSpaceAllocation?alt=com.azure.resourcemanager.storagecache.models.StorageTargetSpaceAllocation&text=StorageTargetSpaceAllocation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.subnet()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.subnet()"
  name: "subnet()"
  nameWithType: "CacheInner.subnet()"
  summary: "Get the subnet property: Subnet used for the Cache."
  syntax: "public String subnet()"
  desc: "Get the subnet property: Subnet used for the Cache."
  returns:
    description: "the subnet value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.systemData()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.systemData()"
  name: "systemData()"
  nameWithType: "CacheInner.systemData()"
  summary: "Get the system<wbr>Data property: The system meta data relating to this resource."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: The system meta data relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.upgradeSettings()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.upgradeSettings()"
  name: "upgradeSettings()"
  nameWithType: "CacheInner.upgradeSettings()"
  summary: "Get the upgrade<wbr>Settings property: Upgrade settings of the Cache."
  syntax: "public CacheUpgradeSettings upgradeSettings()"
  desc: "Get the upgradeSettings property: Upgrade settings of the Cache."
  returns:
    description: "the upgradeSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUpgradeSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUpgradeSettings&text=CacheUpgradeSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.upgradeStatus()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.upgradeStatus()"
  name: "upgradeStatus()"
  nameWithType: "CacheInner.upgradeStatus()"
  summary: "Get the upgrade<wbr>Status property: Upgrade status of the Cache."
  syntax: "public CacheUpgradeStatus upgradeStatus()"
  desc: "Get the upgradeStatus property: Upgrade status of the Cache."
  returns:
    description: "the upgradeStatus value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUpgradeStatus?alt=com.azure.resourcemanager.storagecache.models.CacheUpgradeStatus&text=CacheUpgradeStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.validate()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.validate()"
  name: "validate()"
  nameWithType: "CacheInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withCacheSizeGB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withCacheSizeGB(Integer cacheSizeGB)"
  name: "withCacheSizeGB(Integer cacheSizeGB)"
  nameWithType: "CacheInner.withCacheSizeGB(Integer cacheSizeGB)"
  summary: "Set the cache<wbr>SizeGB property: The size of this Cache, in GB."
  parameters:
  - description: "the cacheSizeGB value to set."
    name: "cacheSizeGB"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withCacheSizeGB(Integer cacheSizeGB)"
  desc: "Set the cacheSizeGB property: The size of this Cache, in GB."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withDirectoryServicesSettings(com.azure.resourcemanager.storagecache.models.CacheDirectorySettings)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withDirectoryServicesSettings(CacheDirectorySettings directoryServicesSettings)"
  name: "withDirectoryServicesSettings(CacheDirectorySettings directoryServicesSettings)"
  nameWithType: "CacheInner.withDirectoryServicesSettings(CacheDirectorySettings directoryServicesSettings)"
  summary: "Set the directory<wbr>Services<wbr>Settings property: Specifies Directory Services settings of the cache."
  parameters:
  - description: "the directoryServicesSettings value to set."
    name: "directoryServicesSettings"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheDirectorySettings?alt=com.azure.resourcemanager.storagecache.models.CacheDirectorySettings&text=CacheDirectorySettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withDirectoryServicesSettings(CacheDirectorySettings directoryServicesSettings)"
  desc: "Set the directoryServicesSettings property: Specifies Directory Services settings of the cache."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withEncryptionSettings(com.azure.resourcemanager.storagecache.models.CacheEncryptionSettings)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withEncryptionSettings(CacheEncryptionSettings encryptionSettings)"
  name: "withEncryptionSettings(CacheEncryptionSettings encryptionSettings)"
  nameWithType: "CacheInner.withEncryptionSettings(CacheEncryptionSettings encryptionSettings)"
  summary: "Set the encryption<wbr>Settings property: Specifies encryption settings of the cache."
  parameters:
  - description: "the encryptionSettings value to set."
    name: "encryptionSettings"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheEncryptionSettings?alt=com.azure.resourcemanager.storagecache.models.CacheEncryptionSettings&text=CacheEncryptionSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withEncryptionSettings(CacheEncryptionSettings encryptionSettings)"
  desc: "Set the encryptionSettings property: Specifies encryption settings of the cache."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withIdentity(com.azure.resourcemanager.storagecache.models.CacheIdentity)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withIdentity(CacheIdentity identity)"
  name: "withIdentity(CacheIdentity identity)"
  nameWithType: "CacheInner.withIdentity(CacheIdentity identity)"
  summary: "Set the identity property: The identity of the cache, if configured."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheIdentity?alt=com.azure.resourcemanager.storagecache.models.CacheIdentity&text=CacheIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withIdentity(CacheIdentity identity)"
  desc: "Set the identity property: The identity of the cache, if configured."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "CacheInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withNetworkSettings(com.azure.resourcemanager.storagecache.models.CacheNetworkSettings)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withNetworkSettings(CacheNetworkSettings networkSettings)"
  name: "withNetworkSettings(CacheNetworkSettings networkSettings)"
  nameWithType: "CacheInner.withNetworkSettings(CacheNetworkSettings networkSettings)"
  summary: "Set the network<wbr>Settings property: Specifies network settings of the cache."
  parameters:
  - description: "the networkSettings value to set."
    name: "networkSettings"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheNetworkSettings?alt=com.azure.resourcemanager.storagecache.models.CacheNetworkSettings&text=CacheNetworkSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withNetworkSettings(CacheNetworkSettings networkSettings)"
  desc: "Set the networkSettings property: Specifies network settings of the cache."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withSecuritySettings(com.azure.resourcemanager.storagecache.models.CacheSecuritySettings)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withSecuritySettings(CacheSecuritySettings securitySettings)"
  name: "withSecuritySettings(CacheSecuritySettings securitySettings)"
  nameWithType: "CacheInner.withSecuritySettings(CacheSecuritySettings securitySettings)"
  summary: "Set the security<wbr>Settings property: Specifies security settings of the cache."
  parameters:
  - description: "the securitySettings value to set."
    name: "securitySettings"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheSecuritySettings?alt=com.azure.resourcemanager.storagecache.models.CacheSecuritySettings&text=CacheSecuritySettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withSecuritySettings(CacheSecuritySettings securitySettings)"
  desc: "Set the securitySettings property: Specifies security settings of the cache."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withSku(com.azure.resourcemanager.storagecache.models.CacheSku)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withSku(CacheSku sku)"
  name: "withSku(CacheSku sku)"
  nameWithType: "CacheInner.withSku(CacheSku sku)"
  summary: "Set the sku property: SKU for the Cache."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheSku?alt=com.azure.resourcemanager.storagecache.models.CacheSku&text=CacheSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withSku(CacheSku sku)"
  desc: "Set the sku property: SKU for the Cache."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withSubnet(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withSubnet(String subnet)"
  name: "withSubnet(String subnet)"
  nameWithType: "CacheInner.withSubnet(String subnet)"
  summary: "Set the subnet property: Subnet used for the Cache."
  parameters:
  - description: "the subnet value to set."
    name: "subnet"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withSubnet(String subnet)"
  desc: "Set the subnet property: Subnet used for the Cache."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "CacheInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CacheInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withUpgradeSettings(com.azure.resourcemanager.storagecache.models.CacheUpgradeSettings)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withUpgradeSettings(CacheUpgradeSettings upgradeSettings)"
  name: "withUpgradeSettings(CacheUpgradeSettings upgradeSettings)"
  nameWithType: "CacheInner.withUpgradeSettings(CacheUpgradeSettings upgradeSettings)"
  summary: "Set the upgrade<wbr>Settings property: Upgrade settings of the Cache."
  parameters:
  - description: "the upgradeSettings value to set."
    name: "upgradeSettings"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUpgradeSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUpgradeSettings&text=CacheUpgradeSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheInner withUpgradeSettings(CacheUpgradeSettings upgradeSettings)"
  desc: "Set the upgradeSettings property: Upgrade settings of the Cache."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withZones(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.withZones(List<String> zones)"
  name: "withZones(List<String> zones)"
  nameWithType: "CacheInner.withZones(List<String> zones)"
  summary: "Set the zones property: Availability zones for resources."
  parameters:
  - description: "the zones value to set."
    name: "zones"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CacheInner withZones(List<String> zones)"
  desc: "Set the zones property: Availability zones for resources. This field should only contain a single element in the array."
  returns:
    description: "the CacheInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.zones()"
  fullName: "com.azure.resourcemanager.storagecache.fluent.models.CacheInner.zones()"
  name: "zones()"
  nameWithType: "CacheInner.zones()"
  summary: "Get the zones property: Availability zones for resources."
  syntax: "public List<String> zones()"
  desc: "Get the zones property: Availability zones for resources. This field should only contain a single element in the array."
  returns:
    description: "the zones value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "A Cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md."
metadata: {}
package: "com.azure.resourcemanager.storagecache.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagecache:1.0.0-beta.6
