### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonGenerationException.withGenerator*"
fullName: "com.fasterxml.jackson.core.JsonGenerationException.withGenerator"
name: "withGenerator"
nameWithType: "JsonGenerationException.withGenerator"
members:
- uid: "com.fasterxml.jackson.core.JsonGenerationException.withGenerator(com.fasterxml.jackson.core.JsonGenerator)"
  fullName: "com.fasterxml.jackson.core.JsonGenerationException.withGenerator(JsonGenerator g)"
  name: "withGenerator(JsonGenerator g)"
  nameWithType: "JsonGenerationException.withGenerator(JsonGenerator g)"
  summary: "Fluent method that may be used to assign originating <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref>, to be accessed using <xref uid=\"com.fasterxml.jackson.core.JsonGenerationException.getProcessor()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getProcessor()\"></xref>."
  parameters:
  - name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonGenerationException withGenerator(JsonGenerator g)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
