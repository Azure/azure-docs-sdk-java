### YamlMime:JavaType
uid: "com.azure.analytics.purview.catalog.GlossaryClient"
fullName: "com.azure.analytics.purview.catalog.GlossaryClient"
name: "GlossaryClient"
nameWithType: "GlossaryClient"
summary: "Initializes a new instance of the synchronous Purview<wbr>Catalog<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class GlossaryClient"
methods:
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.assignTermToEntitiesWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.assignTermToEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  name: "assignTermToEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.assignTermToEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  summary: "Assign the given term to the provided list of related objects."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An array of related object IDs to which the term has to be associated."
    name: "relatedObjectIds"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> assignTermToEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  desc: "Assign the given term to the provided list of related objects.\n\n**Request Body Schema**\n\n```java\n[\n     {\n         guid: String\n         typeName: String\n         uniqueAttributes: {\n             String: Object\n         }\n         displayText: String\n         entityStatus: String(ACTIVE/DELETED)\n         relationshipType: String\n         relationshipAttributes: {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n         }\n         relationshipGuid: String\n         relationshipStatus: String(ACTIVE/DELETED)\n     }\n ]\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.beginImportGlossaryTermsViaCsv(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.beginImportGlossaryTermsViaCsv(String glossaryGuid, BinaryData file, RequestOptions requestOptions)"
  name: "beginImportGlossaryTermsViaCsv(String glossaryGuid, BinaryData file, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.beginImportGlossaryTermsViaCsv(String glossaryGuid, BinaryData file, RequestOptions requestOptions)"
  summary: "Import Glossary Terms from local csv file."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The csv file to import glossary terms from."
    name: "file"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginImportGlossaryTermsViaCsv(String glossaryGuid, BinaryData file, RequestOptions requestOptions)"
  desc: "Import Glossary Terms from local csv file.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\nFlux\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     status: String(NotStarted/Succeeded/Failed/Running)\n     createTime: String\n     lastUpdateTime: String\n     properties: {\n         importedTerms: String\n         totalTermsDetected: String\n     }\n     error: {\n         errorCode: Integer\n         errorMessage: String\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of status of import csv operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.beginImportGlossaryTermsViaCsvByGlossaryName(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.beginImportGlossaryTermsViaCsvByGlossaryName(String glossaryName, BinaryData file, RequestOptions requestOptions)"
  name: "beginImportGlossaryTermsViaCsvByGlossaryName(String glossaryName, BinaryData file, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.beginImportGlossaryTermsViaCsvByGlossaryName(String glossaryName, BinaryData file, RequestOptions requestOptions)"
  summary: "Import Glossary Terms from local csv file by glossary<wbr>Name."
  parameters:
  - description: "The name of the glossary."
    name: "glossaryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The csv file to import glossary terms from."
    name: "file"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginImportGlossaryTermsViaCsvByGlossaryName(String glossaryName, BinaryData file, RequestOptions requestOptions)"
  desc: "Import Glossary Terms from local csv file by glossaryName.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\nFlux\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     status: String(NotStarted/Succeeded/Failed/Running)\n     createTime: String\n     lastUpdateTime: String\n     properties: {\n         importedTerms: String\n         totalTermsDetected: String\n     }\n     error: {\n         errorCode: Integer\n         errorMessage: String\n     }\n }\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of status of import csv operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryCategoriesWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryCategoriesWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  name: "createGlossaryCategoriesWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.createGlossaryCategoriesWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  summary: "Create glossary category in bulk."
  parameters:
  - description: "An array of glossary category definitions to be created."
    name: "glossaryCategory"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createGlossaryCategoriesWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  desc: "Create glossary category in bulk.\n\n**Request Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         anchor: {\n             displayText: String\n             glossaryGuid: String\n             relationGuid: String\n         }\n         childrenCategories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 parentCategoryGuid: String\n                 relationGuid: String\n             }\n         ]\n         parentCategory: (recursive schema, see parentCategory above)\n         terms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         anchor: {\n             displayText: String\n             glossaryGuid: String\n             relationGuid: String\n         }\n         childrenCategories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 parentCategoryGuid: String\n                 relationGuid: String\n             }\n         ]\n         parentCategory: (recursive schema, see parentCategory above)\n         terms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n     }\n ]\n```"
  returns:
    description: "an array of glossary category created successfully in bulk along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryCategoryWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryCategoryWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  name: "createGlossaryCategoryWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.createGlossaryCategoryWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  summary: "Create a glossary category."
  parameters:
  - description: "The glossary category definition. A category must be anchored to a Glossary when\n     creating. Optionally, terms belonging to the category and the hierarchy can also be defined during creation."
    name: "glossaryCategory"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createGlossaryCategoryWithResponse(BinaryData glossaryCategory, RequestOptions requestOptions)"
  desc: "Create a glossary category.\n\n**Request Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     childrenCategories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     parentCategory: (recursive schema, see parentCategory above)\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     childrenCategories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     parentCategory: (recursive schema, see parentCategory above)\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n }\n```"
  returns:
    description: "atlasGlossaryCategory along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryTermWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryTermWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  name: "createGlossaryTermWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.createGlossaryTermWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  summary: "Create a glossary term."
  parameters:
  - description: "The glossary term definition. A term must be anchored to a Glossary at the time of creation.\n     Optionally it can be categorized as well."
    name: "glossaryTerm"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createGlossaryTermWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  desc: "Create a glossary term.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     abbreviation: String\n     templateName: [\n         Object\n     ]\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     antonyms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     createTime: Float\n     createdBy: String\n     updateTime: Float\n     updatedBy: String\n     status: String(Draft/Approved/Alert/Expired)\n     resources: [\n         {\n             displayName: String\n             url: String\n         }\n     ]\n     contacts: {\n         String: [\n             {\n                 id: String\n                 info: String\n             }\n         ]\n     }\n     attributes: {\n         String: {\n             String: Object\n         }\n     }\n     assignedEntities: [\n         {\n             guid: String\n             typeName: String\n             uniqueAttributes: {\n                 String: Object\n             }\n             displayText: String\n             entityStatus: String(ACTIVE/DELETED)\n             relationshipType: String\n             relationshipAttributes: {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n             }\n             relationshipGuid: String\n             relationshipStatus: String(ACTIVE/DELETED)\n         }\n     ]\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             relationGuid: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         }\n     ]\n     classifies: [\n         (recursive schema, see above)\n     ]\n     examples: [\n         String\n     ]\n     isA: [\n         (recursive schema, see above)\n     ]\n     preferredTerms: [\n         (recursive schema, see above)\n     ]\n     preferredToTerms: [\n         (recursive schema, see above)\n     ]\n     replacedBy: [\n         (recursive schema, see above)\n     ]\n     replacementTerms: [\n         (recursive schema, see above)\n     ]\n     seeAlso: [\n         (recursive schema, see above)\n     ]\n     synonyms: [\n         (recursive schema, see above)\n     ]\n     translatedTerms: [\n         (recursive schema, see above)\n     ]\n     translationTerms: [\n         (recursive schema, see above)\n     ]\n     usage: String\n     validValues: [\n         (recursive schema, see above)\n     ]\n     validValuesFor: [\n         (recursive schema, see above)\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     abbreviation: String\n     templateName: [\n         Object\n     ]\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     antonyms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     createTime: Float\n     createdBy: String\n     updateTime: Float\n     updatedBy: String\n     status: String(Draft/Approved/Alert/Expired)\n     resources: [\n         {\n             displayName: String\n             url: String\n         }\n     ]\n     contacts: {\n         String: [\n             {\n                 id: String\n                 info: String\n             }\n         ]\n     }\n     attributes: {\n         String: {\n             String: Object\n         }\n     }\n     assignedEntities: [\n         {\n             guid: String\n             typeName: String\n             uniqueAttributes: {\n                 String: Object\n             }\n             displayText: String\n             entityStatus: String(ACTIVE/DELETED)\n             relationshipType: String\n             relationshipAttributes: {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n             }\n             relationshipGuid: String\n             relationshipStatus: String(ACTIVE/DELETED)\n         }\n     ]\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             relationGuid: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         }\n     ]\n     classifies: [\n         (recursive schema, see above)\n     ]\n     examples: [\n         String\n     ]\n     isA: [\n         (recursive schema, see above)\n     ]\n     preferredTerms: [\n         (recursive schema, see above)\n     ]\n     preferredToTerms: [\n         (recursive schema, see above)\n     ]\n     replacedBy: [\n         (recursive schema, see above)\n     ]\n     replacementTerms: [\n         (recursive schema, see above)\n     ]\n     seeAlso: [\n         (recursive schema, see above)\n     ]\n     synonyms: [\n         (recursive schema, see above)\n     ]\n     translatedTerms: [\n         (recursive schema, see above)\n     ]\n     translationTerms: [\n         (recursive schema, see above)\n     ]\n     usage: String\n     validValues: [\n         (recursive schema, see above)\n     ]\n     validValuesFor: [\n         (recursive schema, see above)\n     ]\n }\n```"
  returns:
    description: "atlasGlossaryTerm along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryTermsWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryTermsWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  name: "createGlossaryTermsWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.createGlossaryTermsWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  summary: "Create glossary terms in bulk."
  parameters:
  - description: "An array of glossary term definitions to be created in bulk."
    name: "glossaryTerm"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createGlossaryTermsWithResponse(BinaryData glossaryTerm, RequestOptions requestOptions)"
  desc: "Create glossary terms in bulk.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         abbreviation: String\n         templateName: [\n             Object\n         ]\n         anchor: {\n             displayText: String\n             glossaryGuid: String\n             relationGuid: String\n         }\n         antonyms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n         createTime: Float\n         createdBy: String\n         updateTime: Float\n         updatedBy: String\n         status: String(Draft/Approved/Alert/Expired)\n         resources: [\n             {\n                 displayName: String\n                 url: String\n             }\n         ]\n         contacts: {\n             String: [\n                 {\n                     id: String\n                     info: String\n                 }\n             ]\n         }\n         attributes: {\n             String: {\n                 String: Object\n             }\n         }\n         assignedEntities: [\n             {\n                 guid: String\n                 typeName: String\n                 uniqueAttributes: {\n                     String: Object\n                 }\n                 displayText: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 relationshipType: String\n                 relationshipAttributes: {\n                     attributes: {\n                         String: Object\n                     }\n                     typeName: String\n                     lastModifiedTS: String\n                 }\n                 relationshipGuid: String\n                 relationshipStatus: String(ACTIVE/DELETED)\n             }\n         ]\n         categories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 relationGuid: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             }\n         ]\n         classifies: [\n             (recursive schema, see above)\n         ]\n         examples: [\n             String\n         ]\n         isA: [\n             (recursive schema, see above)\n         ]\n         preferredTerms: [\n             (recursive schema, see above)\n         ]\n         preferredToTerms: [\n             (recursive schema, see above)\n         ]\n         replacedBy: [\n             (recursive schema, see above)\n         ]\n         replacementTerms: [\n             (recursive schema, see above)\n         ]\n         seeAlso: [\n             (recursive schema, see above)\n         ]\n         synonyms: [\n             (recursive schema, see above)\n         ]\n         translatedTerms: [\n             (recursive schema, see above)\n         ]\n         translationTerms: [\n             (recursive schema, see above)\n         ]\n         usage: String\n         validValues: [\n             (recursive schema, see above)\n         ]\n         validValuesFor: [\n             (recursive schema, see above)\n         ]\n     }\n ]\n```\n\n**Response Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         abbreviation: String\n         templateName: [\n             Object\n         ]\n         anchor: {\n             displayText: String\n             glossaryGuid: String\n             relationGuid: String\n         }\n         antonyms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n         createTime: Float\n         createdBy: String\n         updateTime: Float\n         updatedBy: String\n         status: String(Draft/Approved/Alert/Expired)\n         resources: [\n             {\n                 displayName: String\n                 url: String\n             }\n         ]\n         contacts: {\n             String: [\n                 {\n                     id: String\n                     info: String\n                 }\n             ]\n         }\n         attributes: {\n             String: {\n                 String: Object\n             }\n         }\n         assignedEntities: [\n             {\n                 guid: String\n                 typeName: String\n                 uniqueAttributes: {\n                     String: Object\n                 }\n                 displayText: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 relationshipType: String\n                 relationshipAttributes: {\n                     attributes: {\n                         String: Object\n                     }\n                     typeName: String\n                     lastModifiedTS: String\n                 }\n                 relationshipGuid: String\n                 relationshipStatus: String(ACTIVE/DELETED)\n             }\n         ]\n         categories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 relationGuid: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             }\n         ]\n         classifies: [\n             (recursive schema, see above)\n         ]\n         examples: [\n             String\n         ]\n         isA: [\n             (recursive schema, see above)\n         ]\n         preferredTerms: [\n             (recursive schema, see above)\n         ]\n         preferredToTerms: [\n             (recursive schema, see above)\n         ]\n         replacedBy: [\n             (recursive schema, see above)\n         ]\n         replacementTerms: [\n             (recursive schema, see above)\n         ]\n         seeAlso: [\n             (recursive schema, see above)\n         ]\n         synonyms: [\n             (recursive schema, see above)\n         ]\n         translatedTerms: [\n             (recursive schema, see above)\n         ]\n         translationTerms: [\n             (recursive schema, see above)\n         ]\n         usage: String\n         validValues: [\n             (recursive schema, see above)\n         ]\n         validValuesFor: [\n             (recursive schema, see above)\n         ]\n     }\n ]\n```"
  returns:
    description: "if bulk glossary terms creation was successful along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.createGlossaryWithResponse(BinaryData atlasGlossary, RequestOptions requestOptions)"
  name: "createGlossaryWithResponse(BinaryData atlasGlossary, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.createGlossaryWithResponse(BinaryData atlasGlossary, RequestOptions requestOptions)"
  summary: "Create a glossary."
  parameters:
  - description: "Glossary definition, terms &amp;amp; categories can be anchored to a glossary. Using the\n     anchor attribute when creating the Term/Category."
    name: "atlasGlossary"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createGlossaryWithResponse(BinaryData atlasGlossary, RequestOptions requestOptions)"
  desc: "Create a glossary.\n\n**Request Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     language: String\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     usage: String\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     language: String\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     usage: String\n }\n```"
  returns:
    description: "atlasGlossary along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.deleteGlossaryCategoryWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.deleteGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  name: "deleteGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.deleteGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  summary: "Delete a glossary category."
  parameters:
  - description: "The globally unique identifier of the category."
    name: "categoryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  desc: "Delete a glossary category."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.deleteGlossaryTermWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.deleteGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  name: "deleteGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.deleteGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  summary: "Delete a glossary term."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  desc: "Delete a glossary term."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.deleteGlossaryWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.deleteGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  name: "deleteGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.deleteGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  summary: "Delete a glossary."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  desc: "Delete a glossary."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.deleteTermAssignmentFromEntitiesWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.deleteTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  name: "deleteTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.deleteTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  summary: "Delete the term assignment for the given list of related objects."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An array of related object IDs from which the term has to be dissociated."
    name: "relatedObjectIds"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  desc: "Delete the term assignment for the given list of related objects.\n\n**Request Body Schema**\n\n```java\n[\n     {\n         guid: String\n         typeName: String\n         uniqueAttributes: {\n             String: Object\n         }\n         displayText: String\n         entityStatus: String(ACTIVE/DELETED)\n         relationshipType: String\n         relationshipAttributes: {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n         }\n         relationshipGuid: String\n         relationshipStatus: String(ACTIVE/DELETED)\n     }\n ]\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.exportGlossaryTermsAsCsvWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.exportGlossaryTermsAsCsvWithResponse(String glossaryGuid, BinaryData termGuids, RequestOptions requestOptions)"
  name: "exportGlossaryTermsAsCsvWithResponse(String glossaryGuid, BinaryData termGuids, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.exportGlossaryTermsAsCsvWithResponse(String glossaryGuid, BinaryData termGuids, RequestOptions requestOptions)"
  summary: "Export Glossary Terms as csv file."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An array of term guids."
    name: "termGuids"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Flux<ByteBuffer>> exportGlossaryTermsAsCsvWithResponse(String glossaryGuid, BinaryData termGuids, RequestOptions requestOptions)"
  desc: "Export Glossary Terms as csv file.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\n[\n     String\n ]\n```\n\n**Response Body Schema**\n\n```java\nFlux\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.getDetailedGlossaryWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.getDetailedGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  name: "getDetailedGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.getDetailedGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  summary: "Get a specific glossary with detailed information."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getDetailedGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  desc: "Get a specific glossary with detailed information.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     language: String\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     usage: String\n     categoryInfo: {\n         String: {\n             guid: String\n             classifications: [\n                 (recursive schema, see above)\n             ]\n             longDescription: String\n             name: String\n             qualifiedName: String\n             shortDescription: String\n             lastModifiedTS: String\n             anchor: {\n                 displayText: String\n                 glossaryGuid: String\n                 relationGuid: String\n             }\n             childrenCategories: [\n                 (recursive schema, see above)\n             ]\n             parentCategory: (recursive schema, see parentCategory above)\n             terms: [\n                 (recursive schema, see above)\n             ]\n         }\n     }\n     termInfo: {\n         String: {\n             guid: String\n             classifications: [\n                 (recursive schema, see above)\n             ]\n             longDescription: String\n             name: String\n             qualifiedName: String\n             shortDescription: String\n             lastModifiedTS: String\n             abbreviation: String\n             templateName: [\n                 Object\n             ]\n             anchor: (recursive schema, see anchor above)\n             antonyms: [\n                 (recursive schema, see above)\n             ]\n             createTime: Float\n             createdBy: String\n             updateTime: Float\n             updatedBy: String\n             status: String(Draft/Approved/Alert/Expired)\n             resources: [\n                 {\n                     displayName: String\n                     url: String\n                 }\n             ]\n             contacts: {\n                 String: [\n                     {\n                         id: String\n                         info: String\n                     }\n                 ]\n             }\n             attributes: {\n                 String: {\n                     String: Object\n                 }\n             }\n             assignedEntities: [\n                 {\n                     guid: String\n                     typeName: String\n                     uniqueAttributes: {\n                         String: Object\n                     }\n                     displayText: String\n                     entityStatus: String(ACTIVE/DELETED)\n                     relationshipType: String\n                     relationshipAttributes: {\n                         attributes: {\n                             String: Object\n                         }\n                         typeName: String\n                         lastModifiedTS: String\n                     }\n                     relationshipGuid: String\n                     relationshipStatus: String(ACTIVE/DELETED)\n                 }\n             ]\n             categories: [\n                 {\n                     categoryGuid: String\n                     description: String\n                     displayText: String\n                     relationGuid: String\n                     status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 }\n             ]\n             classifies: [\n                 (recursive schema, see above)\n             ]\n             examples: [\n                 String\n             ]\n             isA: [\n                 (recursive schema, see above)\n             ]\n             preferredTerms: [\n                 (recursive schema, see above)\n             ]\n             preferredToTerms: [\n                 (recursive schema, see above)\n             ]\n             replacedBy: [\n                 (recursive schema, see above)\n             ]\n             replacementTerms: [\n                 (recursive schema, see above)\n             ]\n             seeAlso: [\n                 (recursive schema, see above)\n             ]\n             synonyms: [\n                 (recursive schema, see above)\n             ]\n             translatedTerms: [\n                 (recursive schema, see above)\n             ]\n             translationTerms: [\n                 (recursive schema, see above)\n             ]\n             usage: String\n             validValues: [\n                 (recursive schema, see above)\n             ]\n             validValuesFor: [\n                 (recursive schema, see above)\n             ]\n         }\n     }\n }\n```"
  returns:
    description: "a specific glossary with detailed information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.getEntitiesAssignedWithTermWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.getEntitiesAssignedWithTermWithResponse(String termGuid, RequestOptions requestOptions)"
  name: "getEntitiesAssignedWithTermWithResponse(String termGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.getEntitiesAssignedWithTermWithResponse(String termGuid, RequestOptions requestOptions)"
  summary: "Get all related objects assigned with the specified term."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getEntitiesAssignedWithTermWithResponse(String termGuid, RequestOptions requestOptions)"
  desc: "Get all related objects assigned with the specified term.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ---------------------------------------------- |\n    | Name   | Type    | Required | Description                                    |\n    | limit  | Integer | No       | The page size - by default there is no paging. |\n    | offset | Integer | No       | The offset for pagination purpose.             |\n    | sort   | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         guid: String\n         typeName: String\n         uniqueAttributes: {\n             String: Object\n         }\n         displayText: String\n         entityStatus: String(ACTIVE/DELETED)\n         relationshipType: String\n         relationshipAttributes: {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n         }\n         relationshipGuid: String\n         relationshipStatus: String(ACTIVE/DELETED)\n     }\n ]\n```"
  returns:
    description: "all related objects assigned with the specified term along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.getGlossaryCategoryWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.getGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  name: "getGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.getGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  summary: "Get specific glossary category by its GUID."
  parameters:
  - description: "The globally unique identifier of the category."
    name: "categoryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getGlossaryCategoryWithResponse(String categoryGuid, RequestOptions requestOptions)"
  desc: "Get specific glossary category by its GUID.\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     childrenCategories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     parentCategory: (recursive schema, see parentCategory above)\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n }\n```"
  returns:
    description: "specific glossary category by its GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.getGlossaryTermWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.getGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  name: "getGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.getGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  summary: "Get a specific glossary term by its GUID."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getGlossaryTermWithResponse(String termGuid, RequestOptions requestOptions)"
  desc: "Get a specific glossary term by its GUID.\n\n**Query Parameters**\n\n    | ------------------------ | ------------ | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                     | Type         | Required | Description                                                                                                                                                                                                                                        |\n    | includeTermHierarchy     | Boolean      | No       | Whether include term hierarchy                                                                                                                                                                                                                     |\n    | excludeRelationshipTypes | List<String> | No       | An array of relationship types which need to be excluded. Call <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref> to add string to array. |\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     abbreviation: String\n     templateName: [\n         Object\n     ]\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     antonyms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     createTime: Float\n     createdBy: String\n     updateTime: Float\n     updatedBy: String\n     status: String(Draft/Approved/Alert/Expired)\n     resources: [\n         {\n             displayName: String\n             url: String\n         }\n     ]\n     contacts: {\n         String: [\n             {\n                 id: String\n                 info: String\n             }\n         ]\n     }\n     attributes: {\n         String: {\n             String: Object\n         }\n     }\n     assignedEntities: [\n         {\n             guid: String\n             typeName: String\n             uniqueAttributes: {\n                 String: Object\n             }\n             displayText: String\n             entityStatus: String(ACTIVE/DELETED)\n             relationshipType: String\n             relationshipAttributes: {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n             }\n             relationshipGuid: String\n             relationshipStatus: String(ACTIVE/DELETED)\n         }\n     ]\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             relationGuid: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         }\n     ]\n     classifies: [\n         (recursive schema, see above)\n     ]\n     examples: [\n         String\n     ]\n     isA: [\n         (recursive schema, see above)\n     ]\n     preferredTerms: [\n         (recursive schema, see above)\n     ]\n     preferredToTerms: [\n         (recursive schema, see above)\n     ]\n     replacedBy: [\n         (recursive schema, see above)\n     ]\n     replacementTerms: [\n         (recursive schema, see above)\n     ]\n     seeAlso: [\n         (recursive schema, see above)\n     ]\n     synonyms: [\n         (recursive schema, see above)\n     ]\n     translatedTerms: [\n         (recursive schema, see above)\n     ]\n     translationTerms: [\n         (recursive schema, see above)\n     ]\n     usage: String\n     validValues: [\n         (recursive schema, see above)\n     ]\n     validValuesFor: [\n         (recursive schema, see above)\n     ]\n }\n```"
  returns:
    description: "a specific glossary term by its GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.getGlossaryWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.getGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  name: "getGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.getGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  summary: "Get a specific Glossary by its GUID."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getGlossaryWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  desc: "Get a specific Glossary by its GUID.\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     language: String\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     usage: String\n }\n```"
  returns:
    description: "a specific Glossary by its GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.getImportCsvOperationStatusWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.getImportCsvOperationStatusWithResponse(String operationGuid, RequestOptions requestOptions)"
  name: "getImportCsvOperationStatusWithResponse(String operationGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.getImportCsvOperationStatusWithResponse(String operationGuid, RequestOptions requestOptions)"
  summary: "Get the status of import csv operation."
  parameters:
  - description: "The globally unique identifier for async operation/job."
    name: "operationGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getImportCsvOperationStatusWithResponse(String operationGuid, RequestOptions requestOptions)"
  desc: "Get the status of import csv operation.\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     status: String(NotStarted/Succeeded/Failed/Running)\n     createTime: String\n     lastUpdateTime: String\n     properties: {\n         importedTerms: String\n         totalTermsDetected: String\n     }\n     error: {\n         errorCode: Integer\n         errorMessage: String\n     }\n }\n```"
  returns:
    description: "the status of import csv operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listCategoryTermsWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listCategoryTermsWithResponse(String categoryGuid, RequestOptions requestOptions)"
  name: "listCategoryTermsWithResponse(String categoryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listCategoryTermsWithResponse(String categoryGuid, RequestOptions requestOptions)"
  summary: "Get all terms associated with the specific category."
  parameters:
  - description: "The globally unique identifier of the category."
    name: "categoryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listCategoryTermsWithResponse(String categoryGuid, RequestOptions requestOptions)"
  desc: "Get all terms associated with the specific category.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ---------------------------------------------- |\n    | Name   | Type    | Required | Description                                    |\n    | limit  | Integer | No       | The page size - by default there is no paging. |\n    | offset | Integer | No       | The offset for pagination purpose.             |\n    | sort   | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         description: String\n         displayText: String\n         expression: String\n         relationGuid: String\n         source: String\n         status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         steward: String\n         termGuid: String\n     }\n ]\n```"
  returns:
    description: "all terms associated with the specific category along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossariesWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossariesWithResponse(RequestOptions requestOptions)"
  name: "listGlossariesWithResponse(RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listGlossariesWithResponse(RequestOptions requestOptions)"
  summary: "Get all glossaries registered with Atlas."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listGlossariesWithResponse(RequestOptions requestOptions)"
  desc: "Get all glossaries registered with Atlas.\n\n**Query Parameters**\n\n    | ------------------------ | ------- | -------- | ---------------------------------------------- |\n    | Name                     | Type    | Required | Description                                    |\n    | limit                    | Integer | No       | The page size - by default there is no paging. |\n    | offset                   | Integer | No       | The offset for pagination purpose.             |\n    | sort                     | String  | No       | The sort order, ASC (default) or DESC.         |\n    | ignoreTermsAndCategories | Boolean | No       | Whether ignore terms and categories            |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         categories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 parentCategoryGuid: String\n                 relationGuid: String\n             }\n         ]\n         language: String\n         terms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n         usage: String\n     }\n ]\n```"
  returns:
    description: "all glossaries registered with Atlas along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryCategoriesHeadersWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryCategoriesHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  name: "listGlossaryCategoriesHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listGlossaryCategoriesHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  summary: "Get the category headers belonging to a specific glossary."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listGlossaryCategoriesHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  desc: "Get the category headers belonging to a specific glossary.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ---------------------------------------------- |\n    | Name   | Type    | Required | Description                                    |\n    | limit  | Integer | No       | The page size - by default there is no paging. |\n    | offset | Integer | No       | The offset for pagination purpose.             |\n    | sort   | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         categoryGuid: String\n         description: String\n         displayText: String\n         parentCategoryGuid: String\n         relationGuid: String\n     }\n ]\n```"
  returns:
    description: "the category headers belonging to a specific glossary along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryCategoriesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryCategoriesWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  name: "listGlossaryCategoriesWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listGlossaryCategoriesWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  summary: "Get the categories belonging to a specific glossary."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listGlossaryCategoriesWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  desc: "Get the categories belonging to a specific glossary.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ---------------------------------------------- |\n    | Name   | Type    | Required | Description                                    |\n    | limit  | Integer | No       | The page size - by default there is no paging. |\n    | offset | Integer | No       | The offset for pagination purpose.             |\n    | sort   | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         anchor: {\n             displayText: String\n             glossaryGuid: String\n             relationGuid: String\n         }\n         childrenCategories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 parentCategoryGuid: String\n                 relationGuid: String\n             }\n         ]\n         parentCategory: (recursive schema, see parentCategory above)\n         terms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n     }\n ]\n```"
  returns:
    description: "the categories belonging to a specific glossary along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryTermHeadersWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryTermHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  name: "listGlossaryTermHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listGlossaryTermHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  summary: "Get term headers belonging to a specific glossary."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listGlossaryTermHeadersWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  desc: "Get term headers belonging to a specific glossary.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ---------------------------------------------- |\n    | Name   | Type    | Required | Description                                    |\n    | limit  | Integer | No       | The page size - by default there is no paging. |\n    | offset | Integer | No       | The offset for pagination purpose.             |\n    | sort   | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         description: String\n         displayText: String\n         expression: String\n         relationGuid: String\n         source: String\n         status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         steward: String\n         termGuid: String\n     }\n ]\n```"
  returns:
    description: "term headers belonging to a specific glossary along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryTermsWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listGlossaryTermsWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  name: "listGlossaryTermsWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listGlossaryTermsWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  summary: "Get terms belonging to a specific glossary."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listGlossaryTermsWithResponse(String glossaryGuid, RequestOptions requestOptions)"
  desc: "Get terms belonging to a specific glossary.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ---------------------------------------------- |\n    | Name                 | Type    | Required | Description                                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy                 |\n    | limit                | Integer | No       | The page size - by default there is no paging. |\n    | offset               | Integer | No       | The offset for pagination purpose.             |\n    | sort                 | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         abbreviation: String\n         templateName: [\n             Object\n         ]\n         anchor: {\n             displayText: String\n             glossaryGuid: String\n             relationGuid: String\n         }\n         antonyms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n         createTime: Float\n         createdBy: String\n         updateTime: Float\n         updatedBy: String\n         status: String(Draft/Approved/Alert/Expired)\n         resources: [\n             {\n                 displayName: String\n                 url: String\n             }\n         ]\n         contacts: {\n             String: [\n                 {\n                     id: String\n                     info: String\n                 }\n             ]\n         }\n         attributes: {\n             String: {\n                 String: Object\n             }\n         }\n         assignedEntities: [\n             {\n                 guid: String\n                 typeName: String\n                 uniqueAttributes: {\n                     String: Object\n                 }\n                 displayText: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 relationshipType: String\n                 relationshipAttributes: {\n                     attributes: {\n                         String: Object\n                     }\n                     typeName: String\n                     lastModifiedTS: String\n                 }\n                 relationshipGuid: String\n                 relationshipStatus: String(ACTIVE/DELETED)\n             }\n         ]\n         categories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 relationGuid: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             }\n         ]\n         classifies: [\n             (recursive schema, see above)\n         ]\n         examples: [\n             String\n         ]\n         isA: [\n             (recursive schema, see above)\n         ]\n         preferredTerms: [\n             (recursive schema, see above)\n         ]\n         preferredToTerms: [\n             (recursive schema, see above)\n         ]\n         replacedBy: [\n             (recursive schema, see above)\n         ]\n         replacementTerms: [\n             (recursive schema, see above)\n         ]\n         seeAlso: [\n             (recursive schema, see above)\n         ]\n         synonyms: [\n             (recursive schema, see above)\n         ]\n         translatedTerms: [\n             (recursive schema, see above)\n         ]\n         translationTerms: [\n             (recursive schema, see above)\n         ]\n         usage: String\n         validValues: [\n             (recursive schema, see above)\n         ]\n         validValuesFor: [\n             (recursive schema, see above)\n         ]\n     }\n ]\n```"
  returns:
    description: "terms belonging to a specific glossary along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listRelatedCategoriesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listRelatedCategoriesWithResponse(String categoryGuid, RequestOptions requestOptions)"
  name: "listRelatedCategoriesWithResponse(String categoryGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listRelatedCategoriesWithResponse(String categoryGuid, RequestOptions requestOptions)"
  summary: "Get all related categories (parent and children)."
  parameters:
  - description: "The globally unique identifier of the category."
    name: "categoryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listRelatedCategoriesWithResponse(String categoryGuid, RequestOptions requestOptions)"
  desc: "Get all related categories (parent and children). Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ---------------------------------------------- |\n    | Name   | Type    | Required | Description                                    |\n    | limit  | Integer | No       | The page size - by default there is no paging. |\n    | offset | Integer | No       | The offset for pagination purpose.             |\n    | sort   | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n{\n     String: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n }\n```"
  returns:
    description: "all related categories (parent and children) along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listRelatedTermsWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listRelatedTermsWithResponse(String termGuid, RequestOptions requestOptions)"
  name: "listRelatedTermsWithResponse(String termGuid, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listRelatedTermsWithResponse(String termGuid, RequestOptions requestOptions)"
  summary: "Get all related terms for a specific term by its GUID."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listRelatedTermsWithResponse(String termGuid, RequestOptions requestOptions)"
  desc: "Get all related terms for a specific term by its GUID. Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ---------------------------------------------- |\n    | Name   | Type    | Required | Description                                    |\n    | limit  | Integer | No       | The page size - by default there is no paging. |\n    | offset | Integer | No       | The offset for pagination purpose.             |\n    | sort   | String  | No       | The sort order, ASC (default) or DESC.         |\n\n**Response Body Schema**\n\n```java\n{\n     String: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n }\n```"
  returns:
    description: "all related terms for a specific term by its GUID along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.listTermsByGlossaryNameWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.listTermsByGlossaryNameWithResponse(String glossaryName, RequestOptions requestOptions)"
  name: "listTermsByGlossaryNameWithResponse(String glossaryName, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.listTermsByGlossaryNameWithResponse(String glossaryName, RequestOptions requestOptions)"
  summary: "Get terms by glossary name."
  parameters:
  - description: "The name of the glossary."
    name: "glossaryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> listTermsByGlossaryNameWithResponse(String glossaryName, RequestOptions requestOptions)"
  desc: "Get terms by glossary name.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ---------------------------------------------- |\n    | Name                 | Type    | Required | Description                                    |\n    | limit                | Integer | No       | The page size - by default there is no paging. |\n    | offset               | Integer | No       | The offset for pagination purpose.             |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy                 |\n\n**Response Body Schema**\n\n```java\n[\n     {\n         guid: String\n         classifications: [\n             {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n                 entityGuid: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 removePropagationsOnEntityDelete: Boolean\n                 validityPeriods: [\n                     {\n                         endTime: String\n                         startTime: String\n                         timeZone: String\n                     }\n                 ]\n                 source: String\n                 sourceDetails: {\n                     String: Object\n                 }\n             }\n         ]\n         longDescription: String\n         name: String\n         qualifiedName: String\n         shortDescription: String\n         lastModifiedTS: String\n         abbreviation: String\n         templateName: [\n             Object\n         ]\n         anchor: {\n             displayText: String\n             glossaryGuid: String\n             relationGuid: String\n         }\n         antonyms: [\n             {\n                 description: String\n                 displayText: String\n                 expression: String\n                 relationGuid: String\n                 source: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n                 steward: String\n                 termGuid: String\n             }\n         ]\n         createTime: Float\n         createdBy: String\n         updateTime: Float\n         updatedBy: String\n         status: String(Draft/Approved/Alert/Expired)\n         resources: [\n             {\n                 displayName: String\n                 url: String\n             }\n         ]\n         contacts: {\n             String: [\n                 {\n                     id: String\n                     info: String\n                 }\n             ]\n         }\n         attributes: {\n             String: {\n                 String: Object\n             }\n         }\n         assignedEntities: [\n             {\n                 guid: String\n                 typeName: String\n                 uniqueAttributes: {\n                     String: Object\n                 }\n                 displayText: String\n                 entityStatus: String(ACTIVE/DELETED)\n                 relationshipType: String\n                 relationshipAttributes: {\n                     attributes: {\n                         String: Object\n                     }\n                     typeName: String\n                     lastModifiedTS: String\n                 }\n                 relationshipGuid: String\n                 relationshipStatus: String(ACTIVE/DELETED)\n             }\n         ]\n         categories: [\n             {\n                 categoryGuid: String\n                 description: String\n                 displayText: String\n                 relationGuid: String\n                 status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             }\n         ]\n         classifies: [\n             (recursive schema, see above)\n         ]\n         examples: [\n             String\n         ]\n         isA: [\n             (recursive schema, see above)\n         ]\n         preferredTerms: [\n             (recursive schema, see above)\n         ]\n         preferredToTerms: [\n             (recursive schema, see above)\n         ]\n         replacedBy: [\n             (recursive schema, see above)\n         ]\n         replacementTerms: [\n             (recursive schema, see above)\n         ]\n         seeAlso: [\n             (recursive schema, see above)\n         ]\n         synonyms: [\n             (recursive schema, see above)\n         ]\n         translatedTerms: [\n             (recursive schema, see above)\n         ]\n         translationTerms: [\n             (recursive schema, see above)\n         ]\n         usage: String\n         validValues: [\n             (recursive schema, see above)\n         ]\n         validValuesFor: [\n             (recursive schema, see above)\n         ]\n     }\n ]\n```"
  returns:
    description: "terms by glossary name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.partialUpdateGlossaryCategoryWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.partialUpdateGlossaryCategoryWithResponse(String categoryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  name: "partialUpdateGlossaryCategoryWithResponse(String categoryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.partialUpdateGlossaryCategoryWithResponse(String categoryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  summary: "Update the glossary category partially."
  parameters:
  - description: "The globally unique identifier of the category."
    name: "categoryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A map containing keys as attribute names and values as corresponding attribute values for\n     partial update."
    name: "partialUpdates"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> partialUpdateGlossaryCategoryWithResponse(String categoryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  desc: "Update the glossary category partially.\n\n**Request Body Schema**\n\n```java\n{\n     String: String\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     childrenCategories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     parentCategory: (recursive schema, see parentCategory above)\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n }\n```"
  returns:
    description: "atlasGlossaryCategory along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.partialUpdateGlossaryTermWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.partialUpdateGlossaryTermWithResponse(String termGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  name: "partialUpdateGlossaryTermWithResponse(String termGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.partialUpdateGlossaryTermWithResponse(String termGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  summary: "Update the glossary term partially."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A map containing keys as attribute names and values as corresponding attribute values to be\n     updated."
    name: "partialUpdates"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> partialUpdateGlossaryTermWithResponse(String termGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  desc: "Update the glossary term partially.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\n{\n     String: String\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     abbreviation: String\n     templateName: [\n         Object\n     ]\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     antonyms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     createTime: Float\n     createdBy: String\n     updateTime: Float\n     updatedBy: String\n     status: String(Draft/Approved/Alert/Expired)\n     resources: [\n         {\n             displayName: String\n             url: String\n         }\n     ]\n     contacts: {\n         String: [\n             {\n                 id: String\n                 info: String\n             }\n         ]\n     }\n     attributes: {\n         String: {\n             String: Object\n         }\n     }\n     assignedEntities: [\n         {\n             guid: String\n             typeName: String\n             uniqueAttributes: {\n                 String: Object\n             }\n             displayText: String\n             entityStatus: String(ACTIVE/DELETED)\n             relationshipType: String\n             relationshipAttributes: {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n             }\n             relationshipGuid: String\n             relationshipStatus: String(ACTIVE/DELETED)\n         }\n     ]\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             relationGuid: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         }\n     ]\n     classifies: [\n         (recursive schema, see above)\n     ]\n     examples: [\n         String\n     ]\n     isA: [\n         (recursive schema, see above)\n     ]\n     preferredTerms: [\n         (recursive schema, see above)\n     ]\n     preferredToTerms: [\n         (recursive schema, see above)\n     ]\n     replacedBy: [\n         (recursive schema, see above)\n     ]\n     replacementTerms: [\n         (recursive schema, see above)\n     ]\n     seeAlso: [\n         (recursive schema, see above)\n     ]\n     synonyms: [\n         (recursive schema, see above)\n     ]\n     translatedTerms: [\n         (recursive schema, see above)\n     ]\n     translationTerms: [\n         (recursive schema, see above)\n     ]\n     usage: String\n     validValues: [\n         (recursive schema, see above)\n     ]\n     validValuesFor: [\n         (recursive schema, see above)\n     ]\n }\n```"
  returns:
    description: "atlasGlossaryTerm along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.partialUpdateGlossaryWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.partialUpdateGlossaryWithResponse(String glossaryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  name: "partialUpdateGlossaryWithResponse(String glossaryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.partialUpdateGlossaryWithResponse(String glossaryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  summary: "Update the glossary partially."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A map containing keys as attribute names and values as corresponding attribute values."
    name: "partialUpdates"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> partialUpdateGlossaryWithResponse(String glossaryGuid, BinaryData partialUpdates, RequestOptions requestOptions)"
  desc: "Update the glossary partially. Some properties such as qualifiedName are not allowed to be updated.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\n{\n     String: String\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     language: String\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     usage: String\n }\n```"
  returns:
    description: "atlasGlossary along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.removeTermAssignmentFromEntitiesWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.removeTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  name: "removeTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.removeTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  summary: "Delete the term assignment for the given list of related objects."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An array of related object IDs from which the term has to be dissociated."
    name: "relatedObjectIds"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> removeTermAssignmentFromEntitiesWithResponse(String termGuid, BinaryData relatedObjectIds, RequestOptions requestOptions)"
  desc: "Delete the term assignment for the given list of related objects.\n\n**Request Body Schema**\n\n```java\n[\n     {\n         guid: String\n         typeName: String\n         uniqueAttributes: {\n             String: Object\n         }\n         displayText: String\n         entityStatus: String(ACTIVE/DELETED)\n         relationshipType: String\n         relationshipAttributes: {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n         }\n         relationshipGuid: String\n         relationshipStatus: String(ACTIVE/DELETED)\n     }\n ]\n```"
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.updateGlossaryCategoryWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.updateGlossaryCategoryWithResponse(String categoryGuid, BinaryData glossaryCategory, RequestOptions requestOptions)"
  name: "updateGlossaryCategoryWithResponse(String categoryGuid, BinaryData glossaryCategory, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.updateGlossaryCategoryWithResponse(String categoryGuid, BinaryData glossaryCategory, RequestOptions requestOptions)"
  summary: "Update the given glossary category by its GUID."
  parameters:
  - description: "The globally unique identifier of the category."
    name: "categoryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The glossary category to be updated."
    name: "glossaryCategory"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateGlossaryCategoryWithResponse(String categoryGuid, BinaryData glossaryCategory, RequestOptions requestOptions)"
  desc: "Update the given glossary category by its GUID.\n\n**Request Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     childrenCategories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     parentCategory: (recursive schema, see parentCategory above)\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     childrenCategories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     parentCategory: (recursive schema, see parentCategory above)\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n }\n```"
  returns:
    description: "atlasGlossaryCategory along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.updateGlossaryTermWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.updateGlossaryTermWithResponse(String termGuid, BinaryData glossaryTerm, RequestOptions requestOptions)"
  name: "updateGlossaryTermWithResponse(String termGuid, BinaryData glossaryTerm, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.updateGlossaryTermWithResponse(String termGuid, BinaryData glossaryTerm, RequestOptions requestOptions)"
  summary: "Update the given glossary term by its GUID."
  parameters:
  - description: "The globally unique identifier for glossary term."
    name: "termGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The glossary term to be updated."
    name: "glossaryTerm"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateGlossaryTermWithResponse(String termGuid, BinaryData glossaryTerm, RequestOptions requestOptions)"
  desc: "Update the given glossary term by its GUID.\n\n**Query Parameters**\n\n    | -------------------- | ------- | -------- | ------------------------------ |\n    | Name                 | Type    | Required | Description                    |\n    | includeTermHierarchy | Boolean | No       | Whether include term hierarchy |\n\n**Request Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     abbreviation: String\n     templateName: [\n         Object\n     ]\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     antonyms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     createTime: Float\n     createdBy: String\n     updateTime: Float\n     updatedBy: String\n     status: String(Draft/Approved/Alert/Expired)\n     resources: [\n         {\n             displayName: String\n             url: String\n         }\n     ]\n     contacts: {\n         String: [\n             {\n                 id: String\n                 info: String\n             }\n         ]\n     }\n     attributes: {\n         String: {\n             String: Object\n         }\n     }\n     assignedEntities: [\n         {\n             guid: String\n             typeName: String\n             uniqueAttributes: {\n                 String: Object\n             }\n             displayText: String\n             entityStatus: String(ACTIVE/DELETED)\n             relationshipType: String\n             relationshipAttributes: {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n             }\n             relationshipGuid: String\n             relationshipStatus: String(ACTIVE/DELETED)\n         }\n     ]\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             relationGuid: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         }\n     ]\n     classifies: [\n         (recursive schema, see above)\n     ]\n     examples: [\n         String\n     ]\n     isA: [\n         (recursive schema, see above)\n     ]\n     preferredTerms: [\n         (recursive schema, see above)\n     ]\n     preferredToTerms: [\n         (recursive schema, see above)\n     ]\n     replacedBy: [\n         (recursive schema, see above)\n     ]\n     replacementTerms: [\n         (recursive schema, see above)\n     ]\n     seeAlso: [\n         (recursive schema, see above)\n     ]\n     synonyms: [\n         (recursive schema, see above)\n     ]\n     translatedTerms: [\n         (recursive schema, see above)\n     ]\n     translationTerms: [\n         (recursive schema, see above)\n     ]\n     usage: String\n     validValues: [\n         (recursive schema, see above)\n     ]\n     validValuesFor: [\n         (recursive schema, see above)\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     abbreviation: String\n     templateName: [\n         Object\n     ]\n     anchor: {\n         displayText: String\n         glossaryGuid: String\n         relationGuid: String\n     }\n     antonyms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     createTime: Float\n     createdBy: String\n     updateTime: Float\n     updatedBy: String\n     status: String(Draft/Approved/Alert/Expired)\n     resources: [\n         {\n             displayName: String\n             url: String\n         }\n     ]\n     contacts: {\n         String: [\n             {\n                 id: String\n                 info: String\n             }\n         ]\n     }\n     attributes: {\n         String: {\n             String: Object\n         }\n     }\n     assignedEntities: [\n         {\n             guid: String\n             typeName: String\n             uniqueAttributes: {\n                 String: Object\n             }\n             displayText: String\n             entityStatus: String(ACTIVE/DELETED)\n             relationshipType: String\n             relationshipAttributes: {\n                 attributes: {\n                     String: Object\n                 }\n                 typeName: String\n                 lastModifiedTS: String\n             }\n             relationshipGuid: String\n             relationshipStatus: String(ACTIVE/DELETED)\n         }\n     ]\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             relationGuid: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n         }\n     ]\n     classifies: [\n         (recursive schema, see above)\n     ]\n     examples: [\n         String\n     ]\n     isA: [\n         (recursive schema, see above)\n     ]\n     preferredTerms: [\n         (recursive schema, see above)\n     ]\n     preferredToTerms: [\n         (recursive schema, see above)\n     ]\n     replacedBy: [\n         (recursive schema, see above)\n     ]\n     replacementTerms: [\n         (recursive schema, see above)\n     ]\n     seeAlso: [\n         (recursive schema, see above)\n     ]\n     synonyms: [\n         (recursive schema, see above)\n     ]\n     translatedTerms: [\n         (recursive schema, see above)\n     ]\n     translationTerms: [\n         (recursive schema, see above)\n     ]\n     usage: String\n     validValues: [\n         (recursive schema, see above)\n     ]\n     validValuesFor: [\n         (recursive schema, see above)\n     ]\n }\n```"
  returns:
    description: "atlasGlossaryTerm along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.catalog.GlossaryClient.updateGlossaryWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.catalog.GlossaryClient.updateGlossaryWithResponse(String glossaryGuid, BinaryData updatedGlossary, RequestOptions requestOptions)"
  name: "updateGlossaryWithResponse(String glossaryGuid, BinaryData updatedGlossary, RequestOptions requestOptions)"
  nameWithType: "GlossaryClient.updateGlossaryWithResponse(String glossaryGuid, BinaryData updatedGlossary, RequestOptions requestOptions)"
  summary: "Update the given glossary."
  parameters:
  - description: "The globally unique identifier for glossary."
    name: "glossaryGuid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The glossary definition to be updated."
    name: "updatedGlossary"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> updateGlossaryWithResponse(String glossaryGuid, BinaryData updatedGlossary, RequestOptions requestOptions)"
  desc: "Update the given glossary.\n\n**Request Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     language: String\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     usage: String\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     guid: String\n     classifications: [\n         {\n             attributes: {\n                 String: Object\n             }\n             typeName: String\n             lastModifiedTS: String\n             entityGuid: String\n             entityStatus: String(ACTIVE/DELETED)\n             removePropagationsOnEntityDelete: Boolean\n             validityPeriods: [\n                 {\n                     endTime: String\n                     startTime: String\n                     timeZone: String\n                 }\n             ]\n             source: String\n             sourceDetails: {\n                 String: Object\n             }\n         }\n     ]\n     longDescription: String\n     name: String\n     qualifiedName: String\n     shortDescription: String\n     lastModifiedTS: String\n     categories: [\n         {\n             categoryGuid: String\n             description: String\n             displayText: String\n             parentCategoryGuid: String\n             relationGuid: String\n         }\n     ]\n     language: String\n     terms: [\n         {\n             description: String\n             displayText: String\n             expression: String\n             relationGuid: String\n             source: String\n             status: String(DRAFT/ACTIVE/DEPRECATED/OBSOLETE/OTHER)\n             steward: String\n             termGuid: String\n         }\n     ]\n     usage: String\n }\n```"
  returns:
    description: "atlasGlossary along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous PurviewCatalogClient type."
metadata: {}
package: "com.azure.analytics.purview.catalog"
artifact: com.azure:azure-analytics-purview-catalog:1.0.0-beta.4
