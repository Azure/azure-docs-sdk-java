### YamlMime:JavaType
uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet"
fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet"
name: "ContainerAppProbeHttpGet"
nameWithType: "ContainerAppProbeHttpGet"
summary: "HTTPGet specifies the http request to perform."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContainerAppProbeHttpGet"
constructors:
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.ContainerAppProbeHttpGet()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.ContainerAppProbeHttpGet()"
  name: "ContainerAppProbeHttpGet()"
  nameWithType: "ContainerAppProbeHttpGet.ContainerAppProbeHttpGet()"
  syntax: "public ContainerAppProbeHttpGet()"
methods:
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.host()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.host()"
  name: "host()"
  nameWithType: "ContainerAppProbeHttpGet.host()"
  summary: "Get the host property: Host name to connect to, defaults to the pod IP."
  syntax: "public String host()"
  desc: "Get the host property: Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
  returns:
    description: "the host value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.httpHeaders()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.httpHeaders()"
  name: "httpHeaders()"
  nameWithType: "ContainerAppProbeHttpGet.httpHeaders()"
  summary: "Get the http<wbr>Headers property: Custom headers to set in the request."
  syntax: "public List<ContainerAppProbeHttpGetHttpHeadersItem> httpHeaders()"
  desc: "Get the httpHeaders property: Custom headers to set in the request. HTTP allows repeated headers."
  returns:
    description: "the httpHeaders value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem?alt=com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem&text=ContainerAppProbeHttpGetHttpHeadersItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.path()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.path()"
  name: "path()"
  nameWithType: "ContainerAppProbeHttpGet.path()"
  summary: "Get the path property: Path to access on the HTTP server."
  syntax: "public String path()"
  desc: "Get the path property: Path to access on the HTTP server."
  returns:
    description: "the path value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.port()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.port()"
  name: "port()"
  nameWithType: "ContainerAppProbeHttpGet.port()"
  summary: "Get the port property: Name or number of the port to access on the container."
  syntax: "public int port()"
  desc: "Get the port property: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA\\_SVC\\_NAME."
  returns:
    description: "the port value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.scheme()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.scheme()"
  name: "scheme()"
  nameWithType: "ContainerAppProbeHttpGet.scheme()"
  summary: "Get the scheme property: Scheme to use for connecting to the host."
  syntax: "public Scheme scheme()"
  desc: "Get the scheme property: Scheme to use for connecting to the host. Defaults to HTTP."
  returns:
    description: "the scheme value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Scheme?alt=com.azure.resourcemanager.appcontainers.models.Scheme&text=Scheme\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.validate()"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.validate()"
  name: "validate()"
  nameWithType: "ContainerAppProbeHttpGet.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withHost(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withHost(String host)"
  name: "withHost(String host)"
  nameWithType: "ContainerAppProbeHttpGet.withHost(String host)"
  summary: "Set the host property: Host name to connect to, defaults to the pod IP."
  parameters:
  - description: "the host value to set."
    name: "host"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerAppProbeHttpGet withHost(String host)"
  desc: "Set the host property: Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
  returns:
    description: "the ContainerAppProbeHttpGet object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet?alt=com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet&text=ContainerAppProbeHttpGet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withHttpHeaders(java.util.List<com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem>)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withHttpHeaders(List<ContainerAppProbeHttpGetHttpHeadersItem> httpHeaders)"
  name: "withHttpHeaders(List<ContainerAppProbeHttpGetHttpHeadersItem> httpHeaders)"
  nameWithType: "ContainerAppProbeHttpGet.withHttpHeaders(List<ContainerAppProbeHttpGetHttpHeadersItem> httpHeaders)"
  summary: "Set the http<wbr>Headers property: Custom headers to set in the request."
  parameters:
  - description: "the httpHeaders value to set."
    name: "httpHeaders"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem?alt=com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGetHttpHeadersItem&text=ContainerAppProbeHttpGetHttpHeadersItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ContainerAppProbeHttpGet withHttpHeaders(List<ContainerAppProbeHttpGetHttpHeadersItem> httpHeaders)"
  desc: "Set the httpHeaders property: Custom headers to set in the request. HTTP allows repeated headers."
  returns:
    description: "the ContainerAppProbeHttpGet object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet?alt=com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet&text=ContainerAppProbeHttpGet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withPath(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withPath(String path)"
  name: "withPath(String path)"
  nameWithType: "ContainerAppProbeHttpGet.withPath(String path)"
  summary: "Set the path property: Path to access on the HTTP server."
  parameters:
  - description: "the path value to set."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerAppProbeHttpGet withPath(String path)"
  desc: "Set the path property: Path to access on the HTTP server."
  returns:
    description: "the ContainerAppProbeHttpGet object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet?alt=com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet&text=ContainerAppProbeHttpGet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withPort(int)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withPort(int port)"
  name: "withPort(int port)"
  nameWithType: "ContainerAppProbeHttpGet.withPort(int port)"
  summary: "Set the port property: Name or number of the port to access on the container."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerAppProbeHttpGet withPort(int port)"
  desc: "Set the port property: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA\\_SVC\\_NAME."
  returns:
    description: "the ContainerAppProbeHttpGet object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet?alt=com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet&text=ContainerAppProbeHttpGet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withScheme(com.azure.resourcemanager.appcontainers.models.Scheme)"
  fullName: "com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet.withScheme(Scheme scheme)"
  name: "withScheme(Scheme scheme)"
  nameWithType: "ContainerAppProbeHttpGet.withScheme(Scheme scheme)"
  summary: "Set the scheme property: Scheme to use for connecting to the host."
  parameters:
  - description: "the scheme value to set."
    name: "scheme"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Scheme?alt=com.azure.resourcemanager.appcontainers.models.Scheme&text=Scheme\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerAppProbeHttpGet withScheme(Scheme scheme)"
  desc: "Set the scheme property: Scheme to use for connecting to the host. Defaults to HTTP."
  returns:
    description: "the ContainerAppProbeHttpGet object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet?alt=com.azure.resourcemanager.appcontainers.models.ContainerAppProbeHttpGet&text=ContainerAppProbeHttpGet\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "HTTPGet specifies the http request to perform."
metadata: {}
package: "com.azure.resourcemanager.appcontainers.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appcontainers:1.0.0-beta.3
