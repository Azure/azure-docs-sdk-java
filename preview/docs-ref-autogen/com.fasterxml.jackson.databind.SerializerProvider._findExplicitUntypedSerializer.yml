### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.SerializerProvider._findExplicitUntypedSerializer*"
fullName: "com.fasterxml.jackson.databind.SerializerProvider._findExplicitUntypedSerializer"
name: "_findExplicitUntypedSerializer"
nameWithType: "SerializerProvider._findExplicitUntypedSerializer"
members:
- uid: "com.fasterxml.jackson.databind.SerializerProvider._findExplicitUntypedSerializer(java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider._findExplicitUntypedSerializer(Class<?> runtimeType)"
  name: "_findExplicitUntypedSerializer(Class<?> runtimeType)"
  nameWithType: "SerializerProvider._findExplicitUntypedSerializer(Class<?> runtimeType)"
  summary: "Method that will try to find a serializer, either from cache or by constructing one; but will not return an \"unknown\" serializer if this cannot be done but rather returns null."
  parameters:
  - name: "runtimeType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "protected JsonSerializer<Object> _findExplicitUntypedSerializer(Class<?> runtimeType)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Serializer if one can be found, null if not."
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
