### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  id: ReplicationLinksClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.ReplicationLinksClient(com.azure.resourcemanager.sql.SqlManagementClient)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  langs:
  - java
  name: ReplicationLinksClient
  nameWithType: ReplicationLinksClient
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  type: Class
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in ReplicationLinks.
  syntax:
    content: public final class ReplicationLinksClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.ReplicationLinksClient(com.azure.resourcemanager.sql.SqlManagementClient)
  id: ReplicationLinksClient(com.azure.resourcemanager.sql.SqlManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: ReplicationLinksClient(SqlManagementClient client)
  nameWithType: ReplicationLinksClient.ReplicationLinksClient(SqlManagementClient client)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.ReplicationLinksClient(SqlManagementClient client)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.ReplicationLinksClient*
  type: Constructor
  package: com.azure.resourcemanager.sql.fluent
  summary: Initializes an instance of ReplicationLinksClient.
  syntax:
    content: public ReplicationLinksClient(SqlManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.SqlManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginFailover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginFailoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverAllowDataLossWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public void beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverAllowDataLossWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public void beginFailoverAllowDataLossWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverAllowDataLossWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Void> beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverAllowDataLossWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Void> beginFailoverAllowDataLossWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverAllowDataLossWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Response<Void>> beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverAllowDataLossWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Response<Void>> beginFailoverAllowDataLossWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public void beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public void beginFailoverWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Void> beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Void> beginFailoverWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Response<Void>> beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailoverWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Response<Void>> beginFailoverWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: beginUnlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginUnlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginUnlinkWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public void beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: beginUnlinkWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public void beginUnlinkWithoutPolling(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginUnlinkWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Void> beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: beginUnlinkWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Void> beginUnlinkWithoutPollingAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: beginUnlinkWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Response<Void>> beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: beginUnlinkWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Response<Void>> beginUnlinkWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: delete(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.delete(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public void delete(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: delete(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.delete(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public void delete(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be dropped.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be deleted.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failover(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public void failover(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public void failover(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public void failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failoverAllowDataLoss(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public void failoverAllowDataLoss(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Void> failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failoverAllowDataLossAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Void> failoverAllowDataLossAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failoverAllowDataLossWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> failoverAllowDataLossWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Void> failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failoverAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Void> failoverAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failoverWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Sets which replica database is primary by failing over from the current primary replica database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> failoverWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: get(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.get(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public ReplicationLinkInner get(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: get(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.get(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public ReplicationLinkInner get(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public Mono<ReplicationLinkInner> getAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.getAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public Mono<ReplicationLinkInner> getAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  nameWithType: ReplicationLinksClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public Mono<Response<ReplicationLinkInner>> getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>>
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  nameWithType: ReplicationLinksClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a database replication link.
  syntax:
    content: public Mono<Response<ReplicationLinkInner>> getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to get the link for.
    - id: linkId
      type: java.lang.String
      description: The replication link ID to be retrieved.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>>
      description: a database replication link.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String serverName, String databaseName)
  nameWithType: ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public PagedIterable<ReplicationLinkInner> listByDatabase(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public PagedIterable<ReplicationLinkInner> listByDatabase(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: ReplicationLinksClient.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public PagedFlux<ReplicationLinkInner> listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: ReplicationLinksClient.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public PagedFlux<ReplicationLinkInner> listByDatabaseAsync(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName)
  nameWithType: ReplicationLinksClient.listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public Mono<PagedResponse<ReplicationLinkInner>> listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName, Context context)
  nameWithType: ReplicationLinksClient.listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists a database's replication links.
  syntax:
    content: public Mono<PagedResponse<ReplicationLinkInner>> listByDatabaseSinglePageAsync(String resourceGroupName, String serverName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database to retrieve links for.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>>
      description: represents the response to a List database replication link request.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public void unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: unlink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public void unlink(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Void> unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: unlinkAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Void> unlinkAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  nameWithType: ReplicationLinksClient.unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: unlinkWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient
  langs:
  - java
  name: unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  nameWithType: ReplicationLinksClient.unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Deletes a database replication link in forced or friendly way.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> unlinkWithResponseAsync(String resourceGroupName, String serverName, String databaseName, String linkId, Boolean forcedTermination, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: databaseName
      type: java.lang.String
      description: The name of the database that has the replication link to be failed over.
    - id: linkId
      type: java.lang.String
      description: The ID of the replication link to be failed over.
    - id: forcedTermination
      type: java.lang.Boolean
      description: Determines whether link will be terminated in a forced or a friendly way.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
references:
- uid: com.azure.resourcemanager.sql.SqlManagementClient
  name: SqlManagementClient
  nameWithType: SqlManagementClient
  fullName: com.azure.resourcemanager.sql.SqlManagementClient
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.ReplicationLinksClient*
  name: ReplicationLinksClient
  nameWithType: ReplicationLinksClient.ReplicationLinksClient
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.ReplicationLinksClient
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ReplicationLinksClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync*
  name: deleteAsync
  nameWithType: ReplicationLinksClient.deleteAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.deleteAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete*
  name: delete
  nameWithType: ReplicationLinksClient.delete
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.delete
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ReplicationLinksClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync*
  name: getAsync
  nameWithType: ReplicationLinksClient.getAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.getAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
  name: ReplicationLinkInner
  nameWithType: ReplicationLinkInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get*
  name: get
  nameWithType: ReplicationLinksClient.get
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.get
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync*
  name: failoverWithResponseAsync
  nameWithType: ReplicationLinksClient.failoverWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover*
  name: beginFailover
  nameWithType: ReplicationLinksClient.beginFailover
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailover
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync*
  name: failoverAsync
  nameWithType: ReplicationLinksClient.failoverAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover*
  name: failover
  nameWithType: ReplicationLinksClient.failover
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failover
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync*
  name: failoverAllowDataLossWithResponseAsync
  nameWithType: ReplicationLinksClient.failoverAllowDataLossWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss*
  name: beginFailoverAllowDataLoss
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLoss
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLoss
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync*
  name: failoverAllowDataLossAsync
  nameWithType: ReplicationLinksClient.failoverAllowDataLossAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLossAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss*
  name: failoverAllowDataLoss
  nameWithType: ReplicationLinksClient.failoverAllowDataLoss
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.failoverAllowDataLoss
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync*
  name: unlinkWithResponseAsync
  nameWithType: ReplicationLinksClient.unlinkWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink*
  name: beginUnlink
  nameWithType: ReplicationLinksClient.beginUnlink
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlink
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync*
  name: unlinkAsync
  nameWithType: ReplicationLinksClient.unlinkAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlinkAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink*
  name: unlink
  nameWithType: ReplicationLinksClient.unlink
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.unlink
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync*
  name: listByDatabaseSinglePageAsync
  nameWithType: ReplicationLinksClient.listByDatabaseSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync*
  name: listByDatabaseAsync
  nameWithType: ReplicationLinksClient.listByDatabaseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabaseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
    name: ReplicationLinkInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.ReplicationLinkInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase*
  name: listByDatabase
  nameWithType: ReplicationLinksClient.listByDatabase
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.listByDatabase
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync*
  name: beginFailoverWithoutPollingWithResponseAsync
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync*
  name: beginFailoverWithoutPollingAsync
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling*
  name: beginFailoverWithoutPolling
  nameWithType: ReplicationLinksClient.beginFailoverWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync*
  name: beginFailoverAllowDataLossWithoutPollingWithResponseAsync
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync*
  name: beginFailoverAllowDataLossWithoutPollingAsync
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling*
  name: beginFailoverAllowDataLossWithoutPolling
  nameWithType: ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginFailoverAllowDataLossWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync*
  name: beginUnlinkWithoutPollingWithResponseAsync
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync*
  name: beginUnlinkWithoutPollingAsync
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling*
  name: beginUnlinkWithoutPolling
  nameWithType: ReplicationLinksClient.beginUnlinkWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ReplicationLinksClient.beginUnlinkWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
