### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage*"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage"
name: "analyzeImage"
nameWithType: "ComputerVisionImpl.analyzeImage"
members:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage()"
  name: "analyzeImage()"
  nameWithType: "ComputerVisionImpl.analyzeImage()"
  summary: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  syntax: "public ComputerVisionImpl.ComputerVisionAnalyzeImageParameters analyzeImage()"
  returns:
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageParameters?alt=com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.ComputerVisionAnalyzeImageParameters&text=ComputerVisionAnalyzeImageParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  name: "analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  nameWithType: "ComputerVisionImpl.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  summary: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter&text=AnalyzeImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageAnalysis analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  returns:
    description: "the ImageAnalysis object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.6-beta
