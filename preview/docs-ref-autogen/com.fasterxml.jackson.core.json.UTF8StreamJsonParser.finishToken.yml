### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.finishToken*"
fullName: "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.finishToken"
name: "finishToken"
nameWithType: "UTF8StreamJsonParser.finishToken"
members:
- uid: "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.finishToken()"
  fullName: "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.finishToken()"
  name: "finishToken()"
  nameWithType: "UTF8StreamJsonParser.finishToken()"
  summary: "Method that may be used to force full handling of the current token so that even if lazy processing is enabled, the whole contents are read for possible retrieval. This is usually used to ensure that the token end location is available, as well as token contents (similar to what calling, say <xref uid=\"com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getTextCharacters()\"></xref>, would achieve).\n\nNote that for many dataformat implementations this method will not do anything; this is the default implementation unless overridden by sub-classes."
  overridden: "com.fasterxml.jackson.core.JsonParser.finishToken()"
  syntax: "public void finishToken()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
