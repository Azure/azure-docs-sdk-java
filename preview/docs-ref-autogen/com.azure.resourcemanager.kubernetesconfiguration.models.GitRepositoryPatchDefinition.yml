### YamlMime:JavaType
uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition"
fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition"
name: "GitRepositoryPatchDefinition"
nameWithType: "GitRepositoryPatchDefinition"
summary: "Parameters to reconcile to the Git<wbr>Repository source kind type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class GitRepositoryPatchDefinition"
constructors:
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.GitRepositoryPatchDefinition()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.GitRepositoryPatchDefinition()"
  name: "GitRepositoryPatchDefinition()"
  nameWithType: "GitRepositoryPatchDefinition.GitRepositoryPatchDefinition()"
  syntax: "public GitRepositoryPatchDefinition()"
methods:
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.httpsCACert()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.httpsCACert()"
  name: "httpsCACert()"
  nameWithType: "GitRepositoryPatchDefinition.httpsCACert()"
  summary: "Get the https<wbr>CACert property: Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS."
  syntax: "public String httpsCACert()"
  desc: "Get the httpsCACert property: Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS."
  returns:
    description: "the httpsCACert value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.httpsUser()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.httpsUser()"
  name: "httpsUser()"
  nameWithType: "GitRepositoryPatchDefinition.httpsUser()"
  summary: "Get the https<wbr>User property: Plaintext HTTPS username used to access private git repositories over HTTPS."
  syntax: "public String httpsUser()"
  desc: "Get the httpsUser property: Plaintext HTTPS username used to access private git repositories over HTTPS."
  returns:
    description: "the httpsUser value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.localAuthRef()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.localAuthRef()"
  name: "localAuthRef()"
  nameWithType: "GitRepositoryPatchDefinition.localAuthRef()"
  summary: "Get the local<wbr>Auth<wbr>Ref property: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets."
  syntax: "public String localAuthRef()"
  desc: "Get the localAuthRef property: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets."
  returns:
    description: "the localAuthRef value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.repositoryRef()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.repositoryRef()"
  name: "repositoryRef()"
  nameWithType: "GitRepositoryPatchDefinition.repositoryRef()"
  summary: "Get the repository<wbr>Ref property: The source reference for the Git<wbr>Repository object."
  syntax: "public RepositoryRefDefinition repositoryRef()"
  desc: "Get the repositoryRef property: The source reference for the GitRepository object."
  returns:
    description: "the repositoryRef value."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition&text=RepositoryRefDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.sshKnownHosts()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.sshKnownHosts()"
  name: "sshKnownHosts()"
  nameWithType: "GitRepositoryPatchDefinition.sshKnownHosts()"
  summary: "Get the ssh<wbr>Known<wbr>Hosts property: Base64-encoded known\\_hosts value containing public SSH keys required to access private git repositories over SSH."
  syntax: "public String sshKnownHosts()"
  desc: "Get the sshKnownHosts property: Base64-encoded known\\_hosts value containing public SSH keys required to access private git repositories over SSH."
  returns:
    description: "the sshKnownHosts value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.syncIntervalInSeconds()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.syncIntervalInSeconds()"
  name: "syncIntervalInSeconds()"
  nameWithType: "GitRepositoryPatchDefinition.syncIntervalInSeconds()"
  summary: "Get the sync<wbr>Interval<wbr>InSeconds property: The interval at which to re-reconcile the cluster git repository source with the remote."
  syntax: "public Long syncIntervalInSeconds()"
  desc: "Get the syncIntervalInSeconds property: The interval at which to re-reconcile the cluster git repository source with the remote."
  returns:
    description: "the syncIntervalInSeconds value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.timeoutInSeconds()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.timeoutInSeconds()"
  name: "timeoutInSeconds()"
  nameWithType: "GitRepositoryPatchDefinition.timeoutInSeconds()"
  summary: "Get the timeout<wbr>InSeconds property: The maximum time to attempt to reconcile the cluster git repository source with the remote."
  syntax: "public Long timeoutInSeconds()"
  desc: "Get the timeoutInSeconds property: The maximum time to attempt to reconcile the cluster git repository source with the remote."
  returns:
    description: "the timeoutInSeconds value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.url()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.url()"
  name: "url()"
  nameWithType: "GitRepositoryPatchDefinition.url()"
  summary: "Get the url property: The URL to sync for the flux configuration git repository."
  syntax: "public String url()"
  desc: "Get the url property: The URL to sync for the flux configuration git repository."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.validate()"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.validate()"
  name: "validate()"
  nameWithType: "GitRepositoryPatchDefinition.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withHttpsCACert(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withHttpsCACert(String httpsCACert)"
  name: "withHttpsCACert(String httpsCACert)"
  nameWithType: "GitRepositoryPatchDefinition.withHttpsCACert(String httpsCACert)"
  summary: "Set the https<wbr>CACert property: Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS."
  parameters:
  - description: "the httpsCACert value to set."
    name: "httpsCACert"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withHttpsCACert(String httpsCACert)"
  desc: "Set the httpsCACert property: Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withHttpsUser(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withHttpsUser(String httpsUser)"
  name: "withHttpsUser(String httpsUser)"
  nameWithType: "GitRepositoryPatchDefinition.withHttpsUser(String httpsUser)"
  summary: "Set the https<wbr>User property: Plaintext HTTPS username used to access private git repositories over HTTPS."
  parameters:
  - description: "the httpsUser value to set."
    name: "httpsUser"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withHttpsUser(String httpsUser)"
  desc: "Set the httpsUser property: Plaintext HTTPS username used to access private git repositories over HTTPS."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withLocalAuthRef(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withLocalAuthRef(String localAuthRef)"
  name: "withLocalAuthRef(String localAuthRef)"
  nameWithType: "GitRepositoryPatchDefinition.withLocalAuthRef(String localAuthRef)"
  summary: "Set the local<wbr>Auth<wbr>Ref property: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets."
  parameters:
  - description: "the localAuthRef value to set."
    name: "localAuthRef"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withLocalAuthRef(String localAuthRef)"
  desc: "Set the localAuthRef property: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withRepositoryRef(com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withRepositoryRef(RepositoryRefDefinition repositoryRef)"
  name: "withRepositoryRef(RepositoryRefDefinition repositoryRef)"
  nameWithType: "GitRepositoryPatchDefinition.withRepositoryRef(RepositoryRefDefinition repositoryRef)"
  summary: "Set the repository<wbr>Ref property: The source reference for the Git<wbr>Repository object."
  parameters:
  - description: "the repositoryRef value to set."
    name: "repositoryRef"
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.RepositoryRefDefinition&text=RepositoryRefDefinition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withRepositoryRef(RepositoryRefDefinition repositoryRef)"
  desc: "Set the repositoryRef property: The source reference for the GitRepository object."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withSshKnownHosts(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withSshKnownHosts(String sshKnownHosts)"
  name: "withSshKnownHosts(String sshKnownHosts)"
  nameWithType: "GitRepositoryPatchDefinition.withSshKnownHosts(String sshKnownHosts)"
  summary: "Set the ssh<wbr>Known<wbr>Hosts property: Base64-encoded known\\_hosts value containing public SSH keys required to access private git repositories over SSH."
  parameters:
  - description: "the sshKnownHosts value to set."
    name: "sshKnownHosts"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withSshKnownHosts(String sshKnownHosts)"
  desc: "Set the sshKnownHosts property: Base64-encoded known\\_hosts value containing public SSH keys required to access private git repositories over SSH."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withSyncIntervalInSeconds(java.lang.Long)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withSyncIntervalInSeconds(Long syncIntervalInSeconds)"
  name: "withSyncIntervalInSeconds(Long syncIntervalInSeconds)"
  nameWithType: "GitRepositoryPatchDefinition.withSyncIntervalInSeconds(Long syncIntervalInSeconds)"
  summary: "Set the sync<wbr>Interval<wbr>InSeconds property: The interval at which to re-reconcile the cluster git repository source with the remote."
  parameters:
  - description: "the syncIntervalInSeconds value to set."
    name: "syncIntervalInSeconds"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withSyncIntervalInSeconds(Long syncIntervalInSeconds)"
  desc: "Set the syncIntervalInSeconds property: The interval at which to re-reconcile the cluster git repository source with the remote."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withTimeoutInSeconds(java.lang.Long)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withTimeoutInSeconds(Long timeoutInSeconds)"
  name: "withTimeoutInSeconds(Long timeoutInSeconds)"
  nameWithType: "GitRepositoryPatchDefinition.withTimeoutInSeconds(Long timeoutInSeconds)"
  summary: "Set the timeout<wbr>InSeconds property: The maximum time to attempt to reconcile the cluster git repository source with the remote."
  parameters:
  - description: "the timeoutInSeconds value to set."
    name: "timeoutInSeconds"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withTimeoutInSeconds(Long timeoutInSeconds)"
  desc: "Set the timeoutInSeconds property: The maximum time to attempt to reconcile the cluster git repository source with the remote."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition.withUrl(String url)"
  name: "withUrl(String url)"
  nameWithType: "GitRepositoryPatchDefinition.withUrl(String url)"
  summary: "Set the url property: The URL to sync for the flux configuration git repository."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitRepositoryPatchDefinition withUrl(String url)"
  desc: "Set the url property: The URL to sync for the flux configuration git repository."
  returns:
    description: "the GitRepositoryPatchDefinition object itself."
    type: "<xref href=\"com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition?alt=com.azure.resourcemanager.kubernetesconfiguration.models.GitRepositoryPatchDefinition&text=GitRepositoryPatchDefinition\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Parameters to reconcile to the GitRepository source kind type."
metadata: {}
package: "com.azure.resourcemanager.kubernetesconfiguration.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-kubernetesconfiguration:1.0.0-beta.3
