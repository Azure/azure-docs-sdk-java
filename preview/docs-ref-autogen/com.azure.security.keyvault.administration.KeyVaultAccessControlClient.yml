### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  id: KeyVaultAccessControlClient
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration
  children:
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getVaultUrl()
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,com.azure.core.util.Context)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,com.azure.core.util.Context)
  langs:
  - java
  name: KeyVaultAccessControlClient
  nameWithType: KeyVaultAccessControlClient
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  type: Class
  package: com.azure.security.keyvault.administration
  summary: >-
    The <xref uid="com.azure.security.keyvault.administration.KeyVaultAccessControlClient" data-throw-if-not-resolved="false">KeyVaultAccessControlClient</xref> provides synchronous methods to view and manage Role Based Access for the Azure Key Vault. The client supports creating, listing, updating, and deleting <xref uid="KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role
     assignments</xref>. Additionally, the client supports listing <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref>.
  syntax:
    content: public final class KeyVaultAccessControlClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.KeyVaultAccessControlClient(com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient)
  id: KeyVaultAccessControlClient(com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: KeyVaultAccessControlClient(KeyVaultAccessControlAsyncClient asyncClient)
  nameWithType: KeyVaultAccessControlClient.KeyVaultAccessControlClient(KeyVaultAccessControlAsyncClient asyncClient)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.KeyVaultAccessControlClient(KeyVaultAccessControlAsyncClient asyncClient)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.KeyVaultAccessControlClient*
  type: Constructor
  package: com.azure.security.keyvault.administration
  summary: Creates an <xref uid="com.azure.security.keyvault.administration.KeyVaultAccessControlClient" data-throw-if-not-resolved="false">KeyVaultAccessControlClient</xref> that uses a <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">pipeline</xref> to service requests.
  syntax:
    content: " KeyVaultAccessControlClient(KeyVaultAccessControlAsyncClient asyncClient)"
    parameters:
    - id: asyncClient
      type: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
      description: The <xref uid="com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient" data-throw-if-not-resolved="false">KeyVaultAccessControlAsyncClient</xref> that this client routes its request through.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String)
  id: createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
  nameWithType: KeyVaultAccessControlClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Creates a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> with a randomly generated <xref uid="java.lang.String" data-throw-if-not-resolved="false">name</xref>.
  syntax:
    content: public KeyVaultRoleAssignment createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> to create.
    - id: roleDefinitionId
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definition</xref> ID for the role assignment.
    - id: principalId
      type: java.lang.String
      description: The principal ID assigned to the role. This maps to the ID inside the Active Directory.
    return:
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
      description: A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the created <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  id: createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  nameWithType: KeyVaultAccessControlClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Creates a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public KeyVaultRoleAssignment createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> to create.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name used to create the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>. It can be any valid UUID.
    - id: roleDefinitionId
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definition</xref> ID for the role assignment.
    - id: principalId
      type: java.lang.String
      description: The principal ID assigned to the role. This maps to the ID inside the Active Directory.
    return:
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
      description: The created <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: createRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId, Context context)
  nameWithType: KeyVaultAccessControlClient.createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId, Context context)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId, Context context)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignmentWithResponse*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Creates a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Response<KeyVaultRoleAssignment> createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId, Context context)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> to create.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name used to create the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>. It can be any valid UUID.
    - id: roleDefinitionId
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definition</xref> ID for the role assignment.
    - id: principalId
      type: java.lang.String
      description: The principal ID assigned to the role. This maps to the ID inside the Active Directory.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: >-
        A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the created
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  id: deleteRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  nameWithType: KeyVaultAccessControlClient.deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Deletes a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public KeyVaultRoleAssignment deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,com.azure.core.util.Context)
  id: deleteRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
  nameWithType: KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Deletes a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Response<KeyVaultRoleAssignment> deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  id: getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  nameWithType: KeyVaultAccessControlClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Gets a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public KeyVaultRoleAssignment getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,com.azure.core.util.Context)
  id: getRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
  nameWithType: KeyVaultAccessControlClient.getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignmentWithResponse*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Gets a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Response<KeyVaultRoleAssignment> getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, Context context)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getVaultUrl()
  id: getVaultUrl()
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: getVaultUrl()
  nameWithType: KeyVaultAccessControlClient.getVaultUrl()
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getVaultUrl()
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getVaultUrl*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Gets the URL for the Key Vault this client is associated with.
  syntax:
    content: public String getVaultUrl()
    return:
      type: java.lang.String
      description: The Key Vault URL.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  id: listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: listRoleAssignments(KeyVaultRoleScope roleScope)
  nameWithType: KeyVaultAccessControlClient.listRoleAssignments(KeyVaultRoleScope roleScope)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments(KeyVaultRoleScope roleScope)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Get all <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignments</xref> that are applicable at the given <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> and above.
  syntax:
    content: public PagedIterable<KeyVaultRoleAssignment> listRoleAssignments(KeyVaultRoleScope roleScope)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: >-
        A <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignments</xref> for the given
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">roleScope</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,com.azure.core.util.Context)
  id: listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: listRoleAssignments(KeyVaultRoleScope roleScope, Context context)
  nameWithType: KeyVaultAccessControlClient.listRoleAssignments(KeyVaultRoleScope roleScope, Context context)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments(KeyVaultRoleScope roleScope, Context context)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Get all <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignments</xref> that are applicable at the given <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> and above.
  syntax:
    content: public PagedIterable<KeyVaultRoleAssignment> listRoleAssignments(KeyVaultRoleScope roleScope, Context context)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: >-
        A <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignments</xref> for the given
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">roleScope</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  id: listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: listRoleDefinitions(KeyVaultRoleScope roleScope)
  nameWithType: KeyVaultAccessControlClient.listRoleDefinitions(KeyVaultRoleScope roleScope)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions(KeyVaultRoleScope roleScope)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Get all <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref> that are applicable at the given <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> and above.
  syntax:
    content: public PagedIterable<KeyVaultRoleDefinition> listRoleDefinitions(KeyVaultRoleScope roleScope)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: >-
        The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">roleScope</xref> of the <xref uid="KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role
         definitions</xref>.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition>
      description: >-
        A <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref> for the given
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">roleScope</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,com.azure.core.util.Context)
  id: listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,com.azure.core.util.Context)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlClient
  langs:
  - java
  name: listRoleDefinitions(KeyVaultRoleScope roleScope, Context context)
  nameWithType: KeyVaultAccessControlClient.listRoleDefinitions(KeyVaultRoleScope roleScope, Context context)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions(KeyVaultRoleScope roleScope, Context context)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Get all <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref> that are applicable at the given <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> and above.
  syntax:
    content: public PagedIterable<KeyVaultRoleDefinition> listRoleDefinitions(KeyVaultRoleScope roleScope, Context context)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref>.
    - id: context
      type: com.azure.core.util.Context
      description: Additional <xref uid="com.azure.core.util.Context" data-throw-if-not-resolved="false">Context</xref> that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition>
      description: >-
        A <xref uid="com.azure.core.http.rest.PagedIterable" data-throw-if-not-resolved="false">PagedIterable</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref> for the given
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">roleScope</xref>.
references:
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  name: KeyVaultAccessControlAsyncClient
  nameWithType: KeyVaultAccessControlAsyncClient
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.KeyVaultAccessControlClient*
  name: KeyVaultAccessControlClient
  nameWithType: KeyVaultAccessControlClient.KeyVaultAccessControlClient
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.KeyVaultAccessControlClient
  package: com.azure.security.keyvault.administration
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getVaultUrl*
  name: getVaultUrl
  nameWithType: KeyVaultAccessControlClient.getVaultUrl
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getVaultUrl
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
  name: KeyVaultRoleScope
  nameWithType: KeyVaultRoleScope
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
- uid: com.azure.core.http.rest.PagedIterable<com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
    name: KeyVaultRoleDefinition
    fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions*
  name: listRoleDefinitions
  nameWithType: KeyVaultAccessControlClient.listRoleDefinitions
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleDefinitions
  package: com.azure.security.keyvault.administration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedIterable<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
    name: KeyVaultRoleAssignment
    fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments*
  name: listRoleAssignments
  nameWithType: KeyVaultAccessControlClient.listRoleAssignments
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.listRoleAssignments
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  name: KeyVaultRoleAssignment
  nameWithType: KeyVaultRoleAssignment
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment*
  name: createRoleAssignment
  nameWithType: KeyVaultAccessControlClient.createRoleAssignment
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignment
  package: com.azure.security.keyvault.administration
- uid: com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
    name: KeyVaultRoleAssignment
    fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignmentWithResponse*
  name: createRoleAssignmentWithResponse
  nameWithType: KeyVaultAccessControlClient.createRoleAssignmentWithResponse
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.createRoleAssignmentWithResponse
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignment*
  name: getRoleAssignment
  nameWithType: KeyVaultAccessControlClient.getRoleAssignment
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignment
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignmentWithResponse*
  name: getRoleAssignmentWithResponse
  nameWithType: KeyVaultAccessControlClient.getRoleAssignmentWithResponse
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.getRoleAssignmentWithResponse
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignment*
  name: deleteRoleAssignment
  nameWithType: KeyVaultAccessControlClient.deleteRoleAssignment
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignment
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse*
  name: deleteRoleAssignmentWithResponse
  nameWithType: KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlClient.deleteRoleAssignmentWithResponse
  package: com.azure.security.keyvault.administration
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
  name: KeyVaultRoleDefinition
  nameWithType: KeyVaultRoleDefinition
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
