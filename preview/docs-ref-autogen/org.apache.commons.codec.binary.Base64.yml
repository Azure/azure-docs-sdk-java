### YamlMime:JavaType
uid: "org.apache.commons.codec.binary.Base64"
fullName: "org.apache.commons.codec.binary.Base64"
name: "Base64"
nameWithType: "Base64"
summary: "Provides Base64 encoding and decoding as defined by [RFC 2045][].\n\nThis class implements section 6.8. Base64 Content-Transfer-Encoding from RFC 2045 Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies by Freed and Borenstein.\n\nThe class can be parameterized in the following manner with various constructors:\n\n *  URL-safe mode: Default off.\n *  Line length: Default 76. Line length that aren't multiples of 4 will still essentially end up being multiples of 4 in the encoded data.\n *  Line separator: Default is CRLF (\"\\\\r\\\\n\")\n\nThe URL-safe parameter is only applied to encode operations. Decoding seamlessly handles both modes.\n\nSince this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).\n\nThis class is thread-safe.\n\n\n[RFC 2045]: http://www.ietf.org/rfc/rfc2045.txt"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.commons.codec.binary.BaseNCodec\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.decode(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.Object)"
- "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.String)"
- "org.apache.commons.codec.binary.BaseNCodec.encode(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int)"
- "org.apache.commons.codec.binary.BaseNCodec.encode(java.lang.Object)"
- "org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec.Context)"
- "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()"
- "org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte)"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(java.lang.String)"
- "org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte)"
syntax: "public class Base64 extends BaseNCodec"
constructors:
- "org.apache.commons.codec.binary.Base64.Base64()"
- "org.apache.commons.codec.binary.Base64.Base64(boolean)"
- "org.apache.commons.codec.binary.Base64.Base64(int)"
- "org.apache.commons.codec.binary.Base64.Base64(int,byte[])"
- "org.apache.commons.codec.binary.Base64.Base64(int,byte[],boolean)"
methods:
- "org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"
- "org.apache.commons.codec.binary.Base64.decodeBase64(java.lang.String)"
- "org.apache.commons.codec.binary.Base64.decodeInteger(byte[])"
- "org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"
- "org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean)"
- "org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean)"
- "org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)"
- "org.apache.commons.codec.binary.Base64.encodeBase64Chunked(byte[])"
- "org.apache.commons.codec.binary.Base64.encodeBase64String(byte[])"
- "org.apache.commons.codec.binary.Base64.encodeBase64URLSafe(byte[])"
- "org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString(byte[])"
- "org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)"
- "org.apache.commons.codec.binary.Base64.isArrayByteBase64(byte[])"
- "org.apache.commons.codec.binary.Base64.isBase64(byte)"
- "org.apache.commons.codec.binary.Base64.isBase64(byte[])"
- "org.apache.commons.codec.binary.Base64.isBase64(java.lang.String)"
- "org.apache.commons.codec.binary.Base64.isInAlphabet(byte)"
- "org.apache.commons.codec.binary.Base64.isUrlSafe()"
type: "class"
metadata: {}
package: "org.apache.commons.codec.binary"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
