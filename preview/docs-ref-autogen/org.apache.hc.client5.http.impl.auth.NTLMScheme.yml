### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme
  id: NTLMScheme
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth
  children:
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme()
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme(org.apache.hc.client5.http.impl.auth.NTLMEngine)
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.generateAuthResponse(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.getName()
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.getPrincipal()
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.getRealm()
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.isChallengeComplete()
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.isConnectionBased()
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.isResponseReady(org.apache.hc.core5.http.HttpHost,org.apache.hc.client5.http.auth.CredentialsProvider,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.processChallenge(org.apache.hc.client5.http.auth.AuthChallenge,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.auth.NTLMScheme.toString()
  langs:
  - java
  name: NTLMScheme
  nameWithType: NTLMScheme
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme
  type: Class
  package: org.apache.hc.client5.http.impl.auth
  summary: NTLM is a proprietary authentication scheme developed by Microsoft and optimized for Windows platforms.
  syntax:
    content: public final class NTLMScheme implements AuthScheme
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.auth.AuthScheme
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme()
  id: NTLMScheme()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: NTLMScheme()
  nameWithType: NTLMScheme.NTLMScheme()
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme()
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme*
  type: Constructor
  package: org.apache.hc.client5.http.impl.auth
  syntax:
    content: public NTLMScheme()
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme(org.apache.hc.client5.http.impl.auth.NTLMEngine)
  id: NTLMScheme(org.apache.hc.client5.http.impl.auth.NTLMEngine)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: NTLMScheme(NTLMEngine engine)
  nameWithType: NTLMScheme.NTLMScheme(NTLMEngine engine)
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme(NTLMEngine engine)
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme*
  type: Constructor
  package: org.apache.hc.client5.http.impl.auth
  syntax:
    content: public NTLMScheme(NTLMEngine engine)
    parameters:
    - id: engine
      type: org.apache.hc.client5.http.impl.auth.NTLMEngine
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.generateAuthResponse(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  id: generateAuthResponse(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
  nameWithType: NTLMScheme.generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.generateAuthResponse*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Generates an authorization response based on the current state. Some authentication schemes may need to load user credentials required to generate an authorization response from a <xref uid="org.apache.hc.client5.http.auth.CredentialsProvider" data-throw-if-not-resolved="false">CredentialsProvider</xref> prior to this method call.
  syntax:
    content: public String generateAuthResponse(HttpHost host, HttpRequest request, HttpContext context)
    parameters:
    - id: host
      type: org.apache.hc.core5.http.HttpHost
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: java.lang.String
  exceptions:
  - type: org.apache.hc.client5.http.auth.AuthenticationException
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: getName()
  nameWithType: NTLMScheme.getName()
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.getName()
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.getName*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Returns textual designation of the given authentication scheme.
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.getPrincipal()
  id: getPrincipal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: getPrincipal()
  nameWithType: NTLMScheme.getPrincipal()
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.getPrincipal()
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.getPrincipal*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Returns <xref uid="java.security.Principal" data-throw-if-not-resolved="false">Principal</xref> whose credentials are used to generate an authentication response. Connection based schemes are required to return a user <xref uid="java.security.Principal" data-throw-if-not-resolved="false">Principal</xref> if authorization applies to for the entire life span of connection.
  syntax:
    content: public Principal getPrincipal()
    return:
      type: java.security.Principal
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.getRealm()
  id: getRealm()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: getRealm()
  nameWithType: NTLMScheme.getRealm()
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.getRealm()
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.getRealm*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Returns authentication realm. If the concept of an authentication realm is not applicable to the given authentication scheme, returns `null`.
  syntax:
    content: public String getRealm()
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.isChallengeComplete()
  id: isChallengeComplete()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: isChallengeComplete()
  nameWithType: NTLMScheme.isChallengeComplete()
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.isChallengeComplete()
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.isChallengeComplete*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Authentication process may involve a series of challenge-response exchanges. This method tests if the authorization process has been fully completed (either successfully or unsuccessfully), that is, all the required authorization challenges have been processed in their entirety.
  syntax:
    content: public boolean isChallengeComplete()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.isConnectionBased()
  id: isConnectionBased()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: isConnectionBased()
  nameWithType: NTLMScheme.isConnectionBased()
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.isConnectionBased()
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.isConnectionBased*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Determines if the authentication scheme is expected to provide an authorization response on a per connection basis instead of the standard per request basis
  syntax:
    content: public boolean isConnectionBased()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.isResponseReady(org.apache.hc.core5.http.HttpHost,org.apache.hc.client5.http.auth.CredentialsProvider,org.apache.hc.core5.http.protocol.HttpContext)
  id: isResponseReady(org.apache.hc.core5.http.HttpHost,org.apache.hc.client5.http.auth.CredentialsProvider,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
  nameWithType: NTLMScheme.isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.isResponseReady*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Determines whether or not an authorization response can be generated based on the actual authentication state. Generally the outcome of this method will depend upon availability of user credentials necessary to produce an authorization response.
  syntax:
    content: public boolean isResponseReady(HttpHost host, CredentialsProvider credentialsProvider, HttpContext context)
    parameters:
    - id: host
      type: org.apache.hc.core5.http.HttpHost
    - id: credentialsProvider
      type: org.apache.hc.client5.http.auth.CredentialsProvider
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: boolean
  exceptions:
  - type: org.apache.hc.client5.http.auth.AuthenticationException
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.processChallenge(org.apache.hc.client5.http.auth.AuthChallenge,org.apache.hc.core5.http.protocol.HttpContext)
  id: processChallenge(org.apache.hc.client5.http.auth.AuthChallenge,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: processChallenge(AuthChallenge authChallenge, HttpContext context)
  nameWithType: NTLMScheme.processChallenge(AuthChallenge authChallenge, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.processChallenge(AuthChallenge authChallenge, HttpContext context)
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.processChallenge*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  summary: Processes the given auth challenge. Some authentication schemes may involve multiple challenge-response exchanges. Such schemes must be able to maintain internal state when dealing with sequential challenges
  syntax:
    content: public void processChallenge(AuthChallenge authChallenge, HttpContext context)
    parameters:
    - id: authChallenge
      type: org.apache.hc.client5.http.auth.AuthChallenge
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
  exceptions:
  - type: org.apache.hc.client5.http.auth.MalformedChallengeException
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.auth.NTLMScheme
  langs:
  - java
  name: toString()
  nameWithType: NTLMScheme.toString()
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.toString()
  overload: org.apache.hc.client5.http.impl.auth.NTLMScheme.toString*
  type: Method
  package: org.apache.hc.client5.http.impl.auth
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: org.apache.hc.client5.http.impl.auth.NTLMEngine
  name: NTLMEngine
  nameWithType: NTLMEngine
  fullName: org.apache.hc.client5.http.impl.auth.NTLMEngine
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme*
  name: NTLMScheme
  nameWithType: NTLMScheme.NTLMScheme
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.NTLMScheme
  package: org.apache.hc.client5.http.impl.auth
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.getName*
  name: getName
  nameWithType: NTLMScheme.getName
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.getName
  package: org.apache.hc.client5.http.impl.auth
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.isConnectionBased*
  name: isConnectionBased
  nameWithType: NTLMScheme.isConnectionBased
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.isConnectionBased
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.getRealm*
  name: getRealm
  nameWithType: NTLMScheme.getRealm
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.getRealm
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.auth.MalformedChallengeException
  name: MalformedChallengeException
  nameWithType: MalformedChallengeException
  fullName: org.apache.hc.client5.http.auth.MalformedChallengeException
- uid: org.apache.hc.client5.http.auth.AuthChallenge
  name: AuthChallenge
  nameWithType: AuthChallenge
  fullName: org.apache.hc.client5.http.auth.AuthChallenge
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.processChallenge*
  name: processChallenge
  nameWithType: NTLMScheme.processChallenge
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.processChallenge
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.auth.AuthenticationException
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: org.apache.hc.client5.http.auth.AuthenticationException
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.auth.CredentialsProvider
  name: CredentialsProvider
  nameWithType: CredentialsProvider
  fullName: org.apache.hc.client5.http.auth.CredentialsProvider
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.isResponseReady*
  name: isResponseReady
  nameWithType: NTLMScheme.isResponseReady
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.isResponseReady
  package: org.apache.hc.client5.http.impl.auth
- uid: java.security.Principal
  spec.java:
  - uid: java.security.Principal
    name: Principal
    fullName: java.security.Principal
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.getPrincipal*
  name: getPrincipal
  nameWithType: NTLMScheme.getPrincipal
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.getPrincipal
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.generateAuthResponse*
  name: generateAuthResponse
  nameWithType: NTLMScheme.generateAuthResponse
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.generateAuthResponse
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.isChallengeComplete*
  name: isChallengeComplete
  nameWithType: NTLMScheme.isChallengeComplete
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.isChallengeComplete
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.impl.auth.NTLMScheme.toString*
  name: toString
  nameWithType: NTLMScheme.toString
  fullName: org.apache.hc.client5.http.impl.auth.NTLMScheme.toString
  package: org.apache.hc.client5.http.impl.auth
- uid: org.apache.hc.client5.http.auth.AuthScheme
  name: AuthScheme
  nameWithType: AuthScheme
  fullName: org.apache.hc.client5.http.auth.AuthScheme
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
