### YamlMime:JavaType
uid: "com.azure.identity.UsernamePasswordCredential"
fullName: "com.azure.identity.UsernamePasswordCredential"
name: "UsernamePasswordCredential"
nameWithType: "UsernamePasswordCredential"
summary: "An AAD credential that acquires a token with a username and a password."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class UsernamePasswordCredential implements TokenCredential"
methods:
- uid: "com.azure.identity.UsernamePasswordCredential.authenticate()"
  fullName: "com.azure.identity.UsernamePasswordCredential.authenticate()"
  name: "authenticate()"
  nameWithType: "UsernamePasswordCredential.authenticate()"
  summary: "Authenticates the user using the specified username and password."
  syntax: "public Mono<AuthenticationRecord> authenticate()"
  desc: "Authenticates the user using the specified username and password."
  returns:
    description: "The <xref uid=\"com.azure.identity.AuthenticationRecord\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationRecord\"></xref> of the authenticated account."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.identity.AuthenticationRecord?alt=com.azure.identity.AuthenticationRecord&text=AuthenticationRecord\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.identity.UsernamePasswordCredential.authenticate(com.azure.core.credential.TokenRequestContext)"
  fullName: "com.azure.identity.UsernamePasswordCredential.authenticate(TokenRequestContext request)"
  name: "authenticate(TokenRequestContext request)"
  nameWithType: "UsernamePasswordCredential.authenticate(TokenRequestContext request)"
  summary: "Authenticates the user using the specified username and password."
  parameters:
  - description: "The details of the authentication request."
    name: "request"
    type: "<xref href=\"com.azure.core.credential.TokenRequestContext?alt=com.azure.core.credential.TokenRequestContext&text=TokenRequestContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AuthenticationRecord> authenticate(TokenRequestContext request)"
  desc: "Authenticates the user using the specified username and password."
  returns:
    description: "The <xref uid=\"com.azure.identity.AuthenticationRecord\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AuthenticationRecord\"></xref> of the authenticated account."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.identity.AuthenticationRecord?alt=com.azure.identity.AuthenticationRecord&text=AuthenticationRecord\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.identity.UsernamePasswordCredential.getToken(com.azure.core.credential.TokenRequestContext)"
  fullName: "com.azure.identity.UsernamePasswordCredential.getToken(TokenRequestContext request)"
  name: "getToken(TokenRequestContext request)"
  nameWithType: "UsernamePasswordCredential.getToken(TokenRequestContext request)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.core.credential.TokenRequestContext?alt=com.azure.core.credential.TokenRequestContext&text=TokenRequestContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AccessToken> getToken(TokenRequestContext request)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "An AAD credential that acquires a token with a username and a password. Users with 2FA/MFA (Multi-factored auth) turned on will not be able to use this credential. Please use <xref uid=\"com.azure.identity.DeviceCodeCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeviceCodeCredential\"></xref> or <xref uid=\"com.azure.identity.InteractiveBrowserCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InteractiveBrowserCredential\"></xref> instead, or create a service principal if you want to authenticate silently."
implements:
- "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.identity"
artifact: com.azure:azure-identity:1.6.0-beta.1
