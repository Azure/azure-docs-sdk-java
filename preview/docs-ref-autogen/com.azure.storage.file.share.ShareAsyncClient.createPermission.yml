### YamlMime:JavaMember
uid: "com.azure.storage.file.share.ShareAsyncClient.createPermission*"
fullName: "com.azure.storage.file.share.ShareAsyncClient.createPermission"
name: "createPermission"
nameWithType: "ShareAsyncClient.createPermission"
members:
- uid: "com.azure.storage.file.share.ShareAsyncClient.createPermission(java.lang.String)"
  fullName: "com.azure.storage.file.share.ShareAsyncClient.createPermission(String filePermission)"
  name: "createPermission(String filePermission)"
  nameWithType: "ShareAsyncClient.createPermission(String filePermission)"
  summary: "Creates a permission at the share level. If a permission already exists, it returns the key of it, else creates a new permission and returns the key.\n\n**Code Samples**\n\n```java\nshareAsyncClient.createPermission(\"filePermission\").subscribe(\n     response -> System.out.printf(\"The file permission key is %s\", response));\n```"
  parameters:
  - description: "The file permission to get/create."
    name: "filePermission"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<String> createPermission(String filePermission)"
  returns:
    description: "The file permission key associated with the file permission."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
