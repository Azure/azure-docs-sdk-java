### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  id: KnowledgebasesImpl
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  children:
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.QnAMakerClientImpl)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.create(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createWithServiceResponseAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.delete(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download()
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,java.lang.String,java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswer(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetails(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAll()
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync()
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllWithServiceResponseAsync()
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publish(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replace(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train()
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.update(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>)
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  langs:
  - java
  name: KnowledgebasesImpl
  nameWithType: KnowledgebasesImpl
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  type: Class
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: An instance of this class provides access to all the operations defined in Knowledgebases.
  syntax:
    content: public class KnowledgebasesImpl implements Knowledgebases
  inheritance:
  - java.lang.Object
  implements:
  - com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Knowledgebases
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.QnAMakerClientImpl)
  id: KnowledgebasesImpl(retrofit2.Retrofit,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.QnAMakerClientImpl)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: KnowledgebasesImpl(Retrofit retrofit, QnAMakerClientImpl client)
  nameWithType: KnowledgebasesImpl.KnowledgebasesImpl(Retrofit retrofit, QnAMakerClientImpl client)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesImpl(Retrofit retrofit, QnAMakerClientImpl client)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesImpl*
  type: Constructor
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Initializes an instance of KnowledgebasesImpl.
  syntax:
    content: public KnowledgebasesImpl(Retrofit retrofit, QnAMakerClientImpl client)
    parameters:
    - id: retrofit
      type: retrofit2.Retrofit
      description: the Retrofit instance built from a Retrofit Builder.
    - id: client
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.QnAMakerClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.create(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  id: create(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: create(CreateKbDTO createKbPayload)
  nameWithType: KnowledgebasesImpl.create(CreateKbDTO createKbPayload)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.create(CreateKbDTO createKbPayload)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.create*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to create a new knowledgebase.
  syntax:
    content: public Operation create(CreateKbDTO createKbPayload)
    parameters:
    - id: createKbPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO
      description: Post body of the request.
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
      description: the Operation object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  id: createAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: createAsync(CreateKbDTO createKbPayload)
  nameWithType: KnowledgebasesImpl.createAsync(CreateKbDTO createKbPayload)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync(CreateKbDTO createKbPayload)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to create a new knowledgebase.
  syntax:
    content: public Observable<Operation> createAsync(CreateKbDTO createKbPayload)
    parameters:
    - id: createKbPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO
      description: Post body of the request.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
      description: the observable to the Operation object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>)
  id: createAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: createAsync(CreateKbDTO createKbPayload, ServiceCallback<Operation> serviceCallback)
  nameWithType: KnowledgebasesImpl.createAsync(CreateKbDTO createKbPayload, ServiceCallback<Operation> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync(CreateKbDTO createKbPayload, ServiceCallback<Operation> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to create a new knowledgebase.
  syntax:
    content: public ServiceFuture<Operation> createAsync(CreateKbDTO createKbPayload, ServiceCallback<Operation> serviceCallback)
    parameters:
    - id: createKbPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO
      description: Post body of the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createWithServiceResponseAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  id: createWithServiceResponseAsync(com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: createWithServiceResponseAsync(CreateKbDTO createKbPayload)
  nameWithType: KnowledgebasesImpl.createWithServiceResponseAsync(CreateKbDTO createKbPayload)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createWithServiceResponseAsync(CreateKbDTO createKbPayload)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to create a new knowledgebase.
  syntax:
    content: public Observable<ServiceResponse<Operation>> createWithServiceResponseAsync(CreateKbDTO createKbPayload)
    parameters:
    - id: createKbPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO
      description: Post body of the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>>
      description: the observable to the Operation object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.delete(java.lang.String)
  id: delete(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: delete(String kbId)
  nameWithType: KnowledgebasesImpl.delete(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.delete(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.delete*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Deletes the knowledgebase and all its data.
  syntax:
    content: public void delete(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync(java.lang.String)
  id: deleteAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: deleteAsync(String kbId)
  nameWithType: KnowledgebasesImpl.deleteAsync(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Deletes the knowledgebase and all its data.
  syntax:
    content: public Observable<Void> deleteAsync(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: deleteAsync(String kbId, ServiceCallback<Void> serviceCallback)
  nameWithType: KnowledgebasesImpl.deleteAsync(String kbId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync(String kbId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Deletes the knowledgebase and all its data.
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String kbId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteWithServiceResponseAsync(java.lang.String)
  id: deleteWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: deleteWithServiceResponseAsync(String kbId)
  nameWithType: KnowledgebasesImpl.deleteWithServiceResponseAsync(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteWithServiceResponseAsync(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Deletes the knowledgebase and all its data.
  syntax:
    content: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download()
  id: download()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: download()
  nameWithType: KnowledgebasesImpl.download()
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download()
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Download the knowledgebase.
  syntax:
    content: public KnowledgebasesImpl.KnowledgebasesDownloadParameters download()
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesDownloadParameters
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  id: download(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  nameWithType: KnowledgebasesImpl.download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Download the knowledgebase.
  syntax:
    content: public QnADocumentsDTO download(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: environment
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType
      description: "Specifies whether environment is Test or Prod. Possible values include: 'Prod', 'Test'"
    - id: downloadOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
      description: the QnADocumentsDTO object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  id: downloadAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  nameWithType: KnowledgebasesImpl.downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Download the knowledgebase.
  syntax:
    content: public Observable<QnADocumentsDTO> downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: environment
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType
      description: "Specifies whether environment is Test or Prod. Possible values include: 'Prod', 'Test'"
    - id: downloadOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>
      description: the observable to the QnADocumentsDTO object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>)
  id: downloadAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter, ServiceCallback<QnADocumentsDTO> serviceCallback)
  nameWithType: KnowledgebasesImpl.downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter, ServiceCallback<QnADocumentsDTO> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter, ServiceCallback<QnADocumentsDTO> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Download the knowledgebase.
  syntax:
    content: public ServiceFuture<QnADocumentsDTO> downloadAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter, ServiceCallback<QnADocumentsDTO> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: environment
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType
      description: "Specifies whether environment is Test or Prod. Possible values include: 'Prod', 'Test'"
    - id: downloadOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  id: downloadWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  nameWithType: KnowledgebasesImpl.downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Download the knowledgebase.
  syntax:
    content: public Observable<ServiceResponse<QnADocumentsDTO>> downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, DownloadOptionalParameter downloadOptionalParameter)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: environment
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType
      description: "Specifies whether environment is Test or Prod. Possible values include: 'Prod', 'Test'"
    - id: downloadOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>>
      description: the observable to the QnADocumentsDTO object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,java.lang.String,java.lang.String)
  id: downloadWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, String source, String changedSince)
  nameWithType: KnowledgebasesImpl.downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, String source, String changedSince)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, String source, String changedSince)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Download the knowledgebase.
  syntax:
    content: public Observable<ServiceResponse<QnADocumentsDTO>> downloadWithServiceResponseAsync(String kbId, EnvironmentType environment, String source, String changedSince)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: environment
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType
      description: "Specifies whether environment is Test or Prod. Possible values include: 'Prod', 'Test'"
    - id: source
      type: java.lang.String
      description: The source property filter to apply.
    - id: changedSince
      type: java.lang.String
      description: The last changed status property filter to apply.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>>
      description: the observable to the QnADocumentsDTO object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswer(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  id: generateAnswer(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: generateAnswer(String kbId, QueryDTO generateAnswerPayload)
  nameWithType: KnowledgebasesImpl.generateAnswer(String kbId, QueryDTO generateAnswerPayload)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswer(String kbId, QueryDTO generateAnswerPayload)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswer*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: GenerateAnswer call to query knowledgebase (QnA Maker Managed).
  syntax:
    content: public QnASearchResultList generateAnswer(String kbId, QueryDTO generateAnswerPayload)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: generateAnswerPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO
      description: Post body of the request.
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
      description: the QnASearchResultList object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  id: generateAnswerAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload)
  nameWithType: KnowledgebasesImpl.generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: GenerateAnswer call to query knowledgebase (QnA Maker Managed).
  syntax:
    content: public Observable<QnASearchResultList> generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: generateAnswerPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO
      description: Post body of the request.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>
      description: the observable to the QnASearchResultList object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>)
  id: generateAnswerAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload, ServiceCallback<QnASearchResultList> serviceCallback)
  nameWithType: KnowledgebasesImpl.generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload, ServiceCallback<QnASearchResultList> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload, ServiceCallback<QnASearchResultList> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: GenerateAnswer call to query knowledgebase (QnA Maker Managed).
  syntax:
    content: public ServiceFuture<QnASearchResultList> generateAnswerAsync(String kbId, QueryDTO generateAnswerPayload, ServiceCallback<QnASearchResultList> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: generateAnswerPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO
      description: Post body of the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  id: generateAnswerWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: generateAnswerWithServiceResponseAsync(String kbId, QueryDTO generateAnswerPayload)
  nameWithType: KnowledgebasesImpl.generateAnswerWithServiceResponseAsync(String kbId, QueryDTO generateAnswerPayload)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerWithServiceResponseAsync(String kbId, QueryDTO generateAnswerPayload)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: GenerateAnswer call to query knowledgebase (QnA Maker Managed).
  syntax:
    content: public Observable<ServiceResponse<QnASearchResultList>> generateAnswerWithServiceResponseAsync(String kbId, QueryDTO generateAnswerPayload)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: generateAnswerPayload
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO
      description: Post body of the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>>
      description: the observable to the QnASearchResultList object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetails(java.lang.String)
  id: getDetails(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: getDetails(String kbId)
  nameWithType: KnowledgebasesImpl.getDetails(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetails(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetails*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets details of a specific knowledgebase.
  syntax:
    content: public KnowledgebaseDTO getDetails(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
      description: the KnowledgebaseDTO object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync(java.lang.String)
  id: getDetailsAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: getDetailsAsync(String kbId)
  nameWithType: KnowledgebasesImpl.getDetailsAsync(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets details of a specific knowledgebase.
  syntax:
    content: public Observable<KnowledgebaseDTO> getDetailsAsync(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>
      description: the observable to the KnowledgebaseDTO object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>)
  id: getDetailsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: getDetailsAsync(String kbId, ServiceCallback<KnowledgebaseDTO> serviceCallback)
  nameWithType: KnowledgebasesImpl.getDetailsAsync(String kbId, ServiceCallback<KnowledgebaseDTO> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync(String kbId, ServiceCallback<KnowledgebaseDTO> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets details of a specific knowledgebase.
  syntax:
    content: public ServiceFuture<KnowledgebaseDTO> getDetailsAsync(String kbId, ServiceCallback<KnowledgebaseDTO> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsWithServiceResponseAsync(java.lang.String)
  id: getDetailsWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: getDetailsWithServiceResponseAsync(String kbId)
  nameWithType: KnowledgebasesImpl.getDetailsWithServiceResponseAsync(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsWithServiceResponseAsync(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets details of a specific knowledgebase.
  syntax:
    content: public Observable<ServiceResponse<KnowledgebaseDTO>> getDetailsWithServiceResponseAsync(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>>
      description: the observable to the KnowledgebaseDTO object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAll()
  id: listAll()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: listAll()
  nameWithType: KnowledgebasesImpl.listAll()
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAll()
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAll*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets all knowledgebases for a user.
  syntax:
    content: public KnowledgebasesDTO listAll()
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
      description: the KnowledgebasesDTO object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync()
  id: listAllAsync()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: listAllAsync()
  nameWithType: KnowledgebasesImpl.listAllAsync()
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync()
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets all knowledgebases for a user.
  syntax:
    content: public Observable<KnowledgebasesDTO> listAllAsync()
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>
      description: the observable to the KnowledgebasesDTO object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>)
  id: listAllAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: listAllAsync(ServiceCallback<KnowledgebasesDTO> serviceCallback)
  nameWithType: KnowledgebasesImpl.listAllAsync(ServiceCallback<KnowledgebasesDTO> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync(ServiceCallback<KnowledgebasesDTO> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets all knowledgebases for a user.
  syntax:
    content: public ServiceFuture<KnowledgebasesDTO> listAllAsync(ServiceCallback<KnowledgebasesDTO> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllWithServiceResponseAsync()
  id: listAllWithServiceResponseAsync()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: listAllWithServiceResponseAsync()
  nameWithType: KnowledgebasesImpl.listAllWithServiceResponseAsync()
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllWithServiceResponseAsync()
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Gets all knowledgebases for a user.
  syntax:
    content: public Observable<ServiceResponse<KnowledgebasesDTO>> listAllWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>>
      description: the observable to the KnowledgebasesDTO object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publish(java.lang.String)
  id: publish(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: publish(String kbId)
  nameWithType: KnowledgebasesImpl.publish(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publish(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publish*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Publishes all changes in test index of a knowledgebase to its prod index.
  syntax:
    content: public void publish(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync(java.lang.String)
  id: publishAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: publishAsync(String kbId)
  nameWithType: KnowledgebasesImpl.publishAsync(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Publishes all changes in test index of a knowledgebase to its prod index.
  syntax:
    content: public Observable<Void> publishAsync(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: publishAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: publishAsync(String kbId, ServiceCallback<Void> serviceCallback)
  nameWithType: KnowledgebasesImpl.publishAsync(String kbId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync(String kbId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Publishes all changes in test index of a knowledgebase to its prod index.
  syntax:
    content: public ServiceFuture<Void> publishAsync(String kbId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishWithServiceResponseAsync(java.lang.String)
  id: publishWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: publishWithServiceResponseAsync(String kbId)
  nameWithType: KnowledgebasesImpl.publishWithServiceResponseAsync(String kbId)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishWithServiceResponseAsync(String kbId)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Publishes all changes in test index of a knowledgebase to its prod index.
  syntax:
    content: public Observable<ServiceResponse<Void>> publishWithServiceResponseAsync(String kbId)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replace(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  id: replace(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: replace(String kbId, List<QnADTO> qnAList)
  nameWithType: KnowledgebasesImpl.replace(String kbId, List<QnADTO> qnAList)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replace(String kbId, List<QnADTO> qnAList)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replace*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Replace knowledgebase contents.
  syntax:
    content: public void replace(String kbId, List<QnADTO> qnAList)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: qnAList
      type: java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>
      description: List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  id: replaceAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: replaceAsync(String kbId, List<QnADTO> qnAList)
  nameWithType: KnowledgebasesImpl.replaceAsync(String kbId, List<QnADTO> qnAList)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync(String kbId, List<QnADTO> qnAList)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Replace knowledgebase contents.
  syntax:
    content: public Observable<Void> replaceAsync(String kbId, List<QnADTO> qnAList)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: qnAList
      type: java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>
      description: List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: replaceAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: replaceAsync(String kbId, List<QnADTO> qnAList, ServiceCallback<Void> serviceCallback)
  nameWithType: KnowledgebasesImpl.replaceAsync(String kbId, List<QnADTO> qnAList, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync(String kbId, List<QnADTO> qnAList, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Replace knowledgebase contents.
  syntax:
    content: public ServiceFuture<Void> replaceAsync(String kbId, List<QnADTO> qnAList, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: qnAList
      type: java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>
      description: List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  id: replaceWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: replaceWithServiceResponseAsync(String kbId, List<QnADTO> qnAList)
  nameWithType: KnowledgebasesImpl.replaceWithServiceResponseAsync(String kbId, List<QnADTO> qnAList)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceWithServiceResponseAsync(String kbId, List<QnADTO> qnAList)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Replace knowledgebase contents.
  syntax:
    content: public Observable<ServiceResponse<Void>> replaceWithServiceResponseAsync(String kbId, List<QnADTO> qnAList)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: qnAList
      type: java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>
      description: List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and should be omitted.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train()
  id: train()
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: train()
  nameWithType: KnowledgebasesImpl.train()
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train()
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Train call to add suggestions to knowledgebase (QnAMaker Managed).
  syntax:
    content: public KnowledgebasesImpl.KnowledgebasesTrainParameters train()
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesTrainParameters
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  id: train(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: train(String kbId, TrainOptionalParameter trainOptionalParameter)
  nameWithType: KnowledgebasesImpl.train(String kbId, TrainOptionalParameter trainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train(String kbId, TrainOptionalParameter trainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Train call to add suggestions to knowledgebase (QnAMaker Managed).
  syntax:
    content: public void train(String kbId, TrainOptionalParameter trainOptionalParameter)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: trainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  id: trainAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
  nameWithType: KnowledgebasesImpl.trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Train call to add suggestions to knowledgebase (QnAMaker Managed).
  syntax:
    content: public Observable<Void> trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: trainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: trainAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: KnowledgebasesImpl.trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Train call to add suggestions to knowledgebase (QnAMaker Managed).
  syntax:
    content: public ServiceFuture<Void> trainAsync(String kbId, TrainOptionalParameter trainOptionalParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: trainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  id: trainWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
  nameWithType: KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Train call to add suggestions to knowledgebase (QnAMaker Managed).
  syntax:
    content: public Observable<ServiceResponse<Void>> trainWithServiceResponseAsync(String kbId, TrainOptionalParameter trainOptionalParameter)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: trainOptionalParameter
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter
      description: the object representing the optional parameters to be set before calling this API
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO>)
  id: trainWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)
  nameWithType: KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Train call to add suggestions to knowledgebase (QnAMaker Managed).
  syntax:
    content: public Observable<ServiceResponse<Void>> trainWithServiceResponseAsync(String kbId, List<FeedbackRecordDTO> feedbackRecords)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: feedbackRecords
      type: java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO>
      description: List of feedback records.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
      description: the <xref uid="com.microsoft.rest.ServiceResponse" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.update(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  id: update(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: update(String kbId, UpdateKbOperationDTO updateKb)
  nameWithType: KnowledgebasesImpl.update(String kbId, UpdateKbOperationDTO updateKb)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.update(String kbId, UpdateKbOperationDTO updateKb)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.update*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to modify a knowledgebase.
  syntax:
    content: public Operation update(String kbId, UpdateKbOperationDTO updateKb)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: updateKb
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO
      description: Post body of the request.
    return:
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
      description: the Operation object if successful.
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  id: updateAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: updateAsync(String kbId, UpdateKbOperationDTO updateKb)
  nameWithType: KnowledgebasesImpl.updateAsync(String kbId, UpdateKbOperationDTO updateKb)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync(String kbId, UpdateKbOperationDTO updateKb)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to modify a knowledgebase.
  syntax:
    content: public Observable<Operation> updateAsync(String kbId, UpdateKbOperationDTO updateKb)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: updateKb
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO
      description: Post body of the request.
    return:
      type: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
      description: the observable to the Operation object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>)
  id: updateAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: updateAsync(String kbId, UpdateKbOperationDTO updateKb, ServiceCallback<Operation> serviceCallback)
  nameWithType: KnowledgebasesImpl.updateAsync(String kbId, UpdateKbOperationDTO updateKb, ServiceCallback<Operation> serviceCallback)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync(String kbId, UpdateKbOperationDTO updateKb, ServiceCallback<Operation> serviceCallback)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to modify a knowledgebase.
  syntax:
    content: public ServiceFuture<Operation> updateAsync(String kbId, UpdateKbOperationDTO updateKb, ServiceCallback<Operation> serviceCallback)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: updateKb
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO
      description: Post body of the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  id: updateWithServiceResponseAsync(java.lang.String,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO)
  artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
  parent: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl
  langs:
  - java
  name: updateWithServiceResponseAsync(String kbId, UpdateKbOperationDTO updateKb)
  nameWithType: KnowledgebasesImpl.updateWithServiceResponseAsync(String kbId, UpdateKbOperationDTO updateKb)
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateWithServiceResponseAsync(String kbId, UpdateKbOperationDTO updateKb)
  overload: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
  summary: Asynchronous operation to modify a knowledgebase.
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Operation,KnowledgebaseUpdateHeaders>> updateWithServiceResponseAsync(String kbId, UpdateKbOperationDTO updateKb)
    parameters:
    - id: kbId
      type: java.lang.String
      description: Knowledgebase id.
    - id: updateKb
      type: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO
      description: Post body of the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseUpdateHeaders>>
      description: the observable to the Operation object
references:
- uid: retrofit2.Retrofit
  spec.java:
  - uid: retrofit2.Retrofit
    name: Retrofit
    fullName: retrofit2.Retrofit
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.QnAMakerClientImpl
  name: QnAMakerClientImpl
  nameWithType: QnAMakerClientImpl
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.QnAMakerClientImpl
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesImpl*
  name: KnowledgebasesImpl
  nameWithType: KnowledgebasesImpl.KnowledgebasesImpl
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesImpl
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
  name: KnowledgebasesDTO
  nameWithType: KnowledgebasesDTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAll*
  name: listAll
  nameWithType: KnowledgebasesImpl.listAll
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAll
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
    name: KnowledgebasesDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
    name: KnowledgebasesDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync*
  name: listAllAsync
  nameWithType: KnowledgebasesImpl.listAllAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
    name: KnowledgebasesDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
    name: KnowledgebasesDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebasesDTO
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllWithServiceResponseAsync*
  name: listAllWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.listAllWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.listAllWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
  name: KnowledgebaseDTO
  nameWithType: KnowledgebaseDTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetails*
  name: getDetails
  nameWithType: KnowledgebasesImpl.getDetails
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetails
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
    name: KnowledgebaseDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
    name: KnowledgebaseDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync*
  name: getDetailsAsync
  nameWithType: KnowledgebasesImpl.getDetailsAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
    name: KnowledgebaseDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
    name: KnowledgebaseDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseDTO
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsWithServiceResponseAsync*
  name: getDetailsWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.getDetailsWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.getDetailsWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.delete*
  name: delete
  nameWithType: KnowledgebasesImpl.delete
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.delete
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync*
  name: deleteAsync
  nameWithType: KnowledgebasesImpl.deleteAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.deleteWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.deleteWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publish*
  name: publish
  nameWithType: KnowledgebasesImpl.publish
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publish
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync*
  name: publishAsync
  nameWithType: KnowledgebasesImpl.publishAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishWithServiceResponseAsync*
  name: publishWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.publishWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.publishWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO
    name: QnADTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replace*
  name: replace
  nameWithType: KnowledgebasesImpl.replace
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replace
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync*
  name: replaceAsync
  nameWithType: KnowledgebasesImpl.replaceAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceWithServiceResponseAsync*
  name: replaceWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.replaceWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.replaceWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO
  name: UpdateKbOperationDTO
  nameWithType: UpdateKbOperationDTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.UpdateKbOperationDTO
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
  name: Operation
  nameWithType: Operation
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.update*
  name: update
  nameWithType: KnowledgebasesImpl.update
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.update
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
    name: Operation
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
    name: Operation
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync*
  name: updateAsync
  nameWithType: KnowledgebasesImpl.updateAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
    name: Operation
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseUpdateHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
    name: Operation
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseUpdateHeaders
    name: KnowledgebaseUpdateHeaders
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseUpdateHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateWithServiceResponseAsync*
  name: updateWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.updateWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.updateWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO
  name: CreateKbDTO
  nameWithType: CreateKbDTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.CreateKbDTO
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.create*
  name: create
  nameWithType: KnowledgebasesImpl.create
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.create
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync*
  name: createAsync
  nameWithType: KnowledgebasesImpl.createAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
    name: Operation
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createWithServiceResponseAsync*
  name: createWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.createWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.createWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType
  name: EnvironmentType
  nameWithType: EnvironmentType
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.EnvironmentType
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter
  name: DownloadOptionalParameter
  nameWithType: DownloadOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.DownloadOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
  name: QnADocumentsDTO
  nameWithType: QnADocumentsDTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download*
  name: download
  nameWithType: KnowledgebasesImpl.download
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.download
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
    name: QnADocumentsDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
    name: QnADocumentsDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync*
  name: downloadAsync
  nameWithType: KnowledgebasesImpl.downloadAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
    name: QnADocumentsDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
    name: QnADocumentsDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync*
  name: downloadWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.downloadWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.downloadWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesDownloadParameters
  spec.java:
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesDownloadParameters
    name: KnowledgebasesDownloadParameters
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesDownloadParameters
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO
  name: QueryDTO
  nameWithType: QueryDTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QueryDTO
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
  name: QnASearchResultList
  nameWithType: QnASearchResultList
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswer*
  name: generateAnswer
  nameWithType: KnowledgebasesImpl.generateAnswer
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswer
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
    name: QnASearchResultList
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
    name: QnASearchResultList
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync*
  name: generateAnswerAsync
  nameWithType: KnowledgebasesImpl.generateAnswerAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: rx.Observable<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
    name: QnASearchResultList
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponse
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
    name: QnASearchResultList
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnASearchResultList
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerWithServiceResponseAsync*
  name: generateAnswerWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.generateAnswerWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.generateAnswerWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter
  name: TrainOptionalParameter
  nameWithType: TrainOptionalParameter
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.TrainOptionalParameter
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train*
  name: train
  nameWithType: KnowledgebasesImpl.train
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.train
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync*
  name: trainAsync
  nameWithType: KnowledgebasesImpl.trainAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync*
  name: trainWithServiceResponseAsync
  nameWithType: KnowledgebasesImpl.trainWithServiceResponseAsync
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.trainWithServiceResponseAsync
  package: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation
- uid: java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO
    name: FeedbackRecordDTO
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesTrainParameters
  spec.java:
  - uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesTrainParameters
    name: KnowledgebasesTrainParameters
    fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.implementation.KnowledgebasesImpl.KnowledgebasesTrainParameters
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Knowledgebases
  name: Knowledgebases
  nameWithType: Knowledgebases
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.Knowledgebases
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: com.microsoft.rest.ServiceResponse
  name: ServiceResponse
  nameWithType: ServiceResponse
  fullName: com.microsoft.rest.ServiceResponse
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO
  name: QnADTO
  nameWithType: QnADTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseUpdateHeaders
  name: Operation,KnowledgebaseUpdateHeaders
  nameWithType: Operation,KnowledgebaseUpdateHeaders
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.Operation,com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.KnowledgebaseUpdateHeaders
- uid: com.microsoft.rest.ServiceResponseWithHeaders
  name: ServiceResponseWithHeaders
  nameWithType: ServiceResponseWithHeaders
  fullName: com.microsoft.rest.ServiceResponseWithHeaders
- uid: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO
  name: FeedbackRecordDTO
  nameWithType: FeedbackRecordDTO
  fullName: com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.FeedbackRecordDTO
