### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  id: ObjectNode
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node
  children:
  - com.fasterxml.jackson.databind.node.ObjectNode.<T>set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.node.ObjectNode.<T>setAll(com.fasterxml.jackson.databind.node.ObjectNode)
  - com.fasterxml.jackson.databind.node.ObjectNode.<T>setAll(java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.node.ObjectNode.<T>without(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.<T>without(java.util.Collection<java.lang.String>)
  - com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  - com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.node.ObjectNode._at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.node.ObjectNode._children
  - com.fasterxml.jackson.databind.node.ObjectNode._childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode)
  - com.fasterxml.jackson.databind.node.ObjectNode._put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.node.ObjectNode.asToken()
  - com.fasterxml.jackson.databind.node.ObjectNode.deepCopy()
  - com.fasterxml.jackson.databind.node.ObjectNode.elements()
  - com.fasterxml.jackson.databind.node.ObjectNode.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.node.ObjectNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.node.ObjectNode.fieldNames()
  - com.fasterxml.jackson.databind.node.ObjectNode.fields()
  - com.fasterxml.jackson.databind.node.ObjectNode.findParent(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.node.ObjectNode.findValue(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.node.ObjectNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  - com.fasterxml.jackson.databind.node.ObjectNode.get(int)
  - com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.getNodeType()
  - com.fasterxml.jackson.databind.node.ObjectNode.hashCode()
  - com.fasterxml.jackson.databind.node.ObjectNode.isEmpty()
  - com.fasterxml.jackson.databind.node.ObjectNode.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.ObjectNode.isObject()
  - com.fasterxml.jackson.databind.node.ObjectNode.path(int)
  - com.fasterxml.jackson.databind.node.ObjectNode.path(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,boolean)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,byte[])
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,double)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,float)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,int)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Boolean)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Double)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Float)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Integer)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Long)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Short)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.math.BigDecimal)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.math.BigInteger)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,long)
  - com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,short)
  - com.fasterxml.jackson.databind.node.ObjectNode.putAll(com.fasterxml.jackson.databind.node.ObjectNode)
  - com.fasterxml.jackson.databind.node.ObjectNode.putAll(java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.node.ObjectNode.putArray(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.putNull(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.putObject(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.putPOJO(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.node.ObjectNode.putRawValue(java.lang.String,com.fasterxml.jackson.databind.util.RawValue)
  - com.fasterxml.jackson.databind.node.ObjectNode.remove(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.remove(java.util.Collection<java.lang.String>)
  - com.fasterxml.jackson.databind.node.ObjectNode.removeAll()
  - com.fasterxml.jackson.databind.node.ObjectNode.replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.node.ObjectNode.required(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.retain(java.lang.String...)
  - com.fasterxml.jackson.databind.node.ObjectNode.retain(java.util.Collection<java.lang.String>)
  - com.fasterxml.jackson.databind.node.ObjectNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.ObjectNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.node.ObjectNode.size()
  - com.fasterxml.jackson.databind.node.ObjectNode.with(java.lang.String)
  - com.fasterxml.jackson.databind.node.ObjectNode.withArray(java.lang.String)
  langs:
  - java
  name: ObjectNode
  nameWithType: ObjectNode
  fullName: com.fasterxml.jackson.databind.node.ObjectNode
  type: Class
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Node that maps to JSON Object structures in JSON content.


    Note: class was `final` temporarily for Jackson 2.2.
  syntax:
    content: public class ObjectNode extends ContainerNode<ObjectNode> implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializable.Base
  - com.fasterxml.jackson.databind.JsonNode
  - com.fasterxml.jackson.databind.node.BaseJsonNode
  - com.fasterxml.jackson.databind.node.ContainerNode
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.JsonNode.<T>_this()
  - com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
  - com.fasterxml.jackson.databind.JsonNode.<T>require()
  - com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  - com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.asBoolean()
  - com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  - com.fasterxml.jackson.databind.JsonNode.asDouble()
  - com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  - com.fasterxml.jackson.databind.JsonNode.asInt()
  - com.fasterxml.jackson.databind.JsonNode.asInt(int)
  - com.fasterxml.jackson.databind.JsonNode.asLong()
  - com.fasterxml.jackson.databind.JsonNode.asLong(long)
  - com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  - com.fasterxml.jackson.databind.JsonNode.binaryValue()
  - com.fasterxml.jackson.databind.JsonNode.booleanValue()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  - com.fasterxml.jackson.databind.JsonNode.decimalValue()
  - com.fasterxml.jackson.databind.JsonNode.doubleValue()
  - com.fasterxml.jackson.databind.JsonNode.elements()
  - com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.JsonNode.fieldNames()
  - com.fasterxml.jackson.databind.JsonNode.fields()
  - com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  - com.fasterxml.jackson.databind.JsonNode.floatValue()
  - com.fasterxml.jackson.databind.JsonNode.getNodeType()
  - com.fasterxml.jackson.databind.JsonNode.has(int)
  - com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
  - com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.intValue()
  - com.fasterxml.jackson.databind.JsonNode.isArray()
  - com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  - com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  - com.fasterxml.jackson.databind.JsonNode.isBinary()
  - com.fasterxml.jackson.databind.JsonNode.isBoolean()
  - com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  - com.fasterxml.jackson.databind.JsonNode.isDouble()
  - com.fasterxml.jackson.databind.JsonNode.isEmpty()
  - com.fasterxml.jackson.databind.JsonNode.isFloat()
  - com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  - com.fasterxml.jackson.databind.JsonNode.isInt()
  - com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  - com.fasterxml.jackson.databind.JsonNode.isLong()
  - com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  - com.fasterxml.jackson.databind.JsonNode.isNull()
  - com.fasterxml.jackson.databind.JsonNode.isNumber()
  - com.fasterxml.jackson.databind.JsonNode.isObject()
  - com.fasterxml.jackson.databind.JsonNode.isPojo()
  - com.fasterxml.jackson.databind.JsonNode.isShort()
  - com.fasterxml.jackson.databind.JsonNode.isTextual()
  - com.fasterxml.jackson.databind.JsonNode.isValueNode()
  - com.fasterxml.jackson.databind.JsonNode.iterator()
  - com.fasterxml.jackson.databind.JsonNode.longValue()
  - com.fasterxml.jackson.databind.JsonNode.numberValue()
  - com.fasterxml.jackson.databind.JsonNode.path(int)
  - com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.shortValue()
  - com.fasterxml.jackson.databind.JsonNode.textValue()
  - com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.databind.node.ContainerNode.arrayNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.arrayNode(int)
  - com.fasterxml.jackson.databind.node.ContainerNode.asText()
  - com.fasterxml.jackson.databind.node.ContainerNode.asToken()
  - com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[])
  - com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[],int,int)
  - com.fasterxml.jackson.databind.node.ContainerNode.booleanNode(boolean)
  - com.fasterxml.jackson.databind.node.ContainerNode.get(int)
  - com.fasterxml.jackson.databind.node.ContainerNode.get(java.lang.String)
  - com.fasterxml.jackson.databind.node.ContainerNode.missingNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.nullNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(byte)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(double)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(float)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(int)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Byte)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Double)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Float)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Integer)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Long)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Short)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigDecimal)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigInteger)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(long)
  - com.fasterxml.jackson.databind.node.ContainerNode.numberNode(short)
  - com.fasterxml.jackson.databind.node.ContainerNode.objectNode()
  - com.fasterxml.jackson.databind.node.ContainerNode.pojoNode(java.lang.Object)
  - com.fasterxml.jackson.databind.node.ContainerNode.rawValueNode(com.fasterxml.jackson.databind.util.RawValue)
  - com.fasterxml.jackson.databind.node.ContainerNode.removeAll()
  - com.fasterxml.jackson.databind.node.ContainerNode.size()
  - com.fasterxml.jackson.databind.node.ContainerNode.textNode(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.<T>set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  id: <T>set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: <T>set(String fieldName, JsonNode value)
  nameWithType: ObjectNode.<T>set(String fieldName, JsonNode value)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>set(String fieldName, JsonNode value)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.set*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will set specified field, replacing old value, if any. Note that this is identical to <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)" data-throw-if-not-resolved="false">#replace(String, JsonNode)</xref>, except for return value.


    NOTE: added to replace those uses of <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)" data-throw-if-not-resolved="false">#put(String, JsonNode)</xref> where chaining with 'this' is desired.


    NOTE: co-variant return type since 2.10
  syntax:
    content: public T <T>set(String fieldName, JsonNode value)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: value
      type: com.fasterxml.jackson.databind.JsonNode
      description: >-
        to set field to; if null, will be converted
           to a <xref uid="com.fasterxml.jackson.databind.node.NullNode" data-throw-if-not-resolved="false">NullNode</xref> first  (to remove field entry, call
           <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.remove*" data-throw-if-not-resolved="false">#remove</xref> instead)
    return:
      type: T
      description: This node after adding/replacing property value (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.<T>setAll(com.fasterxml.jackson.databind.node.ObjectNode)
  id: <T>setAll(com.fasterxml.jackson.databind.node.ObjectNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: <T>setAll(ObjectNode other)
  nameWithType: ObjectNode.<T>setAll(ObjectNode other)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>setAll(ObjectNode other)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.setAll*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for adding all properties of the given Object, overriding any existing values for those properties.


    NOTE: co-variant return type since 2.10
  syntax:
    content: public T <T>setAll(ObjectNode other)
    parameters:
    - id: other
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: Object of which properties to add to this object
    return:
      type: T
      description: This node after addition (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.<T>setAll(java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>)
  id: <T>setAll(java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: <T>setAll(Map<String,? extends JsonNode> properties)
  nameWithType: ObjectNode.<T>setAll(Map<String,? extends JsonNode> properties)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>setAll(Map<String,? extends JsonNode> properties)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.setAll*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for adding given properties to this object node, overriding any existing values for those properties.


    NOTE: co-variant return type since 2.10
  syntax:
    content: public T <T>setAll(Map<String,? extends JsonNode> properties)
    parameters:
    - id: properties
      type: java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>
      description: Properties to add
    return:
      type: T
      description: This node after adding/replacing property values (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.<T>without(java.lang.String)
  id: <T>without(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: <T>without(String fieldName)
  nameWithType: ObjectNode.<T>without(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>without(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.without*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for removing field entry from this ObjectNode, and returning instance after removal.


    NOTE: co-variant return type since 2.10
  syntax:
    content: public T <T>without(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: T
      description: This node after removing entry (if any)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.<T>without(java.util.Collection<java.lang.String>)
  id: <T>without(java.util.Collection<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: <T>without(Collection<String> fieldNames)
  nameWithType: ObjectNode.<T>without(Collection<String> fieldNames)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>without(Collection<String> fieldNames)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.without*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for removing specified field properties out of this ObjectNode.


    NOTE: co-variant return type since 2.10
  syntax:
    content: public T <T>without(Collection<String> fieldNames)
    parameters:
    - id: fieldNames
      type: java.util.Collection<java.lang.String>
      description: Names of fields to remove
    return:
      type: T
      description: This node after removing entries
- uid: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  id: ObjectNode(com.fasterxml.jackson.databind.node.JsonNodeFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: ObjectNode(JsonNodeFactory nc)
  nameWithType: ObjectNode.ObjectNode(JsonNodeFactory nc)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode(JsonNodeFactory nc)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode*
  type: Constructor
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public ObjectNode(JsonNodeFactory nc)
    parameters:
    - id: nc
      type: com.fasterxml.jackson.databind.node.JsonNodeFactory
- uid: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonNode>)
  id: ObjectNode(com.fasterxml.jackson.databind.node.JsonNodeFactory,java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonNode>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: ObjectNode(JsonNodeFactory nc, Map<String,JsonNode> kids)
  nameWithType: ObjectNode.ObjectNode(JsonNodeFactory nc, Map<String,JsonNode> kids)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode(JsonNodeFactory nc, Map<String,JsonNode> kids)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode*
  type: Constructor
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public ObjectNode(JsonNodeFactory nc, Map<String,JsonNode> kids)
    parameters:
    - id: nc
      type: com.fasterxml.jackson.databind.node.JsonNodeFactory
    - id: kids
      type: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonNode>
- uid: com.fasterxml.jackson.databind.node.ObjectNode._at(com.fasterxml.jackson.core.JsonPointer)
  id: _at(com.fasterxml.jackson.core.JsonPointer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: _at(JsonPointer ptr)
  nameWithType: ObjectNode._at(JsonPointer ptr)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode._at(JsonPointer ptr)
  overload: com.fasterxml.jackson.databind.node.ObjectNode._at*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected JsonNode _at(JsonPointer ptr)
    parameters:
    - id: ptr
      type: com.fasterxml.jackson.core.JsonPointer
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode._children
  id: _children
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: _children
  nameWithType: ObjectNode._children
  fullName: com.fasterxml.jackson.databind.node.ObjectNode._children
  type: Field
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected final Map<String,JsonNode> _children
    return:
      type: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonNode>
- uid: com.fasterxml.jackson.databind.node.ObjectNode._childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode)
  id: _childrenEqual(com.fasterxml.jackson.databind.node.ObjectNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: _childrenEqual(ObjectNode other)
  nameWithType: ObjectNode._childrenEqual(ObjectNode other)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode._childrenEqual(ObjectNode other)
  overload: com.fasterxml.jackson.databind.node.ObjectNode._childrenEqual*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected boolean _childrenEqual(ObjectNode other)
    parameters:
    - id: other
      type: com.fasterxml.jackson.databind.node.ObjectNode
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.ObjectNode._put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  id: _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: _put(String fieldName, JsonNode value)
  nameWithType: ObjectNode._put(String fieldName, JsonNode value)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode._put(String fieldName, JsonNode value)
  overload: com.fasterxml.jackson.databind.node.ObjectNode._put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected ObjectNode _put(String fieldName, JsonNode value)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: value
      type: com.fasterxml.jackson.databind.JsonNode
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.asToken()
  id: asToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: asToken()
  nameWithType: ObjectNode.asToken()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.asToken()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.asToken*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that can be used for efficient type detection when using stream abstraction for traversing nodes. Will return the first <xref uid="com.fasterxml.jackson.core.JsonToken" data-throw-if-not-resolved="false">JsonToken</xref> that equivalent stream event would produce (for most nodes there is just one token but for structured/container types multiple)
  syntax:
    content: public JsonToken asToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.ObjectNode.deepCopy()
  id: deepCopy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: deepCopy()
  nameWithType: ObjectNode.deepCopy()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.deepCopy()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.deepCopy*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that can be called to get a node that is guaranteed not to allow changing of this node through mutators on this node or any of its children. This means it can either make a copy of this node (and all mutable children and grand children nodes), or node itself if it is immutable.


    Note: return type is guaranteed to have same type as the node method is called on; which is why method is declared with local generic type.
  syntax:
    content: public ObjectNode deepCopy()
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.elements()
  id: elements()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: elements()
  nameWithType: ObjectNode.elements()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.elements()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.elements*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for accessing all value nodes of this Node, iff this node is a JSON Array or Object node. In case of Object node, field names (keys) are not included, only values. For other types of nodes, returns empty iterator.
  syntax:
    content: public Iterator<JsonNode> elements()
    return:
      type: java.util.Iterator<com.fasterxml.jackson.databind.JsonNode>
- uid: com.fasterxml.jackson.databind.node.ObjectNode.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: equals(Object o)
  nameWithType: ObjectNode.equals(Object o)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.equals(Object o)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.equals*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Equality for node objects is defined as full (deep) value equality. This means that it is possible to compare complete JSON trees for equality by comparing equality of root nodes.


    Note: marked as abstract to ensure all implementation classes define it properly and not rely on definition from <xref uid="java.lang.Object" data-throw-if-not-resolved="false">java.lang.Object</xref>.
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.ObjectNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  id: equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: equals(Comparator<JsonNode> comparator, JsonNode o)
  nameWithType: ObjectNode.equals(Comparator<JsonNode> comparator, JsonNode o)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.equals(Comparator<JsonNode> comparator, JsonNode o)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.equals*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Entry method for invoking customizable comparison, using passed-in <xref uid="java.util.Comparator" data-throw-if-not-resolved="false">Comparator</xref> object. Nodes will handle traversal of structured types (arrays, objects), but defer to comparator for scalar value comparisons. If a "natural" <xref uid="java.util.Comparator" data-throw-if-not-resolved="false">Comparator</xref> is passed -- one that simply calls `equals()` on one of arguments, passing the other -- implementation is the same as directly calling `equals()` on node.


    Default implementation simply delegates to passed in `comparator`, with `this` as the first argument, and `other` as the second argument.
  syntax:
    content: public boolean equals(Comparator<JsonNode> comparator, JsonNode o)
    parameters:
    - id: comparator
      type: java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>
    - id: o
      type: com.fasterxml.jackson.databind.JsonNode
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.ObjectNode.fieldNames()
  id: fieldNames()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: fieldNames()
  nameWithType: ObjectNode.fieldNames()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.fieldNames()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.fieldNames*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for accessing names of all fields for this node, iff this node is an Object node. Number of field names accessible will be <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.size*" data-throw-if-not-resolved="false">#size</xref>.
  syntax:
    content: public Iterator<String> fieldNames()
    return:
      type: java.util.Iterator<java.lang.String>
- uid: com.fasterxml.jackson.databind.node.ObjectNode.fields()
  id: fields()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: fields()
  nameWithType: ObjectNode.fields()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.fields()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.fields*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method to use for accessing all fields (with both names and values) of this JSON Object.
  syntax:
    content: public Iterator<Map.Entry<String,JsonNode>> fields()
    return:
      type: java.util.Iterator<java.util.Map.Entry<java.lang.String,com.fasterxml.jackson.databind.JsonNode>>
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findParent(java.lang.String)
  id: findParent(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: findParent(String fieldName)
  nameWithType: ObjectNode.findParent(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findParent(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.findParent*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for finding a JSON Object that contains specified field, within this node or its descendants. If no matching field is found in this node or its descendants, returns null.
  syntax:
    content: public ObjectNode findParent(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  id: findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: findParents(String fieldName, List<JsonNode> foundSoFar)
  nameWithType: ObjectNode.findParents(String fieldName, List<JsonNode> foundSoFar)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findParents(String fieldName, List<JsonNode> foundSoFar)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.findParents*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public List<JsonNode> findParents(String fieldName, List<JsonNode> foundSoFar)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: foundSoFar
      type: java.util.List<com.fasterxml.jackson.databind.JsonNode>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JsonNode>
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findValue(java.lang.String)
  id: findValue(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: findValue(String fieldName)
  nameWithType: ObjectNode.findValue(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findValue(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.findValue*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for finding a JSON Object field with specified name in this node or its child nodes, and returning value it has. If no matching field is found in this node or its descendants, returns null.
  syntax:
    content: public JsonNode findValue(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  id: findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: findValues(String fieldName, List<JsonNode> foundSoFar)
  nameWithType: ObjectNode.findValues(String fieldName, List<JsonNode> foundSoFar)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findValues(String fieldName, List<JsonNode> foundSoFar)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.findValues*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public List<JsonNode> findValues(String fieldName, List<JsonNode> foundSoFar)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: foundSoFar
      type: java.util.List<com.fasterxml.jackson.databind.JsonNode>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JsonNode>
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  id: findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: findValuesAsText(String fieldName, List<String> foundSoFar)
  nameWithType: ObjectNode.findValuesAsText(String fieldName, List<String> foundSoFar)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findValuesAsText(String fieldName, List<String> foundSoFar)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.findValuesAsText*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public List<String> findValuesAsText(String fieldName, List<String> foundSoFar)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: foundSoFar
      type: java.util.List<java.lang.String>
    return:
      type: java.util.List<java.lang.String>
- uid: com.fasterxml.jackson.databind.node.ObjectNode.get(int)
  id: get(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: get(int index)
  nameWithType: ObjectNode.get(int index)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.get(int index)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.get*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for accessing value of the specified element of an array node. For other nodes, null is always returned.


    For array nodes, index specifies exact location within array and allows for efficient iteration over child elements (underlying storage is guaranteed to be efficiently indexable, i.e. has random-access to elements). If index is less than 0, or equal-or-greater than `node.size()`, null is returned; no exception is thrown for any index.


    NOTE: if the element value has been explicitly set as `null` (which is different from removal!), a <xref uid="com.fasterxml.jackson.databind.node.NullNode" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.node.NullNode</xref> will be returned, not null.
  syntax:
    content: public JsonNode get(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: get(String fieldName)
  nameWithType: ObjectNode.get(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.get(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.get*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for accessing value of the specified field of an object node. If this node is not an object (or it does not have a value for specified field name), or if there is no field with such name, null is returned.


    NOTE: if the property value has been explicitly set as `null` (which is different from removal!), a <xref uid="com.fasterxml.jackson.databind.node.NullNode" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.node.NullNode</xref> will be returned, not null.
  syntax:
    content: public JsonNode get(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.getNodeType()
  id: getNodeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: getNodeType()
  nameWithType: ObjectNode.getNodeType()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.getNodeType()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.getNodeType*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Return the type of this node
  syntax:
    content: public JsonNodeType getNodeType()
    return:
      type: com.fasterxml.jackson.databind.node.JsonNodeType
- uid: com.fasterxml.jackson.databind.node.ObjectNode.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: hashCode()
  nameWithType: ObjectNode.hashCode()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.hashCode()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: isEmpty()
  nameWithType: ObjectNode.isEmpty()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Convenience method that is functionally same as:


    ```java

    size() == 0

    ```


    for all node types.
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  id: isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: isEmpty(SerializerProvider serializers)
  nameWithType: ObjectNode.isEmpty(SerializerProvider serializers)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty(SerializerProvider serializers)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that may be called on instance to determine if it is considered "empty" for purposes of serialization filtering or not.
  syntax:
    content: public boolean isEmpty(SerializerProvider serializers)
    parameters:
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.ObjectNode.isObject()
  id: isObject()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: isObject()
  nameWithType: ObjectNode.isObject()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.isObject()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.isObject*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that returns true if this node is an Object node, false otherwise. Note that if true is returned, <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.isContainerNode" data-throw-if-not-resolved="false">#isContainerNode</xref> must also return true.
  syntax:
    content: public final boolean isObject()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.ObjectNode.path(int)
  id: path(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: path(int index)
  nameWithType: ObjectNode.path(int index)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.path(int index)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.path*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: This method is similar to <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.get(int)" data-throw-if-not-resolved="false">#get(int)</xref>, except that instead of returning null if no such element exists (due to index being out of range, or this node not being an array), a "missing node" (node that returns true for <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.isMissingNode" data-throw-if-not-resolved="false">#isMissingNode</xref>) will be returned. This allows for convenient and safe chained access via path calls.
  syntax:
    content: public JsonNode path(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.path(java.lang.String)
  id: path(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: path(String fieldName)
  nameWithType: ObjectNode.path(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.path(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.path*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: This method is similar to <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)" data-throw-if-not-resolved="false">#get(String)</xref>, except that instead of returning null if no such value exists (due to this node not being an object, or object not having value for the specified field), a "missing node" (node that returns true for <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.isMissingNode" data-throw-if-not-resolved="false">#isMissingNode</xref>) will be returned. This allows for convenient and safe chained access via path calls.
  syntax:
    content: public JsonNode path(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,boolean)
  id: put(java.lang.String,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, boolean v)
  nameWithType: ObjectNode.put(String fieldName, boolean v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, boolean v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified String value.
  syntax:
    content: public ObjectNode put(String fieldName, boolean v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,byte[])
  id: put(java.lang.String,byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, byte[] v)
  nameWithType: ObjectNode.put(String fieldName, byte[] v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, byte[] v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified binary value
  syntax:
    content: public ObjectNode put(String fieldName, byte[] v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: byte[]
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  id: put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, JsonNode value)
  nameWithType: ObjectNode.put(String fieldName, JsonNode value)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, JsonNode value)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that will set specified field, replacing old value, if any.
  syntax:
    content: public JsonNode put(String fieldName, JsonNode value)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: value
      type: com.fasterxml.jackson.databind.JsonNode
      description: >-
        to set field to; if null, will be converted
           to a <xref uid="com.fasterxml.jackson.databind.node.NullNode" data-throw-if-not-resolved="false">NullNode</xref> first  (to remove field entry, call
           <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.remove*" data-throw-if-not-resolved="false">#remove</xref> instead)
    return:
      type: com.fasterxml.jackson.databind.JsonNode
      description: >-
        Old value of the field, if any; null if there was no
           old value.
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,double)
  id: put(java.lang.String,double)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, double v)
  nameWithType: ObjectNode.put(String fieldName, double v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, double v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified numeric value.
  syntax:
    content: public ObjectNode put(String fieldName, double v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: double
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,float)
  id: put(java.lang.String,float)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, float v)
  nameWithType: ObjectNode.put(String fieldName, float v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, float v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified numeric value.
  syntax:
    content: public ObjectNode put(String fieldName, float v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: float
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,int)
  id: put(java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, int v)
  nameWithType: ObjectNode.put(String fieldName, int v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, int v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified numeric value. The underlying <xref uid="? extends com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> that will be added is constructed using <xref uid="com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(int)" data-throw-if-not-resolved="false">JsonNodeFactory#numberNode(int)</xref>, and may be "smaller" (like <xref uid="com.fasterxml.jackson.databind.node.ShortNode" data-throw-if-not-resolved="false">ShortNode</xref>) in cases where value fits within range of a smaller integral numeric value.
  syntax:
    content: public ObjectNode put(String fieldName, int v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: int
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Boolean)
  id: put(java.lang.String,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, Boolean v)
  nameWithType: ObjectNode.put(String fieldName, Boolean v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, Boolean v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.
  syntax:
    content: public ObjectNode put(String fieldName, Boolean v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.lang.Boolean
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Double)
  id: put(java.lang.String,java.lang.Double)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, Double v)
  nameWithType: ObjectNode.put(String fieldName, Double v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, Double v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.
  syntax:
    content: public ObjectNode put(String fieldName, Double v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.lang.Double
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Float)
  id: put(java.lang.String,java.lang.Float)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, Float v)
  nameWithType: ObjectNode.put(String fieldName, Float v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, Float v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.
  syntax:
    content: public ObjectNode put(String fieldName, Float v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.lang.Float
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Integer)
  id: put(java.lang.String,java.lang.Integer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, Integer v)
  nameWithType: ObjectNode.put(String fieldName, Integer v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, Integer v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.
  syntax:
    content: public ObjectNode put(String fieldName, Integer v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.lang.Integer
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Long)
  id: put(java.lang.String,java.lang.Long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, Long v)
  nameWithType: ObjectNode.put(String fieldName, Long v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, Long v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method for setting value of a field to specified numeric value. The underlying <xref uid="? extends com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> that will be added is constructed using <xref uid="com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(java.lang.Long)" data-throw-if-not-resolved="false">JsonNodeFactory#numberNode(Long)</xref>, and may be "smaller" (like <xref uid="com.fasterxml.jackson.databind.node.IntNode" data-throw-if-not-resolved="false">IntNode</xref>) in cases where value fits within range of a smaller integral numeric value.


    Note that this is alternative to <xref uid="com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,long)" data-throw-if-not-resolved="false">#put(String, long)</xref> needed to avoid bumping into NPE issues with auto-unboxing.
  syntax:
    content: public ObjectNode put(String fieldName, Long v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.lang.Long
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.Short)
  id: put(java.lang.String,java.lang.Short)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, Short v)
  nameWithType: ObjectNode.put(String fieldName, Short v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, Short v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Alternative method that we need to avoid bumping into NPE issues with auto-unboxing.
  syntax:
    content: public ObjectNode put(String fieldName, Short v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.lang.Short
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.lang.String)
  id: put(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, String v)
  nameWithType: ObjectNode.put(String fieldName, String v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, String v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified String value.
  syntax:
    content: public ObjectNode put(String fieldName, String v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.math.BigDecimal)
  id: put(java.lang.String,java.math.BigDecimal)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, BigDecimal v)
  nameWithType: ObjectNode.put(String fieldName, BigDecimal v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, BigDecimal v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified numeric value.
  syntax:
    content: public ObjectNode put(String fieldName, BigDecimal v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.math.BigDecimal
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,java.math.BigInteger)
  id: put(java.lang.String,java.math.BigInteger)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, BigInteger v)
  nameWithType: ObjectNode.put(String fieldName, BigInteger v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, BigInteger v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified numeric value.
  syntax:
    content: public ObjectNode put(String fieldName, BigInteger v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: java.math.BigInteger
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,long)
  id: put(java.lang.String,long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, long v)
  nameWithType: ObjectNode.put(String fieldName, long v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, long v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified numeric value. The underlying <xref uid="? extends com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> that will be added is constructed using <xref uid="com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(long)" data-throw-if-not-resolved="false">JsonNodeFactory#numberNode(long)</xref>, and may be "smaller" (like <xref uid="com.fasterxml.jackson.databind.node.IntNode" data-throw-if-not-resolved="false">IntNode</xref>) in cases where value fits within range of a smaller integral numeric value.
  syntax:
    content: public ObjectNode put(String fieldName, long v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: long
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,short)
  id: put(java.lang.String,short)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: put(String fieldName, short v)
  nameWithType: ObjectNode.put(String fieldName, short v)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put(String fieldName, short v)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.put*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for setting value of a field to specified numeric value.
  syntax:
    content: public ObjectNode put(String fieldName, short v)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: v
      type: short
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putAll(com.fasterxml.jackson.databind.node.ObjectNode)
  id: putAll(com.fasterxml.jackson.databind.node.ObjectNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: putAll(ObjectNode other)
  nameWithType: ObjectNode.putAll(ObjectNode other)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putAll(ObjectNode other)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.putAll*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for adding all properties of the given Object, overriding any existing values for those properties.
  syntax:
    content: public JsonNode putAll(ObjectNode other)
    parameters:
    - id: other
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: Object of which properties to add to this object
    return:
      type: com.fasterxml.jackson.databind.JsonNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putAll(java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>)
  id: putAll(java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: putAll(Map<String,? extends JsonNode> properties)
  nameWithType: ObjectNode.putAll(Map<String,? extends JsonNode> properties)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putAll(Map<String,? extends JsonNode> properties)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.putAll*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for adding given properties to this object node, overriding any existing values for those properties.
  syntax:
    content: public JsonNode putAll(Map<String,? extends JsonNode> properties)
    parameters:
    - id: properties
      type: java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>
      description: Properties to add
    return:
      type: com.fasterxml.jackson.databind.JsonNode
      description: This node after adding/replacing property values (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putArray(java.lang.String)
  id: putArray(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: putArray(String fieldName)
  nameWithType: ObjectNode.putArray(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putArray(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.putArray*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will construct an ArrayNode and add it as a field of this ObjectNode, replacing old value, if any.


    **NOTE**: Unlike all **put(...)** methods, return value is **NOT** this `ObjectNode`, but the **newly created** `ArrayNode` instance.
  syntax:
    content: public ArrayNode putArray(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.ArrayNode
      description: >-
        Newly constructed ArrayNode (NOT the old value,
           which could be of any type)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putNull(java.lang.String)
  id: putNull(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: putNull(String fieldName)
  nameWithType: ObjectNode.putNull(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putNull(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.putNull*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public ObjectNode putNull(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putObject(java.lang.String)
  id: putObject(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: putObject(String fieldName)
  nameWithType: ObjectNode.putObject(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putObject(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.putObject*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will construct an ObjectNode and add it as a field of this ObjectNode, replacing old value, if any.


    **NOTE**: Unlike all **put(...)** methods, return value is **NOT** this `ObjectNode`, but the **newly created** `ObjectNode` instance.
  syntax:
    content: public ObjectNode putObject(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: >-
        Newly constructed ObjectNode (NOT the old value,
           which could be of any type)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putPOJO(java.lang.String,java.lang.Object)
  id: putPOJO(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: putPOJO(String fieldName, Object pojo)
  nameWithType: ObjectNode.putPOJO(String fieldName, Object pojo)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putPOJO(String fieldName, Object pojo)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.putPOJO*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public ObjectNode putPOJO(String fieldName, Object pojo)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: pojo
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putRawValue(java.lang.String,com.fasterxml.jackson.databind.util.RawValue)
  id: putRawValue(java.lang.String,com.fasterxml.jackson.databind.util.RawValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: putRawValue(String fieldName, RawValue raw)
  nameWithType: ObjectNode.putRawValue(String fieldName, RawValue raw)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putRawValue(String fieldName, RawValue raw)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.putRawValue*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public ObjectNode putRawValue(String fieldName, RawValue raw)
    parameters:
    - id: fieldName
      type: java.lang.String
    - id: raw
      type: com.fasterxml.jackson.databind.util.RawValue
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.remove(java.lang.String)
  id: remove(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: remove(String fieldName)
  nameWithType: ObjectNode.remove(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.remove(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.remove*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for removing field entry from this ObjectNode. Will return value of the field, if such field existed; null if not.
  syntax:
    content: public JsonNode remove(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
      description: Value of specified field, if it existed; null if not
- uid: com.fasterxml.jackson.databind.node.ObjectNode.remove(java.util.Collection<java.lang.String>)
  id: remove(java.util.Collection<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: remove(Collection<String> fieldNames)
  nameWithType: ObjectNode.remove(Collection<String> fieldNames)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.remove(Collection<String> fieldNames)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.remove*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for removing specified field properties out of this ObjectNode.
  syntax:
    content: public ObjectNode remove(Collection<String> fieldNames)
    parameters:
    - id: fieldNames
      type: java.util.Collection<java.lang.String>
      description: Names of fields to remove
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node after removing entries
- uid: com.fasterxml.jackson.databind.node.ObjectNode.removeAll()
  id: removeAll()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: removeAll()
  nameWithType: ObjectNode.removeAll()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.removeAll()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.removeAll*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for removing all field properties, such that this ObjectNode will contain no properties after call.
  syntax:
    content: public ObjectNode removeAll()
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node after removing all entries
- uid: com.fasterxml.jackson.databind.node.ObjectNode.replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  id: replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: replace(String fieldName, JsonNode value)
  nameWithType: ObjectNode.replace(String fieldName, JsonNode value)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.replace(String fieldName, JsonNode value)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.replace*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for replacing value of specific property with passed value, and returning value (or null if none).
  syntax:
    content: public JsonNode replace(String fieldName, JsonNode value)
    parameters:
    - id: fieldName
      type: java.lang.String
      description: Property of which value to replace
    - id: value
      type: com.fasterxml.jackson.databind.JsonNode
      description: Value to set property to, replacing old value if any
    return:
      type: com.fasterxml.jackson.databind.JsonNode
      description: >-
        Old value of the property; null if there was no such property
           with value
- uid: com.fasterxml.jackson.databind.node.ObjectNode.required(java.lang.String)
  id: required(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: required(String fieldName)
  nameWithType: ObjectNode.required(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.required(String fieldName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.required*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method is functionally equivalent to `path(fieldName).required()` and can be used to check that this node is an `ObjectNode` (that is, represents JSON Object value) and has value for specified property with key `fieldName` (but note that value may be explicit JSON null value). If this node is Object Node and has value for specified property, `this` is returned to allow chaining; otherwise <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> is thrown.
  syntax:
    content: public JsonNode required(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.retain(java.lang.String...)
  id: retain(java.lang.String...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: retain(String[] fieldNames)
  nameWithType: ObjectNode.retain(String[] fieldNames)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.retain(String[] fieldNames)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.retain*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for removing all field properties out of this ObjectNode **except** for ones specified in argument.
  syntax:
    content: public ObjectNode retain(String[] fieldNames)
    parameters:
    - id: fieldNames
      type: java.lang.String[]
      description: Fields to <b>retain</b> in this ObjectNode
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow call chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.retain(java.util.Collection<java.lang.String>)
  id: retain(java.util.Collection<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: retain(Collection<String> fieldNames)
  nameWithType: ObjectNode.retain(Collection<String> fieldNames)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.retain(Collection<String> fieldNames)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.retain*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method for removing all field properties out of this ObjectNode **except** for ones specified in argument.
  syntax:
    content: public ObjectNode retain(Collection<String> fieldNames)
    parameters:
    - id: fieldNames
      type: java.util.Collection<java.lang.String>
      description: Fields to <b>retain</b> in this ObjectNode
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: This node (to allow call chaining)
- uid: com.fasterxml.jackson.databind.node.ObjectNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: serialize(JsonGenerator g, SerializerProvider provider)
  nameWithType: ObjectNode.serialize(JsonGenerator g, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.serialize(JsonGenerator g, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that can be called to serialize this node and all of its descendants using specified JSON generator.
  syntax:
    content: public void serialize(JsonGenerator g, SerializerProvider provider)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.node.ObjectNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
  nameWithType: ObjectNode.serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Type information is needed, even if JsonNode instances are "plain" JSON, since they may be mixed with other types.
  syntax:
    content: public void serializeWithType(JsonGenerator g, SerializerProvider provider, TypeSerializer typeSer)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.node.ObjectNode.size()
  id: size()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: size()
  nameWithType: ObjectNode.size()
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.size()
  overload: com.fasterxml.jackson.databind.node.ObjectNode.size*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: 'Method that returns number of child nodes this node contains: for Array nodes, number of child elements, for Object nodes, number of fields, and for all other nodes 0.'
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.node.ObjectNode.with(java.lang.String)
  id: with(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: with(String propertyName)
  nameWithType: ObjectNode.with(String propertyName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.with(String propertyName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.with*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that can be called on Object nodes, to access a property that has Object value; or if no such property exists, to create, add and return such Object node. If the node method is called on is not Object node, or if property exists and has value that is not Object node, <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref> is thrown


    NOTE: since 2.10 has had co-variant return type
  syntax:
    content: public ObjectNode with(String propertyName)
    parameters:
    - id: propertyName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.withArray(java.lang.String)
  id: withArray(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.ObjectNode
  langs:
  - java
  name: withArray(String propertyName)
  nameWithType: ObjectNode.withArray(String propertyName)
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.withArray(String propertyName)
  overload: com.fasterxml.jackson.databind.node.ObjectNode.withArray*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that can be called on Object nodes, to access a property that has `Array` value; or if no such property exists, to create, add and return such Array node. If the node method is called on is not Object node, or if property exists and has value that is not Array node, <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref> is thrown


    NOTE: since 2.10 has had co-variant return type
  syntax:
    content: public ArrayNode withArray(String propertyName)
    parameters:
    - id: propertyName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.node.ArrayNode
references:
- uid: com.fasterxml.jackson.databind.node.JsonNodeFactory
  name: JsonNodeFactory
  nameWithType: JsonNodeFactory
  fullName: com.fasterxml.jackson.databind.node.JsonNodeFactory
- uid: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode*
  name: ObjectNode
  nameWithType: ObjectNode.ObjectNode
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.ObjectNode
  package: com.fasterxml.jackson.databind.node
- uid: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonNode>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonNode
    name: JsonNode
    fullName: com.fasterxml.jackson.databind.JsonNode
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.JsonPointer
  name: JsonPointer
  nameWithType: JsonPointer
  fullName: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode._at*
  name: _at
  nameWithType: ObjectNode._at
  fullName: com.fasterxml.jackson.databind.node.ObjectNode._at
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.deepCopy*
  name: deepCopy
  nameWithType: ObjectNode.deepCopy
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.deepCopy
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty*
  name: isEmpty
  nameWithType: ObjectNode.isEmpty
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.isEmpty
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.JsonNodeType
  name: JsonNodeType
  nameWithType: JsonNodeType
  fullName: com.fasterxml.jackson.databind.node.JsonNodeType
- uid: com.fasterxml.jackson.databind.node.ObjectNode.getNodeType*
  name: getNodeType
  nameWithType: ObjectNode.getNodeType
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.getNodeType
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.isObject*
  name: isObject
  nameWithType: ObjectNode.isObject
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.isObject
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.ObjectNode.asToken*
  name: asToken
  nameWithType: ObjectNode.asToken
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.asToken
  package: com.fasterxml.jackson.databind.node
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.node.ObjectNode.size*
  name: size
  nameWithType: ObjectNode.size
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.size
  package: com.fasterxml.jackson.databind.node
- uid: java.util.Iterator<com.fasterxml.jackson.databind.JsonNode>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonNode
    name: JsonNode
    fullName: com.fasterxml.jackson.databind.JsonNode
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.elements*
  name: elements
  nameWithType: ObjectNode.elements
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.elements
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.get*
  name: get
  nameWithType: ObjectNode.get
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.get
  package: com.fasterxml.jackson.databind.node
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.Iterator<java.lang.String>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.fieldNames*
  name: fieldNames
  nameWithType: ObjectNode.fieldNames
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.fieldNames
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.path*
  name: path
  nameWithType: ObjectNode.path
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.path
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.required*
  name: required
  nameWithType: ObjectNode.required
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.required
  package: com.fasterxml.jackson.databind.node
- uid: java.util.Iterator<java.util.Map.Entry<java.lang.String,com.fasterxml.jackson.databind.JsonNode>>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonNode
    name: JsonNode
    fullName: com.fasterxml.jackson.databind.JsonNode
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.fields*
  name: fields
  nameWithType: ObjectNode.fields
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.fields
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.with*
  name: with
  nameWithType: ObjectNode.with
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.with
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ArrayNode
  name: ArrayNode
  nameWithType: ArrayNode
  fullName: com.fasterxml.jackson.databind.node.ArrayNode
- uid: com.fasterxml.jackson.databind.node.ObjectNode.withArray*
  name: withArray
  nameWithType: ObjectNode.withArray
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.withArray
  package: com.fasterxml.jackson.databind.node
- uid: java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>
  spec.java:
  - uid: java.util.Comparator
    name: Comparator
    fullName: java.util.Comparator
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonNode
    name: JsonNode
    fullName: com.fasterxml.jackson.databind.JsonNode
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.equals*
  name: equals
  nameWithType: ObjectNode.equals
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.equals
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findValue*
  name: findValue
  nameWithType: ObjectNode.findValue
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findValue
  package: com.fasterxml.jackson.databind.node
- uid: java.util.List<com.fasterxml.jackson.databind.JsonNode>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonNode
    name: JsonNode
    fullName: com.fasterxml.jackson.databind.JsonNode
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findValues*
  name: findValues
  nameWithType: ObjectNode.findValues
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findValues
  package: com.fasterxml.jackson.databind.node
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findValuesAsText*
  name: findValuesAsText
  nameWithType: ObjectNode.findValuesAsText
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findValuesAsText
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findParent*
  name: findParent
  nameWithType: ObjectNode.findParent
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findParent
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.findParents*
  name: findParents
  nameWithType: ObjectNode.findParents
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.findParents
  package: com.fasterxml.jackson.databind.node
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.node.ObjectNode.serialize*
  name: serialize
  nameWithType: ObjectNode.serialize
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.serialize
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.node.ObjectNode.serializeWithType*
  name: serializeWithType
  nameWithType: ObjectNode.serializeWithType
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.serializeWithType
  package: com.fasterxml.jackson.databind.node
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.node.ObjectNode.set*
  name: <T>set
  nameWithType: ObjectNode.<T>set
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>set
  package: com.fasterxml.jackson.databind.node
- uid: java.util.Map<java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: '? extends com.fasterxml.jackson.databind.JsonNode'
    name: JsonNode
    fullName: '? extends com.fasterxml.jackson.databind.JsonNode'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.setAll*
  name: <T>setAll
  nameWithType: ObjectNode.<T>setAll
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>setAll
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.replace*
  name: replace
  nameWithType: ObjectNode.replace
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.replace
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.without*
  name: <T>without
  nameWithType: ObjectNode.<T>without
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.<T>without
  package: com.fasterxml.jackson.databind.node
- uid: java.util.Collection<java.lang.String>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.put*
  name: put
  nameWithType: ObjectNode.put
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.put
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.remove*
  name: remove
  nameWithType: ObjectNode.remove
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.remove
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.removeAll*
  name: removeAll
  nameWithType: ObjectNode.removeAll
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.removeAll
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putAll*
  name: putAll
  nameWithType: ObjectNode.putAll
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putAll
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.retain*
  name: retain
  nameWithType: ObjectNode.retain
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.retain
  package: com.fasterxml.jackson.databind.node
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putArray*
  name: putArray
  nameWithType: ObjectNode.putArray
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putArray
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putObject*
  name: putObject
  nameWithType: ObjectNode.putObject
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putObject
  package: com.fasterxml.jackson.databind.node
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putPOJO*
  name: putPOJO
  nameWithType: ObjectNode.putPOJO
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putPOJO
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.util.RawValue
  name: RawValue
  nameWithType: RawValue
  fullName: com.fasterxml.jackson.databind.util.RawValue
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putRawValue*
  name: putRawValue
  nameWithType: ObjectNode.putRawValue
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putRawValue
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.putNull*
  name: putNull
  nameWithType: ObjectNode.putNull
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.putNull
  package: com.fasterxml.jackson.databind.node
- uid: short
  spec.java:
  - uid: short
    name: short
    fullName: short
- uid: java.lang.Short
  spec.java:
  - uid: java.lang.Short
    name: Short
    fullName: java.lang.Short
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: java.lang.Long
  spec.java:
  - uid: java.lang.Long
    name: Long
    fullName: java.lang.Long
- uid: float
  spec.java:
  - uid: float
    name: float
    fullName: float
- uid: java.lang.Float
  spec.java:
  - uid: java.lang.Float
    name: Float
    fullName: java.lang.Float
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: java.lang.Double
  spec.java:
  - uid: java.lang.Double
    name: Double
    fullName: java.lang.Double
- uid: java.math.BigDecimal
  spec.java:
  - uid: java.math.BigDecimal
    name: BigDecimal
    fullName: java.math.BigDecimal
- uid: java.math.BigInteger
  spec.java:
  - uid: java.math.BigInteger
    name: BigInteger
    fullName: java.math.BigInteger
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.node.ObjectNode._childrenEqual*
  name: _childrenEqual
  nameWithType: ObjectNode._childrenEqual
  fullName: com.fasterxml.jackson.databind.node.ObjectNode._childrenEqual
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode.hashCode*
  name: hashCode
  nameWithType: ObjectNode.hashCode
  fullName: com.fasterxml.jackson.databind.node.ObjectNode.hashCode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ObjectNode._put*
  name: _put
  nameWithType: ObjectNode._put
  fullName: com.fasterxml.jackson.databind.node.ObjectNode._put
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ContainerNode<com.fasterxml.jackson.databind.node.ObjectNode>
  name: ContainerNode<ObjectNode>
  nameWithType: ContainerNode<ObjectNode>
  fullName: com.fasterxml.jackson.databind.node.ContainerNode<com.fasterxml.jackson.databind.node.ObjectNode>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  name: JsonNode.findValuesAsText(String,List<String>)
  nameWithType: JsonNode.findValuesAsText(String,List<String>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
- uid: com.fasterxml.jackson.databind.JsonNode.doubleValue()
  name: JsonNode.doubleValue()
  nameWithType: JsonNode.doubleValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.doubleValue()
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.requiredAt(JsonPointer)
  nameWithType: JsonNode.requiredAt(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BaseJsonNode.serialize(JsonGenerator,SerializerProvider)
  nameWithType: BaseJsonNode.serialize(JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonNode.iterator()
  name: JsonNode.iterator()
  nameWithType: JsonNode.iterator()
  fullName: com.fasterxml.jackson.databind.JsonNode.iterator()
- uid: com.fasterxml.jackson.databind.JsonNode.decimalValue()
  name: JsonNode.decimalValue()
  nameWithType: JsonNode.decimalValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.decimalValue()
- uid: com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
  name: JsonNode.findValue(String)
  nameWithType: JsonNode.findValue(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
  name: JsonNode.hasNonNull(int)
  nameWithType: JsonNode.hasNonNull(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  name: BaseJsonNode.required(int)
  nameWithType: BaseJsonNode.required(int)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  name: JsonNode.findValuesAsText(String)
  nameWithType: JsonNode.findValuesAsText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.get(java.lang.String)
  name: ContainerNode.get(String)
  nameWithType: ContainerNode.get(String)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.get(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  name: JsonNode.isMissingNode()
  nameWithType: JsonNode.isMissingNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  name: JsonNode.findValues(String)
  nameWithType: JsonNode.findValues(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  name: BaseJsonNode.findPath(String)
  nameWithType: BaseJsonNode.findPath(String)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode()
  name: ContainerNode.arrayNode()
  nameWithType: ContainerNode.arrayNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
  name: JsonNode.hasNonNull(String)
  nameWithType: JsonNode.hasNonNull(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>require()
  name: JsonNode.<T>require()
  nameWithType: JsonNode.<T>require()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.numberValue()
  name: JsonNode.numberValue()
  nameWithType: JsonNode.numberValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.numberValue()
- uid: com.fasterxml.jackson.databind.JsonNode.textValue()
  name: JsonNode.textValue()
  nameWithType: JsonNode.textValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.textValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  name: JsonNode.isContainerNode()
  nameWithType: JsonNode.isContainerNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_this()
  name: JsonNode.<T>_this()
  nameWithType: JsonNode.<T>_this()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_this()
- uid: com.fasterxml.jackson.databind.JsonNode.isValueNode()
  name: JsonNode.isValueNode()
  nameWithType: JsonNode.isValueNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isValueNode()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.asText()
  name: ContainerNode.asText()
  nameWithType: ContainerNode.asText()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.asText()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode(int)
  name: ContainerNode.arrayNode(int)
  nameWithType: ContainerNode.arrayNode(int)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.arrayNode(int)
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble()
  name: JsonNode.asDouble()
  nameWithType: JsonNode.asDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.booleanNode(boolean)
  name: ContainerNode.booleanNode(boolean)
  nameWithType: ContainerNode.booleanNode(boolean)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.booleanNode(boolean)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Short)
  name: ContainerNode.numberNode(Short)
  nameWithType: ContainerNode.numberNode(Short)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Short)
- uid: com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
  name: JsonNode.findParent(String)
  nameWithType: JsonNode.findParent(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  name: JsonNode.bigIntegerValue()
  nameWithType: JsonNode.bigIntegerValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.get(int)
  name: ContainerNode.get(int)
  nameWithType: ContainerNode.get(int)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.get(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isTextual()
  name: JsonNode.isTextual()
  nameWithType: JsonNode.isTextual()
  fullName: com.fasterxml.jackson.databind.JsonNode.isTextual()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  name: JsonNode.<T>requireNonNull()
  nameWithType: JsonNode.<T>requireNonNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Byte)
  name: ContainerNode.numberNode(Byte)
  nameWithType: ContainerNode.numberNode(Byte)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Byte)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Double)
  name: ContainerNode.numberNode(Double)
  nameWithType: ContainerNode.numberNode(Double)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Double)
- uid: com.fasterxml.jackson.databind.JsonNode.isObject()
  name: JsonNode.isObject()
  nameWithType: JsonNode.isObject()
  fullName: com.fasterxml.jackson.databind.JsonNode.isObject()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  name: BaseJsonNode.toPrettyString()
  nameWithType: BaseJsonNode.toPrettyString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean()
  name: JsonNode.asBoolean()
  nameWithType: JsonNode.asBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean()
- uid: com.fasterxml.jackson.databind.JsonNode.isPojo()
  name: JsonNode.isPojo()
  nameWithType: JsonNode.isPojo()
  fullName: com.fasterxml.jackson.databind.JsonNode.isPojo()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(long)
  name: ContainerNode.numberNode(long)
  nameWithType: ContainerNode.numberNode(long)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(long)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  name: BaseJsonNode.traverse()
  nameWithType: BaseJsonNode.traverse()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  name: BaseJsonNode.required(String)
  nameWithType: BaseJsonNode.required(String)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  name: JsonNode.asDouble(double)
  nameWithType: JsonNode.asDouble(double)
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
- uid: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  name: JsonNode.asText(String)
  nameWithType: JsonNode.asText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  name: BaseJsonNode.traverse(ObjectCodec)
  nameWithType: BaseJsonNode.traverse(ObjectCodec)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializable.Base.isEmpty(SerializerProvider)
  nameWithType: JsonSerializable.Base.isEmpty(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonNode.isNull()
  name: JsonNode.isNull()
  nameWithType: JsonNode.isNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNull()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[])
  name: ContainerNode.binaryNode(byte[])
  nameWithType: ContainerNode.binaryNode(byte[])
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[])
- uid: com.fasterxml.jackson.databind.node.ContainerNode.nullNode()
  name: ContainerNode.nullNode()
  nameWithType: ContainerNode.nullNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.nullNode()
- uid: com.fasterxml.jackson.databind.JsonNode.booleanValue()
  name: JsonNode.booleanValue()
  nameWithType: JsonNode.booleanValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.booleanValue()
- uid: com.fasterxml.jackson.databind.JsonNode.asLong(long)
  name: JsonNode.asLong(long)
  nameWithType: JsonNode.asLong(long)
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong(long)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(int)
  name: ContainerNode.numberNode(int)
  nameWithType: ContainerNode.numberNode(int)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(int)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigDecimal)
  name: ContainerNode.numberNode(BigDecimal)
  nameWithType: ContainerNode.numberNode(BigDecimal)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigDecimal)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.rawValueNode(com.fasterxml.jackson.databind.util.RawValue)
  name: ContainerNode.rawValueNode(RawValue)
  nameWithType: ContainerNode.rawValueNode(RawValue)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.rawValueNode(com.fasterxml.jackson.databind.util.RawValue)
- uid: com.fasterxml.jackson.databind.JsonNode.fields()
  name: JsonNode.fields()
  nameWithType: JsonNode.fields()
  fullName: com.fasterxml.jackson.databind.JsonNode.fields()
- uid: com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode._at(JsonPointer)
  nameWithType: JsonNode._at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigInteger)
  name: ContainerNode.numberNode(BigInteger)
  nameWithType: ContainerNode.numberNode(BigInteger)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.math.BigInteger)
- uid: com.fasterxml.jackson.databind.JsonNode.asLong()
  name: JsonNode.asLong()
  nameWithType: JsonNode.asLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong()
- uid: com.fasterxml.jackson.databind.JsonNode.isShort()
  name: JsonNode.isShort()
  nameWithType: JsonNode.isShort()
  fullName: com.fasterxml.jackson.databind.JsonNode.isShort()
- uid: com.fasterxml.jackson.databind.JsonNode.isLong()
  name: JsonNode.isLong()
  nameWithType: JsonNode.isLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.isLong()
- uid: com.fasterxml.jackson.databind.JsonNode.asInt(int)
  name: JsonNode.asInt(int)
  nameWithType: JsonNode.asInt(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt(int)
- uid: com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
  name: JsonNode.path(String)
  nameWithType: JsonNode.path(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloat()
  name: JsonNode.isFloat()
  nameWithType: JsonNode.isFloat()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloat()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  name: BaseJsonNode.toString()
  nameWithType: BaseJsonNode.toString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
- uid: com.fasterxml.jackson.databind.JsonNode.elements()
  name: JsonNode.elements()
  nameWithType: JsonNode.elements()
  fullName: com.fasterxml.jackson.databind.JsonNode.elements()
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  name: JsonNode.canConvertToInt()
  nameWithType: JsonNode.canConvertToInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  name: JsonNode.equals(Object)
  nameWithType: JsonNode.equals(Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Integer)
  name: ContainerNode.numberNode(Integer)
  nameWithType: ContainerNode.numberNode(Integer)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Integer)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[],int,int)
  name: ContainerNode.binaryNode(byte[],int,int)
  nameWithType: ContainerNode.binaryNode(byte[],int,int)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.binaryNode(byte[],int,int)
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode.findParents(String,List<JsonNode>)
  nameWithType: JsonNode.findParents(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  name: JsonNode.isBigInteger()
  nameWithType: JsonNode.isBigInteger()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
- uid: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.at(JsonPointer)
  nameWithType: JsonNode.at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  name: JsonNode.requiredAt(String)
  nameWithType: JsonNode.requiredAt(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isInt()
  name: JsonNode.isInt()
  nameWithType: JsonNode.isInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.isInt()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.size()
  name: ContainerNode.size()
  nameWithType: ContainerNode.size()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.size()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.removeAll()
  name: ContainerNode.removeAll()
  nameWithType: ContainerNode.removeAll()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.removeAll()
- uid: com.fasterxml.jackson.databind.JsonNode.path(int)
  name: JsonNode.path(int)
  nameWithType: JsonNode.path(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.path(int)
- uid: com.fasterxml.jackson.databind.JsonNode.asInt()
  name: JsonNode.asInt()
  nameWithType: JsonNode.asInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(float)
  name: ContainerNode.numberNode(float)
  nameWithType: ContainerNode.numberNode(float)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(float)
- uid: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  name: JsonNode.at(String)
  nameWithType: JsonNode.at(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Float)
  name: ContainerNode.numberNode(Float)
  nameWithType: ContainerNode.numberNode(Float)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Float)
- uid: com.fasterxml.jackson.databind.JsonNode.has(int)
  name: JsonNode.has(int)
  nameWithType: JsonNode.has(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.has(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  name: JsonNode.isFloatingPointNumber()
  nameWithType: JsonNode.isFloatingPointNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(double)
  name: ContainerNode.numberNode(double)
  nameWithType: ContainerNode.numberNode(double)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(double)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(short)
  name: ContainerNode.numberNode(short)
  nameWithType: ContainerNode.numberNode(short)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(short)
- uid: com.fasterxml.jackson.databind.JsonNode.intValue()
  name: JsonNode.intValue()
  nameWithType: JsonNode.intValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.intValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isBoolean()
  name: JsonNode.isBoolean()
  nameWithType: JsonNode.isBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBoolean()
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode.findValues(String,List<JsonNode>)
  nameWithType: JsonNode.findValues(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  name: BaseJsonNode.numberType()
  nameWithType: BaseJsonNode.numberType()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
- uid: com.fasterxml.jackson.databind.JsonNode.binaryValue()
  name: JsonNode.binaryValue()
  nameWithType: JsonNode.binaryValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.binaryValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  name: JsonNode.isBigDecimal()
  nameWithType: JsonNode.isBigDecimal()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
- uid: com.fasterxml.jackson.databind.JsonNode.isDouble()
  name: JsonNode.isDouble()
  nameWithType: JsonNode.isDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.isDouble()
- uid: com.fasterxml.jackson.databind.JsonNode.longValue()
  name: JsonNode.longValue()
  nameWithType: JsonNode.longValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.longValue()
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  nameWithType: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.floatValue()
  name: JsonNode.floatValue()
  nameWithType: JsonNode.floatValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.floatValue()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.textNode(java.lang.String)
  name: ContainerNode.textNode(String)
  nameWithType: ContainerNode.textNode(String)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.textNode(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BaseJsonNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BaseJsonNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.asToken()
  name: ContainerNode.asToken()
  nameWithType: ContainerNode.asToken()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.asToken()
- uid: com.fasterxml.jackson.databind.JsonNode.isArray()
  name: JsonNode.isArray()
  nameWithType: JsonNode.isArray()
  fullName: com.fasterxml.jackson.databind.JsonNode.isArray()
- uid: com.fasterxml.jackson.databind.JsonNode.fieldNames()
  name: JsonNode.fieldNames()
  nameWithType: JsonNode.fieldNames()
  fullName: com.fasterxml.jackson.databind.JsonNode.fieldNames()
- uid: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  name: JsonNode.isIntegralNumber()
  nameWithType: JsonNode.isIntegralNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Long)
  name: ContainerNode.numberNode(Long)
  nameWithType: ContainerNode.numberNode(Long)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(java.lang.Long)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.pojoNode(java.lang.Object)
  name: ContainerNode.pojoNode(Object)
  nameWithType: ContainerNode.pojoNode(Object)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.pojoNode(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  name: JsonNode.<T>with(String)
  nameWithType: JsonNode.<T>with(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  name: BaseJsonNode.hashCode()
  nameWithType: BaseJsonNode.hashCode()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
- uid: com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
  name: JsonNode.has(String)
  nameWithType: JsonNode.has(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.missingNode()
  name: ContainerNode.missingNode()
  nameWithType: ContainerNode.missingNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.missingNode()
- uid: com.fasterxml.jackson.databind.JsonNode.shortValue()
  name: JsonNode.shortValue()
  nameWithType: JsonNode.shortValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.shortValue()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: JsonNode.<T>_reportRequiredViolation(String,Object)
  nameWithType: JsonNode.<T>_reportRequiredViolation(String,Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  name: JsonNode.<T>withArray(String)
  nameWithType: JsonNode.<T>withArray(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isEmpty()
  name: JsonNode.isEmpty()
  nameWithType: JsonNode.isEmpty()
  fullName: com.fasterxml.jackson.databind.JsonNode.isEmpty()
- uid: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(byte)
  name: ContainerNode.numberNode(byte)
  nameWithType: ContainerNode.numberNode(byte)
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.numberNode(byte)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
  name: JsonNode.<T>deepCopy()
  nameWithType: JsonNode.<T>deepCopy()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
- uid: com.fasterxml.jackson.databind.JsonNode.isBinary()
  name: JsonNode.isBinary()
  nameWithType: JsonNode.isBinary()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBinary()
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  name: JsonNode.findParents(String)
  nameWithType: JsonNode.findParents(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.getNodeType()
  name: JsonNode.getNodeType()
  nameWithType: JsonNode.getNodeType()
  fullName: com.fasterxml.jackson.databind.JsonNode.getNodeType()
- uid: com.fasterxml.jackson.databind.JsonNode.isNumber()
  name: JsonNode.isNumber()
  nameWithType: JsonNode.isNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNumber()
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  name: JsonNode.asBoolean(boolean)
  nameWithType: JsonNode.asBoolean(boolean)
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
- uid: com.fasterxml.jackson.databind.node.ContainerNode.objectNode()
  name: ContainerNode.objectNode()
  nameWithType: ContainerNode.objectNode()
  fullName: com.fasterxml.jackson.databind.node.ContainerNode.objectNode()
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  name: JsonNode.canConvertToLong()
  nameWithType: JsonNode.canConvertToLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,com.fasterxml.jackson.databind.JsonNode
  name: String,JsonNode
  nameWithType: String,JsonNode
  fullName: java.lang.String,com.fasterxml.jackson.databind.JsonNode
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
- uid: java.util.Comparator
  name: Comparator
  nameWithType: Comparator
  fullName: java.util.Comparator
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode
  name: String,? extends JsonNode
  nameWithType: String,? extends JsonNode
  fullName: java.lang.String,? extends com.fasterxml.jackson.databind.JsonNode
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.fasterxml.jackson.databind.node.ContainerNode
  name: ContainerNode
  nameWithType: ContainerNode
  fullName: com.fasterxml.jackson.databind.node.ContainerNode
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List
  name: JsonNode.findValuesAsText(String,List
  nameWithType: JsonNode.findValuesAsText(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List
- uid: T>require()
  name: T>require()
  nameWithType: T>require()
  fullName: T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.
  name: JsonNode.
  nameWithType: JsonNode.
  fullName: com.fasterxml.jackson.databind.JsonNode.
- uid: T>_this()
  name: T>_this()
  nameWithType: T>_this()
  fullName: T>_this()
- uid: T>requireNonNull()
  name: T>requireNonNull()
  nameWithType: T>requireNonNull()
  fullName: T>requireNonNull()
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List
  name: JsonNode.findParents(String,List
  nameWithType: JsonNode.findParents(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode>)
  nameWithType: JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List
  name: JsonNode.findValues(String,List
  nameWithType: JsonNode.findValues(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode>,JsonNode)
  nameWithType: JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
  name: JsonNode.equals(Comparator
  nameWithType: JsonNode.equals(Comparator
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
- uid: T>with(java.lang.String)
  name: T>with(String)
  nameWithType: T>with(String)
  fullName: T>with(java.lang.String)
- uid: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: T>_reportRequiredViolation(String,Object)
  nameWithType: T>_reportRequiredViolation(String,Object)
  fullName: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: T>withArray(java.lang.String)
  name: T>withArray(String)
  nameWithType: T>withArray(String)
  fullName: T>withArray(java.lang.String)
- uid: T>deepCopy()
  name: T>deepCopy()
  nameWithType: T>deepCopy()
  fullName: T>deepCopy()
