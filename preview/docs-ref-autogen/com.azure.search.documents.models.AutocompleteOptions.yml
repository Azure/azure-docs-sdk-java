### YamlMime:JavaType
uid: "com.azure.search.documents.models.AutocompleteOptions"
fullName: "com.azure.search.documents.models.AutocompleteOptions"
name: "AutocompleteOptions"
nameWithType: "AutocompleteOptions"
summary: "Parameter group."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AutocompleteOptions"
constructors:
- uid: "com.azure.search.documents.models.AutocompleteOptions.AutocompleteOptions()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.AutocompleteOptions()"
  name: "AutocompleteOptions()"
  nameWithType: "AutocompleteOptions.AutocompleteOptions()"
  syntax: "public AutocompleteOptions()"
methods:
- uid: "com.azure.search.documents.models.AutocompleteOptions.getAutocompleteMode()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.getAutocompleteMode()"
  name: "getAutocompleteMode()"
  nameWithType: "AutocompleteOptions.getAutocompleteMode()"
  summary: "Get the autocompleteMode property: Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms."
  syntax: "public AutocompleteMode getAutocompleteMode()"
  returns:
    description: "the autocompleteMode value."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteMode?alt=com.azure.search.documents.models.AutocompleteMode&text=AutocompleteMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.getFilter()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.getFilter()"
  name: "getFilter()"
  nameWithType: "AutocompleteOptions.getFilter()"
  summary: "Get the filter property: An OData expression that filters the documents used to produce completed terms for the Autocomplete result."
  syntax: "public String getFilter()"
  returns:
    description: "the filter value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.getHighlightPostTag()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.getHighlightPostTag()"
  name: "getHighlightPostTag()"
  nameWithType: "AutocompleteOptions.getHighlightPostTag()"
  summary: "Get the highlightPostTag property: A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled."
  syntax: "public String getHighlightPostTag()"
  returns:
    description: "the highlightPostTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.getHighlightPreTag()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.getHighlightPreTag()"
  name: "getHighlightPreTag()"
  nameWithType: "AutocompleteOptions.getHighlightPreTag()"
  summary: "Get the highlightPreTag property: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled."
  syntax: "public String getHighlightPreTag()"
  returns:
    description: "the highlightPreTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.getMinimumCoverage()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.getMinimumCoverage()"
  name: "getMinimumCoverage()"
  nameWithType: "AutocompleteOptions.getMinimumCoverage()"
  summary: "Get the minimumCoverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80."
  syntax: "public Double getMinimumCoverage()"
  returns:
    description: "the minimumCoverage value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.getSearchFields()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.getSearchFields()"
  name: "getSearchFields()"
  nameWithType: "AutocompleteOptions.getSearchFields()"
  summary: "Get the searchFields property: The list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester."
  syntax: "public List<String> getSearchFields()"
  returns:
    description: "the searchFields value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.models.AutocompleteOptions.getTop()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.getTop()"
  name: "getTop()"
  nameWithType: "AutocompleteOptions.getTop()"
  summary: "Get the top property: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5."
  syntax: "public Integer getTop()"
  returns:
    description: "the top value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setAutocompleteMode(com.azure.search.documents.models.AutocompleteMode)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setAutocompleteMode(AutocompleteMode autocompleteMode)"
  name: "setAutocompleteMode(AutocompleteMode autocompleteMode)"
  nameWithType: "AutocompleteOptions.setAutocompleteMode(AutocompleteMode autocompleteMode)"
  summary: "Set the autocompleteMode property: Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms."
  parameters:
  - description: "the autocompleteMode value to set."
    name: "autocompleteMode"
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteMode?alt=com.azure.search.documents.models.AutocompleteMode&text=AutocompleteMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompleteOptions setAutocompleteMode(AutocompleteMode autocompleteMode)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setFilter(java.lang.String)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setFilter(String filter)"
  name: "setFilter(String filter)"
  nameWithType: "AutocompleteOptions.setFilter(String filter)"
  summary: "Set the filter property: An OData expression that filters the documents used to produce completed terms for the Autocomplete result."
  parameters:
  - description: "the filter value to set."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompleteOptions setFilter(String filter)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setHighlightPostTag(java.lang.String)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setHighlightPostTag(String highlightPostTag)"
  name: "setHighlightPostTag(String highlightPostTag)"
  nameWithType: "AutocompleteOptions.setHighlightPostTag(String highlightPostTag)"
  summary: "Set the highlightPostTag property: A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled."
  parameters:
  - description: "the highlightPostTag value to set."
    name: "highlightPostTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompleteOptions setHighlightPostTag(String highlightPostTag)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setHighlightPreTag(java.lang.String)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setHighlightPreTag(String highlightPreTag)"
  name: "setHighlightPreTag(String highlightPreTag)"
  nameWithType: "AutocompleteOptions.setHighlightPreTag(String highlightPreTag)"
  summary: "Set the highlightPreTag property: A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled."
  parameters:
  - description: "the highlightPreTag value to set."
    name: "highlightPreTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompleteOptions setHighlightPreTag(String highlightPreTag)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setMinimumCoverage(java.lang.Double)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setMinimumCoverage(Double minimumCoverage)"
  name: "setMinimumCoverage(Double minimumCoverage)"
  nameWithType: "AutocompleteOptions.setMinimumCoverage(Double minimumCoverage)"
  summary: "Set the minimumCoverage property: A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80."
  parameters:
  - description: "the minimumCoverage value to set."
    name: "minimumCoverage"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompleteOptions setMinimumCoverage(Double minimumCoverage)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setSearchFields(java.lang.String...)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setSearchFields(String[] searchFields)"
  name: "setSearchFields(String[] searchFields)"
  nameWithType: "AutocompleteOptions.setSearchFields(String[] searchFields)"
  summary: "Set the searchFields property: The list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester."
  parameters:
  - description: "the searchFields value to set."
    name: "searchFields"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public AutocompleteOptions setSearchFields(String[] searchFields)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setTop(java.lang.Integer)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setTop(Integer top)"
  name: "setTop(Integer top)"
  nameWithType: "AutocompleteOptions.setTop(Integer top)"
  summary: "Set the top property: The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5."
  parameters:
  - description: "the top value to set."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompleteOptions setTop(Integer top)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.setUseFuzzyMatching(java.lang.Boolean)"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.setUseFuzzyMatching(Boolean useFuzzyMatching)"
  name: "setUseFuzzyMatching(Boolean useFuzzyMatching)"
  nameWithType: "AutocompleteOptions.setUseFuzzyMatching(Boolean useFuzzyMatching)"
  summary: "Set the useFuzzyMatching property: A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources."
  parameters:
  - description: "the useFuzzyMatching value to set."
    name: "useFuzzyMatching"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AutocompleteOptions setUseFuzzyMatching(Boolean useFuzzyMatching)"
  returns:
    description: "the AutocompleteOptions object itself."
    type: "<xref href=\"com.azure.search.documents.models.AutocompleteOptions?alt=com.azure.search.documents.models.AutocompleteOptions&text=AutocompleteOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.AutocompleteOptions.useFuzzyMatching()"
  fullName: "com.azure.search.documents.models.AutocompleteOptions.useFuzzyMatching()"
  name: "useFuzzyMatching()"
  nameWithType: "AutocompleteOptions.useFuzzyMatching()"
  summary: "Get the useFuzzyMatching property: A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources."
  syntax: "public Boolean useFuzzyMatching()"
  returns:
    description: "the useFuzzyMatching value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.search.documents.models"
artifact: com.azure:azure-search-documents:11.5.0-beta.11
