### YamlMime:JavaType
uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient"
fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient"
name: "ScalingPlansClient"
nameWithType: "ScalingPlansClient"
summary: "An instance of this class provides access to all the operations defined in Scaling<wbr>Plans<wbr>Client."
syntax: "public interface ScalingPlansClient"
methods:
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.create(java.lang.String,java.lang.String,com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.create(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  name: "create(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  nameWithType: "ScalingPlansClient.create(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  summary: "Create or update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object containing scaling plan definitions."
    name: "scalingPlan"
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ScalingPlanInner create(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  desc: "Create or update a scaling plan."
  returns:
    description: "scalingPlan."
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.createAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  name: "createAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  nameWithType: "ScalingPlansClient.createAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  summary: "Create or update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object containing scaling plan definitions."
    name: "scalingPlan"
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ScalingPlanInner> createAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  desc: "Create or update a scaling plan."
  returns:
    description: "scalingPlan on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.createWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.createWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan, Context context)"
  name: "createWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan, Context context)"
  nameWithType: "ScalingPlansClient.createWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan, Context context)"
  summary: "Create or update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object containing scaling plan definitions."
    name: "scalingPlan"
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ScalingPlanInner> createWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan, Context context)"
  desc: "Create or update a scaling plan."
  returns:
    description: "scalingPlan along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.createWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  name: "createWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  nameWithType: "ScalingPlansClient.createWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  summary: "Create or update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object containing scaling plan definitions."
    name: "scalingPlan"
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<ScalingPlanInner>> createWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanInner scalingPlan)"
  desc: "Create or update a scaling plan."
  returns:
    description: "scalingPlan along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.delete(String resourceGroupName, String scalingPlanName)"
  name: "delete(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.delete(String resourceGroupName, String scalingPlanName)"
  summary: "Remove a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String scalingPlanName)"
  desc: "Remove a scaling plan."
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.deleteAsync(String resourceGroupName, String scalingPlanName)"
  name: "deleteAsync(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.deleteAsync(String resourceGroupName, String scalingPlanName)"
  summary: "Remove a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> deleteAsync(String resourceGroupName, String scalingPlanName)"
  desc: "Remove a scaling plan."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.deleteWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  nameWithType: "ScalingPlansClient.deleteWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  summary: "Remove a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  desc: "Remove a scaling plan."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.deleteWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.deleteWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  name: "deleteWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.deleteWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  summary: "Remove a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  desc: "Remove a scaling plan."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroup(String resourceGroupName, String scalingPlanName)"
  name: "getByResourceGroup(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.getByResourceGroup(String resourceGroupName, String scalingPlanName)"
  summary: "Get a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ScalingPlanInner getByResourceGroup(String resourceGroupName, String scalingPlanName)"
  desc: "Get a scaling plan."
  returns:
    description: "a scaling plan."
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroupAsync(String resourceGroupName, String scalingPlanName)"
  name: "getByResourceGroupAsync(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.getByResourceGroupAsync(String resourceGroupName, String scalingPlanName)"
  summary: "Get a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ScalingPlanInner> getByResourceGroupAsync(String resourceGroupName, String scalingPlanName)"
  desc: "Get a scaling plan."
  returns:
    description: "a scaling plan on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroupWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  nameWithType: "ScalingPlansClient.getByResourceGroupWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  summary: "Get a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ScalingPlanInner> getByResourceGroupWithResponse(String resourceGroupName, String scalingPlanName, Context context)"
  desc: "Get a scaling plan."
  returns:
    description: "a scaling plan along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  name: "getByResourceGroupWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  summary: "Get a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<ScalingPlanInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String scalingPlanName)"
  desc: "Get a scaling plan."
  returns:
    description: "a scaling plan along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.list()"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.list()"
  name: "list()"
  nameWithType: "ScalingPlansClient.list()"
  summary: "List scaling plans in subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ScalingPlanInner> list()"
  desc: "List scaling plans in subscription."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "ScalingPlansClient.list(Context context)"
  summary: "List scaling plans in subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ScalingPlanInner> list(Context context)"
  desc: "List scaling plans in subscription."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listAsync()"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listAsync()"
  name: "listAsync()"
  nameWithType: "ScalingPlansClient.listAsync()"
  summary: "List scaling plans in subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<ScalingPlanInner> listAsync()"
  desc: "List scaling plans in subscription."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByHostPool(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByHostPool(String resourceGroupName, String hostPoolName)"
  name: "listByHostPool(String resourceGroupName, String hostPoolName)"
  nameWithType: "ScalingPlansClient.listByHostPool(String resourceGroupName, String hostPoolName)"
  summary: "List scaling plan associated with hostpool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the host pool within the specified resource group."
    name: "hostPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ScalingPlanInner> listByHostPool(String resourceGroupName, String hostPoolName)"
  desc: "List scaling plan associated with hostpool."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByHostPool(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByHostPool(String resourceGroupName, String hostPoolName, Context context)"
  name: "listByHostPool(String resourceGroupName, String hostPoolName, Context context)"
  nameWithType: "ScalingPlansClient.listByHostPool(String resourceGroupName, String hostPoolName, Context context)"
  summary: "List scaling plan associated with hostpool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the host pool within the specified resource group."
    name: "hostPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ScalingPlanInner> listByHostPool(String resourceGroupName, String hostPoolName, Context context)"
  desc: "List scaling plan associated with hostpool."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByHostPoolAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByHostPoolAsync(String resourceGroupName, String hostPoolName)"
  name: "listByHostPoolAsync(String resourceGroupName, String hostPoolName)"
  nameWithType: "ScalingPlansClient.listByHostPoolAsync(String resourceGroupName, String hostPoolName)"
  summary: "List scaling plan associated with hostpool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the host pool within the specified resource group."
    name: "hostPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ScalingPlanInner> listByHostPoolAsync(String resourceGroupName, String hostPoolName)"
  desc: "List scaling plan associated with hostpool."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "ScalingPlansClient.listByResourceGroup(String resourceGroupName)"
  summary: "List scaling plans."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ScalingPlanInner> listByResourceGroup(String resourceGroupName)"
  desc: "List scaling plans."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "ScalingPlansClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "List scaling plans."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ScalingPlanInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "List scaling plans."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByResourceGroupAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.listByResourceGroupAsync(String resourceGroupName)"
  name: "listByResourceGroupAsync(String resourceGroupName)"
  nameWithType: "ScalingPlansClient.listByResourceGroupAsync(String resourceGroupName)"
  summary: "List scaling plans."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ScalingPlanInner> listByResourceGroupAsync(String resourceGroupName)"
  desc: "List scaling plans."
  returns:
    description: "scalingPlanList as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.update(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.update(String resourceGroupName, String scalingPlanName)"
  name: "update(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.update(String resourceGroupName, String scalingPlanName)"
  summary: "Update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ScalingPlanInner update(String resourceGroupName, String scalingPlanName)"
  desc: "Update a scaling plan."
  returns:
    description: "scalingPlan."
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateAsync(String resourceGroupName, String scalingPlanName)"
  name: "updateAsync(String resourceGroupName, String scalingPlanName)"
  nameWithType: "ScalingPlansClient.updateAsync(String resourceGroupName, String scalingPlanName)"
  summary: "Update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ScalingPlanInner> updateAsync(String resourceGroupName, String scalingPlanName)"
  desc: "Update a scaling plan."
  returns:
    description: "scalingPlan on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  name: "updateAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  nameWithType: "ScalingPlansClient.updateAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  summary: "Update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object containing scaling plan definitions."
    name: "scalingPlan"
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch?alt=com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch&text=ScalingPlanPatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ScalingPlanInner> updateAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  desc: "Update a scaling plan."
  returns:
    description: "scalingPlan on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan, Context context)"
  name: "updateWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan, Context context)"
  nameWithType: "ScalingPlansClient.updateWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan, Context context)"
  summary: "Update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object containing scaling plan definitions."
    name: "scalingPlan"
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch?alt=com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch&text=ScalingPlanPatch\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ScalingPlanInner> updateWithResponse(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan, Context context)"
  desc: "Update a scaling plan."
  returns:
    description: "scalingPlan along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch)"
  fullName: "com.azure.resourcemanager.desktopvirtualization.fluent.ScalingPlansClient.updateWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  name: "updateWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  nameWithType: "ScalingPlansClient.updateWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  summary: "Update a scaling plan."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the scaling plan."
    name: "scalingPlanName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Object containing scaling plan definitions."
    name: "scalingPlan"
    type: "<xref href=\"com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch?alt=com.azure.resourcemanager.desktopvirtualization.models.ScalingPlanPatch&text=ScalingPlanPatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<ScalingPlanInner>> updateWithResponseAsync(String resourceGroupName, String scalingPlanName, ScalingPlanPatch scalingPlan)"
  desc: "Update a scaling plan."
  returns:
    description: "scalingPlan along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner?alt=com.azure.resourcemanager.desktopvirtualization.fluent.models.ScalingPlanInner&text=ScalingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ScalingPlansClient."
metadata: {}
package: "com.azure.resourcemanager.desktopvirtualization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-desktopvirtualization:1.0.0-beta.2
