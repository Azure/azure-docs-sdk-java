### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.util.JsonParserSequence
  id: JsonParserSequence
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util
  children:
  - com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(boolean,com.fasterxml.jackson.core.JsonParser[])
  - com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])
  - com.fasterxml.jackson.core.util.JsonParserSequence._checkForExistingToken
  - com.fasterxml.jackson.core.util.JsonParserSequence._hasToken
  - com.fasterxml.jackson.core.util.JsonParserSequence._nextParserIndex
  - com.fasterxml.jackson.core.util.JsonParserSequence._parsers
  - com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List<com.fasterxml.jackson.core.JsonParser>)
  - com.fasterxml.jackson.core.util.JsonParserSequence.close()
  - com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount()
  - com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()
  - com.fasterxml.jackson.core.util.JsonParserSequence.skipChildren()
  - com.fasterxml.jackson.core.util.JsonParserSequence.switchAndReturnNext()
  - com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()
  langs:
  - java
  name: JsonParserSequence
  nameWithType: JsonParserSequence
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence
  type: Class
  package: com.fasterxml.jackson.core.util
  summary: >-
    Helper class that can be used to sequence multiple physical <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref>s to create a single logical sequence of tokens, as a single <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref>.


    Fairly simple use of <xref uid="com.fasterxml.jackson.core.util.JsonParserDelegate" data-throw-if-not-resolved="false">JsonParserDelegate</xref>: only need to override <xref uid="com.fasterxml.jackson.core.util.JsonParserSequence.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref> to handle transition
  syntax:
    content: public class JsonParserSequence extends JsonParserDelegate
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.JsonParser
  - com.fasterxml.jackson.core.util.JsonParserDelegate
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser._codec()
  - com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  - com.fasterxml.jackson.core.JsonParser.canParseAsync()
  - com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  - com.fasterxml.jackson.core.JsonParser.currentName()
  - com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  - com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  - com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  - com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  - com.fasterxml.jackson.core.JsonParser.nextTextValue()
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.canReadObjectId()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.canReadTypeId()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.close()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.currentToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.currentTokenId()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.delegate()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.finishToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentTokenId()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getFeatureMask()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getObjectId()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getText()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getText(java.io.Writer)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getTypeId()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.hasToken(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.hasTokenId(int)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartArrayToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartObjectToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.isNaN()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.overrideFormatFeatures(int,int)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.setFeatureMask(int)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()
  - com.fasterxml.jackson.core.util.JsonParserDelegate.version()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(boolean,com.fasterxml.jackson.core.JsonParser[])
  id: JsonParserSequence(boolean,com.fasterxml.jackson.core.JsonParser[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: JsonParserSequence(boolean checkForExistingToken, JsonParser[] parsers)
  nameWithType: JsonParserSequence.JsonParserSequence(boolean checkForExistingToken, JsonParser[] parsers)
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(boolean checkForExistingToken, JsonParser[] parsers)
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected JsonParserSequence(boolean checkForExistingToken, JsonParser[] parsers)
    parameters:
    - id: checkForExistingToken
      type: boolean
    - id: parsers
      type: com.fasterxml.jackson.core.JsonParser[]
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])
  id: JsonParserSequence(com.fasterxml.jackson.core.JsonParser[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: JsonParserSequence(JsonParser[] parsers)
  nameWithType: JsonParserSequence.JsonParserSequence(JsonParser[] parsers)
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence(JsonParser[] parsers)
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected JsonParserSequence(JsonParser[] parsers)
    parameters:
    - id: parsers
      type: com.fasterxml.jackson.core.JsonParser[]
- uid: com.fasterxml.jackson.core.util.JsonParserSequence._checkForExistingToken
  id: _checkForExistingToken
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: _checkForExistingToken
  nameWithType: JsonParserSequence._checkForExistingToken
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence._checkForExistingToken
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: >-
    Configuration that determines whether state of parsers is first verified to see if parser already points to a token (that is, <xref uid="com.fasterxml.jackson.core.JsonParser.hasCurrentToken()" data-throw-if-not-resolved="false">JsonParser#hasCurrentToken()</xref> returns `true`), and if so that token is first return before <xref uid="com.fasterxml.jackson.core.JsonParser.nextToken*" data-throw-if-not-resolved="false">JsonParser#nextToken</xref> is called. If enabled, this check is made; if disabled, no check is made and <xref uid="com.fasterxml.jackson.core.JsonParser.nextToken*" data-throw-if-not-resolved="false">JsonParser#nextToken</xref> is always called for all parsers.


    Default setting is `false` (for backwards-compatibility) so that possible existing token is not considered for parsers.
  syntax:
    content: protected final boolean _checkForExistingToken
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.util.JsonParserSequence._hasToken
  id: _hasToken
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: _hasToken
  nameWithType: JsonParserSequence._hasToken
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence._hasToken
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Flag used to indicate that \`JsonParser.nextToken()\` should not be called, due to parser already pointing to a token.
  syntax:
    content: protected boolean _hasToken
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.util.JsonParserSequence._nextParserIndex
  id: _nextParserIndex
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: _nextParserIndex
  nameWithType: JsonParserSequence._nextParserIndex
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence._nextParserIndex
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Index of the next parser in <xref uid="com.fasterxml.jackson.core.util.JsonParserSequence._parsers" data-throw-if-not-resolved="false">#_parsers</xref>.
  syntax:
    content: protected int _nextParserIndex
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.JsonParserSequence._parsers
  id: _parsers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: _parsers
  nameWithType: JsonParserSequence._parsers
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence._parsers
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Parsers other than the first one (which is initially assigned as delegate)
  syntax:
    content: protected final JsonParser[] _parsers
    return:
      type: com.fasterxml.jackson.core.JsonParser[]
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(java.util.List<com.fasterxml.jackson.core.JsonParser>)
  id: addFlattenedActiveParsers(java.util.List<com.fasterxml.jackson.core.JsonParser>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: addFlattenedActiveParsers(List<JsonParser> listToAddIn)
  nameWithType: JsonParserSequence.addFlattenedActiveParsers(List<JsonParser> listToAddIn)
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(List<JsonParser> listToAddIn)
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected void addFlattenedActiveParsers(List<JsonParser> listToAddIn)
    parameters:
    - id: listToAddIn
      type: java.util.List<com.fasterxml.jackson.core.JsonParser>
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: close()
  nameWithType: JsonParserSequence.close()
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.close()
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.close*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Closes the parser so that no further iteration or data access can be made; will also close the underlying input source if parser either **owns** the input source, or feature <xref uid="" data-throw-if-not-resolved="false">Feature#AUTO_CLOSE_SOURCE</xref> is enabled. Whether parser owns the input source depends on factory method that was used to construct instance (so check <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonFactory</xref> for details, but the general idea is that if caller passes in closable resource (such as <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> or <xref uid="java.io.Reader" data-throw-if-not-resolved="false">Reader</xref>) parser does NOT own the source; but if it passes a reference (such as <xref uid="java.io.File" data-throw-if-not-resolved="false">java.io.File</xref> or <xref uid="java.net.URL" data-throw-if-not-resolved="false">java.net.URL</xref> and creates stream or reader it does own them.
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount()
  id: containedParsersCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: containedParsersCount()
  nameWithType: JsonParserSequence.containedParsersCount()
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount()
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Method that is most useful for debugging or testing; returns actual number of underlying parsers sequence was constructed with (nor just ones remaining active)
  syntax:
    content: public int containedParsersCount()
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
  id: createFlattened(boolean,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)
  nameWithType: JsonParserSequence.createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: 'Method that will construct a parser (possibly a sequence) that contains all given sub-parsers. All parsers given are checked to see if they are sequences: and if so, they will be "flattened", that is, contained parsers are directly added in a new sequence instead of adding sequences within sequences. This is done to minimize delegation depth, ideally only having just a single level of delegation.'
  syntax:
    content: public static JsonParserSequence createFlattened(boolean checkForExistingToken, JsonParser first, JsonParser second)
    parameters:
    - id: checkForExistingToken
      type: boolean
    - id: first
      type: com.fasterxml.jackson.core.JsonParser
    - id: second
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.core.util.JsonParserSequence
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
  id: createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: createFlattened(JsonParser first, JsonParser second)
  nameWithType: JsonParserSequence.createFlattened(JsonParser first, JsonParser second)
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(JsonParser first, JsonParser second)
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public static JsonParserSequence createFlattened(JsonParser first, JsonParser second)
    parameters:
    - id: first
      type: com.fasterxml.jackson.core.JsonParser
    - id: second
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.core.util.JsonParserSequence
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()
  id: nextToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: nextToken()
  nameWithType: JsonParserSequence.nextToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.nextToken()
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.nextToken*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Main iteration method, which will advance stream enough to determine type of the next token, if any. If none remaining (stream has no content other than possible white space before ending), null will be returned.
  syntax:
    content: public JsonToken nextToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.skipChildren()
  id: skipChildren()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: skipChildren()
  nameWithType: JsonParserSequence.skipChildren()
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.skipChildren()
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.skipChildren*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Need to override, re-implement similar to how method defined in <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.base.ParserMinimalBase</xref>, to keep state correct here.
  syntax:
    content: public JsonParser skipChildren()
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.switchAndReturnNext()
  id: switchAndReturnNext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: switchAndReturnNext()
  nameWithType: JsonParserSequence.switchAndReturnNext()
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.switchAndReturnNext()
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.switchAndReturnNext*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected JsonToken switchAndReturnNext()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()
  id: switchToNext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.JsonParserSequence
  langs:
  - java
  name: switchToNext()
  nameWithType: JsonParserSequence.switchToNext()
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext()
  overload: com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: 'Method that will switch active delegate parser from the current one to the next parser in sequence, if there is another parser left: if so, the next parser will become the active delegate parser.'
  syntax:
    content: protected boolean switchToNext()
    return:
      type: boolean
      description: True if switch succeeded; false otherwise
references:
- uid: com.fasterxml.jackson.core.JsonParser[]
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonParser
    name: JsonParser
    fullName: com.fasterxml.jackson.core.JsonParser
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence*
  name: JsonParserSequence
  nameWithType: JsonParserSequence.JsonParserSequence
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.JsonParserSequence
  package: com.fasterxml.jackson.core.util
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened*
  name: createFlattened
  nameWithType: JsonParserSequence.createFlattened
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened
  package: com.fasterxml.jackson.core.util
- uid: java.util.List<com.fasterxml.jackson.core.JsonParser>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.core.JsonParser
    name: JsonParser
    fullName: com.fasterxml.jackson.core.JsonParser
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers*
  name: addFlattenedActiveParsers
  nameWithType: JsonParserSequence.addFlattenedActiveParsers
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers
  package: com.fasterxml.jackson.core.util
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.close*
  name: close
  nameWithType: JsonParserSequence.close
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.close
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.nextToken*
  name: nextToken
  nameWithType: JsonParserSequence.nextToken
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.nextToken
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.skipChildren*
  name: skipChildren
  nameWithType: JsonParserSequence.skipChildren
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.skipChildren
  package: com.fasterxml.jackson.core.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount*
  name: containedParsersCount
  nameWithType: JsonParserSequence.containedParsersCount
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.containedParsersCount
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext*
  name: switchToNext
  nameWithType: JsonParserSequence.switchToNext
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.JsonParserSequence.switchAndReturnNext*
  name: switchAndReturnNext
  nameWithType: JsonParserSequence.switchAndReturnNext
  fullName: com.fasterxml.jackson.core.util.JsonParserSequence.switchAndReturnNext
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate
  name: JsonParserDelegate
  nameWithType: JsonParserDelegate
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()
  name: JsonParserDelegate.getParsingContext()
  nameWithType: JsonParserDelegate.getParsingContext()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getParsingContext()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()
  name: JsonParserDelegate.getCurrentName()
  nameWithType: JsonParserDelegate.getCurrentName()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentName()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()
  name: JsonParserDelegate.getValueAsLong()
  nameWithType: JsonParserDelegate.getValueAsLong()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.hasTokenId(int)
  name: JsonParserDelegate.hasTokenId(int)
  nameWithType: JsonParserDelegate.hasTokenId(int)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.hasTokenId(int)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.setCurrentValue(java.lang.Object)
  name: JsonParserDelegate.setCurrentValue(Object)
  nameWithType: JsonParserDelegate.setCurrentValue(Object)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.setCurrentValue(java.lang.Object)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()
  name: JsonParserDelegate.getDoubleValue()
  nameWithType: JsonParserDelegate.getDoubleValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getDoubleValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.canReadTypeId()
  name: JsonParserDelegate.canReadTypeId()
  nameWithType: JsonParserDelegate.canReadTypeId()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.canReadTypeId()
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  name: JsonParser.readBinaryValue(OutputStream)
  nameWithType: JsonParser.readBinaryValue(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.canParseAsync()
  name: JsonParser.canParseAsync()
  nameWithType: JsonParser.canParseAsync()
  fullName: com.fasterxml.jackson.core.JsonParser.canParseAsync()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()
  name: JsonParserDelegate.getNumberType()
  nameWithType: JsonParserDelegate.getNumberType()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberType()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()
  name: JsonParserDelegate.requiresCustomCodec()
  nameWithType: JsonParserDelegate.requiresCustomCodec()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.requiresCustomCodec()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParserDelegate.canUseSchema(FormatSchema)
  nameWithType: JsonParserDelegate.canUseSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()
  name: JsonParserDelegate.getValueAsString()
  nameWithType: JsonParserDelegate.getValueAsString()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()
  name: JsonParserDelegate.getValueAsBoolean()
  nameWithType: JsonParserDelegate.getValueAsBoolean()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()
  name: JsonParserDelegate.getTextLength()
  nameWithType: JsonParserDelegate.getTextLength()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getTextLength()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  name: JsonParser.getBinaryValue()
  nameWithType: JsonParser.getBinaryValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()
  name: JsonParserDelegate.nextToken()
  nameWithType: JsonParserDelegate.nextToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.nextToken()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getObjectId()
  name: JsonParserDelegate.getObjectId()
  nameWithType: JsonParserDelegate.getObjectId()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getObjectId()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)
  name: JsonParserDelegate.getValueAsDouble(double)
  nameWithType: JsonParserDelegate.getValueAsDouble(double)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble(double)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getTypeId()
  name: JsonParserDelegate.getTypeId()
  nameWithType: JsonParserDelegate.getTypeId()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getTypeId()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()
  name: JsonParserDelegate.getBigIntegerValue()
  nameWithType: JsonParserDelegate.getBigIntegerValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getBigIntegerValue()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  name: JsonParser.setRequestPayloadOnError(String)
  nameWithType: JsonParser.setRequestPayloadOnError(String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  name: JsonParser.isEnabled(StreamReadFeature)
  nameWithType: JsonParser.isEnabled(StreamReadFeature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.isNaN()
  name: JsonParserDelegate.isNaN()
  nameWithType: JsonParserDelegate.isNaN()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.isNaN()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  name: JsonParser.<T>readValueAs(TypeReference<?>)
  nameWithType: JsonParser.<T>readValueAs(TypeReference<?>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  name: JsonParserDelegate.getBinaryValue(Base64Variant)
  nameWithType: JsonParserDelegate.getBinaryValue(Base64Variant)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.canReadObjectId()
  name: JsonParserDelegate.canReadObjectId()
  nameWithType: JsonParserDelegate.canReadObjectId()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.canReadObjectId()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)
  name: JsonParserDelegate.getValueAsString(String)
  nameWithType: JsonParserDelegate.getValueAsString(String)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsString(java.lang.String)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()
  name: JsonParserDelegate.getBooleanValue()
  nameWithType: JsonParserDelegate.getBooleanValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getBooleanValue()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  name: JsonParser.<T>readValuesAs(Class<T>)
  nameWithType: JsonParser.<T>readValuesAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getText(java.io.Writer)
  name: JsonParserDelegate.getText(Writer)
  nameWithType: JsonParserDelegate.getText(Writer)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getText(java.io.Writer)
- uid: com.fasterxml.jackson.core.JsonParser.currentName()
  name: JsonParser.currentName()
  nameWithType: JsonParser.currentName()
  fullName: com.fasterxml.jackson.core.JsonParser.currentName()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParserDelegate.disable(JsonParser.Feature)
  nameWithType: JsonParserDelegate.disable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.disable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()
  name: JsonParserDelegate.getValueAsDouble()
  nameWithType: JsonParserDelegate.getValueAsDouble()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsDouble()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()
  name: JsonParserDelegate.getFloatValue()
  nameWithType: JsonParserDelegate.getFloatValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getFloatValue()
- uid: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  name: JsonParser._reportUnsupportedOperation()
  nameWithType: JsonParser._reportUnsupportedOperation()
  fullName: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)
  name: JsonParserDelegate.overrideCurrentName(String)
  nameWithType: JsonParserDelegate.overrideCurrentName(String)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.overrideCurrentName(java.lang.String)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()
  name: JsonParserDelegate.getCurrentLocation()
  nameWithType: JsonParserDelegate.getCurrentLocation()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentLocation()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)
  name: JsonParserDelegate.getValueAsInt(int)
  nameWithType: JsonParserDelegate.getValueAsInt(int)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt(int)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()
  name: JsonParserDelegate.getSchema()
  nameWithType: JsonParserDelegate.getSchema()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getSchema()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  name: JsonParserDelegate.setCodec(ObjectCodec)
  nameWithType: JsonParserDelegate.setCodec(ObjectCodec)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.setCodec(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParserDelegate.isEnabled(JsonParser.Feature)
  nameWithType: JsonParserDelegate.isEnabled(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  name: JsonParser.nextBooleanValue()
  nameWithType: JsonParser.nextBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  name: JsonParser.<T>readValueAsTree()
  nameWithType: JsonParser.<T>readValueAsTree()
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.close()
  name: JsonParserDelegate.close()
  nameWithType: JsonParserDelegate.close()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.close()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()
  name: JsonParserDelegate.getLastClearedToken()
  nameWithType: JsonParserDelegate.getLastClearedToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getLastClearedToken()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()
  name: JsonParserDelegate.getCurrentToken()
  nameWithType: JsonParserDelegate.getCurrentToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentToken()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()
  name: JsonParserDelegate.clearCurrentToken()
  nameWithType: JsonParserDelegate.clearCurrentToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.clearCurrentToken()
- uid: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  name: JsonParser.nextIntValue(int)
  nameWithType: JsonParser.nextIntValue(int)
  fullName: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.currentToken()
  name: JsonParserDelegate.currentToken()
  nameWithType: JsonParserDelegate.currentToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.currentToken()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.delegate()
  name: JsonParserDelegate.delegate()
  nameWithType: JsonParserDelegate.delegate()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.delegate()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentTokenId()
  name: JsonParserDelegate.getCurrentTokenId()
  nameWithType: JsonParserDelegate.getCurrentTokenId()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentTokenId()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  name: JsonParser.<T>readValueAs(Class<T>)
  nameWithType: JsonParser.<T>readValueAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()
  name: JsonParserDelegate.getValueAsInt()
  nameWithType: JsonParserDelegate.getValueAsInt()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsInt()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  name: JsonParser.setRequestPayloadOnError(RequestPayload)
  nameWithType: JsonParser.setRequestPayloadOnError(RequestPayload)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  name: JsonParser.releaseBuffered(OutputStream)
  nameWithType: JsonParser.releaseBuffered(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParserDelegate.setSchema(FormatSchema)
  nameWithType: JsonParserDelegate.setSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.setSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.setFeatureMask(int)
  name: JsonParserDelegate.setFeatureMask(int)
  nameWithType: JsonParserDelegate.setFeatureMask(int)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.setFeatureMask(int)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getFeatureMask()
  name: JsonParserDelegate.getFeatureMask()
  nameWithType: JsonParserDelegate.getFeatureMask()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getFeatureMask()
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName()
  name: JsonParser.nextFieldName()
  nameWithType: JsonParser.nextFieldName()
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartArrayToken()
  name: JsonParserDelegate.isExpectedStartArrayToken()
  nameWithType: JsonParserDelegate.isExpectedStartArrayToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartArrayToken()
- uid: com.fasterxml.jackson.core.JsonParser._codec()
  name: JsonParser._codec()
  nameWithType: JsonParser._codec()
  fullName: com.fasterxml.jackson.core.JsonParser._codec()
- uid: com.fasterxml.jackson.core.JsonParser.nextTextValue()
  name: JsonParser.nextTextValue()
  nameWithType: JsonParser.nextTextValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextTextValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.overrideStdFeatures(int,int)
  name: JsonParserDelegate.overrideStdFeatures(int,int)
  nameWithType: JsonParserDelegate.overrideStdFeatures(int,int)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.overrideStdFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  name: JsonParser.nextLongValue(long)
  nameWithType: JsonParser.nextLongValue(long)
  fullName: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()
  name: JsonParserDelegate.nextValue()
  nameWithType: JsonParserDelegate.nextValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.nextValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.overrideFormatFeatures(int,int)
  name: JsonParserDelegate.overrideFormatFeatures(int,int)
  nameWithType: JsonParserDelegate.overrideFormatFeatures(int,int)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.overrideFormatFeatures(int,int)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  name: JsonParser.getNonBlockingInputFeeder()
  nameWithType: JsonParser.getNonBlockingInputFeeder()
  fullName: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.finishToken()
  name: JsonParserDelegate.finishToken()
  nameWithType: JsonParserDelegate.finishToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.finishToken()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()
  name: JsonParserDelegate.hasCurrentToken()
  nameWithType: JsonParserDelegate.hasCurrentToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.hasCurrentToken()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartObjectToken()
  name: JsonParserDelegate.isExpectedStartObjectToken()
  nameWithType: JsonParserDelegate.isExpectedStartObjectToken()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.isExpectedStartObjectToken()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()
  name: JsonParserDelegate.getByteValue()
  nameWithType: JsonParserDelegate.getByteValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getByteValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()
  name: JsonParserDelegate.getShortValue()
  nameWithType: JsonParserDelegate.getShortValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getShortValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()
  name: JsonParserDelegate.getCodec()
  nameWithType: JsonParserDelegate.getCodec()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getCodec()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()
  name: JsonParserDelegate.skipChildren()
  nameWithType: JsonParserDelegate.skipChildren()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.skipChildren()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.currentTokenId()
  name: JsonParserDelegate.currentTokenId()
  nameWithType: JsonParserDelegate.currentTokenId()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.currentTokenId()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()
  name: JsonParserDelegate.getEmbeddedObject()
  nameWithType: JsonParserDelegate.getEmbeddedObject()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getEmbeddedObject()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)
  name: JsonParserDelegate.getValueAsLong(long)
  nameWithType: JsonParserDelegate.getValueAsLong(long)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsLong(long)
- uid: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  name: JsonParser.configure(JsonParser.Feature,boolean)
  nameWithType: JsonParser.configure(JsonParser.Feature,boolean)
  fullName: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getText()
  name: JsonParserDelegate.getText()
  nameWithType: JsonParserDelegate.getText()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getText()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentValue()
  name: JsonParserDelegate.getCurrentValue()
  nameWithType: JsonParserDelegate.getCurrentValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getCurrentValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()
  name: JsonParserDelegate.getTextOffset()
  nameWithType: JsonParserDelegate.getTextOffset()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getTextOffset()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  name: JsonParser.<T>readValuesAs(TypeReference<T>)
  nameWithType: JsonParser.<T>readValuesAs(TypeReference<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()
  name: JsonParserDelegate.hasTextCharacters()
  nameWithType: JsonParserDelegate.hasTextCharacters()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.hasTextCharacters()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()
  name: JsonParserDelegate.getDecimalValue()
  nameWithType: JsonParserDelegate.getDecimalValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getDecimalValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()
  name: JsonParserDelegate.getTextCharacters()
  nameWithType: JsonParserDelegate.getTextCharacters()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getTextCharacters()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()
  name: JsonParserDelegate.getIntValue()
  nameWithType: JsonParserDelegate.getIntValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getIntValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)
  name: JsonParserDelegate.getValueAsBoolean(boolean)
  nameWithType: JsonParserDelegate.getValueAsBoolean(boolean)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getValueAsBoolean(boolean)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()
  name: JsonParserDelegate.getTokenLocation()
  nameWithType: JsonParserDelegate.getTokenLocation()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getTokenLocation()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()
  name: JsonParserDelegate.getNumberValue()
  nameWithType: JsonParserDelegate.getNumberValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getNumberValue()
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.version()
  name: JsonParserDelegate.version()
  nameWithType: JsonParserDelegate.version()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.version()
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  name: JsonParser.nextFieldName(SerializableString)
  nameWithType: JsonParser.nextFieldName(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParserDelegate.enable(JsonParser.Feature)
  nameWithType: JsonParserDelegate.enable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.enable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.hasToken(com.fasterxml.jackson.core.JsonToken)
  name: JsonParserDelegate.hasToken(JsonToken)
  nameWithType: JsonParserDelegate.hasToken(JsonToken)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.hasToken(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  name: JsonParserDelegate.readBinaryValue(Base64Variant,OutputStream)
  nameWithType: JsonParserDelegate.readBinaryValue(Base64Variant,OutputStream)
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  name: JsonParser.setRequestPayloadOnError(byte[],String)
  nameWithType: JsonParser.setRequestPayloadOnError(byte[],String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()
  name: JsonParserDelegate.isClosed()
  nameWithType: JsonParserDelegate.isClosed()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.isClosed()
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  name: JsonParser.releaseBuffered(Writer)
  nameWithType: JsonParser.releaseBuffered(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()
  name: JsonParserDelegate.getLongValue()
  nameWithType: JsonParserDelegate.getLongValue()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getLongValue()
- uid: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  name: JsonParser._constructError(String)
  nameWithType: JsonParser._constructError(String)
  fullName: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
- uid: com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()
  name: JsonParserDelegate.getInputSource()
  nameWithType: JsonParserDelegate.getInputSource()
  fullName: com.fasterxml.jackson.core.util.JsonParserDelegate.getInputSource()
- uid: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  name: JsonParser.getFormatFeatures()
  nameWithType: JsonParser.getFormatFeatures()
  fullName: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.core.JsonParser.
  name: JsonParser.
  nameWithType: JsonParser.
  fullName: com.fasterxml.jackson.core.JsonParser.
- uid: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValueAs(TypeReference
  nameWithType: T>readValueAs(TypeReference
  fullName: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: T>readValuesAs(java.lang.Class
  name: T>readValuesAs(Class
  nameWithType: T>readValuesAs(Class
  fullName: T>readValuesAs(java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>readValueAsTree()
  name: T>readValueAsTree()
  nameWithType: T>readValueAsTree()
  fullName: T>readValueAsTree()
- uid: T>readValueAs(java.lang.Class
  name: T>readValueAs(Class
  nameWithType: T>readValueAs(Class
  fullName: T>readValueAs(java.lang.Class
- uid: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValuesAs(TypeReference
  nameWithType: T>readValuesAs(TypeReference
  fullName: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
