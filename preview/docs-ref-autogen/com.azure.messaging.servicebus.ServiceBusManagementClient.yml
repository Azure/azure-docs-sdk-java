### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient
  id: ServiceBusManagementClient
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus
  children:
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue(com.azure.messaging.servicebus.models.CreateQueueOptions)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createQueueWithResponse(com.azure.messaging.servicebus.models.CreateQueueOptions,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription(com.azure.messaging.servicebus.models.CreateSubscriptionOptions)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscriptionWithResponse(com.azure.messaging.servicebus.models.CreateSubscriptionOptions,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic(com.azure.messaging.servicebus.models.CreateTopicOptions)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.createTopicWithResponse(com.azure.messaging.servicebus.models.CreateTopicOptions,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueue(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscription(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopic(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespaceProperties()
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespacePropertiesWithResponse(com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExists(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfo(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfoWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExists(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExistsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfo(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExists(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfo(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfoWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues()
  - com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues(com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics()
  - com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics(com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueue(com.azure.messaging.servicebus.models.QueueProperties)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueueWithResponse(com.azure.messaging.servicebus.models.QueueProperties,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscription(com.azure.messaging.servicebus.models.SubscriptionProperties)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscriptionWithResponse(com.azure.messaging.servicebus.models.SubscriptionProperties,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopic(com.azure.messaging.servicebus.models.TopicProperties)
  - com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopicWithResponse(com.azure.messaging.servicebus.models.TopicProperties,com.azure.core.util.Context)
  langs:
  - java
  name: ServiceBusManagementClient
  nameWithType: ServiceBusManagementClient
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient
  type: Class
  package: com.azure.messaging.servicebus
  summary: A **synchronous** client for managing a Service Bus namespace.
  syntax:
    content: public final class ServiceBusManagementClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.ServiceBusManagementClient(com.azure.messaging.servicebus.ServiceBusManagementAsyncClient)
  id: ServiceBusManagementClient(com.azure.messaging.servicebus.ServiceBusManagementAsyncClient)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: ServiceBusManagementClient(ServiceBusManagementAsyncClient asyncClient)
  nameWithType: ServiceBusManagementClient.ServiceBusManagementClient(ServiceBusManagementAsyncClient asyncClient)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.ServiceBusManagementClient(ServiceBusManagementAsyncClient asyncClient)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.ServiceBusManagementClient*
  type: Constructor
  package: com.azure.messaging.servicebus
  summary: Creates a new instance with the given client.
  syntax:
    content: " ServiceBusManagementClient(ServiceBusManagementAsyncClient asyncClient)"
    parameters:
    - id: asyncClient
      type: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
      description: Asynchronous client to perform management calls through.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue(com.azure.messaging.servicebus.models.CreateQueueOptions)
  id: createQueue(com.azure.messaging.servicebus.models.CreateQueueOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createQueue(CreateQueueOptions queueOptions)
  nameWithType: ServiceBusManagementClient.createQueue(CreateQueueOptions queueOptions)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue(CreateQueueOptions queueOptions)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a queue with the <xref uid="com.azure.messaging.servicebus.models.CreateQueueOptions" data-throw-if-not-resolved="false">CreateQueueOptions</xref>.
  syntax:
    content: public QueueProperties createQueue(CreateQueueOptions queueOptions)
    parameters:
    - id: queueOptions
      type: com.azure.messaging.servicebus.models.CreateQueueOptions
      description: Information about the queue to create.
    return:
      type: com.azure.messaging.servicebus.models.QueueProperties
      description: The created queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue(java.lang.String)
  id: createQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createQueue(String queueName)
  nameWithType: ServiceBusManagementClient.createQueue(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a queue with the given name.
  syntax:
    content: public QueueProperties createQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue to create.
    return:
      type: com.azure.messaging.servicebus.models.QueueProperties
      description: The created queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueueWithResponse(com.azure.messaging.servicebus.models.CreateQueueOptions,com.azure.core.util.Context)
  id: createQueueWithResponse(com.azure.messaging.servicebus.models.CreateQueueOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createQueueWithResponse(CreateQueueOptions queueOptions, Context context)
  nameWithType: ServiceBusManagementClient.createQueueWithResponse(CreateQueueOptions queueOptions, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueueWithResponse(CreateQueueOptions queueOptions, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a queue and returns the created queue in addition to the HTTP response.
  syntax:
    content: public Response<QueueProperties> createQueueWithResponse(CreateQueueOptions queueOptions, Context context)
    parameters:
    - id: queueOptions
      type: com.azure.messaging.servicebus.models.CreateQueueOptions
      description: The queue to create.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueProperties>
      description: The created queue in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription(com.azure.messaging.servicebus.models.CreateSubscriptionOptions)
  id: createSubscription(com.azure.messaging.servicebus.models.CreateSubscriptionOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createSubscription(CreateSubscriptionOptions subscription)
  nameWithType: ServiceBusManagementClient.createSubscription(CreateSubscriptionOptions subscription)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription(CreateSubscriptionOptions subscription)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a subscription with the <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref>.
  syntax:
    content: public SubscriptionProperties createSubscription(CreateSubscriptionOptions subscription)
    parameters:
    - id: subscription
      type: com.azure.messaging.servicebus.models.CreateSubscriptionOptions
      description: Information about the subscription to create.
    return:
      type: com.azure.messaging.servicebus.models.SubscriptionProperties
      description: Information about the created subscription.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription(java.lang.String,java.lang.String)
  id: createSubscription(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createSubscription(String topicName, String subscriptionName)
  nameWithType: ServiceBusManagementClient.createSubscription(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a subscription with the given topic and subscription names.
  syntax:
    content: public SubscriptionProperties createSubscription(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    return:
      type: com.azure.messaging.servicebus.models.SubscriptionProperties
      description: Information about the created subscription.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscriptionWithResponse(com.azure.messaging.servicebus.models.CreateSubscriptionOptions,com.azure.core.util.Context)
  id: createSubscriptionWithResponse(com.azure.messaging.servicebus.models.CreateSubscriptionOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createSubscriptionWithResponse(CreateSubscriptionOptions subscription, Context context)
  nameWithType: ServiceBusManagementClient.createSubscriptionWithResponse(CreateSubscriptionOptions subscription, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscriptionWithResponse(CreateSubscriptionOptions subscription, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a queue and returns the created queue in addition to the HTTP response.
  syntax:
    content: public Response<SubscriptionProperties> createSubscriptionWithResponse(CreateSubscriptionOptions subscription, Context context)
    parameters:
    - id: subscription
      type: com.azure.messaging.servicebus.models.CreateSubscriptionOptions
      description: Information about the subscription to create.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.SubscriptionProperties>
      description: The created queue in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic(com.azure.messaging.servicebus.models.CreateTopicOptions)
  id: createTopic(com.azure.messaging.servicebus.models.CreateTopicOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createTopic(CreateTopicOptions topicOptions)
  nameWithType: ServiceBusManagementClient.createTopic(CreateTopicOptions topicOptions)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic(CreateTopicOptions topicOptions)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a topic with the <xref uid="com.azure.messaging.servicebus.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref>.
  syntax:
    content: public TopicProperties createTopic(CreateTopicOptions topicOptions)
    parameters:
    - id: topicOptions
      type: com.azure.messaging.servicebus.models.CreateTopicOptions
      description: Information about the topic to create.
    return:
      type: com.azure.messaging.servicebus.models.TopicProperties
      description: Information about the created topic.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic(java.lang.String)
  id: createTopic(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createTopic(String topicName)
  nameWithType: ServiceBusManagementClient.createTopic(String topicName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic(String topicName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a topic with the given name.
  syntax:
    content: public TopicProperties createTopic(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic to create.
    return:
      type: com.azure.messaging.servicebus.models.TopicProperties
      description: Information about the created topic.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopicWithResponse(com.azure.messaging.servicebus.models.CreateTopicOptions,com.azure.core.util.Context)
  id: createTopicWithResponse(com.azure.messaging.servicebus.models.CreateTopicOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: createTopicWithResponse(CreateTopicOptions topicOptions, Context context)
  nameWithType: ServiceBusManagementClient.createTopicWithResponse(CreateTopicOptions topicOptions, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopicWithResponse(CreateTopicOptions topicOptions, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a topic and returns the created topic in addition to the HTTP response.
  syntax:
    content: public Response<TopicProperties> createTopicWithResponse(CreateTopicOptions topicOptions, Context context)
    parameters:
    - id: topicOptions
      type: com.azure.messaging.servicebus.models.CreateTopicOptions
      description: The topic to create.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.TopicProperties>
      description: The created topic in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueue(java.lang.String)
  id: deleteQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: deleteQueue(String queueName)
  nameWithType: ServiceBusManagementClient.deleteQueue(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueue(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a queue the matching `queueName`.
  syntax:
    content: public void deleteQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to delete.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: deleteQueueWithResponse(String queueName, Context context)
  nameWithType: ServiceBusManagementClient.deleteQueueWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueueWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a queue the matching `queueName` and returns the HTTP response.
  syntax:
    content: public Response<Void> deleteQueueWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to delete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response when the queue is successfully deleted.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscription(java.lang.String,java.lang.String)
  id: deleteSubscription(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: deleteSubscription(String topicName, String subscriptionName)
  nameWithType: ServiceBusManagementClient.deleteSubscription(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscription(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscription*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a subscription the matching `subscriptionName`.
  syntax:
    content: public void deleteSubscription(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription to delete.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to delete.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusManagementClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a subscription the matching `subscriptionName` and returns the HTTP response.
  syntax:
    content: public Response<Void> deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription to delete.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to delete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopic(java.lang.String)
  id: deleteTopic(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: deleteTopic(String topicName)
  nameWithType: ServiceBusManagementClient.deleteTopic(String topicName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopic(String topicName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopic*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a topic the matching `topicName`.
  syntax:
    content: public void deleteTopic(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to delete.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: deleteTopicWithResponse(String topicName, Context context)
  nameWithType: ServiceBusManagementClient.deleteTopicWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopicWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a topic the matching `topicName` and returns the HTTP response.
  syntax:
    content: public Response<Void> deleteTopicWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to delete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespaceProperties()
  id: getNamespaceProperties()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getNamespaceProperties()
  nameWithType: ServiceBusManagementClient.getNamespaceProperties()
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespaceProperties()
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespaceProperties*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the Service Bus namespace.
  syntax:
    content: public NamespaceProperties getNamespaceProperties()
    return:
      type: com.azure.messaging.servicebus.models.NamespaceProperties
      description: A Mono that completes with information about the Service Bus namespace.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespacePropertiesWithResponse(com.azure.core.util.Context)
  id: getNamespacePropertiesWithResponse(com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getNamespacePropertiesWithResponse(Context context)
  nameWithType: ServiceBusManagementClient.getNamespacePropertiesWithResponse(Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespacePropertiesWithResponse(Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespacePropertiesWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the Service Bus namespace along with its HTTP response.
  syntax:
    content: public Response<NamespaceProperties> getNamespacePropertiesWithResponse(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.NamespaceProperties>
      description: A Mono that completes with information about the namespace and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue(java.lang.String)
  id: getQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getQueue(String queueName)
  nameWithType: ServiceBusManagementClient.getQueue(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the queue.
  syntax:
    content: public QueueProperties getQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: com.azure.messaging.servicebus.models.QueueProperties
      description: Information about the queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExists(java.lang.String)
  id: getQueueExists(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getQueueExists(String queueName)
  nameWithType: ServiceBusManagementClient.getQueueExists(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExists(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExists*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets whether or not a queue with `queueName` exists in the Service Bus namespace.
  syntax:
    content: public boolean getQueueExists(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue.
    return:
      type: boolean
      description: <code>true</code> if the queue exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getQueueExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getQueueExistsWithResponse(String queueName, Context context)
  nameWithType: ServiceBusManagementClient.getQueueExistsWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExistsWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExistsWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets whether or not a queue with `queueName` exists in the Service Bus namespace.
  syntax:
    content: public Response<Boolean> getQueueExistsWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: The HTTP response and <code>true</code> if the queue exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfo(java.lang.String)
  id: getQueueRuntimeInfo(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getQueueRuntimeInfo(String queueName)
  nameWithType: ServiceBusManagementClient.getQueueRuntimeInfo(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfo(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfo*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the queue.
  syntax:
    content: public QueueRuntimeInfo getQueueRuntimeInfo(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: com.azure.messaging.servicebus.models.QueueRuntimeInfo
      description: Runtime information about the queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfoWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getQueueRuntimeInfoWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getQueueRuntimeInfoWithResponse(String queueName, Context context)
  nameWithType: ServiceBusManagementClient.getQueueRuntimeInfoWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfoWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfoWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the queue along with its HTTP response.
  syntax:
    content: public Response<QueueRuntimeInfo> getQueueRuntimeInfoWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueRuntimeInfo>
      description: Runtime information about the queue and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getQueueWithResponse(String queueName, Context context)
  nameWithType: ServiceBusManagementClient.getQueueWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the queue along with its HTTP response.
  syntax:
    content: public Response<QueueProperties> getQueueWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueProperties>
      description: Information about the queue and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription(java.lang.String,java.lang.String)
  id: getSubscription(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getSubscription(String topicName, String subscriptionName)
  nameWithType: ServiceBusManagementClient.getSubscription(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the queue.
  syntax:
    content: public SubscriptionProperties getSubscription(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    return:
      type: com.azure.messaging.servicebus.models.SubscriptionProperties
      description: Information about the subscription.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExists(java.lang.String,java.lang.String)
  id: getSubscriptionExists(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getSubscriptionExists(String topicName, String subscriptionName)
  nameWithType: ServiceBusManagementClient.getSubscriptionExists(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExists(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExists*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets whether or not a subscription within a topic exists.
  syntax:
    content: public boolean getSubscriptionExists(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    return:
      type: boolean
      description: <code>true</code> if the subscription exists.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExistsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSubscriptionExistsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusManagementClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExistsWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets whether or not a subscription within a topic exists.
  syntax:
    content: public Response<Boolean> getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: The HTTP response and <code>true</code> if the subscription exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfo(java.lang.String,java.lang.String)
  id: getSubscriptionRuntimeInfo(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getSubscriptionRuntimeInfo(String topicName, String subscriptionName)
  nameWithType: ServiceBusManagementClient.getSubscriptionRuntimeInfo(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfo(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfo*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the subscription.
  syntax:
    content: public SubscriptionRuntimeInfo getSubscriptionRuntimeInfo(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    return:
      type: com.azure.messaging.servicebus.models.SubscriptionRuntimeInfo
      description: Runtime information about the subscription.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSubscriptionRuntimeInfoWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getSubscriptionRuntimeInfoWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the subscription.
  syntax:
    content: public Response<SubscriptionRuntimeInfo> getSubscriptionRuntimeInfoWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.SubscriptionRuntimeInfo>
      description: Runtime information about the subscription.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusManagementClient.getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the subscription along with its HTTP response.
  syntax:
    content: public Response<SubscriptionProperties> getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.SubscriptionProperties>
      description: Information about the subscription and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic(java.lang.String)
  id: getTopic(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getTopic(String topicName)
  nameWithType: ServiceBusManagementClient.getTopic(String topicName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic(String topicName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the topic.
  syntax:
    content: public TopicProperties getTopic(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    return:
      type: com.azure.messaging.servicebus.models.TopicProperties
      description: Information about the topic.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExists(java.lang.String)
  id: getTopicExists(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getTopicExists(String topicName)
  nameWithType: ServiceBusManagementClient.getTopicExists(String topicName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExists(String topicName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExists*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets whether or not a topic with `topicName` exists in the Service Bus namespace.
  syntax:
    content: public boolean getTopicExists(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic.
    return:
      type: boolean
      description: <code>true</code> if the topic exists.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getTopicExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getTopicExistsWithResponse(String topicName, Context context)
  nameWithType: ServiceBusManagementClient.getTopicExistsWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExistsWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExistsWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets whether or not a topic with `topicName` exists in the Service Bus namespace.
  syntax:
    content: public Response<Boolean> getTopicExistsWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: The HTTP response and <code>true</code> if the topic exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfo(java.lang.String)
  id: getTopicRuntimeInfo(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getTopicRuntimeInfo(String topicName)
  nameWithType: ServiceBusManagementClient.getTopicRuntimeInfo(String topicName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfo(String topicName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfo*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the topic.
  syntax:
    content: public TopicRuntimeInfo getTopicRuntimeInfo(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    return:
      type: com.azure.messaging.servicebus.models.TopicRuntimeInfo
      description: Runtime information about the topic.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfoWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getTopicRuntimeInfoWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getTopicRuntimeInfoWithResponse(String topicName, Context context)
  nameWithType: ServiceBusManagementClient.getTopicRuntimeInfoWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfoWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfoWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the topic with its HTTP response.
  syntax:
    content: public Response<TopicRuntimeInfo> getTopicRuntimeInfoWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.TopicRuntimeInfo>
      description: Runtime information about the topic and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: getTopicWithResponse(String topicName, Context context)
  nameWithType: ServiceBusManagementClient.getTopicWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the topic along with its HTTP response.
  syntax:
    content: public Response<TopicProperties> getTopicWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.TopicProperties>
      description: Information about the topic and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues()
  id: listQueues()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: listQueues()
  nameWithType: ServiceBusManagementClient.listQueues()
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues()
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Fetches all the queues in the Service Bus namespace.
  syntax:
    content: public PagedIterable<QueueProperties> listQueues()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.QueueProperties>
      description: A PagedIterable of <xref uid="com.azure.messaging.servicebus.models.QueueProperties" data-throw-if-not-resolved="false">queues</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues(com.azure.core.util.Context)
  id: listQueues(com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: listQueues(Context context)
  nameWithType: ServiceBusManagementClient.listQueues(Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues(Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Fetches all the queues in the Service Bus namespace.
  syntax:
    content: public PagedIterable<QueueProperties> listQueues(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.QueueProperties>
      description: A PagedIterable of <xref uid="com.azure.messaging.servicebus.models.QueueProperties" data-throw-if-not-resolved="false">queues</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions(java.lang.String)
  id: listSubscriptions(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: listSubscriptions(String topicName)
  nameWithType: ServiceBusManagementClient.listSubscriptions(String topicName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions(String topicName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Fetches all the subscriptions for a topic.
  syntax:
    content: public PagedIterable<SubscriptionProperties> listSubscriptions(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The topic name under which all the subscriptions need to be retrieved.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.SubscriptionProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties" data-throw-if-not-resolved="false">subscriptions</xref> for the <code>topicName</code>.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions(java.lang.String,com.azure.core.util.Context)
  id: listSubscriptions(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: listSubscriptions(String topicName, Context context)
  nameWithType: ServiceBusManagementClient.listSubscriptions(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions(String topicName, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Fetches all the subscriptions for a topic.
  syntax:
    content: public PagedIterable<SubscriptionProperties> listSubscriptions(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The topic name under which all the subscriptions need to be retrieved.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.SubscriptionProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties" data-throw-if-not-resolved="false">subscriptions</xref> for the <code>topicName</code>.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics()
  id: listTopics()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: listTopics()
  nameWithType: ServiceBusManagementClient.listTopics()
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics()
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Fetches all the topics in the Service Bus namespace.
  syntax:
    content: public PagedIterable<TopicProperties> listTopics()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.TopicProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.models.TopicProperties" data-throw-if-not-resolved="false">topics</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics(com.azure.core.util.Context)
  id: listTopics(com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: listTopics(Context context)
  nameWithType: ServiceBusManagementClient.listTopics(Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics(Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Fetches all the topics in the Service Bus namespace.
  syntax:
    content: public PagedIterable<TopicProperties> listTopics(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.TopicProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.models.TopicProperties" data-throw-if-not-resolved="false">topics</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueue(com.azure.messaging.servicebus.models.QueueProperties)
  id: updateQueue(com.azure.messaging.servicebus.models.QueueProperties)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: updateQueue(QueueProperties queue)
  nameWithType: ServiceBusManagementClient.updateQueue(QueueProperties queue)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueue(QueueProperties queue)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a queue with the given <xref uid="com.azure.messaging.servicebus.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref>. The <xref uid="com.azure.messaging.servicebus.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue(java.lang.String)" data-throw-if-not-resolved="false">Get queue description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public QueueProperties updateQueue(QueueProperties queue)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.models.QueueProperties
      description: >-
        Information about the queue to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    return:
      type: com.azure.messaging.servicebus.models.QueueProperties
      description: The updated queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueueWithResponse(com.azure.messaging.servicebus.models.QueueProperties,com.azure.core.util.Context)
  id: updateQueueWithResponse(com.azure.messaging.servicebus.models.QueueProperties,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: updateQueueWithResponse(QueueProperties queue, Context context)
  nameWithType: ServiceBusManagementClient.updateQueueWithResponse(QueueProperties queue, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueueWithResponse(QueueProperties queue, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a queue with the given <xref uid="com.azure.messaging.servicebus.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref>. The <xref uid="com.azure.messaging.servicebus.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue(java.lang.String)" data-throw-if-not-resolved="false">Get queue description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public Response<QueueProperties> updateQueueWithResponse(QueueProperties queue, Context context)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.models.QueueProperties
      description: >-
        Information about the queue to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueProperties>
      description: The updated queue with its HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscription(com.azure.messaging.servicebus.models.SubscriptionProperties)
  id: updateSubscription(com.azure.messaging.servicebus.models.SubscriptionProperties)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: updateSubscription(SubscriptionProperties subscription)
  nameWithType: ServiceBusManagementClient.updateSubscription(SubscriptionProperties subscription)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscription(SubscriptionProperties subscription)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscription*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a subscription with the given <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref>. The <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">Get subscription description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties.setMaxDeliveryCount(int)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public SubscriptionProperties updateSubscription(SubscriptionProperties subscription)
    parameters:
    - id: subscription
      type: com.azure.messaging.servicebus.models.SubscriptionProperties
      description: >-
        Information about the subscription to update. You must provide all the property values
             that are desired on the updated entity. Any values not provided are set to the service default values.
    return:
      type: com.azure.messaging.servicebus.models.SubscriptionProperties
      description: A Mono that returns the updated subscription in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscriptionWithResponse(com.azure.messaging.servicebus.models.SubscriptionProperties,com.azure.core.util.Context)
  id: updateSubscriptionWithResponse(com.azure.messaging.servicebus.models.SubscriptionProperties,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
  nameWithType: ServiceBusManagementClient.updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a subscription with the given <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref>. The <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">Get subscription description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.SubscriptionProperties.setMaxDeliveryCount(int)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public Response<SubscriptionProperties> updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
    parameters:
    - id: subscription
      type: com.azure.messaging.servicebus.models.SubscriptionProperties
      description: >-
        Information about the subscription to update. You must provide all the property values
             that are desired on the updated entity. Any values not provided are set to the service default values.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.SubscriptionProperties>
      description: A Mono that returns the updated subscription in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopic(com.azure.messaging.servicebus.models.TopicProperties)
  id: updateTopic(com.azure.messaging.servicebus.models.TopicProperties)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: updateTopic(TopicProperties topic)
  nameWithType: ServiceBusManagementClient.updateTopic(TopicProperties topic)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopic(TopicProperties topic)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopic*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a topic with the given <xref uid="com.azure.messaging.servicebus.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref>. The <xref uid="com.azure.messaging.servicebus.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic(java.lang.String)" data-throw-if-not-resolved="false">Get topic description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
  syntax:
    content: public TopicProperties updateTopic(TopicProperties topic)
    parameters:
    - id: topic
      type: com.azure.messaging.servicebus.models.TopicProperties
      description: >-
        Information about the topic to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    return:
      type: com.azure.messaging.servicebus.models.TopicProperties
      description: The updated topic.
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopicWithResponse(com.azure.messaging.servicebus.models.TopicProperties,com.azure.core.util.Context)
  id: updateTopicWithResponse(com.azure.messaging.servicebus.models.TopicProperties,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusManagementClient
  langs:
  - java
  name: updateTopicWithResponse(TopicProperties topic, Context context)
  nameWithType: ServiceBusManagementClient.updateTopicWithResponse(TopicProperties topic, Context context)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopicWithResponse(TopicProperties topic, Context context)
  overload: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a topic with the given <xref uid="com.azure.messaging.servicebus.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref>. The <xref uid="com.azure.messaging.servicebus.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic(java.lang.String)" data-throw-if-not-resolved="false">Get topic description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
  syntax:
    content: public Response<TopicProperties> updateTopicWithResponse(TopicProperties topic, Context context)
    parameters:
    - id: topic
      type: com.azure.messaging.servicebus.models.TopicProperties
      description: >-
        Information about the topic to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.TopicProperties>
      description: The updated topic with its HTTP response.
references:
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  name: ServiceBusManagementAsyncClient
  nameWithType: ServiceBusManagementAsyncClient
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.ServiceBusManagementClient*
  name: ServiceBusManagementClient
  nameWithType: ServiceBusManagementClient.ServiceBusManagementClient
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.ServiceBusManagementClient
  package: com.azure.messaging.servicebus
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.messaging.servicebus.models.QueueProperties
  name: QueueProperties
  nameWithType: QueueProperties
  fullName: com.azure.messaging.servicebus.models.QueueProperties
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue*
  name: createQueue
  nameWithType: ServiceBusManagementClient.createQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueue
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.CreateQueueOptions
  name: CreateQueueOptions
  nameWithType: CreateQueueOptions
  fullName: com.azure.messaging.servicebus.models.CreateQueueOptions
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueProperties
    name: QueueProperties
    fullName: com.azure.messaging.servicebus.models.QueueProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueueWithResponse*
  name: createQueueWithResponse
  nameWithType: ServiceBusManagementClient.createQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.SubscriptionProperties
  name: SubscriptionProperties
  nameWithType: SubscriptionProperties
  fullName: com.azure.messaging.servicebus.models.SubscriptionProperties
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription*
  name: createSubscription
  nameWithType: ServiceBusManagementClient.createSubscription
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscription
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.CreateSubscriptionOptions
  name: CreateSubscriptionOptions
  nameWithType: CreateSubscriptionOptions
  fullName: com.azure.messaging.servicebus.models.CreateSubscriptionOptions
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.SubscriptionProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.SubscriptionProperties
    name: SubscriptionProperties
    fullName: com.azure.messaging.servicebus.models.SubscriptionProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscriptionWithResponse*
  name: createSubscriptionWithResponse
  nameWithType: ServiceBusManagementClient.createSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createSubscriptionWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.TopicProperties
  name: TopicProperties
  nameWithType: TopicProperties
  fullName: com.azure.messaging.servicebus.models.TopicProperties
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic*
  name: createTopic
  nameWithType: ServiceBusManagementClient.createTopic
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopic
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.CreateTopicOptions
  name: CreateTopicOptions
  nameWithType: CreateTopicOptions
  fullName: com.azure.messaging.servicebus.models.CreateTopicOptions
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.TopicProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.TopicProperties
    name: TopicProperties
    fullName: com.azure.messaging.servicebus.models.TopicProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopicWithResponse*
  name: createTopicWithResponse
  nameWithType: ServiceBusManagementClient.createTopicWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.createTopicWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueue*
  name: deleteQueue
  nameWithType: ServiceBusManagementClient.deleteQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueue
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueueWithResponse*
  name: deleteQueueWithResponse
  nameWithType: ServiceBusManagementClient.deleteQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscription*
  name: deleteSubscription
  nameWithType: ServiceBusManagementClient.deleteSubscription
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscription
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscriptionWithResponse*
  name: deleteSubscriptionWithResponse
  nameWithType: ServiceBusManagementClient.deleteSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteSubscriptionWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopic*
  name: deleteTopic
  nameWithType: ServiceBusManagementClient.deleteTopic
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopic
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopicWithResponse*
  name: deleteTopicWithResponse
  nameWithType: ServiceBusManagementClient.deleteTopicWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.deleteTopicWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue*
  name: getQueue
  nameWithType: ServiceBusManagementClient.getQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueue
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueWithResponse*
  name: getQueueWithResponse
  nameWithType: ServiceBusManagementClient.getQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExists*
  name: getQueueExists
  nameWithType: ServiceBusManagementClient.getQueueExists
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExists
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.Response<java.lang.Boolean>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExistsWithResponse*
  name: getQueueExistsWithResponse
  nameWithType: ServiceBusManagementClient.getQueueExistsWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueExistsWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.QueueRuntimeInfo
  name: QueueRuntimeInfo
  nameWithType: QueueRuntimeInfo
  fullName: com.azure.messaging.servicebus.models.QueueRuntimeInfo
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfo*
  name: getQueueRuntimeInfo
  nameWithType: ServiceBusManagementClient.getQueueRuntimeInfo
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfo
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueRuntimeInfo>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueRuntimeInfo
    name: QueueRuntimeInfo
    fullName: com.azure.messaging.servicebus.models.QueueRuntimeInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfoWithResponse*
  name: getQueueRuntimeInfoWithResponse
  nameWithType: ServiceBusManagementClient.getQueueRuntimeInfoWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getQueueRuntimeInfoWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.NamespaceProperties
  name: NamespaceProperties
  nameWithType: NamespaceProperties
  fullName: com.azure.messaging.servicebus.models.NamespaceProperties
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespaceProperties*
  name: getNamespaceProperties
  nameWithType: ServiceBusManagementClient.getNamespaceProperties
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespaceProperties
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.NamespaceProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.NamespaceProperties
    name: NamespaceProperties
    fullName: com.azure.messaging.servicebus.models.NamespaceProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespacePropertiesWithResponse*
  name: getNamespacePropertiesWithResponse
  nameWithType: ServiceBusManagementClient.getNamespacePropertiesWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getNamespacePropertiesWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription*
  name: getSubscription
  nameWithType: ServiceBusManagementClient.getSubscription
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscription
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionWithResponse*
  name: getSubscriptionWithResponse
  nameWithType: ServiceBusManagementClient.getSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExists*
  name: getSubscriptionExists
  nameWithType: ServiceBusManagementClient.getSubscriptionExists
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExists
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExistsWithResponse*
  name: getSubscriptionExistsWithResponse
  nameWithType: ServiceBusManagementClient.getSubscriptionExistsWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionExistsWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.SubscriptionRuntimeInfo
  name: SubscriptionRuntimeInfo
  nameWithType: SubscriptionRuntimeInfo
  fullName: com.azure.messaging.servicebus.models.SubscriptionRuntimeInfo
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfo*
  name: getSubscriptionRuntimeInfo
  nameWithType: ServiceBusManagementClient.getSubscriptionRuntimeInfo
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfo
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.SubscriptionRuntimeInfo>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.SubscriptionRuntimeInfo
    name: SubscriptionRuntimeInfo
    fullName: com.azure.messaging.servicebus.models.SubscriptionRuntimeInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse*
  name: getSubscriptionRuntimeInfoWithResponse
  nameWithType: ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getSubscriptionRuntimeInfoWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic*
  name: getTopic
  nameWithType: ServiceBusManagementClient.getTopic
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopic
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicWithResponse*
  name: getTopicWithResponse
  nameWithType: ServiceBusManagementClient.getTopicWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExists*
  name: getTopicExists
  nameWithType: ServiceBusManagementClient.getTopicExists
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExists
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExistsWithResponse*
  name: getTopicExistsWithResponse
  nameWithType: ServiceBusManagementClient.getTopicExistsWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicExistsWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.TopicRuntimeInfo
  name: TopicRuntimeInfo
  nameWithType: TopicRuntimeInfo
  fullName: com.azure.messaging.servicebus.models.TopicRuntimeInfo
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfo*
  name: getTopicRuntimeInfo
  nameWithType: ServiceBusManagementClient.getTopicRuntimeInfo
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfo
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.TopicRuntimeInfo>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.TopicRuntimeInfo
    name: TopicRuntimeInfo
    fullName: com.azure.messaging.servicebus.models.TopicRuntimeInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfoWithResponse*
  name: getTopicRuntimeInfoWithResponse
  nameWithType: ServiceBusManagementClient.getTopicRuntimeInfoWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.getTopicRuntimeInfoWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.QueueProperties>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueProperties
    name: QueueProperties
    fullName: com.azure.messaging.servicebus.models.QueueProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues*
  name: listQueues
  nameWithType: ServiceBusManagementClient.listQueues
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listQueues
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.SubscriptionProperties>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.SubscriptionProperties
    name: SubscriptionProperties
    fullName: com.azure.messaging.servicebus.models.SubscriptionProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions*
  name: listSubscriptions
  nameWithType: ServiceBusManagementClient.listSubscriptions
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listSubscriptions
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.models.TopicProperties>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.TopicProperties
    name: TopicProperties
    fullName: com.azure.messaging.servicebus.models.TopicProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics*
  name: listTopics
  nameWithType: ServiceBusManagementClient.listTopics
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.listTopics
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueue*
  name: updateQueue
  nameWithType: ServiceBusManagementClient.updateQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueue
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueueWithResponse*
  name: updateQueueWithResponse
  nameWithType: ServiceBusManagementClient.updateQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscription*
  name: updateSubscription
  nameWithType: ServiceBusManagementClient.updateSubscription
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscription
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscriptionWithResponse*
  name: updateSubscriptionWithResponse
  nameWithType: ServiceBusManagementClient.updateSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateSubscriptionWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopic*
  name: updateTopic
  nameWithType: ServiceBusManagementClient.updateTopic
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopic
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopicWithResponse*
  name: updateTopicWithResponse
  nameWithType: ServiceBusManagementClient.updateTopicWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementClient.updateTopicWithResponse
  package: com.azure.messaging.servicebus
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
