### YamlMime:ManagedReference
items:
- uid: com.azure.core.test.InterceptorManager
  id: InterceptorManager
  parent: com.azure.core.test
  children:
  - com.azure.core.test.InterceptorManager.addTextReplacementRule(String,String)
  - com.azure.core.test.InterceptorManager.close()
  - com.azure.core.test.InterceptorManager.getPlaybackClient()
  - com.azure.core.test.InterceptorManager.getRecordedData()
  - com.azure.core.test.InterceptorManager.getRecordPolicy()
  - com.azure.core.test.InterceptorManager.InterceptorManager(String,Map<String, String>)
  - com.azure.core.test.InterceptorManager.InterceptorManager(String,TestMode)
  - com.azure.core.test.InterceptorManager.isPlaybackMode()
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: InterceptorManager
  nameWithType: InterceptorManager
  fullName: com.azure.core.test.InterceptorManager
  type: Class
  source:
    remote: &o0
      path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 37
  package: com.azure.core.test
  summary: "<p>A class that keeps track of network calls by either reading the data from an existing test session record or recording the network calls in memory. Test session records are saved or read from: \"&lt;i&gt;session-records/@code testName @endcode .json&lt;/i&gt;\"</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>If the<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.PLAYBACK\" data-throw-if-not-resolved=\"false\">TestMode#PLAYBACK</xref>, the manager tries to find an existing test session record to read network calls from. </p>\r\n    </li>\r\n    <li>\r\n      <p>If the<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref>, the manager creates a new test session record and saves all the network calls to it. </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>When the <xref uid=\"com.azure.core.test.InterceptorManager\" data-throw-if-not-resolved=\"false\">InterceptorManager</xref> is disposed, if the<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref>, the network calls that were recorded are persisted to: \"&lt;i&gt;session-records/@code testName @endcode .json&lt;/i&gt;\" </p>"
  syntax: &o1
    content: public class InterceptorManager
  inheritance:
  - java.lang.Object
  - AutoCloseable
- uid: com.azure.core.test.InterceptorManager.addTextReplacementRule(String,String)
  id: addTextReplacementRule(String,String)
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: addTextReplacementRule(String regex, String replacement)
  nameWithType: InterceptorManager.addTextReplacementRule(String regex, String replacement)
  fullName: com.azure.core.test.InterceptorManager.addTextReplacementRule(String regex, String replacement)
  overload: com.azure.core.test.InterceptorManager.addTextReplacementRule*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 207
  package: com.azure.core.test
  summary: "<p>Add text replacement rule (regex as key, the replacement text as value) into <xref uid=\"\" data-throw-if-not-resolved=\"false\">InterceptorManager#textReplacementRules</xref></p>\r\n<p></p>"
  syntax:
    content: public void addTextReplacementRule(String regex, String replacement)
    parameters:
    - id: regex
      type: "26831127"
      description: <p>the pattern to locate the position of replacement </p>
    - id: replacement
      type: "26831127"
      description: <p>the replacement text </p>
- uid: com.azure.core.test.InterceptorManager.close()
  id: close()
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: close()
  nameWithType: InterceptorManager.close()
  fullName: com.azure.core.test.InterceptorManager.close()
  overload: com.azure.core.test.InterceptorManager.close*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 147
  package: com.azure.core.test
  summary: "<p>Disposes of resources used by this InterceptorManager.</p>\r\n<p>If<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref>, all the network calls are persisted to: \"&lt;i&gt;session-records/@code testName @endcode .json&lt;/i&gt;\" </p>"
  syntax:
    content: public void close()
- uid: com.azure.core.test.InterceptorManager.getPlaybackClient()
  id: getPlaybackClient()
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: getPlaybackClient()
  nameWithType: InterceptorManager.getPlaybackClient()
  fullName: com.azure.core.test.InterceptorManager.getPlaybackClient()
  overload: com.azure.core.test.InterceptorManager.getPlaybackClient*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 136
  package: com.azure.core.test
  summary: "<p>Gets a new HTTP client that plays back test session records managed by <xref uid=\"com.azure.core.test.InterceptorManager\" data-throw-if-not-resolved=\"false\">InterceptorManager</xref>.</p>\r\n<p></p>"
  syntax:
    content: public HttpClient getPlaybackClient()
    return:
      type: com.azure.core.http.HttpClient
      description: <p>An HTTP client that plays back network calls from its recorded data. </p>
- uid: com.azure.core.test.InterceptorManager.getRecordedData()
  id: getRecordedData()
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: getRecordedData()
  nameWithType: InterceptorManager.getRecordedData()
  fullName: com.azure.core.test.InterceptorManager.getRecordedData()
  overload: com.azure.core.test.InterceptorManager.getRecordedData*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 118
  package: com.azure.core.test
  summary: "<p>Gets the recorded data InterceptorManager is keeping track of.</p>\r\n<p></p>"
  syntax:
    content: public RecordedData getRecordedData()
    return:
      type: com.azure.core.test.models.RecordedData
      description: <p>The recorded data managed by InterceptorManager. </p>
- uid: com.azure.core.test.InterceptorManager.getRecordPolicy()
  id: getRecordPolicy()
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: getRecordPolicy()
  nameWithType: InterceptorManager.getRecordPolicy()
  fullName: com.azure.core.test.InterceptorManager.getRecordPolicy()
  overload: com.azure.core.test.InterceptorManager.getRecordPolicy*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 127
  package: com.azure.core.test
  summary: "<p>Gets a new HTTP pipeline policy that records network calls and its data is managed by <xref uid=\"com.azure.core.test.InterceptorManager\" data-throw-if-not-resolved=\"false\">InterceptorManager</xref>.</p>\r\n<p></p>"
  syntax:
    content: public HttpPipelinePolicy getRecordPolicy()
    return:
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: <p>HttpPipelinePolicy to record network calls. </p>
- uid: com.azure.core.test.InterceptorManager.InterceptorManager(String,Map<String, String>)
  id: InterceptorManager(String,Map<String, String>)
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: InterceptorManager(String testName, Map<String, String> textReplacementRules)
  nameWithType: InterceptorManager.InterceptorManager(String testName, Map<String, String> textReplacementRules)
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager(String testName, Map<String, String> textReplacementRules)
  overload: com.azure.core.test.InterceptorManager.InterceptorManager*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 93
  package: com.azure.core.test
  summary: "<p>Creates a new InterceptorManager that replays test session records. It takes a set of <code>textReplacementRules \r\n    </code> , that can be used by <xref uid=\"\" data-throw-if-not-resolved=\"false\">PlaybackClient</xref> to replace values in a <xref uid=\"com.azure.core.test.models.NetworkCallRecord.response()\" data-throw-if-not-resolved=\"false\">NetworkCallRecord#response()</xref>.</p>\r\n<p>The test session records are read from: \"&lt;i&gt;session-records/@code testName @endcode .json&lt;/i&gt;\"</p>\r\n<p></p>"
  syntax:
    content: public InterceptorManager(String testName, Map<String, String> textReplacementRules)
    parameters:
    - id: testName
      type: "26831127"
      description: <p>Name of the test session record. </p>
    - id: textReplacementRules
      type: 689c8cb5
      description: <p>A set of rules to replace text in <xref uid="com.azure.core.test.models.NetworkCallRecord.response()" data-throw-if-not-resolved="false">NetworkCallRecord#response()</xref> when playing back network calls. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>An existing test session record could not be located or the data could not be deserialized into an instance of <xref uid="" data-throw-if-not-resolved="false">RecordedData</xref>. </p>
  - type: 17c54119
    description: >-
      <p>If<code>testName 

          </code> or<code>textReplacementRules 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.core.test.InterceptorManager.InterceptorManager(String,TestMode)
  id: InterceptorManager(String,TestMode)
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: InterceptorManager(String testName, TestMode testMode)
  nameWithType: InterceptorManager.InterceptorManager(String testName, TestMode testMode)
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager(String testName, TestMode testMode)
  overload: com.azure.core.test.InterceptorManager.InterceptorManager*
  type: Constructor
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 67
  package: com.azure.core.test
  summary: "<p>Creates a new InterceptorManager that either replays test-session records or saves them.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>If<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.PLAYBACK\" data-throw-if-not-resolved=\"false\">TestMode#PLAYBACK</xref>, the manager tries to find an existing test session record to read network calls from. </p>\r\n    </li>\r\n    <li>\r\n      <p>If<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref>, the manager creates a new test session record and saves all the network calls to it. </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>The test session records are persisted in the path: \"&lt;i&gt;session-records/@code testName @endcode .json&lt;/i&gt;\"</p>\r\n<p></p>"
  syntax:
    content: public InterceptorManager(String testName, TestMode testMode)
    parameters:
    - id: testName
      type: "26831127"
      description: <p>Name of the test session record. </p>
    - id: testMode
      type: com.azure.core.test.TestMode
      description: <p>The <xref uid="com.azure.core.test.TestMode" data-throw-if-not-resolved="false">TestMode</xref> for this interceptor. </p>
  exceptions:
  - type: cbf33bbe
    description: >-
      <p>If<code>testMode 

          </code> is <xref uid="com.azure.core.test.TestMode.PLAYBACK" data-throw-if-not-resolved="false">TestMode#PLAYBACK</xref> and an existing test session record could not be located or the data could not be deserialized into an instance of <xref uid="" data-throw-if-not-resolved="false">RecordedData</xref>. </p>
  - type: 17c54119
    description: >-
      <p>If<code>testName 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.core.test.InterceptorManager.isPlaybackMode()
  id: isPlaybackMode()
  parent: com.azure.core.test.InterceptorManager
  href: com.azure.core.test.InterceptorManager.yml
  langs:
  - java
  name: isPlaybackMode()
  nameWithType: InterceptorManager.isPlaybackMode()
  fullName: com.azure.core.test.InterceptorManager.isPlaybackMode()
  overload: com.azure.core.test.InterceptorManager.isPlaybackMode*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core-test/src/main/java/com/azure/core/test/InterceptorManager.java
    startLine: 109
  package: com.azure.core.test
  summary: "<p>Gets whether this InterceptorManager is in playback mode.</p>\r\n<p></p>"
  syntax:
    content: public boolean isPlaybackMode()
    return:
      type: 4fc6e284
      description: <p>true if the InterceptorManager is in playback mode and false otherwise. </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 17c54119
  spec.java:
  - name: NullPointerException
    fullName: NullPointerException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.core.test.InterceptorManager.InterceptorManager*
  name: InterceptorManager
  nameWithType: InterceptorManager.InterceptorManager
  fullName: com.azure.core.test.InterceptorManager.InterceptorManager
  package: com.azure.core.test
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.azure.core.test.InterceptorManager.isPlaybackMode*
  name: isPlaybackMode
  nameWithType: InterceptorManager.isPlaybackMode
  fullName: com.azure.core.test.InterceptorManager.isPlaybackMode
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.getRecordedData*
  name: getRecordedData
  nameWithType: InterceptorManager.getRecordedData
  fullName: com.azure.core.test.InterceptorManager.getRecordedData
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.getRecordPolicy*
  name: getRecordPolicy
  nameWithType: InterceptorManager.getRecordPolicy
  fullName: com.azure.core.test.InterceptorManager.getRecordPolicy
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.getPlaybackClient*
  name: getPlaybackClient
  nameWithType: InterceptorManager.getPlaybackClient
  fullName: com.azure.core.test.InterceptorManager.getPlaybackClient
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.close*
  name: close
  nameWithType: InterceptorManager.close
  fullName: com.azure.core.test.InterceptorManager.close
  package: com.azure.core.test
- uid: com.azure.core.test.InterceptorManager.addTextReplacementRule*
  name: addTextReplacementRule
  nameWithType: InterceptorManager.addTextReplacementRule
  fullName: com.azure.core.test.InterceptorManager.addTextReplacementRule
  package: com.azure.core.test
- uid: com.azure.core.test.TestMode
  parent: com.azure.core.test
  href: com.azure.core.test.TestMode.yml
  name: TestMode
  nameWithType: TestMode
  fullName: com.azure.core.test.TestMode
  type: Enum
  summary: "<p>The possible testing modes. </p>"
  syntax:
    content: public enum TestMode
- uid: com.azure.core.test.models.RecordedData
  parent: com.azure.core.test.models
  href: com.azure.core.test.models.RecordedData.yml
  name: RecordedData
  nameWithType: RecordedData
  fullName: com.azure.core.test.models.RecordedData
  type: Class
  summary: "<p>Keeps track of the network calls and variable names that were made in a test session. </p>"
  syntax:
    content: public class RecordedData
- uid: com.azure.core.test.TestMode.PLAYBACK
  parent: com.azure.core.test.TestMode
  href: com.azure.core.test.TestMode.yml
  name: PLAYBACK
  nameWithType: TestMode.PLAYBACK
  fullName: com.azure.core.test.TestMode.PLAYBACK
  type: Field
  summary: "<p>Playback data from an existing test session. </p>"
  syntax:
    content: public PLAYBACK
- uid: com.azure.core.test.TestMode.RECORD
  parent: com.azure.core.test.TestMode
  href: com.azure.core.test.TestMode.yml
  name: RECORD
  nameWithType: TestMode.RECORD
  fullName: com.azure.core.test.TestMode.RECORD
  type: Field
  summary: "<p>Record data from a live test. </p>"
  syntax:
    content: public RECORD
- uid: com.azure.core.test.models.NetworkCallRecord.response()
  parent: com.azure.core.test.models.NetworkCallRecord
  href: com.azure.core.test.models.NetworkCallRecord.yml
  name: response()
  nameWithType: NetworkCallRecord.response()
  fullName: com.azure.core.test.models.NetworkCallRecord.response()
  type: Method
  summary: "<p>Gets the contents of the HTTP response as a map of its HTTP headers and response body. The HTTP response body is mapped under key \"Body\".</p>\r\n<p></p>"
  syntax:
    content: public Map<String, String> response()
    return:
      type: 689c8cb5
      description: <p>Contents of the HTTP response. </p>
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  parent: com.azure.core.http.policy
  href: com.azure.core.http.policy.HttpPipelinePolicy.yml
  name: HttpPipelinePolicy
  nameWithType: HttpPipelinePolicy
  fullName: com.azure.core.http.policy.HttpPipelinePolicy
  type: Interface
  summary: "<p>Pipeline policy. </p>"
  syntax:
    content: public interface HttpPipelinePolicy
- uid: com.azure.core.test.InterceptorManager
  parent: com.azure.core.test
  href: com.azure.core.test.InterceptorManager.yml
  name: InterceptorManager
  nameWithType: InterceptorManager
  fullName: com.azure.core.test.InterceptorManager
  type: Class
  summary: "<p>A class that keeps track of network calls by either reading the data from an existing test session record or recording the network calls in memory. Test session records are saved or read from: \"&lt;i&gt;session-records/@code testName @endcode .json&lt;/i&gt;\"</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>If the<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.PLAYBACK\" data-throw-if-not-resolved=\"false\">TestMode#PLAYBACK</xref>, the manager tries to find an existing test session record to read network calls from. </p>\r\n    </li>\r\n    <li>\r\n      <p>If the<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref>, the manager creates a new test session record and saves all the network calls to it. </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>When the <xref uid=\"com.azure.core.test.InterceptorManager\" data-throw-if-not-resolved=\"false\">InterceptorManager</xref> is disposed, if the<code>testMode \r\n    </code> is <xref uid=\"com.azure.core.test.TestMode.RECORD\" data-throw-if-not-resolved=\"false\">TestMode#RECORD</xref>, the network calls that were recorded are persisted to: \"&lt;i&gt;session-records/@code testName @endcode .json&lt;/i&gt;\" </p>"
  syntax: *o1
- uid: com.azure.core.http.HttpClient
  parent: com.azure.core.http
  href: com.azure.core.http.HttpClient.yml
  name: HttpClient
  nameWithType: HttpClient
  fullName: com.azure.core.http.HttpClient
  type: Interface
  summary: "<p>A generic interface for sending HTTP requests and getting responses. </p>"
  syntax:
    content: public interface HttpClient
