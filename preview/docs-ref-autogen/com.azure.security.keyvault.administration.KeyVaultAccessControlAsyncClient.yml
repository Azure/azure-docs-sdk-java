### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  id: KeyVaultAccessControlAsyncClient
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration
  children:
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl()
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  - com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  langs:
  - java
  name: KeyVaultAccessControlAsyncClient
  nameWithType: KeyVaultAccessControlAsyncClient
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  type: Class
  package: com.azure.security.keyvault.administration
  summary: The <xref uid="com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient" data-throw-if-not-resolved="false">KeyVaultAccessControlAsyncClient</xref> provides asynchronous methods to view and manage Role Based Access for the Azure Key Vault. The client supports creating, listing, updating, and deleting <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignments</xref>. Additionally, the client supports listing <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref>.
  syntax:
    content: public final class KeyVaultAccessControlAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.KeyVaultAccessControlAsyncClient(java.net.URL,com.azure.core.http.HttpPipeline,com.azure.security.keyvault.administration.KeyVaultAdministrationServiceVersion)
  id: KeyVaultAccessControlAsyncClient(java.net.URL,com.azure.core.http.HttpPipeline,com.azure.security.keyvault.administration.KeyVaultAdministrationServiceVersion)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: KeyVaultAccessControlAsyncClient(URL vaultUrl, HttpPipeline httpPipeline, KeyVaultAdministrationServiceVersion serviceVersion)
  nameWithType: KeyVaultAccessControlAsyncClient.KeyVaultAccessControlAsyncClient(URL vaultUrl, HttpPipeline httpPipeline, KeyVaultAdministrationServiceVersion serviceVersion)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.KeyVaultAccessControlAsyncClient(URL vaultUrl, HttpPipeline httpPipeline, KeyVaultAdministrationServiceVersion serviceVersion)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.KeyVaultAccessControlAsyncClient*
  type: Constructor
  package: com.azure.security.keyvault.administration
  summary: Package private constructor to be used by <xref uid="com.azure.security.keyvault.administration.KeyVaultAccessControlClientBuilder" data-throw-if-not-resolved="false">KeyVaultAccessControlClientBuilder</xref>.
  syntax:
    content: " KeyVaultAccessControlAsyncClient(URL vaultUrl, HttpPipeline httpPipeline, KeyVaultAdministrationServiceVersion serviceVersion)"
    parameters:
    - id: vaultUrl
      type: java.net.URL
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
    - id: serviceVersion
      type: com.azure.security.keyvault.administration.KeyVaultAdministrationServiceVersion
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String)
  id: createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
  nameWithType: KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Creates a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> with a randomly generated name.
  syntax:
    content: public Mono<KeyVaultRoleAssignment> createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> to create.
    - id: roleDefinitionId
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definition</xref> ID for the role assignment.
    - id: principalId
      type: java.lang.String
      description: The principal ID assigned to the role. This maps to the ID inside the Active Directory.
    return:
      type: reactor.core.publisher.Mono<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the created <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  id: createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  nameWithType: KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Creates a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Mono<KeyVaultRoleAssignment> createRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> to create.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name used to create the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>. It can be any valid UUID.
    - id: roleDefinitionId
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definition</xref> ID for the role assignment.
    - id: principalId
      type: java.lang.String
      description: The principal ID assigned to the role. This maps to the ID inside the Active Directory.
    return:
      type: reactor.core.publisher.Mono<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the created <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  id: createRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  nameWithType: KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Creates a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Mono<Response<KeyVaultRoleAssignment>> createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName, String roleDefinitionId, String principalId)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref> to create.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name used to create the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>. It can be any valid UUID.
    - id: roleDefinitionId
      type: java.lang.String
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definition</xref> ID for the role assignment.
    - id: principalId
      type: java.lang.String
      description: The principal ID assigned to the role. This maps to the ID inside the Active Directory.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>>
      description: >-
        A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the created
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  id: deleteRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  nameWithType: KeyVaultAccessControlAsyncClient.deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Deletes a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Mono<KeyVaultRoleAssignment> deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: reactor.core.publisher.Mono<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  id: deleteRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
  nameWithType: KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Deletes a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Mono<Response<KeyVaultRoleAssignment>> deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>>
      description: >-
        A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  id: getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  nameWithType: KeyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Gets a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Mono<KeyVaultRoleAssignment> getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name used of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: reactor.core.publisher.Mono<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  id: getRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
  nameWithType: KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Gets a <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
  syntax:
    content: public Mono<Response<KeyVaultRoleAssignment>> getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    - id: roleAssignmentName
      type: java.lang.String
      description: The name of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>>
      description: >-
        A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing a <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> whose <xref uid="com.azure.core.http.rest.Response.getValue*" data-throw-if-not-resolved="false">value</xref> contains the
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl()
  id: getVaultUrl()
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: getVaultUrl()
  nameWithType: KeyVaultAccessControlAsyncClient.getVaultUrl()
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl()
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Gets the URL for the Key Vault this client is associated with.
  syntax:
    content: public String getVaultUrl()
    return:
      type: java.lang.String
      description: The Key Vault URL.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  id: listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: listRoleAssignments(KeyVaultRoleScope roleScope)
  nameWithType: KeyVaultAccessControlAsyncClient.listRoleAssignments(KeyVaultRoleScope roleScope)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments(KeyVaultRoleScope roleScope)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Lists all <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignments</xref> that are applicable at the given <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> and above.
  syntax:
    content: public PagedFlux<KeyVaultRoleAssignment> listRoleAssignments(KeyVaultRoleScope roleScope)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">KeyVaultRoleAssignment</xref>.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
      description: >-
        A <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment" data-throw-if-not-resolved="false">role assignments</xref> for the given
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref>.
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  id: listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)
  artifact: com.azure:azure-security-keyvault-administration:4.0.0-beta.3
  parent: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient
  langs:
  - java
  name: listRoleDefinitions(KeyVaultRoleScope roleScope)
  nameWithType: KeyVaultAccessControlAsyncClient.listRoleDefinitions(KeyVaultRoleScope roleScope)
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions(KeyVaultRoleScope roleScope)
  overload: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions*
  type: Method
  package: com.azure.security.keyvault.administration
  summary: Lists all <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref> that are applicable at the given <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> and above.
  syntax:
    content: public PagedFlux<KeyVaultRoleDefinition> listRoleDefinitions(KeyVaultRoleScope roleScope)
    parameters:
    - id: roleScope
      type: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
      description: The <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref> of the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref>.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition>
      description: >-
        A <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> containing the <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition" data-throw-if-not-resolved="false">role definitions</xref> for the given
         <xref uid="com.azure.security.keyvault.administration.models.KeyVaultRoleScope" data-throw-if-not-resolved="false">role scope</xref>.
references:
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.security.keyvault.administration.KeyVaultAdministrationServiceVersion
  name: KeyVaultAdministrationServiceVersion
  nameWithType: KeyVaultAdministrationServiceVersion
  fullName: com.azure.security.keyvault.administration.KeyVaultAdministrationServiceVersion
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.KeyVaultAccessControlAsyncClient*
  name: KeyVaultAccessControlAsyncClient
  nameWithType: KeyVaultAccessControlAsyncClient.KeyVaultAccessControlAsyncClient
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.KeyVaultAccessControlAsyncClient
  package: com.azure.security.keyvault.administration
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl*
  name: getVaultUrl
  nameWithType: KeyVaultAccessControlAsyncClient.getVaultUrl
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
  name: KeyVaultRoleScope
  nameWithType: KeyVaultRoleScope
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleScope
- uid: com.azure.core.http.rest.PagedFlux<com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
    name: KeyVaultRoleDefinition
    fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions*
  name: listRoleDefinitions
  nameWithType: KeyVaultAccessControlAsyncClient.listRoleDefinitions
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions
  package: com.azure.security.keyvault.administration
- uid: com.azure.core.http.rest.PagedFlux<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
    name: KeyVaultRoleAssignment
    fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments*
  name: listRoleAssignments
  nameWithType: KeyVaultAccessControlAsyncClient.listRoleAssignments
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments
  package: com.azure.security.keyvault.administration
- uid: reactor.core.publisher.Mono<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
    name: KeyVaultRoleAssignment
    fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment*
  name: createRoleAssignment
  nameWithType: KeyVaultAccessControlAsyncClient.createRoleAssignment
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment
  package: com.azure.security.keyvault.administration
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
    name: KeyVaultRoleAssignment
    fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse*
  name: createRoleAssignmentWithResponse
  nameWithType: KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment*
  name: getRoleAssignment
  nameWithType: KeyVaultAccessControlAsyncClient.getRoleAssignment
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse*
  name: getRoleAssignmentWithResponse
  nameWithType: KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment*
  name: deleteRoleAssignment
  nameWithType: KeyVaultAccessControlAsyncClient.deleteRoleAssignment
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment
  package: com.azure.security.keyvault.administration
- uid: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse*
  name: deleteRoleAssignmentWithResponse
  nameWithType: KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse
  fullName: com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse
  package: com.azure.security.keyvault.administration
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
  name: KeyVaultRoleDefinition
  nameWithType: KeyVaultRoleDefinition
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition
- uid: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
  name: KeyVaultRoleAssignment
  nameWithType: KeyVaultRoleAssignment
  fullName: com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
