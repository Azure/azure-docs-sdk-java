### YamlMime:JavaType
uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient"
fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient"
name: "KeyVaultAccessControlAsyncClient"
nameWithType: "KeyVaultAccessControlAsyncClient"
summary: "The <xref uid=\"com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultAccessControlAsyncClient\"></xref> provides asynchronous methods to view and manage Role Based Access for the Azure Key Vault."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class KeyVaultAccessControlAsyncClient"
methods:
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)"
  name: "createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)"
  nameWithType: "KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref> with a randomly generated name."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>\n to create."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> ID for the role assignment."
    name: "roleDefinitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The principal ID assigned to the role. This maps to the ID inside the Active Directory."
    name: "principalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultRoleAssignment> createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId)"
  desc: "Creates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref> with a randomly generated name.\n\n**Code Samples**\n\nCreates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref> with a randomly generated name. Prints out the details of the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n```java\nString roleDefinitionId = \"142e42c1-ab29-4dc7-9dfa-8fd7c0815128\";\n String servicePrincipalId = \"07dca82e-b625-4a60-977b-859d2a162ca7\";\n\n keyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope.GLOBAL, roleDefinitionId,\n     servicePrincipalId).subscribe(roleAssignment ->\n         System.out.printf(\"Created role assignment with randomly generated name '%s' for principal with id\"\n             + \"'%s'.%n\", roleAssignment.getName(), roleAssignment.getProperties().getPrincipalId()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment&text=KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  name: "createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>\n to create."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> ID for the role assignment."
    name: "roleDefinitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The principal ID assigned to the role. This maps to the ID inside the Active Directory."
    name: "principalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name used to create the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. It can be\n any valid UUID."
    name: "roleAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultRoleAssignment> createRoleAssignment(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  desc: "Creates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n**Code Samples**\n\nCreates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. Prints out the details of the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n```java\nString myRoleDefinitionId = \"e1ca67d0-4332-465c-b9cd-894b2834401b\";\n String myServicePrincipalId = \"31af81fe-6123-4838-92c0-7c2531ec13d7\";\n String myRoleAssignmentName = \"94d7827f-f8c9-4a5d-94fd-9fd2cd02d12f\";\n\n keyVaultAccessControlAsyncClient.createRoleAssignment(KeyVaultRoleScope.GLOBAL, myRoleDefinitionId,\n     myServicePrincipalId, myRoleAssignmentName).subscribe(roleAssignment ->\n         System.out.printf(\"Created role assignment with name '%s' for principal with id '%s'.%n\",\n             roleAssignment.getName(), roleAssignment.getProperties().getPrincipalId()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment&text=KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  name: "createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  summary: "Creates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>\n to create."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> ID for the role assignment."
    name: "roleDefinitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The principal ID assigned to the role. This maps to the ID inside the Active Directory."
    name: "principalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name used to create the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. It can be\n any valid UUID."
    name: "roleAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultRoleAssignment>> createRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionId, String principalId, String roleAssignmentName)"
  desc: "Creates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n**Code Samples**\n\nCreates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. Prints out details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> and the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n```java\nString someRoleDefinitionId = \"686b0f78-5012-4def-8a70-eba36aa54d3d\";\n String someServicePrincipalId = \"345ec980-904b-4238-aafc-1eaeed3e23cf\";\n String someRoleAssignmentName = \"1c79927c-6e08-4e5c-8a6c-f58c13c9bbb5\";\n\n keyVaultAccessControlAsyncClient.createRoleAssignmentWithResponse(KeyVaultRoleScope.GLOBAL,\n     someRoleDefinitionId, someServicePrincipalId, someRoleAssignmentName).subscribe(response -> {\n         KeyVaultRoleAssignment createdRoleAssignment = response.getValue();\n\n         System.out.printf(\"Response successful with status code: %d. Role assignment with name '%s' for\"\n             + \" principal with id '%s' was created.%n\", response.getStatusCode(),\n             createdRoleAssignment.getName(), createdRoleAssignment.getProperties().getPrincipalId());\n     });\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the created\n <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment&text=KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  name: "deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  summary: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  desc: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n**Code Samples**\n\nDeletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n```java\nString roleAssignmentName = \"f05d11ce-578a-4524-950c-fb4c53e5fb96\";\n\n keyVaultAccessControlAsyncClient.deleteRoleAssignment(KeyVaultRoleScope.GLOBAL, roleAssignmentName)\n     .subscribe(unused ->\n         System.out.printf(\"Deleted role assignment with name '%s'.%n\", roleAssignmentName));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> of a <xref uid=\"java.lang.Void\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Void\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  name: "deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  summary: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  desc: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n**Code Samples**\n\nDeletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. Prints out details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref>.\n\n```java\nString myRoleAssignmentName = \"06aaea13-e4f3-4d3f-8a93-088dff6e90ed\";\n\n keyVaultAccessControlAsyncClient.deleteRoleAssignmentWithResponse(KeyVaultRoleScope.GLOBAL,\n     myRoleAssignmentName).subscribe(response ->\n         System.out.printf(\"Response successful with status code: %d. Role assignment with name '%s' was\"\n             + \" deleted.%n\", response.getStatusCode(), myRoleAssignmentName));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> with a <xref uid=\"java.lang.Void\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Void\"></xref> value."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleDefinition(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  name: "deleteRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.deleteRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  summary: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n Managed HSM only supports '/'."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "roleDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  desc: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n**Code Samples**\n\nDeletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n```java\nString roleDefinitionName = \"e3c7c51a-8abd-4b1b-9201-48ded34d0358\";\n\n keyVaultAccessControlAsyncClient.deleteRoleDefinition(KeyVaultRoleScope.GLOBAL, roleDefinitionName)\n     .subscribe(unused -> System.out.printf(\"Deleted role definition with name '%s'.%n\", roleDefinitionName));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> of a <xref uid=\"java.lang.Void\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Void\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleDefinitionWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.deleteRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  name: "deleteRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.deleteRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  summary: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "roleDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  desc: "Deletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n**Code Samples**\n\nDeletes a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>. Prints out the details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref>.\n\n```java\nString myRoleDefinitionName = \"ccaafb00-31fb-40fe-9ccc-39a2ad2af082\";\n\n keyVaultAccessControlAsyncClient.deleteRoleDefinitionWithResponse(KeyVaultRoleScope.GLOBAL,\n     myRoleDefinitionName).subscribe(response ->\n         System.out.printf(\"Response successful with status code: %d. Role definition with name '%s' was\"\n             + \" deleted.%n\", response.getStatusCode(), myRoleDefinitionName));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> with a <xref uid=\"java.lang.Void\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Void\"></xref> value."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  name: "getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  summary: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name used of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultRoleAssignment> getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  desc: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n**Code Samples**\n\nGets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. Prints out details of the retrieved <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n```java\nString roleAssignmentName = \"c5a305c0-e17a-40f5-af79-73801bdd8867\";\n\n keyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope.GLOBAL, roleAssignmentName)\n     .subscribe(roleAssignment ->\n         System.out.printf(\"Retrieved role assignment with name '%s'.%n\", roleAssignment.getName()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment&text=KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  name: "getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  summary: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultRoleAssignment>> getRoleAssignmentWithResponse(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  desc: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n**Code Samples**\n\nGets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. Prints out details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> and the retrieved <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n```java\nString myRoleAssignmentName = \"76ccbf52-4d49-4fcc-ad3f-044c254be114\";\n\n keyVaultAccessControlAsyncClient.getRoleAssignmentWithResponse(KeyVaultRoleScope.GLOBAL, myRoleAssignmentName)\n     .subscribe(response ->\n         System.out.printf(\"Response successful with status code: %d. Role assignment with name '%s' was\"\n             + \" retrieved.%n\", response.getStatusCode(), response.getValue().getName()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the\n <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment&text=KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleDefinition(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  name: "getRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.getRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  summary: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name used of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "roleDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultRoleDefinition> getRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  desc: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n**Code Samples**\n\nGets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>. Prints out the details of the retrieved <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n```java\nString roleDefinitionName = \"8f90b099-7361-4db6-8321-719adaf6e4ca\";\n\n keyVaultAccessControlAsyncClient.getRoleDefinition(KeyVaultRoleScope.GLOBAL, roleDefinitionName)\n     .subscribe(roleDefinition ->\n         System.out.printf(\"Retrieved role definition with name '%s' and role name '%s'.%n\",\n             roleDefinition.getName(), roleDefinition.getRoleName()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition&text=KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleDefinitionWithResponse(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  name: "getRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.getRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  summary: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "roleDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultRoleDefinition>> getRoleDefinitionWithResponse(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  desc: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n**Code Samples**\n\nGets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>. Prints out the details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> and the retrieved <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n```java\nString myRoleDefinitionName = \"0877b4ee-6275-4559-89f1-c289060ef398\";\n\n keyVaultAccessControlAsyncClient.getRoleDefinitionWithResponse(KeyVaultRoleScope.GLOBAL, myRoleDefinitionName)\n     .subscribe(response ->\n         System.out.printf(\"Response successful with status code: %d. Role definition with name '%s' and role\"\n             + \" name '%s' was retrieved.%n\", response.getStatusCode(), response.getValue().getName(),\n             response.getValue().getRoleName()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the\n <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition&text=KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl()"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getVaultUrl()"
  name: "getVaultUrl()"
  nameWithType: "KeyVaultAccessControlAsyncClient.getVaultUrl()"
  summary: "Gets the URL for the Key Vault this client is associated with."
  syntax: "public String getVaultUrl()"
  desc: "Gets the URL for the Key Vault this client is associated with."
  returns:
    description: "The Key Vault URL."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleAssignments(KeyVaultRoleScope roleScope)"
  name: "listRoleAssignments(KeyVaultRoleScope roleScope)"
  nameWithType: "KeyVaultAccessControlAsyncClient.listRoleAssignments(KeyVaultRoleScope roleScope)"
  summary: "Lists all <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignments\"></xref> that are applicable at the given <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> and above."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<KeyVaultRoleAssignment> listRoleAssignments(KeyVaultRoleScope roleScope)"
  desc: "Lists all <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignments\"></xref> that are applicable at the given <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> and above."
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignments\"></xref> for the given\n <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment&text=KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.listRoleDefinitions(KeyVaultRoleScope roleScope)"
  name: "listRoleDefinitions(KeyVaultRoleScope roleScope)"
  nameWithType: "KeyVaultAccessControlAsyncClient.listRoleDefinitions(KeyVaultRoleScope roleScope)"
  summary: "Lists all <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definitions\"></xref> that are applicable at the given <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> and above."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definitions\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<KeyVaultRoleDefinition> listRoleDefinitions(KeyVaultRoleScope roleScope)"
  desc: "Lists all <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definitions\"></xref> that are applicable at the given <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> and above.\n\n**Code Samples**\n\nLists all <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definitions\"></xref>. Prints out the details of the retrieved <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definitions\"></xref>.\n\n```java\nkeyVaultAccessControlAsyncClient.listRoleDefinitions(KeyVaultRoleScope.GLOBAL)\n     .subscribe(roleDefinition ->\n         System.out.printf(\"Retrieved role definition with name '%s'.%n\", roleDefinition.getName()));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definitions\"></xref> for the given\n <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition&text=KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.setRoleDefinition(com.azure.security.keyvault.administration.models.KeyVaultRoleScope)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.setRoleDefinition(KeyVaultRoleScope roleScope)"
  name: "setRoleDefinition(KeyVaultRoleScope roleScope)"
  nameWithType: "KeyVaultAccessControlAsyncClient.setRoleDefinition(KeyVaultRoleScope roleScope)"
  summary: "Creates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> with a randomly generated name."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n Managed HSM only supports '/'."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultRoleDefinition> setRoleDefinition(KeyVaultRoleScope roleScope)"
  desc: "Creates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> with a randomly generated name.\n\n**Code Samples**\n\nCreates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> with a randomly generated name. Prints out the details of the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n```java\nkeyVaultAccessControlAsyncClient.setRoleDefinition(KeyVaultRoleScope.GLOBAL)\n     .subscribe(roleDefinition ->\n         System.out.printf(\"Created role definition with randomly generated name '%s' and role name '%s'.%n\",\n             roleDefinition.getName(), roleDefinition.getRoleName()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition&text=KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.setRoleDefinition(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.setRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  name: "setRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.setRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  summary: "Creates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n Managed HSM only supports '/'."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>. It can be any valid\\\n UUID. If <code>null</code> is provided, a name will be randomly generated."
    name: "roleDefinitionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultRoleDefinition> setRoleDefinition(KeyVaultRoleScope roleScope, String roleDefinitionName)"
  desc: "Creates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>. If no name is provided, then a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> will be created with a randomly generated name.\n\n**Code Samples**\n\nCreates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref> with a given generated name. Prints out the details of the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n```java\nString myRoleDefinitionName = \"504a3d11-5a63-41a9-b603-41bdf88df03e\";\n\n keyVaultAccessControlAsyncClient.setRoleDefinition(KeyVaultRoleScope.GLOBAL, myRoleDefinitionName)\n     .subscribe(roleDefinition ->\n         System.out.printf(\"Set role definition with name '%s' and role name '%s'.%n\", roleDefinition.getName(),\n             roleDefinition.getRoleName()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition&text=KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.setRoleDefinitionWithResponse(com.azure.security.keyvault.administration.models.SetRoleDefinitionOptions)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.setRoleDefinitionWithResponse(SetRoleDefinitionOptions options)"
  name: "setRoleDefinitionWithResponse(SetRoleDefinitionOptions options)"
  nameWithType: "KeyVaultAccessControlAsyncClient.setRoleDefinitionWithResponse(SetRoleDefinitionOptions options)"
  summary: "Creates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
  parameters:
  - description: "Object representing the configurable options to create or update a\n <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    name: "options"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.SetRoleDefinitionOptions?alt=com.azure.security.keyvault.administration.models.SetRoleDefinitionOptions&text=SetRoleDefinitionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyVaultRoleDefinition>> setRoleDefinitionWithResponse(SetRoleDefinitionOptions options)"
  desc: "Creates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n**Code Samples**\n\nCreates or updates a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>. Prints out the details of the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> and the created <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>.\n\n```java\nString roleDefinitionName = \"9de303d3-6ea8-4b8f-a20b-18e67f77e42a\";\n\n List<KeyVaultRoleScope> assignableScopes = new ArrayList<>();\n assignableScopes.add(KeyVaultRoleScope.GLOBAL);\n assignableScopes.add(KeyVaultRoleScope.KEYS);\n\n List<KeyVaultDataAction> dataActions = new ArrayList<>();\n dataActions.add(KeyVaultDataAction.START_HSM_RESTORE);\n dataActions.add(KeyVaultDataAction.START_HSM_BACKUP);\n dataActions.add(KeyVaultDataAction.READ_HSM_BACKUP_STATUS);\n dataActions.add(KeyVaultDataAction.READ_HSM_RESTORE_STATUS);\n dataActions.add(KeyVaultDataAction.BACKUP_HSM_KEYS);\n dataActions.add(KeyVaultDataAction.RESTORE_HSM_KEYS);\n\n List<KeyVaultPermission> permissions = new ArrayList<>();\n permissions.add(new KeyVaultPermission(null, null, dataActions, null));\n\n SetRoleDefinitionOptions setRoleDefinitionOptions =\n     new SetRoleDefinitionOptions(KeyVaultRoleScope.GLOBAL, roleDefinitionName)\n         .setRoleName(\"Backup and Restore Role Definition\")\n         .setDescription(\"Can backup and restore a whole Managed HSM, as well as individual keys.%n\")\n         .setAssignableScopes(assignableScopes)\n         .setPermissions(permissions);\n\n keyVaultAccessControlAsyncClient.setRoleDefinitionWithResponse(setRoleDefinitionOptions)\n     .subscribe(response ->\n         System.out.printf(\"Response successful with status code: %d. Role definition with name '%s' and role\"\n             + \" name '%s' was set.%n\", response.getStatusCode(), response.getValue().getName(),\n             response.getValue().getRoleName()));\n```"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the\n created or updated <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definition\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition&text=KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "The <xref uid=\"com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultAccessControlAsyncClient\"></xref> provides asynchronous methods to view and manage Role Based Access for the Azure Key Vault. The client supports creating, listing, updating, and deleting <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleDefinition\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role definitions\"></xref> and <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignments\"></xref>.\n\nInstances of this client are obtained by calling the <xref uid=\"com.azure.security.keyvault.administration.KeyVaultAccessControlClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultAccessControlClientBuilder#buildAsyncClient()\"></xref> method on a <xref uid=\"com.azure.security.keyvault.administration.KeyVaultAccessControlClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyVaultAccessControlClientBuilder\"></xref> object.\n\n**Samples to construct an async client**\n\n```java\nKeyVaultAccessControlAsyncClient keyVaultAccessControlAsyncClient = new KeyVaultAccessControlClientBuilder()\n     .vaultUrl(\"https://myaccount.managedhsm.azure.net/\")\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .buildAsyncClient();\n```"
metadata: {}
package: "com.azure.security.keyvault.administration"
artifact: com.azure:azure-security-keyvault-administration:4.1.0-beta.5
