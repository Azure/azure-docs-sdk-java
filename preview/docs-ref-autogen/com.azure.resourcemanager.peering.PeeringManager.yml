### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.PeeringManager"
fullName: "com.azure.resourcemanager.peering.PeeringManager"
name: "PeeringManager"
nameWithType: "PeeringManager"
summary: "Entry point to Peering<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PeeringManager"
methods:
- uid: "com.azure.resourcemanager.peering.PeeringManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "PeeringManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Peering service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static PeeringManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of Peering service API entry point."
  returns:
    description: "the Peering service API instance."
    type: "<xref href=\"com.azure.resourcemanager.peering.PeeringManager?alt=com.azure.resourcemanager.peering.PeeringManager&text=PeeringManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.cdnPeeringPrefixes()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.cdnPeeringPrefixes()"
  name: "cdnPeeringPrefixes()"
  nameWithType: "PeeringManager.cdnPeeringPrefixes()"
  syntax: "public CdnPeeringPrefixes cdnPeeringPrefixes()"
  returns:
    description: "Resource collection API of CdnPeeringPrefixes."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.CdnPeeringPrefixes?alt=com.azure.resourcemanager.peering.models.CdnPeeringPrefixes&text=CdnPeeringPrefixes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.configure()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.configure()"
  name: "configure()"
  nameWithType: "PeeringManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Peering<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static PeeringManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create PeeringManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.peering.PeeringManager.Configurable?alt=com.azure.resourcemanager.peering.PeeringManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.legacyPeerings()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.legacyPeerings()"
  name: "legacyPeerings()"
  nameWithType: "PeeringManager.legacyPeerings()"
  syntax: "public LegacyPeerings legacyPeerings()"
  returns:
    description: "Resource collection API of LegacyPeerings."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.LegacyPeerings?alt=com.azure.resourcemanager.peering.models.LegacyPeerings&text=LegacyPeerings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.operations()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.operations()"
  name: "operations()"
  nameWithType: "PeeringManager.operations()"
  syntax: "public Operations operations()"
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.Operations?alt=com.azure.resourcemanager.peering.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.peerAsns()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.peerAsns()"
  name: "peerAsns()"
  nameWithType: "PeeringManager.peerAsns()"
  syntax: "public PeerAsns peerAsns()"
  returns:
    description: "Resource collection API of PeerAsns."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeerAsns?alt=com.azure.resourcemanager.peering.models.PeerAsns&text=PeerAsns\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.peeringLocations()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.peeringLocations()"
  name: "peeringLocations()"
  nameWithType: "PeeringManager.peeringLocations()"
  syntax: "public PeeringLocations peeringLocations()"
  returns:
    description: "Resource collection API of PeeringLocations."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringLocations?alt=com.azure.resourcemanager.peering.models.PeeringLocations&text=PeeringLocations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.peeringServiceCountries()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.peeringServiceCountries()"
  name: "peeringServiceCountries()"
  nameWithType: "PeeringManager.peeringServiceCountries()"
  syntax: "public PeeringServiceCountries peeringServiceCountries()"
  returns:
    description: "Resource collection API of PeeringServiceCountries."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServiceCountries?alt=com.azure.resourcemanager.peering.models.PeeringServiceCountries&text=PeeringServiceCountries\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.peeringServiceLocations()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.peeringServiceLocations()"
  name: "peeringServiceLocations()"
  nameWithType: "PeeringManager.peeringServiceLocations()"
  syntax: "public PeeringServiceLocations peeringServiceLocations()"
  returns:
    description: "Resource collection API of PeeringServiceLocations."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServiceLocations?alt=com.azure.resourcemanager.peering.models.PeeringServiceLocations&text=PeeringServiceLocations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.peeringServiceProviders()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.peeringServiceProviders()"
  name: "peeringServiceProviders()"
  nameWithType: "PeeringManager.peeringServiceProviders()"
  syntax: "public PeeringServiceProviders peeringServiceProviders()"
  returns:
    description: "Resource collection API of PeeringServiceProviders."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServiceProviders?alt=com.azure.resourcemanager.peering.models.PeeringServiceProviders&text=PeeringServiceProviders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.peeringServices()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.peeringServices()"
  name: "peeringServices()"
  nameWithType: "PeeringManager.peeringServices()"
  syntax: "public PeeringServices peeringServices()"
  returns:
    description: "Resource collection API of PeeringServices."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServices?alt=com.azure.resourcemanager.peering.models.PeeringServices&text=PeeringServices\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.peerings()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.peerings()"
  name: "peerings()"
  nameWithType: "PeeringManager.peerings()"
  syntax: "public Peerings peerings()"
  returns:
    description: "Resource collection API of Peerings."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.Peerings?alt=com.azure.resourcemanager.peering.models.Peerings&text=Peerings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.prefixes()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.prefixes()"
  name: "prefixes()"
  nameWithType: "PeeringManager.prefixes()"
  syntax: "public Prefixes prefixes()"
  returns:
    description: "Resource collection API of Prefixes."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.Prefixes?alt=com.azure.resourcemanager.peering.models.Prefixes&text=Prefixes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.receivedRoutes()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.receivedRoutes()"
  name: "receivedRoutes()"
  nameWithType: "PeeringManager.receivedRoutes()"
  syntax: "public ReceivedRoutes receivedRoutes()"
  returns:
    description: "Resource collection API of ReceivedRoutes."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ReceivedRoutes?alt=com.azure.resourcemanager.peering.models.ReceivedRoutes&text=ReceivedRoutes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.registeredAsns()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.registeredAsns()"
  name: "registeredAsns()"
  nameWithType: "PeeringManager.registeredAsns()"
  syntax: "public RegisteredAsns registeredAsns()"
  returns:
    description: "Resource collection API of RegisteredAsns."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.RegisteredAsns?alt=com.azure.resourcemanager.peering.models.RegisteredAsns&text=RegisteredAsns\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.registeredPrefixes()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.registeredPrefixes()"
  name: "registeredPrefixes()"
  nameWithType: "PeeringManager.registeredPrefixes()"
  syntax: "public RegisteredPrefixes registeredPrefixes()"
  returns:
    description: "Resource collection API of RegisteredPrefixes."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.RegisteredPrefixes?alt=com.azure.resourcemanager.peering.models.RegisteredPrefixes&text=RegisteredPrefixes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.resourceProviders()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.resourceProviders()"
  name: "resourceProviders()"
  nameWithType: "PeeringManager.resourceProviders()"
  syntax: "public ResourceProviders resourceProviders()"
  returns:
    description: "Resource collection API of ResourceProviders."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ResourceProviders?alt=com.azure.resourcemanager.peering.models.ResourceProviders&text=ResourceProviders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.PeeringManager.serviceClient()"
  fullName: "com.azure.resourcemanager.peering.PeeringManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "PeeringManager.serviceClient()"
  syntax: "public PeeringManagementClient serviceClient()"
  returns:
    description: "Wrapped service client PeeringManagementClient providing direct access to the underlying auto-generated\n     API implementation, based on Azure REST API."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.PeeringManagementClient?alt=com.azure.resourcemanager.peering.fluent.PeeringManagementClient&text=PeeringManagementClient\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to PeeringManager. Peering Client."
metadata: {}
package: "com.azure.resourcemanager.peering"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
