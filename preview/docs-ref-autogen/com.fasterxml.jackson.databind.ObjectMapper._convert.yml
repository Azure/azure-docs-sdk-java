### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper._convert*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper._convert"
name: "_convert"
nameWithType: "ObjectMapper._convert"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper._convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper._convert(Object fromValue, JavaType toValueType)"
  name: "_convert(Object fromValue, JavaType toValueType)"
  nameWithType: "ObjectMapper._convert(Object fromValue, JavaType toValueType)"
  summary: "Actual conversion implementation: instead of using existing read and write methods, much of code is inlined. Reason for this is that we must avoid root value wrapping/unwrapping both for efficiency and for correctness. If root value wrapping/unwrapping is actually desired, caller must use explicit `writeValue` and `readValue` methods."
  parameters:
  - name: "fromValue"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "toValueType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Object _convert(Object fromValue, JavaType toValueType)"
  exceptions:
  - type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
