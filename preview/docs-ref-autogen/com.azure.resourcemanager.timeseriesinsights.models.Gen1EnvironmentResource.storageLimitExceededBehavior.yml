### YamlMime:JavaMember
uid: "com.azure.resourcemanager.timeseriesinsights.models.Gen1EnvironmentResource.storageLimitExceededBehavior*"
fullName: "com.azure.resourcemanager.timeseriesinsights.models.Gen1EnvironmentResource.storageLimitExceededBehavior"
name: "storageLimitExceededBehavior"
nameWithType: "Gen1EnvironmentResource.storageLimitExceededBehavior"
members:
- uid: "com.azure.resourcemanager.timeseriesinsights.models.Gen1EnvironmentResource.storageLimitExceededBehavior()"
  fullName: "com.azure.resourcemanager.timeseriesinsights.models.Gen1EnvironmentResource.storageLimitExceededBehavior()"
  name: "storageLimitExceededBehavior()"
  nameWithType: "Gen1EnvironmentResource.storageLimitExceededBehavior()"
  summary: "Get the storageLimitExceededBehavior property: The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If \"PauseIngress\" is specified, new events will not be read from the event source. If \"PurgeOldData\" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData."
  syntax: "public StorageLimitExceededBehavior storageLimitExceededBehavior()"
  returns:
    description: "the storageLimitExceededBehavior value."
    type: "<xref href=\"com.azure.resourcemanager.timeseriesinsights.models.StorageLimitExceededBehavior?alt=com.azure.resourcemanager.timeseriesinsights.models.StorageLimitExceededBehavior&text=StorageLimitExceededBehavior\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.timeseriesinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-timeseriesinsights:1.0.0-beta.1
