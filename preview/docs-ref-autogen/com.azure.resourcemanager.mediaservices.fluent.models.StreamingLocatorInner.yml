### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner"
fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner"
name: "StreamingLocatorInner"
nameWithType: "StreamingLocatorInner"
summary: "A Streaming Locator resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StreamingLocatorInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.StreamingLocatorInner()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.StreamingLocatorInner()"
  name: "StreamingLocatorInner()"
  nameWithType: "StreamingLocatorInner.StreamingLocatorInner()"
  syntax: "public StreamingLocatorInner()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.alternativeMediaId()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.alternativeMediaId()"
  name: "alternativeMediaId()"
  nameWithType: "StreamingLocatorInner.alternativeMediaId()"
  summary: "Get the alternative<wbr>Media<wbr>Id property: Alternative Media ID of this Streaming Locator."
  syntax: "public String alternativeMediaId()"
  desc: "Get the alternativeMediaId property: Alternative Media ID of this Streaming Locator."
  returns:
    description: "the alternativeMediaId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.assetName()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.assetName()"
  name: "assetName()"
  nameWithType: "StreamingLocatorInner.assetName()"
  summary: "Get the asset<wbr>Name property: Asset Name."
  syntax: "public String assetName()"
  desc: "Get the assetName property: Asset Name."
  returns:
    description: "the assetName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.contentKeys()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.contentKeys()"
  name: "contentKeys()"
  nameWithType: "StreamingLocatorInner.contentKeys()"
  summary: "Get the content<wbr>Keys property: The Content<wbr>Keys used by this Streaming Locator."
  syntax: "public List<StreamingLocatorContentKey> contentKeys()"
  desc: "Get the contentKeys property: The ContentKeys used by this Streaming Locator."
  returns:
    description: "the contentKeys value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey&text=StreamingLocatorContentKey\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.created()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.created()"
  name: "created()"
  nameWithType: "StreamingLocatorInner.created()"
  summary: "Get the created property: The creation time of the Streaming Locator."
  syntax: "public OffsetDateTime created()"
  desc: "Get the created property: The creation time of the Streaming Locator."
  returns:
    description: "the created value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.defaultContentKeyPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.defaultContentKeyPolicyName()"
  name: "defaultContentKeyPolicyName()"
  nameWithType: "StreamingLocatorInner.defaultContentKeyPolicyName()"
  summary: "Get the default<wbr>Content<wbr>Key<wbr>Policy<wbr>Name property: Name of the default Content<wbr>Key<wbr>Policy used by this Streaming Locator."
  syntax: "public String defaultContentKeyPolicyName()"
  desc: "Get the defaultContentKeyPolicyName property: Name of the default ContentKeyPolicy used by this Streaming Locator."
  returns:
    description: "the defaultContentKeyPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.endTime()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.endTime()"
  name: "endTime()"
  nameWithType: "StreamingLocatorInner.endTime()"
  summary: "Get the end<wbr>Time property: The end time of the Streaming Locator."
  syntax: "public OffsetDateTime endTime()"
  desc: "Get the endTime property: The end time of the Streaming Locator."
  returns:
    description: "the endTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.filters()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.filters()"
  name: "filters()"
  nameWithType: "StreamingLocatorInner.filters()"
  summary: "Get the filters property: A list of asset or account filters which apply to this streaming locator."
  syntax: "public List<String> filters()"
  desc: "Get the filters property: A list of asset or account filters which apply to this streaming locator."
  returns:
    description: "the filters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.startTime()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.startTime()"
  name: "startTime()"
  nameWithType: "StreamingLocatorInner.startTime()"
  summary: "Get the start<wbr>Time property: The start time of the Streaming Locator."
  syntax: "public OffsetDateTime startTime()"
  desc: "Get the startTime property: The start time of the Streaming Locator."
  returns:
    description: "the startTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.streamingLocatorId()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.streamingLocatorId()"
  name: "streamingLocatorId()"
  nameWithType: "StreamingLocatorInner.streamingLocatorId()"
  summary: "Get the streaming<wbr>Locator<wbr>Id property: The Streaming<wbr>Locator<wbr>Id of the Streaming Locator."
  syntax: "public UUID streamingLocatorId()"
  desc: "Get the streamingLocatorId property: The StreamingLocatorId of the Streaming Locator."
  returns:
    description: "the streamingLocatorId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.streamingPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.streamingPolicyName()"
  name: "streamingPolicyName()"
  nameWithType: "StreamingLocatorInner.streamingPolicyName()"
  summary: "Get the streaming<wbr>Policy<wbr>Name property: Name of the Streaming Policy used by this Streaming Locator."
  syntax: "public String streamingPolicyName()"
  desc: "Get the streamingPolicyName property: Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined\\_DownloadOnly', 'Predefined\\_ClearStreamingOnly', 'Predefined\\_DownloadAndClearStreaming', 'Predefined\\_ClearKey', 'Predefined\\_MultiDrmCencStreaming' and 'Predefined\\_MultiDrmStreaming'."
  returns:
    description: "the streamingPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.systemData()"
  name: "systemData()"
  nameWithType: "StreamingLocatorInner.systemData()"
  summary: "Get the system<wbr>Data property: The system metadata relating to this resource."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.validate()"
  name: "validate()"
  nameWithType: "StreamingLocatorInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withAlternativeMediaId(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withAlternativeMediaId(String alternativeMediaId)"
  name: "withAlternativeMediaId(String alternativeMediaId)"
  nameWithType: "StreamingLocatorInner.withAlternativeMediaId(String alternativeMediaId)"
  summary: "Set the alternative<wbr>Media<wbr>Id property: Alternative Media ID of this Streaming Locator."
  parameters:
  - description: "the alternativeMediaId value to set."
    name: "alternativeMediaId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingLocatorInner withAlternativeMediaId(String alternativeMediaId)"
  desc: "Set the alternativeMediaId property: Alternative Media ID of this Streaming Locator."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withAssetName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withAssetName(String assetName)"
  name: "withAssetName(String assetName)"
  nameWithType: "StreamingLocatorInner.withAssetName(String assetName)"
  summary: "Set the asset<wbr>Name property: Asset Name."
  parameters:
  - description: "the assetName value to set."
    name: "assetName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingLocatorInner withAssetName(String assetName)"
  desc: "Set the assetName property: Asset Name."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withContentKeys(java.util.List<com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey>)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withContentKeys(List<StreamingLocatorContentKey> contentKeys)"
  name: "withContentKeys(List<StreamingLocatorContentKey> contentKeys)"
  nameWithType: "StreamingLocatorInner.withContentKeys(List<StreamingLocatorContentKey> contentKeys)"
  summary: "Set the content<wbr>Keys property: The Content<wbr>Keys used by this Streaming Locator."
  parameters:
  - description: "the contentKeys value to set."
    name: "contentKeys"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingLocatorContentKey&text=StreamingLocatorContentKey\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StreamingLocatorInner withContentKeys(List<StreamingLocatorContentKey> contentKeys)"
  desc: "Set the contentKeys property: The ContentKeys used by this Streaming Locator."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withDefaultContentKeyPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  name: "withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  nameWithType: "StreamingLocatorInner.withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  summary: "Set the default<wbr>Content<wbr>Key<wbr>Policy<wbr>Name property: Name of the default Content<wbr>Key<wbr>Policy used by this Streaming Locator."
  parameters:
  - description: "the defaultContentKeyPolicyName value to set."
    name: "defaultContentKeyPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingLocatorInner withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  desc: "Set the defaultContentKeyPolicyName property: Name of the default ContentKeyPolicy used by this Streaming Locator."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withEndTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withEndTime(OffsetDateTime endTime)"
  name: "withEndTime(OffsetDateTime endTime)"
  nameWithType: "StreamingLocatorInner.withEndTime(OffsetDateTime endTime)"
  summary: "Set the end<wbr>Time property: The end time of the Streaming Locator."
  parameters:
  - description: "the endTime value to set."
    name: "endTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingLocatorInner withEndTime(OffsetDateTime endTime)"
  desc: "Set the endTime property: The end time of the Streaming Locator."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withFilters(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withFilters(List<String> filters)"
  name: "withFilters(List<String> filters)"
  nameWithType: "StreamingLocatorInner.withFilters(List<String> filters)"
  summary: "Set the filters property: A list of asset or account filters which apply to this streaming locator."
  parameters:
  - description: "the filters value to set."
    name: "filters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StreamingLocatorInner withFilters(List<String> filters)"
  desc: "Set the filters property: A list of asset or account filters which apply to this streaming locator."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withStartTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withStartTime(OffsetDateTime startTime)"
  name: "withStartTime(OffsetDateTime startTime)"
  nameWithType: "StreamingLocatorInner.withStartTime(OffsetDateTime startTime)"
  summary: "Set the start<wbr>Time property: The start time of the Streaming Locator."
  parameters:
  - description: "the startTime value to set."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingLocatorInner withStartTime(OffsetDateTime startTime)"
  desc: "Set the startTime property: The start time of the Streaming Locator."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withStreamingLocatorId(java.util.UUID)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withStreamingLocatorId(UUID streamingLocatorId)"
  name: "withStreamingLocatorId(UUID streamingLocatorId)"
  nameWithType: "StreamingLocatorInner.withStreamingLocatorId(UUID streamingLocatorId)"
  summary: "Set the streaming<wbr>Locator<wbr>Id property: The Streaming<wbr>Locator<wbr>Id of the Streaming Locator."
  parameters:
  - description: "the streamingLocatorId value to set."
    name: "streamingLocatorId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingLocatorInner withStreamingLocatorId(UUID streamingLocatorId)"
  desc: "Set the streamingLocatorId property: The StreamingLocatorId of the Streaming Locator."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withStreamingPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner.withStreamingPolicyName(String streamingPolicyName)"
  name: "withStreamingPolicyName(String streamingPolicyName)"
  nameWithType: "StreamingLocatorInner.withStreamingPolicyName(String streamingPolicyName)"
  summary: "Set the streaming<wbr>Policy<wbr>Name property: Name of the Streaming Policy used by this Streaming Locator."
  parameters:
  - description: "the streamingPolicyName value to set."
    name: "streamingPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingLocatorInner withStreamingPolicyName(String streamingPolicyName)"
  desc: "Set the streamingPolicyName property: Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined\\_DownloadOnly', 'Predefined\\_ClearStreamingOnly', 'Predefined\\_DownloadAndClearStreaming', 'Predefined\\_ClearKey', 'Predefined\\_MultiDrmCencStreaming' and 'Predefined\\_MultiDrmStreaming'."
  returns:
    description: "the StreamingLocatorInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingLocatorInner&text=StreamingLocatorInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A Streaming Locator resource."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
