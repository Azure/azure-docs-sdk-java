### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode
  id: BaseJsonNode
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node
  children:
  - com.fasterxml.jackson.databind.node.BaseJsonNode.BaseJsonNode()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.asToken()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  langs:
  - java
  name: BaseJsonNode
  nameWithType: BaseJsonNode
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode
  type: Class
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Abstract base class common to all standard <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">JsonNode</xref> implementations. The main addition here is that we declare that sub-classes must implement <xref uid="com.fasterxml.jackson.databind.JsonSerializable" data-throw-if-not-resolved="false">JsonSerializable</xref>. This simplifies object mapping aspects a bit, as no external serializers are needed.


    Since 2.10, all implements have been <xref uid="java.io.Serializable" data-throw-if-not-resolved="false">java.io.Serializable</xref>.
  syntax:
    content: public abstract class BaseJsonNode extends JsonNode implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializable.Base
  - com.fasterxml.jackson.databind.JsonNode
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.JsonNode.<T>_this()
  - com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
  - com.fasterxml.jackson.databind.JsonNode.<T>require()
  - com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  - com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.asBoolean()
  - com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  - com.fasterxml.jackson.databind.JsonNode.asDouble()
  - com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  - com.fasterxml.jackson.databind.JsonNode.asInt()
  - com.fasterxml.jackson.databind.JsonNode.asInt(int)
  - com.fasterxml.jackson.databind.JsonNode.asLong()
  - com.fasterxml.jackson.databind.JsonNode.asLong(long)
  - com.fasterxml.jackson.databind.JsonNode.asText()
  - com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  - com.fasterxml.jackson.databind.JsonNode.binaryValue()
  - com.fasterxml.jackson.databind.JsonNode.booleanValue()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  - com.fasterxml.jackson.databind.JsonNode.decimalValue()
  - com.fasterxml.jackson.databind.JsonNode.doubleValue()
  - com.fasterxml.jackson.databind.JsonNode.elements()
  - com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.JsonNode.fieldNames()
  - com.fasterxml.jackson.databind.JsonNode.fields()
  - com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.JsonNode.findPath(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  - com.fasterxml.jackson.databind.JsonNode.floatValue()
  - com.fasterxml.jackson.databind.JsonNode.get(int)
  - com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.getNodeType()
  - com.fasterxml.jackson.databind.JsonNode.has(int)
  - com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
  - com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.intValue()
  - com.fasterxml.jackson.databind.JsonNode.isArray()
  - com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  - com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  - com.fasterxml.jackson.databind.JsonNode.isBinary()
  - com.fasterxml.jackson.databind.JsonNode.isBoolean()
  - com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  - com.fasterxml.jackson.databind.JsonNode.isDouble()
  - com.fasterxml.jackson.databind.JsonNode.isEmpty()
  - com.fasterxml.jackson.databind.JsonNode.isFloat()
  - com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  - com.fasterxml.jackson.databind.JsonNode.isInt()
  - com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  - com.fasterxml.jackson.databind.JsonNode.isLong()
  - com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  - com.fasterxml.jackson.databind.JsonNode.isNull()
  - com.fasterxml.jackson.databind.JsonNode.isNumber()
  - com.fasterxml.jackson.databind.JsonNode.isObject()
  - com.fasterxml.jackson.databind.JsonNode.isPojo()
  - com.fasterxml.jackson.databind.JsonNode.isShort()
  - com.fasterxml.jackson.databind.JsonNode.isTextual()
  - com.fasterxml.jackson.databind.JsonNode.isValueNode()
  - com.fasterxml.jackson.databind.JsonNode.iterator()
  - com.fasterxml.jackson.databind.JsonNode.longValue()
  - com.fasterxml.jackson.databind.JsonNode.numberValue()
  - com.fasterxml.jackson.databind.JsonNode.path(int)
  - com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.required(int)
  - com.fasterxml.jackson.databind.JsonNode.required(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.shortValue()
  - com.fasterxml.jackson.databind.JsonNode.size()
  - com.fasterxml.jackson.databind.JsonNode.textValue()
  - com.fasterxml.jackson.databind.JsonNode.toPrettyString()
  - com.fasterxml.jackson.databind.JsonNode.toString()
  - com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.BaseJsonNode()
  id: BaseJsonNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: BaseJsonNode()
  nameWithType: BaseJsonNode.BaseJsonNode()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.BaseJsonNode()
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.BaseJsonNode*
  type: Constructor
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected BaseJsonNode()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.asToken()
  id: asToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: asToken()
  nameWithType: BaseJsonNode.asToken()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.asToken()
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.asToken*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that can be used for efficient type detection when using stream abstraction for traversing nodes. Will return the first <xref uid="com.fasterxml.jackson.core.JsonToken" data-throw-if-not-resolved="false">JsonToken</xref> that equivalent stream event would produce (for most nodes there is just one token but for structured/container types multiple)
  syntax:
    content: public abstract JsonToken asToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  id: findPath(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: findPath(String fieldName)
  nameWithType: BaseJsonNode.findPath(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(String fieldName)
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method similar to <xref uid="com.fasterxml.jackson.databind.node.BaseJsonNode.findValue" data-throw-if-not-resolved="false">#findValue</xref>, but that will return a "missing node" instead of null if no field is found. Missing node is a specific kind of node for which <xref uid="com.fasterxml.jackson.databind.node.BaseJsonNode.isMissingNode" data-throw-if-not-resolved="false">#isMissingNode</xref> returns true; and all value access methods return empty or missing value.
  syntax:
    content: public final JsonNode findPath(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: hashCode()
  nameWithType: BaseJsonNode.hashCode()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public abstract int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  id: numberType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: numberType()
  nameWithType: BaseJsonNode.numberType()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Returns code that identifies type of underlying numeric value, if (and only if) node is a number node.
  syntax:
    content: public JsonParser.NumberType numberType()
    return:
      type: com.fasterxml.jackson.core.JsonParser.NumberType
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  id: required(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: required(int index)
  nameWithType: BaseJsonNode.required(int index)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int index)
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.required*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method is functionally equivalent to `path(index).required()` and can be used to check that this node is an `ArrayNode` (that is, represents JSON Array value) and has value for specified `index` (but note that value may be explicit JSON null value). If this node is Array Node and has value for specified index, `this` is returned to allow chaining; otherwise <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> is thrown.
  syntax:
    content: public JsonNode required(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  id: required(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: required(String fieldName)
  nameWithType: BaseJsonNode.required(String fieldName)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(String fieldName)
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.required*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method is functionally equivalent to `path(fieldName).required()` and can be used to check that this node is an `ObjectNode` (that is, represents JSON Object value) and has value for specified property with key `fieldName` (but note that value may be explicit JSON null value). If this node is Object Node and has value for specified property, `this` is returned to allow chaining; otherwise <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> is thrown.
  syntax:
    content: public JsonNode required(String fieldName)
    parameters:
    - id: fieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: serialize(JsonGenerator jgen, SerializerProvider provider)
  nameWithType: BaseJsonNode.serialize(JsonGenerator jgen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(JsonGenerator jgen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method called to serialize node instances using given generator.
  syntax:
    content: public abstract void serialize(JsonGenerator jgen, SerializerProvider provider)
    parameters:
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
  nameWithType: BaseJsonNode.serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Type information is needed, even if JsonNode instances are "plain" JSON, since they may be mixed with other types.
  syntax:
    content: public abstract void serializeWithType(JsonGenerator jgen, SerializerProvider provider, TypeSerializer typeSer)
    parameters:
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  id: toPrettyString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: toPrettyString()
  nameWithType: BaseJsonNode.toPrettyString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Alternative to <xref uid="com.fasterxml.jackson.databind.node.BaseJsonNode.toString*" data-throw-if-not-resolved="false">#toString</xref> that will serialize this node using Jackson default pretty-printer.
  syntax:
    content: public String toPrettyString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: toString()
  nameWithType: BaseJsonNode.toString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.toString*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will produce (as of Jackson 2.10) valid JSON using default settings of databind, as String. If you want other kinds of JSON output (or output formatted using one of other Jackson-supported data formats) make sure to use <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> or <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref> to serialize an instance, for example:


    ```java

    String json = objectMapper.writeValueAsString(rootNode);

    ```


    Note: method defined as abstract to ensure all implementation classes explicitly implement method, instead of relying on <xref uid="java.lang.Object.toString()" data-throw-if-not-resolved="false">Object#toString()</xref> definition.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  id: traverse()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: traverse()
  nameWithType: BaseJsonNode.traverse()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public JsonParser traverse()
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  id: traverse(com.fasterxml.jackson.core.ObjectCodec)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.BaseJsonNode
  langs:
  - java
  name: traverse(ObjectCodec codec)
  nameWithType: BaseJsonNode.traverse(ObjectCodec codec)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(ObjectCodec codec)
  overload: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public JsonParser traverse(ObjectCodec codec)
    parameters:
    - id: codec
      type: com.fasterxml.jackson.core.ObjectCodec
    return:
      type: com.fasterxml.jackson.core.JsonParser
references:
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.BaseJsonNode*
  name: BaseJsonNode
  nameWithType: BaseJsonNode.BaseJsonNode
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.BaseJsonNode
  package: com.fasterxml.jackson.databind.node
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonNode
  name: JsonNode
  nameWithType: JsonNode
  fullName: com.fasterxml.jackson.databind.JsonNode
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath*
  name: findPath
  nameWithType: BaseJsonNode.findPath
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath
  package: com.fasterxml.jackson.databind.node
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode*
  name: hashCode
  nameWithType: BaseJsonNode.hashCode
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required*
  name: required
  nameWithType: BaseJsonNode.required
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse*
  name: traverse
  nameWithType: BaseJsonNode.traverse
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.core.ObjectCodec
  name: ObjectCodec
  nameWithType: ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.asToken*
  name: asToken
  nameWithType: BaseJsonNode.asToken
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.asToken
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.core.JsonParser.NumberType
  name: JsonParser.NumberType
  nameWithType: JsonParser.NumberType
  fullName: com.fasterxml.jackson.core.JsonParser.NumberType
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType*
  name: numberType
  nameWithType: BaseJsonNode.numberType
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType
  package: com.fasterxml.jackson.databind.node
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize*
  name: serialize
  nameWithType: BaseJsonNode.serialize
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType*
  name: serializeWithType
  nameWithType: BaseJsonNode.serializeWithType
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toString*
  name: toString
  nameWithType: BaseJsonNode.toString
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toString
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString*
  name: toPrettyString
  nameWithType: BaseJsonNode.toPrettyString
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString
  package: com.fasterxml.jackson.databind.node
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JsonNode.get(int)
  name: JsonNode.get(int)
  nameWithType: JsonNode.get(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.get(int)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  name: JsonNode.findValuesAsText(String,List<String>)
  nameWithType: JsonNode.findValuesAsText(String,List<String>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
- uid: com.fasterxml.jackson.databind.JsonNode.doubleValue()
  name: JsonNode.doubleValue()
  nameWithType: JsonNode.doubleValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.doubleValue()
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  name: JsonNode.canConvertToInt()
  nameWithType: JsonNode.canConvertToInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonNode.elements()
  name: JsonNode.elements()
  nameWithType: JsonNode.elements()
  fullName: com.fasterxml.jackson.databind.JsonNode.elements()
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.requiredAt(JsonPointer)
  nameWithType: JsonNode.requiredAt(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  name: JsonNode.equals(Object)
  nameWithType: JsonNode.equals(Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonNode.iterator()
  name: JsonNode.iterator()
  nameWithType: JsonNode.iterator()
  fullName: com.fasterxml.jackson.databind.JsonNode.iterator()
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode.findParents(String,List<JsonNode>)
  nameWithType: JsonNode.findParents(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.JsonNode.asText()
  name: JsonNode.asText()
  nameWithType: JsonNode.asText()
  fullName: com.fasterxml.jackson.databind.JsonNode.asText()
- uid: com.fasterxml.jackson.databind.JsonNode.decimalValue()
  name: JsonNode.decimalValue()
  nameWithType: JsonNode.decimalValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.decimalValue()
- uid: com.fasterxml.jackson.databind.JsonNode.toPrettyString()
  name: JsonNode.toPrettyString()
  nameWithType: JsonNode.toPrettyString()
  fullName: com.fasterxml.jackson.databind.JsonNode.toPrettyString()
- uid: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  name: JsonNode.isBigInteger()
  nameWithType: JsonNode.isBigInteger()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
- uid: com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
  name: JsonNode.findValue(String)
  nameWithType: JsonNode.findValue(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.at(JsonPointer)
  nameWithType: JsonNode.at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  name: JsonNode.requiredAt(String)
  nameWithType: JsonNode.requiredAt(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isInt()
  name: JsonNode.isInt()
  nameWithType: JsonNode.isInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.isInt()
- uid: com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
  name: JsonNode.hasNonNull(int)
  nameWithType: JsonNode.hasNonNull(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonNode.asInt()
  name: JsonNode.asInt()
  nameWithType: JsonNode.asInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt()
- uid: com.fasterxml.jackson.databind.JsonNode.path(int)
  name: JsonNode.path(int)
  nameWithType: JsonNode.path(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.path(int)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  name: JsonNode.findValuesAsText(String)
  nameWithType: JsonNode.findValuesAsText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  name: JsonNode.isMissingNode()
  nameWithType: JsonNode.isMissingNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  name: JsonNode.findValues(String)
  nameWithType: JsonNode.findValues(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  name: JsonNode.at(String)
  nameWithType: JsonNode.at(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
  name: JsonNode.hasNonNull(String)
  nameWithType: JsonNode.hasNonNull(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>require()
  name: JsonNode.<T>require()
  nameWithType: JsonNode.<T>require()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.has(int)
  name: JsonNode.has(int)
  nameWithType: JsonNode.has(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.has(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  name: JsonNode.isFloatingPointNumber()
  nameWithType: JsonNode.isFloatingPointNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
- uid: com.fasterxml.jackson.databind.JsonNode.numberValue()
  name: JsonNode.numberValue()
  nameWithType: JsonNode.numberValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.numberValue()
- uid: com.fasterxml.jackson.databind.JsonNode.intValue()
  name: JsonNode.intValue()
  nameWithType: JsonNode.intValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.intValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isBoolean()
  name: JsonNode.isBoolean()
  nameWithType: JsonNode.isBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBoolean()
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode.findValues(String,List<JsonNode>)
  nameWithType: JsonNode.findValues(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.JsonNode.findPath(java.lang.String)
  name: JsonNode.findPath(String)
  nameWithType: JsonNode.findPath(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findPath(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.textValue()
  name: JsonNode.textValue()
  nameWithType: JsonNode.textValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.textValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  name: JsonNode.isContainerNode()
  nameWithType: JsonNode.isContainerNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_this()
  name: JsonNode.<T>_this()
  nameWithType: JsonNode.<T>_this()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_this()
- uid: com.fasterxml.jackson.databind.JsonNode.binaryValue()
  name: JsonNode.binaryValue()
  nameWithType: JsonNode.binaryValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.binaryValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isValueNode()
  name: JsonNode.isValueNode()
  nameWithType: JsonNode.isValueNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isValueNode()
- uid: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  name: JsonNode.isBigDecimal()
  nameWithType: JsonNode.isBigDecimal()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble()
  name: JsonNode.asDouble()
  nameWithType: JsonNode.asDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble()
- uid: com.fasterxml.jackson.databind.JsonNode.isDouble()
  name: JsonNode.isDouble()
  nameWithType: JsonNode.isDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.isDouble()
- uid: com.fasterxml.jackson.databind.JsonNode.longValue()
  name: JsonNode.longValue()
  nameWithType: JsonNode.longValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.longValue()
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  nameWithType: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
  name: JsonNode.findParent(String)
  nameWithType: JsonNode.findParent(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.floatValue()
  name: JsonNode.floatValue()
  nameWithType: JsonNode.floatValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.floatValue()
- uid: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  name: JsonNode.bigIntegerValue()
  nameWithType: JsonNode.bigIntegerValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isTextual()
  name: JsonNode.isTextual()
  nameWithType: JsonNode.isTextual()
  fullName: com.fasterxml.jackson.databind.JsonNode.isTextual()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  name: JsonNode.<T>requireNonNull()
  nameWithType: JsonNode.<T>requireNonNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
- uid: com.fasterxml.jackson.databind.JsonNode.isObject()
  name: JsonNode.isObject()
  nameWithType: JsonNode.isObject()
  fullName: com.fasterxml.jackson.databind.JsonNode.isObject()
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean()
  name: JsonNode.asBoolean()
  nameWithType: JsonNode.asBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean()
- uid: com.fasterxml.jackson.databind.JsonNode.isArray()
  name: JsonNode.isArray()
  nameWithType: JsonNode.isArray()
  fullName: com.fasterxml.jackson.databind.JsonNode.isArray()
- uid: com.fasterxml.jackson.databind.JsonNode.required(int)
  name: JsonNode.required(int)
  nameWithType: JsonNode.required(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.required(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isPojo()
  name: JsonNode.isPojo()
  nameWithType: JsonNode.isPojo()
  fullName: com.fasterxml.jackson.databind.JsonNode.isPojo()
- uid: com.fasterxml.jackson.databind.JsonNode.size()
  name: JsonNode.size()
  nameWithType: JsonNode.size()
  fullName: com.fasterxml.jackson.databind.JsonNode.size()
- uid: com.fasterxml.jackson.databind.JsonNode.fieldNames()
  name: JsonNode.fieldNames()
  nameWithType: JsonNode.fieldNames()
  fullName: com.fasterxml.jackson.databind.JsonNode.fieldNames()
- uid: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  name: JsonNode.isIntegralNumber()
  nameWithType: JsonNode.isIntegralNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  name: JsonNode.asDouble(double)
  nameWithType: JsonNode.asDouble(double)
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  name: JsonNode.<T>with(String)
  nameWithType: JsonNode.<T>with(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  name: JsonNode.asText(String)
  nameWithType: JsonNode.asText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
  name: JsonNode.has(String)
  nameWithType: JsonNode.has(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.toString()
  name: JsonNode.toString()
  nameWithType: JsonNode.toString()
  fullName: com.fasterxml.jackson.databind.JsonNode.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializable.Base.isEmpty(SerializerProvider)
  nameWithType: JsonSerializable.Base.isEmpty(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonNode.shortValue()
  name: JsonNode.shortValue()
  nameWithType: JsonNode.shortValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.shortValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isNull()
  name: JsonNode.isNull()
  nameWithType: JsonNode.isNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNull()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: JsonNode.<T>_reportRequiredViolation(String,Object)
  nameWithType: JsonNode.<T>_reportRequiredViolation(String,Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  name: JsonNode.<T>withArray(String)
  nameWithType: JsonNode.<T>withArray(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isEmpty()
  name: JsonNode.isEmpty()
  nameWithType: JsonNode.isEmpty()
  fullName: com.fasterxml.jackson.databind.JsonNode.isEmpty()
- uid: com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)
  name: JsonNode.get(String)
  nameWithType: JsonNode.get(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.booleanValue()
  name: JsonNode.booleanValue()
  nameWithType: JsonNode.booleanValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.booleanValue()
- uid: com.fasterxml.jackson.databind.JsonNode.asLong(long)
  name: JsonNode.asLong(long)
  nameWithType: JsonNode.asLong(long)
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong(long)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
  name: JsonNode.<T>deepCopy()
  nameWithType: JsonNode.<T>deepCopy()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()
- uid: com.fasterxml.jackson.databind.JsonNode.isBinary()
  name: JsonNode.isBinary()
  nameWithType: JsonNode.isBinary()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBinary()
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  name: JsonNode.findParents(String)
  nameWithType: JsonNode.findParents(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.getNodeType()
  name: JsonNode.getNodeType()
  nameWithType: JsonNode.getNodeType()
  fullName: com.fasterxml.jackson.databind.JsonNode.getNodeType()
- uid: com.fasterxml.jackson.databind.JsonNode.fields()
  name: JsonNode.fields()
  nameWithType: JsonNode.fields()
  fullName: com.fasterxml.jackson.databind.JsonNode.fields()
- uid: com.fasterxml.jackson.databind.JsonNode.isNumber()
  name: JsonNode.isNumber()
  nameWithType: JsonNode.isNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNumber()
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  name: JsonNode.asBoolean(boolean)
  nameWithType: JsonNode.asBoolean(boolean)
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
- uid: com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode._at(JsonPointer)
  nameWithType: JsonNode._at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.asLong()
  name: JsonNode.asLong()
  nameWithType: JsonNode.asLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong()
- uid: com.fasterxml.jackson.databind.JsonNode.isLong()
  name: JsonNode.isLong()
  nameWithType: JsonNode.isLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.isLong()
- uid: com.fasterxml.jackson.databind.JsonNode.isShort()
  name: JsonNode.isShort()
  nameWithType: JsonNode.isShort()
  fullName: com.fasterxml.jackson.databind.JsonNode.isShort()
- uid: com.fasterxml.jackson.databind.JsonNode.asInt(int)
  name: JsonNode.asInt(int)
  nameWithType: JsonNode.asInt(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt(int)
- uid: com.fasterxml.jackson.databind.JsonNode.required(java.lang.String)
  name: JsonNode.required(String)
  nameWithType: JsonNode.required(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.required(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  name: JsonNode.canConvertToLong()
  nameWithType: JsonNode.canConvertToLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
- uid: com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
  name: JsonNode.path(String)
  nameWithType: JsonNode.path(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloat()
  name: JsonNode.isFloat()
  nameWithType: JsonNode.isFloat()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloat()
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List
  name: JsonNode.findValuesAsText(String,List
  nameWithType: JsonNode.findValuesAsText(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List
  name: JsonNode.findParents(String,List
  nameWithType: JsonNode.findParents(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode>)
  nameWithType: JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode>)
- uid: T>require()
  name: T>require()
  nameWithType: T>require()
  fullName: T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.
  name: JsonNode.
  nameWithType: JsonNode.
  fullName: com.fasterxml.jackson.databind.JsonNode.
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List
  name: JsonNode.findValues(String,List
  nameWithType: JsonNode.findValues(String,List
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List
- uid: T>_this()
  name: T>_this()
  nameWithType: T>_this()
  fullName: T>_this()
- uid: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode>,JsonNode)
  nameWithType: JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
  name: JsonNode.equals(Comparator
  nameWithType: JsonNode.equals(Comparator
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
- uid: T>requireNonNull()
  name: T>requireNonNull()
  nameWithType: T>requireNonNull()
  fullName: T>requireNonNull()
- uid: T>with(java.lang.String)
  name: T>with(String)
  nameWithType: T>with(String)
  fullName: T>with(java.lang.String)
- uid: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: T>_reportRequiredViolation(String,Object)
  nameWithType: T>_reportRequiredViolation(String,Object)
  fullName: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: T>withArray(java.lang.String)
  name: T>withArray(String)
  nameWithType: T>withArray(String)
  fullName: T>withArray(java.lang.String)
- uid: T>deepCopy()
  name: T>deepCopy()
  nameWithType: T>deepCopy()
  fullName: T>deepCopy()
