### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.node.BaseJsonNode"
fullName: "com.fasterxml.jackson.databind.node.BaseJsonNode"
name: "BaseJsonNode"
nameWithType: "BaseJsonNode"
summary: "Abstract base class common to all standard <xref uid=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonNode\"></xref> implementations. The main addition here is that we declare that sub-classes must implement <xref uid=\"com.fasterxml.jackson.databind.JsonSerializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSerializable\"></xref>. This simplifies object mapping aspects a bit, as no external serializers are needed.\n\nSince 2.10, all implements have been <xref uid=\"java.io.Serializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.Serializable\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.JsonSerializable.Base\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)"
- "com.fasterxml.jackson.databind.JsonNode.<T>_this()"
- "com.fasterxml.jackson.databind.JsonNode.<T>deepCopy()"
- "com.fasterxml.jackson.databind.JsonNode.<T>require()"
- "com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()"
- "com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode._at(com.fasterxml.jackson.core.JsonPointer)"
- "com.fasterxml.jackson.databind.JsonNode.asBoolean()"
- "com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)"
- "com.fasterxml.jackson.databind.JsonNode.asDouble()"
- "com.fasterxml.jackson.databind.JsonNode.asDouble(double)"
- "com.fasterxml.jackson.databind.JsonNode.asInt()"
- "com.fasterxml.jackson.databind.JsonNode.asInt(int)"
- "com.fasterxml.jackson.databind.JsonNode.asLong()"
- "com.fasterxml.jackson.databind.JsonNode.asLong(long)"
- "com.fasterxml.jackson.databind.JsonNode.asText()"
- "com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)"
- "com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()"
- "com.fasterxml.jackson.databind.JsonNode.binaryValue()"
- "com.fasterxml.jackson.databind.JsonNode.booleanValue()"
- "com.fasterxml.jackson.databind.JsonNode.canConvertToInt()"
- "com.fasterxml.jackson.databind.JsonNode.canConvertToLong()"
- "com.fasterxml.jackson.databind.JsonNode.decimalValue()"
- "com.fasterxml.jackson.databind.JsonNode.doubleValue()"
- "com.fasterxml.jackson.databind.JsonNode.elements()"
- "com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)"
- "com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)"
- "com.fasterxml.jackson.databind.JsonNode.fieldNames()"
- "com.fasterxml.jackson.databind.JsonNode.fields()"
- "com.fasterxml.jackson.databind.JsonNode.findParent(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)"
- "com.fasterxml.jackson.databind.JsonNode.findPath(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)"
- "com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)"
- "com.fasterxml.jackson.databind.JsonNode.floatValue()"
- "com.fasterxml.jackson.databind.JsonNode.get(int)"
- "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.getNodeType()"
- "com.fasterxml.jackson.databind.JsonNode.has(int)"
- "com.fasterxml.jackson.databind.JsonNode.has(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.hasNonNull(int)"
- "com.fasterxml.jackson.databind.JsonNode.hasNonNull(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.intValue()"
- "com.fasterxml.jackson.databind.JsonNode.isArray()"
- "com.fasterxml.jackson.databind.JsonNode.isBigDecimal()"
- "com.fasterxml.jackson.databind.JsonNode.isBigInteger()"
- "com.fasterxml.jackson.databind.JsonNode.isBinary()"
- "com.fasterxml.jackson.databind.JsonNode.isBoolean()"
- "com.fasterxml.jackson.databind.JsonNode.isContainerNode()"
- "com.fasterxml.jackson.databind.JsonNode.isDouble()"
- "com.fasterxml.jackson.databind.JsonNode.isEmpty()"
- "com.fasterxml.jackson.databind.JsonNode.isFloat()"
- "com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()"
- "com.fasterxml.jackson.databind.JsonNode.isInt()"
- "com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()"
- "com.fasterxml.jackson.databind.JsonNode.isLong()"
- "com.fasterxml.jackson.databind.JsonNode.isMissingNode()"
- "com.fasterxml.jackson.databind.JsonNode.isNull()"
- "com.fasterxml.jackson.databind.JsonNode.isNumber()"
- "com.fasterxml.jackson.databind.JsonNode.isObject()"
- "com.fasterxml.jackson.databind.JsonNode.isPojo()"
- "com.fasterxml.jackson.databind.JsonNode.isShort()"
- "com.fasterxml.jackson.databind.JsonNode.isTextual()"
- "com.fasterxml.jackson.databind.JsonNode.isValueNode()"
- "com.fasterxml.jackson.databind.JsonNode.iterator()"
- "com.fasterxml.jackson.databind.JsonNode.longValue()"
- "com.fasterxml.jackson.databind.JsonNode.numberValue()"
- "com.fasterxml.jackson.databind.JsonNode.path(int)"
- "com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.required(int)"
- "com.fasterxml.jackson.databind.JsonNode.required(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)"
- "com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonNode.shortValue()"
- "com.fasterxml.jackson.databind.JsonNode.size()"
- "com.fasterxml.jackson.databind.JsonNode.textValue()"
- "com.fasterxml.jackson.databind.JsonNode.toPrettyString()"
- "com.fasterxml.jackson.databind.JsonNode.toString()"
- "com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class BaseJsonNode extends JsonNode implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.node.BaseJsonNode.BaseJsonNode()"
methods:
- "com.fasterxml.jackson.databind.node.BaseJsonNode.asToken()"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.toString()"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()"
- "com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.node"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
