### YamlMime:JavaMember
uid: "com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner.checkNameAvailabilityAsync*"
fullName: "com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner.checkNameAvailabilityAsync"
name: "checkNameAvailabilityAsync"
nameWithType: "CommunicationsInner.checkNameAvailabilityAsync"
members:
- uid: "com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput)"
  fullName: "com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner.checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "CommunicationsInner.checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name. This API should to be used to check the uniqueness of the name for adding a new communication to the support ticket."
  parameters:
  - description: "Support ticket name"
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Input to check"
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput?alt=com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<CheckNameAvailabilityOutputInner> checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput)"
  returns:
    description: "the observable to the CheckNameAvailabilityOutputInner object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.implementation.CheckNameAvailabilityOutputInner?alt=com.microsoft.azure.management.support.v2020_04_01.implementation.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner.checkNameAvailabilityAsync(java.lang.String,com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.support.v2020_04_01.implementation.CheckNameAvailabilityOutputInner>)"
  fullName: "com.microsoft.azure.management.support.v2020_04_01.implementation.CommunicationsInner.checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput, ServiceCallback<CheckNameAvailabilityOutputInner> serviceCallback)"
  name: "checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput, ServiceCallback<CheckNameAvailabilityOutputInner> serviceCallback)"
  nameWithType: "CommunicationsInner.checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput, ServiceCallback<CheckNameAvailabilityOutputInner> serviceCallback)"
  summary: "Check the availability of a resource name. This API should to be used to check the uniqueness of the name for adding a new communication to the support ticket."
  parameters:
  - description: "Support ticket name"
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Input to check"
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput?alt=com.microsoft.azure.management.support.v2020_04_01.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.implementation.CheckNameAvailabilityOutputInner?alt=com.microsoft.azure.management.support.v2020_04_01.implementation.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ServiceFuture<CheckNameAvailabilityOutputInner> checkNameAvailabilityAsync(String supportTicketName, CheckNameAvailabilityInput checkNameAvailabilityInput, ServiceCallback<CheckNameAvailabilityOutputInner> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.support.v2020_04_01.implementation.CheckNameAvailabilityOutputInner?alt=com.microsoft.azure.management.support.v2020_04_01.implementation.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.support.v2020_04_01.implementation"
artifact: com.microsoft.azure.support.v2020_04_01:azure-mgmt-support:1.0.0-beta
