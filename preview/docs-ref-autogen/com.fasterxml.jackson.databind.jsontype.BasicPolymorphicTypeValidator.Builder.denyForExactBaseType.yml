### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.denyForExactBaseType*"
fullName: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.denyForExactBaseType"
name: "denyForExactBaseType"
nameWithType: "BasicPolymorphicTypeValidator.Builder.denyForExactBaseType"
members:
- uid: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.denyForExactBaseType(java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder.denyForExactBaseType(Class<?> baseTypeToDeny)"
  name: "denyForExactBaseType(Class<?> baseTypeToDeny)"
  nameWithType: "BasicPolymorphicTypeValidator.Builder.denyForExactBaseType(Class<?> baseTypeToDeny)"
  summary: "Method for appending matcher that will mark any polymorphic properties with exact specific class to be invalid. For example, call to\n\n```java\nbuilder.denyforExactBaseType(Object.class)\n```\n\nwould indicate that any polymorphic properties where declared base type is `java.lang.Object` would be deemed invalid, and attempt to deserialize values of such types should result in an exception."
  parameters:
  - name: "baseTypeToDeny"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public BasicPolymorphicTypeValidator.Builder denyForExactBaseType(Class<?> baseTypeToDeny)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder?alt=com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
