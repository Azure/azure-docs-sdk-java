### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.JsonProcessingException
  id: JsonProcessingException
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String)
  - com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  - com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  - com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)
  - com.fasterxml.jackson.core.JsonProcessingException._location
  - com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getMessage()
  - com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  - com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  - com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
  - com.fasterxml.jackson.core.JsonProcessingException.toString()
  langs:
  - java
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
  type: Class
  package: com.fasterxml.jackson.core
  summary: Intermediate base class for all problems encountered when processing (parsing, generating) JSON content that are not pure I/O problems. Regular <xref uid="java.io.IOException" data-throw-if-not-resolved="false">java.io.IOException</xref>s will be passed through as is. Sub-class of <xref uid="java.io.IOException" data-throw-if-not-resolved="false">java.io.IOException</xref> for convenience.
  syntax:
    content: public class JsonProcessingException extends IOException
  inheritance:
  - java.lang.Object
  - java.lang.Throwable
  - java.lang.Exception
  - java.io.IOException
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.lang.Throwable.addSuppressed(java.lang.Throwable)
  - java.lang.Throwable.fillInStackTrace()
  - java.lang.Throwable.getCause()
  - java.lang.Throwable.getLocalizedMessage()
  - java.lang.Throwable.getMessage()
  - java.lang.Throwable.getStackTrace()
  - java.lang.Throwable.getSuppressed()
  - java.lang.Throwable.initCause(java.lang.Throwable)
  - java.lang.Throwable.printStackTrace()
  - java.lang.Throwable.printStackTrace(java.io.PrintStream)
  - java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  - java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  - java.lang.Throwable.toString()
- uid: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String)
  id: JsonProcessingException(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: JsonProcessingException(String msg)
  nameWithType: JsonProcessingException.JsonProcessingException(String msg)
  fullName: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(String msg)
  overload: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonProcessingException(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  id: JsonProcessingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: JsonProcessingException(String msg, JsonLocation loc)
  nameWithType: JsonProcessingException.JsonProcessingException(String msg, JsonLocation loc)
  fullName: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(String msg, JsonLocation loc)
  overload: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonProcessingException(String msg, JsonLocation loc)
    parameters:
    - id: msg
      type: java.lang.String
    - id: loc
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  id: JsonProcessingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: JsonProcessingException(String msg, JsonLocation loc, Throwable rootCause)
  nameWithType: JsonProcessingException.JsonProcessingException(String msg, JsonLocation loc, Throwable rootCause)
  fullName: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(String msg, JsonLocation loc, Throwable rootCause)
  overload: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonProcessingException(String msg, JsonLocation loc, Throwable rootCause)
    parameters:
    - id: msg
      type: java.lang.String
    - id: loc
      type: com.fasterxml.jackson.core.JsonLocation
    - id: rootCause
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.String,java.lang.Throwable)
  id: JsonProcessingException(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: JsonProcessingException(String msg, Throwable rootCause)
  nameWithType: JsonProcessingException.JsonProcessingException(String msg, Throwable rootCause)
  fullName: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(String msg, Throwable rootCause)
  overload: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonProcessingException(String msg, Throwable rootCause)
    parameters:
    - id: msg
      type: java.lang.String
    - id: rootCause
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(java.lang.Throwable)
  id: JsonProcessingException(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: JsonProcessingException(Throwable rootCause)
  nameWithType: JsonProcessingException.JsonProcessingException(Throwable rootCause)
  fullName: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException(Throwable rootCause)
  overload: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonProcessingException(Throwable rootCause)
    parameters:
    - id: rootCause
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.core.JsonProcessingException._location
  id: _location
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: _location
  nameWithType: JsonProcessingException._location
  fullName: com.fasterxml.jackson.core.JsonProcessingException._location
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonLocation _location
    return:
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  id: clearLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: clearLocation()
  nameWithType: JsonProcessingException.clearLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  overload: com.fasterxml.jackson.core.JsonProcessingException.clearLocation*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that allows to remove context information from this exception's message. Useful when you are parsing security-sensitive data and don't want original data excerpts to be present in Jackson parser error messages.
  syntax:
    content: public void clearLocation()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  id: getLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: getLocation()
  nameWithType: JsonProcessingException.getLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  overload: com.fasterxml.jackson.core.JsonProcessingException.getLocation*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public JsonLocation getLocation()
    return:
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessage()
  id: getMessage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: getMessage()
  nameWithType: JsonProcessingException.getMessage()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessage()
  overload: com.fasterxml.jackson.core.JsonProcessingException.getMessage*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Default method overridden so that we can add location information
  syntax:
    content: public String getMessage()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  id: getMessageSuffix()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: getMessageSuffix()
  nameWithType: JsonProcessingException.getMessageSuffix()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  overload: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Accessor that sub-classes can override to append additional information right after the main message, but before source location information.
  syntax:
    content: protected String getMessageSuffix()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  id: getOriginalMessage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: getOriginalMessage()
  nameWithType: JsonProcessingException.getOriginalMessage()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  overload: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that allows accessing the original "message" argument, without additional decorations (like location information) that overridden <xref uid="com.fasterxml.jackson.core.JsonProcessingException.getMessage*" data-throw-if-not-resolved="false">#getMessage</xref> adds.
  syntax:
    content: public String getOriginalMessage()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
  id: getProcessor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: getProcessor()
  nameWithType: JsonProcessingException.getProcessor()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
  overload: com.fasterxml.jackson.core.JsonProcessingException.getProcessor*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that allows accessing underlying processor that triggered this exception; typically either <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> or <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> for exceptions that originate from streaming API. Note that it is possible that \`null\` may be returned if code throwing exception either has no access to processor; or has not been retrofitted to set it; this means that caller needs to take care to check for nulls. Subtypes override this method with co-variant return type, for more type-safe access.
  syntax:
    content: public Object getProcessor()
    return:
      type: java.lang.Object
      description: Originating processor, if available; null if not.
- uid: com.fasterxml.jackson.core.JsonProcessingException.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonProcessingException
  langs:
  - java
  name: toString()
  nameWithType: JsonProcessingException.toString()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.toString()
  overload: com.fasterxml.jackson.core.JsonProcessingException.toString*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.JsonLocation
  name: JsonLocation
  nameWithType: JsonLocation
  fullName: com.fasterxml.jackson.core.JsonLocation
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException*
  name: JsonProcessingException
  nameWithType: JsonProcessingException.JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException.JsonProcessingException
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonProcessingException.getLocation*
  name: getLocation
  nameWithType: JsonProcessingException.getLocation
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getLocation
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonProcessingException.clearLocation*
  name: clearLocation
  nameWithType: JsonProcessingException.clearLocation
  fullName: com.fasterxml.jackson.core.JsonProcessingException.clearLocation
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage*
  name: getOriginalMessage
  nameWithType: JsonProcessingException.getOriginalMessage
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage
  package: com.fasterxml.jackson.core
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.JsonProcessingException.getProcessor*
  name: getProcessor
  nameWithType: JsonProcessingException.getProcessor
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getProcessor
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix*
  name: getMessageSuffix
  nameWithType: JsonProcessingException.getMessageSuffix
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessage*
  name: getMessage
  nameWithType: JsonProcessingException.getMessage
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessage
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonProcessingException.toString*
  name: toString
  nameWithType: JsonProcessingException.toString
  fullName: com.fasterxml.jackson.core.JsonProcessingException.toString
  package: com.fasterxml.jackson.core
- uid: java.io.IOException
  name: IOException
  nameWithType: IOException
  fullName: java.io.IOException
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  name: Throwable.printStackTrace(PrintWriter)
  nameWithType: Throwable.printStackTrace(PrintWriter)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
- uid: java.lang.Throwable.getCause()
  name: Throwable.getCause()
  nameWithType: Throwable.getCause()
  fullName: java.lang.Throwable.getCause()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Throwable.addSuppressed(java.lang.Throwable)
  name: Throwable.addSuppressed(Throwable)
  nameWithType: Throwable.addSuppressed(Throwable)
  fullName: java.lang.Throwable.addSuppressed(java.lang.Throwable)
- uid: java.lang.Throwable.fillInStackTrace()
  name: Throwable.fillInStackTrace()
  nameWithType: Throwable.fillInStackTrace()
  fullName: java.lang.Throwable.fillInStackTrace()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Throwable.initCause(java.lang.Throwable)
  name: Throwable.initCause(Throwable)
  nameWithType: Throwable.initCause(Throwable)
  fullName: java.lang.Throwable.initCause(java.lang.Throwable)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  name: Throwable.setStackTrace(StackTraceElement[])
  nameWithType: Throwable.setStackTrace(StackTraceElement[])
  fullName: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: java.lang.Throwable.toString()
  name: Throwable.toString()
  nameWithType: Throwable.toString()
  fullName: java.lang.Throwable.toString()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintStream)
  name: Throwable.printStackTrace(PrintStream)
  nameWithType: Throwable.printStackTrace(PrintStream)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintStream)
- uid: java.lang.Throwable.getMessage()
  name: Throwable.getMessage()
  nameWithType: Throwable.getMessage()
  fullName: java.lang.Throwable.getMessage()
- uid: java.lang.Throwable.getSuppressed()
  name: Throwable.getSuppressed()
  nameWithType: Throwable.getSuppressed()
  fullName: java.lang.Throwable.getSuppressed()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Throwable.getStackTrace()
  name: Throwable.getStackTrace()
  nameWithType: Throwable.getStackTrace()
  fullName: java.lang.Throwable.getStackTrace()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Throwable.getLocalizedMessage()
  name: Throwable.getLocalizedMessage()
  nameWithType: Throwable.getLocalizedMessage()
  fullName: java.lang.Throwable.getLocalizedMessage()
- uid: java.lang.Throwable.printStackTrace()
  name: Throwable.printStackTrace()
  nameWithType: Throwable.printStackTrace()
  fullName: java.lang.Throwable.printStackTrace()
