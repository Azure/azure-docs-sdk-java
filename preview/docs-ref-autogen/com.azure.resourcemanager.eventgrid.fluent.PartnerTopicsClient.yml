### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient"
fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient"
name: "PartnerTopicsClient"
nameWithType: "PartnerTopicsClient"
summary: "An instance of this class provides access to all the operations defined in Partner<wbr>Topics<wbr>Client."
syntax: "public interface PartnerTopicsClient"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.activate(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.activate(String resourceGroupName, String partnerTopicName)"
  name: "activate(String resourceGroupName, String partnerTopicName)"
  nameWithType: "PartnerTopicsClient.activate(String resourceGroupName, String partnerTopicName)"
  summary: "Activate a newly created partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerTopicInner activate(String resourceGroupName, String partnerTopicName)"
  desc: "Activate a newly created partner topic."
  returns:
    description: "event Grid Partner Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.activateWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.activateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  name: "activateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  nameWithType: "PartnerTopicsClient.activateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  summary: "Activate a newly created partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopicInner> activateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  desc: "Activate a newly created partner topic."
  returns:
    description: "event Grid Partner Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.beginDelete(String resourceGroupName, String partnerTopicName)"
  name: "beginDelete(String resourceGroupName, String partnerTopicName)"
  nameWithType: "PartnerTopicsClient.beginDelete(String resourceGroupName, String partnerTopicName)"
  summary: "Delete existing partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String partnerTopicName)"
  desc: "Delete existing partner topic."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.beginDelete(String resourceGroupName, String partnerTopicName, Context context)"
  name: "beginDelete(String resourceGroupName, String partnerTopicName, Context context)"
  nameWithType: "PartnerTopicsClient.beginDelete(String resourceGroupName, String partnerTopicName, Context context)"
  summary: "Delete existing partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String partnerTopicName, Context context)"
  desc: "Delete existing partner topic."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.createOrUpdate(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo)"
  name: "createOrUpdate(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo)"
  nameWithType: "PartnerTopicsClient.createOrUpdate(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo)"
  summary: "Asynchronously creates a new partner topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Partner Topic information."
    name: "partnerTopicInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerTopicInner createOrUpdate(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo)"
  desc: "Asynchronously creates a new partner topic with the specified parameters."
  returns:
    description: "event Grid Partner Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.createOrUpdateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo, Context context)"
  nameWithType: "PartnerTopicsClient.createOrUpdateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo, Context context)"
  summary: "Asynchronously creates a new partner topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Partner Topic information."
    name: "partnerTopicInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopicInner> createOrUpdateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicInner partnerTopicInfo, Context context)"
  desc: "Asynchronously creates a new partner topic with the specified parameters."
  returns:
    description: "event Grid Partner Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.deactivate(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.deactivate(String resourceGroupName, String partnerTopicName)"
  name: "deactivate(String resourceGroupName, String partnerTopicName)"
  nameWithType: "PartnerTopicsClient.deactivate(String resourceGroupName, String partnerTopicName)"
  summary: "Deactivate specific partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerTopicInner deactivate(String resourceGroupName, String partnerTopicName)"
  desc: "Deactivate specific partner topic."
  returns:
    description: "event Grid Partner Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.deactivateWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.deactivateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  name: "deactivateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  nameWithType: "PartnerTopicsClient.deactivateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  summary: "Deactivate specific partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopicInner> deactivateWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  desc: "Deactivate specific partner topic."
  returns:
    description: "event Grid Partner Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.delete(String resourceGroupName, String partnerTopicName)"
  name: "delete(String resourceGroupName, String partnerTopicName)"
  nameWithType: "PartnerTopicsClient.delete(String resourceGroupName, String partnerTopicName)"
  summary: "Delete existing partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String partnerTopicName)"
  desc: "Delete existing partner topic."
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.delete(String resourceGroupName, String partnerTopicName, Context context)"
  name: "delete(String resourceGroupName, String partnerTopicName, Context context)"
  nameWithType: "PartnerTopicsClient.delete(String resourceGroupName, String partnerTopicName, Context context)"
  summary: "Delete existing partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String partnerTopicName, Context context)"
  desc: "Delete existing partner topic."
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.getByResourceGroup(String resourceGroupName, String partnerTopicName)"
  name: "getByResourceGroup(String resourceGroupName, String partnerTopicName)"
  nameWithType: "PartnerTopicsClient.getByResourceGroup(String resourceGroupName, String partnerTopicName)"
  summary: "Get properties of a partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerTopicInner getByResourceGroup(String resourceGroupName, String partnerTopicName)"
  desc: "Get properties of a partner topic."
  returns:
    description: "properties of a partner topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.getByResourceGroupWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  nameWithType: "PartnerTopicsClient.getByResourceGroupWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  summary: "Get properties of a partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopicInner> getByResourceGroupWithResponse(String resourceGroupName, String partnerTopicName, Context context)"
  desc: "Get properties of a partner topic."
  returns:
    description: "properties of a partner topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.list()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.list()"
  name: "list()"
  nameWithType: "PartnerTopicsClient.list()"
  summary: "List all the partner topics under an Azure subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PartnerTopicInner> list()"
  desc: "List all the partner topics under an Azure subscription."
  returns:
    description: "result of the List Partner Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.list(String filter, Integer top, Context context)"
  name: "list(String filter, Integer top, Context context)"
  nameWithType: "PartnerTopicsClient.list(String filter, Integer top, Context context)"
  summary: "List all the partner topics under an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PartnerTopicInner> list(String filter, Integer top, Context context)"
  desc: "List all the partner topics under an Azure subscription."
  returns:
    description: "result of the List Partner Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "PartnerTopicsClient.listByResourceGroup(String resourceGroupName)"
  summary: "List all the partner topics under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PartnerTopicInner> listByResourceGroup(String resourceGroupName)"
  desc: "List all the partner topics under a resource group."
  returns:
    description: "result of the List Partner Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  nameWithType: "PartnerTopicsClient.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  summary: "List all the partner topics under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PartnerTopicInner> listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  desc: "List all the partner topics under a resource group."
  returns:
    description: "result of the List Partner Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.PartnerTopicUpdateParameters)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.update(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters)"
  name: "update(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters)"
  nameWithType: "PartnerTopicsClient.update(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters)"
  summary: "Asynchronously updates a partner topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "PartnerTopic update information."
    name: "partnerTopicUpdateParameters"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicUpdateParameters?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicUpdateParameters&text=PartnerTopicUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerTopicInner update(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters)"
  desc: "Asynchronously updates a partner topic with the specified parameters."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.PartnerTopicUpdateParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.PartnerTopicsClient.updateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters, Context context)"
  name: "updateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters, Context context)"
  nameWithType: "PartnerTopicsClient.updateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters, Context context)"
  summary: "Asynchronously updates a partner topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "PartnerTopic update information."
    name: "partnerTopicUpdateParameters"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicUpdateParameters?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicUpdateParameters&text=PartnerTopicUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerTopicInner> updateWithResponse(String resourceGroupName, String partnerTopicName, PartnerTopicUpdateParameters partnerTopicUpdateParameters, Context context)"
  desc: "Asynchronously updates a partner topic with the specified parameters."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerTopicInner&text=PartnerTopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in PartnerTopicsClient."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
