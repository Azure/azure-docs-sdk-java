### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  id: MapLikeType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type
  children:
  - com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
  - com.fasterxml.jackson.databind.type.MapLikeType._keyType
  - com.fasterxml.jackson.databind.type.MapLikeType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.MapLikeType._valueType
  - com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName()
  - com.fasterxml.jackson.databind.type.MapLikeType.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.MapLikeType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.type.MapLikeType.getContentType()
  - com.fasterxml.jackson.databind.type.MapLikeType.getContentTypeHandler()
  - com.fasterxml.jackson.databind.type.MapLikeType.getContentValueHandler()
  - com.fasterxml.jackson.databind.type.MapLikeType.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.MapLikeType.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.MapLikeType.getKeyType()
  - com.fasterxml.jackson.databind.type.MapLikeType.hasHandlers()
  - com.fasterxml.jackson.databind.type.MapLikeType.isContainerType()
  - com.fasterxml.jackson.databind.type.MapLikeType.isMapLikeType()
  - com.fasterxml.jackson.databind.type.MapLikeType.isTrueMapType()
  - com.fasterxml.jackson.databind.type.MapLikeType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.type.MapLikeType.toString()
  - com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.MapLikeType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.MapLikeType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.MapLikeType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.MapLikeType.withKeyType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.MapLikeType.withKeyTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.MapLikeType.withKeyValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.MapLikeType.withStaticTyping()
  - com.fasterxml.jackson.databind.type.MapLikeType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.MapLikeType.withValueHandler(java.lang.Object)
  langs:
  - java
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
  type: Class
  package: com.fasterxml.jackson.databind.type
  summary: Type that represents Map-like types; things that consist of key/value pairs but that do not necessarily implement <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>, but that do not have enough introspection functionality to allow for some level of generic handling. This specifically allows framework to check for configuration and annotation settings used for Map types, and pass these to custom handlers that may be more familiar with actual type.
  syntax:
    content: public class MapLikeType extends TypeBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.type.ResolvedType
  - com.fasterxml.jackson.databind.JavaType
  - com.fasterxml.jackson.databind.type.TypeBase
  inheritedMembers:
  - com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  - com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  - com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  - com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.getContentType()
  - com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  - com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  - com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  - com.fasterxml.jackson.databind.JavaType.getKeyType()
  - com.fasterxml.jackson.databind.JavaType.getParameterSource()
  - com.fasterxml.jackson.databind.JavaType.getRawClass()
  - com.fasterxml.jackson.databind.JavaType.getReferencedType()
  - com.fasterxml.jackson.databind.JavaType.hasContentType()
  - com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  - com.fasterxml.jackson.databind.JavaType.hasHandlers()
  - com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  - com.fasterxml.jackson.databind.JavaType.hashCode()
  - com.fasterxml.jackson.databind.JavaType.isAbstract()
  - com.fasterxml.jackson.databind.JavaType.isArrayType()
  - com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  - com.fasterxml.jackson.databind.JavaType.isConcrete()
  - com.fasterxml.jackson.databind.JavaType.isContainerType()
  - com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  - com.fasterxml.jackson.databind.JavaType.isEnumType()
  - com.fasterxml.jackson.databind.JavaType.isFinal()
  - com.fasterxml.jackson.databind.JavaType.isInterface()
  - com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  - com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  - com.fasterxml.jackson.databind.JavaType.isPrimitive()
  - com.fasterxml.jackson.databind.JavaType.isThrowable()
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.JavaType.toString()
  - com.fasterxml.jackson.databind.JavaType.useStaticType()
  - com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  - com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  - com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
  - com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  - com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  - com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  - com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  - com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: MapLikeType(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: MapLikeType(TypeBase base, JavaType keyT, JavaType valueT)
  nameWithType: MapLikeType.MapLikeType(TypeBase base, JavaType keyT, JavaType valueT)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType(TypeBase base, JavaType keyT, JavaType valueT)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected MapLikeType(TypeBase base, JavaType keyT, JavaType valueT)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.type.TypeBase
    - id: keyT
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueT
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
  id: MapLikeType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: MapLikeType(Class<?> mapType, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType keyT, JavaType valueT, Object valueHandler, Object typeHandler, boolean asStatic)
  nameWithType: MapLikeType.MapLikeType(Class<?> mapType, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType keyT, JavaType valueT, Object valueHandler, Object typeHandler, boolean asStatic)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType(Class<?> mapType, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType keyT, JavaType valueT, Object valueHandler, Object typeHandler, boolean asStatic)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected MapLikeType(Class<?> mapType, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType keyT, JavaType valueT, Object valueHandler, Object typeHandler, boolean asStatic)
    parameters:
    - id: mapType
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInts
      type: com.fasterxml.jackson.databind.JavaType[]
    - id: keyT
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueT
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueHandler
      type: java.lang.Object
    - id: typeHandler
      type: java.lang.Object
    - id: asStatic
      type: boolean
- uid: com.fasterxml.jackson.databind.type.MapLikeType._keyType
  id: _keyType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: _keyType
  nameWithType: MapLikeType._keyType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType._keyType
  type: Field
  package: com.fasterxml.jackson.databind.type
  summary: Type of keys of Map.
  syntax:
    content: protected final JavaType _keyType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType._narrow(java.lang.Class<?>)
  id: _narrow(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: _narrow(Class<?> subclass)
  nameWithType: MapLikeType._narrow(Class<?> subclass)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType._narrow(Class<?> subclass)
  overload: com.fasterxml.jackson.databind.type.MapLikeType._narrow*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected JavaType _narrow(Class<?> subclass)
    parameters:
    - id: subclass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType._valueType
  id: _valueType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: _valueType
  nameWithType: MapLikeType._valueType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType._valueType
  type: Field
  package: com.fasterxml.jackson.databind.type
  summary: Type of values of Map.
  syntax:
    content: protected final JavaType _valueType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName()
  id: buildCanonicalName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: buildCanonicalName()
  nameWithType: MapLikeType.buildCanonicalName()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected String buildCanonicalName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.MapLikeType.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: construct(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: construct(Class<?> rawType, JavaType keyT, JavaType valueT)
  nameWithType: MapLikeType.construct(Class<?> rawType, JavaType keyT, JavaType valueT)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.construct(Class<?> rawType, JavaType keyT, JavaType valueT)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.construct*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public static MapLikeType construct(Class<?> rawType, JavaType keyT, JavaType valueT)
    parameters:
    - id: rawType
      type: java.lang.Class<?>
    - id: keyT
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueT
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: equals(Object o)
  nameWithType: MapLikeType.equals(Object o)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.equals(Object o)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.equals*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getContentType()
  id: getContentType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: getContentType()
  nameWithType: MapLikeType.getContentType()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getContentType()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.getContentType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: 'Method for accessing content type of this type, if type has such a thing: simple types do not, structured types do (like arrays, Collections and Maps)'
  syntax:
    content: public JavaType getContentType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getContentTypeHandler()
  id: getContentTypeHandler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: getContentTypeHandler()
  nameWithType: MapLikeType.getContentTypeHandler()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getContentTypeHandler()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.getContentTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public Object getContentTypeHandler()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getContentValueHandler()
  id: getContentValueHandler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: getContentValueHandler()
  nameWithType: MapLikeType.getContentValueHandler()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getContentValueHandler()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.getContentValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public Object getContentValueHandler()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getErasedSignature(java.lang.StringBuilder)
  id: getErasedSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: getErasedSignature(StringBuilder sb)
  nameWithType: MapLikeType.getErasedSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getErasedSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.getErasedSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing signature without generic type information, in form compatible with all versions of JVM, and specifically used for type descriptions when generating byte code.
  syntax:
    content: public StringBuilder getErasedSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getGenericSignature(java.lang.StringBuilder)
  id: getGenericSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: getGenericSignature(StringBuilder sb)
  nameWithType: MapLikeType.getGenericSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getGenericSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.getGenericSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public StringBuilder getGenericSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getKeyType()
  id: getKeyType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: getKeyType()
  nameWithType: MapLikeType.getKeyType()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getKeyType()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.getKeyType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing key type for this type, assuming type has such a concept (only Map types do)
  syntax:
    content: public JavaType getKeyType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.hasHandlers()
  id: hasHandlers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: hasHandlers()
  nameWithType: MapLikeType.hasHandlers()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.hasHandlers()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.hasHandlers*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Helper method that checks whether this type, or its (optional) key or content type has <xref uid="com.fasterxml.jackson.databind.type.MapLikeType.getValueHandler" data-throw-if-not-resolved="false">#getValueHandler</xref> or <xref uid="com.fasterxml.jackson.databind.type.MapLikeType.getTypeHandler*" data-throw-if-not-resolved="false">#getTypeHandler()</xref>; that is, are there any non-standard handlers associated with this type object.
  syntax:
    content: public boolean hasHandlers()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.MapLikeType.isContainerType()
  id: isContainerType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: isContainerType()
  nameWithType: MapLikeType.isContainerType()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.isContainerType()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.isContainerType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean isContainerType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.MapLikeType.isMapLikeType()
  id: isMapLikeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: isMapLikeType()
  nameWithType: MapLikeType.isMapLikeType()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.isMapLikeType()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.isMapLikeType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean isMapLikeType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.MapLikeType.isTrueMapType()
  id: isTrueMapType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: isTrueMapType()
  nameWithType: MapLikeType.isTrueMapType()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.isTrueMapType()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.isTrueMapType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method that can be used for checking whether this type is a "real" Collection type; meaning whether it represents a parameterized subtype of <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> or just something that acts like one.
  syntax:
    content: public boolean isTrueMapType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.MapLikeType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  id: refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  nameWithType: MapLikeType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.refine*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will try to create and return a sub-type instance for known parameterized types; for other types will return \`null\` to indicate that no just refinement makes necessary sense, without trying to detect special status through implemented interfaces.
  syntax:
    content: public JavaType refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
    parameters:
    - id: rawType
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInterfaces
      type: com.fasterxml.jackson.databind.JavaType[]
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: toString()
  nameWithType: MapLikeType.toString()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.toString()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.toString*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)
  nameWithType: MapLikeType.upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Factory method that can be used to "upgrade" a basic type into collection-like one; usually done via <xref uid="com.fasterxml.jackson.databind.type.TypeModifier" data-throw-if-not-resolved="false">TypeModifier</xref>
  syntax:
    content: public static MapLikeType upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: keyT
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueT
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withContentType(com.fasterxml.jackson.databind.JavaType)
  id: withContentType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withContentType(JavaType contentType)
  nameWithType: MapLikeType.withContentType(JavaType contentType)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withContentType(JavaType contentType)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withContentType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that may be called on structured types that have a so-called content type (element of arrays, value type of Maps, referenced type of referential types), and will construct a new instance that is identical to this instance, except that it has specified content type, instead of current one. If content type is already set to given type, `this` is returned. If type does not have a content type (which is the case with `SimpleType`), <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> will be thrown.
  syntax:
    content: public JavaType withContentType(JavaType contentType)
    parameters:
    - id: contentType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withContentTypeHandler(java.lang.Object)
  id: withContentTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withContentTypeHandler(Object h)
  nameWithType: MapLikeType.withContentTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withContentTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withContentTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content type (element type for arrays, value type for Maps and so forth) handler assigned.
  syntax:
    content: public MapLikeType withContentTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withContentValueHandler(java.lang.Object)
  id: withContentValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withContentValueHandler(Object h)
  nameWithType: MapLikeType.withContentValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withContentValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withContentValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content value handler assigned.
  syntax:
    content: public MapLikeType withContentValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  id: withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withHandlersFrom(JavaType src)
  nameWithType: MapLikeType.withHandlersFrom(JavaType src)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom(JavaType src)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will try to copy handlers that the specified source type instance had, if any; this must be done recursively where necessary (as content types may be structured).
  syntax:
    content: public JavaType withHandlersFrom(JavaType src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withKeyType(com.fasterxml.jackson.databind.JavaType)
  id: withKeyType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withKeyType(JavaType keyType)
  nameWithType: MapLikeType.withKeyType(JavaType keyType)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withKeyType(JavaType keyType)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withKeyType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public MapLikeType withKeyType(JavaType keyType)
    parameters:
    - id: keyType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withKeyTypeHandler(java.lang.Object)
  id: withKeyTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withKeyTypeHandler(Object h)
  nameWithType: MapLikeType.withKeyTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withKeyTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withKeyTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public MapLikeType withKeyTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withKeyValueHandler(java.lang.Object)
  id: withKeyValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withKeyValueHandler(Object h)
  nameWithType: MapLikeType.withKeyValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withKeyValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withKeyValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public MapLikeType withKeyValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withStaticTyping()
  id: withStaticTyping()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withStaticTyping()
  nameWithType: MapLikeType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withStaticTyping()
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withStaticTyping*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: 'Method that can be called to get a type instance that indicates that values of the type should be handled using "static typing" for purposes of serialization (as opposed to "dynamic" aka runtime typing): meaning that no runtime information is needed for determining serializers to use. The main use case is to allow forcing of specific root value serialization type, and specifically in resolving serializers for contained types (element types for arrays, Collections and Maps).'
  syntax:
    content: public MapLikeType withStaticTyping()
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withTypeHandler(java.lang.Object)
  id: withTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withTypeHandler(Object h)
  nameWithType: MapLikeType.withTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: "\"Copy method\" that will construct a new instance that is identical to this instance, except that it will have specified type handler assigned."
  syntax:
    content: public MapLikeType withTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withValueHandler(java.lang.Object)
  id: withValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.MapLikeType
  langs:
  - java
  name: withValueHandler(Object h)
  nameWithType: MapLikeType.withValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.MapLikeType.withValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified value handler assigned.
  syntax:
    content: public MapLikeType withValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.MapLikeType
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.TypeBindings
  name: TypeBindings
  nameWithType: TypeBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType*
  name: MapLikeType
  nameWithType: MapLikeType.MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.MapLikeType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase
  name: TypeBase
  nameWithType: TypeBase
  fullName: com.fasterxml.jackson.databind.type.TypeBase
- uid: com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom*
  name: upgradeFrom
  nameWithType: MapLikeType.upgradeFrom
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.construct*
  name: construct
  nameWithType: MapLikeType.construct
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.construct
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType._narrow*
  name: _narrow
  nameWithType: MapLikeType._narrow
  fullName: com.fasterxml.jackson.databind.type.MapLikeType._narrow
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withKeyType*
  name: withKeyType
  nameWithType: MapLikeType.withKeyType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withKeyType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withContentType*
  name: withContentType
  nameWithType: MapLikeType.withContentType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withContentType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withTypeHandler*
  name: withTypeHandler
  nameWithType: MapLikeType.withTypeHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withContentTypeHandler*
  name: withContentTypeHandler
  nameWithType: MapLikeType.withContentTypeHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withContentTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withValueHandler*
  name: withValueHandler
  nameWithType: MapLikeType.withValueHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withContentValueHandler*
  name: withContentValueHandler
  nameWithType: MapLikeType.withContentValueHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withContentValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom*
  name: withHandlersFrom
  nameWithType: MapLikeType.withHandlersFrom
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withStaticTyping*
  name: withStaticTyping
  nameWithType: MapLikeType.withStaticTyping
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withStaticTyping
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.refine*
  name: refine
  nameWithType: MapLikeType.refine
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.refine
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName*
  name: buildCanonicalName
  nameWithType: MapLikeType.buildCanonicalName
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.isContainerType*
  name: isContainerType
  nameWithType: MapLikeType.isContainerType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.isContainerType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.isMapLikeType*
  name: isMapLikeType
  nameWithType: MapLikeType.isMapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.isMapLikeType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getKeyType*
  name: getKeyType
  nameWithType: MapLikeType.getKeyType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getKeyType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getContentType*
  name: getContentType
  nameWithType: MapLikeType.getContentType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getContentType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getContentValueHandler*
  name: getContentValueHandler
  nameWithType: MapLikeType.getContentValueHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getContentValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getContentTypeHandler*
  name: getContentTypeHandler
  nameWithType: MapLikeType.getContentTypeHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getContentTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.hasHandlers*
  name: hasHandlers
  nameWithType: MapLikeType.hasHandlers
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.hasHandlers
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getErasedSignature*
  name: getErasedSignature
  nameWithType: MapLikeType.getErasedSignature
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getErasedSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.getGenericSignature*
  name: getGenericSignature
  nameWithType: MapLikeType.getGenericSignature
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.getGenericSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withKeyTypeHandler*
  name: withKeyTypeHandler
  nameWithType: MapLikeType.withKeyTypeHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withKeyTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.withKeyValueHandler*
  name: withKeyValueHandler
  nameWithType: MapLikeType.withKeyValueHandler
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.withKeyValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.isTrueMapType*
  name: isTrueMapType
  nameWithType: MapLikeType.isTrueMapType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.isTrueMapType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.toString*
  name: toString
  nameWithType: MapLikeType.toString
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.toString
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.MapLikeType.equals*
  name: equals
  nameWithType: MapLikeType.equals
  fullName: com.fasterxml.jackson.databind.type.MapLikeType.equals
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  name: JavaType.isJavaLangObject()
  nameWithType: JavaType.isJavaLangObject()
  fullName: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
- uid: com.fasterxml.jackson.databind.JavaType.getRawClass()
  name: JavaType.getRawClass()
  nameWithType: JavaType.getRawClass()
  fullName: com.fasterxml.jackson.databind.JavaType.getRawClass()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  name: JavaType.isCollectionLikeType()
  nameWithType: JavaType.isCollectionLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
  name: TypeBase.getGenericSignature(StringBuilder)
  nameWithType: TypeBase.getGenericSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getGenericSignature(java.lang.StringBuilder)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JavaType.getKeyType()
  name: JavaType.getKeyType()
  nameWithType: JavaType.getKeyType()
  fullName: com.fasterxml.jackson.databind.JavaType.getKeyType()
- uid: com.fasterxml.jackson.databind.JavaType.isFinal()
  name: JavaType.isFinal()
  nameWithType: JavaType.isFinal()
  fullName: com.fasterxml.jackson.databind.JavaType.isFinal()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  name: TypeBase.containedTypeCount()
  nameWithType: TypeBase.containedTypeCount()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  name: TypeBase.findSuperType(Class<?>)
  nameWithType: TypeBase.findSuperType(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isEnumType()
  name: JavaType.isEnumType()
  nameWithType: JavaType.isEnumType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  name: JavaType.getContentTypeHandler()
  nameWithType: JavaType.getContentTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
- uid: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: TypeBase.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: TypeBase.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  name: JavaType.withContentType(JavaType)
  nameWithType: JavaType.withContentType(JavaType)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  name: TypeBase.containedTypeName(int)
  nameWithType: TypeBase.containedTypeName(int)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
- uid: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
  name: TypeBase.buildCanonicalName()
  nameWithType: TypeBase.buildCanonicalName()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.buildCanonicalName()
- uid: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  name: JavaType.<T>getValueHandler()
  nameWithType: JavaType.<T>getValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  name: TypeBase._bogusSuperClass(Class<?>)
  nameWithType: TypeBase._bogusSuperClass(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isInterface()
  name: JavaType.isInterface()
  nameWithType: JavaType.isInterface()
  fullName: com.fasterxml.jackson.databind.JavaType.isInterface()
- uid: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  name: JavaType.<T>getTypeHandler()
  nameWithType: JavaType.<T>getTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  name: JavaType.getGenericSignature()
  nameWithType: JavaType.getGenericSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  name: TypeBase.getBindings()
  nameWithType: TypeBase.getBindings()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
- uid: com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  name: JavaType.withTypeHandler(Object)
  nameWithType: JavaType.withTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  name: JavaType._narrow(Class<?>)
  nameWithType: JavaType._narrow(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isConcrete()
  name: JavaType.isConcrete()
  nameWithType: JavaType.isConcrete()
  fullName: com.fasterxml.jackson.databind.JavaType.isConcrete()
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  name: JavaType.forcedNarrowBy(Class<?>)
  nameWithType: JavaType.forcedNarrowBy(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isPrimitive()
  name: JavaType.isPrimitive()
  nameWithType: JavaType.isPrimitive()
  fullName: com.fasterxml.jackson.databind.JavaType.isPrimitive()
- uid: com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  name: JavaType.equals(Object)
  nameWithType: JavaType.equals(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.getContentType()
  name: JavaType.getContentType()
  nameWithType: JavaType.getContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentType()
- uid: com.fasterxml.jackson.databind.JavaType.getReferencedType()
  name: JavaType.getReferencedType()
  nameWithType: JavaType.getReferencedType()
  fullName: com.fasterxml.jackson.databind.JavaType.getReferencedType()
- uid: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  name: JavaType.withHandlersFrom(JavaType)
  nameWithType: JavaType.withHandlersFrom(JavaType)
  fullName: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  name: JavaType.containedTypeOrUnknown(int)
  nameWithType: JavaType.containedTypeOrUnknown(int)
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
- uid: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  name: JavaType.hasGenericTypes()
  nameWithType: JavaType.hasGenericTypes()
  fullName: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
- uid: com.fasterxml.jackson.databind.JavaType.useStaticType()
  name: JavaType.useStaticType()
  nameWithType: JavaType.useStaticType()
  fullName: com.fasterxml.jackson.databind.JavaType.useStaticType()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  name: TypeBase.containedType(int)
  nameWithType: TypeBase.containedType(int)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
- uid: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  name: ResolvedType.isReferenceType()
  nameWithType: ResolvedType.isReferenceType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
- uid: com.fasterxml.jackson.databind.JavaType.hashCode()
  name: JavaType.hashCode()
  nameWithType: JavaType.hashCode()
  fullName: com.fasterxml.jackson.databind.JavaType.hashCode()
- uid: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  name: JavaType.withStaticTyping()
  nameWithType: JavaType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
  name: TypeBase.getErasedSignature(StringBuilder)
  nameWithType: TypeBase.getErasedSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getErasedSignature(java.lang.StringBuilder)
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  name: JavaType.getErasedSignature()
  nameWithType: JavaType.getErasedSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  name: TypeBase.getInterfaces()
  nameWithType: TypeBase.getInterfaces()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
- uid: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: JavaType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  nameWithType: JavaType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  fullName: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.JavaType.hasContentType()
  name: JavaType.hasContentType()
  nameWithType: JavaType.hasContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.hasContentType()
- uid: com.fasterxml.jackson.databind.JavaType.isArrayType()
  name: JavaType.isArrayType()
  nameWithType: JavaType.isArrayType()
  fullName: com.fasterxml.jackson.databind.JavaType.isArrayType()
- uid: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  name: JavaType.withContentTypeHandler(Object)
  nameWithType: JavaType.withContentTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSubTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSubTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.hasHandlers()
  name: JavaType.hasHandlers()
  nameWithType: JavaType.hasHandlers()
  fullName: com.fasterxml.jackson.databind.JavaType.hasHandlers()
- uid: com.fasterxml.jackson.databind.JavaType.toString()
  name: JavaType.toString()
  nameWithType: JavaType.toString()
  fullName: com.fasterxml.jackson.databind.JavaType.toString()
- uid: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  name: JavaType.getContentValueHandler()
  nameWithType: JavaType.getContentValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.getParameterSource()
  name: JavaType.getParameterSource()
  nameWithType: JavaType.getParameterSource()
  fullName: com.fasterxml.jackson.databind.JavaType.getParameterSource()
- uid: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  name: JavaType.isMapLikeType()
  nameWithType: JavaType.isMapLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
- uid: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  name: JavaType.hasValueHandler()
  nameWithType: JavaType.hasValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  name: JavaType.withValueHandler(Object)
  nameWithType: JavaType.withValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.isContainerType()
  name: JavaType.isContainerType()
  nameWithType: JavaType.isContainerType()
  fullName: com.fasterxml.jackson.databind.JavaType.isContainerType()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  name: TypeBase.getSuperClass()
  nameWithType: TypeBase.getSuperClass()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
- uid: com.fasterxml.jackson.databind.JavaType.isAbstract()
  name: JavaType.isAbstract()
  nameWithType: JavaType.isAbstract()
  fullName: com.fasterxml.jackson.databind.JavaType.isAbstract()
- uid: com.fasterxml.jackson.databind.JavaType.isThrowable()
  name: JavaType.isThrowable()
  nameWithType: JavaType.isThrowable()
  fullName: com.fasterxml.jackson.databind.JavaType.isThrowable()
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  name: JavaType.hasRawClass(Class<?>)
  nameWithType: JavaType.hasRawClass(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  name: TypeBase.toCanonical()
  nameWithType: TypeBase.toCanonical()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSuperTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  name: TypeBase._classSignature(Class<?>,StringBuilder,boolean)
  nameWithType: TypeBase._classSignature(Class<?>,StringBuilder,boolean)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
- uid: com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: TypeBase.serialize(JsonGenerator,SerializerProvider)
  nameWithType: TypeBase.serialize(JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  name: JavaType.isEnumImplType()
  nameWithType: JavaType.isEnumImplType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
- uid: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  name: JavaType.withContentValueHandler(Object)
  nameWithType: JavaType.withContentValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  name: TypeBase.findTypeParameters(Class<?>)
  nameWithType: TypeBase.findTypeParameters(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class
  name: TypeBase.findSuperType(Class
  nameWithType: TypeBase.findSuperType(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class
- uid: T>getValueHandler()
  name: T>getValueHandler()
  nameWithType: T>getValueHandler()
  fullName: T>getValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.
  name: JavaType.
  nameWithType: JavaType.
  fullName: com.fasterxml.jackson.databind.JavaType.
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class
  name: TypeBase._bogusSuperClass(Class
  nameWithType: TypeBase._bogusSuperClass(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class
- uid: T>getTypeHandler()
  name: T>getTypeHandler()
  nameWithType: T>getTypeHandler()
  fullName: T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class
  name: JavaType._narrow(Class
  nameWithType: JavaType._narrow(Class
  fullName: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
  name: JavaType.forcedNarrowBy(Class
  nameWithType: JavaType.forcedNarrowBy(Class
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class
  name: JavaType.refine(Class
  nameWithType: JavaType.refine(Class
  fullName: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: ?>,TypeBindings,JavaType,JavaType[])
  nameWithType: ?>,TypeBindings,JavaType,JavaType[])
  fullName: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
  name: JavaType.isTypeOrSubTypeOf(Class
  nameWithType: JavaType.isTypeOrSubTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
  name: JavaType.hasRawClass(Class
  nameWithType: JavaType.hasRawClass(Class
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
  name: JavaType.isTypeOrSuperTypeOf(Class
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
- uid: ?>,java.lang.StringBuilder,boolean)
  name: ?>,StringBuilder,boolean)
  nameWithType: ?>,StringBuilder,boolean)
  fullName: ?>,java.lang.StringBuilder,boolean)
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class
  name: TypeBase._classSignature(Class
  nameWithType: TypeBase._classSignature(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class
  name: TypeBase.findTypeParameters(Class
  nameWithType: TypeBase.findTypeParameters(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class
