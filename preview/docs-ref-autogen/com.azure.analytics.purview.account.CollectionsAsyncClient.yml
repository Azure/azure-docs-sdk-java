### YamlMime:JavaType
uid: "com.azure.analytics.purview.account.CollectionsAsyncClient"
fullName: "com.azure.analytics.purview.account.CollectionsAsyncClient"
name: "CollectionsAsyncClient"
nameWithType: "CollectionsAsyncClient"
summary: "Initializes a new instance of the asynchronous Purview<wbr>Account<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CollectionsAsyncClient"
methods:
- uid: "com.azure.analytics.purview.account.CollectionsAsyncClient.createOrUpdateCollectionWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.account.CollectionsAsyncClient.createOrUpdateCollectionWithResponse(String collectionName, BinaryData collection, RequestOptions requestOptions)"
  name: "createOrUpdateCollectionWithResponse(String collectionName, BinaryData collection, RequestOptions requestOptions)"
  nameWithType: "CollectionsAsyncClient.createOrUpdateCollectionWithResponse(String collectionName, BinaryData collection, RequestOptions requestOptions)"
  summary: "Creates or updates a collection entity."
  parameters:
  - description: "The collectionName parameter."
    name: "collectionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Collection resource."
    name: "collection"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createOrUpdateCollectionWithResponse(String collectionName, BinaryData collection, RequestOptions requestOptions)"
  desc: "Creates or updates a collection entity.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Request Body Schema**\n\n```java\n{\n     collectionProvisioningState: String(Unknown/Creating/Moving/Deleting/Failed/Succeeded)\n     description: String\n     friendlyName: String\n     name: String\n     parentCollection: {\n         referenceName: String\n         type: String\n     }\n     systemData: {\n         createdAt: String\n         createdBy: String\n         createdByType: String(User/Application/ManagedIdentity/Key)\n         lastModifiedAt: String\n         lastModifiedBy: String\n         lastModifiedByType: String(User/Application/ManagedIdentity/Key)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n(recursive schema, see above)\n```"
  returns:
    description: "collection resource."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.account.CollectionsAsyncClient.deleteCollectionWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.account.CollectionsAsyncClient.deleteCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  name: "deleteCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  nameWithType: "CollectionsAsyncClient.deleteCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  summary: "Deletes a Collection entity."
  parameters:
  - description: "The collectionName parameter."
    name: "collectionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  desc: "Deletes a Collection entity.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.account.CollectionsAsyncClient.getCollectionPathWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.account.CollectionsAsyncClient.getCollectionPathWithResponse(String collectionName, RequestOptions requestOptions)"
  name: "getCollectionPathWithResponse(String collectionName, RequestOptions requestOptions)"
  nameWithType: "CollectionsAsyncClient.getCollectionPathWithResponse(String collectionName, RequestOptions requestOptions)"
  summary: "Gets the parent name and parent friendly name chains that represent the collection path."
  parameters:
  - description: "The collectionName parameter."
    name: "collectionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getCollectionPathWithResponse(String collectionName, RequestOptions requestOptions)"
  desc: "Gets the parent name and parent friendly name chains that represent the collection path.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Response Body Schema**\n\n```java\n{\n     parentFriendlyNameChain: [\n         String\n     ]\n     parentNameChain: [\n         String\n     ]\n }\n```"
  returns:
    description: "the parent name and parent friendly name chains that represent the collection path."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.account.CollectionsAsyncClient.getCollectionWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.account.CollectionsAsyncClient.getCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  name: "getCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  nameWithType: "CollectionsAsyncClient.getCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  summary: "Get a collection."
  parameters:
  - description: "The collectionName parameter."
    name: "collectionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getCollectionWithResponse(String collectionName, RequestOptions requestOptions)"
  desc: "Get a collection.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Response Body Schema**\n\n```java\n{\n     collectionProvisioningState: String(Unknown/Creating/Moving/Deleting/Failed/Succeeded)\n     description: String\n     friendlyName: String\n     name: String\n     parentCollection: {\n         referenceName: String\n         type: String\n     }\n     systemData: {\n         createdAt: String\n         createdBy: String\n         createdByType: String(User/Application/ManagedIdentity/Key)\n         lastModifiedAt: String\n         lastModifiedBy: String\n         lastModifiedByType: String(User/Application/ManagedIdentity/Key)\n     }\n }\n```"
  returns:
    description: "a collection."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.account.CollectionsAsyncClient.listChildCollectionNames(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.account.CollectionsAsyncClient.listChildCollectionNames(String collectionName, RequestOptions requestOptions)"
  name: "listChildCollectionNames(String collectionName, RequestOptions requestOptions)"
  nameWithType: "CollectionsAsyncClient.listChildCollectionNames(String collectionName, RequestOptions requestOptions)"
  summary: "Lists the child collections names in the collection."
  parameters:
  - description: "The collectionName parameter."
    name: "collectionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listChildCollectionNames(String collectionName, RequestOptions requestOptions)"
  desc: "Lists the child collections names in the collection.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------------------- |\n    | Name       | Type   | Required | Description             |\n    | apiVersion | String | Yes      | Api Version             |\n    | skipToken  | String | No       | The skipToken parameter |\n\n**Response Body Schema**\n\n```java\n{\n     count: Long\n     nextLink: String\n     value: [\n         {\n             friendlyName: String\n             name: String\n         }\n     ]\n }\n```"
  returns:
    description: "paged list of collections."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.account.CollectionsAsyncClient.listCollections(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.account.CollectionsAsyncClient.listCollections(RequestOptions requestOptions)"
  name: "listCollections(RequestOptions requestOptions)"
  nameWithType: "CollectionsAsyncClient.listCollections(RequestOptions requestOptions)"
  summary: "List the collections in the account."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listCollections(RequestOptions requestOptions)"
  desc: "List the collections in the account.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------------------- |\n    | Name       | Type   | Required | Description             |\n    | apiVersion | String | Yes      | Api Version             |\n    | skipToken  | String | No       | The skipToken parameter |\n\n**Response Body Schema**\n\n```java\n{\n     count: Long\n     nextLink: String\n     value: [\n         {\n             collectionProvisioningState: String(Unknown/Creating/Moving/Deleting/Failed/Succeeded)\n             description: String\n             friendlyName: String\n             name: String\n             parentCollection: {\n                 referenceName: String\n                 type: String\n             }\n             systemData: {\n                 createdAt: String\n                 createdBy: String\n                 createdByType: String(User/Application/ManagedIdentity/Key)\n                 lastModifiedAt: String\n                 lastModifiedBy: String\n                 lastModifiedByType: String(User/Application/ManagedIdentity/Key)\n             }\n         }\n     ]\n }\n```"
  returns:
    description: "paged list of collections."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous PurviewAccountClient type."
metadata: {}
package: "com.azure.analytics.purview.account"
artifact: com.azure:azure-analytics-purview-account:1.0.0-beta.1
