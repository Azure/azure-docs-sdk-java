### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.secrets.SecretBackup"
  id: "SecretBackup"
  parent: "com.azure.security.keyvault.secrets"
  children:
  - "com.azure.security.keyvault.secrets.SecretBackup.SecretBackup()"
  - "com.azure.security.keyvault.secrets.SecretBackup.getValue()"
  langs:
  - "java"
  name: "SecretBackup"
  nameWithType: "SecretBackup"
  fullName: "com.azure.security.keyvault.secrets.SecretBackup"
  type: "Class"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: " class SecretBackup"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.secrets.SecretBackup.SecretBackup()"
  id: "SecretBackup()"
  parent: "com.azure.security.keyvault.secrets.SecretBackup"
  langs:
  - "java"
  name: "SecretBackup()"
  nameWithType: "SecretBackup.SecretBackup()"
  fullName: "com.azure.security.keyvault.secrets.SecretBackup.SecretBackup()"
  overload: "com.azure.security.keyvault.secrets.SecretBackup.SecretBackup*"
  type: "Constructor"
  package: "com.azure.security.keyvault.secrets"
  syntax:
    content: " SecretBackup()"
- uid: "com.azure.security.keyvault.secrets.SecretBackup.getValue()"
  id: "getValue()"
  parent: "com.azure.security.keyvault.secrets.SecretBackup"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "SecretBackup.getValue()"
  fullName: "com.azure.security.keyvault.secrets.SecretBackup.getValue()"
  overload: "com.azure.security.keyvault.secrets.SecretBackup.getValue*"
  type: "Method"
  package: "com.azure.security.keyvault.secrets"
  summary: "Get the secret backup value as byte array."
  syntax:
    content: "public byte[] getValue()"
    return:
      type: "byte[]"
      description: "the secret backup value"
references:
- uid: "com.azure.security.keyvault.secrets.SecretBackup.SecretBackup*"
  name: "SecretBackup"
  nameWithType: "SecretBackup.SecretBackup"
  fullName: "com.azure.security.keyvault.secrets.SecretBackup.SecretBackup"
  package: "com.azure.security.keyvault.secrets"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.security.keyvault.secrets.SecretBackup.getValue*"
  name: "getValue"
  nameWithType: "SecretBackup.getValue"
  fullName: "com.azure.security.keyvault.secrets.SecretBackup.getValue"
  package: "com.azure.security.keyvault.secrets"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
