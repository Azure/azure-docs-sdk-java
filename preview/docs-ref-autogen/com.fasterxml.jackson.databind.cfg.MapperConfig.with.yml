### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.cfg.MapperConfig.with*"
fullName: "com.fasterxml.jackson.databind.cfg.MapperConfig<T>.with"
name: "with"
nameWithType: "MapperConfig<T>.with"
members:
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature,boolean)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfig<T>.with(MapperFeature feature, boolean state)"
  name: "with(MapperFeature feature, boolean state)"
  nameWithType: "MapperConfig<T>.with(MapperFeature feature, boolean state)"
  parameters:
  - name: "feature"
    type: "<xref href=\"com.fasterxml.jackson.databind.MapperFeature?alt=com.fasterxml.jackson.databind.MapperFeature&text=MapperFeature\" data-throw-if-not-resolved=\"False\" />"
  - name: "state"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T with(MapperFeature feature, boolean state)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.cfg.MapperConfig.with(com.fasterxml.jackson.databind.MapperFeature...)"
  fullName: "com.fasterxml.jackson.databind.cfg.MapperConfig<T>.with(MapperFeature[] features)"
  name: "with(MapperFeature[] features)"
  nameWithType: "MapperConfig<T>.with(MapperFeature[] features)"
  summary: "Method for constructing and returning a new instance with specified mapper features enabled."
  parameters:
  - name: "features"
    type: "<xref href=\"com.fasterxml.jackson.databind.MapperFeature?alt=com.fasterxml.jackson.databind.MapperFeature&text=MapperFeature\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract T with(MapperFeature[] features)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.cfg"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
