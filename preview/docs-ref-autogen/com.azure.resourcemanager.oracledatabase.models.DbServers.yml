### YamlMime:JavaType
uid: "com.azure.resourcemanager.oracledatabase.models.DbServers"
fullName: "com.azure.resourcemanager.oracledatabase.models.DbServers"
name: "DbServers"
nameWithType: "DbServers"
summary: "Resource collection API of Db<wbr>Servers."
syntax: "public interface **DbServers**"
methods:
- uid: "com.azure.resourcemanager.oracledatabase.models.DbServers.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.oracledatabase.models.DbServers.get(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid)"
  name: "get(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid)"
  nameWithType: "DbServers.get(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid)"
  summary: "Get a Db<wbr>Server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "CloudExadataInfrastructure name."
    name: "cloudexadatainfrastructurename"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "DbServer OCID."
    name: "dbserverocid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DbServer get(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid)"
  desc: "Get a DbServer."
  returns:
    description: "a DbServer."
    type: "<xref href=\"com.azure.resourcemanager.oracledatabase.models.DbServer?alt=com.azure.resourcemanager.oracledatabase.models.DbServer&text=DbServer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.oracledatabase.models.DbServers.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.oracledatabase.models.DbServers.getWithResponse(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid, Context context)"
  name: "getWithResponse(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid, Context context)"
  nameWithType: "DbServers.getWithResponse(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid, Context context)"
  summary: "Get a Db<wbr>Server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "CloudExadataInfrastructure name."
    name: "cloudexadatainfrastructurename"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "DbServer OCID."
    name: "dbserverocid"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DbServer> getWithResponse(String resourceGroupName, String cloudexadatainfrastructurename, String dbserverocid, Context context)"
  desc: "Get a DbServer."
  returns:
    description: "a DbServer along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.oracledatabase.models.DbServer?alt=com.azure.resourcemanager.oracledatabase.models.DbServer&text=DbServer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.oracledatabase.models.DbServers.listByCloudExadataInfrastructure(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.oracledatabase.models.DbServers.listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename)"
  name: "listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename)"
  nameWithType: "DbServers.listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename)"
  summary: "List Db<wbr>Server resources by Cloud<wbr>Exadata<wbr>Infrastructure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "CloudExadataInfrastructure name."
    name: "cloudexadatainfrastructurename"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<DbServer> listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename)"
  desc: "List DbServer resources by CloudExadataInfrastructure."
  returns:
    description: "the response of a DbServer list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.oracledatabase.models.DbServer?alt=com.azure.resourcemanager.oracledatabase.models.DbServer&text=DbServer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.oracledatabase.models.DbServers.listByCloudExadataInfrastructure(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.oracledatabase.models.DbServers.listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename, Context context)"
  name: "listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename, Context context)"
  nameWithType: "DbServers.listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename, Context context)"
  summary: "List Db<wbr>Server resources by Cloud<wbr>Exadata<wbr>Infrastructure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "CloudExadataInfrastructure name."
    name: "cloudexadatainfrastructurename"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DbServer> listByCloudExadataInfrastructure(String resourceGroupName, String cloudexadatainfrastructurename, Context context)"
  desc: "List DbServer resources by CloudExadataInfrastructure."
  returns:
    description: "the response of a DbServer list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.oracledatabase.models.DbServer?alt=com.azure.resourcemanager.oracledatabase.models.DbServer&text=DbServer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of DbServers."
metadata: {}
package: "com.azure.resourcemanager.oracledatabase.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-oracledatabase:1.0.0-beta.2
