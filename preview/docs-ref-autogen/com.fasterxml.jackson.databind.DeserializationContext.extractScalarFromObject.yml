### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.DeserializationContext.extractScalarFromObject*"
fullName: "com.fasterxml.jackson.databind.DeserializationContext.extractScalarFromObject"
name: "extractScalarFromObject"
nameWithType: "DeserializationContext.extractScalarFromObject"
members:
- uid: "com.fasterxml.jackson.databind.DeserializationContext.extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer<?>,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.extractScalarFromObject(JsonParser p, JsonDeserializer<?> deser, Class<?> scalarType)"
  name: "extractScalarFromObject(JsonParser p, JsonDeserializer<?> deser, Class<?> scalarType)"
  nameWithType: "DeserializationContext.extractScalarFromObject(JsonParser p, JsonDeserializer<?> deser, Class<?> scalarType)"
  summary: "Method to call in case incoming shape is Object Value (and parser thereby points to <xref uid=\"com.fasterxml.jackson.core.JsonToken.START_OBJECT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonToken#START_OBJECT\"></xref> token), but a Scalar value (potentially coercible from String value) is expected. This would typically be used to deserializer a Number, Boolean value or some other \"simple\" unstructured value type."
  parameters:
  - description: "Actual parser to read content from"
    name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - description: "Deserializer that needs extracted String value"
    name: "deser"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer?alt=com.fasterxml.jackson.databind.JsonDeserializer&text=JsonDeserializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "Immediate type of scalar to extract; usually type deserializer\n    handles but not always (for example, deserializer for <code>int[]</code> would pass\n    scalar type of <code>int</code>)"
    name: "scalarType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public String extractScalarFromObject(JsonParser p, JsonDeserializer<?> deser, Class<?> scalarType)"
  exceptions:
  - description: "If there are problems either reading content (underlying parser\n    problem) or finding expected scalar value"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "String value found; not <code>null</code> (exception should be thrown if no suitable\n     value found)"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
