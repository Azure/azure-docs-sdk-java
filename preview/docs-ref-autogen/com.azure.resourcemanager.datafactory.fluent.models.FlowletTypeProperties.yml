### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties"
name: "FlowletTypeProperties"
nameWithType: "FlowletTypeProperties"
summary: "Flowlet type properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FlowletTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.FlowletTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.FlowletTypeProperties()"
  name: "FlowletTypeProperties()"
  nameWithType: "FlowletTypeProperties.FlowletTypeProperties()"
  syntax: "public FlowletTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.script()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.script()"
  name: "script()"
  nameWithType: "FlowletTypeProperties.script()"
  summary: "Get the script property: Flowlet script."
  syntax: "public String script()"
  returns:
    description: "the script value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.scriptLines()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.scriptLines()"
  name: "scriptLines()"
  nameWithType: "FlowletTypeProperties.scriptLines()"
  summary: "Get the scriptLines property: Flowlet script lines."
  syntax: "public List<String> scriptLines()"
  returns:
    description: "the scriptLines value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.sinks()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.sinks()"
  name: "sinks()"
  nameWithType: "FlowletTypeProperties.sinks()"
  summary: "Get the sinks property: List of sinks in Flowlet."
  syntax: "public List<DataFlowSink> sinks()"
  returns:
    description: "the sinks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.sources()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.sources()"
  name: "sources()"
  nameWithType: "FlowletTypeProperties.sources()"
  summary: "Get the sources property: List of sources in Flowlet."
  syntax: "public List<DataFlowSource> sources()"
  returns:
    description: "the sources value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSource?alt=com.azure.resourcemanager.datafactory.models.DataFlowSource&text=DataFlowSource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.transformations()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.transformations()"
  name: "transformations()"
  nameWithType: "FlowletTypeProperties.transformations()"
  summary: "Get the transformations property: List of transformations in Flowlet."
  syntax: "public List<Transformation> transformations()"
  returns:
    description: "the transformations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Transformation?alt=com.azure.resourcemanager.datafactory.models.Transformation&text=Transformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.validate()"
  name: "validate()"
  nameWithType: "FlowletTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withScript(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withScript(String script)"
  name: "withScript(String script)"
  nameWithType: "FlowletTypeProperties.withScript(String script)"
  summary: "Set the script property: Flowlet script."
  parameters:
  - description: "the script value to set."
    name: "script"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FlowletTypeProperties withScript(String script)"
  returns:
    description: "the FlowletTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties&text=FlowletTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withScriptLines(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withScriptLines(List<String> scriptLines)"
  name: "withScriptLines(List<String> scriptLines)"
  nameWithType: "FlowletTypeProperties.withScriptLines(List<String> scriptLines)"
  summary: "Set the scriptLines property: Flowlet script lines."
  parameters:
  - description: "the scriptLines value to set."
    name: "scriptLines"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FlowletTypeProperties withScriptLines(List<String> scriptLines)"
  returns:
    description: "the FlowletTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties&text=FlowletTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withSinks(java.util.List<com.azure.resourcemanager.datafactory.models.DataFlowSink>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withSinks(List<DataFlowSink> sinks)"
  name: "withSinks(List<DataFlowSink> sinks)"
  nameWithType: "FlowletTypeProperties.withSinks(List<DataFlowSink> sinks)"
  summary: "Set the sinks property: List of sinks in Flowlet."
  parameters:
  - description: "the sinks value to set."
    name: "sinks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FlowletTypeProperties withSinks(List<DataFlowSink> sinks)"
  returns:
    description: "the FlowletTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties&text=FlowletTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withSources(java.util.List<com.azure.resourcemanager.datafactory.models.DataFlowSource>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withSources(List<DataFlowSource> sources)"
  name: "withSources(List<DataFlowSource> sources)"
  nameWithType: "FlowletTypeProperties.withSources(List<DataFlowSource> sources)"
  summary: "Set the sources property: List of sources in Flowlet."
  parameters:
  - description: "the sources value to set."
    name: "sources"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSource?alt=com.azure.resourcemanager.datafactory.models.DataFlowSource&text=DataFlowSource\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FlowletTypeProperties withSources(List<DataFlowSource> sources)"
  returns:
    description: "the FlowletTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties&text=FlowletTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withTransformations(java.util.List<com.azure.resourcemanager.datafactory.models.Transformation>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withTransformations(List<Transformation> transformations)"
  name: "withTransformations(List<Transformation> transformations)"
  nameWithType: "FlowletTypeProperties.withTransformations(List<Transformation> transformations)"
  summary: "Set the transformations property: List of transformations in Flowlet."
  parameters:
  - description: "the transformations value to set."
    name: "transformations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Transformation?alt=com.azure.resourcemanager.datafactory.models.Transformation&text=Transformation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FlowletTypeProperties withTransformations(List<Transformation> transformations)"
  returns:
    description: "the FlowletTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties&text=FlowletTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
