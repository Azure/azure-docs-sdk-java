### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  id: ManagedDatabasesClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation
  children:
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstanceAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  - com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  langs:
  - java
  name: ManagedDatabasesClientImpl
  nameWithType: ManagedDatabasesClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  type: Class
  package: com.azure.resourcemanager.sql.implementation
  summary: An instance of this class provides access to all the operations defined in ManagedDatabasesClient.
  syntax:
    content: public final class ManagedDatabasesClientImpl implements ManagedDatabasesClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.ManagedDatabasesClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  id: ManagedDatabasesClientImpl(com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: ManagedDatabasesClientImpl(SqlManagementClientImpl client)
  nameWithType: ManagedDatabasesClientImpl.ManagedDatabasesClientImpl(SqlManagementClientImpl client)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.ManagedDatabasesClientImpl(SqlManagementClientImpl client)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.ManagedDatabasesClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.sql.implementation
  summary: Initializes an instance of ManagedDatabasesClientImpl.
  syntax:
    content: " ManagedDatabasesClientImpl(SqlManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClientImpl.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginCompleteRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  nameWithType: ManagedDatabasesClientImpl.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginCompleteRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginCompleteRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClientImpl.beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestoreAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginCompleteRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClientImpl.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  nameWithType: ManagedDatabasesClientImpl.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginCreateOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public PollerFlux<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginCreateOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a managed database.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabasesClientImpl.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a managed database.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDeleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a managed database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClientImpl.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates an existing database.
  syntax:
    content: public SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  id: beginUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  nameWithType: ManagedDatabasesClientImpl.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates an existing database.
  syntax:
    content: public SyncPoller<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClientImpl.beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates an existing database.
  syntax:
    content: public PollerFlux<PollResult<ManagedDatabaseInner>,ManagedDatabaseInner> beginUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClientImpl.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public void completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: completeRestore(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  nameWithType: ManagedDatabasesClientImpl.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public void completeRestore(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: completeRestoreAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClientImpl.completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public Mono<Void> completeRestoreAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: completeRestoreWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  nameWithType: ManagedDatabasesClientImpl.completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Completes the restore operation on a managed database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> completeRestoreWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String lastBackupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: lastBackupName
      type: java.lang.String
      description: The last backup name to apply.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClientImpl.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public ManagedDatabaseInner createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  nameWithType: ManagedDatabasesClientImpl.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public ManagedDatabaseInner createOrUpdate(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClientImpl.createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public Mono<ManagedDatabaseInner> createOrUpdateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  nameWithType: ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Creates a new database or updates an existing database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: A managed database resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.delete(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a managed database.
  syntax:
    content: public void delete(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabasesClientImpl.delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a managed database.
  syntax:
    content: public void delete(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a managed database.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Deletes a managed database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.get(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.get(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a managed database.
  syntax:
    content: public ManagedDatabaseInner get(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a managed database.
  syntax:
    content: public Mono<ManagedDatabaseInner> getAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabasesClientImpl.getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a managed database.
  syntax:
    content: public Response<ManagedDatabaseInner> getWithResponse(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabasesClientImpl.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a managed database.
  syntax:
    content: public Mono<Response<ManagedDatabaseInner>> getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>>
      description: a managed database.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance(java.lang.String,java.lang.String)
  id: listByInstance(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: listByInstance(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClientImpl.listByInstance(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of managed databases.
  syntax:
    content: public PagedIterable<ManagedDatabaseInner> listByInstance(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of managed databases.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: listByInstance(String resourceGroupName, String managedInstanceName, Context context)
  nameWithType: ManagedDatabasesClientImpl.listByInstance(String resourceGroupName, String managedInstanceName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance(String resourceGroupName, String managedInstanceName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of managed databases.
  syntax:
    content: public PagedIterable<ManagedDatabaseInner> listByInstance(String resourceGroupName, String managedInstanceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of managed databases.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstanceAsync(java.lang.String,java.lang.String)
  id: listByInstanceAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: listByInstanceAsync(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClientImpl.listByInstanceAsync(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstanceAsync(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstanceAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of managed databases.
  syntax:
    content: public PagedFlux<ManagedDatabaseInner> listByInstanceAsync(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of managed databases.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance(java.lang.String,java.lang.String)
  id: listInaccessibleByInstance(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClientImpl.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of inaccessible managed databases in a managed instance.
  syntax:
    content: public PagedIterable<ManagedDatabaseInner> listInaccessibleByInstance(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of inaccessible managed databases in a managed instance.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listInaccessibleByInstance(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
  nameWithType: ManagedDatabasesClientImpl.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of inaccessible managed databases in a managed instance.
  syntax:
    content: public PagedIterable<ManagedDatabaseInner> listInaccessibleByInstance(String resourceGroupName, String managedInstanceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of inaccessible managed databases in a managed instance.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync(java.lang.String,java.lang.String)
  id: listInaccessibleByInstanceAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
  nameWithType: ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Gets a list of inaccessible managed databases in a managed instance.
  syntax:
    content: public PagedFlux<ManagedDatabaseInner> listInaccessibleByInstanceAsync(String resourceGroupName, String managedInstanceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a list of inaccessible managed databases in a managed instance.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClientImpl.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates an existing database.
  syntax:
    content: public ManagedDatabaseInner update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  id: update(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  nameWithType: ManagedDatabasesClientImpl.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates an existing database.
  syntax:
    content: public ManagedDatabaseInner update(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClientImpl.updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates an existing database.
  syntax:
    content: public Mono<ManagedDatabaseInner> updateAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
      description: a managed database resource.
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
  parent: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  nameWithType: ManagedDatabasesClientImpl.updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
  overload: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.implementation
  summary: Updates an existing database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, ManagedDatabaseUpdate parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: parameters
      type: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
      description: An managed database update.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: a managed database resource.
references:
- uid: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
  name: SqlManagementClientImpl
  nameWithType: SqlManagementClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.SqlManagementClientImpl
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.ManagedDatabasesClientImpl*
  name: ManagedDatabasesClientImpl
  nameWithType: ManagedDatabasesClientImpl.ManagedDatabasesClientImpl
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.ManagedDatabasesClientImpl
  package: com.azure.resourcemanager.sql.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstanceAsync*
  name: listByInstanceAsync
  nameWithType: ManagedDatabasesClientImpl.listByInstanceAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstanceAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance*
  name: listByInstance
  nameWithType: ManagedDatabasesClientImpl.listByInstance
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listByInstance
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ManagedDatabasesClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getAsync*
  name: getAsync
  nameWithType: ManagedDatabasesClientImpl.getAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  name: ManagedDatabaseInner
  nameWithType: ManagedDatabaseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.get*
  name: get
  nameWithType: ManagedDatabasesClientImpl.get
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.get
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: ManagedDatabasesClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.getWithResponse
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: ManagedDatabasesClientImpl.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
    name: ManagedDatabaseInner
    fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ManagedDatabasesClientImpl.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCreateOrUpdate
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ManagedDatabasesClientImpl.createOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate*
  name: createOrUpdate
  nameWithType: ManagedDatabasesClientImpl.createOrUpdate
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.createOrUpdate
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ManagedDatabasesClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDeleteAsync*
  name: beginDeleteAsync
  nameWithType: ManagedDatabasesClientImpl.beginDeleteAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDeleteAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete*
  name: beginDelete
  nameWithType: ManagedDatabasesClientImpl.beginDelete
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginDelete
  package: com.azure.resourcemanager.sql.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: ManagedDatabasesClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.deleteAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete*
  name: delete
  nameWithType: ManagedDatabasesClientImpl.delete
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.delete
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
  name: ManagedDatabaseUpdate
  nameWithType: ManagedDatabaseUpdate
  fullName: com.azure.resourcemanager.sql.models.ManagedDatabaseUpdate
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: ManagedDatabasesClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdateAsync*
  name: beginUpdateAsync
  nameWithType: ManagedDatabasesClientImpl.beginUpdateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate*
  name: beginUpdate
  nameWithType: ManagedDatabasesClientImpl.beginUpdate
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginUpdate
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateAsync*
  name: updateAsync
  nameWithType: ManagedDatabasesClientImpl.updateAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.updateAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update*
  name: update
  nameWithType: ManagedDatabasesClientImpl.update
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.update
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync*
  name: listInaccessibleByInstanceAsync
  nameWithType: ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstanceAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance*
  name: listInaccessibleByInstance
  nameWithType: ManagedDatabasesClientImpl.listInaccessibleByInstance
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.listInaccessibleByInstance
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreWithResponseAsync*
  name: completeRestoreWithResponseAsync
  nameWithType: ManagedDatabasesClientImpl.completeRestoreWithResponseAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreWithResponseAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestoreAsync*
  name: beginCompleteRestoreAsync
  nameWithType: ManagedDatabasesClientImpl.beginCompleteRestoreAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestoreAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore*
  name: beginCompleteRestore
  nameWithType: ManagedDatabasesClientImpl.beginCompleteRestore
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.beginCompleteRestore
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreAsync*
  name: completeRestoreAsync
  nameWithType: ManagedDatabasesClientImpl.completeRestoreAsync
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestoreAsync
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore*
  name: completeRestore
  nameWithType: ManagedDatabasesClientImpl.completeRestore
  fullName: com.azure.resourcemanager.sql.implementation.ManagedDatabasesClientImpl.completeRestore
  package: com.azure.resourcemanager.sql.implementation
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
  name: ManagedDatabasesClient
  nameWithType: ManagedDatabasesClient
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabasesClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
  name: ManagedDatabaseInner>,ManagedDatabaseInner
  nameWithType: ManagedDatabaseInner>,ManagedDatabaseInner
  fullName: com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner>,com.azure.resourcemanager.sql.fluent.models.ManagedDatabaseInner
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
