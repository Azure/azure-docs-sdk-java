### YamlMime:JavaMember
uid: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal*"
fullName: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal"
name: "createHttp2Minimal"
nameWithType: "HttpAsyncClients.createHttp2Minimal"
members:
- uid: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal()"
  fullName: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal()"
  name: "createHttp2Minimal()"
  nameWithType: "HttpAsyncClients.createHttp2Minimal()"
  summary: "Creates <xref uid=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MinimalH2AsyncClient\"></xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality."
  syntax: "public static MinimalH2AsyncClient createHttp2Minimal()"
  returns:
    type: "<xref href=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient?alt=org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient&text=MinimalH2AsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config)"
  fullName: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config)"
  name: "createHttp2Minimal(H2Config h2Config)"
  nameWithType: "HttpAsyncClients.createHttp2Minimal(H2Config h2Config)"
  summary: "Creates <xref uid=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MinimalH2AsyncClient\"></xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality."
  parameters:
  - name: "h2Config"
    type: "<xref href=\"org.apache.hc.core5.http2.config.H2Config?alt=org.apache.hc.core5.http2.config.H2Config&text=H2Config\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config)"
  returns:
    type: "<xref href=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient?alt=org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient&text=MinimalH2AsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig)"
  fullName: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)"
  name: "createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)"
  nameWithType: "HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)"
  summary: "Creates <xref uid=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MinimalH2AsyncClient\"></xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality."
  parameters:
  - name: "h2Config"
    type: "<xref href=\"org.apache.hc.core5.http2.config.H2Config?alt=org.apache.hc.core5.http2.config.H2Config&text=H2Config\" data-throw-if-not-resolved=\"False\" />"
  - name: "ioReactorConfig"
    type: "<xref href=\"org.apache.hc.core5.reactor.IOReactorConfig?alt=org.apache.hc.core5.reactor.IOReactorConfig&text=IOReactorConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)"
  returns:
    type: "<xref href=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient?alt=org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient&text=MinimalH2AsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.client5.http.DnsResolver,org.apache.hc.core5.http.nio.ssl.TlsStrategy)"
  fullName: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)"
  name: "createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)"
  nameWithType: "HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)"
  summary: "Creates <xref uid=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MinimalH2AsyncClient\"></xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality."
  parameters:
  - name: "h2Config"
    type: "<xref href=\"org.apache.hc.core5.http2.config.H2Config?alt=org.apache.hc.core5.http2.config.H2Config&text=H2Config\" data-throw-if-not-resolved=\"False\" />"
  - name: "ioReactorConfig"
    type: "<xref href=\"org.apache.hc.core5.reactor.IOReactorConfig?alt=org.apache.hc.core5.reactor.IOReactorConfig&text=IOReactorConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "dnsResolver"
    type: "<xref href=\"org.apache.hc.client5.http.DnsResolver?alt=org.apache.hc.client5.http.DnsResolver&text=DnsResolver\" data-throw-if-not-resolved=\"False\" />"
  - name: "tlsStrategy"
    type: "<xref href=\"org.apache.hc.core5.http.nio.ssl.TlsStrategy?alt=org.apache.hc.core5.http.nio.ssl.TlsStrategy&text=TlsStrategy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)"
  returns:
    type: "<xref href=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient?alt=org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient&text=MinimalH2AsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.core5.http.nio.ssl.TlsStrategy)"
  fullName: "org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)"
  name: "createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)"
  nameWithType: "HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)"
  summary: "Creates <xref uid=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MinimalH2AsyncClient\"></xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality."
  parameters:
  - name: "h2Config"
    type: "<xref href=\"org.apache.hc.core5.http2.config.H2Config?alt=org.apache.hc.core5.http2.config.H2Config&text=H2Config\" data-throw-if-not-resolved=\"False\" />"
  - name: "ioReactorConfig"
    type: "<xref href=\"org.apache.hc.core5.reactor.IOReactorConfig?alt=org.apache.hc.core5.reactor.IOReactorConfig&text=IOReactorConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "tlsStrategy"
    type: "<xref href=\"org.apache.hc.core5.http.nio.ssl.TlsStrategy?alt=org.apache.hc.core5.http.nio.ssl.TlsStrategy&text=TlsStrategy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)"
  returns:
    type: "<xref href=\"org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient?alt=org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient&text=MinimalH2AsyncClient\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.client5.http.impl.async"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
