### YamlMime:JavaMember
uid: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.updateDigitalTwinWithResponse*"
fullName: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.updateDigitalTwinWithResponse"
name: "updateDigitalTwinWithResponse"
nameWithType: "DigitalTwinsAsyncClient.updateDigitalTwinWithResponse"
members:
- uid: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.updateDigitalTwinWithResponse(java.lang.String,java.util.List<java.lang.Object>,com.azure.digitaltwins.core.models.UpdateDigitalTwinRequestOptions)"
  fullName: "com.azure.digitaltwins.core.DigitalTwinsAsyncClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, UpdateDigitalTwinRequestOptions options)"
  name: "updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, UpdateDigitalTwinRequestOptions options)"
  nameWithType: "DigitalTwinsAsyncClient.updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, UpdateDigitalTwinRequestOptions options)"
  summary: "Updates a digital twin.\n\n**Code Samples**\n\nUpdate digital twin by providing list of intended patch operations.\n\n```java\nUpdateOperationUtility updateOperationUtility = new UpdateOperationUtility();\n updateOperationUtility.appendReplaceOperation(\"Prop1\", \"newValue\");\n \n digitalTwinsAsyncClient.updateDigitalTwinWithResponse(\n     \"myDigitalTwinId\",\n     updateOperationUtility.getUpdateOperations(),\n     new UpdateDigitalTwinRequestOptions())\n .subscribe(updateResponse ->\n     System.out.println(\"Update completed with HTTP status code: \" + updateResponse.getStatusCode()));\n```"
  parameters:
  - description: "The Id of the digital twin."
    name: "digitalTwinId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The JSON patch to apply to the specified digital twin.\n                                    This argument can be created using <xref uid=\"com.azure.digitaltwins.core.models.UpdateOperationUtility\" data-throw-if-not-resolved=\"false\">UpdateOperationUtility</xref>."
    name: "digitalTwinUpdateOperations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The optional settings for this request"
    name: "options"
    type: "<xref href=\"com.azure.digitaltwins.core.models.UpdateDigitalTwinRequestOptions?alt=com.azure.digitaltwins.core.models.UpdateDigitalTwinRequestOptions&text=UpdateDigitalTwinRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DigitalTwinsResponse<Void>> updateDigitalTwinWithResponse(String digitalTwinId, List<Object> digitalTwinUpdateOperations, UpdateDigitalTwinRequestOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.digitaltwins.core.models.DigitalTwinsResponse\" data-throw-if-not-resolved=\"false\">DigitalTwinsResponse</xref>"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.digitaltwins.core.models.DigitalTwinsResponse?alt=com.azure.digitaltwins.core.models.DigitalTwinsResponse&text=DigitalTwinsResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.digitaltwins.core"
artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
