### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Suppliers.synchronizedSupplier*"
fullName: "com.azure.cosmos.implementation.guava25.base.Suppliers.<T>synchronizedSupplier"
name: "<T>synchronizedSupplier"
nameWithType: "Suppliers.<T>synchronizedSupplier"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Suppliers.<T>synchronizedSupplier(com.azure.cosmos.implementation.guava25.base.Supplier<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Suppliers.<T>synchronizedSupplier(Supplier<T> delegate)"
  name: "<T>synchronizedSupplier(Supplier<T> delegate)"
  nameWithType: "Suppliers.<T>synchronizedSupplier(Supplier<T> delegate)"
  summary: "Returns a supplier whose `get()` method synchronizes on `delegate` before calling it, making it thread-safe."
  parameters:
  - name: "delegate"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Supplier?alt=com.azure.cosmos.implementation.guava25.base.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Supplier<T> <T>synchronizedSupplier(Supplier<T> delegate)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Supplier?alt=com.azure.cosmos.implementation.guava25.base.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
