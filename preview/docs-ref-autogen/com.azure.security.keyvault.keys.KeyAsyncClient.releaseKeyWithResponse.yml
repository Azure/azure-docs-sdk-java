### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.releaseKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.releaseKeyWithResponse"
name: "releaseKeyWithResponse"
nameWithType: "KeyAsyncClient.releaseKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.releaseKeyWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.security.keyvault.keys.models.ReleaseKeyOptions)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.releaseKeyWithResponse(String name, String version, String target, ReleaseKeyOptions options)"
  name: "releaseKeyWithResponse(String name, String version, String target, ReleaseKeyOptions options)"
  nameWithType: "KeyAsyncClient.releaseKeyWithResponse(String name, String version, String target, ReleaseKeyOptions options)"
  summary: "Releases a key.\n\nThe key must be exportable. This operation requires the 'keys/release' permission.\n\n**Code Samples**\n\nReleases a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. Subscribes to the call asynchronously and prints out the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP Response\"></xref> details and the signed object that contains the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"released key\"></xref> when a response has been received.\n\n```java\nString releaseKeyVersion = \"6A385B124DEF4096AF1361A85B16C204\";\n String releaseTarget = \"someAttestationToken\";\n ReleaseKeyOptions releaseKeyOptions = new ReleaseKeyOptions()\n     .setAlgorithm(KeyExportEncryptionAlgorithm.RSA_AES_KEY_WRAP_256)\n     .setNonce(\"someNonce\");\n\n keyAsyncClient.releaseKeyWithResponse(\"keyName\", releaseKeyVersion, releaseTarget, releaseKeyOptions)\n     .subscribe(releaseKeyResponse ->\n         System.out.printf(\"Response received successfully with status code: %d. Signed object containing\"\n                 + \"released key: %s%n\", releaseKeyResponse.getStatusCode(),\n             releaseKeyResponse.getValue().getValue()));\n```"
  parameters:
  - description: "The name of the key to release."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the key to retrieve. If this is empty or <code>null</code>, this call is equivalent to\n calling <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient.releaseKey(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyAsyncClient#releaseKey(String, String)\"></xref>, with the latest key version being released."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The attestation assertion for the target of the key release."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional <xref uid=\"com.azure.security.keyvault.keys.models.ReleaseKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> for releasing a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>."
    name: "options"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.ReleaseKeyOptions?alt=com.azure.security.keyvault.keys.models.ReleaseKeyOptions&text=ReleaseKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<ReleaseKeyResult>> releaseKeyWithResponse(String name, String version, String target, ReleaseKeyOptions options)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> for this operation and the\n <xref uid=\"com.azure.security.keyvault.keys.models.ReleaseKeyResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReleaseKeyResult\"></xref> containing the released key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.ReleaseKeyResult?alt=com.azure.security.keyvault.keys.models.ReleaseKeyResult&text=ReleaseKeyResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.5
