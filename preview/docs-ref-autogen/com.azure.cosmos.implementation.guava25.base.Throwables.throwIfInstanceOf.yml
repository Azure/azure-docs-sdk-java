### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Throwables.throwIfInstanceOf*"
fullName: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>throwIfInstanceOf"
name: "<X>throwIfInstanceOf"
nameWithType: "Throwables.<X>throwIfInstanceOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>throwIfInstanceOf(java.lang.Throwable,java.lang.Class<X>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>throwIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  name: "<X>throwIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  nameWithType: "Throwables.<X>throwIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  summary: "Throws `throwable` if it is an instance of `declaredType`. Example usage:\n\n```java\nfor (Foo foo : foos) {\n   try {\n     foo.bar();\n   } catch (BarException | RuntimeException | Error t) {\n     failure = t;\n   }\n }\n if (failure != null) {\n   throwIfInstanceOf(failure, BarException.class);\n   throwIfUnchecked(failure);\n   throw new AssertionError(failure);\n }\n```"
  parameters:
  - name: "throwable"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  - name: "declaredType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"X?alt=X&text=X\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static void <X>throwIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  exceptions:
  - type: "<xref href=\"X?alt=X&text=X\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
