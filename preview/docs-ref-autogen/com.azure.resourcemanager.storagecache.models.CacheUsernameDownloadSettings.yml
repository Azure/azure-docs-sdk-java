### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings"
fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings"
name: "CacheUsernameDownloadSettings"
nameWithType: "CacheUsernameDownloadSettings"
summary: "Settings for Extended Groups username and group download."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CacheUsernameDownloadSettings"
constructors:
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.CacheUsernameDownloadSettings()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.CacheUsernameDownloadSettings()"
  name: "CacheUsernameDownloadSettings()"
  nameWithType: "CacheUsernameDownloadSettings.CacheUsernameDownloadSettings()"
  syntax: "public CacheUsernameDownloadSettings()"
methods:
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.autoDownloadCertificate()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.autoDownloadCertificate()"
  name: "autoDownloadCertificate()"
  nameWithType: "CacheUsernameDownloadSettings.autoDownloadCertificate()"
  summary: "Get the autoDownloadCertificate property: Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true."
  syntax: "public Boolean autoDownloadCertificate()"
  returns:
    description: "the autoDownloadCertificate value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.caCertificateUri()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.caCertificateUri()"
  name: "caCertificateUri()"
  nameWithType: "CacheUsernameDownloadSettings.caCertificateUri()"
  summary: "Get the caCertificateUri property: The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
  syntax: "public String caCertificateUri()"
  returns:
    description: "the caCertificateUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.credentials()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.credentials()"
  name: "credentials()"
  nameWithType: "CacheUsernameDownloadSettings.credentials()"
  summary: "Get the credentials property: When present, these are the credentials for the secure LDAP connection."
  syntax: "public CacheUsernameDownloadSettingsCredentials credentials()"
  returns:
    description: "the credentials value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettingsCredentials?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettingsCredentials&text=CacheUsernameDownloadSettingsCredentials\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.encryptLdapConnection()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.encryptLdapConnection()"
  name: "encryptLdapConnection()"
  nameWithType: "CacheUsernameDownloadSettings.encryptLdapConnection()"
  summary: "Get the encryptLdapConnection property: Whether or not the LDAP connection should be encrypted."
  syntax: "public Boolean encryptLdapConnection()"
  returns:
    description: "the encryptLdapConnection value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.extendedGroups()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.extendedGroups()"
  name: "extendedGroups()"
  nameWithType: "CacheUsernameDownloadSettings.extendedGroups()"
  summary: "Get the extendedGroups property: Whether or not Extended Groups is enabled."
  syntax: "public Boolean extendedGroups()"
  returns:
    description: "the extendedGroups value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.groupFileUri()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.groupFileUri()"
  name: "groupFileUri()"
  nameWithType: "CacheUsernameDownloadSettings.groupFileUri()"
  summary: "Get the groupFileUri property: The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
  syntax: "public String groupFileUri()"
  returns:
    description: "the groupFileUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.ldapBaseDN()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.ldapBaseDN()"
  name: "ldapBaseDN()"
  nameWithType: "CacheUsernameDownloadSettings.ldapBaseDN()"
  summary: "Get the ldapBaseDN property: The base distinguished name for the LDAP domain."
  syntax: "public String ldapBaseDN()"
  returns:
    description: "the ldapBaseDN value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.ldapServer()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.ldapServer()"
  name: "ldapServer()"
  nameWithType: "CacheUsernameDownloadSettings.ldapServer()"
  summary: "Get the ldapServer property: The fully qualified domain name or IP address of the LDAP server to use."
  syntax: "public String ldapServer()"
  returns:
    description: "the ldapServer value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.requireValidCertificate()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.requireValidCertificate()"
  name: "requireValidCertificate()"
  nameWithType: "CacheUsernameDownloadSettings.requireValidCertificate()"
  summary: "Get the requireValidCertificate property: Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided."
  syntax: "public Boolean requireValidCertificate()"
  returns:
    description: "the requireValidCertificate value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.userFileUri()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.userFileUri()"
  name: "userFileUri()"
  nameWithType: "CacheUsernameDownloadSettings.userFileUri()"
  summary: "Get the userFileUri property: The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
  syntax: "public String userFileUri()"
  returns:
    description: "the userFileUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.usernameDownloaded()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.usernameDownloaded()"
  name: "usernameDownloaded()"
  nameWithType: "CacheUsernameDownloadSettings.usernameDownloaded()"
  summary: "Get the usernameDownloaded property: Indicates whether or not the HPC Cache has performed the username download successfully."
  syntax: "public UsernameDownloadedType usernameDownloaded()"
  returns:
    description: "the usernameDownloaded value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.UsernameDownloadedType?alt=com.azure.resourcemanager.storagecache.models.UsernameDownloadedType&text=UsernameDownloadedType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.usernameSource()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.usernameSource()"
  name: "usernameSource()"
  nameWithType: "CacheUsernameDownloadSettings.usernameSource()"
  summary: "Get the usernameSource property: This setting determines how the cache gets username and group names for clients."
  syntax: "public UsernameSource usernameSource()"
  returns:
    description: "the usernameSource value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.UsernameSource?alt=com.azure.resourcemanager.storagecache.models.UsernameSource&text=UsernameSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.validate()"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.validate()"
  name: "validate()"
  nameWithType: "CacheUsernameDownloadSettings.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withAutoDownloadCertificate(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withAutoDownloadCertificate(Boolean autoDownloadCertificate)"
  name: "withAutoDownloadCertificate(Boolean autoDownloadCertificate)"
  nameWithType: "CacheUsernameDownloadSettings.withAutoDownloadCertificate(Boolean autoDownloadCertificate)"
  summary: "Set the autoDownloadCertificate property: Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' only if 'requireValidCertificate' is true."
  parameters:
  - description: "the autoDownloadCertificate value to set."
    name: "autoDownloadCertificate"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withAutoDownloadCertificate(Boolean autoDownloadCertificate)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withCaCertificateUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withCaCertificateUri(String caCertificateUri)"
  name: "withCaCertificateUri(String caCertificateUri)"
  nameWithType: "CacheUsernameDownloadSettings.withCaCertificateUri(String caCertificateUri)"
  summary: "Set the caCertificateUri property: The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
  parameters:
  - description: "the caCertificateUri value to set."
    name: "caCertificateUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withCaCertificateUri(String caCertificateUri)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withCredentials(com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettingsCredentials)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withCredentials(CacheUsernameDownloadSettingsCredentials credentials)"
  name: "withCredentials(CacheUsernameDownloadSettingsCredentials credentials)"
  nameWithType: "CacheUsernameDownloadSettings.withCredentials(CacheUsernameDownloadSettingsCredentials credentials)"
  summary: "Set the credentials property: When present, these are the credentials for the secure LDAP connection."
  parameters:
  - description: "the credentials value to set."
    name: "credentials"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettingsCredentials?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettingsCredentials&text=CacheUsernameDownloadSettingsCredentials\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withCredentials(CacheUsernameDownloadSettingsCredentials credentials)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withEncryptLdapConnection(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withEncryptLdapConnection(Boolean encryptLdapConnection)"
  name: "withEncryptLdapConnection(Boolean encryptLdapConnection)"
  nameWithType: "CacheUsernameDownloadSettings.withEncryptLdapConnection(Boolean encryptLdapConnection)"
  summary: "Set the encryptLdapConnection property: Whether or not the LDAP connection should be encrypted."
  parameters:
  - description: "the encryptLdapConnection value to set."
    name: "encryptLdapConnection"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withEncryptLdapConnection(Boolean encryptLdapConnection)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withExtendedGroups(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withExtendedGroups(Boolean extendedGroups)"
  name: "withExtendedGroups(Boolean extendedGroups)"
  nameWithType: "CacheUsernameDownloadSettings.withExtendedGroups(Boolean extendedGroups)"
  summary: "Set the extendedGroups property: Whether or not Extended Groups is enabled."
  parameters:
  - description: "the extendedGroups value to set."
    name: "extendedGroups"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withExtendedGroups(Boolean extendedGroups)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withGroupFileUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withGroupFileUri(String groupFileUri)"
  name: "withGroupFileUri(String groupFileUri)"
  nameWithType: "CacheUsernameDownloadSettings.withGroupFileUri(String groupFileUri)"
  summary: "Set the groupFileUri property: The URI of the file containing group information (in /etc/group file format). This field must be populated when 'usernameSource' is set to 'File'."
  parameters:
  - description: "the groupFileUri value to set."
    name: "groupFileUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withGroupFileUri(String groupFileUri)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withLdapBaseDN(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withLdapBaseDN(String ldapBaseDN)"
  name: "withLdapBaseDN(String ldapBaseDN)"
  nameWithType: "CacheUsernameDownloadSettings.withLdapBaseDN(String ldapBaseDN)"
  summary: "Set the ldapBaseDN property: The base distinguished name for the LDAP domain."
  parameters:
  - description: "the ldapBaseDN value to set."
    name: "ldapBaseDN"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withLdapBaseDN(String ldapBaseDN)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withLdapServer(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withLdapServer(String ldapServer)"
  name: "withLdapServer(String ldapServer)"
  nameWithType: "CacheUsernameDownloadSettings.withLdapServer(String ldapServer)"
  summary: "Set the ldapServer property: The fully qualified domain name or IP address of the LDAP server to use."
  parameters:
  - description: "the ldapServer value to set."
    name: "ldapServer"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withLdapServer(String ldapServer)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withRequireValidCertificate(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withRequireValidCertificate(Boolean requireValidCertificate)"
  name: "withRequireValidCertificate(Boolean requireValidCertificate)"
  nameWithType: "CacheUsernameDownloadSettings.withRequireValidCertificate(Boolean requireValidCertificate)"
  summary: "Set the requireValidCertificate property: Determines if the certificates must be validated by a certificate authority. When true, caCertificateURI must be provided."
  parameters:
  - description: "the requireValidCertificate value to set."
    name: "requireValidCertificate"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withRequireValidCertificate(Boolean requireValidCertificate)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withUserFileUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withUserFileUri(String userFileUri)"
  name: "withUserFileUri(String userFileUri)"
  nameWithType: "CacheUsernameDownloadSettings.withUserFileUri(String userFileUri)"
  summary: "Set the userFileUri property: The URI of the file containing user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
  parameters:
  - description: "the userFileUri value to set."
    name: "userFileUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withUserFileUri(String userFileUri)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withUsernameSource(com.azure.resourcemanager.storagecache.models.UsernameSource)"
  fullName: "com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings.withUsernameSource(UsernameSource usernameSource)"
  name: "withUsernameSource(UsernameSource usernameSource)"
  nameWithType: "CacheUsernameDownloadSettings.withUsernameSource(UsernameSource usernameSource)"
  summary: "Set the usernameSource property: This setting determines how the cache gets username and group names for clients."
  parameters:
  - description: "the usernameSource value to set."
    name: "usernameSource"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.UsernameSource?alt=com.azure.resourcemanager.storagecache.models.UsernameSource&text=UsernameSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CacheUsernameDownloadSettings withUsernameSource(UsernameSource usernameSource)"
  returns:
    description: "the CacheUsernameDownloadSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUsernameDownloadSettings&text=CacheUsernameDownloadSettings\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.storagecache.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagecache:1.0.0-beta.6
