### YamlMime:JavaType
uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification"
fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification"
name: "ImageModelSettingsClassification"
nameWithType: "ImageModelSettingsClassification"
summary: "Settings used for training the model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettings?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.advancedSettings()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.amsGradient()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.augmentations()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.beta1()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.beta2()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.checkpointDatasetId()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.checkpointFilename()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.checkpointFrequency()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.checkpointRunId()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.distributed()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.earlyStopping()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.earlyStoppingDelay()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.earlyStoppingPatience()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.enableOnnxNormalization()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.evaluationFrequency()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.gradientAccumulationStep()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.layersToFreeze()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.learningRate()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.learningRateScheduler()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.modelName()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.momentum()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.nesterov()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.numberOfEpochs()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.numberOfWorkers()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.optimizer()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.randomSeed()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.splitRatio()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.stepLRGamma()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.stepLRStepSize()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.trainingBatchSize()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.validate()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.validationBatchSize()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.warmupCosineLRCycles()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.warmupCosineLRWarmupEpochs()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.weightDecay()"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withAdvancedSettings(java.lang.String)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withAmsGradient(java.lang.Boolean)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withAugmentations(java.lang.String)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withBeta1(java.lang.Float)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withBeta2(java.lang.Float)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointDatasetId(java.lang.String)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointFilename(java.lang.String)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointFrequency(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointRunId(java.lang.String)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withDistributed(java.lang.Boolean)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEarlyStopping(java.lang.Boolean)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEarlyStoppingDelay(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEarlyStoppingPatience(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEnableOnnxNormalization(java.lang.Boolean)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEvaluationFrequency(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withGradientAccumulationStep(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withLayersToFreeze(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withLearningRate(java.lang.Float)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withLearningRateScheduler(com.azure.resourcemanager.machinelearning.models.LearningRateScheduler)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withModelName(java.lang.String)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withMomentum(java.lang.Float)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withNesterov(java.lang.Boolean)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withNumberOfEpochs(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withNumberOfWorkers(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withOptimizer(com.azure.resourcemanager.machinelearning.models.StochasticOptimizer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withRandomSeed(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withSplitRatio(java.lang.Float)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withStepLRGamma(java.lang.Float)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withStepLRStepSize(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withTrainingBatchSize(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withValidationBatchSize(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withWarmupCosineLRCycles(java.lang.Float)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withWarmupCosineLRWarmupEpochs(java.lang.Integer)"
- "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withWeightDecay(java.lang.Float)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ImageModelSettingsClassification extends ImageModelSettings"
constructors:
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.ImageModelSettingsClassification()"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.ImageModelSettingsClassification()"
  name: "ImageModelSettingsClassification()"
  nameWithType: "ImageModelSettingsClassification.ImageModelSettingsClassification()"
  syntax: "public ImageModelSettingsClassification()"
methods:
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.trainingCropSize()"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.trainingCropSize()"
  name: "trainingCropSize()"
  nameWithType: "ImageModelSettingsClassification.trainingCropSize()"
  summary: "Get the training<wbr>Crop<wbr>Size property: Image crop size that is input to the neural network for the training dataset."
  syntax: "public Integer trainingCropSize()"
  desc: "Get the trainingCropSize property: Image crop size that is input to the neural network for the training dataset. Must be a positive integer."
  returns:
    description: "the trainingCropSize value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.validate()"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.validate()"
  name: "validate()"
  nameWithType: "ImageModelSettingsClassification.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.validationCropSize()"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.validationCropSize()"
  name: "validationCropSize()"
  nameWithType: "ImageModelSettingsClassification.validationCropSize()"
  summary: "Get the validation<wbr>Crop<wbr>Size property: Image crop size that is input to the neural network for the validation dataset."
  syntax: "public Integer validationCropSize()"
  desc: "Get the validationCropSize property: Image crop size that is input to the neural network for the validation dataset. Must be a positive integer."
  returns:
    description: "the validationCropSize value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.validationResizeSize()"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.validationResizeSize()"
  name: "validationResizeSize()"
  nameWithType: "ImageModelSettingsClassification.validationResizeSize()"
  summary: "Get the validation<wbr>Resize<wbr>Size property: Image size to which to resize before cropping for validation dataset."
  syntax: "public Integer validationResizeSize()"
  desc: "Get the validationResizeSize property: Image size to which to resize before cropping for validation dataset. Must be a positive integer."
  returns:
    description: "the validationResizeSize value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.weightedLoss()"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.weightedLoss()"
  name: "weightedLoss()"
  nameWithType: "ImageModelSettingsClassification.weightedLoss()"
  summary: "Get the weighted<wbr>Loss property: Weighted loss."
  syntax: "public Integer weightedLoss()"
  desc: "Get the weightedLoss property: Weighted loss. The accepted values are 0 for no weighted loss. 1 for weighted loss with sqrt.(class\\_weights). 2 for weighted loss with class\\_weights. Must be 0 or 1 or 2."
  returns:
    description: "the weightedLoss value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withAdvancedSettings(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withAdvancedSettings(String advancedSettings)"
  name: "withAdvancedSettings(String advancedSettings)"
  nameWithType: "ImageModelSettingsClassification.withAdvancedSettings(String advancedSettings)"
  summary: "Set the advanced<wbr>Settings property: Settings for advanced scenarios."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withAdvancedSettings(java.lang.String)"
  parameters:
  - name: "advancedSettings"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withAdvancedSettings(String advancedSettings)"
  desc: "Set the advancedSettings property: Settings for advanced scenarios."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withAmsGradient(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withAmsGradient(Boolean amsGradient)"
  name: "withAmsGradient(Boolean amsGradient)"
  nameWithType: "ImageModelSettingsClassification.withAmsGradient(Boolean amsGradient)"
  summary: "Set the ams<wbr>Gradient property: Enable AMSGrad when optimizer is 'adam' or 'adamw'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withAmsGradient(java.lang.Boolean)"
  parameters:
  - name: "amsGradient"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withAmsGradient(Boolean amsGradient)"
  desc: "Set the amsGradient property: Enable AMSGrad when optimizer is 'adam' or 'adamw'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withAugmentations(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withAugmentations(String augmentations)"
  name: "withAugmentations(String augmentations)"
  nameWithType: "ImageModelSettingsClassification.withAugmentations(String augmentations)"
  summary: "Set the augmentations property: Settings for using Augmentations."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withAugmentations(java.lang.String)"
  parameters:
  - name: "augmentations"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withAugmentations(String augmentations)"
  desc: "Set the augmentations property: Settings for using Augmentations."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withBeta1(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withBeta1(Float beta1)"
  name: "withBeta1(Float beta1)"
  nameWithType: "ImageModelSettingsClassification.withBeta1(Float beta1)"
  summary: "Set the beta1 property: Value of 'beta1' when optimizer is 'adam' or 'adamw'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withBeta1(java.lang.Float)"
  parameters:
  - name: "beta1"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withBeta1(Float beta1)"
  desc: "Set the beta1 property: Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range \\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withBeta2(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withBeta2(Float beta2)"
  name: "withBeta2(Float beta2)"
  nameWithType: "ImageModelSettingsClassification.withBeta2(Float beta2)"
  summary: "Set the beta2 property: Value of 'beta2' when optimizer is 'adam' or 'adamw'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withBeta2(java.lang.Float)"
  parameters:
  - name: "beta2"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withBeta2(Float beta2)"
  desc: "Set the beta2 property: Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range \\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointDatasetId(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointDatasetId(String checkpointDatasetId)"
  name: "withCheckpointDatasetId(String checkpointDatasetId)"
  nameWithType: "ImageModelSettingsClassification.withCheckpointDatasetId(String checkpointDatasetId)"
  summary: "Set the checkpoint<wbr>Dataset<wbr>Id property: File<wbr>Dataset id for pretrained checkpoint(s) for incremental training."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointDatasetId(java.lang.String)"
  parameters:
  - name: "checkpointDatasetId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withCheckpointDatasetId(String checkpointDatasetId)"
  desc: "Set the checkpointDatasetId property: FileDataset id for pretrained checkpoint(s) for incremental training. Make sure to pass CheckpointFilename along with CheckpointDatasetId."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointFilename(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointFilename(String checkpointFilename)"
  name: "withCheckpointFilename(String checkpointFilename)"
  nameWithType: "ImageModelSettingsClassification.withCheckpointFilename(String checkpointFilename)"
  summary: "Set the checkpoint<wbr>Filename property: The pretrained checkpoint filename in File<wbr>Dataset for incremental training."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointFilename(java.lang.String)"
  parameters:
  - name: "checkpointFilename"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withCheckpointFilename(String checkpointFilename)"
  desc: "Set the checkpointFilename property: The pretrained checkpoint filename in FileDataset for incremental training. Make sure to pass CheckpointDatasetId along with CheckpointFilename."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointFrequency(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointFrequency(Integer checkpointFrequency)"
  name: "withCheckpointFrequency(Integer checkpointFrequency)"
  nameWithType: "ImageModelSettingsClassification.withCheckpointFrequency(Integer checkpointFrequency)"
  summary: "Set the checkpoint<wbr>Frequency property: Frequency to store model checkpoints."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointFrequency(java.lang.Integer)"
  parameters:
  - name: "checkpointFrequency"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withCheckpointFrequency(Integer checkpointFrequency)"
  desc: "Set the checkpointFrequency property: Frequency to store model checkpoints. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointRunId(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withCheckpointRunId(String checkpointRunId)"
  name: "withCheckpointRunId(String checkpointRunId)"
  nameWithType: "ImageModelSettingsClassification.withCheckpointRunId(String checkpointRunId)"
  summary: "Set the checkpoint<wbr>Run<wbr>Id property: The id of a previous run that has a pretrained checkpoint for incremental training."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withCheckpointRunId(java.lang.String)"
  parameters:
  - name: "checkpointRunId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withCheckpointRunId(String checkpointRunId)"
  desc: "Set the checkpointRunId property: The id of a previous run that has a pretrained checkpoint for incremental training."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withDistributed(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withDistributed(Boolean distributed)"
  name: "withDistributed(Boolean distributed)"
  nameWithType: "ImageModelSettingsClassification.withDistributed(Boolean distributed)"
  summary: "Set the distributed property: Whether to use distributed training."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withDistributed(java.lang.Boolean)"
  parameters:
  - name: "distributed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withDistributed(Boolean distributed)"
  desc: "Set the distributed property: Whether to use distributed training."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEarlyStopping(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEarlyStopping(Boolean earlyStopping)"
  name: "withEarlyStopping(Boolean earlyStopping)"
  nameWithType: "ImageModelSettingsClassification.withEarlyStopping(Boolean earlyStopping)"
  summary: "Set the early<wbr>Stopping property: Enable early stopping logic during training."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEarlyStopping(java.lang.Boolean)"
  parameters:
  - name: "earlyStopping"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withEarlyStopping(Boolean earlyStopping)"
  desc: "Set the earlyStopping property: Enable early stopping logic during training."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEarlyStoppingDelay(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEarlyStoppingDelay(Integer earlyStoppingDelay)"
  name: "withEarlyStoppingDelay(Integer earlyStoppingDelay)"
  nameWithType: "ImageModelSettingsClassification.withEarlyStoppingDelay(Integer earlyStoppingDelay)"
  summary: "Set the early<wbr>Stopping<wbr>Delay property: Minimum number of epochs or validation evaluations to wait before primary metric improvement is tracked for early stopping."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEarlyStoppingDelay(java.lang.Integer)"
  parameters:
  - name: "earlyStoppingDelay"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withEarlyStoppingDelay(Integer earlyStoppingDelay)"
  desc: "Set the earlyStoppingDelay property: Minimum number of epochs or validation evaluations to wait before primary metric improvement is tracked for early stopping. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEarlyStoppingPatience(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEarlyStoppingPatience(Integer earlyStoppingPatience)"
  name: "withEarlyStoppingPatience(Integer earlyStoppingPatience)"
  nameWithType: "ImageModelSettingsClassification.withEarlyStoppingPatience(Integer earlyStoppingPatience)"
  summary: "Set the early<wbr>Stopping<wbr>Patience property: Minimum number of epochs or validation evaluations with no primary metric improvement before the run is stopped."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEarlyStoppingPatience(java.lang.Integer)"
  parameters:
  - name: "earlyStoppingPatience"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withEarlyStoppingPatience(Integer earlyStoppingPatience)"
  desc: "Set the earlyStoppingPatience property: Minimum number of epochs or validation evaluations with no primary metric improvement before the run is stopped. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEnableOnnxNormalization(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEnableOnnxNormalization(Boolean enableOnnxNormalization)"
  name: "withEnableOnnxNormalization(Boolean enableOnnxNormalization)"
  nameWithType: "ImageModelSettingsClassification.withEnableOnnxNormalization(Boolean enableOnnxNormalization)"
  summary: "Set the enable<wbr>Onnx<wbr>Normalization property: Enable normalization when exporting ONNX model."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEnableOnnxNormalization(java.lang.Boolean)"
  parameters:
  - name: "enableOnnxNormalization"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withEnableOnnxNormalization(Boolean enableOnnxNormalization)"
  desc: "Set the enableOnnxNormalization property: Enable normalization when exporting ONNX model."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEvaluationFrequency(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withEvaluationFrequency(Integer evaluationFrequency)"
  name: "withEvaluationFrequency(Integer evaluationFrequency)"
  nameWithType: "ImageModelSettingsClassification.withEvaluationFrequency(Integer evaluationFrequency)"
  summary: "Set the evaluation<wbr>Frequency property: Frequency to evaluate validation dataset to get metric scores."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withEvaluationFrequency(java.lang.Integer)"
  parameters:
  - name: "evaluationFrequency"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withEvaluationFrequency(Integer evaluationFrequency)"
  desc: "Set the evaluationFrequency property: Frequency to evaluate validation dataset to get metric scores. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withGradientAccumulationStep(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withGradientAccumulationStep(Integer gradientAccumulationStep)"
  name: "withGradientAccumulationStep(Integer gradientAccumulationStep)"
  nameWithType: "ImageModelSettingsClassification.withGradientAccumulationStep(Integer gradientAccumulationStep)"
  summary: "Set the gradient<wbr>Accumulation<wbr>Step property: Gradient accumulation means running a configured number of \"Grad<wbr>Accumulation<wbr>Step\"\\\\ steps without updating the model weights while accumulating the gradients of those steps, and then using the accumulated gradients to compute the weight updates."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withGradientAccumulationStep(java.lang.Integer)"
  parameters:
  - name: "gradientAccumulationStep"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withGradientAccumulationStep(Integer gradientAccumulationStep)"
  desc: "Set the gradientAccumulationStep property: Gradient accumulation means running a configured number of \"GradAccumulationStep\"\\\\ steps without updating the model weights while accumulating the gradients of those steps, and then using the accumulated gradients to compute the weight updates. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withLayersToFreeze(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withLayersToFreeze(Integer layersToFreeze)"
  name: "withLayersToFreeze(Integer layersToFreeze)"
  nameWithType: "ImageModelSettingsClassification.withLayersToFreeze(Integer layersToFreeze)"
  summary: "Set the layers<wbr>ToFreeze property: Number of layers to freeze for the model."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withLayersToFreeze(java.lang.Integer)"
  parameters:
  - name: "layersToFreeze"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withLayersToFreeze(Integer layersToFreeze)"
  desc: "Set the layersToFreeze property: Number of layers to freeze for the model. Must be a positive integer. For instance, passing 2 as value for 'seresnext' means freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withLearningRate(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withLearningRate(Float learningRate)"
  name: "withLearningRate(Float learningRate)"
  nameWithType: "ImageModelSettingsClassification.withLearningRate(Float learningRate)"
  summary: "Set the learning<wbr>Rate property: Initial learning rate."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withLearningRate(java.lang.Float)"
  parameters:
  - name: "learningRate"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withLearningRate(Float learningRate)"
  desc: "Set the learningRate property: Initial learning rate. Must be a float in the range \\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withLearningRateScheduler(com.azure.resourcemanager.machinelearning.models.LearningRateScheduler)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withLearningRateScheduler(LearningRateScheduler learningRateScheduler)"
  name: "withLearningRateScheduler(LearningRateScheduler learningRateScheduler)"
  nameWithType: "ImageModelSettingsClassification.withLearningRateScheduler(LearningRateScheduler learningRateScheduler)"
  summary: "Set the learning<wbr>Rate<wbr>Scheduler property: Type of learning rate scheduler."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withLearningRateScheduler(com.azure.resourcemanager.machinelearning.models.LearningRateScheduler)"
  parameters:
  - name: "learningRateScheduler"
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.LearningRateScheduler?alt=com.azure.resourcemanager.machinelearning.models.LearningRateScheduler&text=LearningRateScheduler\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withLearningRateScheduler(LearningRateScheduler learningRateScheduler)"
  desc: "Set the learningRateScheduler property: Type of learning rate scheduler. Must be 'warmup\\_cosine' or 'step'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withModelName(java.lang.String)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withModelName(String modelName)"
  name: "withModelName(String modelName)"
  nameWithType: "ImageModelSettingsClassification.withModelName(String modelName)"
  summary: "Set the model<wbr>Name property: Name of the model to use for training."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withModelName(java.lang.String)"
  parameters:
  - name: "modelName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withModelName(String modelName)"
  desc: "Set the modelName property: Name of the model to use for training. For more information on the available models please visit the official documentation: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withMomentum(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withMomentum(Float momentum)"
  name: "withMomentum(Float momentum)"
  nameWithType: "ImageModelSettingsClassification.withMomentum(Float momentum)"
  summary: "Set the momentum property: Value of momentum when optimizer is 'sgd'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withMomentum(java.lang.Float)"
  parameters:
  - name: "momentum"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withMomentum(Float momentum)"
  desc: "Set the momentum property: Value of momentum when optimizer is 'sgd'. Must be a float in the range \\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withNesterov(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withNesterov(Boolean nesterov)"
  name: "withNesterov(Boolean nesterov)"
  nameWithType: "ImageModelSettingsClassification.withNesterov(Boolean nesterov)"
  summary: "Set the nesterov property: Enable nesterov when optimizer is 'sgd'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withNesterov(java.lang.Boolean)"
  parameters:
  - name: "nesterov"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withNesterov(Boolean nesterov)"
  desc: "Set the nesterov property: Enable nesterov when optimizer is 'sgd'."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withNumberOfEpochs(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withNumberOfEpochs(Integer numberOfEpochs)"
  name: "withNumberOfEpochs(Integer numberOfEpochs)"
  nameWithType: "ImageModelSettingsClassification.withNumberOfEpochs(Integer numberOfEpochs)"
  summary: "Set the number<wbr>OfEpochs property: Number of training epochs."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withNumberOfEpochs(java.lang.Integer)"
  parameters:
  - name: "numberOfEpochs"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withNumberOfEpochs(Integer numberOfEpochs)"
  desc: "Set the numberOfEpochs property: Number of training epochs. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withNumberOfWorkers(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withNumberOfWorkers(Integer numberOfWorkers)"
  name: "withNumberOfWorkers(Integer numberOfWorkers)"
  nameWithType: "ImageModelSettingsClassification.withNumberOfWorkers(Integer numberOfWorkers)"
  summary: "Set the number<wbr>OfWorkers property: Number of data loader workers."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withNumberOfWorkers(java.lang.Integer)"
  parameters:
  - name: "numberOfWorkers"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withNumberOfWorkers(Integer numberOfWorkers)"
  desc: "Set the numberOfWorkers property: Number of data loader workers. Must be a non-negative integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withOptimizer(com.azure.resourcemanager.machinelearning.models.StochasticOptimizer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withOptimizer(StochasticOptimizer optimizer)"
  name: "withOptimizer(StochasticOptimizer optimizer)"
  nameWithType: "ImageModelSettingsClassification.withOptimizer(StochasticOptimizer optimizer)"
  summary: "Set the optimizer property: Type of optimizer."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withOptimizer(com.azure.resourcemanager.machinelearning.models.StochasticOptimizer)"
  parameters:
  - name: "optimizer"
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.StochasticOptimizer?alt=com.azure.resourcemanager.machinelearning.models.StochasticOptimizer&text=StochasticOptimizer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withOptimizer(StochasticOptimizer optimizer)"
  desc: "Set the optimizer property: Type of optimizer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withRandomSeed(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withRandomSeed(Integer randomSeed)"
  name: "withRandomSeed(Integer randomSeed)"
  nameWithType: "ImageModelSettingsClassification.withRandomSeed(Integer randomSeed)"
  summary: "Set the random<wbr>Seed property: Random seed to be used when using deterministic training."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withRandomSeed(java.lang.Integer)"
  parameters:
  - name: "randomSeed"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withRandomSeed(Integer randomSeed)"
  desc: "Set the randomSeed property: Random seed to be used when using deterministic training."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withSplitRatio(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withSplitRatio(Float splitRatio)"
  name: "withSplitRatio(Float splitRatio)"
  nameWithType: "ImageModelSettingsClassification.withSplitRatio(Float splitRatio)"
  summary: "Set the split<wbr>Ratio property: If validation data is not defined, this specifies the split ratio for splitting train data into random train and validation subsets."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withSplitRatio(java.lang.Float)"
  parameters:
  - name: "splitRatio"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withSplitRatio(Float splitRatio)"
  desc: "Set the splitRatio property: If validation data is not defined, this specifies the split ratio for splitting train data into random train and validation subsets. Must be a float in the range \\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withStepLRGamma(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withStepLRGamma(Float stepLRGamma)"
  name: "withStepLRGamma(Float stepLRGamma)"
  nameWithType: "ImageModelSettingsClassification.withStepLRGamma(Float stepLRGamma)"
  summary: "Set the step<wbr>LRGamma property: Value of gamma when learning rate scheduler is 'step'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withStepLRGamma(java.lang.Float)"
  parameters:
  - name: "stepLRGamma"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withStepLRGamma(Float stepLRGamma)"
  desc: "Set the stepLRGamma property: Value of gamma when learning rate scheduler is 'step'. Must be a float in the range \\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withStepLRStepSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withStepLRStepSize(Integer stepLRStepSize)"
  name: "withStepLRStepSize(Integer stepLRStepSize)"
  nameWithType: "ImageModelSettingsClassification.withStepLRStepSize(Integer stepLRStepSize)"
  summary: "Set the step<wbr>LRStep<wbr>Size property: Value of step size when learning rate scheduler is 'step'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withStepLRStepSize(java.lang.Integer)"
  parameters:
  - name: "stepLRStepSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withStepLRStepSize(Integer stepLRStepSize)"
  desc: "Set the stepLRStepSize property: Value of step size when learning rate scheduler is 'step'. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withTrainingBatchSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withTrainingBatchSize(Integer trainingBatchSize)"
  name: "withTrainingBatchSize(Integer trainingBatchSize)"
  nameWithType: "ImageModelSettingsClassification.withTrainingBatchSize(Integer trainingBatchSize)"
  summary: "Set the training<wbr>Batch<wbr>Size property: Training batch size."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withTrainingBatchSize(java.lang.Integer)"
  parameters:
  - name: "trainingBatchSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withTrainingBatchSize(Integer trainingBatchSize)"
  desc: "Set the trainingBatchSize property: Training batch size. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withTrainingCropSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withTrainingCropSize(Integer trainingCropSize)"
  name: "withTrainingCropSize(Integer trainingCropSize)"
  nameWithType: "ImageModelSettingsClassification.withTrainingCropSize(Integer trainingCropSize)"
  summary: "Set the training<wbr>Crop<wbr>Size property: Image crop size that is input to the neural network for the training dataset."
  parameters:
  - description: "the trainingCropSize value to set."
    name: "trainingCropSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withTrainingCropSize(Integer trainingCropSize)"
  desc: "Set the trainingCropSize property: Image crop size that is input to the neural network for the training dataset. Must be a positive integer."
  returns:
    description: "the ImageModelSettingsClassification object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withValidationBatchSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withValidationBatchSize(Integer validationBatchSize)"
  name: "withValidationBatchSize(Integer validationBatchSize)"
  nameWithType: "ImageModelSettingsClassification.withValidationBatchSize(Integer validationBatchSize)"
  summary: "Set the validation<wbr>Batch<wbr>Size property: Validation batch size."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withValidationBatchSize(java.lang.Integer)"
  parameters:
  - name: "validationBatchSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withValidationBatchSize(Integer validationBatchSize)"
  desc: "Set the validationBatchSize property: Validation batch size. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withValidationCropSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withValidationCropSize(Integer validationCropSize)"
  name: "withValidationCropSize(Integer validationCropSize)"
  nameWithType: "ImageModelSettingsClassification.withValidationCropSize(Integer validationCropSize)"
  summary: "Set the validation<wbr>Crop<wbr>Size property: Image crop size that is input to the neural network for the validation dataset."
  parameters:
  - description: "the validationCropSize value to set."
    name: "validationCropSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withValidationCropSize(Integer validationCropSize)"
  desc: "Set the validationCropSize property: Image crop size that is input to the neural network for the validation dataset. Must be a positive integer."
  returns:
    description: "the ImageModelSettingsClassification object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withValidationResizeSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withValidationResizeSize(Integer validationResizeSize)"
  name: "withValidationResizeSize(Integer validationResizeSize)"
  nameWithType: "ImageModelSettingsClassification.withValidationResizeSize(Integer validationResizeSize)"
  summary: "Set the validation<wbr>Resize<wbr>Size property: Image size to which to resize before cropping for validation dataset."
  parameters:
  - description: "the validationResizeSize value to set."
    name: "validationResizeSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withValidationResizeSize(Integer validationResizeSize)"
  desc: "Set the validationResizeSize property: Image size to which to resize before cropping for validation dataset. Must be a positive integer."
  returns:
    description: "the ImageModelSettingsClassification object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWarmupCosineLRCycles(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWarmupCosineLRCycles(Float warmupCosineLRCycles)"
  name: "withWarmupCosineLRCycles(Float warmupCosineLRCycles)"
  nameWithType: "ImageModelSettingsClassification.withWarmupCosineLRCycles(Float warmupCosineLRCycles)"
  summary: "Set the warmup<wbr>Cosine<wbr>LRCycles property: Value of cosine cycle when learning rate scheduler is 'warmup\\_cosine'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withWarmupCosineLRCycles(java.lang.Float)"
  parameters:
  - name: "warmupCosineLRCycles"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withWarmupCosineLRCycles(Float warmupCosineLRCycles)"
  desc: "Set the warmupCosineLRCycles property: Value of cosine cycle when learning rate scheduler is 'warmup\\_cosine'. Must be a float in the range \\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWarmupCosineLRWarmupEpochs(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWarmupCosineLRWarmupEpochs(Integer warmupCosineLRWarmupEpochs)"
  name: "withWarmupCosineLRWarmupEpochs(Integer warmupCosineLRWarmupEpochs)"
  nameWithType: "ImageModelSettingsClassification.withWarmupCosineLRWarmupEpochs(Integer warmupCosineLRWarmupEpochs)"
  summary: "Set the warmup<wbr>Cosine<wbr>LRWarmup<wbr>Epochs property: Value of warmup epochs when learning rate scheduler is 'warmup\\_cosine'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withWarmupCosineLRWarmupEpochs(java.lang.Integer)"
  parameters:
  - name: "warmupCosineLRWarmupEpochs"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withWarmupCosineLRWarmupEpochs(Integer warmupCosineLRWarmupEpochs)"
  desc: "Set the warmupCosineLRWarmupEpochs property: Value of warmup epochs when learning rate scheduler is 'warmup\\_cosine'. Must be a positive integer."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWeightDecay(java.lang.Float)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWeightDecay(Float weightDecay)"
  name: "withWeightDecay(Float weightDecay)"
  nameWithType: "ImageModelSettingsClassification.withWeightDecay(Float weightDecay)"
  summary: "Set the weight<wbr>Decay property: Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'."
  overridden: "com.azure.resourcemanager.machinelearning.models.ImageModelSettings.withWeightDecay(java.lang.Float)"
  parameters:
  - name: "weightDecay"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withWeightDecay(Float weightDecay)"
  desc: "Set the weightDecay property: Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range\\[0, 1\\]."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWeightedLoss(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification.withWeightedLoss(Integer weightedLoss)"
  name: "withWeightedLoss(Integer weightedLoss)"
  nameWithType: "ImageModelSettingsClassification.withWeightedLoss(Integer weightedLoss)"
  summary: "Set the weighted<wbr>Loss property: Weighted loss."
  parameters:
  - description: "the weightedLoss value to set."
    name: "weightedLoss"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ImageModelSettingsClassification withWeightedLoss(Integer weightedLoss)"
  desc: "Set the weightedLoss property: Weighted loss. The accepted values are 0 for no weighted loss. 1 for weighted loss with sqrt.(class\\_weights). 2 for weighted loss with class\\_weights. Must be 0 or 1 or 2."
  returns:
    description: "the ImageModelSettingsClassification object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification?alt=com.azure.resourcemanager.machinelearning.models.ImageModelSettingsClassification&text=ImageModelSettingsClassification\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Settings used for training the model. For more information on the available settings please visit the official documentation: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models."
metadata: {}
package: "com.azure.resourcemanager.machinelearning.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-machinelearning:1.0.0-beta.2
