### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.RestSink"
fullName: "com.azure.resourcemanager.datafactory.models.RestSink"
name: "RestSink"
nameWithType: "RestSink"
summary: "A copy activity Rest service Sink."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.CopySink?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.CopySink.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.CopySink.disableMetricsCollection()"
- "com.azure.resourcemanager.datafactory.models.CopySink.maxConcurrentConnections()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryCount()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryWait()"
- "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
- "com.azure.resourcemanager.datafactory.models.CopySink.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchSize()"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchTimeout()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RestSink extends CopySink"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.RestSink()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.RestSink()"
  name: "RestSink()"
  nameWithType: "RestSink.RestSink()"
  syntax: "public RestSink()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.additionalHeaders()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.additionalHeaders()"
  name: "additionalHeaders()"
  nameWithType: "RestSink.additionalHeaders()"
  summary: "Get the additional<wbr>Headers property: The additional HTTP headers in the request to the RESTful API."
  syntax: "public Object additionalHeaders()"
  desc: "Get the additionalHeaders property: The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
  returns:
    description: "the additionalHeaders value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.httpCompressionType()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.httpCompressionType()"
  name: "httpCompressionType()"
  nameWithType: "RestSink.httpCompressionType()"
  summary: "Get the http<wbr>Compression<wbr>Type property: Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None."
  syntax: "public Object httpCompressionType()"
  desc: "Get the httpCompressionType property: Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None. And The Only Supported option is Gzip."
  returns:
    description: "the httpCompressionType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.httpRequestTimeout()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.httpRequestTimeout()"
  name: "httpRequestTimeout()"
  nameWithType: "RestSink.httpRequestTimeout()"
  summary: "Get the http<wbr>Request<wbr>Timeout property: The timeout (Time<wbr>Span) to get an HTTP response."
  syntax: "public Object httpRequestTimeout()"
  desc: "Get the httpRequestTimeout property: The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    description: "the httpRequestTimeout value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.requestInterval()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.requestInterval()"
  name: "requestInterval()"
  nameWithType: "RestSink.requestInterval()"
  summary: "Get the request<wbr>Interval property: The time to await before sending next request, in milliseconds."
  syntax: "public Object requestInterval()"
  desc: "Get the requestInterval property: The time to await before sending next request, in milliseconds."
  returns:
    description: "the requestInterval value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.requestMethod()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.requestMethod()"
  name: "requestMethod()"
  nameWithType: "RestSink.requestMethod()"
  summary: "Get the request<wbr>Method property: The HTTP method used to call the RESTful API."
  syntax: "public Object requestMethod()"
  desc: "Get the requestMethod property: The HTTP method used to call the RESTful API. The default is POST. Type: string (or Expression with resultType string)."
  returns:
    description: "the requestMethod value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.validate()"
  name: "validate()"
  nameWithType: "RestSink.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withAdditionalHeaders(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withAdditionalHeaders(Object additionalHeaders)"
  name: "withAdditionalHeaders(Object additionalHeaders)"
  nameWithType: "RestSink.withAdditionalHeaders(Object additionalHeaders)"
  summary: "Set the additional<wbr>Headers property: The additional HTTP headers in the request to the RESTful API."
  parameters:
  - description: "the additionalHeaders value to set."
    name: "additionalHeaders"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withAdditionalHeaders(Object additionalHeaders)"
  desc: "Set the additionalHeaders property: The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withDisableMetricsCollection(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  name: "withDisableMetricsCollection(Object disableMetricsCollection)"
  nameWithType: "RestSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  summary: "Set the disable<wbr>Metrics<wbr>Collection property: If true, disable data store metrics collection."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
  parameters:
  - name: "disableMetricsCollection"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withDisableMetricsCollection(Object disableMetricsCollection)"
  desc: "Set the disableMetricsCollection property: If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withHttpCompressionType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withHttpCompressionType(Object httpCompressionType)"
  name: "withHttpCompressionType(Object httpCompressionType)"
  nameWithType: "RestSink.withHttpCompressionType(Object httpCompressionType)"
  summary: "Set the http<wbr>Compression<wbr>Type property: Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None."
  parameters:
  - description: "the httpCompressionType value to set."
    name: "httpCompressionType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withHttpCompressionType(Object httpCompressionType)"
  desc: "Set the httpCompressionType property: Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None. And The Only Supported option is Gzip."
  returns:
    description: "the RestSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withHttpRequestTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withHttpRequestTimeout(Object httpRequestTimeout)"
  name: "withHttpRequestTimeout(Object httpRequestTimeout)"
  nameWithType: "RestSink.withHttpRequestTimeout(Object httpRequestTimeout)"
  summary: "Set the http<wbr>Request<wbr>Timeout property: The timeout (Time<wbr>Span) to get an HTTP response."
  parameters:
  - description: "the httpRequestTimeout value to set."
    name: "httpRequestTimeout"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withHttpRequestTimeout(Object httpRequestTimeout)"
  desc: "Set the httpRequestTimeout property: The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    description: "the RestSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withMaxConcurrentConnections(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  name: "withMaxConcurrentConnections(Object maxConcurrentConnections)"
  nameWithType: "RestSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  summary: "Set the max<wbr>Concurrent<wbr>Connections property: The maximum concurrent connection count for the sink data store."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
  parameters:
  - name: "maxConcurrentConnections"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withMaxConcurrentConnections(Object maxConcurrentConnections)"
  desc: "Set the maxConcurrentConnections property: The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withRequestInterval(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withRequestInterval(Object requestInterval)"
  name: "withRequestInterval(Object requestInterval)"
  nameWithType: "RestSink.withRequestInterval(Object requestInterval)"
  summary: "Set the request<wbr>Interval property: The time to await before sending next request, in milliseconds."
  parameters:
  - description: "the requestInterval value to set."
    name: "requestInterval"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withRequestInterval(Object requestInterval)"
  desc: "Set the requestInterval property: The time to await before sending next request, in milliseconds."
  returns:
    description: "the RestSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withRequestMethod(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withRequestMethod(Object requestMethod)"
  name: "withRequestMethod(Object requestMethod)"
  nameWithType: "RestSink.withRequestMethod(Object requestMethod)"
  summary: "Set the request<wbr>Method property: The HTTP method used to call the RESTful API."
  parameters:
  - description: "the requestMethod value to set."
    name: "requestMethod"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withRequestMethod(Object requestMethod)"
  desc: "Set the requestMethod property: The HTTP method used to call the RESTful API. The default is POST. Type: string (or Expression with resultType string)."
  returns:
    description: "the RestSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withSinkRetryCount(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withSinkRetryCount(Object sinkRetryCount)"
  name: "withSinkRetryCount(Object sinkRetryCount)"
  nameWithType: "RestSink.withSinkRetryCount(Object sinkRetryCount)"
  summary: "Set the sink<wbr>Retry<wbr>Count property: Sink retry count."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
  parameters:
  - name: "sinkRetryCount"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withSinkRetryCount(Object sinkRetryCount)"
  desc: "Set the sinkRetryCount property: Sink retry count. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withSinkRetryWait(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withSinkRetryWait(Object sinkRetryWait)"
  name: "withSinkRetryWait(Object sinkRetryWait)"
  nameWithType: "RestSink.withSinkRetryWait(Object sinkRetryWait)"
  summary: "Set the sink<wbr>Retry<wbr>Wait property: Sink retry wait."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
  parameters:
  - name: "sinkRetryWait"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withSinkRetryWait(Object sinkRetryWait)"
  desc: "Set the sinkRetryWait property: Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withWriteBatchSize(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withWriteBatchSize(Object writeBatchSize)"
  name: "withWriteBatchSize(Object writeBatchSize)"
  nameWithType: "RestSink.withWriteBatchSize(Object writeBatchSize)"
  summary: "Set the write<wbr>Batch<wbr>Size property: Write batch size."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
  parameters:
  - name: "writeBatchSize"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withWriteBatchSize(Object writeBatchSize)"
  desc: "Set the writeBatchSize property: Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.RestSink.withWriteBatchTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.RestSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  name: "withWriteBatchTimeout(Object writeBatchTimeout)"
  nameWithType: "RestSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  summary: "Set the write<wbr>Batch<wbr>Timeout property: Write batch timeout."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
  parameters:
  - name: "writeBatchTimeout"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RestSink withWriteBatchTimeout(Object writeBatchTimeout)"
  desc: "Set the writeBatchTimeout property: Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.RestSink?alt=com.azure.resourcemanager.datafactory.models.RestSink&text=RestSink\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A copy activity Rest service Sink."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
