### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Comparators.isInStrictOrder*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Comparators.<T>isInStrictOrder"
name: "<T>isInStrictOrder"
nameWithType: "Comparators.<T>isInStrictOrder"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Comparators.<T>isInStrictOrder(java.lang.Iterable<? extends T>,java.util.Comparator<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Comparators.<T>isInStrictOrder(Iterable<? extends T> iterable, Comparator<T> comparator)"
  name: "<T>isInStrictOrder(Iterable<? extends T> iterable, Comparator<T> comparator)"
  nameWithType: "Comparators.<T>isInStrictOrder(Iterable<? extends T> iterable, Comparator<T> comparator)"
  summary: "Returns `true` if each element in `iterable` after the first is *strictly* greater than the element that preceded it, according to the specified comparator. Note that this is always true when the iterable has fewer than two elements."
  parameters:
  - name: "iterable"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static boolean <T>isInStrictOrder(Iterable<? extends T> iterable, Comparator<T> comparator)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
