### YamlMime:JavaMember
uid: "com.azure.communication.identity.implementation.CommunicationIdentitiesImpl.create*"
fullName: "com.azure.communication.identity.implementation.CommunicationIdentitiesImpl.create"
name: "create"
nameWithType: "CommunicationIdentitiesImpl.create"
members:
- uid: "com.azure.communication.identity.implementation.CommunicationIdentitiesImpl.create(com.azure.communication.identity.implementation.models.CommunicationIdentityCreateRequest)"
  fullName: "com.azure.communication.identity.implementation.CommunicationIdentitiesImpl.create(CommunicationIdentityCreateRequest body)"
  name: "create(CommunicationIdentityCreateRequest body)"
  nameWithType: "CommunicationIdentitiesImpl.create(CommunicationIdentityCreateRequest body)"
  summary: "Create a new identity, and optionally, an access token."
  parameters:
  - description: "If specified, creates also a Communication Identity access token associated with the identity and\n     containing the requested scopes."
    name: "body"
    type: "<xref href=\"com.azure.communication.identity.implementation.models.CommunicationIdentityCreateRequest?alt=com.azure.communication.identity.implementation.models.CommunicationIdentityCreateRequest&text=CommunicationIdentityCreateRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationIdentityAccessTokenResult create(CommunicationIdentityCreateRequest body)"
  returns:
    description: "a communication identity with access token."
    type: "<xref href=\"com.azure.communication.identity.implementation.models.CommunicationIdentityAccessTokenResult?alt=com.azure.communication.identity.implementation.models.CommunicationIdentityAccessTokenResult&text=CommunicationIdentityAccessTokenResult\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.communication.identity.implementation"
artifact: com.azure:azure-communication-identity:1.2.0-beta.1
