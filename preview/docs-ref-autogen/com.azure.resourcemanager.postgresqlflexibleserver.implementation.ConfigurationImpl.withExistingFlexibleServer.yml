### YamlMime:JavaMember
uid: "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ConfigurationImpl.withExistingFlexibleServer*"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ConfigurationImpl.withExistingFlexibleServer"
name: "withExistingFlexibleServer"
nameWithType: "ConfigurationImpl.withExistingFlexibleServer"
members:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ConfigurationImpl.withExistingFlexibleServer(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ConfigurationImpl.withExistingFlexibleServer(String resourceGroupName, String serverName)"
  name: "withExistingFlexibleServer(String resourceGroupName, String serverName)"
  nameWithType: "ConfigurationImpl.withExistingFlexibleServer(String resourceGroupName, String serverName)"
  summary: "Specifies resourceGroupName, serverName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationImpl withExistingFlexibleServer(String resourceGroupName, String serverName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.implementation.ConfigurationImpl?alt=com.azure.resourcemanager.postgresqlflexibleserver.implementation.ConfigurationImpl&text=ConfigurationImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.0.0-beta.4
