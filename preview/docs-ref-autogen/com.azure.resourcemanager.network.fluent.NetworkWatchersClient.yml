### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  id: NetworkWatchersClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent
  children:
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.NetworkWatchersClient(com.azure.resourcemanager.network.NetworkManagementClient)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list()
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync()
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync()
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  - com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  langs:
  - java
  name: NetworkWatchersClient
  nameWithType: NetworkWatchersClient
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  type: Class
  package: com.azure.resourcemanager.network.fluent
  summary: An instance of this class provides access to all the operations defined in NetworkWatchers.
  syntax:
    content: public final class NetworkWatchersClient implements InnerSupportsGet<NetworkWatcherInner>, InnerSupportsListing<NetworkWatcherInner>, InnerSupportsDelete<Void>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.NetworkWatchersClient(com.azure.resourcemanager.network.NetworkManagementClient)
  id: NetworkWatchersClient(com.azure.resourcemanager.network.NetworkManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: NetworkWatchersClient(NetworkManagementClient client)
  nameWithType: NetworkWatchersClient.NetworkWatchersClient(NetworkManagementClient client)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.NetworkWatchersClient(NetworkManagementClient client)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.NetworkWatchersClient*
  type: Constructor
  package: com.azure.resourcemanager.network.fluent
  summary: Initializes an instance of NetworkWatchersClient.
  syntax:
    content: public NetworkWatchersClient(NetworkManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.network.NetworkManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  id: beginCheckConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  nameWithType: NetworkWatchersClient.beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public PollerFlux<PollResult<ConnectivityInformationInner>,ConnectivityInformationInner> beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>,com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  id: beginCheckConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public PollerFlux<PollResult<ConnectivityInformationInner>,ConnectivityInformationInner> beginCheckConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>,com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  id: beginCheckConnectivityWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public ConnectivityInformationInner beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  id: beginCheckConnectivityWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public ConnectivityInformationInner beginCheckConnectivityWithoutPolling(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  id: beginCheckConnectivityWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<ConnectivityInformationInner> beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  id: beginCheckConnectivityWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<ConnectivityInformationInner> beginCheckConnectivityWithoutPollingAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  id: beginCheckConnectivityWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<Response<ConnectivityInformationInner>> beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  id: beginCheckConnectivityWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<Response<ConnectivityInformationInner>> beginCheckConnectivityWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.beginDelete(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.beginDelete(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  id: beginGetAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public PollerFlux<PollResult<AzureReachabilityReportInner>,AzureReachabilityReportInner> beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>,com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  id: beginGetAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public PollerFlux<PollResult<AzureReachabilityReportInner>,AzureReachabilityReportInner> beginGetAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>,com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  id: beginGetAzureReachabilityReportWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public AzureReachabilityReportInner beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  id: beginGetAzureReachabilityReportWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public AzureReachabilityReportInner beginGetAzureReachabilityReportWithoutPolling(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  id: beginGetAzureReachabilityReportWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<AzureReachabilityReportInner> beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  id: beginGetAzureReachabilityReportWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<AzureReachabilityReportInner> beginGetAzureReachabilityReportWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  id: beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<Response<AzureReachabilityReportInner>> beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  id: beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<Response<AzureReachabilityReportInner>> beginGetAzureReachabilityReportWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetFlowLogStatus(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<FlowLogInformationInner>,FlowLogInformationInner> beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetFlowLogStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<FlowLogInformationInner>,FlowLogInformationInner> beginGetFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetFlowLogStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetFlowLogStatusWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner beginGetFlowLogStatusWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetFlowLogStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetFlowLogStatusWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> beginGetFlowLogStatusWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetFlowLogStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<FlowLogInformationInner>> beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetFlowLogStatusWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<FlowLogInformationInner>> beginGetFlowLogStatusWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  id: beginGetNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public PollerFlux<PollResult<NetworkConfigurationDiagnosticResponseInner>,NetworkConfigurationDiagnosticResponseInner> beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>,com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  id: beginGetNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public PollerFlux<PollResult<NetworkConfigurationDiagnosticResponseInner>,NetworkConfigurationDiagnosticResponseInner> beginGetNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>,com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  id: beginGetNetworkConfigurationDiagnosticWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public NetworkConfigurationDiagnosticResponseInner beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  id: beginGetNetworkConfigurationDiagnosticWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public NetworkConfigurationDiagnosticResponseInner beginGetNetworkConfigurationDiagnosticWithoutPolling(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  id: beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<NetworkConfigurationDiagnosticResponseInner> beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  id: beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<NetworkConfigurationDiagnosticResponseInner> beginGetNetworkConfigurationDiagnosticWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  id: beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<Response<NetworkConfigurationDiagnosticResponseInner>> beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  id: beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<Response<NetworkConfigurationDiagnosticResponseInner>> beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  id: beginGetNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public PollerFlux<PollResult<NextHopResultInner>,NextHopResultInner> beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>,com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  id: beginGetNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public PollerFlux<PollResult<NextHopResultInner>,NextHopResultInner> beginGetNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>,com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  id: beginGetNextHopWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public NextHopResultInner beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  id: beginGetNextHopWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public NextHopResultInner beginGetNextHopWithoutPolling(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  id: beginGetNextHopWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<NextHopResultInner> beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  id: beginGetNextHopWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<NextHopResultInner> beginGetNextHopWithoutPollingAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  id: beginGetNextHopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<Response<NextHopResultInner>> beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  id: beginGetNextHopWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<Response<NextHopResultInner>> beginGetNextHopWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  id: beginGetTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<TroubleshootingResultInner>,TroubleshootingResultInner> beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>,com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  id: beginGetTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<TroubleshootingResultInner>,TroubleshootingResultInner> beginGetTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>,com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<TroubleshootingResultInner>,TroubleshootingResultInner> beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>,com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<TroubleshootingResultInner>,TroubleshootingResultInner> beginGetTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>,com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetTroubleshootingResultWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public TroubleshootingResultInner beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetTroubleshootingResultWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public TroubleshootingResultInner beginGetTroubleshootingResultWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetTroubleshootingResultWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetTroubleshootingResultWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> beginGetTroubleshootingResultWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetTroubleshootingResultWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<Response<TroubleshootingResultInner>> beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetTroubleshootingResultWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<Response<TroubleshootingResultInner>> beginGetTroubleshootingResultWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  id: beginGetTroubleshootingWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public TroubleshootingResultInner beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  id: beginGetTroubleshootingWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public TroubleshootingResultInner beginGetTroubleshootingWithoutPolling(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  id: beginGetTroubleshootingWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  id: beginGetTroubleshootingWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> beginGetTroubleshootingWithoutPollingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  id: beginGetTroubleshootingWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<Response<TroubleshootingResultInner>> beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  id: beginGetTroubleshootingWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<Response<TroubleshootingResultInner>> beginGetTroubleshootingWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetVMSecurityRules(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public PollerFlux<PollResult<SecurityGroupViewResultInner>,SecurityGroupViewResultInner> beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>,com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetVMSecurityRules(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public PollerFlux<PollResult<SecurityGroupViewResultInner>,SecurityGroupViewResultInner> beginGetVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>,com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetVMSecurityRulesWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public SecurityGroupViewResultInner beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetVMSecurityRulesWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public SecurityGroupViewResultInner beginGetVMSecurityRulesWithoutPolling(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetVMSecurityRulesWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<SecurityGroupViewResultInner> beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetVMSecurityRulesWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<SecurityGroupViewResultInner> beginGetVMSecurityRulesWithoutPollingAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginGetVMSecurityRulesWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<Response<SecurityGroupViewResultInner>> beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginGetVMSecurityRulesWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<Response<SecurityGroupViewResultInner>> beginGetVMSecurityRulesWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  id: beginListAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  nameWithType: NetworkWatchersClient.beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public PollerFlux<PollResult<AvailableProvidersListInner>,AvailableProvidersListInner> beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>,com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  id: beginListAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public PollerFlux<PollResult<AvailableProvidersListInner>,AvailableProvidersListInner> beginListAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>,com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  id: beginListAvailableProvidersWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public AvailableProvidersListInner beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  id: beginListAvailableProvidersWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public AvailableProvidersListInner beginListAvailableProvidersWithoutPolling(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  id: beginListAvailableProvidersWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<AvailableProvidersListInner> beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  id: beginListAvailableProvidersWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<AvailableProvidersListInner> beginListAvailableProvidersWithoutPollingAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  id: beginListAvailableProvidersWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<Response<AvailableProvidersListInner>> beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  id: beginListAvailableProvidersWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<Response<AvailableProvidersListInner>> beginListAvailableProvidersWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  id: beginSetFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<FlowLogInformationInner>,FlowLogInformationInner> beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  id: beginSetFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public PollerFlux<PollResult<FlowLogInformationInner>,FlowLogInformationInner> beginSetFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  id: beginSetFlowLogConfigurationWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  id: beginSetFlowLogConfigurationWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner beginSetFlowLogConfigurationWithoutPolling(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  id: beginSetFlowLogConfigurationWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  id: beginSetFlowLogConfigurationWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> beginSetFlowLogConfigurationWithoutPollingAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  id: beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<FlowLogInformationInner>> beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  id: beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<FlowLogInformationInner>> beginSetFlowLogConfigurationWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  id: beginVerifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public PollerFlux<PollResult<VerificationIpFlowResultInner>,VerificationIpFlowResultInner> beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>,com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  id: beginVerifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public PollerFlux<PollResult<VerificationIpFlowResultInner>,VerificationIpFlowResultInner> beginVerifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>,com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  id: beginVerifyIpFlowWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public VerificationIpFlowResultInner beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  id: beginVerifyIpFlowWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public VerificationIpFlowResultInner beginVerifyIpFlowWithoutPolling(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  id: beginVerifyIpFlowWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<VerificationIpFlowResultInner> beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  id: beginVerifyIpFlowWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<VerificationIpFlowResultInner> beginVerifyIpFlowWithoutPollingAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  id: beginVerifyIpFlowWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<Response<VerificationIpFlowResultInner>> beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  id: beginVerifyIpFlowWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<Response<VerificationIpFlowResultInner>> beginVerifyIpFlowWithoutPollingWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  id: checkConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  nameWithType: NetworkWatchersClient.checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public ConnectivityInformationInner checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  id: checkConnectivity(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public ConnectivityInformationInner checkConnectivity(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  id: checkConnectivityAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  nameWithType: NetworkWatchersClient.checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<ConnectivityInformationInner> checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  id: checkConnectivityAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<ConnectivityInformationInner> checkConnectivityAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  id: checkConnectivityWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  nameWithType: NetworkWatchersClient.checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  id: checkConnectivityWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.ConnectivityParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> checkConnectivityWithResponseAsync(String resourceGroupName, String networkWatcherName, ConnectivityParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.ConnectivityParameters
      description: Parameters that determine how the connectivity check will be performed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information on the connectivity status.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  nameWithType: NetworkWatchersClient.createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: public NetworkWatcherInner createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: Network watcher in a resource group.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  nameWithType: NetworkWatchersClient.createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: public NetworkWatcherInner createOrUpdate(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: Network watcher in a resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  nameWithType: NetworkWatchersClient.createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: public Mono<NetworkWatcherInner> createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: Network watcher in a resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  nameWithType: NetworkWatchersClient.createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: public Mono<NetworkWatcherInner> createOrUpdateAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: Network watcher in a resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  nameWithType: NetworkWatchersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: public Mono<Response<NetworkWatcherInner>> createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: Network watcher in a resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  nameWithType: NetworkWatchersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: public Mono<Response<NetworkWatcherInner>> createOrUpdateWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkWatcherInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: Network watcher in a resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: delete(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.delete(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public void delete(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: delete(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.delete(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public void delete(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.deleteAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.deleteAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified network watcher resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  id: getAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  nameWithType: NetworkWatchersClient.getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public AzureReachabilityReportInner getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  id: getAzureReachabilityReport(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public AzureReachabilityReportInner getAzureReachabilityReport(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  id: getAzureReachabilityReportAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  nameWithType: NetworkWatchersClient.getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<AzureReachabilityReportInner> getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  id: getAzureReachabilityReportAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<AzureReachabilityReportInner> getAzureReachabilityReportAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  id: getAzureReachabilityReportWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  nameWithType: NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  id: getAzureReachabilityReportWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AzureReachabilityReportParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the relative latency score for internet service providers from a specified location to Azure regions.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getAzureReachabilityReportWithResponseAsync(String resourceGroupName, String networkWatcherName, AzureReachabilityReportParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
      description: Geographic and time constraints for Azure reachability report.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the relative latency score for internet service providers from a specified location to Azure regions.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.getByResourceGroup(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: public NetworkWatcherInner getByResourceGroup(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: the specified network watcher by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.getByResourceGroup(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: public NetworkWatcherInner getByResourceGroup(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: the specified network watcher by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.getByResourceGroupAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: public Mono<NetworkWatcherInner> getByResourceGroupAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: the specified network watcher by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.getByResourceGroupAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: public Mono<NetworkWatcherInner> getByResourceGroupAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: the specified network watcher by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName)
  nameWithType: NetworkWatchersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: public Mono<Response<NetworkWatcherInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: the specified network watcher by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  nameWithType: NetworkWatchersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: public Mono<Response<NetworkWatcherInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String networkWatcherName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: the specified network watcher by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus(java.lang.String,java.lang.String,java.lang.String)
  id: getFlowLogStatus(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getFlowLogStatus(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner getFlowLogStatus(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getFlowLogStatusAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getFlowLogStatusAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> getFlowLogStatusAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getFlowLogStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getFlowLogStatusWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Queries status of flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getFlowLogStatusWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource where getting the flow log and traffic analytics (optional) status.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  id: getNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public NetworkConfigurationDiagnosticResponseInner getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  id: getNetworkConfigurationDiagnostic(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public NetworkConfigurationDiagnosticResponseInner getNetworkConfigurationDiagnostic(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  id: getNetworkConfigurationDiagnosticAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<NetworkConfigurationDiagnosticResponseInner> getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  id: getNetworkConfigurationDiagnosticAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<NetworkConfigurationDiagnosticResponseInner> getNetworkConfigurationDiagnosticAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  id: getNetworkConfigurationDiagnosticWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  id: getNetworkConfigurationDiagnosticWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get network configuration diagnostic.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getNetworkConfigurationDiagnosticWithResponseAsync(String resourceGroupName, String networkWatcherName, NetworkConfigurationDiagnosticParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
      description: Parameters to get network configuration diagnostic.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: network configuration diagnostic.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  id: getNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  nameWithType: NetworkWatchersClient.getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public NextHopResultInner getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  id: getNextHop(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public NextHopResultInner getNextHop(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  id: getNextHopAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  nameWithType: NetworkWatchersClient.getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<NextHopResultInner> getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  id: getNextHopAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<NextHopResultInner> getNextHopAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  id: getNextHopWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  nameWithType: NetworkWatchersClient.getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  id: getNextHopWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.NextHopParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the next hop from the specified VM.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getNextHopWithResponseAsync(String resourceGroupName, String networkWatcherName, NextHopParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.NextHopParameters
      description: Parameters that define the source and destination endpoint.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the next hop from the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  id: getTopology(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  nameWithType: NetworkWatchersClient.getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the current network topology by resource group.
  syntax:
    content: public TopologyInner getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TopologyParameters
      description: Parameters that define the representation of topology.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TopologyInner
      description: the current network topology by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  id: getTopology(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the current network topology by resource group.
  syntax:
    content: public TopologyInner getTopology(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TopologyParameters
      description: Parameters that define the representation of topology.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TopologyInner
      description: the current network topology by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  id: getTopologyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  nameWithType: NetworkWatchersClient.getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the current network topology by resource group.
  syntax:
    content: public Mono<TopologyInner> getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TopologyParameters
      description: Parameters that define the representation of topology.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TopologyInner>
      description: the current network topology by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  id: getTopologyAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the current network topology by resource group.
  syntax:
    content: public Mono<TopologyInner> getTopologyAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TopologyParameters
      description: Parameters that define the representation of topology.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TopologyInner>
      description: the current network topology by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  id: getTopologyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  nameWithType: NetworkWatchersClient.getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the current network topology by resource group.
  syntax:
    content: public Mono<Response<TopologyInner>> getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TopologyParameters
      description: Parameters that define the representation of topology.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TopologyInner>>
      description: the current network topology by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  id: getTopologyWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TopologyParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the current network topology by resource group.
  syntax:
    content: public Mono<Response<TopologyInner>> getTopologyWithResponseAsync(String resourceGroupName, String networkWatcherName, TopologyParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TopologyParameters
      description: Parameters that define the representation of topology.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TopologyInner>>
      description: the current network topology by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  id: getTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  nameWithType: NetworkWatchersClient.getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public TroubleshootingResultInner getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  id: getTroubleshooting(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public TroubleshootingResultInner getTroubleshooting(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  id: getTroubleshootingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  nameWithType: NetworkWatchersClient.getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  id: getTroubleshootingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> getTroubleshootingAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String)
  id: getTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public TroubleshootingResultInner getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getTroubleshootingResult(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public TroubleshootingResultInner getTroubleshootingResult(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getTroubleshootingResultAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getTroubleshootingResultAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<TroubleshootingResultInner> getTroubleshootingResultAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getTroubleshootingResultWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getTroubleshootingResultWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getTroubleshootingResultWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: targetResourceId
      type: java.lang.String
      description: The target resource ID to query the troubleshooting result.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the last completed troubleshooting result on a specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  id: getTroubleshootingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  nameWithType: NetworkWatchersClient.getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  id: getTroubleshootingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.TroubleshootingParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getTroubleshootingWithResponseAsync(String resourceGroupName, String networkWatcherName, TroubleshootingParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.TroubleshootingParameters
      description: Parameters that define the resource to troubleshoot.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: troubleshooting information gained from specified resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules(java.lang.String,java.lang.String,java.lang.String)
  id: getVMSecurityRules(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public SecurityGroupViewResultInner getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getVMSecurityRules(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public SecurityGroupViewResultInner getVMSecurityRules(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getVMSecurityRulesAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<SecurityGroupViewResultInner> getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getVMSecurityRulesAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<SecurityGroupViewResultInner> getVMSecurityRulesAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getVMSecurityRulesWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  nameWithType: NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getVMSecurityRulesWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  nameWithType: NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the configured and effective security group rules on the specified VM.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> getVMSecurityRulesWithResponseAsync(String resourceGroupName, String networkWatcherName, String targetResourceId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: targetResourceId
      type: java.lang.String
      description: ID of the target VM.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the configured and effective security group rules on the specified VM.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: list()
  nameWithType: NetworkWatchersClient.list()
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list()
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by subscription.
  syntax:
    content: public PagedIterable<NetworkWatcherInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by subscription.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: list(Context context)
  nameWithType: NetworkWatchersClient.list(Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list(Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by subscription.
  syntax:
    content: public PagedIterable<NetworkWatcherInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by subscription.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAsync()
  nameWithType: NetworkWatchersClient.listAsync()
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync()
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by subscription.
  syntax:
    content: public PagedFlux<NetworkWatcherInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by subscription.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync(com.azure.core.util.Context)
  id: listAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAsync(Context context)
  nameWithType: NetworkWatchersClient.listAsync(Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync(Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by subscription.
  syntax:
    content: public PagedFlux<NetworkWatcherInner> listAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by subscription.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  id: listAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  nameWithType: NetworkWatchersClient.listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public AvailableProvidersListInner listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  id: listAvailableProviders(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public AvailableProvidersListInner listAvailableProviders(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  id: listAvailableProvidersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  nameWithType: NetworkWatchersClient.listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<AvailableProvidersListInner> listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  id: listAvailableProvidersAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<AvailableProvidersListInner> listAvailableProvidersAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  id: listAvailableProvidersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  nameWithType: NetworkWatchersClient.listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  id: listAvailableProvidersWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.AvailableProvidersListParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listAvailableProvidersWithResponseAsync(String resourceGroupName, String networkWatcherName, AvailableProvidersListParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
      description: Constraints that determine the list of available Internet service providers.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: list of available countries with details.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: NetworkWatchersClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by resource group.
  syntax:
    content: public PagedIterable<NetworkWatcherInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: NetworkWatchersClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by resource group.
  syntax:
    content: public PagedIterable<NetworkWatcherInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: NetworkWatchersClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by resource group.
  syntax:
    content: public PagedFlux<NetworkWatcherInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Context context)
  nameWithType: NetworkWatchersClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by resource group.
  syntax:
    content: public PagedFlux<NetworkWatcherInner> listByResourceGroupAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: all network watchers by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync(java.lang.String)
  id: listByResourceGroupSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName)
  nameWithType: NetworkWatchersClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by resource group.
  syntax:
    content: public Mono<PagedResponse<NetworkWatcherInner>> listByResourceGroupSinglePageAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: all network watchers by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  nameWithType: NetworkWatchersClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by resource group.
  syntax:
    content: public Mono<PagedResponse<NetworkWatcherInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: all network watchers by resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync()
  id: listSinglePageAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listSinglePageAsync()
  nameWithType: NetworkWatchersClient.listSinglePageAsync()
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync()
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by subscription.
  syntax:
    content: public Mono<PagedResponse<NetworkWatcherInner>> listSinglePageAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: all network watchers by subscription.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync(com.azure.core.util.Context)
  id: listSinglePageAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: listSinglePageAsync(Context context)
  nameWithType: NetworkWatchersClient.listSinglePageAsync(Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync(Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all network watchers by subscription.
  syntax:
    content: public Mono<PagedResponse<NetworkWatcherInner>> listSinglePageAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: all network watchers by subscription.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  id: setFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  nameWithType: NetworkWatchersClient.setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  id: setFlowLogConfiguration(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  nameWithType: NetworkWatchersClient.setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public FlowLogInformationInner setFlowLogConfiguration(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  id: setFlowLogConfigurationAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  nameWithType: NetworkWatchersClient.setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  id: setFlowLogConfigurationAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  nameWithType: NetworkWatchersClient.setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<FlowLogInformationInner> setFlowLogConfigurationAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  id: setFlowLogConfigurationWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  nameWithType: NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  id: setFlowLogConfigurationWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  nameWithType: NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Configures flow log and traffic analytics (optional) on a specified resource.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> setFlowLogConfigurationWithResponseAsync(String resourceGroupName, String networkWatcherName, FlowLogInformationInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the network watcher resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher resource.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
      description: Information on the configuration of flow log and traffic analytics (optional) .
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: information on the configuration of flow log and traffic analytics (optional).
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  nameWithType: NetworkWatchersClient.updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a network watcher tags.
  syntax:
    content: public NetworkWatcherInner updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  nameWithType: NetworkWatchersClient.updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a network watcher tags.
  syntax:
    content: public NetworkWatcherInner updateTags(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  nameWithType: NetworkWatchersClient.updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a network watcher tags.
  syntax:
    content: public Mono<NetworkWatcherInner> updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  nameWithType: NetworkWatchersClient.updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a network watcher tags.
  syntax:
    content: public Mono<NetworkWatcherInner> updateTagsAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  nameWithType: NetworkWatchersClient.updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a network watcher tags.
  syntax:
    content: public Mono<Response<NetworkWatcherInner>> updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  nameWithType: NetworkWatchersClient.updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates a network watcher tags.
  syntax:
    content: public Mono<Response<NetworkWatcherInner>> updateTagsWithResponseAsync(String resourceGroupName, String networkWatcherName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
      description: network watcher in a resource group.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  id: verifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  nameWithType: NetworkWatchersClient.verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public VerificationIpFlowResultInner verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  id: verifyIpFlow(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public VerificationIpFlowResultInner verifyIpFlow(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  id: verifyIpFlowAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  nameWithType: NetworkWatchersClient.verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<VerificationIpFlowResultInner> verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  id: verifyIpFlowAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<VerificationIpFlowResultInner> verifyIpFlowAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  id: verifyIpFlowWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  nameWithType: NetworkWatchersClient.verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: results of IP flow verification on the target resource.
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  id: verifyIpFlowWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.models.VerificationIpFlowParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.NetworkWatchersClient
  langs:
  - java
  name: verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  nameWithType: NetworkWatchersClient.verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Verify IP flow from the specified VM to a location given the currently configured NSG rules.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> verifyIpFlowWithResponseAsync(String resourceGroupName, String networkWatcherName, VerificationIpFlowParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: networkWatcherName
      type: java.lang.String
      description: The name of the network watcher.
    - id: parameters
      type: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
      description: Parameters that define the IP flow to be verified.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: results of IP flow verification on the target resource.
references:
- uid: com.azure.resourcemanager.network.NetworkManagementClient
  name: NetworkManagementClient
  nameWithType: NetworkManagementClient
  fullName: com.azure.resourcemanager.network.NetworkManagementClient
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.NetworkWatchersClient*
  name: NetworkWatchersClient
  nameWithType: NetworkWatchersClient.NetworkWatchersClient
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.NetworkWatchersClient
  package: com.azure.resourcemanager.network.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
  name: NetworkWatcherInner
  nameWithType: NetworkWatcherInner
  fullName: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
    name: NetworkWatcherInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: NetworkWatchersClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
    name: NetworkWatcherInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: NetworkWatchersClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdateAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: NetworkWatchersClient.createOrUpdate
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.createOrUpdate
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: NetworkWatchersClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: NetworkWatchersClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: NetworkWatchersClient.getByResourceGroup
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getByResourceGroup
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: NetworkWatchersClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete*
  name: beginDelete
  nameWithType: NetworkWatchersClient.beginDelete
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDelete
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync*
  name: deleteAsync
  nameWithType: NetworkWatchersClient.deleteAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.deleteAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete*
  name: delete
  nameWithType: NetworkWatchersClient.delete
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.delete
  package: com.azure.resourcemanager.network.fluent
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync*
  name: updateTagsWithResponseAsync
  nameWithType: NetworkWatchersClient.updateTagsWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync*
  name: updateTagsAsync
  nameWithType: NetworkWatchersClient.updateTagsAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTagsAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags*
  name: updateTags
  nameWithType: NetworkWatchersClient.updateTags
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.updateTags
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
    name: NetworkWatcherInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync*
  name: listByResourceGroupSinglePageAsync
  nameWithType: NetworkWatchersClient.listByResourceGroupSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
    name: NetworkWatcherInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: NetworkWatchersClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
    name: NetworkWatcherInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: NetworkWatchersClient.listByResourceGroup
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listByResourceGroup
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: NetworkWatchersClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync*
  name: listAsync
  nameWithType: NetworkWatchersClient.listAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list*
  name: list
  nameWithType: NetworkWatchersClient.list
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.list
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.TopologyParameters
  name: TopologyParameters
  nameWithType: TopologyParameters
  fullName: com.azure.resourcemanager.network.models.TopologyParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TopologyInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.TopologyInner
    name: TopologyInner
    fullName: com.azure.resourcemanager.network.fluent.inner.TopologyInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync*
  name: getTopologyWithResponseAsync
  nameWithType: NetworkWatchersClient.getTopologyWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TopologyInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.TopologyInner
    name: TopologyInner
    fullName: com.azure.resourcemanager.network.fluent.inner.TopologyInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync*
  name: getTopologyAsync
  nameWithType: NetworkWatchersClient.getTopologyAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopologyAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.TopologyInner
  name: TopologyInner
  nameWithType: TopologyInner
  fullName: com.azure.resourcemanager.network.fluent.inner.TopologyInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology*
  name: getTopology
  nameWithType: NetworkWatchersClient.getTopology
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTopology
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
  name: VerificationIpFlowParameters
  nameWithType: VerificationIpFlowParameters
  fullName: com.azure.resourcemanager.network.models.VerificationIpFlowParameters
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync*
  name: verifyIpFlowWithResponseAsync
  nameWithType: NetworkWatchersClient.verifyIpFlowWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>,com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
    name: VerificationIpFlowResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
    name: VerificationIpFlowResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow*
  name: beginVerifyIpFlow
  nameWithType: NetworkWatchersClient.beginVerifyIpFlow
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlow
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
    name: VerificationIpFlowResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync*
  name: verifyIpFlowAsync
  nameWithType: NetworkWatchersClient.verifyIpFlowAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlowAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
  name: VerificationIpFlowResultInner
  nameWithType: VerificationIpFlowResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow*
  name: verifyIpFlow
  nameWithType: NetworkWatchersClient.verifyIpFlow
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.verifyIpFlow
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.NextHopParameters
  name: NextHopParameters
  nameWithType: NextHopParameters
  fullName: com.azure.resourcemanager.network.models.NextHopParameters
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync*
  name: getNextHopWithResponseAsync
  nameWithType: NetworkWatchersClient.getNextHopWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>,com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
    name: NextHopResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
    name: NextHopResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop*
  name: beginGetNextHop
  nameWithType: NetworkWatchersClient.beginGetNextHop
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHop
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
    name: NextHopResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync*
  name: getNextHopAsync
  nameWithType: NetworkWatchersClient.getNextHopAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHopAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
  name: NextHopResultInner
  nameWithType: NextHopResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop*
  name: getNextHop
  nameWithType: NetworkWatchersClient.getNextHop
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNextHop
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync*
  name: getVMSecurityRulesWithResponseAsync
  nameWithType: NetworkWatchersClient.getVMSecurityRulesWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>,com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
    name: SecurityGroupViewResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
    name: SecurityGroupViewResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules*
  name: beginGetVMSecurityRules
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRules
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRules
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
    name: SecurityGroupViewResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync*
  name: getVMSecurityRulesAsync
  nameWithType: NetworkWatchersClient.getVMSecurityRulesAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRulesAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
  name: SecurityGroupViewResultInner
  nameWithType: SecurityGroupViewResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules*
  name: getVMSecurityRules
  nameWithType: NetworkWatchersClient.getVMSecurityRules
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getVMSecurityRules
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.TroubleshootingParameters
  name: TroubleshootingParameters
  nameWithType: TroubleshootingParameters
  fullName: com.azure.resourcemanager.network.models.TroubleshootingParameters
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync*
  name: getTroubleshootingWithResponseAsync
  nameWithType: NetworkWatchersClient.getTroubleshootingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>,com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
    name: TroubleshootingResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
    name: TroubleshootingResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting*
  name: beginGetTroubleshooting
  nameWithType: NetworkWatchersClient.beginGetTroubleshooting
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshooting
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
    name: TroubleshootingResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync*
  name: getTroubleshootingAsync
  nameWithType: NetworkWatchersClient.getTroubleshootingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
  name: TroubleshootingResultInner
  nameWithType: TroubleshootingResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting*
  name: getTroubleshooting
  nameWithType: NetworkWatchersClient.getTroubleshooting
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshooting
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync*
  name: getTroubleshootingResultWithResponseAsync
  nameWithType: NetworkWatchersClient.getTroubleshootingResultWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult*
  name: beginGetTroubleshootingResult
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResult
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResult
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync*
  name: getTroubleshootingResultAsync
  nameWithType: NetworkWatchersClient.getTroubleshootingResultAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResultAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult*
  name: getTroubleshootingResult
  nameWithType: NetworkWatchersClient.getTroubleshootingResult
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getTroubleshootingResult
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
  name: FlowLogInformationInner
  nameWithType: FlowLogInformationInner
  fullName: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync*
  name: setFlowLogConfigurationWithResponseAsync
  nameWithType: NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
    name: FlowLogInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
    name: FlowLogInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration*
  name: beginSetFlowLogConfiguration
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfiguration
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfiguration
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
    name: FlowLogInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync*
  name: setFlowLogConfigurationAsync
  nameWithType: NetworkWatchersClient.setFlowLogConfigurationAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfigurationAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration*
  name: setFlowLogConfiguration
  nameWithType: NetworkWatchersClient.setFlowLogConfiguration
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.setFlowLogConfiguration
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync*
  name: getFlowLogStatusWithResponseAsync
  nameWithType: NetworkWatchersClient.getFlowLogStatusWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus*
  name: beginGetFlowLogStatus
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatus
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatus
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync*
  name: getFlowLogStatusAsync
  nameWithType: NetworkWatchersClient.getFlowLogStatusAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatusAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus*
  name: getFlowLogStatus
  nameWithType: NetworkWatchersClient.getFlowLogStatus
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getFlowLogStatus
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.ConnectivityParameters
  name: ConnectivityParameters
  nameWithType: ConnectivityParameters
  fullName: com.azure.resourcemanager.network.models.ConnectivityParameters
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync*
  name: checkConnectivityWithResponseAsync
  nameWithType: NetworkWatchersClient.checkConnectivityWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>,com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
    name: ConnectivityInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
    name: ConnectivityInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity*
  name: beginCheckConnectivity
  nameWithType: NetworkWatchersClient.beginCheckConnectivity
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivity
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
    name: ConnectivityInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync*
  name: checkConnectivityAsync
  nameWithType: NetworkWatchersClient.checkConnectivityAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivityAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
  name: ConnectivityInformationInner
  nameWithType: ConnectivityInformationInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity*
  name: checkConnectivity
  nameWithType: NetworkWatchersClient.checkConnectivity
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.checkConnectivity
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
  name: AzureReachabilityReportParameters
  nameWithType: AzureReachabilityReportParameters
  fullName: com.azure.resourcemanager.network.models.AzureReachabilityReportParameters
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync*
  name: getAzureReachabilityReportWithResponseAsync
  nameWithType: NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>,com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
    name: AzureReachabilityReportInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
    name: AzureReachabilityReportInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport*
  name: beginGetAzureReachabilityReport
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReport
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReport
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
    name: AzureReachabilityReportInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync*
  name: getAzureReachabilityReportAsync
  nameWithType: NetworkWatchersClient.getAzureReachabilityReportAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReportAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
  name: AzureReachabilityReportInner
  nameWithType: AzureReachabilityReportInner
  fullName: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport*
  name: getAzureReachabilityReport
  nameWithType: NetworkWatchersClient.getAzureReachabilityReport
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getAzureReachabilityReport
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
  name: AvailableProvidersListParameters
  nameWithType: AvailableProvidersListParameters
  fullName: com.azure.resourcemanager.network.models.AvailableProvidersListParameters
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync*
  name: listAvailableProvidersWithResponseAsync
  nameWithType: NetworkWatchersClient.listAvailableProvidersWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>,com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
    name: AvailableProvidersListInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
    name: AvailableProvidersListInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders*
  name: beginListAvailableProviders
  nameWithType: NetworkWatchersClient.beginListAvailableProviders
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProviders
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
    name: AvailableProvidersListInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync*
  name: listAvailableProvidersAsync
  nameWithType: NetworkWatchersClient.listAvailableProvidersAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProvidersAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
  name: AvailableProvidersListInner
  nameWithType: AvailableProvidersListInner
  fullName: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders*
  name: listAvailableProviders
  nameWithType: NetworkWatchersClient.listAvailableProviders
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.listAvailableProviders
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
  name: NetworkConfigurationDiagnosticParameters
  nameWithType: NetworkConfigurationDiagnosticParameters
  fullName: com.azure.resourcemanager.network.models.NetworkConfigurationDiagnosticParameters
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync*
  name: getNetworkConfigurationDiagnosticWithResponseAsync
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>,com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
    name: NetworkConfigurationDiagnosticResponseInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
    name: NetworkConfigurationDiagnosticResponseInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic*
  name: beginGetNetworkConfigurationDiagnostic
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnostic
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
    name: NetworkConfigurationDiagnosticResponseInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync*
  name: getNetworkConfigurationDiagnosticAsync
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnosticAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
  name: NetworkConfigurationDiagnosticResponseInner
  nameWithType: NetworkConfigurationDiagnosticResponseInner
  fullName: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic*
  name: getNetworkConfigurationDiagnostic
  nameWithType: NetworkWatchersClient.getNetworkConfigurationDiagnostic
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.getNetworkConfigurationDiagnostic
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync*
  name: beginDeleteWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync*
  name: beginDeleteWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling*
  name: beginDeleteWithoutPolling
  nameWithType: NetworkWatchersClient.beginDeleteWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginDeleteWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
    name: VerificationIpFlowResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync*
  name: beginVerifyIpFlowWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync*
  name: beginVerifyIpFlowWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling*
  name: beginVerifyIpFlowWithoutPolling
  nameWithType: NetworkWatchersClient.beginVerifyIpFlowWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginVerifyIpFlowWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
    name: NextHopResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync*
  name: beginGetNextHopWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync*
  name: beginGetNextHopWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling*
  name: beginGetNextHopWithoutPolling
  nameWithType: NetworkWatchersClient.beginGetNextHopWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNextHopWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
    name: SecurityGroupViewResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync*
  name: beginGetVMSecurityRulesWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync*
  name: beginGetVMSecurityRulesWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling*
  name: beginGetVMSecurityRulesWithoutPolling
  nameWithType: NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetVMSecurityRulesWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
    name: TroubleshootingResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync*
  name: beginGetTroubleshootingWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync*
  name: beginGetTroubleshootingWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling*
  name: beginGetTroubleshootingWithoutPolling
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync*
  name: beginGetTroubleshootingResultWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync*
  name: beginGetTroubleshootingResultWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling*
  name: beginGetTroubleshootingResultWithoutPolling
  nameWithType: NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetTroubleshootingResultWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
    name: FlowLogInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync*
  name: beginSetFlowLogConfigurationWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync*
  name: beginSetFlowLogConfigurationWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling*
  name: beginSetFlowLogConfigurationWithoutPolling
  nameWithType: NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginSetFlowLogConfigurationWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync*
  name: beginGetFlowLogStatusWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync*
  name: beginGetFlowLogStatusWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling*
  name: beginGetFlowLogStatusWithoutPolling
  nameWithType: NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetFlowLogStatusWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
    name: ConnectivityInformationInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync*
  name: beginCheckConnectivityWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync*
  name: beginCheckConnectivityWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling*
  name: beginCheckConnectivityWithoutPolling
  nameWithType: NetworkWatchersClient.beginCheckConnectivityWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginCheckConnectivityWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
    name: AzureReachabilityReportInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync*
  name: beginGetAzureReachabilityReportWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync*
  name: beginGetAzureReachabilityReportWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling*
  name: beginGetAzureReachabilityReportWithoutPolling
  nameWithType: NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetAzureReachabilityReportWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
    name: AvailableProvidersListInner
    fullName: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync*
  name: beginListAvailableProvidersWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync*
  name: beginListAvailableProvidersWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling*
  name: beginListAvailableProvidersWithoutPolling
  nameWithType: NetworkWatchersClient.beginListAvailableProvidersWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginListAvailableProvidersWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
    name: NetworkConfigurationDiagnosticResponseInner
    fullName: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync*
  name: beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync*
  name: beginGetNetworkConfigurationDiagnosticWithoutPollingAsync
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling*
  name: beginGetNetworkConfigurationDiagnosticWithoutPolling
  nameWithType: NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.NetworkWatchersClient.beginGetNetworkConfigurationDiagnosticWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
  name: InnerSupportsListing<NetworkWatcherInner>
  nameWithType: InnerSupportsListing<NetworkWatcherInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
  name: InnerSupportsGet<NetworkWatcherInner>
  nameWithType: InnerSupportsGet<NetworkWatcherInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.NetworkWatcherInner>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>,com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
  name: VerificationIpFlowResultInner>,VerificationIpFlowResultInner
  nameWithType: VerificationIpFlowResultInner>,VerificationIpFlowResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner>,com.azure.resourcemanager.network.fluent.inner.VerificationIpFlowResultInner
- uid: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>,com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
  name: NextHopResultInner>,NextHopResultInner
  nameWithType: NextHopResultInner>,NextHopResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.NextHopResultInner>,com.azure.resourcemanager.network.fluent.inner.NextHopResultInner
- uid: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>,com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
  name: SecurityGroupViewResultInner>,SecurityGroupViewResultInner
  nameWithType: SecurityGroupViewResultInner>,SecurityGroupViewResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner>,com.azure.resourcemanager.network.fluent.inner.SecurityGroupViewResultInner
- uid: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>,com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
  name: TroubleshootingResultInner>,TroubleshootingResultInner
  nameWithType: TroubleshootingResultInner>,TroubleshootingResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner>,com.azure.resourcemanager.network.fluent.inner.TroubleshootingResultInner
- uid: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
  name: FlowLogInformationInner>,FlowLogInformationInner
  nameWithType: FlowLogInformationInner>,FlowLogInformationInner
  fullName: com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner>,com.azure.resourcemanager.network.fluent.inner.FlowLogInformationInner
- uid: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>,com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
  name: ConnectivityInformationInner>,ConnectivityInformationInner
  nameWithType: ConnectivityInformationInner>,ConnectivityInformationInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner>,com.azure.resourcemanager.network.fluent.inner.ConnectivityInformationInner
- uid: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>,com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
  name: AzureReachabilityReportInner>,AzureReachabilityReportInner
  nameWithType: AzureReachabilityReportInner>,AzureReachabilityReportInner
  fullName: com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner>,com.azure.resourcemanager.network.fluent.inner.AzureReachabilityReportInner
- uid: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>,com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
  name: AvailableProvidersListInner>,AvailableProvidersListInner
  nameWithType: AvailableProvidersListInner>,AvailableProvidersListInner
  fullName: com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner>,com.azure.resourcemanager.network.fluent.inner.AvailableProvidersListInner
- uid: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>,com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
  name: NetworkConfigurationDiagnosticResponseInner>,NetworkConfigurationDiagnosticResponseInner
  nameWithType: NetworkConfigurationDiagnosticResponseInner>,NetworkConfigurationDiagnosticResponseInner
  fullName: com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner>,com.azure.resourcemanager.network.fluent.inner.NetworkConfigurationDiagnosticResponseInner
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
