### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient
  id: ShareLeaseClient
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized
  children:
  - com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLease()
  - com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.specialized.ShareLeaseClient.breakLease()
  - com.azure.storage.file.share.specialized.ShareLeaseClient.breakLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.specialized.ShareLeaseClient.changeLease(java.lang.String)
  - com.azure.storage.file.share.specialized.ShareLeaseClient.changeLeaseWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.storage.file.share.specialized.ShareLeaseClient.getAccountName()
  - com.azure.storage.file.share.specialized.ShareLeaseClient.getFileUrl()
  - com.azure.storage.file.share.specialized.ShareLeaseClient.getLeaseId()
  - com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLease()
  - com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  langs:
  - java
  name: ShareLeaseClient
  nameWithType: ShareLeaseClient
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient
  type: Class
  package: com.azure.storage.file.share.specialized
  summary: >-
    This class provides a client that contains all the leasing operations for <xref uid="com.azure.storage.file.share.ShareFileClient" data-throw-if-not-resolved="false">files</xref>. This client acts as a supplement to that client and only handles leasing operations.


    **Instantiating a ShareLeaseClient**


    ```java

    ShareLeaseClient fileLeaseClient = new ShareLeaseClientBuilder()
         .fileClient(shareFileClient)
         .buildClient();
    ```


    View <xref uid="com.azure.storage.file.share.specialized.ShareLeaseClientBuilder" data-throw-if-not-resolved="false">this</xref> for additional ways to construct the client.


    For more information about leasing see the [Azure Docs][].



    [Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/lease-file
  syntax:
    content: public final class ShareLeaseClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.ShareLeaseClient(com.azure.storage.file.share.specialized.ShareLeaseAsyncClient)
  id: ShareLeaseClient(com.azure.storage.file.share.specialized.ShareLeaseAsyncClient)
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: ShareLeaseClient(ShareLeaseAsyncClient client)
  nameWithType: ShareLeaseClient.ShareLeaseClient(ShareLeaseAsyncClient client)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.ShareLeaseClient(ShareLeaseAsyncClient client)
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.ShareLeaseClient*
  type: Constructor
  package: com.azure.storage.file.share.specialized
  syntax:
    content: " ShareLeaseClient(ShareLeaseAsyncClient client)"
    parameters:
    - id: client
      type: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLease()
  id: acquireLease()
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: acquireLease()
  nameWithType: ShareLeaseClient.acquireLease()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLease()
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Acquires a lease for write and delete operations. All leases are infinite.


    **Code Samples**


    ```java

    System.out.printf("Lease ID is %s%n", client.acquireLease());

    ```
  syntax:
    content: public String acquireLease()
    return:
      type: java.lang.String
      description: The lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: acquireLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: acquireLeaseWithResponse(Duration timeout, Context context)
  nameWithType: ShareLeaseClient.acquireLeaseWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLeaseWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Acquires a lease for write and delete operations. All leases are infinite.


    **Code Samples**


    ```java

    System.out.printf("Lease ID is %s%n", client
         .acquireLeaseWithResponse(timeout, new Context(key, value))
         .getValue());
    ```
  syntax:
    content: public Response<String> acquireLeaseWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.String>
      description: The lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLease()
  id: breakLease()
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: breakLease()
  nameWithType: ShareLeaseClient.breakLease()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLease()
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Breaks the previously acquired lease, if it exists. Leases will break immediately.


    **Code Samples**


    ```java

    client.breakLease();
     System.out.println("The lease has been successfully broken");
    ```
  syntax:
    content: public void breakLease()
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: breakLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: breakLeaseWithResponse(Duration timeout, Context context)
  nameWithType: ShareLeaseClient.breakLeaseWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLeaseWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Breaks the previously acquired lease, if it exists. Leases will break immediately.


    **Code Samples**


    ```java

    client.breakLeaseWithResponse(timeout, new Context(key, value));
     System.out.println("The lease has been successfully broken");
    ```
  syntax:
    content: public Response<Void> breakLeaseWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLease(java.lang.String)
  id: changeLease(java.lang.String)
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: changeLease(String proposedId)
  nameWithType: ShareLeaseClient.changeLease(String proposedId)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLease(String proposedId)
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Changes the lease ID.


    **Code Samples**


    ```java

    System.out.printf("Changed lease ID is %s%n", client.changeLease("proposedId"));

    ```
  syntax:
    content: public String changeLease(String proposedId)
    parameters:
    - id: proposedId
      type: java.lang.String
      description: A new lease ID in a valid GUID format.
    return:
      type: java.lang.String
      description: The new lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLeaseWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: changeLeaseWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: changeLeaseWithResponse(String proposedId, Duration timeout, Context context)
  nameWithType: ShareLeaseClient.changeLeaseWithResponse(String proposedId, Duration timeout, Context context)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLeaseWithResponse(String proposedId, Duration timeout, Context context)
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Changes the lease ID.


    **Code Samples**


    ```java

    System.out.printf("Changed lease ID is %s%n",
         client.changeLeaseWithResponse("proposedId", timeout, new Context(key, value))
             .getValue());
    ```
  syntax:
    content: public Response<String> changeLeaseWithResponse(String proposedId, Duration timeout, Context context)
    parameters:
    - id: proposedId
      type: java.lang.String
      description: A new lease ID in a valid GUID format.
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.String>
      description: The new lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: getAccountName()
  nameWithType: ShareLeaseClient.getAccountName()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.getAccountName()
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.getAccountName*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: Get associated account name.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: account name associated with this storage resource.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.getFileUrl()
  id: getFileUrl()
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: getFileUrl()
  nameWithType: ShareLeaseClient.getFileUrl()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.getFileUrl()
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.getFileUrl*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: Gets the <xref uid="" data-throw-if-not-resolved="false">URL</xref> of the lease client.
  syntax:
    content: public String getFileUrl()
    return:
      type: java.lang.String
      description: URL of the lease client.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.getLeaseId()
  id: getLeaseId()
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: getLeaseId()
  nameWithType: ShareLeaseClient.getLeaseId()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.getLeaseId()
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.getLeaseId*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: Get the lease ID for this lease.
  syntax:
    content: public String getLeaseId()
    return:
      type: java.lang.String
      description: the lease ID.
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLease()
  id: releaseLease()
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: releaseLease()
  nameWithType: ShareLeaseClient.releaseLease()
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLease()
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLease*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Releases the previously acquired lease.


    **Code Samples**


    ```java

    client.releaseLease();
     System.out.println("Release lease completed");
    ```
  syntax:
    content: public void releaseLease()
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  id: releaseLeaseWithResponse(java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-storage-file-share:12.6.0-beta.1
  parent: com.azure.storage.file.share.specialized.ShareLeaseClient
  langs:
  - java
  name: releaseLeaseWithResponse(Duration timeout, Context context)
  nameWithType: ShareLeaseClient.releaseLeaseWithResponse(Duration timeout, Context context)
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLeaseWithResponse(Duration timeout, Context context)
  overload: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLeaseWithResponse*
  type: Method
  package: com.azure.storage.file.share.specialized
  summary: >-
    Releases the previously acquired lease.


    **Code Samples**


    ```java

    System.out.printf("Release lease completed with status %d%n",
         client.releaseLeaseWithResponse(timeout, new Context(key, value))
             .getStatusCode());
    ```
  syntax:
    content: public Response<Void> releaseLeaseWithResponse(Duration timeout, Context context)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: An optional timeout value beyond which a <xref uid="" data-throw-if-not-resolved="false">RuntimeException</xref> will be raised.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: A response containing status code and HTTP headers.
references:
- uid: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
  name: ShareLeaseAsyncClient
  nameWithType: ShareLeaseAsyncClient
  fullName: com.azure.storage.file.share.specialized.ShareLeaseAsyncClient
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.ShareLeaseClient*
  name: ShareLeaseClient
  nameWithType: ShareLeaseClient.ShareLeaseClient
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.ShareLeaseClient
  package: com.azure.storage.file.share.specialized
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.getFileUrl*
  name: getFileUrl
  nameWithType: ShareLeaseClient.getFileUrl
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.getFileUrl
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.getLeaseId*
  name: getLeaseId
  nameWithType: ShareLeaseClient.getLeaseId
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.getLeaseId
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLease*
  name: acquireLease
  nameWithType: ShareLeaseClient.acquireLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLease
  package: com.azure.storage.file.share.specialized
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLeaseWithResponse*
  name: acquireLeaseWithResponse
  nameWithType: ShareLeaseClient.acquireLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.acquireLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLease*
  name: releaseLease
  nameWithType: ShareLeaseClient.releaseLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLease
  package: com.azure.storage.file.share.specialized
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLeaseWithResponse*
  name: releaseLeaseWithResponse
  nameWithType: ShareLeaseClient.releaseLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.releaseLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLease*
  name: breakLease
  nameWithType: ShareLeaseClient.breakLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLease
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLeaseWithResponse*
  name: breakLeaseWithResponse
  nameWithType: ShareLeaseClient.breakLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.breakLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLease*
  name: changeLease
  nameWithType: ShareLeaseClient.changeLease
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLease
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLeaseWithResponse*
  name: changeLeaseWithResponse
  nameWithType: ShareLeaseClient.changeLeaseWithResponse
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.changeLeaseWithResponse
  package: com.azure.storage.file.share.specialized
- uid: com.azure.storage.file.share.specialized.ShareLeaseClient.getAccountName*
  name: getAccountName
  nameWithType: ShareLeaseClient.getAccountName
  fullName: com.azure.storage.file.share.specialized.ShareLeaseClient.getAccountName
  package: com.azure.storage.file.share.specialized
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
