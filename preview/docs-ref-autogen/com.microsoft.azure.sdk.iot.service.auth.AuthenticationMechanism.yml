### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism"
fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism"
name: "AuthenticationMechanism"
nameWithType: "AuthenticationMechanism"
summary: "Authentication mechanism, used to store the device symmetric key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AuthenticationMechanism"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.AuthenticationMechanism(com.microsoft.azure.sdk.iot.service.auth.AuthenticationType)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.AuthenticationMechanism(AuthenticationType authenticationType)"
  name: "AuthenticationMechanism(AuthenticationType authenticationType)"
  nameWithType: "AuthenticationMechanism.AuthenticationMechanism(AuthenticationType authenticationType)"
  summary: "Constructor that is used for certificate authority authentication."
  parameters:
  - description: "the type of authentication for this to use."
    name: "authenticationType"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.AuthenticationType?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationType&text=AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AuthenticationMechanism(AuthenticationType authenticationType)"
  desc: "Constructor that is used for certificate authority authentication. Necessary keys will be generated automatically, and can be overwritten later as well."
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.AuthenticationMechanism(com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.AuthenticationMechanism(SymmetricKey symmetricKey)"
  name: "AuthenticationMechanism(SymmetricKey symmetricKey)"
  nameWithType: "AuthenticationMechanism.AuthenticationMechanism(SymmetricKey symmetricKey)"
  summary: "Constructor that saves a symmetric key used for SAS authentication"
  parameters:
  - description: "the key to use for authentication"
    name: "symmetricKey"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AuthenticationMechanism(SymmetricKey symmetricKey)"
  exceptions:
  - description: "if the provided symmetricKey is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Constructor that saves a symmetric key used for SAS authentication"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.AuthenticationMechanism(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.AuthenticationMechanism(String primaryThumbprint, String secondaryThumbprint)"
  name: "AuthenticationMechanism(String primaryThumbprint, String secondaryThumbprint)"
  nameWithType: "AuthenticationMechanism.AuthenticationMechanism(String primaryThumbprint, String secondaryThumbprint)"
  summary: "Constructor that saves a thumbprint used for self signed authentication"
  parameters:
  - description: "the primary thumbprint to use for authentication"
    name: "primaryThumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the secondary thumbprint to use for authentication"
    name: "secondaryThumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AuthenticationMechanism(String primaryThumbprint, String secondaryThumbprint)"
  desc: "Constructor that saves a thumbprint used for self signed authentication"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.equals(java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.equals(Object other)"
  name: "equals(Object other)"
  nameWithType: "AuthenticationMechanism.equals(Object other)"
  overridden: "java.lang.Object.equals(java.lang.Object)"
  parameters:
  - name: "other"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean equals(Object other)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getAuthenticationType()"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getAuthenticationType()"
  name: "getAuthenticationType()"
  nameWithType: "AuthenticationMechanism.getAuthenticationType()"
  summary: "Getter for authentication type."
  syntax: "public AuthenticationType getAuthenticationType()"
  desc: "Getter for authentication type."
  returns:
    description: "The authentication type."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.AuthenticationType?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationType&text=AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getPrimaryThumbprint()"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getPrimaryThumbprint()"
  name: "getPrimaryThumbprint()"
  nameWithType: "AuthenticationMechanism.getPrimaryThumbprint()"
  summary: "Returns the primary thumbprint"
  syntax: "public String getPrimaryThumbprint()"
  desc: "Returns the primary thumbprint"
  returns:
    description: "the primary thumbprint. It may be <code>null</code>"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getSecondaryThumbprint()"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getSecondaryThumbprint()"
  name: "getSecondaryThumbprint()"
  nameWithType: "AuthenticationMechanism.getSecondaryThumbprint()"
  summary: "Returns the secondary thumbprint"
  syntax: "public String getSecondaryThumbprint()"
  desc: "Returns the secondary thumbprint"
  returns:
    description: "the secondary thumbprint. It may be <code>null</code>"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getSymmetricKey()"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.getSymmetricKey()"
  name: "getSymmetricKey()"
  nameWithType: "AuthenticationMechanism.getSymmetricKey()"
  summary: "Getter for symmetric key."
  syntax: "public SymmetricKey getSymmetricKey()"
  desc: "Getter for symmetric key."
  returns:
    description: "The symmetric key."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setAuthenticationType(com.microsoft.azure.sdk.iot.service.auth.AuthenticationType)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setAuthenticationType(AuthenticationType type)"
  name: "setAuthenticationType(AuthenticationType type)"
  nameWithType: "AuthenticationMechanism.setAuthenticationType(AuthenticationType type)"
  summary: "Setter for the authentication type of this object"
  parameters:
  - description: "the type of authentication to set"
    name: "type"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.AuthenticationType?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationType&text=AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setAuthenticationType(AuthenticationType type)"
  exceptions:
  - description: "if the provided type is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Setter for the authentication type of this object"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setPrimaryThumbprint(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setPrimaryThumbprint(String primaryThumbprint)"
  name: "setPrimaryThumbprint(String primaryThumbprint)"
  nameWithType: "AuthenticationMechanism.setPrimaryThumbprint(String primaryThumbprint)"
  summary: "Setter for the primary thumbprint"
  parameters:
  - description: "the value to set"
    name: "primaryThumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setPrimaryThumbprint(String primaryThumbprint)"
  desc: "Setter for the primary thumbprint"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setSecondaryThumbprint(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setSecondaryThumbprint(String secondaryThumbprint)"
  name: "setSecondaryThumbprint(String secondaryThumbprint)"
  nameWithType: "AuthenticationMechanism.setSecondaryThumbprint(String secondaryThumbprint)"
  summary: "Setter for the secondary thumbprint"
  parameters:
  - description: "the value to set"
    name: "secondaryThumbprint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSecondaryThumbprint(String secondaryThumbprint)"
  desc: "Setter for the secondary thumbprint"
- uid: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setSymmetricKey(com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setSymmetricKey(SymmetricKey symmetricKey)"
  name: "setSymmetricKey(SymmetricKey symmetricKey)"
  nameWithType: "AuthenticationMechanism.setSymmetricKey(SymmetricKey symmetricKey)"
  summary: "Setter for symmetric key."
  parameters:
  - description: "the symmetric key to set"
    name: "symmetricKey"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setSymmetricKey(SymmetricKey symmetricKey)"
  exceptions:
  - description: "if the provided symmetricKey is null"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Setter for symmetric key."
type: "class"
desc: "Authentication mechanism, used to store the device symmetric key."
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.auth"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
