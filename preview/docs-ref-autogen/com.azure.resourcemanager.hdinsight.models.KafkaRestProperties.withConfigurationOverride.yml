### YamlMime:JavaMember
uid: "com.azure.resourcemanager.hdinsight.models.KafkaRestProperties.withConfigurationOverride*"
fullName: "com.azure.resourcemanager.hdinsight.models.KafkaRestProperties.withConfigurationOverride"
name: "withConfigurationOverride"
nameWithType: "KafkaRestProperties.withConfigurationOverride"
members:
- uid: "com.azure.resourcemanager.hdinsight.models.KafkaRestProperties.withConfigurationOverride(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.hdinsight.models.KafkaRestProperties.withConfigurationOverride(Map<String,String> configurationOverride)"
  name: "withConfigurationOverride(Map<String,String> configurationOverride)"
  nameWithType: "KafkaRestProperties.withConfigurationOverride(Map<String,String> configurationOverride)"
  summary: "Set the configurationOverride property: The configurations that need to be overriden."
  parameters:
  - description: "the configurationOverride value to set."
    name: "configurationOverride"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public KafkaRestProperties withConfigurationOverride(Map<String,String> configurationOverride)"
  returns:
    description: "the KafkaRestProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.hdinsight.models.KafkaRestProperties?alt=com.azure.resourcemanager.hdinsight.models.KafkaRestProperties&text=KafkaRestProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.hdinsight.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-hdinsight:1.0.0-beta.2
