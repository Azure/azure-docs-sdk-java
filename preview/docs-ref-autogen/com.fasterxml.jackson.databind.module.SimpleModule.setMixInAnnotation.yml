### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation*"
fullName: "com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation"
name: "setMixInAnnotation"
nameWithType: "SimpleModule.setMixInAnnotation"
members:
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation(java.lang.Class<?>,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)"
  name: "setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)"
  nameWithType: "SimpleModule.setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)"
  summary: "Method for specifying that annotations define by `mixinClass` should be \"mixed in\" with annotations that `targetType` has (as if they were directly included on it!).\n\nMix-in annotations are registered when module is registered for `ObjectMapper`."
  parameters:
  - name: "targetType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "mixinClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public SimpleModule setMixInAnnotation(Class<?> targetType, Class<?> mixinClass)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.module.SimpleModule?alt=com.fasterxml.jackson.databind.module.SimpleModule&text=SimpleModule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.module"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
