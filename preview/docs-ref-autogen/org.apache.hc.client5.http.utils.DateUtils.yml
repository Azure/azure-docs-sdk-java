### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.utils.DateUtils
  id: DateUtils
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils
  children:
  - org.apache.hc.client5.http.utils.DateUtils.GMT
  - org.apache.hc.client5.http.utils.DateUtils.PATTERN_ASCTIME
  - org.apache.hc.client5.http.utils.DateUtils.PATTERN_RFC1036
  - org.apache.hc.client5.http.utils.DateUtils.PATTERN_RFC1123
  - org.apache.hc.client5.http.utils.DateUtils.clearThreadLocal()
  - org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date)
  - org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date,java.lang.String)
  - org.apache.hc.client5.http.utils.DateUtils.isAfter(org.apache.hc.core5.http.MessageHeaders,org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  - org.apache.hc.client5.http.utils.DateUtils.isBefore(org.apache.hc.core5.http.MessageHeaders,org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  - org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)
  - org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String,java.lang.String[])
  - org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String,java.lang.String[],java.util.Date)
  - org.apache.hc.client5.http.utils.DateUtils.parseDate(org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  langs:
  - java
  name: DateUtils
  nameWithType: DateUtils
  fullName: org.apache.hc.client5.http.utils.DateUtils
  type: Class
  package: org.apache.hc.client5.http.utils
  summary: A utility class for parsing and formatting HTTP dates as used in cookies and other headers. This class handles dates as defined by RFC 2616 section 3.3.1 as well as some other common non-standard formats.
  syntax:
    content: public final class DateUtils
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.utils.DateUtils.DateUtils()
  id: DateUtils()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: DateUtils()
  nameWithType: DateUtils.DateUtils()
  fullName: org.apache.hc.client5.http.utils.DateUtils.DateUtils()
  overload: org.apache.hc.client5.http.utils.DateUtils.DateUtils*
  type: Constructor
  package: org.apache.hc.client5.http.utils
  summary: This class should not be instantiated.
  syntax:
    content: private DateUtils()
- uid: org.apache.hc.client5.http.utils.DateUtils.GMT
  id: GMT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: GMT
  nameWithType: DateUtils.GMT
  fullName: org.apache.hc.client5.http.utils.DateUtils.GMT
  type: Field
  package: org.apache.hc.client5.http.utils
  syntax:
    content: public static final TimeZone GMT
    return:
      type: java.util.TimeZone
- uid: org.apache.hc.client5.http.utils.DateUtils.PATTERN_ASCTIME
  id: PATTERN_ASCTIME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: PATTERN_ASCTIME
  nameWithType: DateUtils.PATTERN_ASCTIME
  fullName: org.apache.hc.client5.http.utils.DateUtils.PATTERN_ASCTIME
  type: Field
  package: org.apache.hc.client5.http.utils
  summary: Date format pattern used to parse HTTP date headers in ANSI C `asctime()` format.
  syntax:
    content: public static final String PATTERN_ASCTIME
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.utils.DateUtils.PATTERN_RFC1036
  id: PATTERN_RFC1036
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: PATTERN_RFC1036
  nameWithType: DateUtils.PATTERN_RFC1036
  fullName: org.apache.hc.client5.http.utils.DateUtils.PATTERN_RFC1036
  type: Field
  package: org.apache.hc.client5.http.utils
  summary: Date format pattern used to parse HTTP date headers in RFC 1036 format.
  syntax:
    content: public static final String PATTERN_RFC1036
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.utils.DateUtils.PATTERN_RFC1123
  id: PATTERN_RFC1123
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: PATTERN_RFC1123
  nameWithType: DateUtils.PATTERN_RFC1123
  fullName: org.apache.hc.client5.http.utils.DateUtils.PATTERN_RFC1123
  type: Field
  package: org.apache.hc.client5.http.utils
  summary: Date format pattern used to parse HTTP date headers in RFC 1123 format.
  syntax:
    content: public static final String PATTERN_RFC1123
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.utils.DateUtils.clearThreadLocal()
  id: clearThreadLocal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: clearThreadLocal()
  nameWithType: DateUtils.clearThreadLocal()
  fullName: org.apache.hc.client5.http.utils.DateUtils.clearThreadLocal()
  overload: org.apache.hc.client5.http.utils.DateUtils.clearThreadLocal*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Clears thread-local variable containing <xref uid="java.text.DateFormat" data-throw-if-not-resolved="false">java.text.DateFormat</xref> cache.
  syntax:
    content: public static void clearThreadLocal()
- uid: org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date)
  id: formatDate(java.util.Date)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: formatDate(Date date)
  nameWithType: DateUtils.formatDate(Date date)
  fullName: org.apache.hc.client5.http.utils.DateUtils.formatDate(Date date)
  overload: org.apache.hc.client5.http.utils.DateUtils.formatDate*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Formats the given date according to the RFC 1123 pattern.
  syntax:
    content: public static String formatDate(Date date)
    parameters:
    - id: date
      type: java.util.Date
      description: The date to format.
    return:
      type: java.lang.String
      description: An RFC 1123 formatted date string.
- uid: org.apache.hc.client5.http.utils.DateUtils.formatDate(java.util.Date,java.lang.String)
  id: formatDate(java.util.Date,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: formatDate(Date date, String pattern)
  nameWithType: DateUtils.formatDate(Date date, String pattern)
  fullName: org.apache.hc.client5.http.utils.DateUtils.formatDate(Date date, String pattern)
  overload: org.apache.hc.client5.http.utils.DateUtils.formatDate*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: >-
    Formats the given date according to the specified pattern. The pattern must conform to that used by the <xref uid="SimpleDateFormat" data-throw-if-not-resolved="false">simple date
     format</xref> class.
  syntax:
    content: public static String formatDate(Date date, String pattern)
    parameters:
    - id: date
      type: java.util.Date
      description: The date to format.
    - id: pattern
      type: java.lang.String
      description: The pattern to use for formatting the date.
    return:
      type: java.lang.String
      description: A formatted date string.
- uid: org.apache.hc.client5.http.utils.DateUtils.isAfter(org.apache.hc.core5.http.MessageHeaders,org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  id: isAfter(org.apache.hc.core5.http.MessageHeaders,org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: isAfter(MessageHeaders message1, MessageHeaders message2, String headerName)
  nameWithType: DateUtils.isAfter(MessageHeaders message1, MessageHeaders message2, String headerName)
  fullName: org.apache.hc.client5.http.utils.DateUtils.isAfter(MessageHeaders message1, MessageHeaders message2, String headerName)
  overload: org.apache.hc.client5.http.utils.DateUtils.isAfter*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Tests if the first message is after (newer) than second one using the given message header for comparison.
  syntax:
    content: public static boolean isAfter(MessageHeaders message1, MessageHeaders message2, String headerName)
    parameters:
    - id: message1
      type: org.apache.hc.core5.http.MessageHeaders
      description: the first message
    - id: message2
      type: org.apache.hc.core5.http.MessageHeaders
      description: the second message
    - id: headerName
      type: java.lang.String
      description: header name
    return:
      type: boolean
      description: >-
        <code>true</code> if both messages contain a header with the given name
          and the value of the header from the first message is newer that of
          the second message.
- uid: org.apache.hc.client5.http.utils.DateUtils.isBefore(org.apache.hc.core5.http.MessageHeaders,org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  id: isBefore(org.apache.hc.core5.http.MessageHeaders,org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: isBefore(MessageHeaders message1, MessageHeaders message2, String headerName)
  nameWithType: DateUtils.isBefore(MessageHeaders message1, MessageHeaders message2, String headerName)
  fullName: org.apache.hc.client5.http.utils.DateUtils.isBefore(MessageHeaders message1, MessageHeaders message2, String headerName)
  overload: org.apache.hc.client5.http.utils.DateUtils.isBefore*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Tests if the first message is before (older) than the second one using the given message header for comparison.
  syntax:
    content: public static boolean isBefore(MessageHeaders message1, MessageHeaders message2, String headerName)
    parameters:
    - id: message1
      type: org.apache.hc.core5.http.MessageHeaders
      description: the first message
    - id: message2
      type: org.apache.hc.core5.http.MessageHeaders
      description: the second message
    - id: headerName
      type: java.lang.String
      description: header name
    return:
      type: boolean
      description: >-
        <code>true</code> if both messages contain a header with the given name
          and the value of the header from the first message is older that of
          the second message.
- uid: org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String)
  id: parseDate(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: parseDate(String dateValue)
  nameWithType: DateUtils.parseDate(String dateValue)
  fullName: org.apache.hc.client5.http.utils.DateUtils.parseDate(String dateValue)
  overload: org.apache.hc.client5.http.utils.DateUtils.parseDate*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Parses a date value. The formats used for parsing the date value are retrieved from the default http params.
  syntax:
    content: public static Date parseDate(String dateValue)
    parameters:
    - id: dateValue
      type: java.lang.String
      description: the date value to parse
    return:
      type: java.util.Date
      description: the parsed date or null if input could not be parsed
- uid: org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String,java.lang.String[])
  id: parseDate(java.lang.String,java.lang.String[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: parseDate(String dateValue, String[] dateFormats)
  nameWithType: DateUtils.parseDate(String dateValue, String[] dateFormats)
  fullName: org.apache.hc.client5.http.utils.DateUtils.parseDate(String dateValue, String[] dateFormats)
  overload: org.apache.hc.client5.http.utils.DateUtils.parseDate*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Parses the date value using the given date formats.
  syntax:
    content: public static Date parseDate(String dateValue, String[] dateFormats)
    parameters:
    - id: dateValue
      type: java.lang.String
      description: the date value to parse
    - id: dateFormats
      type: java.lang.String[]
      description: the date formats to use
    return:
      type: java.util.Date
      description: the parsed date or null if input could not be parsed
- uid: org.apache.hc.client5.http.utils.DateUtils.parseDate(java.lang.String,java.lang.String[],java.util.Date)
  id: parseDate(java.lang.String,java.lang.String[],java.util.Date)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: parseDate(String dateValue, String[] dateFormats, Date startDate)
  nameWithType: DateUtils.parseDate(String dateValue, String[] dateFormats, Date startDate)
  fullName: org.apache.hc.client5.http.utils.DateUtils.parseDate(String dateValue, String[] dateFormats, Date startDate)
  overload: org.apache.hc.client5.http.utils.DateUtils.parseDate*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Parses the date value using the given date formats.
  syntax:
    content: public static Date parseDate(String dateValue, String[] dateFormats, Date startDate)
    parameters:
    - id: dateValue
      type: java.lang.String
      description: the date value to parse
    - id: dateFormats
      type: java.lang.String[]
      description: the date formats to use
    - id: startDate
      type: java.util.Date
      description: >-
        During parsing, two digit years will be placed in the range
         <code>startDate</code> to <code>startDate + 100 years</code>. This value may
         be <code>null</code>. When <code>null</code> is given as a parameter, year
         <code>2000</code> will be used.
    return:
      type: java.util.Date
      description: the parsed date or null if input could not be parsed
- uid: org.apache.hc.client5.http.utils.DateUtils.parseDate(org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  id: parseDate(org.apache.hc.core5.http.MessageHeaders,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.utils.DateUtils
  langs:
  - java
  name: parseDate(MessageHeaders headers, String headerName)
  nameWithType: DateUtils.parseDate(MessageHeaders headers, String headerName)
  fullName: org.apache.hc.client5.http.utils.DateUtils.parseDate(MessageHeaders headers, String headerName)
  overload: org.apache.hc.client5.http.utils.DateUtils.parseDate*
  type: Method
  package: org.apache.hc.client5.http.utils
  summary: Parses a date value from a header with the given name.
  syntax:
    content: public static Date parseDate(MessageHeaders headers, String headerName)
    parameters:
    - id: headers
      type: org.apache.hc.core5.http.MessageHeaders
      description: message headers
    - id: headerName
      type: java.lang.String
      description: header name
    return:
      type: java.util.Date
      description: the parsed date or null if input could not be parsed
references:
- uid: org.apache.hc.client5.http.utils.DateUtils.DateUtils*
  name: DateUtils
  nameWithType: DateUtils.DateUtils
  fullName: org.apache.hc.client5.http.utils.DateUtils.DateUtils
  package: org.apache.hc.client5.http.utils
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.Date
  spec.java:
  - uid: java.util.Date
    name: Date
    fullName: java.util.Date
- uid: org.apache.hc.client5.http.utils.DateUtils.parseDate*
  name: parseDate
  nameWithType: DateUtils.parseDate
  fullName: org.apache.hc.client5.http.utils.DateUtils.parseDate
  package: org.apache.hc.client5.http.utils
- uid: org.apache.hc.core5.http.MessageHeaders
  name: MessageHeaders
  nameWithType: MessageHeaders
  fullName: org.apache.hc.core5.http.MessageHeaders
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.utils.DateUtils.isAfter*
  name: isAfter
  nameWithType: DateUtils.isAfter
  fullName: org.apache.hc.client5.http.utils.DateUtils.isAfter
  package: org.apache.hc.client5.http.utils
- uid: org.apache.hc.client5.http.utils.DateUtils.isBefore*
  name: isBefore
  nameWithType: DateUtils.isBefore
  fullName: org.apache.hc.client5.http.utils.DateUtils.isBefore
  package: org.apache.hc.client5.http.utils
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.client5.http.utils.DateUtils.formatDate*
  name: formatDate
  nameWithType: DateUtils.formatDate
  fullName: org.apache.hc.client5.http.utils.DateUtils.formatDate
  package: org.apache.hc.client5.http.utils
- uid: org.apache.hc.client5.http.utils.DateUtils.clearThreadLocal*
  name: clearThreadLocal
  nameWithType: DateUtils.clearThreadLocal
  fullName: org.apache.hc.client5.http.utils.DateUtils.clearThreadLocal
  package: org.apache.hc.client5.http.utils
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
