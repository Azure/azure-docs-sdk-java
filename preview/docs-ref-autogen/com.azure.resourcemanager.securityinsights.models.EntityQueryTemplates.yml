### YamlMime:JavaType
uid: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates"
fullName: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates"
name: "EntityQueryTemplates"
nameWithType: "EntityQueryTemplates"
summary: "Resource collection API of Entity<wbr>Query<wbr>Templates."
syntax: "public interface EntityQueryTemplates"
methods:
- uid: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.get(String resourceGroupName, String workspaceName, String entityQueryTemplateId)"
  name: "get(String resourceGroupName, String workspaceName, String entityQueryTemplateId)"
  nameWithType: "EntityQueryTemplates.get(String resourceGroupName, String workspaceName, String entityQueryTemplateId)"
  summary: "Gets an entity query."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "entity query template ID."
    name: "entityQueryTemplateId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract EntityQueryTemplate get(String resourceGroupName, String workspaceName, String entityQueryTemplateId)"
  desc: "Gets an entity query."
  returns:
    description: "an entity query."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate?alt=com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate&text=EntityQueryTemplate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.getWithResponse(String resourceGroupName, String workspaceName, String entityQueryTemplateId, Context context)"
  name: "getWithResponse(String resourceGroupName, String workspaceName, String entityQueryTemplateId, Context context)"
  nameWithType: "EntityQueryTemplates.getWithResponse(String resourceGroupName, String workspaceName, String entityQueryTemplateId, Context context)"
  summary: "Gets an entity query."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "entity query template ID."
    name: "entityQueryTemplateId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EntityQueryTemplate> getWithResponse(String resourceGroupName, String workspaceName, String entityQueryTemplateId, Context context)"
  desc: "Gets an entity query."
  returns:
    description: "an entity query along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate?alt=com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate&text=EntityQueryTemplate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.list(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.list(String resourceGroupName, String workspaceName)"
  name: "list(String resourceGroupName, String workspaceName)"
  nameWithType: "EntityQueryTemplates.list(String resourceGroupName, String workspaceName)"
  summary: "Gets all entity query templates."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<EntityQueryTemplate> list(String resourceGroupName, String workspaceName)"
  desc: "Gets all entity query templates."
  returns:
    description: "all entity query templates as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate?alt=com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate&text=EntityQueryTemplate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.list(java.lang.String,java.lang.String,com.azure.resourcemanager.securityinsights.models.Constant88,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.securityinsights.models.EntityQueryTemplates.list(String resourceGroupName, String workspaceName, Constant88 kind, Context context)"
  name: "list(String resourceGroupName, String workspaceName, Constant88 kind, Context context)"
  nameWithType: "EntityQueryTemplates.list(String resourceGroupName, String workspaceName, Constant88 kind, Context context)"
  summary: "Gets all entity query templates."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The entity template query kind we want to fetch."
    name: "kind"
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.Constant88?alt=com.azure.resourcemanager.securityinsights.models.Constant88&text=Constant88\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<EntityQueryTemplate> list(String resourceGroupName, String workspaceName, Constant88 kind, Context context)"
  desc: "Gets all entity query templates."
  returns:
    description: "all entity query templates as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate?alt=com.azure.resourcemanager.securityinsights.models.EntityQueryTemplate&text=EntityQueryTemplate\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of EntityQueryTemplates."
metadata: {}
package: "com.azure.resourcemanager.securityinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-securityinsights:1.0.0-beta.4
