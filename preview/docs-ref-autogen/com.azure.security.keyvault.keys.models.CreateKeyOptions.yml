### YamlMime:JavaType
uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions"
fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions"
name: "CreateKeyOptions"
nameWithType: "CreateKeyOptions"
summary: "Represents the configurable options to create a key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CreateKeyOptions"
constructors:
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.CreateKeyOptions(java.lang.String,com.azure.security.keyvault.keys.models.KeyType)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.CreateKeyOptions(String name, KeyType keyType)"
  name: "CreateKeyOptions(String name, KeyType keyType)"
  nameWithType: "CreateKeyOptions.CreateKeyOptions(String name, KeyType keyType)"
  summary: "Creates instance of <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> with `name` as key name and `keyType` as type of the key."
  parameters:
  - description: "The name of the key to create."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The type of the key to create."
    name: "keyType"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyType?alt=com.azure.security.keyvault.keys.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateKeyOptions(String name, KeyType keyType)"
  desc: "Creates instance of <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> with `name` as key name and `keyType` as type of the key."
methods:
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getExpiresOn()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getExpiresOn()"
  name: "getExpiresOn()"
  nameWithType: "CreateKeyOptions.getExpiresOn()"
  summary: "Get the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key expiration time\"></xref> in UTC."
  syntax: "public OffsetDateTime getExpiresOn()"
  desc: "Get the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key expiration time\"></xref> in UTC."
  returns:
    description: "The <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key expiration time\"></xref> in UTC."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getKeyOperations()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getKeyOperations()"
  name: "getKeyOperations()"
  nameWithType: "CreateKeyOptions.getKeyOperations()"
  summary: "Get the key operations."
  syntax: "public List<KeyOperation> getKeyOperations()"
  desc: "Get the key operations."
  returns:
    description: "The key operations."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyOperation?alt=com.azure.security.keyvault.keys.models.KeyOperation&text=KeyOperation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getKeyType()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getKeyType()"
  name: "getKeyType()"
  nameWithType: "CreateKeyOptions.getKeyType()"
  summary: "Get the key type."
  syntax: "public KeyType getKeyType()"
  desc: "Get the key type."
  returns:
    description: "The key type."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyType?alt=com.azure.security.keyvault.keys.models.KeyType&text=KeyType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getName()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getName()"
  name: "getName()"
  nameWithType: "CreateKeyOptions.getName()"
  summary: "Get the key name."
  syntax: "public String getName()"
  desc: "Get the key name."
  returns:
    description: "The name of the key."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getNotBefore()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getNotBefore()"
  name: "getNotBefore()"
  nameWithType: "CreateKeyOptions.getNotBefore()"
  summary: "Get the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key's notBefore time\"></xref> in UTC."
  syntax: "public OffsetDateTime getNotBefore()"
  desc: "Get the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key's notBefore time\"></xref> in UTC."
  returns:
    description: "The <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key's notBefore time\"></xref> in UTC."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getReleasePolicy()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getReleasePolicy()"
  name: "getReleasePolicy()"
  nameWithType: "CreateKeyOptions.getReleasePolicy()"
  summary: "Get the policy rules under which the key can be exported."
  syntax: "public KeyReleasePolicy getReleasePolicy()"
  desc: "Get the policy rules under which the key can be exported."
  returns:
    description: "The policy rules under which the key can be exported."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyReleasePolicy?alt=com.azure.security.keyvault.keys.models.KeyReleasePolicy&text=KeyReleasePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getTags()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.getTags()"
  name: "getTags()"
  nameWithType: "CreateKeyOptions.getTags()"
  summary: "Get the tags associated with the key."
  syntax: "public Map<String,String> getTags()"
  desc: "Get the tags associated with the key."
  returns:
    description: "The tag names and values."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.isEnabled()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.isEnabled()"
  name: "isEnabled()"
  nameWithType: "CreateKeyOptions.isEnabled()"
  summary: "Get the enabled value."
  syntax: "public Boolean isEnabled()"
  desc: "Get the enabled value."
  returns:
    description: "The enabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.isExportable()"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.isExportable()"
  name: "isExportable()"
  nameWithType: "CreateKeyOptions.isExportable()"
  summary: "Get a flag that indicates if the private key can be exported."
  syntax: "public Boolean isExportable()"
  desc: "Get a flag that indicates if the private key can be exported."
  returns:
    description: "A flag that indicates if the private key can be exported."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setEnabled(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setEnabled(Boolean enabled)"
  name: "setEnabled(Boolean enabled)"
  nameWithType: "CreateKeyOptions.setEnabled(Boolean enabled)"
  summary: "Set a value that indicates if the key is enabled."
  parameters:
  - description: "The enabled value to set."
    name: "enabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateKeyOptions setEnabled(Boolean enabled)"
  desc: "Set a value that indicates if the key is enabled."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExpiresOn(java.time.OffsetDateTime)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExpiresOn(OffsetDateTime expiresOn)"
  name: "setExpiresOn(OffsetDateTime expiresOn)"
  nameWithType: "CreateKeyOptions.setExpiresOn(OffsetDateTime expiresOn)"
  summary: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key expiration time\"></xref> in UTC."
  parameters:
  - description: "The <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key expiration time\"></xref> in UTC."
    name: "expiresOn"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateKeyOptions setExpiresOn(OffsetDateTime expiresOn)"
  desc: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key expiration time\"></xref> in UTC."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExportable(java.lang.Boolean)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setExportable(Boolean exportable)"
  name: "setExportable(Boolean exportable)"
  nameWithType: "CreateKeyOptions.setExportable(Boolean exportable)"
  summary: "Set a flag that indicates if the private key can be exported."
  parameters:
  - description: "A flag that indicates if the private key can be exported."
    name: "exportable"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateKeyOptions setExportable(Boolean exportable)"
  desc: "Set a flag that indicates if the private key can be exported."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setKeyOperations(com.azure.security.keyvault.keys.models.KeyOperation...)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setKeyOperations(KeyOperation[] keyOperations)"
  name: "setKeyOperations(KeyOperation[] keyOperations)"
  nameWithType: "CreateKeyOptions.setKeyOperations(KeyOperation[] keyOperations)"
  summary: "Set the key operations."
  parameters:
  - description: "The key operations to set."
    name: "keyOperations"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyOperation?alt=com.azure.security.keyvault.keys.models.KeyOperation&text=KeyOperation\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public CreateKeyOptions setKeyOperations(KeyOperation[] keyOperations)"
  desc: "Set the key operations."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setNotBefore(java.time.OffsetDateTime)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setNotBefore(OffsetDateTime notBefore)"
  name: "setNotBefore(OffsetDateTime notBefore)"
  nameWithType: "CreateKeyOptions.setNotBefore(OffsetDateTime notBefore)"
  summary: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key's notBefore time\"></xref> in UTC."
  parameters:
  - description: "The <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key's notBefore time\"></xref> in UTC."
    name: "notBefore"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateKeyOptions setNotBefore(OffsetDateTime notBefore)"
  desc: "Set the <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key's notBefore time\"></xref> in UTC."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setReleasePolicy(com.azure.security.keyvault.keys.models.KeyReleasePolicy)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setReleasePolicy(KeyReleasePolicy releasePolicy)"
  name: "setReleasePolicy(KeyReleasePolicy releasePolicy)"
  nameWithType: "CreateKeyOptions.setReleasePolicy(KeyReleasePolicy releasePolicy)"
  summary: "Set the policy rules under which the key can be exported."
  parameters:
  - description: "The policy rules to set."
    name: "releasePolicy"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyReleasePolicy?alt=com.azure.security.keyvault.keys.models.KeyReleasePolicy&text=KeyReleasePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateKeyOptions setReleasePolicy(KeyReleasePolicy releasePolicy)"
  desc: "Set the policy rules under which the key can be exported."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.security.keyvault.keys.models.CreateKeyOptions.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "CreateKeyOptions.setTags(Map<String,String> tags)"
  summary: "Set the tags to be associated with the key."
  parameters:
  - description: "The tags to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateKeyOptions setTags(Map<String,String> tags)"
  desc: "Set the tags to be associated with the key."
  returns:
    description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.CreateKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateKeyOptions\"></xref> object."
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateKeyOptions&text=CreateKeyOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the configurable options to create a key."
metadata: {}
package: "com.azure.security.keyvault.keys.models"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.7
