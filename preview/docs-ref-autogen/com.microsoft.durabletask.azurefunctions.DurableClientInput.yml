### YamlMime:JavaType
uid: "com.microsoft.durabletask.azurefunctions.DurableClientInput"
fullName: "com.microsoft.durabletask.azurefunctions.DurableClientInput"
name: "DurableClientInput"
nameWithType: "DurableClientInput"
summary: "Azure Functions attribute for binding a function parameter to a @DurableClientContext object."
syntax: "public interface DurableClientInput implements Annotation"
methods:
- uid: "com.microsoft.durabletask.azurefunctions.DurableClientInput.dataType()"
  fullName: "com.microsoft.durabletask.azurefunctions.DurableClientInput.dataType()"
  name: "dataType()"
  nameWithType: "DurableClientInput.dataType()"
  summary: "Defines how Functions runtime should treat the parameter value."
  modifiers:
  - "abstract"
  syntax: "public abstract String dataType()"
  desc: "Defines how Functions runtime should treat the parameter value. Possible values are:\n\n *  \"\": get the value as a string, and try to deserialize to actual parameter type like POJO\n *  string: always get the value as a string\n *  binary: get the value as a binary data, and try to deserialize to actual parameter type byte\\[\\]"
  returns:
    description: "The dataType which will be used by the Functions runtime."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.durabletask.azurefunctions.DurableClientInput.name()"
  fullName: "com.microsoft.durabletask.azurefunctions.DurableClientInput.name()"
  name: "name()"
  nameWithType: "DurableClientInput.name()"
  summary: "The variable name used in function.<wbr>json."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "The variable name used in function.json."
  returns:
    description: "The variable name used in function.json."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.durabletask.azurefunctions.DurableClientInput.taskHub()"
  fullName: "com.microsoft.durabletask.azurefunctions.DurableClientInput.taskHub()"
  name: "taskHub()"
  nameWithType: "DurableClientInput.taskHub()"
  summary: "Optional."
  modifiers:
  - "abstract"
  syntax: "public abstract String taskHub()"
  desc: "Optional. The name of the task hub in which the orchestration data lives.\n\nIf not specified, the task hub name used by this binding will be the value specified in host.json. If a task hub name is not configured in host.json and if the function app is running in the Azure Functions hosted service, then task hub name is derived from the function app's name. Otherwise, a constant value is used for the task hub name.\n\nIn general, you should *not* set a value for the task hub name here unless you intend to configure the client to interact with orchestrations in another app."
  returns:
    description: "The task hub name to use for the client."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Azure Functions attribute for binding a function parameter to a @DurableClientContext object.\n\nThe following is an example of an HTTP-trigger function that uses this input binding to start a new orchestration instance.\n\n```java\n@FunctionName(\"StartHelloCities\")\n public HttpResponseMessage startHelloCities(\n         @HttpTrigger(name = \"request\", methods = {HttpMethod.GET, HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage> request,\n         @DurableClientInput(name = \"durableContext\") DurableClientContext durableContext,\n         final ExecutionContext context) {\n \n     DurableTaskClient client = durableContext.getClient();\n     String instanceId = client.scheduleNewOrchestrationInstance(\"HelloCities\");\n     context.getLogger().info(\"Created new Java orchestration with instance ID = \" + instanceId);\n     return durableContext.createCheckStatusResponse(request, instanceId);\n }\n```"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.durabletask.azurefunctions"
artifact: com.microsoft:durabletask-azure-functions:1.0.0-beta.1
