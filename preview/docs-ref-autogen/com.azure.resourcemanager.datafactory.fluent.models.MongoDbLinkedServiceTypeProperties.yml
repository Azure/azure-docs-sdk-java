### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties"
name: "MongoDbLinkedServiceTypeProperties"
nameWithType: "MongoDbLinkedServiceTypeProperties"
summary: "MongoDB linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MongoDbLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.MongoDbLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.MongoDbLinkedServiceTypeProperties()"
  name: "MongoDbLinkedServiceTypeProperties()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.MongoDbLinkedServiceTypeProperties()"
  syntax: "public MongoDbLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  name: "allowSelfSignedServerCert()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.allowSelfSignedServerCert()"
  summary: "Get the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean)."
  syntax: "public Object allowSelfSignedServerCert()"
  returns:
    description: "the allowSelfSignedServerCert value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.authSource()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.authSource()"
  name: "authSource()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.authSource()"
  summary: "Get the authSource property: Database to verify the username and password. Type: string (or Expression with resultType string)."
  syntax: "public Object authSource()"
  returns:
    description: "the authSource value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authenticationType property: The authentication type to be used to connect to the MongoDB database."
  syntax: "public MongoDbAuthenticationType authenticationType()"
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.MongoDbAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.MongoDbAuthenticationType&text=MongoDbAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.databaseName()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.databaseName()"
  name: "databaseName()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.databaseName()"
  summary: "Get the databaseName property: The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string)."
  syntax: "public Object databaseName()"
  returns:
    description: "the databaseName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.enableSsl()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.enableSsl()"
  name: "enableSsl()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.enableSsl()"
  summary: "Get the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean)."
  syntax: "public Object enableSsl()"
  returns:
    description: "the enableSsl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.password()"
  summary: "Get the password property: Password for authentication."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.port()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.port()"
  name: "port()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.port()"
  summary: "Get the port property: The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0."
  syntax: "public Object port()"
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.server()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.server()"
  name: "server()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.server()"
  summary: "Get the server property: The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string)."
  syntax: "public Object server()"
  returns:
    description: "the server value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.username()"
  summary: "Get the username property: Username for authentication. Type: string (or Expression with resultType string)."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "MongoDbLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withAllowSelfSignedServerCert(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  name: "withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  summary: "Set the allowSelfSignedServerCert property: Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean)."
  parameters:
  - description: "the allowSelfSignedServerCert value to set."
    name: "allowSelfSignedServerCert"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withAllowSelfSignedServerCert(Object allowSelfSignedServerCert)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withAuthSource(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withAuthSource(Object authSource)"
  name: "withAuthSource(Object authSource)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withAuthSource(Object authSource)"
  summary: "Set the authSource property: Database to verify the username and password. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the authSource value to set."
    name: "authSource"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withAuthSource(Object authSource)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.MongoDbAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withAuthenticationType(MongoDbAuthenticationType authenticationType)"
  name: "withAuthenticationType(MongoDbAuthenticationType authenticationType)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withAuthenticationType(MongoDbAuthenticationType authenticationType)"
  summary: "Set the authenticationType property: The authentication type to be used to connect to the MongoDB database."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.MongoDbAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.MongoDbAuthenticationType&text=MongoDbAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withAuthenticationType(MongoDbAuthenticationType authenticationType)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withDatabaseName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withDatabaseName(Object databaseName)"
  name: "withDatabaseName(Object databaseName)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withDatabaseName(Object databaseName)"
  summary: "Set the databaseName property: The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the databaseName value to set."
    name: "databaseName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withDatabaseName(Object databaseName)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withEnableSsl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withEnableSsl(Object enableSsl)"
  name: "withEnableSsl(Object enableSsl)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withEnableSsl(Object enableSsl)"
  summary: "Set the enableSsl property: Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean)."
  parameters:
  - description: "the enableSsl value to set."
    name: "enableSsl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withEnableSsl(Object enableSsl)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: Password for authentication."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withPassword(SecretBase password)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withPort(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withPort(Object port)"
  name: "withPort(Object port)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withPort(Object port)"
  summary: "Set the port property: The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withPort(Object port)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withServer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withServer(Object server)"
  name: "withServer(Object server)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withServer(Object server)"
  summary: "Set the server property: The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the server value to set."
    name: "server"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withServer(Object server)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "MongoDbLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: Username for authentication. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MongoDbLinkedServiceTypeProperties withUsername(Object username)"
  returns:
    description: "the MongoDbLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.MongoDbLinkedServiceTypeProperties&text=MongoDbLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
