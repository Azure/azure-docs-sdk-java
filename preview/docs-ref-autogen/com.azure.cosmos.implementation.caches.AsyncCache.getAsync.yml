### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.caches.AsyncCache.getAsync*"
fullName: "com.azure.cosmos.implementation.caches.AsyncCache<TKey,TValue>.getAsync"
name: "getAsync"
nameWithType: "AsyncCache<TKey,TValue>.getAsync"
members:
- uid: "com.azure.cosmos.implementation.caches.AsyncCache.getAsync(TKey,TValue,java.util.concurrent.Callable<reactor.core.publisher.Mono<TValue>>)"
  fullName: "com.azure.cosmos.implementation.caches.AsyncCache<TKey,TValue>.getAsync(TKey key, TValue obsoleteValue, Callable<Mono<TValue>> singleValueInitFunc)"
  name: "getAsync(TKey key, TValue obsoleteValue, Callable<Mono<TValue>> singleValueInitFunc)"
  nameWithType: "AsyncCache<TKey,TValue>.getAsync(TKey key, TValue obsoleteValue, Callable<Mono<TValue>> singleValueInitFunc)"
  summary: "Gets value corresponding to `key`\n\nIf another initialization function is already running, new initialization function will not be started. The result will be result of currently running initialization function.\n\nIf previous initialization function is successfully completed - value returned by it will be returned unless it is equal to `obsoleteValue`, in which case new initialization function will be started.\n\nIf previous initialization function failed - new one will be launched."
  parameters:
  - description: "Key for which to get a value."
    name: "key"
    type: "<xref href=\"TKey?alt=TKey&text=TKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "Value which is obsolete and needs to be refreshed."
    name: "obsoleteValue"
    type: "<xref href=\"TValue?alt=TValue&text=TValue\" data-throw-if-not-resolved=\"False\" />"
  - description: "Initialization function."
    name: "singleValueInitFunc"
    type: "<xref href=\"java.util.concurrent.Callable?alt=java.util.concurrent.Callable&text=Callable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TValue?alt=TValue&text=TValue\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public Mono<TValue> getAsync(TKey key, TValue obsoleteValue, Callable<Mono<TValue>> singleValueInitFunc)"
  returns:
    description: "Cached value or value returned by initialization function."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TValue?alt=TValue&text=TValue\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.caches"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
