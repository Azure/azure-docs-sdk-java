### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager
  id: KeyVaultKeyManager
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca
  children:
  - com.azure.security.keyvault.jca.KeyVaultKeyManager.KeyVaultKeyManager(java.security.KeyStore,char[])
  - com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)
  - com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket)
  - com.azure.security.keyvault.jca.KeyVaultKeyManager.getCertificateChain(java.lang.String)
  - com.azure.security.keyvault.jca.KeyVaultKeyManager.getClientAliases(java.lang.String,java.security.Principal[])
  - com.azure.security.keyvault.jca.KeyVaultKeyManager.getPrivateKey(java.lang.String)
  - com.azure.security.keyvault.jca.KeyVaultKeyManager.getServerAliases(java.lang.String,java.security.Principal[])
  langs:
  - java
  name: KeyVaultKeyManager
  nameWithType: KeyVaultKeyManager
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager
  type: Class
  package: com.azure.security.keyvault.jca
  summary: The Azure Key Vault variant of the X509ExtendedKeyManager.
  syntax:
    content: public class KeyVaultKeyManager extends X509ExtendedKeyManager
  inheritance:
  - java.lang.Object
  - javax.net.ssl.X509ExtendedKeyManager
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)
  - javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.KeyVaultKeyManager(java.security.KeyStore,char[])
  id: KeyVaultKeyManager(java.security.KeyStore,char[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca.KeyVaultKeyManager
  langs:
  - java
  name: KeyVaultKeyManager(KeyStore keystore, char[] password)
  nameWithType: KeyVaultKeyManager.KeyVaultKeyManager(KeyStore keystore, char[] password)
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.KeyVaultKeyManager(KeyStore keystore, char[] password)
  overload: com.azure.security.keyvault.jca.KeyVaultKeyManager.KeyVaultKeyManager*
  type: Constructor
  package: com.azure.security.keyvault.jca
  summary: Constructor.
  syntax:
    content: public KeyVaultKeyManager(KeyStore keystore, char[] password)
    parameters:
    - id: keystore
      type: java.security.KeyStore
      description: the keystore.
    - id: password
      type: char[]
      description: the password.
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)
  id: chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca.KeyVaultKeyManager
  langs:
  - java
  name: chooseClientAlias(String[] keyType, Principal[] issuers, Socket socket)
  nameWithType: KeyVaultKeyManager.chooseClientAlias(String[] keyType, Principal[] issuers, Socket socket)
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseClientAlias(String[] keyType, Principal[] issuers, Socket socket)
  overload: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseClientAlias*
  type: Method
  package: com.azure.security.keyvault.jca
  syntax:
    content: public String chooseClientAlias(String[] keyType, Principal[] issuers, Socket socket)
    parameters:
    - id: keyType
      type: java.lang.String[]
    - id: issuers
      type: java.security.Principal[]
    - id: socket
      type: java.net.Socket
    return:
      type: java.lang.String
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket)
  id: chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca.KeyVaultKeyManager
  langs:
  - java
  name: chooseServerAlias(String keyType, Principal[] issuers, Socket socket)
  nameWithType: KeyVaultKeyManager.chooseServerAlias(String keyType, Principal[] issuers, Socket socket)
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseServerAlias(String keyType, Principal[] issuers, Socket socket)
  overload: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseServerAlias*
  type: Method
  package: com.azure.security.keyvault.jca
  syntax:
    content: public String chooseServerAlias(String keyType, Principal[] issuers, Socket socket)
    parameters:
    - id: keyType
      type: java.lang.String
    - id: issuers
      type: java.security.Principal[]
    - id: socket
      type: java.net.Socket
    return:
      type: java.lang.String
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getCertificateChain(java.lang.String)
  id: getCertificateChain(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca.KeyVaultKeyManager
  langs:
  - java
  name: getCertificateChain(String alias)
  nameWithType: KeyVaultKeyManager.getCertificateChain(String alias)
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getCertificateChain(String alias)
  overload: com.azure.security.keyvault.jca.KeyVaultKeyManager.getCertificateChain*
  type: Method
  package: com.azure.security.keyvault.jca
  syntax:
    content: public X509Certificate[] getCertificateChain(String alias)
    parameters:
    - id: alias
      type: java.lang.String
    return:
      type: java.security.cert.X509Certificate[]
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getClientAliases(java.lang.String,java.security.Principal[])
  id: getClientAliases(java.lang.String,java.security.Principal[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca.KeyVaultKeyManager
  langs:
  - java
  name: getClientAliases(String keyType, Principal[] issuers)
  nameWithType: KeyVaultKeyManager.getClientAliases(String keyType, Principal[] issuers)
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getClientAliases(String keyType, Principal[] issuers)
  overload: com.azure.security.keyvault.jca.KeyVaultKeyManager.getClientAliases*
  type: Method
  package: com.azure.security.keyvault.jca
  syntax:
    content: public String[] getClientAliases(String keyType, Principal[] issuers)
    parameters:
    - id: keyType
      type: java.lang.String
    - id: issuers
      type: java.security.Principal[]
    return:
      type: java.lang.String[]
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getPrivateKey(java.lang.String)
  id: getPrivateKey(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca.KeyVaultKeyManager
  langs:
  - java
  name: getPrivateKey(String alias)
  nameWithType: KeyVaultKeyManager.getPrivateKey(String alias)
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getPrivateKey(String alias)
  overload: com.azure.security.keyvault.jca.KeyVaultKeyManager.getPrivateKey*
  type: Method
  package: com.azure.security.keyvault.jca
  syntax:
    content: public PrivateKey getPrivateKey(String alias)
    parameters:
    - id: alias
      type: java.lang.String
    return:
      type: java.security.PrivateKey
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getServerAliases(java.lang.String,java.security.Principal[])
  id: getServerAliases(java.lang.String,java.security.Principal[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.azure.security.keyvault.jca.KeyVaultKeyManager
  langs:
  - java
  name: getServerAliases(String keyType, Principal[] issuers)
  nameWithType: KeyVaultKeyManager.getServerAliases(String keyType, Principal[] issuers)
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getServerAliases(String keyType, Principal[] issuers)
  overload: com.azure.security.keyvault.jca.KeyVaultKeyManager.getServerAliases*
  type: Method
  package: com.azure.security.keyvault.jca
  syntax:
    content: public String[] getServerAliases(String keyType, Principal[] issuers)
    parameters:
    - id: keyType
      type: java.lang.String
    - id: issuers
      type: java.security.Principal[]
    return:
      type: java.lang.String[]
references:
- uid: java.security.KeyStore
  spec.java:
  - uid: java.security.KeyStore
    name: KeyStore
    fullName: java.security.KeyStore
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.KeyVaultKeyManager*
  name: KeyVaultKeyManager
  nameWithType: KeyVaultKeyManager.KeyVaultKeyManager
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.KeyVaultKeyManager
  package: com.azure.security.keyvault.jca
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: java.security.Principal[]
  spec.java:
  - uid: java.security.Principal
    name: Principal
    fullName: java.security.Principal
  - name: '[]'
    fullName: '[]'
- uid: java.net.Socket
  spec.java:
  - uid: java.net.Socket
    name: Socket
    fullName: java.net.Socket
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseClientAlias*
  name: chooseClientAlias
  nameWithType: KeyVaultKeyManager.chooseClientAlias
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseClientAlias
  package: com.azure.security.keyvault.jca
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseServerAlias*
  name: chooseServerAlias
  nameWithType: KeyVaultKeyManager.chooseServerAlias
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.chooseServerAlias
  package: com.azure.security.keyvault.jca
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getClientAliases*
  name: getClientAliases
  nameWithType: KeyVaultKeyManager.getClientAliases
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getClientAliases
  package: com.azure.security.keyvault.jca
- uid: java.security.cert.X509Certificate[]
  spec.java:
  - uid: java.security.cert.X509Certificate
    name: X509Certificate
    fullName: java.security.cert.X509Certificate
  - name: '[]'
    fullName: '[]'
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getCertificateChain*
  name: getCertificateChain
  nameWithType: KeyVaultKeyManager.getCertificateChain
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getCertificateChain
  package: com.azure.security.keyvault.jca
- uid: java.security.PrivateKey
  spec.java:
  - uid: java.security.PrivateKey
    name: PrivateKey
    fullName: java.security.PrivateKey
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getPrivateKey*
  name: getPrivateKey
  nameWithType: KeyVaultKeyManager.getPrivateKey
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getPrivateKey
  package: com.azure.security.keyvault.jca
- uid: com.azure.security.keyvault.jca.KeyVaultKeyManager.getServerAliases*
  name: getServerAliases
  nameWithType: KeyVaultKeyManager.getServerAliases
  fullName: com.azure.security.keyvault.jca.KeyVaultKeyManager.getServerAliases
  package: com.azure.security.keyvault.jca
- uid: javax.net.ssl.X509ExtendedKeyManager
  name: X509ExtendedKeyManager
  nameWithType: X509ExtendedKeyManager
  fullName: javax.net.ssl.X509ExtendedKeyManager
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)
  name: X509ExtendedKeyManager.chooseEngineClientAlias(String[],Principal[],SSLEngine)
  nameWithType: X509ExtendedKeyManager.chooseEngineClientAlias(String[],Principal[],SSLEngine)
  fullName: javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)
  name: X509ExtendedKeyManager.chooseEngineServerAlias(String,Principal[],SSLEngine)
  nameWithType: X509ExtendedKeyManager.chooseEngineServerAlias(String,Principal[],SSLEngine)
  fullName: javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
