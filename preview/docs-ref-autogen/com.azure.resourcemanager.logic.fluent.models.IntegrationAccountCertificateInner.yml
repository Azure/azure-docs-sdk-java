### YamlMime:JavaType
uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner"
fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner"
name: "IntegrationAccountCertificateInner"
nameWithType: "IntegrationAccountCertificateInner"
summary: "The integration account certificate."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class IntegrationAccountCertificateInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.IntegrationAccountCertificateInner()"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.IntegrationAccountCertificateInner()"
  name: "IntegrationAccountCertificateInner()"
  nameWithType: "IntegrationAccountCertificateInner.IntegrationAccountCertificateInner()"
  syntax: "public IntegrationAccountCertificateInner()"
methods:
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.changedTime()"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.changedTime()"
  name: "changedTime()"
  nameWithType: "IntegrationAccountCertificateInner.changedTime()"
  summary: "Get the changed<wbr>Time property: The changed time."
  syntax: "public OffsetDateTime changedTime()"
  desc: "Get the changedTime property: The changed time."
  returns:
    description: "the changedTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.createdTime()"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.createdTime()"
  name: "createdTime()"
  nameWithType: "IntegrationAccountCertificateInner.createdTime()"
  summary: "Get the created<wbr>Time property: The created time."
  syntax: "public OffsetDateTime createdTime()"
  desc: "Get the createdTime property: The created time."
  returns:
    description: "the createdTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.key()"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.key()"
  name: "key()"
  nameWithType: "IntegrationAccountCertificateInner.key()"
  summary: "Get the key property: The key details in the key vault."
  syntax: "public KeyVaultKeyReference key()"
  desc: "Get the key property: The key details in the key vault."
  returns:
    description: "the key value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.KeyVaultKeyReference?alt=com.azure.resourcemanager.logic.models.KeyVaultKeyReference&text=KeyVaultKeyReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.metadata()"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.metadata()"
  name: "metadata()"
  nameWithType: "IntegrationAccountCertificateInner.metadata()"
  summary: "Get the metadata property: The metadata."
  syntax: "public Object metadata()"
  desc: "Get the metadata property: The metadata."
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.publicCertificate()"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.publicCertificate()"
  name: "publicCertificate()"
  nameWithType: "IntegrationAccountCertificateInner.publicCertificate()"
  summary: "Get the public<wbr>Certificate property: The public certificate."
  syntax: "public String publicCertificate()"
  desc: "Get the publicCertificate property: The public certificate."
  returns:
    description: "the publicCertificate value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.validate()"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.validate()"
  name: "validate()"
  nameWithType: "IntegrationAccountCertificateInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withKey(com.azure.resourcemanager.logic.models.KeyVaultKeyReference)"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withKey(KeyVaultKeyReference key)"
  name: "withKey(KeyVaultKeyReference key)"
  nameWithType: "IntegrationAccountCertificateInner.withKey(KeyVaultKeyReference key)"
  summary: "Set the key property: The key details in the key vault."
  parameters:
  - description: "the key value to set."
    name: "key"
    type: "<xref href=\"com.azure.resourcemanager.logic.models.KeyVaultKeyReference?alt=com.azure.resourcemanager.logic.models.KeyVaultKeyReference&text=KeyVaultKeyReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IntegrationAccountCertificateInner withKey(KeyVaultKeyReference key)"
  desc: "Set the key property: The key details in the key vault."
  returns:
    description: "the IntegrationAccountCertificateInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner?alt=com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner&text=IntegrationAccountCertificateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "IntegrationAccountCertificateInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IntegrationAccountCertificateInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner?alt=com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner&text=IntegrationAccountCertificateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withMetadata(java.lang.Object)"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withMetadata(Object metadata)"
  name: "withMetadata(Object metadata)"
  nameWithType: "IntegrationAccountCertificateInner.withMetadata(Object metadata)"
  summary: "Set the metadata property: The metadata."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IntegrationAccountCertificateInner withMetadata(Object metadata)"
  desc: "Set the metadata property: The metadata."
  returns:
    description: "the IntegrationAccountCertificateInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner?alt=com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner&text=IntegrationAccountCertificateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withPublicCertificate(java.lang.String)"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withPublicCertificate(String publicCertificate)"
  name: "withPublicCertificate(String publicCertificate)"
  nameWithType: "IntegrationAccountCertificateInner.withPublicCertificate(String publicCertificate)"
  summary: "Set the public<wbr>Certificate property: The public certificate."
  parameters:
  - description: "the publicCertificate value to set."
    name: "publicCertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IntegrationAccountCertificateInner withPublicCertificate(String publicCertificate)"
  desc: "Set the publicCertificate property: The public certificate."
  returns:
    description: "the IntegrationAccountCertificateInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner?alt=com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner&text=IntegrationAccountCertificateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "IntegrationAccountCertificateInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public IntegrationAccountCertificateInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner?alt=com.azure.resourcemanager.logic.fluent.models.IntegrationAccountCertificateInner&text=IntegrationAccountCertificateInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The integration account certificate."
metadata: {}
package: "com.azure.resourcemanager.logic.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-logic:1.0.0-beta.1
