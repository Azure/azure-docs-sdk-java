### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBehavior*"
fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBehavior"
name: "withWriteBehavior"
nameWithType: "DynamicsSink.withWriteBehavior"
members:
- uid: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBehavior(com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior)"
  fullName: "com.azure.resourcemanager.datafactory.models.DynamicsSink.withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  name: "withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  nameWithType: "DynamicsSink.withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  summary: "Set the writeBehavior property: The write behavior for the operation."
  parameters:
  - description: "the writeBehavior value to set."
    name: "writeBehavior"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior?alt=com.azure.resourcemanager.datafactory.models.DynamicsSinkWriteBehavior&text=DynamicsSinkWriteBehavior\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicsSink withWriteBehavior(DynamicsSinkWriteBehavior writeBehavior)"
  returns:
    description: "the DynamicsSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DynamicsSink?alt=com.azure.resourcemanager.datafactory.models.DynamicsSink&text=DynamicsSink\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
