### YamlMime:ManagedReference
items:
- uid: com.azure.core.amqp.implementation.AmqpSendLink
  id: AmqpSendLink
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation
  children:
  - com.azure.core.amqp.implementation.AmqpSendLink.getErrorContext()
  - com.azure.core.amqp.implementation.AmqpSendLink.getLinkSize()
  - com.azure.core.amqp.implementation.AmqpSendLink.getRemoteProperties()
  - com.azure.core.amqp.implementation.AmqpSendLink.send(byte[],int,int,org.apache.qpid.proton.amqp.transport.DeliveryState)
  - com.azure.core.amqp.implementation.AmqpSendLink.send(java.util.List<org.apache.qpid.proton.message.Message>)
  - com.azure.core.amqp.implementation.AmqpSendLink.send(java.util.List<org.apache.qpid.proton.message.Message>,org.apache.qpid.proton.amqp.transport.DeliveryState)
  - com.azure.core.amqp.implementation.AmqpSendLink.send(org.apache.qpid.proton.message.Message)
  - com.azure.core.amqp.implementation.AmqpSendLink.send(org.apache.qpid.proton.message.Message,org.apache.qpid.proton.amqp.transport.DeliveryState)
  langs:
  - java
  name: AmqpSendLink
  nameWithType: AmqpSendLink
  fullName: com.azure.core.amqp.implementation.AmqpSendLink
  type: Interface
  package: com.azure.core.amqp.implementation
  summary: An AMQP link that sends information to the remote endpoint.
  syntax:
    content: public interface AmqpSendLink extends AmqpLink
  implements:
  - com.azure.core.amqp.AmqpLink
- uid: com.azure.core.amqp.implementation.AmqpSendLink.getErrorContext()
  id: getErrorContext()
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: getErrorContext()
  nameWithType: AmqpSendLink.getErrorContext()
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.getErrorContext()
  overload: com.azure.core.amqp.implementation.AmqpSendLink.getErrorContext*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: Gets the context for this AMQP send link.
  syntax:
    content: public abstract AmqpErrorContext getErrorContext()
    return:
      type: com.azure.core.amqp.exception.AmqpErrorContext
- uid: com.azure.core.amqp.implementation.AmqpSendLink.getLinkSize()
  id: getLinkSize()
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: getLinkSize()
  nameWithType: AmqpSendLink.getLinkSize()
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.getLinkSize()
  overload: com.azure.core.amqp.implementation.AmqpSendLink.getLinkSize*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: Gets the size of the send link. <xref uid="org.apache.qpid.proton.message.Message" data-throw-if-not-resolved="false">Messages</xref> sent on the link cannot exceed the size.
  syntax:
    content: public abstract Mono<Integer> getLinkSize()
    return:
      type: reactor.core.publisher.Mono<java.lang.Integer>
      description: A Mono that completes and returns the size of the send link.
- uid: com.azure.core.amqp.implementation.AmqpSendLink.getRemoteProperties()
  id: getRemoteProperties()
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: getRemoteProperties()
  nameWithType: AmqpSendLink.getRemoteProperties()
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.getRemoteProperties()
  overload: com.azure.core.amqp.implementation.AmqpSendLink.getRemoteProperties*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: Gets the properties of the send link returned from the service.
  syntax:
    content: public abstract Mono<Map<Symbol,Object>> getRemoteProperties()
    return:
      type: reactor.core.publisher.Mono<java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>>
      description: A Mono that completes and returns the properties of the send link.
- uid: com.azure.core.amqp.implementation.AmqpSendLink.send(byte[],int,int,org.apache.qpid.proton.amqp.transport.DeliveryState)
  id: send(byte[],int,int,org.apache.qpid.proton.amqp.transport.DeliveryState)
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)
  nameWithType: AmqpSendLink.send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)
  overload: com.azure.core.amqp.implementation.AmqpSendLink.send*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: send the message and return <xref uid="org.apache.qpid.proton.amqp.transport.DeliveryState" data-throw-if-not-resolved="false">DeliveryState</xref> of this delivery in message broker.
  syntax:
    content: public abstract Mono<DeliveryState> send(byte[] bytes, int arrayOffset, int messageFormat, DeliveryState deliveryState)
    parameters:
    - id: bytes
      type: byte[]
      description: to send to message broker
    - id: arrayOffset
      type: int
      description: offset of the message.
    - id: messageFormat
      type: int
      description: to be set on the message.
    - id: deliveryState
      type: org.apache.qpid.proton.amqp.transport.DeliveryState
      description: to be updated on the <xref uid="org.apache.qpid.proton.engine.Delivery" data-throw-if-not-resolved="false">Delivery</xref>.
    return:
      type: reactor.core.publisher.Mono<org.apache.qpid.proton.amqp.transport.DeliveryState>
      description: A completable of <xref uid="org.apache.qpid.proton.amqp.transport.DeliveryState" data-throw-if-not-resolved="false">DeliveryState</xref> received from Message Broker.
- uid: com.azure.core.amqp.implementation.AmqpSendLink.send(java.util.List<org.apache.qpid.proton.message.Message>)
  id: send(java.util.List<org.apache.qpid.proton.message.Message>)
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: send(List<Message> messageBatch)
  nameWithType: AmqpSendLink.send(List<Message> messageBatch)
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.send(List<Message> messageBatch)
  overload: com.azure.core.amqp.implementation.AmqpSendLink.send*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: Batches the messages given into a single proton-j message that is sent down the wire.
  syntax:
    content: public abstract Mono<Void> send(List<Message> messageBatch)
    parameters:
    - id: messageBatch
      type: java.util.List<org.apache.qpid.proton.message.Message>
      description: The batch of messages to send to the service.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A Mono that completes when all the batched messages are successfully transmitted to the message broker.
- uid: com.azure.core.amqp.implementation.AmqpSendLink.send(java.util.List<org.apache.qpid.proton.message.Message>,org.apache.qpid.proton.amqp.transport.DeliveryState)
  id: send(java.util.List<org.apache.qpid.proton.message.Message>,org.apache.qpid.proton.amqp.transport.DeliveryState)
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: send(List<Message> messages, DeliveryState deliveryState)
  nameWithType: AmqpSendLink.send(List<Message> messages, DeliveryState deliveryState)
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.send(List<Message> messages, DeliveryState deliveryState)
  overload: com.azure.core.amqp.implementation.AmqpSendLink.send*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: Batches list of messages given into a single proton-j message that is sent down the wire.
  syntax:
    content: public abstract Mono<Void> send(List<Message> messages, DeliveryState deliveryState)
    parameters:
    - id: messages
      type: java.util.List<org.apache.qpid.proton.message.Message>
      description: The list of messages to send to the service.
    - id: deliveryState
      type: org.apache.qpid.proton.amqp.transport.DeliveryState
      description: to be sent along with message.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A Mono that completes when all the batched messages are successfully transmitted to message broker.
- uid: com.azure.core.amqp.implementation.AmqpSendLink.send(org.apache.qpid.proton.message.Message)
  id: send(org.apache.qpid.proton.message.Message)
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: send(Message message)
  nameWithType: AmqpSendLink.send(Message message)
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.send(Message message)
  overload: com.azure.core.amqp.implementation.AmqpSendLink.send*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: Sends a single message to the remote endpoint.
  syntax:
    content: public abstract Mono<Void> send(Message message)
    parameters:
    - id: message
      type: org.apache.qpid.proton.message.Message
      description: Message to send.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A Mono that completes when the message has been sent.
- uid: com.azure.core.amqp.implementation.AmqpSendLink.send(org.apache.qpid.proton.message.Message,org.apache.qpid.proton.amqp.transport.DeliveryState)
  id: send(org.apache.qpid.proton.message.Message,org.apache.qpid.proton.amqp.transport.DeliveryState)
  artifact: com.azure:azure-core-amqp:1.6.0-beta.1
  parent: com.azure.core.amqp.implementation.AmqpSendLink
  langs:
  - java
  name: send(Message message, DeliveryState deliveryState)
  nameWithType: AmqpSendLink.send(Message message, DeliveryState deliveryState)
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.send(Message message, DeliveryState deliveryState)
  overload: com.azure.core.amqp.implementation.AmqpSendLink.send*
  type: Method
  package: com.azure.core.amqp.implementation
  summary: Sends a single message to the remote endpoint.
  syntax:
    content: public abstract Mono<Void> send(Message message, DeliveryState deliveryState)
    parameters:
    - id: message
      type: org.apache.qpid.proton.message.Message
      description: Message to send.
    - id: deliveryState
      type: org.apache.qpid.proton.amqp.transport.DeliveryState
      description: to be sent along with message.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A Mono that completes when the message has been sent.
references:
- uid: org.apache.qpid.proton.message.Message
  spec.java:
  - uid: org.apache.qpid.proton.message.Message
    name: Message
    fullName: org.apache.qpid.proton.message.Message
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.core.amqp.implementation.AmqpSendLink.send*
  name: send
  nameWithType: AmqpSendLink.send
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.send
  package: com.azure.core.amqp.implementation
- uid: java.util.List<org.apache.qpid.proton.message.Message>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: org.apache.qpid.proton.message.Message
    name: Message
    fullName: org.apache.qpid.proton.message.Message
  - name: '>'
    fullName: '>'
- uid: org.apache.qpid.proton.amqp.transport.DeliveryState
  spec.java:
  - uid: org.apache.qpid.proton.amqp.transport.DeliveryState
    name: DeliveryState
    fullName: org.apache.qpid.proton.amqp.transport.DeliveryState
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Mono<org.apache.qpid.proton.amqp.transport.DeliveryState>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: org.apache.qpid.proton.amqp.transport.DeliveryState
    name: DeliveryState
    fullName: org.apache.qpid.proton.amqp.transport.DeliveryState
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<java.lang.Integer>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
  - name: '>'
    fullName: '>'
- uid: com.azure.core.amqp.implementation.AmqpSendLink.getLinkSize*
  name: getLinkSize
  nameWithType: AmqpSendLink.getLinkSize
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.getLinkSize
  package: com.azure.core.amqp.implementation
- uid: reactor.core.publisher.Mono<java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: org.apache.qpid.proton.amqp.Symbol
    name: Symbol
    fullName: org.apache.qpid.proton.amqp.Symbol
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.core.amqp.implementation.AmqpSendLink.getRemoteProperties*
  name: getRemoteProperties
  nameWithType: AmqpSendLink.getRemoteProperties
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.getRemoteProperties
  package: com.azure.core.amqp.implementation
- uid: com.azure.core.amqp.exception.AmqpErrorContext
  name: AmqpErrorContext
  nameWithType: AmqpErrorContext
  fullName: com.azure.core.amqp.exception.AmqpErrorContext
- uid: com.azure.core.amqp.implementation.AmqpSendLink.getErrorContext*
  name: getErrorContext
  nameWithType: AmqpSendLink.getErrorContext
  fullName: com.azure.core.amqp.implementation.AmqpSendLink.getErrorContext
  package: com.azure.core.amqp.implementation
- uid: com.azure.core.amqp.AmqpLink
  name: AmqpLink
  nameWithType: AmqpLink
  fullName: com.azure.core.amqp.AmqpLink
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Integer
  name: Integer
  nameWithType: Integer
  fullName: java.lang.Integer
- uid: org.apache.qpid.proton.amqp.Symbol,java.lang.Object
  name: Symbol,Object
  nameWithType: Symbol,Object
  fullName: org.apache.qpid.proton.amqp.Symbol,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
