### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.models.PartitionKeyDefinition"
  id: "PartitionKeyDefinition"
  parent: "com.azure.cosmos.models"
  children:
  - "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition()"
  - "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition(java.lang.String)"
  - "com.azure.cosmos.models.PartitionKeyDefinition.getKind()"
  - "com.azure.cosmos.models.PartitionKeyDefinition.getNonePartitionKeyValue()"
  - "com.azure.cosmos.models.PartitionKeyDefinition.getPaths()"
  - "com.azure.cosmos.models.PartitionKeyDefinition.getVersion()"
  - "com.azure.cosmos.models.PartitionKeyDefinition.isSystemKey()"
  - "com.azure.cosmos.models.PartitionKeyDefinition.populatePropertyBag()"
  - "com.azure.cosmos.models.PartitionKeyDefinition.setKind(com.azure.cosmos.models.PartitionKind)"
  - "com.azure.cosmos.models.PartitionKeyDefinition.setPaths(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.models.PartitionKeyDefinition.setVersion(com.azure.cosmos.models.PartitionKeyDefinitionVersion)"
  langs:
  - "java"
  name: "PartitionKeyDefinition"
  nameWithType: "PartitionKeyDefinition"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition"
  type: "Class"
  package: "com.azure.cosmos.models"
  summary: "Represents a partition key definition in the Azure Cosmos DB database service. A partition key definition specifies which document property is used as the partition key in a collection that has multiple partitions."
  syntax:
    content: "public final class PartitionKeyDefinition extends JsonSerializable"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.models.JsonSerializable"
  inheritedMembers:
  - "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getLogger()"
  - "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getMap()"
  - "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  - "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.models.JsonSerializable.toJson()"
  - "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  - "com.azure.cosmos.models.JsonSerializable.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition()"
  id: "PartitionKeyDefinition()"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "PartitionKeyDefinition()"
  nameWithType: "PartitionKeyDefinition.PartitionKeyDefinition()"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition()"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Constructor. Creates a new instance of the PartitionKeyDefinition object."
  syntax:
    content: "public PartitionKeyDefinition()"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition(java.lang.String)"
  id: "PartitionKeyDefinition(java.lang.String)"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "PartitionKeyDefinition(String jsonString)"
  nameWithType: "PartitionKeyDefinition.PartitionKeyDefinition(String jsonString)"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition(String jsonString)"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Constructor. Creates a new instance of the PartitionKeyDefinition object from a JSON string."
  syntax:
    content: " PartitionKeyDefinition(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the JSON string that represents the partition key definition."
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getKind()"
  id: "getKind()"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "getKind()"
  nameWithType: "PartitionKeyDefinition.getKind()"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getKind()"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.getKind*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the partition algorithm used to calculate the partition id given a partition key."
  syntax:
    content: "public PartitionKind getKind()"
    return:
      type: "com.azure.cosmos.models.PartitionKind"
      description: "the partition algorithm."
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getNonePartitionKeyValue()"
  id: "getNonePartitionKeyValue()"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "getNonePartitionKeyValue()"
  nameWithType: "PartitionKeyDefinition.getNonePartitionKeyValue()"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getNonePartitionKeyValue()"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.getNonePartitionKeyValue*"
  type: "Method"
  package: "com.azure.cosmos.models"
  syntax:
    content: " PartitionKeyInternal getNonePartitionKeyValue()"
    return:
      type: "com.azure.cosmos.implementation.routing.PartitionKeyInternal"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getPaths()"
  id: "getPaths()"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "getPaths()"
  nameWithType: "PartitionKeyDefinition.getPaths()"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getPaths()"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.getPaths*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the document property paths for the partition key."
  syntax:
    content: "public List<String> getPaths()"
    return:
      type: "java.util.List<java.lang.String>"
      description: "the paths to the document properties that form the partition key."
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getVersion()"
  id: "getVersion()"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "getVersion()"
  nameWithType: "PartitionKeyDefinition.getVersion()"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getVersion()"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.getVersion*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets version."
  syntax:
    content: "public PartitionKeyDefinitionVersion getVersion()"
    return:
      type: "com.azure.cosmos.models.PartitionKeyDefinitionVersion"
      description: "the <xref uid=\"com.azure.cosmos.models.PartitionKeyDefinitionVersion\" data-throw-if-not-resolved=\"false\">PartitionKeyDefinitionVersion</xref>"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.isSystemKey()"
  id: "isSystemKey()"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "isSystemKey()"
  nameWithType: "PartitionKeyDefinition.isSystemKey()"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.isSystemKey()"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.isSystemKey*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Indicates if the partition key is generated by the system."
  syntax:
    content: " Boolean isSystemKey()"
    return:
      type: "java.lang.Boolean"
      description: "the boolean indicating is it is a system key."
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.populatePropertyBag()"
  id: "populatePropertyBag()"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "populatePropertyBag()"
  nameWithType: "PartitionKeyDefinition.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.populatePropertyBag()"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.populatePropertyBag*"
  type: "Method"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected void populatePropertyBag()"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.setKind(com.azure.cosmos.models.PartitionKind)"
  id: "setKind(com.azure.cosmos.models.PartitionKind)"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "setKind(PartitionKind kind)"
  nameWithType: "PartitionKeyDefinition.setKind(PartitionKind kind)"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.setKind(PartitionKind kind)"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.setKind*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the partition algorithm used to calculate the partition id given a partition key."
  syntax:
    content: "public PartitionKeyDefinition setKind(PartitionKind kind)"
    parameters:
    - id: "kind"
      type: "com.azure.cosmos.models.PartitionKind"
      description: "the partition algorithm."
    return:
      type: "com.azure.cosmos.models.PartitionKeyDefinition"
      description: "this PartitionKeyDefinition."
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.setPaths(java.util.List<java.lang.String>)"
  id: "setPaths(java.util.List<java.lang.String>)"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "setPaths(List<String> paths)"
  nameWithType: "PartitionKeyDefinition.setPaths(List<String> paths)"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.setPaths(List<String> paths)"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.setPaths*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the document property paths for the partition key."
  syntax:
    content: "public PartitionKeyDefinition setPaths(List<String> paths)"
    parameters:
    - id: "paths"
      type: "java.util.List<java.lang.String>"
      description: "the paths to document properties that form the partition key."
    return:
      type: "com.azure.cosmos.models.PartitionKeyDefinition"
      description: "this PartitionKeyDefinition."
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.setVersion(com.azure.cosmos.models.PartitionKeyDefinitionVersion)"
  id: "setVersion(com.azure.cosmos.models.PartitionKeyDefinitionVersion)"
  parent: "com.azure.cosmos.models.PartitionKeyDefinition"
  langs:
  - "java"
  name: "setVersion(PartitionKeyDefinitionVersion version)"
  nameWithType: "PartitionKeyDefinition.setVersion(PartitionKeyDefinitionVersion version)"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.setVersion(PartitionKeyDefinitionVersion version)"
  overload: "com.azure.cosmos.models.PartitionKeyDefinition.setVersion*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets version."
  syntax:
    content: "public PartitionKeyDefinition setVersion(PartitionKeyDefinitionVersion version)"
    parameters:
    - id: "version"
      type: "com.azure.cosmos.models.PartitionKeyDefinitionVersion"
      description: "the version"
    return:
      type: "com.azure.cosmos.models.PartitionKeyDefinition"
      description: "the version"
references:
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition*"
  name: "PartitionKeyDefinition"
  nameWithType: "PartitionKeyDefinition.PartitionKeyDefinition"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.PartitionKeyDefinition"
  package: "com.azure.cosmos.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.models.PartitionKind"
  name: "PartitionKind"
  nameWithType: "PartitionKind"
  fullName: "com.azure.cosmos.models.PartitionKind"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getKind*"
  name: "getKind"
  nameWithType: "PartitionKeyDefinition.getKind"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getKind"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.setKind*"
  name: "setKind"
  nameWithType: "PartitionKeyDefinition.setKind"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.setKind"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.PartitionKeyDefinitionVersion"
  name: "PartitionKeyDefinitionVersion"
  nameWithType: "PartitionKeyDefinitionVersion"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinitionVersion"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getVersion*"
  name: "getVersion"
  nameWithType: "PartitionKeyDefinition.getVersion"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getVersion"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.setVersion*"
  name: "setVersion"
  nameWithType: "PartitionKeyDefinition.setVersion"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.setVersion"
  package: "com.azure.cosmos.models"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getPaths*"
  name: "getPaths"
  nameWithType: "PartitionKeyDefinition.getPaths"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getPaths"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.setPaths*"
  name: "setPaths"
  nameWithType: "PartitionKeyDefinition.setPaths"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.setPaths"
  package: "com.azure.cosmos.models"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.isSystemKey*"
  name: "isSystemKey"
  nameWithType: "PartitionKeyDefinition.isSystemKey"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.isSystemKey"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.implementation.routing.PartitionKeyInternal"
  name: "PartitionKeyInternal"
  nameWithType: "PartitionKeyInternal"
  fullName: "com.azure.cosmos.implementation.routing.PartitionKeyInternal"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.getNonePartitionKeyValue*"
  name: "getNonePartitionKeyValue"
  nameWithType: "PartitionKeyDefinition.getNonePartitionKeyValue"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.getNonePartitionKeyValue"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.PartitionKeyDefinition.populatePropertyBag*"
  name: "populatePropertyBag"
  nameWithType: "PartitionKeyDefinition.populatePropertyBag"
  fullName: "com.azure.cosmos.models.PartitionKeyDefinition.populatePropertyBag"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.JsonSerializable"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable"
  fullName: "com.azure.cosmos.models.JsonSerializable"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  name: "JsonSerializable.serializeJsonToByteBuffer()"
  nameWithType: "JsonSerializable.serializeJsonToByteBuffer()"
  fullName: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
- uid: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  name: "JsonSerializable.getPropertyBag()"
  nameWithType: "JsonSerializable.getPropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.models.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getMap()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.models.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toString()"
- uid: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.cosmos.models.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.models.JsonSerializable."
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
