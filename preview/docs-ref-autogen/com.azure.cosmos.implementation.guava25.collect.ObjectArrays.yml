### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  id: ObjectArrays
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T,T[])
  - com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T[],T)
  - com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T[],T[],java.lang.Class<T>)
  - com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>newArray(T[],int)
  - com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>newArray(java.lang.Class<T>,int)
  langs:
  - java
  name: ObjectArrays
  nameWithType: ObjectArrays
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Static utility methods pertaining to object arrays.
  syntax:
    content: public final class ObjectArrays
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T,T[])
  id: <T>concat(T,T[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  langs:
  - java
  name: <T>concat(T element, T[] array)
  nameWithType: ObjectArrays.<T>concat(T element, T[] array)
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T element, T[] array)
  overload: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.concat*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new array that prepends `element` to `array`.
  syntax:
    content: public static T[] <T>concat(T element, T[] array)
    parameters:
    - id: element
      type: T
      description: the element to prepend to the front of <code>array</code>
    - id: array
      type: T[]
      description: the array of elements to append
    return:
      type: T[]
      description: >-
        an array whose size is one larger than <code>array</code>, with <code>element</code> occupying
             the first position, and the elements of <code>array</code> occupying the remaining elements.
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T[],T)
  id: <T>concat(T[],T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  langs:
  - java
  name: <T>concat(T[] array, T element)
  nameWithType: ObjectArrays.<T>concat(T[] array, T element)
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T[] array, T element)
  overload: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.concat*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new array that appends `element` to `array`.
  syntax:
    content: public static T[] <T>concat(T[] array, T element)
    parameters:
    - id: array
      type: T[]
      description: the array of elements to prepend
    - id: element
      type: T
      description: the element to append to the end
    return:
      type: T[]
      description: >-
        an array whose size is one larger than <code>array</code>, with the same contents as <code>
             array</code>, plus <code>element</code> occupying the last position.
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T[],T[],java.lang.Class<T>)
  id: <T>concat(T[],T[],java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  langs:
  - java
  name: <T>concat(T[] first, T[] second, Class<T> type)
  nameWithType: ObjectArrays.<T>concat(T[] first, T[] second, Class<T> type)
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat(T[] first, T[] second, Class<T> type)
  overload: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.concat*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new array that contains the concatenated contents of two arrays.
  syntax:
    content: public static T[] <T>concat(T[] first, T[] second, Class<T> type)
    parameters:
    - id: first
      type: T[]
      description: the first array of elements to concatenate
    - id: second
      type: T[]
      description: the second array of elements to concatenate
    - id: type
      type: java.lang.Class<T>
      description: the component type of the returned array
    return:
      type: T[]
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>newArray(T[],int)
  id: <T>newArray(T[],int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  langs:
  - java
  name: <T>newArray(T[] reference, int length)
  nameWithType: ObjectArrays.<T>newArray(T[] reference, int length)
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>newArray(T[] reference, int length)
  overload: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.newArray*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new array of the given length with the same type as a reference array.
  syntax:
    content: public static T[] <T>newArray(T[] reference, int length)
    parameters:
    - id: reference
      type: T[]
      description: any array of the desired type
    - id: length
      type: int
      description: the length of the new array
    return:
      type: T[]
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>newArray(java.lang.Class<T>,int)
  id: <T>newArray(java.lang.Class<T>,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  langs:
  - java
  name: <T>newArray(Class<T> type, int length)
  nameWithType: ObjectArrays.<T>newArray(Class<T> type, int length)
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>newArray(Class<T> type, int length)
  overload: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.newArray*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new array of the given length with the specified component type.
  syntax:
    content: public static T[] <T>newArray(Class<T> type, int length)
    parameters:
    - id: type
      type: java.lang.Class<T>
      description: the component type
    - id: length
      type: int
      description: the length of the new array
    return:
      type: T[]
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.ObjectArrays()
  id: ObjectArrays()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ObjectArrays
  langs:
  - java
  name: ObjectArrays()
  nameWithType: ObjectArrays.ObjectArrays()
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.ObjectArrays()
  overload: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.ObjectArrays*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private ObjectArrays()
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.ObjectArrays*
  name: ObjectArrays
  nameWithType: ObjectArrays.ObjectArrays
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.ObjectArrays
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: T[]
  spec.java:
  - uid: T
    name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.newArray*
  name: <T>newArray
  nameWithType: ObjectArrays.<T>newArray
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>newArray
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.concat*
  name: <T>concat
  nameWithType: ObjectArrays.<T>concat
  fullName: com.azure.cosmos.implementation.guava25.collect.ObjectArrays.<T>concat
  package: com.azure.cosmos.implementation.guava25.collect
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
