### YamlMime:JavaType
uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults"
fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults"
name: "BackupVaults"
nameWithType: "BackupVaults"
summary: "Resource collection API of Backup<wbr>Vaults."
syntax: "public interface BackupVaults"
methods:
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.checkNameAvailability(java.lang.String,java.lang.String,com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.checkNameAvailability(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters)"
  name: "checkNameAvailability(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters)"
  nameWithType: "BackupVaults.checkNameAvailability(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters)"
  summary: "API to check for resource name availability."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The location in which uniqueness will be verified."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Check name availability request."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResult checkNameAvailability(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters)"
  desc: "API to check for resource name availability."
  returns:
    description: "checkNameAvailabilityResult."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityResult?alt=com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.checkNameAvailabilityWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.checkNameAvailabilityWithResponse(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters, Context context)"
  name: "checkNameAvailabilityWithResponse(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters, Context context)"
  nameWithType: "BackupVaults.checkNameAvailabilityWithResponse(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters, Context context)"
  summary: "API to check for resource name availability."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The location in which uniqueness will be verified."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Check name availability request."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityResult> checkNameAvailabilityWithResponse(String resourceGroupName, String location, CheckNameAvailabilityRequest parameters, Context context)"
  desc: "API to check for resource name availability."
  returns:
    description: "checkNameAvailabilityResult."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityResult?alt=com.azure.resourcemanager.dataprotection.models.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.define(String name)"
  name: "define(String name)"
  nameWithType: "BackupVaults.define(String name)"
  summary: "Begins definition for a new Backup<wbr>Vault<wbr>Resource resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackupVaultResource.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new BackupVaultResource resource."
  returns:
    description: "the first stage of the new BackupVaultResource definition."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource.DefinitionStages.Blank?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "BackupVaults.deleteById(String id)"
  summary: "Deletes a Backup<wbr>Vault resource from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes a BackupVault resource from the resource group."
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "BackupVaults.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes a Backup<wbr>Vault resource from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes a BackupVault resource from the resource group."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteByResourceGroup(String resourceGroupName, String vaultName)"
  name: "deleteByResourceGroup(String resourceGroupName, String vaultName)"
  nameWithType: "BackupVaults.deleteByResourceGroup(String resourceGroupName, String vaultName)"
  summary: "Deletes a Backup<wbr>Vault resource from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the backup vault."
    name: "vaultName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String vaultName)"
  desc: "Deletes a BackupVault resource from the resource group."
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.deleteWithResponse(String resourceGroupName, String vaultName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String vaultName, Context context)"
  nameWithType: "BackupVaults.deleteWithResponse(String resourceGroupName, String vaultName, Context context)"
  summary: "Deletes a Backup<wbr>Vault resource from the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the backup vault."
    name: "vaultName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String vaultName, Context context)"
  desc: "Deletes a BackupVault resource from the resource group."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getById(String id)"
  name: "getById(String id)"
  nameWithType: "BackupVaults.getById(String id)"
  summary: "Returns a resource belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackupVaultResource getById(String id)"
  desc: "Returns a resource belonging to a resource group."
  returns:
    description: "backupVault Resource."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "BackupVaults.getByIdWithResponse(String id, Context context)"
  summary: "Returns a resource belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<BackupVaultResource> getByIdWithResponse(String id, Context context)"
  desc: "Returns a resource belonging to a resource group."
  returns:
    description: "backupVault Resource."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getByResourceGroup(String resourceGroupName, String vaultName)"
  name: "getByResourceGroup(String resourceGroupName, String vaultName)"
  nameWithType: "BackupVaults.getByResourceGroup(String resourceGroupName, String vaultName)"
  summary: "Returns a resource belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the backup vault."
    name: "vaultName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BackupVaultResource getByResourceGroup(String resourceGroupName, String vaultName)"
  desc: "Returns a resource belonging to a resource group."
  returns:
    description: "backupVault Resource."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)"
  nameWithType: "BackupVaults.getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)"
  summary: "Returns a resource belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the backup vault."
    name: "vaultName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<BackupVaultResource> getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context)"
  desc: "Returns a resource belonging to a resource group."
  returns:
    description: "backupVault Resource."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.list()"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.list()"
  name: "list()"
  nameWithType: "BackupVaults.list()"
  summary: "Returns resource collection belonging to a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<BackupVaultResource> list()"
  desc: "Returns resource collection belonging to a subscription."
  returns:
    description: "backupVaultResourceList."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.list(Context context)"
  name: "list(Context context)"
  nameWithType: "BackupVaults.list(Context context)"
  summary: "Returns resource collection belonging to a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BackupVaultResource> list(Context context)"
  desc: "Returns resource collection belonging to a subscription."
  returns:
    description: "backupVaultResourceList."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "BackupVaults.listByResourceGroup(String resourceGroupName)"
  summary: "Returns resource collection belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BackupVaultResource> listByResourceGroup(String resourceGroupName)"
  desc: "Returns resource collection belonging to a resource group."
  returns:
    description: "backupVaultResourceList."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupVaults.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupVaults.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "BackupVaults.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Returns resource collection belonging to a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group where the backup vault is present."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<BackupVaultResource> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Returns resource collection belonging to a resource group."
  returns:
    description: "backupVaultResourceList."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupVaultResource?alt=com.azure.resourcemanager.dataprotection.models.BackupVaultResource&text=BackupVaultResource\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of BackupVaults."
metadata: {}
package: "com.azure.resourcemanager.dataprotection.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-dataprotection:1.0.0-beta.1
