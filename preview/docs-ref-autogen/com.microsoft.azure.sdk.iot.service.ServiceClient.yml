### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient
  id: ServiceClient
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ServiceClientOptions)
  - com.microsoft.azure.sdk.iot.service.ServiceClient.close()
  - com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync()
  - com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ServiceClientOptions)
  - com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver()
  - com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver(java.lang.String)
  - com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver()
  - com.microsoft.azure.sdk.iot.service.ServiceClient.iotHubConnectionString
  - com.microsoft.azure.sdk.iot.service.ServiceClient.open()
  - com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync()
  - com.microsoft.azure.sdk.iot.service.ServiceClient.send(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  - com.microsoft.azure.sdk.iot.service.ServiceClient.send(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  - com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  langs:
  - java
  name: ServiceClient
  nameWithType: ServiceClient
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient
  type: Class
  package: com.microsoft.azure.sdk.iot.service
  summary: Extend the ServiceClient class and provide AMPQ specific implementation.
  syntax:
    content: public class ServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  id: ServiceClient(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service
  summary: Initialize AMQP sender using given connection string
  syntax:
    content: protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: iotHubConnectionString
      type: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
      description: The ConnectionString object for the IotHub
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: protocol to use
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ServiceClientOptions)
  id: ServiceClient(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ServiceClientOptions)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  nameWithType: ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service
  summary: Initialize AMQP sender using given connection string
  syntax:
    content: protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
    parameters:
    - id: iotHubConnectionString
      type: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
      description: The ConnectionString object for the IotHub
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: protocol to use
    - id: options
      type: com.microsoft.azure.sdk.iot.service.ServiceClientOptions
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.close()
  id: close()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: close()
  nameWithType: ServiceClient.close()
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.close()
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.close*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Close AMQP sender
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the AmqpSender object is not initialized
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync()
  id: closeAsync()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: closeAsync()
  nameWithType: ServiceClient.closeAsync()
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync()
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Provide asynchronous access to close()
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: The future object for the requested operation
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  id: createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Create ServiceClient from the specified connection string
  syntax:
    content: public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: The connection string for the IotHub
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: protocol to use
    return:
      type: com.microsoft.azure.sdk.iot.service.ServiceClient
      description: The created ServiceClient object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the object creation failed
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ServiceClientOptions)
  id: createFromConnectionString(java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ServiceClientOptions)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  nameWithType: ServiceClient.createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Create ServiceClient from the specified connection string
  syntax:
    content: public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: The connection string for the IotHub
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
      description: protocol to use
    - id: options
      type: com.microsoft.azure.sdk.iot.service.ServiceClientOptions
      description: The connection options to use when connecting to the service. May be null if no custom options will be used.
    return:
      type: com.microsoft.azure.sdk.iot.service.ServiceClient
      description: The created ServiceClient object
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the object creation failed
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver()
  id: getFeedbackReceiver()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: getFeedbackReceiver()
  nameWithType: ServiceClient.getFeedbackReceiver()
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver()
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get FeedbackReceiver object.
  syntax:
    content: public FeedbackReceiver getFeedbackReceiver()
    return:
      type: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
      description: The instance of the FeedbackReceiver
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver(java.lang.String)
  id: getFeedbackReceiver(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: getFeedbackReceiver(String deviceId)
  nameWithType: ServiceClient.getFeedbackReceiver(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get FeedbackReceiver object.This API has been deprecated. Use new API without deviceId as an input parameter.
  syntax:
    content: public FeedbackReceiver getFeedbackReceiver(String deviceId)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device identifier for the target device
    return:
      type: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
      description: The instance of the FeedbackReceiver
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver()
  id: getFileUploadNotificationReceiver()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: getFileUploadNotificationReceiver()
  nameWithType: ServiceClient.getFileUploadNotificationReceiver()
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver()
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Get FileUploadNotificationReceiver object.
  syntax:
    content: public FileUploadNotificationReceiver getFileUploadNotificationReceiver()
    return:
      type: com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver
      description: The instance of the FileUploadNotificationReceiver
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.iotHubConnectionString
  id: iotHubConnectionString
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: iotHubConnectionString
  nameWithType: ServiceClient.iotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.iotHubConnectionString
  type: Field
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: protected IotHubConnectionString iotHubConnectionString
    return:
      type: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.open()
  id: open()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: open()
  nameWithType: ServiceClient.open()
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.open()
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.open*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Open AMQP sender
  syntax:
    content: public void open()
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the AmqpSender object is not initialized
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync()
  id: openAsync()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: openAsync()
  nameWithType: ServiceClient.openAsync()
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync()
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Provide asynchronous access to open()
  syntax:
    content: public CompletableFuture<Void> openAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: The future object for the requested operation
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.send(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  id: send(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: send(String deviceId, Message message)
  nameWithType: ServiceClient.send(String deviceId, Message message)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.send(String deviceId, Message message)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.send*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Send a one-way message to the specified device
  syntax:
    content: public void send(String deviceId, Message message)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device identifier for the target device
    - id: message
      type: com.microsoft.azure.sdk.iot.service.Message
      description: The message for the device
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the AmqpSender object is not initialized
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the AmqpSender object is not initialized
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.send(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  id: send(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: send(String deviceId, String moduleId, Message message)
  nameWithType: ServiceClient.send(String deviceId, String moduleId, Message message)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.send(String deviceId, String moduleId, Message message)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.send*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Send a one-way message to the specified module
  syntax:
    content: public void send(String deviceId, String moduleId, Message message)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device identifier for the target device
    - id: moduleId
      type: java.lang.String
      description: The module identifier for the target device
    - id: message
      type: com.microsoft.azure.sdk.iot.service.Message
      description: The message for the device
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the AmqpSender object is not initialized
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the AmqpSender object is not initialized
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  id: sendAsync(java.lang.String,com.microsoft.azure.sdk.iot.service.Message)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.ServiceClient
  langs:
  - java
  name: sendAsync(String deviceId, Message message)
  nameWithType: ServiceClient.sendAsync(String deviceId, Message message)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync(String deviceId, Message message)
  overload: com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  summary: Provide asynchronous access to send()
  syntax:
    content: public CompletableFuture<Void> sendAsync(String deviceId, Message message)
    parameters:
    - id: deviceId
      type: java.lang.String
      description: The device identifier for the target device
    - id: message
      type: com.microsoft.azure.sdk.iot.service.Message
      description: The message for the device
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: The future object for the requested operation
references:
- uid: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
- uid: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient*
  name: ServiceClient
  nameWithType: ServiceClient.ServiceClient
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.ServiceClientOptions
  name: ServiceClientOptions
  nameWithType: ServiceClientOptions
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClientOptions
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: ServiceClient.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.open*
  name: open
  nameWithType: ServiceClient.open
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.open
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.close*
  name: close
  nameWithType: ServiceClient.close
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.close
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: com.microsoft.azure.sdk.iot.service.Message
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.service.Message
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.send*
  name: send
  nameWithType: ServiceClient.send
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.send
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.concurrent.CompletableFuture<java.lang.Void>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync*
  name: openAsync
  nameWithType: ServiceClient.openAsync
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync*
  name: closeAsync
  nameWithType: ServiceClient.closeAsync
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync*
  name: sendAsync
  nameWithType: ServiceClient.sendAsync
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  name: FeedbackReceiver
  nameWithType: FeedbackReceiver
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver*
  name: getFeedbackReceiver
  nameWithType: ServiceClient.getFeedbackReceiver
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver
  name: FileUploadNotificationReceiver
  nameWithType: FileUploadNotificationReceiver
  fullName: com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver
- uid: com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver*
  name: getFileUploadNotificationReceiver
  nameWithType: ServiceClient.getFileUploadNotificationReceiver
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver
  package: com.microsoft.azure.sdk.iot.service
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
