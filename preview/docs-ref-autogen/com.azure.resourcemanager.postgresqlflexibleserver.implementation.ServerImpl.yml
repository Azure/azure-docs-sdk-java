### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl"
name: "ServerImpl"
nameWithType: "ServerImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServerImpl implements Server, Server.Definition, Server.Update"
methods:
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.administratorLogin()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.administratorLoginPassword()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.apply()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.availabilityZone()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.backup()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.create()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.createMode()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.fullyQualifiedDomainName()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.highAvailability()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.id()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.innerModel()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.location()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.maintenanceWindow()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.minorVersion()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.name()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.network()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.pointInTimeUtc()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.refresh()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.region()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.regionName()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.restart()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.restart(com.azure.resourcemanager.postgresqlflexibleserver.models.RestartParameter)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.restart(com.azure.resourcemanager.postgresqlflexibleserver.models.RestartParameter,com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.sku()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.sourceServerResourceId()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.start()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.start(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.state()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.stop()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.stop(com.azure.core.util.Context)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.storage()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.systemData()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.tags()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.tagsPropertiesTags()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.type()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.update()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.version()"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withAdministratorLogin(java.lang.String)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withAdministratorLoginPassword(java.lang.String)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withAvailabilityZone(java.lang.String)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withBackup(com.azure.resourcemanager.postgresqlflexibleserver.models.Backup)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withCreateMode(com.azure.resourcemanager.postgresqlflexibleserver.models.CreateMode)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withCreateMode(com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withExistingResourceGroup(java.lang.String)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withHighAvailability(com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withMaintenanceWindow(com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withNetwork(com.azure.resourcemanager.postgresqlflexibleserver.models.Network)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withPointInTimeUtc(java.time.OffsetDateTime)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withRegion(com.azure.core.management.Region)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withRegion(java.lang.String)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withSku(com.azure.resourcemanager.postgresqlflexibleserver.models.Sku)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withSourceServerResourceId(java.lang.String)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withStorage(com.azure.resourcemanager.postgresqlflexibleserver.models.Storage)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withTagsPropertiesTags(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.postgresqlflexibleserver.implementation.ServerImpl.withVersion(com.azure.resourcemanager.postgresqlflexibleserver.models.ServerVersion)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Server.Definition?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Server.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Server.Update?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Server.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Server?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Server&text=Server\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.0.0-beta.4
