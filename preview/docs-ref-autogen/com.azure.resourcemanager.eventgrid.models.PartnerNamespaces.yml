### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces"
fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces"
name: "PartnerNamespaces"
nameWithType: "PartnerNamespaces"
summary: "Resource collection API of Partner<wbr>Namespaces."
syntax: "public interface PartnerNamespaces"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.define(String name)"
  name: "define(String name)"
  nameWithType: "PartnerNamespaces.define(String name)"
  summary: "Begins definition for a new Partner<wbr>Namespace resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerNamespace.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new PartnerNamespace resource."
  returns:
    description: "the first stage of the new PartnerNamespace definition."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace.DefinitionStages.Blank?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.delete(String resourceGroupName, String partnerNamespaceName, Context context)"
  name: "delete(String resourceGroupName, String partnerNamespaceName, Context context)"
  nameWithType: "PartnerNamespaces.delete(String resourceGroupName, String partnerNamespaceName, Context context)"
  summary: "Delete existing partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String partnerNamespaceName, Context context)"
  desc: "Delete existing partner namespace."
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "PartnerNamespaces.deleteById(String id)"
  summary: "Delete existing partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete existing partner namespace."
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "PartnerNamespaces.deleteByIdWithResponse(String id, Context context)"
  summary: "Delete existing partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Delete existing partner namespace."
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.deleteByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  name: "deleteByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  nameWithType: "PartnerNamespaces.deleteByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  summary: "Delete existing partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  desc: "Delete existing partner namespace."
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getById(String id)"
  name: "getById(String id)"
  nameWithType: "PartnerNamespaces.getById(String id)"
  summary: "Get properties of a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerNamespace getById(String id)"
  desc: "Get properties of a partner namespace."
  returns:
    description: "properties of a partner namespace along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "PartnerNamespaces.getByIdWithResponse(String id, Context context)"
  summary: "Get properties of a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerNamespace> getByIdWithResponse(String id, Context context)"
  desc: "Get properties of a partner namespace."
  returns:
    description: "properties of a partner namespace along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  name: "getByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  nameWithType: "PartnerNamespaces.getByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  summary: "Get properties of a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerNamespace getByResourceGroup(String resourceGroupName, String partnerNamespaceName)"
  desc: "Get properties of a partner namespace."
  returns:
    description: "properties of a partner namespace."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.getByResourceGroupWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  nameWithType: "PartnerNamespaces.getByResourceGroupWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  summary: "Get properties of a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerNamespace> getByResourceGroupWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  desc: "Get properties of a partner namespace."
  returns:
    description: "properties of a partner namespace along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.list()"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.list()"
  name: "list()"
  nameWithType: "PartnerNamespaces.list()"
  summary: "List all the partner namespaces under an Azure subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PartnerNamespace> list()"
  desc: "List all the partner namespaces under an Azure subscription."
  returns:
    description: "result of the List Partner Namespaces operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.list(String filter, Integer top, Context context)"
  name: "list(String filter, Integer top, Context context)"
  nameWithType: "PartnerNamespaces.list(String filter, Integer top, Context context)"
  summary: "List all the partner namespaces under an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PartnerNamespace> list(String filter, Integer top, Context context)"
  desc: "List all the partner namespaces under an Azure subscription."
  returns:
    description: "result of the List Partner Namespaces operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "PartnerNamespaces.listByResourceGroup(String resourceGroupName)"
  summary: "List all the partner namespaces under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PartnerNamespace> listByResourceGroup(String resourceGroupName)"
  desc: "List all the partner namespaces under a resource group."
  returns:
    description: "result of the List Partner Namespaces operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  nameWithType: "PartnerNamespaces.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  summary: "List all the partner namespaces under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PartnerNamespace> listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  desc: "List all the partner namespaces under a resource group."
  returns:
    description: "result of the List Partner Namespaces operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespace?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespace&text=PartnerNamespace\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listSharedAccessKeys(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listSharedAccessKeys(String resourceGroupName, String partnerNamespaceName)"
  name: "listSharedAccessKeys(String resourceGroupName, String partnerNamespaceName)"
  nameWithType: "PartnerNamespaces.listSharedAccessKeys(String resourceGroupName, String partnerNamespaceName)"
  summary: "List the two keys used to publish to a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerNamespaceSharedAccessKeys listSharedAccessKeys(String resourceGroupName, String partnerNamespaceName)"
  desc: "List the two keys used to publish to a partner namespace."
  returns:
    description: "shared access keys of the partner namespace."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listSharedAccessKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.listSharedAccessKeysWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  name: "listSharedAccessKeysWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  nameWithType: "PartnerNamespaces.listSharedAccessKeysWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  summary: "List the two keys used to publish to a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerNamespaceSharedAccessKeys> listSharedAccessKeysWithResponse(String resourceGroupName, String partnerNamespaceName, Context context)"
  desc: "List the two keys used to publish to a partner namespace."
  returns:
    description: "shared access keys of the partner namespace along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.regenerateKey(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  name: "regenerateKey(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  nameWithType: "PartnerNamespaces.regenerateKey(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  summary: "Regenerate a shared access key for a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest&text=PartnerNamespaceRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PartnerNamespaceSharedAccessKeys regenerateKey(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest)"
  desc: "Regenerate a shared access key for a partner namespace."
  returns:
    description: "shared access keys of the partner namespace."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.regenerateKeyWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.models.PartnerNamespaces.regenerateKeyWithResponse(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  name: "regenerateKeyWithResponse(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  nameWithType: "PartnerNamespaces.regenerateKeyWithResponse(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  summary: "Regenerate a shared access key for a partner namespace."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner namespace."
    name: "partnerNamespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceRegenerateKeyRequest&text=PartnerNamespaceRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PartnerNamespaceSharedAccessKeys> regenerateKeyWithResponse(String resourceGroupName, String partnerNamespaceName, PartnerNamespaceRegenerateKeyRequest regenerateKeyRequest, Context context)"
  desc: "Regenerate a shared access key for a partner namespace."
  returns:
    description: "shared access keys of the partner namespace along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceSharedAccessKeys&text=PartnerNamespaceSharedAccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of PartnerNamespaces."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
