### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.LinkedNode
  id: LinkedNode
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.LinkedNode.<ST>contains(com.fasterxml.jackson.databind.util.LinkedNode<ST>,ST)
  - com.fasterxml.jackson.databind.util.LinkedNode.LinkedNode(T,com.fasterxml.jackson.databind.util.LinkedNode<T>)
  - com.fasterxml.jackson.databind.util.LinkedNode.linkNext(com.fasterxml.jackson.databind.util.LinkedNode<T>)
  - com.fasterxml.jackson.databind.util.LinkedNode.next()
  - com.fasterxml.jackson.databind.util.LinkedNode.value()
  langs:
  - java
  name: LinkedNode<T>
  nameWithType: LinkedNode<T>
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>
  type: Class
  package: com.fasterxml.jackson.databind.util
  summary: Node of a forward-only linked list.
  syntax:
    content: public final class LinkedNode<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.LinkedNode.<ST>contains(com.fasterxml.jackson.databind.util.LinkedNode<ST>,ST)
  id: <ST>contains(com.fasterxml.jackson.databind.util.LinkedNode<ST>,ST)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.LinkedNode
  langs:
  - java
  name: <ST>contains(LinkedNode<ST> node, ST value)
  nameWithType: LinkedNode<T>.<ST>contains(LinkedNode<ST> node, ST value)
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.<ST>contains(LinkedNode<ST> node, ST value)
  overload: com.fasterxml.jackson.databind.util.LinkedNode.contains*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Convenience method that can be used to check if a linked list with given head node (which may be null to indicate empty list) contains given value
  syntax:
    content: public static boolean <ST>contains(LinkedNode<ST> node, ST value)
    parameters:
    - id: node
      type: com.fasterxml.jackson.databind.util.LinkedNode<ST>
      description: Head node of the linked list
    - id: value
      type: ST
      description: Value to look for
    return:
      type: boolean
      description: True if linked list contains the value, false otherwise
- uid: com.fasterxml.jackson.databind.util.LinkedNode.LinkedNode(T,com.fasterxml.jackson.databind.util.LinkedNode<T>)
  id: LinkedNode(T,com.fasterxml.jackson.databind.util.LinkedNode<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.LinkedNode
  langs:
  - java
  name: LinkedNode(T value, LinkedNode<T> next)
  nameWithType: LinkedNode<T>.LinkedNode(T value, LinkedNode<T> next)
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.LinkedNode(T value, LinkedNode<T> next)
  overload: com.fasterxml.jackson.databind.util.LinkedNode.LinkedNode*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public LinkedNode(T value, LinkedNode<T> next)
    parameters:
    - id: value
      type: T
    - id: next
      type: com.fasterxml.jackson.databind.util.LinkedNode<T>
- uid: com.fasterxml.jackson.databind.util.LinkedNode.linkNext(com.fasterxml.jackson.databind.util.LinkedNode<T>)
  id: linkNext(com.fasterxml.jackson.databind.util.LinkedNode<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.LinkedNode
  langs:
  - java
  name: linkNext(LinkedNode<T> n)
  nameWithType: LinkedNode<T>.linkNext(LinkedNode<T> n)
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.linkNext(LinkedNode<T> n)
  overload: com.fasterxml.jackson.databind.util.LinkedNode.linkNext*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public void linkNext(LinkedNode<T> n)
    parameters:
    - id: n
      type: com.fasterxml.jackson.databind.util.LinkedNode<T>
- uid: com.fasterxml.jackson.databind.util.LinkedNode.next()
  id: next()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.LinkedNode
  langs:
  - java
  name: next()
  nameWithType: LinkedNode<T>.next()
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.next()
  overload: com.fasterxml.jackson.databind.util.LinkedNode.next*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public LinkedNode<T> next()
    return:
      type: com.fasterxml.jackson.databind.util.LinkedNode<T>
- uid: com.fasterxml.jackson.databind.util.LinkedNode.value()
  id: value()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.LinkedNode
  langs:
  - java
  name: value()
  nameWithType: LinkedNode<T>.value()
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.value()
  overload: com.fasterxml.jackson.databind.util.LinkedNode.value*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public T value()
    return:
      type: T
references:
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.util.LinkedNode<T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.LinkedNode
    name: LinkedNode
    fullName: com.fasterxml.jackson.databind.util.LinkedNode
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.LinkedNode.LinkedNode*
  name: LinkedNode
  nameWithType: LinkedNode<T>.LinkedNode
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.LinkedNode
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.LinkedNode.linkNext*
  name: linkNext
  nameWithType: LinkedNode<T>.linkNext
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.linkNext
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.LinkedNode.next*
  name: next
  nameWithType: LinkedNode<T>.next
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.next
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.LinkedNode.value*
  name: value
  nameWithType: LinkedNode<T>.value
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.value
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.LinkedNode<ST>
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.LinkedNode
    name: LinkedNode
    fullName: com.fasterxml.jackson.databind.util.LinkedNode
  - name: <
    fullName: <
  - uid: ST
    name: ST
    fullName: ST
  - name: '>'
    fullName: '>'
- uid: ST
  spec.java:
  - uid: ST
    name: ST
    fullName: ST
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.util.LinkedNode.contains*
  name: <ST>contains
  nameWithType: LinkedNode<T>.<ST>contains
  fullName: com.fasterxml.jackson.databind.util.LinkedNode<T>.<ST>contains
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
