### YamlMime:JavaType
uid: "org.apache.commons.codec.language.Metaphone"
fullName: "org.apache.commons.codec.language.Metaphone"
name: "Metaphone"
nameWithType: "Metaphone"
summary: "Encodes a string into a Metaphone value.\n\nInitial Java implementation by William B. Brogden. December, 1997. Permission given by wbrogden for code to be used anywhere.\n\nHanging on the Metaphone by Lawrence Philips in Computer Language of Dec. 1990, p 39.\n\nNote, that this does not match the algorithm that ships with PHP, or the algorithm found in the Perl implementations:\n\n *  [Text:Metaphone-1.96][Text_Metaphone-1.96] (broken link 4/30/2013)\n *  [Text:Metaphone-1.96][Text_Metaphone-1.96 1] (link checked 4/30/2013)\n\nThey have had undocumented changes from the originally published algorithm. For more information, see [CODEC-57][].\n\nThis class is conditionally thread-safe. The instance field <xref uid=\"org.apache.commons.codec.language.Metaphone.maxCodeLen\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#maxCodeLen\"></xref> is mutable <xref uid=\"org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setMaxCodeLen(int)\"></xref> but is not volatile, and accesses are not synchronized. If an instance of the class is shared between threads, the caller needs to ensure that suitable synchronization is used to ensure safe publication of the value between threads, and must not invoke <xref uid=\"org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setMaxCodeLen(int)\"></xref> after initial setup.\n\n\n[Text_Metaphone-1.96]: http://search.cpan.org/~mschwern/Text-Metaphone-1.96/Metaphone.pm\n[Text_Metaphone-1.96 1]: https://metacpan.org/source/MSCHWERN/Text-Metaphone-1.96//Metaphone.pm\n[CODEC-57]: https://issues.apache.org/jira/browse/CODEC-57"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Metaphone implements StringEncoder"
constructors:
- "org.apache.commons.codec.language.Metaphone.Metaphone()"
methods:
- "org.apache.commons.codec.language.Metaphone.encode(java.lang.Object)"
- "org.apache.commons.codec.language.Metaphone.encode(java.lang.String)"
- "org.apache.commons.codec.language.Metaphone.getMaxCodeLen()"
- "org.apache.commons.codec.language.Metaphone.isMetaphoneEqual(java.lang.String,java.lang.String)"
- "org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)"
- "org.apache.commons.codec.language.Metaphone.setMaxCodeLen(int)"
type: "class"
implements:
- "<xref href=\"org.apache.commons.codec.StringEncoder?alt=org.apache.commons.codec.StringEncoder&text=StringEncoder\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.apache.commons.codec.language"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
