### YamlMime:JavaMember
uid: "com.azure.storage.blob.nio.AzureFileSystem.getRootDirectories*"
fullName: "com.azure.storage.blob.nio.AzureFileSystem.getRootDirectories"
name: "getRootDirectories"
nameWithType: "AzureFileSystem.getRootDirectories"
members:
- uid: "com.azure.storage.blob.nio.AzureFileSystem.getRootDirectories()"
  fullName: "com.azure.storage.blob.nio.AzureFileSystem.getRootDirectories()"
  name: "getRootDirectories()"
  nameWithType: "AzureFileSystem.getRootDirectories()"
  summary: "Returns an object to iterate over the paths of the root directories.\n\nThe list of root directories corresponds to the list of available file stores and therefore containers specified upon initialization. A root directory always takes the form `\":\"`. This list will respect the parameters provided during initialization.\n\nIf a finite list of containers was provided on start up, this list will not change during the lifetime of this object. If containers are added to the account after initialization, they will be ignored. If a container is deleted or otherwise becomes unavailable, its root directory will still be returned but operations to it will fail."
  overridden: "java.nio.file.FileSystem.getRootDirectories()"
  syntax: "public Iterable<Path> getRootDirectories()"
  returns:
    description: "an object to iterate over the paths of the root directories"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
