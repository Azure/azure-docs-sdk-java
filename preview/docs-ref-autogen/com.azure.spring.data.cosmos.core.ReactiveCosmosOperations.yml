### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations"
fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations"
name: "ReactiveCosmosOperations"
nameWithType: "ReactiveCosmosOperations"
summary: "Operation class of reactive cosmos"
syntax: "public interface ReactiveCosmosOperations"
methods:
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>delete(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>deleteEntity(java.lang.String,T)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>find(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<T>,java.lang.String)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findAll(com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findAll(java.lang.Class<T>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findAll(java.lang.String,java.lang.Class<T>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findById(java.lang.Object,java.lang.Class<T>,com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>findById(java.lang.String,java.lang.Object,java.lang.Class<T>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>insert(T,com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>insert(java.lang.String,T)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>insert(java.lang.String,java.lang.Object,com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>runQuery(com.azure.cosmos.models.SqlQuerySpec,java.lang.Class<?>,java.lang.Class<T>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>upsert(T)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.<T>upsert(java.lang.String,T)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.String)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.count(java.lang.String)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.createContainerIfNotExists(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<?,?>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteAll(java.lang.String,java.lang.Class<?>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteById(java.lang.String,java.lang.Object,com.azure.cosmos.models.PartitionKey)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.deleteContainer(java.lang.String)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.exists(com.azure.spring.data.cosmos.core.query.CosmosQuery,java.lang.Class<?>,java.lang.String)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.existsById(java.lang.Object,java.lang.Class<?>,java.lang.String)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getContainerName(java.lang.Class<?>)"
- "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.getConverter()"
type: "interface"
metadata: {}
package: "com.azure.spring.data.cosmos.core"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
