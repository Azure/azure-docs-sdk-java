### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser"
fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser"
name: "ConfigurationContentParser"
nameWithType: "ConfigurationContentParser"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ConfigurationContentParser"
constructors:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.ConfigurationContentParser()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.ConfigurationContentParser()"
  name: "ConfigurationContentParser()"
  nameWithType: "ConfigurationContentParser.ConfigurationContentParser()"
  summary: "Empty constructor: Used only to keep GSON happy."
  syntax: "public ConfigurationContentParser()"
  desc: "Empty constructor: Used only to keep GSON happy."
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.ConfigurationContentParser(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.ConfigurationContentParser(String json)"
  name: "ConfigurationContentParser(String json)"
  nameWithType: "ConfigurationContentParser.ConfigurationContentParser(String json)"
  summary: "Constructor for an Configuration<wbr>Content<wbr>Parser that is built using the provided json"
  parameters:
  - description: "the json string to build the ConfigurationContentParser out of"
    name: "json"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationContentParser(String json)"
  desc: "Constructor for an ConfigurationContentParser that is built using the provided json"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.getDeviceContent()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.getDeviceContent()"
  name: "getDeviceContent()"
  nameWithType: "ConfigurationContentParser.getDeviceContent()"
  summary: "Getter for device<wbr>Content"
  syntax: "public Map<String,Object> getDeviceContent()"
  desc: "Getter for deviceContent"
  returns:
    description: "The value of queries"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.getModulesContent()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.getModulesContent()"
  name: "getModulesContent()"
  nameWithType: "ConfigurationContentParser.getModulesContent()"
  summary: "Getter for modules<wbr>Content"
  syntax: "public Map<String,Map<String,Object>> getModulesContent()"
  desc: "Getter for modulesContent"
  returns:
    description: "The value of modulesContent"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.setDeviceContent(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.setDeviceContent(Map<String,Object> deviceContent)"
  name: "setDeviceContent(Map<String,Object> deviceContent)"
  nameWithType: "ConfigurationContentParser.setDeviceContent(Map<String,Object> deviceContent)"
  summary: "Setter for device<wbr>Content"
  parameters:
  - description: "the value to set deviceContent to"
    name: "deviceContent"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setDeviceContent(Map<String,Object> deviceContent)"
  desc: "Setter for deviceContent"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.setModulesContent(java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Object>>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.setModulesContent(Map<String,Map<String,Object>> modulesContent)"
  name: "setModulesContent(Map<String,Map<String,Object>> modulesContent)"
  nameWithType: "ConfigurationContentParser.setModulesContent(Map<String,Map<String,Object>> modulesContent)"
  summary: "Setter for modules<wbr>Content"
  parameters:
  - description: "the value to set results to"
    name: "modulesContent"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public void setModulesContent(Map<String,Map<String,Object>> modulesContent)"
  desc: "Setter for modulesContent"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.toJson()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.toJson()"
  name: "toJson()"
  nameWithType: "ConfigurationContentParser.toJson()"
  syntax: "public String toJson()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.toJsonElement()"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser.toJsonElement()"
  name: "toJsonElement()"
  nameWithType: "ConfigurationContentParser.toJsonElement()"
  syntax: "public JsonElement toJsonElement()"
  returns:
    type: "<xref href=\"com.google.gson.JsonElement?alt=com.google.gson.JsonElement&text=JsonElement\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.serializer"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
