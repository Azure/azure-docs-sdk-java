### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzerOperationResults"
fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzerOperationResults"
name: "VideoAnalyzerOperationResults"
nameWithType: "VideoAnalyzerOperationResults"
summary: "Resource collection API of Video<wbr>Analyzer<wbr>Operation<wbr>Results."
syntax: "public interface VideoAnalyzerOperationResults"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzerOperationResults.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzerOperationResults.get(String locationName, String operationId)"
  name: "get(String locationName, String operationId)"
  nameWithType: "VideoAnalyzerOperationResults.get(String locationName, String operationId)"
  summary: "Get video analyzer operation result."
  modifiers:
  - "abstract"
  parameters:
  - description: "Location name."
    name: "locationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation Id."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VideoAnalyzer get(String locationName, String operationId)"
  desc: "Get video analyzer operation result."
  returns:
    description: "video analyzer operation result."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzer?alt=com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzer&text=VideoAnalyzer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzerOperationResults.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzerOperationResults.getWithResponse(String locationName, String operationId, Context context)"
  name: "getWithResponse(String locationName, String operationId, Context context)"
  nameWithType: "VideoAnalyzerOperationResults.getWithResponse(String locationName, String operationId, Context context)"
  summary: "Get video analyzer operation result."
  modifiers:
  - "abstract"
  parameters:
  - description: "Location name."
    name: "locationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation Id."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VideoAnalyzer> getWithResponse(String locationName, String operationId, Context context)"
  desc: "Get video analyzer operation result."
  returns:
    description: "video analyzer operation result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzer?alt=com.azure.resourcemanager.videoanalyzer.models.VideoAnalyzer&text=VideoAnalyzer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of VideoAnalyzerOperationResults."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
