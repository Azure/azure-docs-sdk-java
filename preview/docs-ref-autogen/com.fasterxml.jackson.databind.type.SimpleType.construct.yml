### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.SimpleType.construct*"
fullName: "com.fasterxml.jackson.databind.type.SimpleType.construct"
name: "construct"
nameWithType: "SimpleType.construct"
members:
- uid: "com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.type.SimpleType.construct(Class<?> cls)"
  name: "construct(Class<?> cls)"
  nameWithType: "SimpleType.construct(Class<?> cls)"
  summary: "Method that should NOT to be used by application code: it does NOT properly handle inspection of super-types, so neither parent Classes nor implemented Interfaces are accessible with resulting type instance. Instead, please use <xref uid=\"com.fasterxml.jackson.databind.type.TypeFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeFactory\"></xref>'s `constructType` methods which handle introspection appropriately.\n\nNote that prior to 2.7, method usage was not limited and would typically have worked acceptably: the problem comes from inability to resolve super-type information, for which <xref uid=\"com.fasterxml.jackson.databind.type.TypeFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeFactory\"></xref> is needed."
  parameters:
  - name: "cls"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public static SimpleType construct(Class<?> cls)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.type.SimpleType?alt=com.fasterxml.jackson.databind.type.SimpleType&text=SimpleType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
