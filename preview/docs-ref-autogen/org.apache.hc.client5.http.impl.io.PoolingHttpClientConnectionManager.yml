### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  id: PoolingHttpClientConnectionManager
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io
  children:
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.DEFAULT_MAX_CONNECTIONS_PER_ROUTE
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.DEFAULT_MAX_TOTAL_CONNECTIONS
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.client5.http.io.HttpClientConnectionOperator,org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.io.ManagedHttpClientConnection>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.client5.http.io.HttpClientConnectionOperator,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.client5.http.SchemePortResolver,org.apache.hc.client5.http.DnsResolver,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close(org.apache.hc.core5.io.CloseMode)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeExpired()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeIdle(org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultMaxPerRoute()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultSocketConfig()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxPerRoute(org.apache.hc.client5.http.HttpRoute)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxTotal()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getRoutes()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getStats(org.apache.hc.client5.http.HttpRoute)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getTotalStats()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getValidateAfterInactivity()
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,org.apache.hc.core5.util.Timeout,java.lang.Object)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(org.apache.hc.client5.http.io.ConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultMaxPerRoute(int)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultSocketConfig(org.apache.hc.core5.http.io.SocketConfig)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxPerRoute(org.apache.hc.client5.http.HttpRoute,int)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxTotal(int)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.upgrade(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: PoolingHttpClientConnectionManager
  nameWithType: PoolingHttpClientConnectionManager
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  type: Class
  package: org.apache.hc.client5.http.impl.io
  summary: >-
    `ClientConnectionPoolManager` maintains a pool of <xref uid="org.apache.hc.client5.http.io.ManagedHttpClientConnection" data-throw-if-not-resolved="false">ManagedHttpClientConnection</xref>s and is able to service connection requests from multiple execution threads. Connections are pooled on a per route basis. A request for a route which already the manager has persistent connections for available in the pool will be serviced by leasing a connection from the pool rather than creating a new connection.


    `ClientConnectionPoolManager` maintains a maximum limit of connection on a per route basis and in total. Connection limits, however, can be adjusted using <xref uid="org.apache.hc.core5.pool.ConnPoolControl" data-throw-if-not-resolved="false">ConnPoolControl</xref> methods.


    Total time to live (TTL) set at construction time defines maximum life span of persistent connections regardless of their expiration setting. No persistent connection will be re-used past its TTL value.


    Please note in contrast to 4.x no stale check is employed by default.
  syntax:
    content: public class PoolingHttpClientConnectionManager implements HttpClientConnectionManager, ConnPoolControl<HttpRoute>
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.io.HttpClientConnectionManager
  - org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.DEFAULT_MAX_CONNECTIONS_PER_ROUTE
  id: DEFAULT_MAX_CONNECTIONS_PER_ROUTE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: DEFAULT_MAX_CONNECTIONS_PER_ROUTE
  nameWithType: PoolingHttpClientConnectionManager.DEFAULT_MAX_CONNECTIONS_PER_ROUTE
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.DEFAULT_MAX_CONNECTIONS_PER_ROUTE
  type: Field
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public static final int DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    return:
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.DEFAULT_MAX_TOTAL_CONNECTIONS
  id: DEFAULT_MAX_TOTAL_CONNECTIONS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: DEFAULT_MAX_TOTAL_CONNECTIONS
  nameWithType: PoolingHttpClientConnectionManager.DEFAULT_MAX_TOTAL_CONNECTIONS
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.DEFAULT_MAX_TOTAL_CONNECTIONS
  type: Field
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public static final int DEFAULT_MAX_TOTAL_CONNECTIONS
    return:
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager()
  id: PoolingHttpClientConnectionManager()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager()
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolingHttpClientConnectionManager()
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.client5.http.io.HttpClientConnectionOperator,org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.io.ManagedHttpClientConnection>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  id: PoolingHttpClientConnectionManager(org.apache.hc.client5.http.io.HttpClientConnectionOperator,org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.io.ManagedHttpClientConnection>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, ManagedConnPool<HttpRoute,ManagedHttpClientConnection> pool, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, ManagedConnPool<HttpRoute,ManagedHttpClientConnection> pool, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, ManagedConnPool<HttpRoute,ManagedHttpClientConnection> pool, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: protected PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, ManagedConnPool<HttpRoute,ManagedHttpClientConnection> pool, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
    parameters:
    - id: httpClientConnectionOperator
      type: org.apache.hc.client5.http.io.HttpClientConnectionOperator
    - id: pool
      type: org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.io.ManagedHttpClientConnection>
    - id: connFactory
      type: org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.client5.http.io.HttpClientConnectionOperator,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  id: PoolingHttpClientConnectionManager(org.apache.hc.client5.http.io.HttpClientConnectionOperator,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: protected PoolingHttpClientConnectionManager(HttpClientConnectionOperator httpClientConnectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
    parameters:
    - id: httpClientConnectionOperator
      type: org.apache.hc.client5.http.io.HttpClientConnectionOperator
    - id: poolConcurrencyPolicy
      type: org.apache.hc.core5.pool.PoolConcurrencyPolicy
    - id: poolReusePolicy
      type: org.apache.hc.core5.pool.PoolReusePolicy
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
    - id: connFactory
      type: org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>)
  id: PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry)
    parameters:
    - id: socketFactoryRegistry
      type: org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  id: PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
    parameters:
    - id: socketFactoryRegistry
      type: org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>
    - id: connFactory
      type: org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue)
  id: PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)
    parameters:
    - id: socketFactoryRegistry
      type: org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>
    - id: poolConcurrencyPolicy
      type: org.apache.hc.core5.pool.PoolConcurrencyPolicy
    - id: poolReusePolicy
      type: org.apache.hc.core5.pool.PoolReusePolicy
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.client5.http.SchemePortResolver,org.apache.hc.client5.http.DnsResolver,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  id: PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.client5.http.SchemePortResolver,org.apache.hc.client5.http.DnsResolver,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
    parameters:
    - id: socketFactoryRegistry
      type: org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>
    - id: poolConcurrencyPolicy
      type: org.apache.hc.core5.pool.PoolConcurrencyPolicy
    - id: poolReusePolicy
      type: org.apache.hc.core5.pool.PoolReusePolicy
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
    - id: schemePortResolver
      type: org.apache.hc.client5.http.SchemePortResolver
    - id: dnsResolver
      type: org.apache.hc.client5.http.DnsResolver
    - id: connFactory
      type: org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  id: PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
    parameters:
    - id: socketFactoryRegistry
      type: org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>
    - id: poolConcurrencyPolicy
      type: org.apache.hc.core5.pool.PoolConcurrencyPolicy
    - id: poolReusePolicy
      type: org.apache.hc.core5.pool.PoolReusePolicy
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
    - id: connFactory
      type: org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  id: PoolingHttpClientConnectionManager(org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  type: Constructor
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolingHttpClientConnectionManager(Registry<ConnectionSocketFactory> socketFactoryRegistry, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive, HttpConnectionFactory<ManagedHttpClientConnection> connFactory)
    parameters:
    - id: socketFactoryRegistry
      type: org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>
    - id: poolConcurrencyPolicy
      type: org.apache.hc.core5.pool.PoolConcurrencyPolicy
    - id: timeToLive
      type: org.apache.hc.core5.util.TimeValue
    - id: connFactory
      type: org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: close()
  nameWithType: PoolingHttpClientConnectionManager.close()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public void close()
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close(org.apache.hc.core5.io.CloseMode)
  id: close(org.apache.hc.core5.io.CloseMode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: close(CloseMode closeMode)
  nameWithType: PoolingHttpClientConnectionManager.close(CloseMode closeMode)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close(CloseMode closeMode)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  summary: Closes this process or endpoint and releases any system resources associated with it. If the endpoint or the process is already closed then invoking this method has no effect.
  syntax:
    content: public void close(CloseMode closeMode)
    parameters:
    - id: closeMode
      type: org.apache.hc.core5.io.CloseMode
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeExpired()
  id: closeExpired()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: closeExpired()
  nameWithType: PoolingHttpClientConnectionManager.closeExpired()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeExpired()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeExpired*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public void closeExpired()
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeIdle(org.apache.hc.core5.util.TimeValue)
  id: closeIdle(org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: closeIdle(TimeValue idleTime)
  nameWithType: PoolingHttpClientConnectionManager.closeIdle(TimeValue idleTime)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeIdle(TimeValue idleTime)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeIdle*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public void closeIdle(TimeValue idleTime)
    parameters:
    - id: idleTime
      type: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.protocol.HttpContext)
  id: connect(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: connect(ConnectionEndpoint endpoint, TimeValue connectTimeout, HttpContext context)
  nameWithType: PoolingHttpClientConnectionManager.connect(ConnectionEndpoint endpoint, TimeValue connectTimeout, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(ConnectionEndpoint endpoint, TimeValue connectTimeout, HttpContext context)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  summary: Connects the endpoint to the initial hop (connection target in case of a direct route or to the first proxy hop in case of a route via a proxy or multiple proxies).
  syntax:
    content: public void connect(ConnectionEndpoint endpoint, TimeValue connectTimeout, HttpContext context)
    parameters:
    - id: endpoint
      type: org.apache.hc.client5.http.io.ConnectionEndpoint
    - id: connectTimeout
      type: org.apache.hc.core5.util.TimeValue
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultMaxPerRoute()
  id: getDefaultMaxPerRoute()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getDefaultMaxPerRoute()
  nameWithType: PoolingHttpClientConnectionManager.getDefaultMaxPerRoute()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultMaxPerRoute()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultMaxPerRoute*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public int getDefaultMaxPerRoute()
    return:
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultSocketConfig()
  id: getDefaultSocketConfig()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getDefaultSocketConfig()
  nameWithType: PoolingHttpClientConnectionManager.getDefaultSocketConfig()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultSocketConfig()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultSocketConfig*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public SocketConfig getDefaultSocketConfig()
    return:
      type: org.apache.hc.core5.http.io.SocketConfig
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxPerRoute(org.apache.hc.client5.http.HttpRoute)
  id: getMaxPerRoute(org.apache.hc.client5.http.HttpRoute)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getMaxPerRoute(HttpRoute route)
  nameWithType: PoolingHttpClientConnectionManager.getMaxPerRoute(HttpRoute route)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxPerRoute(HttpRoute route)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxPerRoute*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public int getMaxPerRoute(HttpRoute route)
    parameters:
    - id: route
      type: org.apache.hc.client5.http.HttpRoute
    return:
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxTotal()
  id: getMaxTotal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getMaxTotal()
  nameWithType: PoolingHttpClientConnectionManager.getMaxTotal()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxTotal()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxTotal*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public int getMaxTotal()
    return:
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getRoutes()
  id: getRoutes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getRoutes()
  nameWithType: PoolingHttpClientConnectionManager.getRoutes()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getRoutes()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getRoutes*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public Set<HttpRoute> getRoutes()
    return:
      type: java.util.Set<org.apache.hc.client5.http.HttpRoute>
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getStats(org.apache.hc.client5.http.HttpRoute)
  id: getStats(org.apache.hc.client5.http.HttpRoute)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getStats(HttpRoute route)
  nameWithType: PoolingHttpClientConnectionManager.getStats(HttpRoute route)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getStats(HttpRoute route)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getStats*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolStats getStats(HttpRoute route)
    parameters:
    - id: route
      type: org.apache.hc.client5.http.HttpRoute
    return:
      type: org.apache.hc.core5.pool.PoolStats
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getTotalStats()
  id: getTotalStats()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getTotalStats()
  nameWithType: PoolingHttpClientConnectionManager.getTotalStats()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getTotalStats()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getTotalStats*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public PoolStats getTotalStats()
    return:
      type: org.apache.hc.core5.pool.PoolStats
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getValidateAfterInactivity()
  id: getValidateAfterInactivity()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: getValidateAfterInactivity()
  nameWithType: PoolingHttpClientConnectionManager.getValidateAfterInactivity()
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getValidateAfterInactivity()
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getValidateAfterInactivity*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public TimeValue getValidateAfterInactivity()
    return:
      type: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object)
  id: lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: lease(String id, HttpRoute route, Object state)
  nameWithType: PoolingHttpClientConnectionManager.lease(String id, HttpRoute route, Object state)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(String id, HttpRoute route, Object state)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public LeaseRequest lease(String id, HttpRoute route, Object state)
    parameters:
    - id: id
      type: java.lang.String
    - id: route
      type: org.apache.hc.client5.http.HttpRoute
    - id: state
      type: java.lang.Object
    return:
      type: org.apache.hc.client5.http.io.LeaseRequest
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,org.apache.hc.core5.util.Timeout,java.lang.Object)
  id: lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,org.apache.hc.core5.util.Timeout,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: lease(String id, HttpRoute route, Timeout requestTimeout, Object state)
  nameWithType: PoolingHttpClientConnectionManager.lease(String id, HttpRoute route, Timeout requestTimeout, Object state)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(String id, HttpRoute route, Timeout requestTimeout, Object state)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  summary: >-
    Returns a <xref uid="org.apache.hc.client5.http.io.LeaseRequest" data-throw-if-not-resolved="false">LeaseRequest</xref> object which can be used to obtain a <xref uid="org.apache.hc.client5.http.io.ConnectionEndpoint" data-throw-if-not-resolved="false">ConnectionEndpoint</xref> to cancel the request by calling <xref uid="org.apache.hc.client5.http.io.LeaseRequest.cancel*" data-throw-if-not-resolved="false">LeaseRequest#cancel()</xref>.


    Please note that newly allocated endpoints can be leased <xref uid="org.apache.hc.client5.http.io.ConnectionEndpoint.isConnected()" data-throw-if-not-resolved="false">disconnected</xref>. The consumer of the endpoint is responsible for fully establishing the route to the endpoint target by calling <xref uid="org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.util.TimeValue,org.apache.hc.core5.http.protocol.HttpContext)" data-throw-if-not-resolved="false">#connect(ConnectionEndpoint, TimeValue, HttpContext)</xref> in order to connect directly to the target or to the first proxy hop, and optionally calling <xref uid="org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.upgrade(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.http.protocol.HttpContext)" data-throw-if-not-resolved="false">#upgrade(ConnectionEndpoint, HttpContext)</xref> method to upgrade the underlying transport to Transport Layer Security after having executed a `CONNECT` method to all intermediate proxy hops.
  syntax:
    content: public LeaseRequest lease(String id, HttpRoute route, Timeout requestTimeout, Object state)
    parameters:
    - id: id
      type: java.lang.String
    - id: route
      type: org.apache.hc.client5.http.HttpRoute
    - id: requestTimeout
      type: org.apache.hc.core5.util.Timeout
    - id: state
      type: java.lang.Object
    return:
      type: org.apache.hc.client5.http.io.LeaseRequest
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(org.apache.hc.client5.http.io.ConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)
  id: release(org.apache.hc.client5.http.io.ConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: release(ConnectionEndpoint endpoint, Object state, TimeValue keepAlive)
  nameWithType: PoolingHttpClientConnectionManager.release(ConnectionEndpoint endpoint, Object state, TimeValue keepAlive)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release(ConnectionEndpoint endpoint, Object state, TimeValue keepAlive)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  summary: Releases the endpoint back to the manager making it potentially re-usable by other consumers. Optionally, the maximum period of how long the manager should keep the connection alive can be defined using `validDuration` and `timeUnit` parameters.
  syntax:
    content: public void release(ConnectionEndpoint endpoint, Object state, TimeValue keepAlive)
    parameters:
    - id: endpoint
      type: org.apache.hc.client5.http.io.ConnectionEndpoint
    - id: state
      type: java.lang.Object
    - id: keepAlive
      type: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultMaxPerRoute(int)
  id: setDefaultMaxPerRoute(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: setDefaultMaxPerRoute(int max)
  nameWithType: PoolingHttpClientConnectionManager.setDefaultMaxPerRoute(int max)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultMaxPerRoute(int max)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultMaxPerRoute*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public void setDefaultMaxPerRoute(int max)
    parameters:
    - id: max
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultSocketConfig(org.apache.hc.core5.http.io.SocketConfig)
  id: setDefaultSocketConfig(org.apache.hc.core5.http.io.SocketConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: setDefaultSocketConfig(SocketConfig defaultSocketConfig)
  nameWithType: PoolingHttpClientConnectionManager.setDefaultSocketConfig(SocketConfig defaultSocketConfig)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultSocketConfig(SocketConfig defaultSocketConfig)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultSocketConfig*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public void setDefaultSocketConfig(SocketConfig defaultSocketConfig)
    parameters:
    - id: defaultSocketConfig
      type: org.apache.hc.core5.http.io.SocketConfig
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxPerRoute(org.apache.hc.client5.http.HttpRoute,int)
  id: setMaxPerRoute(org.apache.hc.client5.http.HttpRoute,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: setMaxPerRoute(HttpRoute route, int max)
  nameWithType: PoolingHttpClientConnectionManager.setMaxPerRoute(HttpRoute route, int max)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxPerRoute(HttpRoute route, int max)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxPerRoute*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public void setMaxPerRoute(HttpRoute route, int max)
    parameters:
    - id: route
      type: org.apache.hc.client5.http.HttpRoute
    - id: max
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxTotal(int)
  id: setMaxTotal(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: setMaxTotal(int max)
  nameWithType: PoolingHttpClientConnectionManager.setMaxTotal(int max)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxTotal(int max)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxTotal*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  syntax:
    content: public void setMaxTotal(int max)
    parameters:
    - id: max
      type: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)
  id: setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: setValidateAfterInactivity(TimeValue validateAfterInactivity)
  nameWithType: PoolingHttpClientConnectionManager.setValidateAfterInactivity(TimeValue validateAfterInactivity)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setValidateAfterInactivity(TimeValue validateAfterInactivity)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setValidateAfterInactivity*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  summary: Defines period of inactivity after which persistent connections must be re-validated prior to being <xref uid="org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object)" data-throw-if-not-resolved="false">#lease(String, HttpRoute, Object)</xref> leased\} to the consumer. Negative values passed to this method disable connection validation. This check helps detect connections that have become stale (half-closed) while kept inactive in the pool.
  syntax:
    content: public void setValidateAfterInactivity(TimeValue validateAfterInactivity)
    parameters:
    - id: validateAfterInactivity
      type: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.upgrade(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.http.protocol.HttpContext)
  id: upgrade(org.apache.hc.client5.http.io.ConnectionEndpoint,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager
  langs:
  - java
  name: upgrade(ConnectionEndpoint endpoint, HttpContext context)
  nameWithType: PoolingHttpClientConnectionManager.upgrade(ConnectionEndpoint endpoint, HttpContext context)
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.upgrade(ConnectionEndpoint endpoint, HttpContext context)
  overload: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.upgrade*
  type: Method
  package: org.apache.hc.client5.http.impl.io
  summary: Upgrades transport security of the given endpoint by using the TLS security protocol.
  syntax:
    content: public void upgrade(ConnectionEndpoint endpoint, HttpContext context)
    parameters:
    - id: endpoint
      type: org.apache.hc.client5.http.io.ConnectionEndpoint
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
  exceptions:
  - type: java.io.IOException
references:
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager*
  name: PoolingHttpClientConnectionManager
  nameWithType: PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.PoolingHttpClientConnectionManager
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.core5.http.config.Registry<org.apache.hc.client5.http.socket.ConnectionSocketFactory>
  spec.java:
  - uid: org.apache.hc.core5.http.config.Registry
    name: Registry
    fullName: org.apache.hc.core5.http.config.Registry
  - name: <
    fullName: <
  - uid: org.apache.hc.client5.http.socket.ConnectionSocketFactory
    name: ConnectionSocketFactory
    fullName: org.apache.hc.client5.http.socket.ConnectionSocketFactory
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.http.io.HttpConnectionFactory<org.apache.hc.client5.http.io.ManagedHttpClientConnection>
  spec.java:
  - uid: org.apache.hc.core5.http.io.HttpConnectionFactory
    name: HttpConnectionFactory
    fullName: org.apache.hc.core5.http.io.HttpConnectionFactory
  - name: <
    fullName: <
  - uid: org.apache.hc.client5.http.io.ManagedHttpClientConnection
    name: ManagedHttpClientConnection
    fullName: org.apache.hc.client5.http.io.ManagedHttpClientConnection
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.pool.PoolConcurrencyPolicy
  name: PoolConcurrencyPolicy
  nameWithType: PoolConcurrencyPolicy
  fullName: org.apache.hc.core5.pool.PoolConcurrencyPolicy
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.core5.pool.PoolReusePolicy
  name: PoolReusePolicy
  nameWithType: PoolReusePolicy
  fullName: org.apache.hc.core5.pool.PoolReusePolicy
- uid: org.apache.hc.client5.http.SchemePortResolver
  name: SchemePortResolver
  nameWithType: SchemePortResolver
  fullName: org.apache.hc.client5.http.SchemePortResolver
- uid: org.apache.hc.client5.http.DnsResolver
  name: DnsResolver
  nameWithType: DnsResolver
  fullName: org.apache.hc.client5.http.DnsResolver
- uid: org.apache.hc.client5.http.io.HttpClientConnectionOperator
  name: HttpClientConnectionOperator
  nameWithType: HttpClientConnectionOperator
  fullName: org.apache.hc.client5.http.io.HttpClientConnectionOperator
- uid: org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.io.ManagedHttpClientConnection>
  spec.java:
  - uid: org.apache.hc.core5.pool.ManagedConnPool
    name: ManagedConnPool
    fullName: org.apache.hc.core5.pool.ManagedConnPool
  - name: <
    fullName: <
  - uid: org.apache.hc.client5.http.HttpRoute
    name: HttpRoute
    fullName: org.apache.hc.client5.http.HttpRoute
  - name: ','
    fullName: ','
  - uid: org.apache.hc.client5.http.io.ManagedHttpClientConnection
    name: ManagedHttpClientConnection
    fullName: org.apache.hc.client5.http.io.ManagedHttpClientConnection
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close*
  name: close
  nameWithType: PoolingHttpClientConnectionManager.close
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.close
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.core5.io.CloseMode
  name: CloseMode
  nameWithType: CloseMode
  fullName: org.apache.hc.core5.io.CloseMode
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.HttpRoute
  name: HttpRoute
  nameWithType: HttpRoute
  fullName: org.apache.hc.client5.http.HttpRoute
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.hc.client5.http.io.LeaseRequest
  name: LeaseRequest
  nameWithType: LeaseRequest
  fullName: org.apache.hc.client5.http.io.LeaseRequest
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease*
  name: lease
  nameWithType: PoolingHttpClientConnectionManager.lease
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint
  name: ConnectionEndpoint
  nameWithType: ConnectionEndpoint
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release*
  name: release
  nameWithType: PoolingHttpClientConnectionManager.release
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.release
  package: org.apache.hc.client5.http.impl.io
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect*
  name: connect
  nameWithType: PoolingHttpClientConnectionManager.connect
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.upgrade*
  name: upgrade
  nameWithType: PoolingHttpClientConnectionManager.upgrade
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.upgrade
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeIdle*
  name: closeIdle
  nameWithType: PoolingHttpClientConnectionManager.closeIdle
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeIdle
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeExpired*
  name: closeExpired
  nameWithType: PoolingHttpClientConnectionManager.closeExpired
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.closeExpired
  package: org.apache.hc.client5.http.impl.io
- uid: java.util.Set<org.apache.hc.client5.http.HttpRoute>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: org.apache.hc.client5.http.HttpRoute
    name: HttpRoute
    fullName: org.apache.hc.client5.http.HttpRoute
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getRoutes*
  name: getRoutes
  nameWithType: PoolingHttpClientConnectionManager.getRoutes
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getRoutes
  package: org.apache.hc.client5.http.impl.io
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxTotal*
  name: getMaxTotal
  nameWithType: PoolingHttpClientConnectionManager.getMaxTotal
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxTotal
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxTotal*
  name: setMaxTotal
  nameWithType: PoolingHttpClientConnectionManager.setMaxTotal
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxTotal
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultMaxPerRoute*
  name: getDefaultMaxPerRoute
  nameWithType: PoolingHttpClientConnectionManager.getDefaultMaxPerRoute
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultMaxPerRoute
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultMaxPerRoute*
  name: setDefaultMaxPerRoute
  nameWithType: PoolingHttpClientConnectionManager.setDefaultMaxPerRoute
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultMaxPerRoute
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxPerRoute*
  name: getMaxPerRoute
  nameWithType: PoolingHttpClientConnectionManager.getMaxPerRoute
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getMaxPerRoute
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxPerRoute*
  name: setMaxPerRoute
  nameWithType: PoolingHttpClientConnectionManager.setMaxPerRoute
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setMaxPerRoute
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.core5.pool.PoolStats
  name: PoolStats
  nameWithType: PoolStats
  fullName: org.apache.hc.core5.pool.PoolStats
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getTotalStats*
  name: getTotalStats
  nameWithType: PoolingHttpClientConnectionManager.getTotalStats
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getTotalStats
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getStats*
  name: getStats
  nameWithType: PoolingHttpClientConnectionManager.getStats
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getStats
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.core5.http.io.SocketConfig
  name: SocketConfig
  nameWithType: SocketConfig
  fullName: org.apache.hc.core5.http.io.SocketConfig
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultSocketConfig*
  name: getDefaultSocketConfig
  nameWithType: PoolingHttpClientConnectionManager.getDefaultSocketConfig
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getDefaultSocketConfig
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultSocketConfig*
  name: setDefaultSocketConfig
  nameWithType: PoolingHttpClientConnectionManager.setDefaultSocketConfig
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setDefaultSocketConfig
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getValidateAfterInactivity*
  name: getValidateAfterInactivity
  nameWithType: PoolingHttpClientConnectionManager.getValidateAfterInactivity
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.getValidateAfterInactivity
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setValidateAfterInactivity*
  name: setValidateAfterInactivity
  nameWithType: PoolingHttpClientConnectionManager.setValidateAfterInactivity
  fullName: org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.setValidateAfterInactivity
  package: org.apache.hc.client5.http.impl.io
- uid: org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute>
  name: ConnPoolControl<HttpRoute>
  nameWithType: ConnPoolControl<HttpRoute>
  fullName: org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute>
- uid: org.apache.hc.client5.http.io.HttpClientConnectionManager
  name: HttpClientConnectionManager
  nameWithType: HttpClientConnectionManager
  fullName: org.apache.hc.client5.http.io.HttpClientConnectionManager
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.hc.client5.http.socket.ConnectionSocketFactory
  name: ConnectionSocketFactory
  nameWithType: ConnectionSocketFactory
  fullName: org.apache.hc.client5.http.socket.ConnectionSocketFactory
- uid: org.apache.hc.core5.http.config.Registry
  name: Registry
  nameWithType: Registry
  fullName: org.apache.hc.core5.http.config.Registry
- uid: org.apache.hc.core5.http.io.HttpConnectionFactory
  name: HttpConnectionFactory
  nameWithType: HttpConnectionFactory
  fullName: org.apache.hc.core5.http.io.HttpConnectionFactory
- uid: org.apache.hc.client5.http.io.ManagedHttpClientConnection
  name: ManagedHttpClientConnection
  nameWithType: ManagedHttpClientConnection
  fullName: org.apache.hc.client5.http.io.ManagedHttpClientConnection
- uid: org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.io.ManagedHttpClientConnection
  name: HttpRoute,ManagedHttpClientConnection
  nameWithType: HttpRoute,ManagedHttpClientConnection
  fullName: org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.io.ManagedHttpClientConnection
- uid: org.apache.hc.core5.pool.ManagedConnPool
  name: ManagedConnPool
  nameWithType: ManagedConnPool
  fullName: org.apache.hc.core5.pool.ManagedConnPool
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: org.apache.hc.core5.pool.ConnPoolControl
  name: ConnPoolControl
  nameWithType: ConnPoolControl
  fullName: org.apache.hc.core5.pool.ConnPoolControl
