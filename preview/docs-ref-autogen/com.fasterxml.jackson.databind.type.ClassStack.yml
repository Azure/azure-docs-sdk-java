### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.type.ClassStack
  id: ClassStack
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type
  children:
  - com.fasterxml.jackson.databind.type.ClassStack.ClassStack(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.ClassStack._current
  - com.fasterxml.jackson.databind.type.ClassStack._parent
  - com.fasterxml.jackson.databind.type.ClassStack.addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType)
  - com.fasterxml.jackson.databind.type.ClassStack.child(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.ClassStack.find(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.ClassStack.resolveSelfReferences(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.ClassStack.toString()
  langs:
  - java
  name: ClassStack
  nameWithType: ClassStack
  fullName: com.fasterxml.jackson.databind.type.ClassStack
  type: Class
  package: com.fasterxml.jackson.databind.type
  summary: Simple helper class used to keep track of 'call stack' for classes being referenced (as well as unbound variables)
  syntax:
    content: public final class ClassStack
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.ClassStack.ClassStack(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class<?>)
  id: ClassStack(com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: ClassStack(ClassStack parent, Class<?> curr)
  nameWithType: ClassStack.ClassStack(ClassStack parent, Class<?> curr)
  fullName: com.fasterxml.jackson.databind.type.ClassStack.ClassStack(ClassStack parent, Class<?> curr)
  overload: com.fasterxml.jackson.databind.type.ClassStack.ClassStack*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: private ClassStack(ClassStack parent, Class<?> curr)
    parameters:
    - id: parent
      type: com.fasterxml.jackson.databind.type.ClassStack
    - id: curr
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.type.ClassStack.ClassStack(java.lang.Class<?>)
  id: ClassStack(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: ClassStack(Class<?> rootType)
  nameWithType: ClassStack.ClassStack(Class<?> rootType)
  fullName: com.fasterxml.jackson.databind.type.ClassStack.ClassStack(Class<?> rootType)
  overload: com.fasterxml.jackson.databind.type.ClassStack.ClassStack*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public ClassStack(Class<?> rootType)
    parameters:
    - id: rootType
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.type.ClassStack._current
  id: _current
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: _current
  nameWithType: ClassStack._current
  fullName: com.fasterxml.jackson.databind.type.ClassStack._current
  type: Field
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected final Class<?> _current
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.type.ClassStack._parent
  id: _parent
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: _parent
  nameWithType: ClassStack._parent
  fullName: com.fasterxml.jackson.databind.type.ClassStack._parent
  type: Field
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected final ClassStack _parent
    return:
      type: com.fasterxml.jackson.databind.type.ClassStack
- uid: com.fasterxml.jackson.databind.type.ClassStack.addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType)
  id: addSelfReference(com.fasterxml.jackson.databind.type.ResolvedRecursiveType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: addSelfReference(ResolvedRecursiveType ref)
  nameWithType: ClassStack.addSelfReference(ResolvedRecursiveType ref)
  fullName: com.fasterxml.jackson.databind.type.ClassStack.addSelfReference(ResolvedRecursiveType ref)
  overload: com.fasterxml.jackson.databind.type.ClassStack.addSelfReference*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method called to indicate that there is a self-reference from deeper down in stack pointing into type this stack frame represents.
  syntax:
    content: public void addSelfReference(ResolvedRecursiveType ref)
    parameters:
    - id: ref
      type: com.fasterxml.jackson.databind.type.ResolvedRecursiveType
- uid: com.fasterxml.jackson.databind.type.ClassStack.child(java.lang.Class<?>)
  id: child(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: child(Class<?> cls)
  nameWithType: ClassStack.child(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.type.ClassStack.child(Class<?> cls)
  overload: com.fasterxml.jackson.databind.type.ClassStack.child*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public ClassStack child(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.type.ClassStack
      description: New stack frame, if addition is ok; null if not
- uid: com.fasterxml.jackson.databind.type.ClassStack.find(java.lang.Class<?>)
  id: find(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: find(Class<?> cls)
  nameWithType: ClassStack.find(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.type.ClassStack.find(Class<?> cls)
  overload: com.fasterxml.jackson.databind.type.ClassStack.find*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public ClassStack find(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.type.ClassStack
- uid: com.fasterxml.jackson.databind.type.ClassStack.resolveSelfReferences(com.fasterxml.jackson.databind.JavaType)
  id: resolveSelfReferences(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: resolveSelfReferences(JavaType resolved)
  nameWithType: ClassStack.resolveSelfReferences(JavaType resolved)
  fullName: com.fasterxml.jackson.databind.type.ClassStack.resolveSelfReferences(JavaType resolved)
  overload: com.fasterxml.jackson.databind.type.ClassStack.resolveSelfReferences*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method called when type that this stack frame represents is fully resolved, allowing self-references to be completed (if there are any)
  syntax:
    content: public void resolveSelfReferences(JavaType resolved)
    parameters:
    - id: resolved
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ClassStack.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ClassStack
  langs:
  - java
  name: toString()
  nameWithType: ClassStack.toString()
  fullName: com.fasterxml.jackson.databind.type.ClassStack.toString()
  overload: com.fasterxml.jackson.databind.type.ClassStack.toString*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.ClassStack.ClassStack*
  name: ClassStack
  nameWithType: ClassStack.ClassStack
  fullName: com.fasterxml.jackson.databind.type.ClassStack.ClassStack
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ClassStack.child*
  name: child
  nameWithType: ClassStack.child
  fullName: com.fasterxml.jackson.databind.type.ClassStack.child
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ResolvedRecursiveType
  name: ResolvedRecursiveType
  nameWithType: ResolvedRecursiveType
  fullName: com.fasterxml.jackson.databind.type.ResolvedRecursiveType
- uid: com.fasterxml.jackson.databind.type.ClassStack.addSelfReference*
  name: addSelfReference
  nameWithType: ClassStack.addSelfReference
  fullName: com.fasterxml.jackson.databind.type.ClassStack.addSelfReference
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ClassStack.resolveSelfReferences*
  name: resolveSelfReferences
  nameWithType: ClassStack.resolveSelfReferences
  fullName: com.fasterxml.jackson.databind.type.ClassStack.resolveSelfReferences
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ClassStack.find*
  name: find
  nameWithType: ClassStack.find
  fullName: com.fasterxml.jackson.databind.type.ClassStack.find
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.type.ClassStack.toString*
  name: toString
  nameWithType: ClassStack.toString
  fullName: com.fasterxml.jackson.databind.type.ClassStack.toString
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
