### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.JavaType
  id: JavaType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  - com.fasterxml.jackson.databind.JavaType.JavaType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.JavaType(java.lang.Class<?>,int,java.lang.Object,java.lang.Object,boolean)
  - com.fasterxml.jackson.databind.JavaType._asStatic
  - com.fasterxml.jackson.databind.JavaType._class
  - com.fasterxml.jackson.databind.JavaType._hash
  - com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType._typeHandler
  - com.fasterxml.jackson.databind.JavaType._valueHandler
  - com.fasterxml.jackson.databind.JavaType.containedType(int)
  - com.fasterxml.jackson.databind.JavaType.containedTypeCount()
  - com.fasterxml.jackson.databind.JavaType.containedTypeName(int)
  - com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  - com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.getBindings()
  - com.fasterxml.jackson.databind.JavaType.getContentType()
  - com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  - com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  - com.fasterxml.jackson.databind.JavaType.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  - com.fasterxml.jackson.databind.JavaType.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.JavaType.getInterfaces()
  - com.fasterxml.jackson.databind.JavaType.getKeyType()
  - com.fasterxml.jackson.databind.JavaType.getParameterSource()
  - com.fasterxml.jackson.databind.JavaType.getRawClass()
  - com.fasterxml.jackson.databind.JavaType.getReferencedType()
  - com.fasterxml.jackson.databind.JavaType.getSuperClass()
  - com.fasterxml.jackson.databind.JavaType.hasContentType()
  - com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  - com.fasterxml.jackson.databind.JavaType.hasHandlers()
  - com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  - com.fasterxml.jackson.databind.JavaType.hashCode()
  - com.fasterxml.jackson.databind.JavaType.isAbstract()
  - com.fasterxml.jackson.databind.JavaType.isArrayType()
  - com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  - com.fasterxml.jackson.databind.JavaType.isConcrete()
  - com.fasterxml.jackson.databind.JavaType.isContainerType()
  - com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  - com.fasterxml.jackson.databind.JavaType.isEnumType()
  - com.fasterxml.jackson.databind.JavaType.isFinal()
  - com.fasterxml.jackson.databind.JavaType.isInterface()
  - com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  - com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  - com.fasterxml.jackson.databind.JavaType.isPrimitive()
  - com.fasterxml.jackson.databind.JavaType.isThrowable()
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.JavaType.toString()
  - com.fasterxml.jackson.databind.JavaType.useStaticType()
  - com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  - com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  langs:
  - java
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
  type: Class
  package: com.fasterxml.jackson.databind
  summary: >-
    Base class for type token classes used both to contain information and as keys for deserializers.


    Instances can (only) be constructed by `com.fasterxml.jackson.databind.type.TypeFactory`.


    Since 2.2 this implements <xref uid="java.lang.reflect.Type" data-throw-if-not-resolved="false">java.lang.reflect.Type</xref> to allow it to be pushed through interfaces that only expose that type.
  syntax:
    content: public abstract class JavaType extends ResolvedType implements Serializable, Type
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.type.ResolvedType
  implements:
  - java.io.Serializable
  - java.lang.reflect.Type
  inheritedMembers:
  - com.fasterxml.jackson.core.type.ResolvedType.containedType(int)
  - com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()
  - com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)
  - com.fasterxml.jackson.core.type.ResolvedType.getContentType()
  - com.fasterxml.jackson.core.type.ResolvedType.getKeyType()
  - com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()
  - com.fasterxml.jackson.core.type.ResolvedType.getRawClass()
  - com.fasterxml.jackson.core.type.ResolvedType.getReferencedType()
  - com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()
  - com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class<?>)
  - com.fasterxml.jackson.core.type.ResolvedType.isAbstract()
  - com.fasterxml.jackson.core.type.ResolvedType.isArrayType()
  - com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()
  - com.fasterxml.jackson.core.type.ResolvedType.isConcrete()
  - com.fasterxml.jackson.core.type.ResolvedType.isContainerType()
  - com.fasterxml.jackson.core.type.ResolvedType.isEnumType()
  - com.fasterxml.jackson.core.type.ResolvedType.isFinal()
  - com.fasterxml.jackson.core.type.ResolvedType.isInterface()
  - com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()
  - com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()
  - com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  - com.fasterxml.jackson.core.type.ResolvedType.isThrowable()
  - com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  id: <T>getTypeHandler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: <T>getTypeHandler()
  nameWithType: JavaType.<T>getTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  overload: com.fasterxml.jackson.databind.JavaType.getTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing type handler associated with this type, if any
  syntax:
    content: public T <T>getTypeHandler()
    return:
      type: T
- uid: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  id: <T>getValueHandler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: <T>getValueHandler()
  nameWithType: JavaType.<T>getValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  overload: com.fasterxml.jackson.databind.JavaType.getValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing value handler associated with this type, if any
  syntax:
    content: public T <T>getValueHandler()
    return:
      type: T
- uid: com.fasterxml.jackson.databind.JavaType.JavaType(com.fasterxml.jackson.databind.JavaType)
  id: JavaType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: JavaType(JavaType base)
  nameWithType: JavaType.JavaType(JavaType base)
  fullName: com.fasterxml.jackson.databind.JavaType.JavaType(JavaType base)
  overload: com.fasterxml.jackson.databind.JavaType.JavaType*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Copy-constructor used when refining/upgrading type instances.
  syntax:
    content: protected JavaType(JavaType base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.JavaType(java.lang.Class<?>,int,java.lang.Object,java.lang.Object,boolean)
  id: JavaType(java.lang.Class<?>,int,java.lang.Object,java.lang.Object,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: JavaType(Class<?> raw, int additionalHash, Object valueHandler, Object typeHandler, boolean asStatic)
  nameWithType: JavaType.JavaType(Class<?> raw, int additionalHash, Object valueHandler, Object typeHandler, boolean asStatic)
  fullName: com.fasterxml.jackson.databind.JavaType.JavaType(Class<?> raw, int additionalHash, Object valueHandler, Object typeHandler, boolean asStatic)
  overload: com.fasterxml.jackson.databind.JavaType.JavaType*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected JavaType(Class<?> raw, int additionalHash, Object valueHandler, Object typeHandler, boolean asStatic)
    parameters:
    - id: raw
      type: java.lang.Class<?>
      description: "\"Raw\" (type-erased) class for this type"
    - id: additionalHash
      type: int
      description: >-
        Additional hash code to use, in addition
           to hash code of the class name
    - id: valueHandler
      type: java.lang.Object
    - id: typeHandler
      type: java.lang.Object
    - id: asStatic
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType._asStatic
  id: _asStatic
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: _asStatic
  nameWithType: JavaType._asStatic
  fullName: com.fasterxml.jackson.databind.JavaType._asStatic
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Whether entities defined with this type should be handled using static typing (as opposed to dynamic runtime type) or not.
  syntax:
    content: protected final boolean _asStatic
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType._class
  id: _class
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: _class
  nameWithType: JavaType._class
  fullName: com.fasterxml.jackson.databind.JavaType._class
  type: Field
  package: com.fasterxml.jackson.databind
  summary: 'This is the nominal type-erased Class that would be close to the type represented (but not exactly type, due to type erasure: type instance may have more information on this). May be an interface or abstract class, so instantiation may not be possible.'
  syntax:
    content: protected final Class<?> _class
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.JavaType._hash
  id: _hash
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: _hash
  nameWithType: JavaType._hash
  fullName: com.fasterxml.jackson.databind.JavaType._hash
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final int _hash
    return:
      type: int
- uid: com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)
  id: _narrow(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: _narrow(Class<?> subclass)
  nameWithType: JavaType._narrow(Class<?> subclass)
  fullName: com.fasterxml.jackson.databind.JavaType._narrow(Class<?> subclass)
  overload: com.fasterxml.jackson.databind.JavaType._narrow*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected abstract JavaType _narrow(Class<?> subclass)
    parameters:
    - id: subclass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType._typeHandler
  id: _typeHandler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: _typeHandler
  nameWithType: JavaType._typeHandler
  fullName: com.fasterxml.jackson.databind.JavaType._typeHandler
  type: Field
  package: com.fasterxml.jackson.databind
  summary: >-
    Optional handler that can be attached to indicate how to handle additional type metadata associated with this type.


    Note: untyped (i.e. caller has to cast) because it is used for different kinds of handlers, with unrelated types.
  syntax:
    content: protected final Object _typeHandler
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.JavaType._valueHandler
  id: _valueHandler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: _valueHandler
  nameWithType: JavaType._valueHandler
  fullName: com.fasterxml.jackson.databind.JavaType._valueHandler
  type: Field
  package: com.fasterxml.jackson.databind
  summary: >-
    Optional handler (codec) that can be attached to indicate what to use for handling (serializing, deserializing) values of this specific type.


    Note: untyped (i.e. caller has to cast) because it is used for different kinds of handlers, with unrelated types.
  syntax:
    content: protected final Object _valueHandler
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.JavaType.containedType(int)
  id: containedType(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: containedType(int index)
  nameWithType: JavaType.containedType(int index)
  fullName: com.fasterxml.jackson.databind.JavaType.containedType(int index)
  overload: com.fasterxml.jackson.databind.JavaType.containedType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing definitions of contained ("child") types.
  syntax:
    content: public abstract JavaType containedType(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeCount()
  id: containedTypeCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: containedTypeCount()
  nameWithType: JavaType.containedTypeCount()
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeCount()
  overload: com.fasterxml.jackson.databind.JavaType.containedTypeCount*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for checking how many contained types this type has. Contained types are usually generic types, so that generic Maps have 2 contained types.
  syntax:
    content: public abstract int containedTypeCount()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeName(int)
  id: containedTypeName(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: containedTypeName(int index)
  nameWithType: JavaType.containedTypeName(int index)
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeName(int index)
  overload: com.fasterxml.jackson.databind.JavaType.containedTypeName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing name of type variable in indicated position. If no name is bound, will use placeholders (derived from 0-based index); if no type variable or argument exists with given index, null is returned.
  syntax:
    content: public abstract String containedTypeName(int index)
    parameters:
    - id: index
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  id: containedTypeOrUnknown(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: containedTypeOrUnknown(int index)
  nameWithType: JavaType.containedTypeOrUnknown(int index)
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int index)
  overload: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Convenience method that is functionally same as: `JavaType t = containedType(index); if (t == null) { t = TypeFactory.unknownType(); }` and typically used to eliminate need for null checks for common case where we just want to check if containedType is available first; and if not, use "unknown type" (which translates to `java.lang.Object` basically).'
  syntax:
    content: public JavaType containedTypeOrUnknown(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: equals(Object o)
  nameWithType: JavaType.equals(Object o)
  fullName: com.fasterxml.jackson.databind.JavaType.equals(Object o)
  overload: com.fasterxml.jackson.databind.JavaType.equals*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class<?>)
  id: findSuperType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: findSuperType(Class<?> erasedTarget)
  nameWithType: JavaType.findSuperType(Class<?> erasedTarget)
  fullName: com.fasterxml.jackson.databind.JavaType.findSuperType(Class<?> erasedTarget)
  overload: com.fasterxml.jackson.databind.JavaType.findSuperType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Method that may be called to find representation of given type within type hierarchy of this type: either this type (if this type has given erased type), one of its supertypes that has the erased types, or null if target is neither this type or any of its supertypes.'
  syntax:
    content: public abstract JavaType findSuperType(Class<?> erasedTarget)
    parameters:
    - id: erasedTarget
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class<?>)
  id: findTypeParameters(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: findTypeParameters(Class<?> expType)
  nameWithType: JavaType.findTypeParameters(Class<?> expType)
  fullName: com.fasterxml.jackson.databind.JavaType.findTypeParameters(Class<?> expType)
  overload: com.fasterxml.jackson.databind.JavaType.findTypeParameters*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that may be used to find paramaterization this type has for given type-erased generic target type.
  syntax:
    content: public abstract JavaType[] findTypeParameters(Class<?> expType)
    parameters:
    - id: expType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType[]
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  id: forcedNarrowBy(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: forcedNarrowBy(Class<?> subclass)
  nameWithType: JavaType.forcedNarrowBy(Class<?> subclass)
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(Class<?> subclass)
  overload: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Legacy method used for forcing sub-typing of this type into type specified by specific type erasure. Deprecated as of 2.7 as such specializations really ought to go through <xref uid="com.fasterxml.jackson.databind.type.TypeFactory" data-throw-if-not-resolved="false">TypeFactory</xref>, not directly via <xref uid="com.fasterxml.jackson.databind.JavaType" data-throw-if-not-resolved="false">JavaType</xref>.
  syntax:
    content: public JavaType forcedNarrowBy(Class<?> subclass)
    parameters:
    - id: subclass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.getBindings()
  id: getBindings()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getBindings()
  nameWithType: JavaType.getBindings()
  fullName: com.fasterxml.jackson.databind.JavaType.getBindings()
  overload: com.fasterxml.jackson.databind.JavaType.getBindings*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract TypeBindings getBindings()
    return:
      type: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.JavaType.getContentType()
  id: getContentType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getContentType()
  nameWithType: JavaType.getContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentType()
  overload: com.fasterxml.jackson.databind.JavaType.getContentType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Method for accessing content type of this type, if type has such a thing: simple types do not, structured types do (like arrays, Collections and Maps)'
  syntax:
    content: public JavaType getContentType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  id: getContentTypeHandler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getContentTypeHandler()
  nameWithType: JavaType.getContentTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  overload: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public Object getContentTypeHandler()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  id: getContentValueHandler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getContentValueHandler()
  nameWithType: JavaType.getContentValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  overload: com.fasterxml.jackson.databind.JavaType.getContentValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public Object getContentValueHandler()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  id: getErasedSignature()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getErasedSignature()
  nameWithType: JavaType.getErasedSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  overload: com.fasterxml.jackson.databind.JavaType.getErasedSignature*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing signature without generic type information, in form compatible with all versions of JVM, and specifically used for type descriptions when generating byte code.
  syntax:
    content: public String getErasedSignature()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature(java.lang.StringBuilder)
  id: getErasedSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getErasedSignature(StringBuilder sb)
  nameWithType: JavaType.getErasedSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.JavaType.getErasedSignature*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing signature without generic type information, in form compatible with all versions of JVM, and specifically used for type descriptions when generating byte code.
  syntax:
    content: public abstract StringBuilder getErasedSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
      description: StringBuilder to append signature to
    return:
      type: java.lang.StringBuilder
      description: >-
        StringBuilder that was passed in; returned to allow
         call chaining
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  id: getGenericSignature()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getGenericSignature()
  nameWithType: JavaType.getGenericSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  overload: com.fasterxml.jackson.databind.JavaType.getGenericSignature*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing signature that contains generic type information, in form compatible with JVM 1.5 as per JLS. It is a superset of <xref uid="com.fasterxml.jackson.databind.JavaType.getErasedSignature*" data-throw-if-not-resolved="false">#getErasedSignature</xref>, in that generic information can be automatically removed if necessary (just remove outermost angle brackets along with content inside)
  syntax:
    content: public String getGenericSignature()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature(java.lang.StringBuilder)
  id: getGenericSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getGenericSignature(StringBuilder sb)
  nameWithType: JavaType.getGenericSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.JavaType.getGenericSignature*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract StringBuilder getGenericSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
      description: StringBuilder to append signature to
    return:
      type: java.lang.StringBuilder
      description: >-
        StringBuilder that was passed in; returned to allow
         call chaining
- uid: com.fasterxml.jackson.databind.JavaType.getInterfaces()
  id: getInterfaces()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getInterfaces()
  nameWithType: JavaType.getInterfaces()
  fullName: com.fasterxml.jackson.databind.JavaType.getInterfaces()
  overload: com.fasterxml.jackson.databind.JavaType.getInterfaces*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for finding fully resolved interfaces this type implements, if any; empty array if none.
  syntax:
    content: public abstract List<JavaType> getInterfaces()
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JavaType>
- uid: com.fasterxml.jackson.databind.JavaType.getKeyType()
  id: getKeyType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getKeyType()
  nameWithType: JavaType.getKeyType()
  fullName: com.fasterxml.jackson.databind.JavaType.getKeyType()
  overload: com.fasterxml.jackson.databind.JavaType.getKeyType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing key type for this type, assuming type has such a concept (only Map types do)
  syntax:
    content: public JavaType getKeyType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.getParameterSource()
  id: getParameterSource()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getParameterSource()
  nameWithType: JavaType.getParameterSource()
  fullName: com.fasterxml.jackson.databind.JavaType.getParameterSource()
  overload: com.fasterxml.jackson.databind.JavaType.getParameterSource*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Accessor that can be used to find out type for which parameterization is applied: this is often NOT same as what <xref uid="com.fasterxml.jackson.databind.JavaType.getRawClass*" data-throw-if-not-resolved="false">#getRawClass</xref> returns, but rather one of it supertype.


    For example: for type like <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">java.util.HashMap</xref>, raw type is <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">java.util.HashMap</xref>; but this method would return <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>, because relevant type parameters that are resolved (and accessible using <xref uid="com.fasterxml.jackson.databind.JavaType.containedType(int)" data-throw-if-not-resolved="false">#containedType(int)</xref> and <xref uid="com.fasterxml.jackson.databind.JavaType.getKeyType()" data-throw-if-not-resolved="false">#getKeyType()</xref>) are parameter for <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> (which may or may not be same as type parameters for subtype; in case of <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">java.util.HashMap</xref> they are, but for further subtypes they may be different parameters or possibly none at all).
  syntax:
    content: public Class<?> getParameterSource()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.JavaType.getRawClass()
  id: getRawClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getRawClass()
  nameWithType: JavaType.getRawClass()
  fullName: com.fasterxml.jackson.databind.JavaType.getRawClass()
  overload: com.fasterxml.jackson.databind.JavaType.getRawClass*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for type-erased <xref uid="java.lang.Class" data-throw-if-not-resolved="false">Class</xref> of resolved type.
  syntax:
    content: public final Class<?> getRawClass()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.JavaType.getReferencedType()
  id: getReferencedType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getReferencedType()
  nameWithType: JavaType.getReferencedType()
  fullName: com.fasterxml.jackson.databind.JavaType.getReferencedType()
  overload: com.fasterxml.jackson.databind.JavaType.getReferencedType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing type of value that instances of this type references, if any.
  syntax:
    content: public JavaType getReferencedType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.getSuperClass()
  id: getSuperClass()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: getSuperClass()
  nameWithType: JavaType.getSuperClass()
  fullName: com.fasterxml.jackson.databind.JavaType.getSuperClass()
  overload: com.fasterxml.jackson.databind.JavaType.getSuperClass*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for finding fully resolved parent class of this type, if it has one; null if not.
  syntax:
    content: public abstract JavaType getSuperClass()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.hasContentType()
  id: hasContentType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: hasContentType()
  nameWithType: JavaType.hasContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.hasContentType()
  overload: com.fasterxml.jackson.databind.JavaType.hasContentType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor that allows determining whether <xref uid="com.fasterxml.jackson.databind.JavaType.getContentType()" data-throw-if-not-resolved="false">#getContentType()</xref> should return a non-null value (that is, there is a "content type") or not. True if <xref uid="com.fasterxml.jackson.databind.JavaType.isContainerType()" data-throw-if-not-resolved="false">#isContainerType()</xref> or <xref uid="com.fasterxml.jackson.databind.JavaType.isReferenceType*" data-throw-if-not-resolved="false">#isReferenceType()</xref> return true.
  syntax:
    content: public boolean hasContentType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  id: hasGenericTypes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: hasGenericTypes()
  nameWithType: JavaType.hasGenericTypes()
  fullName: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  overload: com.fasterxml.jackson.databind.JavaType.hasGenericTypes*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that can be used to find out if the type directly declares generic parameters (for its direct super-class and/or super-interfaces).
  syntax:
    content: public boolean hasGenericTypes()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.hasHandlers()
  id: hasHandlers()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: hasHandlers()
  nameWithType: JavaType.hasHandlers()
  fullName: com.fasterxml.jackson.databind.JavaType.hasHandlers()
  overload: com.fasterxml.jackson.databind.JavaType.hasHandlers*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Helper method that checks whether this type, or its (optional) key or content type has <xref uid="com.fasterxml.jackson.databind.JavaType.getValueHandler" data-throw-if-not-resolved="false">#getValueHandler</xref> or <xref uid="com.fasterxml.jackson.databind.JavaType.&lt;T&gt;getTypeHandler()" data-throw-if-not-resolved="false">#getTypeHandler()</xref>; that is, are there any non-standard handlers associated with this type object.
  syntax:
    content: public boolean hasHandlers()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  id: hasRawClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: hasRawClass(Class<?> clz)
  nameWithType: JavaType.hasRawClass(Class<?> clz)
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(Class<?> clz)
  overload: com.fasterxml.jackson.databind.JavaType.hasRawClass*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that can be used to check whether this type has specified Class as its type erasure. Put another way, returns true if instantiation of this Type is given (type-erased) Class.
  syntax:
    content: public final boolean hasRawClass(Class<?> clz)
    parameters:
    - id: clz
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  id: hasValueHandler()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: hasValueHandler()
  nameWithType: JavaType.hasValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  overload: com.fasterxml.jackson.databind.JavaType.hasValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean hasValueHandler()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: hashCode()
  nameWithType: JavaType.hashCode()
  fullName: com.fasterxml.jackson.databind.JavaType.hashCode()
  overload: com.fasterxml.jackson.databind.JavaType.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.JavaType.isAbstract()
  id: isAbstract()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isAbstract()
  nameWithType: JavaType.isAbstract()
  fullName: com.fasterxml.jackson.databind.JavaType.isAbstract()
  overload: com.fasterxml.jackson.databind.JavaType.isAbstract*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isAbstract()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isArrayType()
  id: isArrayType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isArrayType()
  nameWithType: JavaType.isArrayType()
  fullName: com.fasterxml.jackson.databind.JavaType.isArrayType()
  overload: com.fasterxml.jackson.databind.JavaType.isArrayType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isArrayType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  id: isCollectionLikeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isCollectionLikeType()
  nameWithType: JavaType.isCollectionLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  overload: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isCollectionLikeType()
    return:
      type: boolean
      description: >-
        True if type is either true <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> type,
            or something similar (meaning it has at least one type parameter,
            which describes type of contents)
- uid: com.fasterxml.jackson.databind.JavaType.isConcrete()
  id: isConcrete()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isConcrete()
  nameWithType: JavaType.isConcrete()
  fullName: com.fasterxml.jackson.databind.JavaType.isConcrete()
  overload: com.fasterxml.jackson.databind.JavaType.isConcrete*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Convenience method for checking whether underlying Java type is a concrete class or not: abstract classes and interfaces are not.'
  syntax:
    content: public boolean isConcrete()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isContainerType()
  id: isContainerType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isContainerType()
  nameWithType: JavaType.isContainerType()
  fullName: com.fasterxml.jackson.databind.JavaType.isContainerType()
  overload: com.fasterxml.jackson.databind.JavaType.isContainerType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract boolean isContainerType()
    return:
      type: boolean
      description: >-
        True if type represented is a container type; this includes
            array, Map and Collection types.
- uid: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  id: isEnumImplType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isEnumImplType()
  nameWithType: JavaType.isEnumImplType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  overload: com.fasterxml.jackson.databind.JavaType.isEnumImplType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Similar to <xref uid="com.fasterxml.jackson.databind.JavaType.isEnumType*" data-throw-if-not-resolved="false">#isEnumType</xref> except does NOT return `true` for <xref uid="java.lang.Enum" data-throw-if-not-resolved="false">java.lang.Enum</xref> (since that is not Enum implementation type).
  syntax:
    content: public final boolean isEnumImplType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isEnumType()
  id: isEnumType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isEnumType()
  nameWithType: JavaType.isEnumType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumType()
  overload: com.fasterxml.jackson.databind.JavaType.isEnumType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that basically does equivalent of:


    ```java

    Enum.class.isAssignableFrom(getRawClass())

    ```


    that is, return `true` if the underlying type erased class is `Enum` or one its subtypes (Enum implementations).
  syntax:
    content: public final boolean isEnumType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isFinal()
  id: isFinal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isFinal()
  nameWithType: JavaType.isFinal()
  fullName: com.fasterxml.jackson.databind.JavaType.isFinal()
  overload: com.fasterxml.jackson.databind.JavaType.isFinal*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final boolean isFinal()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isInterface()
  id: isInterface()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isInterface()
  nameWithType: JavaType.isInterface()
  fullName: com.fasterxml.jackson.databind.JavaType.isInterface()
  overload: com.fasterxml.jackson.databind.JavaType.isInterface*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final boolean isInterface()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  id: isJavaLangObject()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isJavaLangObject()
  nameWithType: JavaType.isJavaLangObject()
  fullName: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  overload: com.fasterxml.jackson.databind.JavaType.isJavaLangObject*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method, short-hand for `getRawClass() == Object.class` and used to figure if we basically have "untyped" type object.
  syntax:
    content: public final boolean isJavaLangObject()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  id: isMapLikeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isMapLikeType()
  nameWithType: JavaType.isMapLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  overload: com.fasterxml.jackson.databind.JavaType.isMapLikeType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isMapLikeType()
    return:
      type: boolean
      description: >-
        True if type is either true <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> type,
            or something similar (meaning it has at least two type parameter;
            first one describing key type, second value type)
- uid: com.fasterxml.jackson.databind.JavaType.isPrimitive()
  id: isPrimitive()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isPrimitive()
  nameWithType: JavaType.isPrimitive()
  fullName: com.fasterxml.jackson.databind.JavaType.isPrimitive()
  overload: com.fasterxml.jackson.databind.JavaType.isPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final boolean isPrimitive()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isThrowable()
  id: isThrowable()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isThrowable()
  nameWithType: JavaType.isThrowable()
  fullName: com.fasterxml.jackson.databind.JavaType.isThrowable()
  overload: com.fasterxml.jackson.databind.JavaType.isThrowable*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isThrowable()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  id: isTypeOrSubTypeOf(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isTypeOrSubTypeOf(Class<?> clz)
  nameWithType: JavaType.isTypeOrSubTypeOf(Class<?> clz)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(Class<?> clz)
  overload: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final boolean isTypeOrSubTypeOf(Class<?> clz)
    parameters:
    - id: clz
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  id: isTypeOrSuperTypeOf(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: isTypeOrSuperTypeOf(Class<?> clz)
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class<?> clz)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(Class<?> clz)
  overload: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final boolean isTypeOrSuperTypeOf(Class<?> clz)
    parameters:
    - id: clz
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  id: refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  nameWithType: JavaType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  fullName: com.fasterxml.jackson.databind.JavaType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  overload: com.fasterxml.jackson.databind.JavaType.refine*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Mutant factory method that will try to create and return a sub-type instance for known parameterized types; for other types will return \`null\` to indicate that no just refinement makes necessary sense, without trying to detect special status through implemented interfaces.
  syntax:
    content: public abstract JavaType refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
    parameters:
    - id: rawType
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInterfaces
      type: com.fasterxml.jackson.databind.JavaType[]
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: toString()
  nameWithType: JavaType.toString()
  fullName: com.fasterxml.jackson.databind.JavaType.toString()
  overload: com.fasterxml.jackson.databind.JavaType.toString*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public abstract String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JavaType.useStaticType()
  id: useStaticType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: useStaticType()
  nameWithType: JavaType.useStaticType()
  fullName: com.fasterxml.jackson.databind.JavaType.useStaticType()
  overload: com.fasterxml.jackson.databind.JavaType.useStaticType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for checking whether handlers for dealing with values of this type should use static typing (as opposed to dynamic typing). Note that while value of 'true' does mean that static typing is to be used, value of 'false' may still be overridden by other settings.
  syntax:
    content: public final boolean useStaticType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)
  id: withContentType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: withContentType(JavaType contentType)
  nameWithType: JavaType.withContentType(JavaType contentType)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentType(JavaType contentType)
  overload: com.fasterxml.jackson.databind.JavaType.withContentType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Mutant factory method that may be called on structured types that have a so-called content type (element of arrays, value type of Maps, referenced type of referential types), and will construct a new instance that is identical to this instance, except that it has specified content type, instead of current one. If content type is already set to given type, `this` is returned. If type does not have a content type (which is the case with `SimpleType`), <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> will be thrown.
  syntax:
    content: public abstract JavaType withContentType(JavaType contentType)
    parameters:
    - id: contentType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
      description: Newly created type instance
- uid: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)
  id: withContentTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: withContentTypeHandler(Object h)
  nameWithType: JavaType.withContentTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content type (element type for arrays, value type for Maps and so forth) handler assigned.
  syntax:
    content: public abstract JavaType withContentTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.JavaType
      description: Newly created type instance, with given
- uid: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)
  id: withContentValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: withContentValueHandler(Object h)
  nameWithType: JavaType.withContentValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.JavaType.withContentValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.JavaType.withContentValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content value handler assigned.
  syntax:
    content: public abstract JavaType withContentValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.JavaType
      description: Newly created type instance
- uid: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  id: withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: withHandlersFrom(JavaType src)
  nameWithType: JavaType.withHandlersFrom(JavaType src)
  fullName: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(JavaType src)
  overload: com.fasterxml.jackson.databind.JavaType.withHandlersFrom*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Mutant factory method that will try to copy handlers that the specified source type instance had, if any; this must be done recursively where necessary (as content types may be structured).
  syntax:
    content: public JavaType withHandlersFrom(JavaType src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  id: withStaticTyping()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: withStaticTyping()
  nameWithType: JavaType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.JavaType.withStaticTyping()
  overload: com.fasterxml.jackson.databind.JavaType.withStaticTyping*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Method that can be called to get a type instance that indicates that values of the type should be handled using "static typing" for purposes of serialization (as opposed to "dynamic" aka runtime typing): meaning that no runtime information is needed for determining serializers to use. The main use case is to allow forcing of specific root value serialization type, and specifically in resolving serializers for contained types (element types for arrays, Collections and Maps).'
  syntax:
    content: public abstract JavaType withStaticTyping()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)
  id: withTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: withTypeHandler(Object h)
  nameWithType: JavaType.withTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.JavaType.withTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.JavaType.withTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: "\"Copy method\" that will construct a new instance that is identical to this instance, except that it will have specified type handler assigned."
  syntax:
    content: public abstract JavaType withTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.JavaType
      description: Newly created type instance
- uid: com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)
  id: withValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JavaType
  langs:
  - java
  name: withValueHandler(Object h)
  nameWithType: JavaType.withValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.JavaType.withValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.JavaType.withValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified value handler assigned.
  syntax:
    content: public abstract JavaType withValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.JavaType
      description: Newly created type instance
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.JavaType.JavaType*
  name: JavaType
  nameWithType: JavaType.JavaType
  fullName: com.fasterxml.jackson.databind.JavaType.JavaType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.withTypeHandler*
  name: withTypeHandler
  nameWithType: JavaType.withTypeHandler
  fullName: com.fasterxml.jackson.databind.JavaType.withTypeHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler*
  name: withContentTypeHandler
  nameWithType: JavaType.withContentTypeHandler
  fullName: com.fasterxml.jackson.databind.JavaType.withContentTypeHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.withValueHandler*
  name: withValueHandler
  nameWithType: JavaType.withValueHandler
  fullName: com.fasterxml.jackson.databind.JavaType.withValueHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.withContentValueHandler*
  name: withContentValueHandler
  nameWithType: JavaType.withContentValueHandler
  fullName: com.fasterxml.jackson.databind.JavaType.withContentValueHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.withHandlersFrom*
  name: withHandlersFrom
  nameWithType: JavaType.withHandlersFrom
  fullName: com.fasterxml.jackson.databind.JavaType.withHandlersFrom
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.withContentType*
  name: withContentType
  nameWithType: JavaType.withContentType
  fullName: com.fasterxml.jackson.databind.JavaType.withContentType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.withStaticTyping*
  name: withStaticTyping
  nameWithType: JavaType.withStaticTyping
  fullName: com.fasterxml.jackson.databind.JavaType.withStaticTyping
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.type.TypeBindings
  name: TypeBindings
  nameWithType: TypeBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.JavaType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.JavaType.refine*
  name: refine
  nameWithType: JavaType.refine
  fullName: com.fasterxml.jackson.databind.JavaType.refine
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy*
  name: forcedNarrowBy
  nameWithType: JavaType.forcedNarrowBy
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType._narrow*
  name: _narrow
  nameWithType: JavaType._narrow
  fullName: com.fasterxml.jackson.databind.JavaType._narrow
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getRawClass*
  name: getRawClass
  nameWithType: JavaType.getRawClass
  fullName: com.fasterxml.jackson.databind.JavaType.getRawClass
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass*
  name: hasRawClass
  nameWithType: JavaType.hasRawClass
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.hasContentType*
  name: hasContentType
  nameWithType: JavaType.hasContentType
  fullName: com.fasterxml.jackson.databind.JavaType.hasContentType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf*
  name: isTypeOrSubTypeOf
  nameWithType: JavaType.isTypeOrSubTypeOf
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf*
  name: isTypeOrSuperTypeOf
  nameWithType: JavaType.isTypeOrSuperTypeOf
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isAbstract*
  name: isAbstract
  nameWithType: JavaType.isAbstract
  fullName: com.fasterxml.jackson.databind.JavaType.isAbstract
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isConcrete*
  name: isConcrete
  nameWithType: JavaType.isConcrete
  fullName: com.fasterxml.jackson.databind.JavaType.isConcrete
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isThrowable*
  name: isThrowable
  nameWithType: JavaType.isThrowable
  fullName: com.fasterxml.jackson.databind.JavaType.isThrowable
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isArrayType*
  name: isArrayType
  nameWithType: JavaType.isArrayType
  fullName: com.fasterxml.jackson.databind.JavaType.isArrayType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isEnumType*
  name: isEnumType
  nameWithType: JavaType.isEnumType
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isEnumImplType*
  name: isEnumImplType
  nameWithType: JavaType.isEnumImplType
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumImplType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isInterface*
  name: isInterface
  nameWithType: JavaType.isInterface
  fullName: com.fasterxml.jackson.databind.JavaType.isInterface
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isPrimitive*
  name: isPrimitive
  nameWithType: JavaType.isPrimitive
  fullName: com.fasterxml.jackson.databind.JavaType.isPrimitive
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isFinal*
  name: isFinal
  nameWithType: JavaType.isFinal
  fullName: com.fasterxml.jackson.databind.JavaType.isFinal
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isContainerType*
  name: isContainerType
  nameWithType: JavaType.isContainerType
  fullName: com.fasterxml.jackson.databind.JavaType.isContainerType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType*
  name: isCollectionLikeType
  nameWithType: JavaType.isCollectionLikeType
  fullName: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isMapLikeType*
  name: isMapLikeType
  nameWithType: JavaType.isMapLikeType
  fullName: com.fasterxml.jackson.databind.JavaType.isMapLikeType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.isJavaLangObject*
  name: isJavaLangObject
  nameWithType: JavaType.isJavaLangObject
  fullName: com.fasterxml.jackson.databind.JavaType.isJavaLangObject
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.useStaticType*
  name: useStaticType
  nameWithType: JavaType.useStaticType
  fullName: com.fasterxml.jackson.databind.JavaType.useStaticType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.hasGenericTypes*
  name: hasGenericTypes
  nameWithType: JavaType.hasGenericTypes
  fullName: com.fasterxml.jackson.databind.JavaType.hasGenericTypes
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getKeyType*
  name: getKeyType
  nameWithType: JavaType.getKeyType
  fullName: com.fasterxml.jackson.databind.JavaType.getKeyType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getContentType*
  name: getContentType
  nameWithType: JavaType.getContentType
  fullName: com.fasterxml.jackson.databind.JavaType.getContentType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getReferencedType*
  name: getReferencedType
  nameWithType: JavaType.getReferencedType
  fullName: com.fasterxml.jackson.databind.JavaType.getReferencedType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeCount*
  name: containedTypeCount
  nameWithType: JavaType.containedTypeCount
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeCount
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.containedType*
  name: containedType
  nameWithType: JavaType.containedType
  fullName: com.fasterxml.jackson.databind.JavaType.containedType
  package: com.fasterxml.jackson.databind
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeName*
  name: containedTypeName
  nameWithType: JavaType.containedTypeName
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getParameterSource*
  name: getParameterSource
  nameWithType: JavaType.getParameterSource
  fullName: com.fasterxml.jackson.databind.JavaType.getParameterSource
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown*
  name: containedTypeOrUnknown
  nameWithType: JavaType.containedTypeOrUnknown
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getBindings*
  name: getBindings
  nameWithType: JavaType.getBindings
  fullName: com.fasterxml.jackson.databind.JavaType.getBindings
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.findSuperType*
  name: findSuperType
  nameWithType: JavaType.findSuperType
  fullName: com.fasterxml.jackson.databind.JavaType.findSuperType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getSuperClass*
  name: getSuperClass
  nameWithType: JavaType.getSuperClass
  fullName: com.fasterxml.jackson.databind.JavaType.getSuperClass
  package: com.fasterxml.jackson.databind
- uid: java.util.List<com.fasterxml.jackson.databind.JavaType>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JavaType.getInterfaces*
  name: getInterfaces
  nameWithType: JavaType.getInterfaces
  fullName: com.fasterxml.jackson.databind.JavaType.getInterfaces
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.findTypeParameters*
  name: findTypeParameters
  nameWithType: JavaType.findTypeParameters
  fullName: com.fasterxml.jackson.databind.JavaType.findTypeParameters
  package: com.fasterxml.jackson.databind
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.JavaType.getValueHandler*
  name: <T>getValueHandler
  nameWithType: JavaType.<T>getValueHandler
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getTypeHandler*
  name: <T>getTypeHandler
  nameWithType: JavaType.<T>getTypeHandler
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getContentValueHandler*
  name: getContentValueHandler
  nameWithType: JavaType.getContentValueHandler
  fullName: com.fasterxml.jackson.databind.JavaType.getContentValueHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler*
  name: getContentTypeHandler
  nameWithType: JavaType.getContentTypeHandler
  fullName: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.hasValueHandler*
  name: hasValueHandler
  nameWithType: JavaType.hasValueHandler
  fullName: com.fasterxml.jackson.databind.JavaType.hasValueHandler
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.hasHandlers*
  name: hasHandlers
  nameWithType: JavaType.hasHandlers
  fullName: com.fasterxml.jackson.databind.JavaType.hasHandlers
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature*
  name: getGenericSignature
  nameWithType: JavaType.getGenericSignature
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature
  package: com.fasterxml.jackson.databind
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature*
  name: getErasedSignature
  nameWithType: JavaType.getErasedSignature
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.toString*
  name: toString
  nameWithType: JavaType.toString
  fullName: com.fasterxml.jackson.databind.JavaType.toString
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.equals*
  name: equals
  nameWithType: JavaType.equals
  fullName: com.fasterxml.jackson.databind.JavaType.equals
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType.hashCode*
  name: hashCode
  nameWithType: JavaType.hashCode
  fullName: com.fasterxml.jackson.databind.JavaType.hashCode
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.type.ResolvedType
  name: ResolvedType
  nameWithType: ResolvedType
  fullName: com.fasterxml.jackson.core.type.ResolvedType
- uid: java.lang.reflect.Type
  name: Type
  nameWithType: Type
  fullName: java.lang.reflect.Type
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()
  name: ResolvedType.containedTypeCount()
  nameWithType: ResolvedType.containedTypeCount()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isContainerType()
  name: ResolvedType.isContainerType()
  nameWithType: ResolvedType.isContainerType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isContainerType()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
  name: ResolvedType.toCanonical()
  nameWithType: ResolvedType.toCanonical()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.toCanonical()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  name: ResolvedType.isReferenceType()
  nameWithType: ResolvedType.isReferenceType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()
  name: ResolvedType.isMapLikeType()
  nameWithType: ResolvedType.isMapLikeType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()
  name: ResolvedType.hasGenericTypes()
  nameWithType: ResolvedType.hasGenericTypes()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()
- uid: com.fasterxml.jackson.core.type.ResolvedType.getContentType()
  name: ResolvedType.getContentType()
  nameWithType: ResolvedType.getContentType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getContentType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.getKeyType()
  name: ResolvedType.getKeyType()
  nameWithType: ResolvedType.getKeyType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getKeyType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()
  name: ResolvedType.getParameterSource()
  nameWithType: ResolvedType.getParameterSource()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.type.ResolvedType.isThrowable()
  name: ResolvedType.isThrowable()
  nameWithType: ResolvedType.isThrowable()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isThrowable()
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)
  name: ResolvedType.containedTypeName(int)
  nameWithType: ResolvedType.containedTypeName(int)
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)
- uid: com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()
  name: ResolvedType.isPrimitive()
  nameWithType: ResolvedType.isPrimitive()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class<?>)
  name: ResolvedType.hasRawClass(Class<?>)
  nameWithType: ResolvedType.hasRawClass(Class<?>)
  fullName: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.core.type.ResolvedType.isEnumType()
  name: ResolvedType.isEnumType()
  nameWithType: ResolvedType.isEnumType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isEnumType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isAbstract()
  name: ResolvedType.isAbstract()
  nameWithType: ResolvedType.isAbstract()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isAbstract()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.type.ResolvedType.isConcrete()
  name: ResolvedType.isConcrete()
  nameWithType: ResolvedType.isConcrete()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isConcrete()
- uid: com.fasterxml.jackson.core.type.ResolvedType.getRawClass()
  name: ResolvedType.getRawClass()
  nameWithType: ResolvedType.getRawClass()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getRawClass()
- uid: com.fasterxml.jackson.core.type.ResolvedType.containedType(int)
  name: ResolvedType.containedType(int)
  nameWithType: ResolvedType.containedType(int)
  fullName: com.fasterxml.jackson.core.type.ResolvedType.containedType(int)
- uid: com.fasterxml.jackson.core.type.ResolvedType.isInterface()
  name: ResolvedType.isInterface()
  nameWithType: ResolvedType.isInterface()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isInterface()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isFinal()
  name: ResolvedType.isFinal()
  nameWithType: ResolvedType.isFinal()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isFinal()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isArrayType()
  name: ResolvedType.isArrayType()
  nameWithType: ResolvedType.isArrayType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isArrayType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()
  name: ResolvedType.isCollectionLikeType()
  nameWithType: ResolvedType.isCollectionLikeType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()
- uid: com.fasterxml.jackson.core.type.ResolvedType.getReferencedType()
  name: ResolvedType.getReferencedType()
  nameWithType: ResolvedType.getReferencedType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.getReferencedType()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class
  name: ResolvedType.hasRawClass(Class
  nameWithType: ResolvedType.hasRawClass(Class
  fullName: com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
