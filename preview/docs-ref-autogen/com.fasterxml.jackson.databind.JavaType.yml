### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.JavaType"
fullName: "com.fasterxml.jackson.databind.JavaType"
name: "JavaType"
nameWithType: "JavaType"
summary: "Base class for type token classes used both to contain information and as keys for deserializers.\n\nInstances can (only) be constructed by `com.fasterxml.jackson.databind.type.TypeFactory`.\n\nSince 2.2 this implements <xref uid=\"java.lang.reflect.Type\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.reflect.Type\"></xref> to allow it to be pushed through interfaces that only expose that type."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.type.ResolvedType\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.core.type.ResolvedType.containedType(int)"
- "com.fasterxml.jackson.core.type.ResolvedType.containedTypeCount()"
- "com.fasterxml.jackson.core.type.ResolvedType.containedTypeName(int)"
- "com.fasterxml.jackson.core.type.ResolvedType.getContentType()"
- "com.fasterxml.jackson.core.type.ResolvedType.getKeyType()"
- "com.fasterxml.jackson.core.type.ResolvedType.getParameterSource()"
- "com.fasterxml.jackson.core.type.ResolvedType.getRawClass()"
- "com.fasterxml.jackson.core.type.ResolvedType.getReferencedType()"
- "com.fasterxml.jackson.core.type.ResolvedType.hasGenericTypes()"
- "com.fasterxml.jackson.core.type.ResolvedType.hasRawClass(java.lang.Class<?>)"
- "com.fasterxml.jackson.core.type.ResolvedType.isAbstract()"
- "com.fasterxml.jackson.core.type.ResolvedType.isArrayType()"
- "com.fasterxml.jackson.core.type.ResolvedType.isCollectionLikeType()"
- "com.fasterxml.jackson.core.type.ResolvedType.isConcrete()"
- "com.fasterxml.jackson.core.type.ResolvedType.isContainerType()"
- "com.fasterxml.jackson.core.type.ResolvedType.isEnumType()"
- "com.fasterxml.jackson.core.type.ResolvedType.isFinal()"
- "com.fasterxml.jackson.core.type.ResolvedType.isInterface()"
- "com.fasterxml.jackson.core.type.ResolvedType.isMapLikeType()"
- "com.fasterxml.jackson.core.type.ResolvedType.isPrimitive()"
- "com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()"
- "com.fasterxml.jackson.core.type.ResolvedType.isThrowable()"
- "com.fasterxml.jackson.core.type.ResolvedType.toCanonical()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class JavaType extends ResolvedType implements Serializable, Type"
constructors:
- "com.fasterxml.jackson.databind.JavaType.JavaType(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.JavaType.JavaType(java.lang.Class<?>,int,java.lang.Object,java.lang.Object,boolean)"
fields:
- "com.fasterxml.jackson.databind.JavaType._asStatic"
- "com.fasterxml.jackson.databind.JavaType._class"
- "com.fasterxml.jackson.databind.JavaType._hash"
- "com.fasterxml.jackson.databind.JavaType._typeHandler"
- "com.fasterxml.jackson.databind.JavaType._valueHandler"
methods:
- "com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()"
- "com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()"
- "com.fasterxml.jackson.databind.JavaType._narrow(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.JavaType.containedType(int)"
- "com.fasterxml.jackson.databind.JavaType.containedTypeCount()"
- "com.fasterxml.jackson.databind.JavaType.containedTypeName(int)"
- "com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)"
- "com.fasterxml.jackson.databind.JavaType.equals(java.lang.Object)"
- "com.fasterxml.jackson.databind.JavaType.findSuperType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.JavaType.findTypeParameters(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.JavaType.getBindings()"
- "com.fasterxml.jackson.databind.JavaType.getContentType()"
- "com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()"
- "com.fasterxml.jackson.databind.JavaType.getContentValueHandler()"
- "com.fasterxml.jackson.databind.JavaType.getErasedSignature()"
- "com.fasterxml.jackson.databind.JavaType.getErasedSignature(java.lang.StringBuilder)"
- "com.fasterxml.jackson.databind.JavaType.getGenericSignature()"
- "com.fasterxml.jackson.databind.JavaType.getGenericSignature(java.lang.StringBuilder)"
- "com.fasterxml.jackson.databind.JavaType.getInterfaces()"
- "com.fasterxml.jackson.databind.JavaType.getKeyType()"
- "com.fasterxml.jackson.databind.JavaType.getParameterSource()"
- "com.fasterxml.jackson.databind.JavaType.getRawClass()"
- "com.fasterxml.jackson.databind.JavaType.getReferencedType()"
- "com.fasterxml.jackson.databind.JavaType.getSuperClass()"
- "com.fasterxml.jackson.databind.JavaType.hasContentType()"
- "com.fasterxml.jackson.databind.JavaType.hasGenericTypes()"
- "com.fasterxml.jackson.databind.JavaType.hasHandlers()"
- "com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.JavaType.hasValueHandler()"
- "com.fasterxml.jackson.databind.JavaType.hashCode()"
- "com.fasterxml.jackson.databind.JavaType.isAbstract()"
- "com.fasterxml.jackson.databind.JavaType.isArrayType()"
- "com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()"
- "com.fasterxml.jackson.databind.JavaType.isConcrete()"
- "com.fasterxml.jackson.databind.JavaType.isContainerType()"
- "com.fasterxml.jackson.databind.JavaType.isEnumImplType()"
- "com.fasterxml.jackson.databind.JavaType.isEnumType()"
- "com.fasterxml.jackson.databind.JavaType.isFinal()"
- "com.fasterxml.jackson.databind.JavaType.isInterface()"
- "com.fasterxml.jackson.databind.JavaType.isJavaLangObject()"
- "com.fasterxml.jackson.databind.JavaType.isMapLikeType()"
- "com.fasterxml.jackson.databind.JavaType.isPrimitive()"
- "com.fasterxml.jackson.databind.JavaType.isThrowable()"
- "com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.JavaType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])"
- "com.fasterxml.jackson.databind.JavaType.toString()"
- "com.fasterxml.jackson.databind.JavaType.useStaticType()"
- "com.fasterxml.jackson.databind.JavaType.withContentType(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.JavaType.withContentTypeHandler(java.lang.Object)"
- "com.fasterxml.jackson.databind.JavaType.withContentValueHandler(java.lang.Object)"
- "com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.JavaType.withStaticTyping()"
- "com.fasterxml.jackson.databind.JavaType.withTypeHandler(java.lang.Object)"
- "com.fasterxml.jackson.databind.JavaType.withValueHandler(java.lang.Object)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
