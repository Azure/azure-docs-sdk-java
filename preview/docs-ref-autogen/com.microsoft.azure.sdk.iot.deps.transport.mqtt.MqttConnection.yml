### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  id: MqttConnection
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  children:
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.MqttConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.net.ssl.SSLContext,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener,boolean)
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connect()
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connectionLost(java.lang.Throwable)
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken)
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.disconnect()
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.isMqttConnected()
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage(com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage)
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage(java.lang.String,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos,byte[])
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.subscribe(java.lang.String,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos)
  - com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.unsubscribe(java.lang.String)
  langs:
  - java
  name: MqttConnection
  nameWithType: MqttConnection
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  type: Class
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  syntax:
    content: public class MqttConnection implements MqttCallback
  inheritance:
  - java.lang.Object
  implements:
  - org.eclipse.paho.client.mqttv3.MqttCallback
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.MqttConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.net.ssl.SSLContext,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener,boolean)
  id: MqttConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.net.ssl.SSLContext,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener,boolean)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: MqttConnection(String hostname, String clientId, String userName, String password, SSLContext sslContext, MqttListener listener, boolean useWebSockets)
  nameWithType: MqttConnection.MqttConnection(String hostname, String clientId, String userName, String password, SSLContext sslContext, MqttListener listener, boolean useWebSockets)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.MqttConnection(String hostname, String clientId, String userName, String password, SSLContext sslContext, MqttListener listener, boolean useWebSockets)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.MqttConnection*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Constructor to create MqttAsync Client with Paho
  syntax:
    content: public MqttConnection(String hostname, String clientId, String userName, String password, SSLContext sslContext, MqttListener listener, boolean useWebSockets)
    parameters:
    - id: hostname
      type: java.lang.String
      description: Uri to connect to
    - id: clientId
      type: java.lang.String
      description: Client Id to connect to
    - id: userName
      type: java.lang.String
      description: Username
    - id: password
      type: java.lang.String
      description: password
    - id: sslContext
      type: javax.net.ssl.SSLContext
      description: SSLContext for the connection
    - id: listener
      type: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener
      description: Mqtt listener
    - id: useWebSockets
      type: boolean
      description: true to use Mqtt over web sockets
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connect()
  id: connect()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: connect()
  nameWithType: MqttConnection.connect()
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connect()
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connect*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Connects to the MQTT broker
  syntax:
    content: public synchronized void connect()
  exceptions:
  - type: java.io.IOException
    description: if there is a Mqtt exception.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connectionLost(java.lang.Throwable)
  id: connectionLost(java.lang.Throwable)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: connectionLost(Throwable throwable)
  nameWithType: MqttConnection.connectionLost(Throwable throwable)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connectionLost(Throwable throwable)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connectionLost*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Event fired when the connection is lost on the MQTT broker
  syntax:
    content: public synchronized void connectionLost(Throwable throwable)
    parameters:
    - id: throwable
      type: java.lang.Throwable
      description: the disconnection reason.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken)
  id: deliveryComplete(org.eclipse.paho.client.mqttv3.IMqttDeliveryToken)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  nameWithType: MqttConnection.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.deliveryComplete*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Event fired when the message arrived on the MQTT broker.
  syntax:
    content: public synchronized void deliveryComplete(IMqttDeliveryToken iMqttDeliveryToken)
    parameters:
    - id: iMqttDeliveryToken
      type: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
      description: the MqttDeliveryToken for which the message was successfully sent.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.disconnect()
  id: disconnect()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: disconnect()
  nameWithType: MqttConnection.disconnect()
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.disconnect()
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.disconnect*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Disconnects from the MQTT broker
  syntax:
    content: public synchronized void disconnect()
  exceptions:
  - type: java.io.IOException
    description: if there is a Mqtt exception.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.isMqttConnected()
  id: isMqttConnected()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: isMqttConnected()
  nameWithType: MqttConnection.isMqttConnected()
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.isMqttConnected()
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.isMqttConnected*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Return whether the MQTT broker is connected to the endpoint
  syntax:
    content: public boolean isMqttConnected()
    return:
      type: boolean
      description: true if connected using Mqtt
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)
  id: messageArrived(java.lang.String,org.eclipse.paho.client.mqttv3.MqttMessage)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: messageArrived(String topic, MqttMessage mqttMessage)
  nameWithType: MqttConnection.messageArrived(String topic, MqttMessage mqttMessage)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.messageArrived(String topic, MqttMessage mqttMessage)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.messageArrived*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Event fired when the message arrived on the MQTT broker.
  syntax:
    content: public synchronized void messageArrived(String topic, MqttMessage mqttMessage)
    parameters:
    - id: topic
      type: java.lang.String
      description: the topic on which message arrived.
    - id: mqttMessage
      type: org.eclipse.paho.client.mqttv3.MqttMessage
      description: the message arrived on the Mqtt broker.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage(com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage)
  id: publishMessage(com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: publishMessage(MqttMessage message)
  nameWithType: MqttConnection.publishMessage(MqttMessage message)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage(MqttMessage message)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Sends a PUBLISH message to the MQTT broker
  syntax:
    content: public synchronized void publishMessage(MqttMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage
      description: The message to be sent
  exceptions:
  - type: java.io.IOException
    description: if there is a Mqtt exception.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage(java.lang.String,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos,byte[])
  id: publishMessage(java.lang.String,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos,byte[])
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: publishMessage(String topic, MqttQos qos, byte[] message)
  nameWithType: MqttConnection.publishMessage(String topic, MqttQos qos, byte[] message)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage(String topic, MqttQos qos, byte[] message)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Sends a PUBLISH message to the MQTT broker
  syntax:
    content: public synchronized void publishMessage(String topic, MqttQos qos, byte[] message)
    parameters:
    - id: topic
      type: java.lang.String
      description: The topic of the message
    - id: qos
      type: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos
      description: The QOS of the message
    - id: message
      type: byte[]
      description: The message to be sent
  exceptions:
  - type: java.io.IOException
    description: if there is a Mqtt exception.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.subscribe(java.lang.String,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos)
  id: subscribe(java.lang.String,com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: subscribe(String topic, MqttQos qos)
  nameWithType: MqttConnection.subscribe(String topic, MqttQos qos)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.subscribe(String topic, MqttQos qos)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.subscribe*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Send the SUBSCRIBE message to the MQTT broker
  syntax:
    content: public synchronized void subscribe(String topic, MqttQos qos)
    parameters:
    - id: topic
      type: java.lang.String
      description: The topic of the message
    - id: qos
      type: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos
      description: The QOS of the message
  exceptions:
  - type: java.io.IOException
    description: if there is a Mqtt exception.
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.unsubscribe(java.lang.String)
  id: unsubscribe(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
  langs:
  - java
  name: unsubscribe(String topic)
  nameWithType: MqttConnection.unsubscribe(String topic)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.unsubscribe(String topic)
  overload: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.unsubscribe*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
  summary: Send the UNSUBSCRIBE message to the MQTT broker
  syntax:
    content: public synchronized void unsubscribe(String topic)
    parameters:
    - id: topic
      type: java.lang.String
      description: Name of the Topic to unsubscribe.
  exceptions:
  - type: java.io.IOException
    description: if there is a Mqtt exception.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: javax.net.ssl.SSLContext
  spec.java:
  - uid: javax.net.ssl.SSLContext
    name: SSLContext
    fullName: javax.net.ssl.SSLContext
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener
  name: MqttListener
  nameWithType: MqttListener
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.MqttConnection*
  name: MqttConnection
  nameWithType: MqttConnection.MqttConnection
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.MqttConnection
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.isMqttConnected*
  name: isMqttConnected
  nameWithType: MqttConnection.isMqttConnected
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.isMqttConnected
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connect*
  name: connect
  nameWithType: MqttConnection.connect
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connect
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.disconnect*
  name: disconnect
  nameWithType: MqttConnection.disconnect
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.disconnect
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos
  name: MqttQos
  nameWithType: MqttQos
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttQos
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage*
  name: publishMessage
  nameWithType: MqttConnection.publishMessage
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.publishMessage
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage
  name: MqttMessage
  nameWithType: MqttMessage
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.subscribe*
  name: subscribe
  nameWithType: MqttConnection.subscribe
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.subscribe
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.unsubscribe*
  name: unsubscribe
  nameWithType: MqttConnection.unsubscribe
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.unsubscribe
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: org.eclipse.paho.client.mqttv3.MqttMessage
  spec.java:
  - uid: org.eclipse.paho.client.mqttv3.MqttMessage
    name: MqttMessage
    fullName: org.eclipse.paho.client.mqttv3.MqttMessage
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.messageArrived*
  name: messageArrived
  nameWithType: MqttConnection.messageArrived
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.messageArrived
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
  spec.java:
  - uid: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
    name: IMqttDeliveryToken
    fullName: org.eclipse.paho.client.mqttv3.IMqttDeliveryToken
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.deliveryComplete*
  name: deliveryComplete
  nameWithType: MqttConnection.deliveryComplete
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.deliveryComplete
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connectionLost*
  name: connectionLost
  nameWithType: MqttConnection.connectionLost
  fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection.connectionLost
  package: com.microsoft.azure.sdk.iot.deps.transport.mqtt
- uid: org.eclipse.paho.client.mqttv3.MqttCallback
  name: MqttCallback
  nameWithType: MqttCallback
  fullName: org.eclipse.paho.client.mqttv3.MqttCallback
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
