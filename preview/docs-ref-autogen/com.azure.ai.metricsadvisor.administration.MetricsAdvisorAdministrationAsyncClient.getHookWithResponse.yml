### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.getHookWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.getHookWithResponse"
name: "getHookWithResponse"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.getHookWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.getHookWithResponse(java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.getHookWithResponse(String hookId)"
  name: "getHookWithResponse(String hookId)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.getHookWithResponse(String hookId)"
  summary: "Get a hook by its id.\n\n**Code sample**\n\n```java\nfinal String hookId = \"f00853f1-6627-447f-bacf-8dccf2e86fed\";\n metricsAdvisorAdminAsyncClient.getHookWithResponse(hookId)\n     .subscribe(response -> {\n         System.out.printf(\"Response status code: %d%n\", response.getStatusCode());\n         NotificationHook notificationHook = response.getValue();\n         if (notificationHook instanceof EmailNotificationHook) {\n             EmailNotificationHook emailHook = (EmailNotificationHook) notificationHook;\n             System.out.printf(\"Email Hook Id: %s%n\", emailHook.getId());\n             System.out.printf(\"Email Hook Name: %s%n\", emailHook.getName());\n             System.out.printf(\"Email Hook Description: %s%n\", emailHook.getDescription());\n             System.out.printf(\"Email Hook External Link: %s%n\", emailHook.getExternalLink());\n             System.out.printf(\"Email Hook Emails: %s%n\", String.join(\",\", emailHook.getEmailsToAlert()));\n         } else if (notificationHook instanceof WebNotificationHook) {\n             WebNotificationHook webHook = (WebNotificationHook) notificationHook;\n             System.out.printf(\"Web Hook Id: %s%n\", webHook.getId());\n             System.out.printf(\"Web Hook Name: %s%n\", webHook.getName());\n             System.out.printf(\"Web Hook Description: %s%n\", webHook.getDescription());\n             System.out.printf(\"Web Hook External Link: %s%n\", webHook.getExternalLink());\n             System.out.printf(\"Web Hook Endpoint: %s%n\", webHook.getEndpoint());\n             System.out.printf(\"Web Hook Headers: %s%n\", webHook.getHttpHeaders());\n         }\n     });\n```"
  parameters:
  - description: "The hook unique id."
    name: "hookId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<NotificationHook>> getHookWithResponse(String hookId)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> of a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.ai.metricsadvisor.models.NotificationHook\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NotificationHook\"></xref> for the provided id."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.NotificationHook?alt=com.azure.ai.metricsadvisor.models.NotificationHook&text=NotificationHook\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
