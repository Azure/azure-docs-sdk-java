### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.runIndexerWithResponse*"
fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.runIndexerWithResponse"
name: "runIndexerWithResponse"
nameWithType: "SearchIndexerAsyncClient.runIndexerWithResponse"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.runIndexerWithResponse(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.runIndexerWithResponse(String indexerName)"
  name: "runIndexerWithResponse(String indexerName)"
  nameWithType: "SearchIndexerAsyncClient.runIndexerWithResponse(String indexerName)"
  summary: "Runs an indexer on-demand.\n\n**Code Sample**\n\nRun search indexer named \"searchIndexer\".\n\n```java\nsearchIndexerAsyncClient.runIndexerWithResponse(\"searchIndexer\")\n     .subscribe(response ->\n         System.out.println(\"The status code of the response is \" + response.getStatusCode()));\n```"
  parameters:
  - description: "the name of the indexer to run"
    name: "indexerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> runIndexerWithResponse(String indexerName)"
  returns:
    description: "a response signalling completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
