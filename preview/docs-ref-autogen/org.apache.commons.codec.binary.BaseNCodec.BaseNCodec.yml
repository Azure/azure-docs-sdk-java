### YamlMime:JavaMember
uid: "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec*"
fullName: "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
name: "BaseNCodec"
nameWithType: "BaseNCodec.BaseNCodec"
members:
- uid: "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int)"
  fullName: "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength)"
  name: "BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength)"
  nameWithType: "BaseNCodec.BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength)"
  summary: "Note `lineLength` is rounded down to the nearest multiple of <xref uid=\"org.apache.commons.codec.binary.BaseNCodec.encodedBlockSize\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#encodedBlockSize\"></xref> If `chunkSeparatorLength` is zero, then chunking is disabled."
  parameters:
  - description: "the size of an unencoded block (e.g. Base64 = 3)"
    name: "unencodedBlockSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the size of an encoded block (e.g. Base64 = 4)"
    name: "encodedBlockSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "if &gt; 0, use chunking with a length <code>lineLength</code>"
    name: "lineLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the chunk separator length, if relevant"
    name: "chunkSeparatorLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength)"
- uid: "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int,int,int,int,byte)"
  fullName: "org.apache.commons.codec.binary.BaseNCodec.BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength, byte pad)"
  name: "BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength, byte pad)"
  nameWithType: "BaseNCodec.BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength, byte pad)"
  summary: "Note `lineLength` is rounded down to the nearest multiple of <xref uid=\"org.apache.commons.codec.binary.BaseNCodec.encodedBlockSize\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#encodedBlockSize\"></xref> If `chunkSeparatorLength` is zero, then chunking is disabled."
  parameters:
  - description: "the size of an unencoded block (e.g. Base64 = 3)"
    name: "unencodedBlockSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the size of an encoded block (e.g. Base64 = 4)"
    name: "encodedBlockSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "if &gt; 0, use chunking with a length <code>lineLength</code>"
    name: "lineLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the chunk separator length, if relevant"
    name: "chunkSeparatorLength"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "byte used as padding byte."
    name: "pad"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BaseNCodec(int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength, byte pad)"
type: "constructor"
metadata: {}
package: "org.apache.commons.codec.binary"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
