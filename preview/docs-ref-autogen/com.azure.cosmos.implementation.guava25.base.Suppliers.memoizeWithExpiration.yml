### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Suppliers.memoizeWithExpiration*"
fullName: "com.azure.cosmos.implementation.guava25.base.Suppliers.<T>memoizeWithExpiration"
name: "<T>memoizeWithExpiration"
nameWithType: "Suppliers.<T>memoizeWithExpiration"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Suppliers.<T>memoizeWithExpiration(com.azure.cosmos.implementation.guava25.base.Supplier<T>,long,java.util.concurrent.TimeUnit)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Suppliers.<T>memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)"
  name: "<T>memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)"
  nameWithType: "Suppliers.<T>memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)"
  summary: "Returns a supplier that caches the instance supplied by the delegate and removes the cached value after the specified time has passed. Subsequent calls to `get()` return the cached value if the expiration time has not passed. After the expiration time, a new value is retrieved, cached, and returned. See: [memoization][]\n\nThe returned supplier is thread-safe. The supplier's serialized form does not contain the cached value, which will be recalculated when `get()` is called on the reserialized instance. The actual memoization does not happen when the underlying delegate throws an exception.\n\nWhen the underlying delegate throws an exception then this memoizing supplier will keep delegating calls until it returns valid data.\n\n\n[memoization]: http://en.wikipedia.org/wiki/Memoization"
  parameters:
  - name: "delegate"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Supplier?alt=com.azure.cosmos.implementation.guava25.base.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the length of time after a value is created that it should stop being returned\n     by subsequent <code>get()</code> calls"
    name: "duration"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "the unit that <code>duration</code> is expressed in"
    name: "unit"
    type: "<xref href=\"java.util.concurrent.TimeUnit?alt=java.util.concurrent.TimeUnit&text=TimeUnit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Supplier<T> <T>memoizeWithExpiration(Supplier<T> delegate, long duration, TimeUnit unit)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Supplier?alt=com.azure.cosmos.implementation.guava25.base.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
