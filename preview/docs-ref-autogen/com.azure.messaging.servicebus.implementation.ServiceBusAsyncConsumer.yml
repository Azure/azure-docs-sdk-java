### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer"
  id: "ServiceBusAsyncConsumer"
  parent: "com.azure.messaging.servicebus.implementation"
  children:
  - "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.ServiceBusAsyncConsumer(java.lang.String,com.azure.messaging.servicebus.implementation.ServiceBusReceiveLinkProcessor,com.azure.core.amqp.implementation.MessageSerializer,boolean,boolean,java.time.Duration,com.azure.core.amqp.AmqpRetryOptions,com.azure.messaging.servicebus.implementation.MessageLockContainer,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.time.Instant>>)"
  - "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.close()"
  - "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.getLinkName()"
  - "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.receive()"
  langs:
  - "java"
  name: "ServiceBusAsyncConsumer"
  nameWithType: "ServiceBusAsyncConsumer"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer"
  type: "Class"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "A package-private consumer responsible for reading <xref uid=\"com.azure.messaging.servicebus.ServiceBusMessage\" data-throw-if-not-resolved=\"false\">ServiceBusMessage</xref> from a specific Service Bus."
  syntax:
    content: "public class ServiceBusAsyncConsumer implements AutoCloseable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.AutoCloseable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.ServiceBusAsyncConsumer(java.lang.String,com.azure.messaging.servicebus.implementation.ServiceBusReceiveLinkProcessor,com.azure.core.amqp.implementation.MessageSerializer,boolean,boolean,java.time.Duration,com.azure.core.amqp.AmqpRetryOptions,com.azure.messaging.servicebus.implementation.MessageLockContainer,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.time.Instant>>)"
  id: "ServiceBusAsyncConsumer(java.lang.String,com.azure.messaging.servicebus.implementation.ServiceBusReceiveLinkProcessor,com.azure.core.amqp.implementation.MessageSerializer,boolean,boolean,java.time.Duration,com.azure.core.amqp.AmqpRetryOptions,com.azure.messaging.servicebus.implementation.MessageLockContainer,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>,java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.time.Instant>>)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer"
  langs:
  - "java"
  name: "ServiceBusAsyncConsumer(String linkName, ServiceBusReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, boolean isAutoComplete, boolean autoLockRenewal, Duration maxAutoLockRenewDuration, AmqpRetryOptions retryOptions, MessageLockContainer messageLockContainer, Function<MessageLockToken,Mono<Void>> onComplete, Function<MessageLockToken,Mono<Void>> onAbandon, Function<MessageLockToken,Mono<Instant>> onRenewLock)"
  nameWithType: "ServiceBusAsyncConsumer.ServiceBusAsyncConsumer(String linkName, ServiceBusReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, boolean isAutoComplete, boolean autoLockRenewal, Duration maxAutoLockRenewDuration, AmqpRetryOptions retryOptions, MessageLockContainer messageLockContainer, Function<MessageLockToken,Mono<Void>> onComplete, Function<MessageLockToken,Mono<Void>> onAbandon, Function<MessageLockToken,Mono<Instant>> onRenewLock)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.ServiceBusAsyncConsumer(String linkName, ServiceBusReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, boolean isAutoComplete, boolean autoLockRenewal, Duration maxAutoLockRenewDuration, AmqpRetryOptions retryOptions, MessageLockContainer messageLockContainer, Function<MessageLockToken,Mono<Void>> onComplete, Function<MessageLockToken,Mono<Void>> onAbandon, Function<MessageLockToken,Mono<Instant>> onRenewLock)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.ServiceBusAsyncConsumer*"
  type: "Constructor"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "public ServiceBusAsyncConsumer(String linkName, ServiceBusReceiveLinkProcessor amqpReceiveLinkProcessor, MessageSerializer messageSerializer, boolean isAutoComplete, boolean autoLockRenewal, Duration maxAutoLockRenewDuration, AmqpRetryOptions retryOptions, MessageLockContainer messageLockContainer, Function<MessageLockToken,Mono<Void>> onComplete, Function<MessageLockToken,Mono<Void>> onAbandon, Function<MessageLockToken,Mono<Instant>> onRenewLock)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
    - id: "amqpReceiveLinkProcessor"
      type: "com.azure.messaging.servicebus.implementation.ServiceBusReceiveLinkProcessor"
    - id: "messageSerializer"
      type: "com.azure.core.amqp.implementation.MessageSerializer"
    - id: "isAutoComplete"
      type: "boolean"
    - id: "autoLockRenewal"
      type: "boolean"
    - id: "maxAutoLockRenewDuration"
      type: "java.time.Duration"
    - id: "retryOptions"
      type: "com.azure.core.amqp.AmqpRetryOptions"
    - id: "messageLockContainer"
      type: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
    - id: "onComplete"
      type: "java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>"
    - id: "onAbandon"
      type: "java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>"
    - id: "onRenewLock"
      type: "java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.time.Instant>>"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.close()"
  id: "close()"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer"
  langs:
  - "java"
  name: "close()"
  nameWithType: "ServiceBusAsyncConsumer.close()"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.close()"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.close*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Disposes of the consumer by closing the underlying connection to the service."
  syntax:
    content: "public void close()"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.getLinkName()"
  id: "getLinkName()"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer"
  langs:
  - "java"
  name: "getLinkName()"
  nameWithType: "ServiceBusAsyncConsumer.getLinkName()"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.getLinkName()"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.getLinkName*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "public String getLinkName()"
    return:
      type: "java.lang.String"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.receive()"
  id: "receive()"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer"
  langs:
  - "java"
  name: "receive()"
  nameWithType: "ServiceBusAsyncConsumer.receive()"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.receive()"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.receive*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Begin consuming events until there are no longer any subscribers."
  syntax:
    content: "public Flux<ServiceBusReceivedMessage> receive()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
      description: "A stream of events received from the partition."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusReceiveLinkProcessor"
  name: "ServiceBusReceiveLinkProcessor"
  nameWithType: "ServiceBusReceiveLinkProcessor"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusReceiveLinkProcessor"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.MessageSerializer"
    name: "MessageSerializer"
    fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.AmqpRetryOptions"
  spec.java:
  - uid: "com.azure.core.amqp.AmqpRetryOptions"
    name: "AmqpRetryOptions"
    fullName: "com.azure.core.amqp.AmqpRetryOptions"
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
  name: "MessageLockContainer"
  nameWithType: "MessageLockContainer"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
- uid: "java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.lang.Void>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.servicebus.MessageLockToken"
    name: "MessageLockToken"
    fullName: "com.azure.messaging.servicebus.MessageLockToken"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.util.function.Function<com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono<java.time.Instant>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.servicebus.MessageLockToken"
    name: "MessageLockToken"
    fullName: "com.azure.messaging.servicebus.MessageLockToken"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.ServiceBusAsyncConsumer*"
  name: "ServiceBusAsyncConsumer"
  nameWithType: "ServiceBusAsyncConsumer.ServiceBusAsyncConsumer"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.ServiceBusAsyncConsumer"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.getLinkName*"
  name: "getLinkName"
  nameWithType: "ServiceBusAsyncConsumer.getLinkName"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.getLinkName"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.close*"
  name: "close"
  nameWithType: "ServiceBusAsyncConsumer.close"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.close"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessage>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
    name: "ServiceBusReceivedMessage"
    fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.receive*"
  name: "receive"
  nameWithType: "ServiceBusAsyncConsumer.receive"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAsyncConsumer.receive"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "java.lang.AutoCloseable"
  name: "AutoCloseable"
  nameWithType: "AutoCloseable"
  fullName: "java.lang.AutoCloseable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono"
  name: "MessageLockToken,Mono"
  nameWithType: "MessageLockToken,Mono"
  fullName: "com.azure.messaging.servicebus.MessageLockToken,reactor.core.publisher.Mono"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "java.time.Instant"
  name: "Instant"
  nameWithType: "Instant"
  fullName: "java.time.Instant"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
  name: "ServiceBusReceivedMessage"
  nameWithType: "ServiceBusReceivedMessage"
  fullName: "com.azure.messaging.servicebus.ServiceBusReceivedMessage"
