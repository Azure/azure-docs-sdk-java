### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.models.SqlMISink.withSinkRetryWait*"
fullName: "com.azure.resourcemanager.datafactory.models.SqlMISink.withSinkRetryWait"
name: "withSinkRetryWait"
nameWithType: "SqlMISink.withSinkRetryWait"
members:
- uid: "com.azure.resourcemanager.datafactory.models.SqlMISink.withSinkRetryWait(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SqlMISink.withSinkRetryWait(Object sinkRetryWait)"
  name: "withSinkRetryWait(Object sinkRetryWait)"
  nameWithType: "SqlMISink.withSinkRetryWait(Object sinkRetryWait)"
  summary: "Set the sinkRetryWait property: Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
  parameters:
  - name: "sinkRetryWait"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SqlMISink withSinkRetryWait(Object sinkRetryWait)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SqlMISink?alt=com.azure.resourcemanager.datafactory.models.SqlMISink&text=SqlMISink\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
