### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl
  id: IndexesImpl
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation
  children:
  - com.azure.search.documents.indexes.implementation.IndexesImpl.analyzeWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.AnalyzeRequest,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.IndexesImpl.createOrUpdateWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.SearchIndex,java.lang.Boolean,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.IndexesImpl.createWithResponseAsync(com.azure.search.documents.indexes.implementation.models.SearchIndex,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.IndexesImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.IndexesImpl.getStatisticsWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.IndexesImpl.getWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.IndexesImpl.listSinglePageAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  langs:
  - java
  name: IndexesImpl
  nameWithType: IndexesImpl
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl
  type: Class
  package: com.azure.search.documents.indexes.implementation
  summary: An instance of this class provides access to all the operations defined in Indexes.
  syntax:
    content: public final class IndexesImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.IndexesImpl(com.azure.search.documents.indexes.implementation.SearchServiceClientImpl)
  id: IndexesImpl(com.azure.search.documents.indexes.implementation.SearchServiceClientImpl)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: IndexesImpl(SearchServiceClientImpl client)
  nameWithType: IndexesImpl.IndexesImpl(SearchServiceClientImpl client)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.IndexesImpl(SearchServiceClientImpl client)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.IndexesImpl*
  type: Constructor
  package: com.azure.search.documents.indexes.implementation
  summary: Initializes an instance of IndexesImpl.
  syntax:
    content: " IndexesImpl(SearchServiceClientImpl client)"
    parameters:
    - id: client
      type: com.azure.search.documents.indexes.implementation.SearchServiceClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.analyzeWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.AnalyzeRequest,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: analyzeWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.AnalyzeRequest,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: analyzeWithResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.analyzeWithResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.analyzeWithResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.analyzeWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Shows how an analyzer breaks text into tokens.
  syntax:
    content: public Mono<Response<AnalyzeResult>> analyzeWithResponseAsync(String indexName, AnalyzeRequest request, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index for which to test an analyzer.
    - id: request
      type: com.azure.search.documents.indexes.implementation.models.AnalyzeRequest
      description: Specifies some text and analysis components used to break that text into tokens.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.AnalyzeResult>>
      description: the result of testing an analyzer on text.
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.createOrUpdateWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.SearchIndex,java.lang.Boolean,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.SearchIndex,java.lang.Boolean,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String indexName, SearchIndex index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.createOrUpdateWithResponseAsync(String indexName, SearchIndex index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.createOrUpdateWithResponseAsync(String indexName, SearchIndex index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Creates a new search index or updates an index if it already exists.
  syntax:
    content: public Mono<Response<SearchIndex>> createOrUpdateWithResponseAsync(String indexName, SearchIndex index, Boolean allowIndexDowntime, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The definition of the index to create or update.
    - id: index
      type: com.azure.search.documents.indexes.implementation.models.SearchIndex
      description: Represents a search index definition, which describes the fields and search behavior of an index.
    - id: allowIndexDowntime
      type: java.lang.Boolean
      description: >-
        Allows new analyzers, tokenizers, token filters, or char filters to be added to an
             index by taking the index offline for at least a few seconds. This temporarily causes indexing and query
             requests to fail. Performance and write availability of the index can be impaired for several minutes after
             the index is updated, or longer for very large indexes.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Defines the If-Match condition. The operation will be performed only if the ETag on the server
             matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: >-
        Defines the If-None-Match condition. The operation will be performed only if the ETag on the
             server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SearchIndex>>
      description: represents a search index definition, which describes the fields and search behavior of an index.
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.createWithResponseAsync(com.azure.search.documents.indexes.implementation.models.SearchIndex,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: createWithResponseAsync(com.azure.search.documents.indexes.implementation.models.SearchIndex,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: createWithResponseAsync(SearchIndex index, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.createWithResponseAsync(SearchIndex index, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.createWithResponseAsync(SearchIndex index, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.createWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Creates a new search index.
  syntax:
    content: public Mono<Response<SearchIndex>> createWithResponseAsync(SearchIndex index, RequestOptions requestOptions, Context context)
    parameters:
    - id: index
      type: com.azure.search.documents.indexes.implementation.models.SearchIndex
      description: Represents a search index definition, which describes the fields and search behavior of an index.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SearchIndex>>
      description: represents a search index definition, which describes the fields and search behavior of an index.
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: deleteWithResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.deleteWithResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.deleteWithResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Deletes a search index and all the documents it contains. This operation is permanent, with no recovery option. Make sure you have a master copy of your index definition, data ingestion code, and a backup of the primary data source in case you need to re-build the index.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String indexName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index to delete.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Defines the If-Match condition. The operation will be performed only if the ETag on the server
             matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: >-
        Defines the If-None-Match condition. The operation will be performed only if the ETag on the
             server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.getStatisticsWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: getStatisticsWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: getStatisticsWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.getStatisticsWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.getStatisticsWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.getStatisticsWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Returns statistics for the given index, including a document count and storage usage.
  syntax:
    content: public Mono<Response<GetIndexStatisticsResult>> getStatisticsWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index for which to retrieve statistics.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.GetIndexStatisticsResult>>
      description: statistics for a given index.
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.getWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: getWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.getWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.getWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.getWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Retrieves an index definition.
  syntax:
    content: public Mono<Response<SearchIndex>> getWithResponseAsync(String indexName, RequestOptions requestOptions, Context context)
    parameters:
    - id: indexName
      type: java.lang.String
      description: The name of the index to retrieve.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SearchIndex>>
      description: represents a search index definition, which describes the fields and search behavior of an index.
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.listSinglePageAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: listSinglePageAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.IndexesImpl
  langs:
  - java
  name: listSinglePageAsync(String select, RequestOptions requestOptions, Context context)
  nameWithType: IndexesImpl.listSinglePageAsync(String select, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.listSinglePageAsync(String select, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.IndexesImpl.listSinglePageAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Lists all indexes available for a search service.
  syntax:
    content: public Mono<PagedResponse<SearchIndex>> listSinglePageAsync(String select, RequestOptions requestOptions, Context context)
    parameters:
    - id: select
      type: java.lang.String
      description: >-
        Selects which top-level properties of the index definitions to retrieve. Specified as a
             comma-separated list of JSON property names, or '*' for all properties. The default is all properties.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.search.documents.indexes.implementation.models.SearchIndex>>
      description: response from a List Indexes request.
references:
- uid: com.azure.search.documents.indexes.implementation.SearchServiceClientImpl
  name: SearchServiceClientImpl
  nameWithType: SearchServiceClientImpl
  fullName: com.azure.search.documents.indexes.implementation.SearchServiceClientImpl
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.IndexesImpl*
  name: IndexesImpl
  nameWithType: IndexesImpl.IndexesImpl
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.IndexesImpl
  package: com.azure.search.documents.indexes.implementation
- uid: com.azure.search.documents.indexes.implementation.models.SearchIndex
  name: SearchIndex
  nameWithType: SearchIndex
  fullName: com.azure.search.documents.indexes.implementation.models.SearchIndex
- uid: com.azure.search.documents.indexes.implementation.models.RequestOptions
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.azure.search.documents.indexes.implementation.models.RequestOptions
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SearchIndex>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.implementation.models.SearchIndex
    name: SearchIndex
    fullName: com.azure.search.documents.indexes.implementation.models.SearchIndex
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: IndexesImpl.createWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.createWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.search.documents.indexes.implementation.models.SearchIndex>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.implementation.models.SearchIndex
    name: SearchIndex
    fullName: com.azure.search.documents.indexes.implementation.models.SearchIndex
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: IndexesImpl.listSinglePageAsync
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.listSinglePageAsync
  package: com.azure.search.documents.indexes.implementation
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: IndexesImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.createOrUpdateWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: IndexesImpl.deleteWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.deleteWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: IndexesImpl.getWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.getWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.GetIndexStatisticsResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.implementation.models.GetIndexStatisticsResult
    name: GetIndexStatisticsResult
    fullName: com.azure.search.documents.indexes.implementation.models.GetIndexStatisticsResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.getStatisticsWithResponseAsync*
  name: getStatisticsWithResponseAsync
  nameWithType: IndexesImpl.getStatisticsWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.getStatisticsWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: com.azure.search.documents.indexes.implementation.models.AnalyzeRequest
  name: AnalyzeRequest
  nameWithType: AnalyzeRequest
  fullName: com.azure.search.documents.indexes.implementation.models.AnalyzeRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.AnalyzeResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.implementation.models.AnalyzeResult
    name: AnalyzeResult
    fullName: com.azure.search.documents.indexes.implementation.models.AnalyzeResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.IndexesImpl.analyzeWithResponseAsync*
  name: analyzeWithResponseAsync
  nameWithType: IndexesImpl.analyzeWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.IndexesImpl.analyzeWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.search.documents.indexes.implementation.models.GetIndexStatisticsResult
  name: GetIndexStatisticsResult
  nameWithType: GetIndexStatisticsResult
  fullName: com.azure.search.documents.indexes.implementation.models.GetIndexStatisticsResult
- uid: com.azure.search.documents.indexes.implementation.models.AnalyzeResult
  name: AnalyzeResult
  nameWithType: AnalyzeResult
  fullName: com.azure.search.documents.indexes.implementation.models.AnalyzeResult
