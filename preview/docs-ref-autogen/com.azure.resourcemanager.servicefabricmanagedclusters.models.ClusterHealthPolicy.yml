### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy"
fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy"
name: "ClusterHealthPolicy"
nameWithType: "ClusterHealthPolicy"
summary: "Defines a health policy used to evaluate the health of the cluster or of a cluster node."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ClusterHealthPolicy**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.ClusterHealthPolicy()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.ClusterHealthPolicy()"
  name: "ClusterHealthPolicy()"
  nameWithType: "ClusterHealthPolicy.ClusterHealthPolicy()"
  summary: "Creates an instance of Cluster<wbr>Health<wbr>Policy class."
  syntax: "public ClusterHealthPolicy()"
  desc: "Creates an instance of ClusterHealthPolicy class."
methods:
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ClusterHealthPolicy.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Cluster<wbr>Health<wbr>Policy from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ClusterHealthPolicy fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ClusterHealthPolicy from the JsonReader."
  returns:
    description: "An instance of ClusterHealthPolicy if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  name: "maxPercentUnhealthyApplications()"
  nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  summary: "Get the max<wbr>Percent<wbr>Unhealthy<wbr>Applications property: The maximum allowed percentage of unhealthy applications before reporting an error."
  syntax: "public int maxPercentUnhealthyApplications()"
  desc: "Get the maxPercentUnhealthyApplications property: The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10. The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap. The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero."
  returns:
    description: "the maxPercentUnhealthyApplications value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  name: "maxPercentUnhealthyNodes()"
  nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyNodes()"
  summary: "Get the max<wbr>Percent<wbr>Unhealthy<wbr>Nodes property: The maximum allowed percentage of unhealthy nodes before reporting an error."
  syntax: "public int maxPercentUnhealthyNodes()"
  desc: "Get the maxPercentUnhealthyNodes property: The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10. The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning. The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero. In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that."
  returns:
    description: "the maxPercentUnhealthyNodes value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ClusterHealthPolicy.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.validate()"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.validate()"
  name: "validate()"
  nameWithType: "ClusterHealthPolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.withMaxPercentUnhealthyApplications(int)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.withMaxPercentUnhealthyApplications(int maxPercentUnhealthyApplications)"
  name: "withMaxPercentUnhealthyApplications(int maxPercentUnhealthyApplications)"
  nameWithType: "ClusterHealthPolicy.withMaxPercentUnhealthyApplications(int maxPercentUnhealthyApplications)"
  summary: "Set the max<wbr>Percent<wbr>Unhealthy<wbr>Applications property: The maximum allowed percentage of unhealthy applications before reporting an error."
  parameters:
  - description: "the maxPercentUnhealthyApplications value to set."
    name: "maxPercentUnhealthyApplications"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ClusterHealthPolicy withMaxPercentUnhealthyApplications(int maxPercentUnhealthyApplications)"
  desc: "Set the maxPercentUnhealthyApplications property: The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10. The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap. The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero."
  returns:
    description: "the ClusterHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.withMaxPercentUnhealthyNodes(int)"
  fullName: "com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy.withMaxPercentUnhealthyNodes(int maxPercentUnhealthyNodes)"
  name: "withMaxPercentUnhealthyNodes(int maxPercentUnhealthyNodes)"
  nameWithType: "ClusterHealthPolicy.withMaxPercentUnhealthyNodes(int maxPercentUnhealthyNodes)"
  summary: "Set the max<wbr>Percent<wbr>Unhealthy<wbr>Nodes property: The maximum allowed percentage of unhealthy nodes before reporting an error."
  parameters:
  - description: "the maxPercentUnhealthyNodes value to set."
    name: "maxPercentUnhealthyNodes"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ClusterHealthPolicy withMaxPercentUnhealthyNodes(int maxPercentUnhealthyNodes)"
  desc: "Set the maxPercentUnhealthyNodes property: The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10. The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning. The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster. The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero. In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that."
  returns:
    description: "the ClusterHealthPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines a health policy used to evaluate the health of the cluster or of a cluster node."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy?alt=com.azure.resourcemanager.servicefabricmanagedclusters.models.ClusterHealthPolicy&text=ClusterHealthPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.servicefabricmanagedclusters.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabricmanagedclusters:1.0.0-beta.2
