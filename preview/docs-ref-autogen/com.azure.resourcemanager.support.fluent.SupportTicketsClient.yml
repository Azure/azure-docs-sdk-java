### YamlMime:JavaType
uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient"
fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient"
name: "SupportTicketsClient"
nameWithType: "SupportTicketsClient"
summary: "An instance of this class provides access to all the operations defined in Support<wbr>Tickets<wbr>Client."
syntax: "public interface SupportTicketsClient"
methods:
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.beginCreate(java.lang.String,com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  name: "beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  nameWithType: "SupportTicketsClient.beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  summary: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Support ticket request payload."
    name: "createSupportTicketParameters"
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SupportTicketDetailsInner>,SupportTicketDetailsInner> beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  desc: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription. Learn the \\[prerequisites\\](https://aka.ms/supportAPI) required to create a support ticket.<br/><br/>Always call the Services and ProblemClassifications API to get the most recent set of services and problem categories required for support ticket creation.<br/><br/>Adding attachments is not currently supported via the API. To add a file to an existing support ticket, visit the \\[Manage support ticket\\](https://portal.azure.com/\\#blade/Microsoft\\_Azure\\_Support/HelpAndSupportBlade/managesupportrequest) page in the Azure portal, select the support ticket, and use the file upload control to add a new file.<br/><br/>Providing consent to share diagnostic information with Azure support is currently not supported via the API. The Azure support engineer working on your ticket will reach out to you for consent if your issue requires gathering diagnostic information from your Azure resources.<br/><br/>\\*\\*Creating a support ticket for on-behalf-of\\*\\*: Include \\_x-ms-authorization-auxiliary\\_ header to provide an auxiliary token as per \\[documentation\\](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant). The primary token will be from the tenant for whom a support ticket is being raised against the subscription, i.e. Cloud solution provider (CSP) customer tenant. The auxiliary token will be from the Cloud solution provider (CSP) partner tenant."
  returns:
    description: "object that represents SupportTicketDetails resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.beginCreate(java.lang.String,com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  name: "beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  nameWithType: "SupportTicketsClient.beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  summary: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Support ticket request payload."
    name: "createSupportTicketParameters"
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<SupportTicketDetailsInner>,SupportTicketDetailsInner> beginCreate(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  desc: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription. Learn the \\[prerequisites\\](https://aka.ms/supportAPI) required to create a support ticket.<br/><br/>Always call the Services and ProblemClassifications API to get the most recent set of services and problem categories required for support ticket creation.<br/><br/>Adding attachments is not currently supported via the API. To add a file to an existing support ticket, visit the \\[Manage support ticket\\](https://portal.azure.com/\\#blade/Microsoft\\_Azure\\_Support/HelpAndSupportBlade/managesupportrequest) page in the Azure portal, select the support ticket, and use the file upload control to add a new file.<br/><br/>Providing consent to share diagnostic information with Azure support is currently not supported via the API. The Azure support engineer working on your ticket will reach out to you for consent if your issue requires gathering diagnostic information from your Azure resources.<br/><br/>\\*\\*Creating a support ticket for on-behalf-of\\*\\*: Include \\_x-ms-authorization-auxiliary\\_ header to provide an auxiliary token as per \\[documentation\\](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant). The primary token will be from the tenant for whom a support ticket is being raised against the subscription, i.e. Cloud solution provider (CSP) customer tenant. The auxiliary token will be from the Cloud solution provider (CSP) partner tenant."
  returns:
    description: "object that represents SupportTicketDetails resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.checkNameAvailability(com.azure.resourcemanager.support.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "SupportTicketsClient.checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.support.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.support.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityOutputInner checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This API should be used to check the uniqueness of the name for support ticket creation for the selected subscription."
  returns:
    description: "output of check name availability API."
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.support.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.checkNameAvailabilityWithResponse(com.azure.resourcemanager.support.models.CheckNameAvailabilityInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  name: "checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  nameWithType: "SupportTicketsClient.checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.support.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.support.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityOutputInner> checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  desc: "Check the availability of a resource name. This API should be used to check the uniqueness of the name for support ticket creation for the selected subscription."
  returns:
    description: "output of check name availability API."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.support.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.support.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.create(java.lang.String,com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  name: "create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  nameWithType: "SupportTicketsClient.create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  summary: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Support ticket request payload."
    name: "createSupportTicketParameters"
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SupportTicketDetailsInner create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters)"
  desc: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription. Learn the \\[prerequisites\\](https://aka.ms/supportAPI) required to create a support ticket.<br/><br/>Always call the Services and ProblemClassifications API to get the most recent set of services and problem categories required for support ticket creation.<br/><br/>Adding attachments is not currently supported via the API. To add a file to an existing support ticket, visit the \\[Manage support ticket\\](https://portal.azure.com/\\#blade/Microsoft\\_Azure\\_Support/HelpAndSupportBlade/managesupportrequest) page in the Azure portal, select the support ticket, and use the file upload control to add a new file.<br/><br/>Providing consent to share diagnostic information with Azure support is currently not supported via the API. The Azure support engineer working on your ticket will reach out to you for consent if your issue requires gathering diagnostic information from your Azure resources.<br/><br/>\\*\\*Creating a support ticket for on-behalf-of\\*\\*: Include \\_x-ms-authorization-auxiliary\\_ header to provide an auxiliary token as per \\[documentation\\](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant). The primary token will be from the tenant for whom a support ticket is being raised against the subscription, i.e. Cloud solution provider (CSP) customer tenant. The auxiliary token will be from the Cloud solution provider (CSP) partner tenant."
  returns:
    description: "object that represents SupportTicketDetails resource."
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.create(java.lang.String,com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  name: "create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  nameWithType: "SupportTicketsClient.create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  summary: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Support ticket request payload."
    name: "createSupportTicketParameters"
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SupportTicketDetailsInner create(String supportTicketName, SupportTicketDetailsInner createSupportTicketParameters, Context context)"
  desc: "Creates a new support ticket for Subscription and Service limits (Quota), Technical, Billing, and Subscription Management issues for the specified subscription. Learn the \\[prerequisites\\](https://aka.ms/supportAPI) required to create a support ticket.<br/><br/>Always call the Services and ProblemClassifications API to get the most recent set of services and problem categories required for support ticket creation.<br/><br/>Adding attachments is not currently supported via the API. To add a file to an existing support ticket, visit the \\[Manage support ticket\\](https://portal.azure.com/\\#blade/Microsoft\\_Azure\\_Support/HelpAndSupportBlade/managesupportrequest) page in the Azure portal, select the support ticket, and use the file upload control to add a new file.<br/><br/>Providing consent to share diagnostic information with Azure support is currently not supported via the API. The Azure support engineer working on your ticket will reach out to you for consent if your issue requires gathering diagnostic information from your Azure resources.<br/><br/>\\*\\*Creating a support ticket for on-behalf-of\\*\\*: Include \\_x-ms-authorization-auxiliary\\_ header to provide an auxiliary token as per \\[documentation\\](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant). The primary token will be from the tenant for whom a support ticket is being raised against the subscription, i.e. Cloud solution provider (CSP) customer tenant. The auxiliary token will be from the Cloud solution provider (CSP) partner tenant."
  returns:
    description: "object that represents SupportTicketDetails resource."
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.get(String supportTicketName)"
  name: "get(String supportTicketName)"
  nameWithType: "SupportTicketsClient.get(String supportTicketName)"
  summary: "Get ticket details for an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SupportTicketDetailsInner get(String supportTicketName)"
  desc: "Get ticket details for an Azure subscription. Support ticket data is available for 18 months after ticket creation. If a ticket was created more than 18 months ago, a request for data might cause an error."
  returns:
    description: "ticket details for an Azure subscription."
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.getWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.getWithResponse(String supportTicketName, Context context)"
  name: "getWithResponse(String supportTicketName, Context context)"
  nameWithType: "SupportTicketsClient.getWithResponse(String supportTicketName, Context context)"
  summary: "Get ticket details for an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SupportTicketDetailsInner> getWithResponse(String supportTicketName, Context context)"
  desc: "Get ticket details for an Azure subscription. Support ticket data is available for 18 months after ticket creation. If a ticket was created more than 18 months ago, a request for data might cause an error."
  returns:
    description: "ticket details for an Azure subscription."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.list()"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.list()"
  name: "list()"
  nameWithType: "SupportTicketsClient.list()"
  summary: "Lists all the support tickets for an Azure subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<SupportTicketDetailsInner> list()"
  desc: "Lists all the support tickets for an Azure subscription. You can also filter the support tickets by \\_Status\\_ or \\_CreatedDate\\_ using the $filter parameter. Output will be a paged result with \\_nextLink\\_, using which you can retrieve the next set of support tickets. <br/><br/>Support ticket data is available for 18 months after ticket creation. If a ticket was created more than 18 months ago, a request for data might cause an error."
  returns:
    description: "object that represents a collection of SupportTicket resources."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.list(Integer top, String filter, Context context)"
  name: "list(Integer top, String filter, Context context)"
  nameWithType: "SupportTicketsClient.list(Integer top, String filter, Context context)"
  summary: "Lists all the support tickets for an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The number of values to return in the collection. Default is 25 and max is 100."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The filter to apply on the operation. We support 'odata v4.0' filter semantics. [Learn\n     more](https://docs.microsoft.com/odata/concepts/queryoptions-overview). _Status_ filter can only be used with\n     Equals ('eq') operator. For _CreatedDate_ filter, the supported operators are Greater Than ('gt') and Greater\n     Than or Equals ('ge'). When using both filters, combine them using the logical 'AND'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<SupportTicketDetailsInner> list(Integer top, String filter, Context context)"
  desc: "Lists all the support tickets for an Azure subscription. You can also filter the support tickets by \\_Status\\_ or \\_CreatedDate\\_ using the $filter parameter. Output will be a paged result with \\_nextLink\\_, using which you can retrieve the next set of support tickets. <br/><br/>Support ticket data is available for 18 months after ticket creation. If a ticket was created more than 18 months ago, a request for data might cause an error."
  returns:
    description: "object that represents a collection of SupportTicket resources."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.update(java.lang.String,com.azure.resourcemanager.support.models.UpdateSupportTicket)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.update(String supportTicketName, UpdateSupportTicket updateSupportTicket)"
  name: "update(String supportTicketName, UpdateSupportTicket updateSupportTicket)"
  nameWithType: "SupportTicketsClient.update(String supportTicketName, UpdateSupportTicket updateSupportTicket)"
  summary: "This API allows you to update the severity level, ticket status, and your contact information in the support ticket.<br/><br/>Note: The severity levels cannot be changed if a support ticket is actively being worked upon by an Azure support engineer."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "UpdateSupportTicket object."
    name: "updateSupportTicket"
    type: "<xref href=\"com.azure.resourcemanager.support.models.UpdateSupportTicket?alt=com.azure.resourcemanager.support.models.UpdateSupportTicket&text=UpdateSupportTicket\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SupportTicketDetailsInner update(String supportTicketName, UpdateSupportTicket updateSupportTicket)"
  desc: "This API allows you to update the severity level, ticket status, and your contact information in the support ticket.<br/><br/>Note: The severity levels cannot be changed if a support ticket is actively being worked upon by an Azure support engineer. In such a case, contact your support engineer to request severity update by adding a new communication using the Communications API.<br/><br/>Changing the ticket status to \\_closed\\_ is allowed only on an unassigned case. When an engineer is actively working on the ticket, send your ticket closure request by sending a note to your engineer."
  returns:
    description: "object that represents SupportTicketDetails resource."
    type: "<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.updateWithResponse(java.lang.String,com.azure.resourcemanager.support.models.UpdateSupportTicket,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.support.fluent.SupportTicketsClient.updateWithResponse(String supportTicketName, UpdateSupportTicket updateSupportTicket, Context context)"
  name: "updateWithResponse(String supportTicketName, UpdateSupportTicket updateSupportTicket, Context context)"
  nameWithType: "SupportTicketsClient.updateWithResponse(String supportTicketName, UpdateSupportTicket updateSupportTicket, Context context)"
  summary: "This API allows you to update the severity level, ticket status, and your contact information in the support ticket.<br/><br/>Note: The severity levels cannot be changed if a support ticket is actively being worked upon by an Azure support engineer."
  modifiers:
  - "abstract"
  parameters:
  - description: "Support ticket name."
    name: "supportTicketName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "UpdateSupportTicket object."
    name: "updateSupportTicket"
    type: "<xref href=\"com.azure.resourcemanager.support.models.UpdateSupportTicket?alt=com.azure.resourcemanager.support.models.UpdateSupportTicket&text=UpdateSupportTicket\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SupportTicketDetailsInner> updateWithResponse(String supportTicketName, UpdateSupportTicket updateSupportTicket, Context context)"
  desc: "This API allows you to update the severity level, ticket status, and your contact information in the support ticket.<br/><br/>Note: The severity levels cannot be changed if a support ticket is actively being worked upon by an Azure support engineer. In such a case, contact your support engineer to request severity update by adding a new communication using the Communications API.<br/><br/>Changing the ticket status to \\_closed\\_ is allowed only on an unassigned case. When an engineer is actively working on the ticket, send your ticket closure request by sending a note to your engineer."
  returns:
    description: "object that represents SupportTicketDetails resource."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner?alt=com.azure.resourcemanager.support.fluent.models.SupportTicketDetailsInner&text=SupportTicketDetailsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in SupportTicketsClient."
metadata: {}
package: "com.azure.resourcemanager.support.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-support:1.0.0-beta.1
