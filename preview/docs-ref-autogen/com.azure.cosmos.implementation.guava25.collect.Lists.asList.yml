### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Lists.asList*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>asList"
name: "<E>asList"
nameWithType: "Lists.<E>asList"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>asList(E,E,E[])"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>asList(E first, E second, E[] rest)"
  name: "<E>asList(E first, E second, E[] rest)"
  nameWithType: "Lists.<E>asList(E first, E second, E[] rest)"
  summary: "Returns an unmodifiable list containing the specified first and second element, and backed by the specified array of additional elements. Changes to the `rest` array will be reflected in the returned list. Unlike <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Arrays#asList\"></xref>, the returned list is unmodifiable.\n\nThis is useful when a varargs method needs to use a signature such as `(Foo firstFoo, Foo secondFoo, Foo... moreFoos)`, in order to avoid overload ambiguity or to enforce a minimum argument count.\n\nThe returned list is serializable and implements <xref uid=\"java.util.RandomAccess\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RandomAccess\"></xref>."
  parameters:
  - description: "the first element"
    name: "first"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - description: "the second element"
    name: "second"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - description: "an array of additional elements, possibly empty"
    name: "rest"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static List<E> <E>asList(E first, E second, E[] rest)"
  returns:
    description: "an unmodifiable list containing the specified elements"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>asList(E,E[])"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>asList(E first, E[] rest)"
  name: "<E>asList(E first, E[] rest)"
  nameWithType: "Lists.<E>asList(E first, E[] rest)"
  summary: "Returns an unmodifiable list containing the specified first element and backed by the specified array of additional elements. Changes to the `rest` array will be reflected in the returned list. Unlike <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Arrays#asList\"></xref>, the returned list is unmodifiable.\n\nThis is useful when a varargs method needs to use a signature such as `(Foo firstFoo, Foo... moreFoos)`, in order to avoid overload ambiguity or to enforce a minimum argument count.\n\nThe returned list is serializable and implements <xref uid=\"java.util.RandomAccess\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RandomAccess\"></xref>."
  parameters:
  - description: "the first element"
    name: "first"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
  - description: "an array of additional elements, possibly empty"
    name: "rest"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static List<E> <E>asList(E first, E[] rest)"
  returns:
    description: "an unmodifiable list containing the specified elements"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
