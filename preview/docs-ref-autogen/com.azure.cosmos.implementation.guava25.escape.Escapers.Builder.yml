### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder"
fullName: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder"
name: "Escapers.Builder"
nameWithType: "Escapers.Builder"
summary: "A builder for simple, fast escapers.\n\nTypically an escaper needs to deal with the escaping of high valued characters or code points. In these cases it is necessary to extend either <xref uid=\"com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ArrayBasedCharEscaper\"></xref> or <xref uid=\"com.azure.cosmos.implementation.guava25.escape.ArrayBasedUnicodeEscaper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ArrayBasedUnicodeEscaper\"></xref> to provide the desired behavior. However this builder is suitable for creating escapers that replace a relative small set of characters."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static final class Escapers.Builder"
methods:
- "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.addEscape(char,java.lang.String)"
- "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.build()"
- "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange(char,char)"
- "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
