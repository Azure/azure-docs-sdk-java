### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
  id: Builder
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape
  children:
  - com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.addEscape(char,java.lang.String)
  - com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.build()
  - com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange(char,char)
  - com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement(java.lang.String)
  langs:
  - java
  name: Escapers.Builder
  nameWithType: Escapers.Builder
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
  type: Class
  package: com.azure.cosmos.implementation.guava25.escape
  summary: >-
    A builder for simple, fast escapers.


    Typically an escaper needs to deal with the escaping of high valued characters or code points. In these cases it is necessary to extend either <xref uid="com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper" data-throw-if-not-resolved="false">ArrayBasedCharEscaper</xref> or <xref uid="com.azure.cosmos.implementation.guava25.escape.ArrayBasedUnicodeEscaper" data-throw-if-not-resolved="false">ArrayBasedUnicodeEscaper</xref> to provide the desired behavior. However this builder is suitable for creating escapers that replace a relative small set of characters.
  syntax:
    content: public static final class Escapers.Builder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.Builder()
  id: Builder()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
  langs:
  - java
  name: Builder()
  nameWithType: Escapers.Builder.Builder()
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.Builder()
  overload: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.Builder*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.escape
  syntax:
    content: private Builder()
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.addEscape(char,java.lang.String)
  id: addEscape(char,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
  langs:
  - java
  name: addEscape(char c, String replacement)
  nameWithType: Escapers.Builder.addEscape(char c, String replacement)
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.addEscape(char c, String replacement)
  overload: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.addEscape*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Adds a replacement string for the given input character. The specified character will be replaced by the given string whenever it occurs in the input, irrespective of whether it lies inside or outside the 'safe' range.
  syntax:
    content: public Escapers.Builder addEscape(char c, String replacement)
    parameters:
    - id: c
      type: char
      description: the character to be replaced
    - id: replacement
      type: java.lang.String
      description: the string to replace the given character
    return:
      type: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
      description: the builder instance
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.build()
  id: build()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
  langs:
  - java
  name: build()
  nameWithType: Escapers.Builder.build()
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.build()
  overload: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.build*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Returns a new escaper based on the current state of the builder.
  syntax:
    content: public Escaper build()
    return:
      type: com.azure.cosmos.implementation.guava25.escape.Escaper
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange(char,char)
  id: setSafeRange(char,char)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
  langs:
  - java
  name: setSafeRange(char safeMin, char safeMax)
  nameWithType: Escapers.Builder.setSafeRange(char safeMin, char safeMax)
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange(char safeMin, char safeMax)
  overload: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Sets the safe range of characters for the escaper. Characters in this range that have no explicit replacement are considered 'safe' and remain unescaped in the output. If `safeMax < safeMin` then the safe range is empty.
  syntax:
    content: public Escapers.Builder setSafeRange(char safeMin, char safeMax)
    parameters:
    - id: safeMin
      type: char
      description: the lowest 'safe' character
    - id: safeMax
      type: char
      description: the highest 'safe' character
    return:
      type: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
      description: the builder instance
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement(java.lang.String)
  id: setUnsafeReplacement(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
  langs:
  - java
  name: setUnsafeReplacement(String unsafeReplacement)
  nameWithType: Escapers.Builder.setUnsafeReplacement(String unsafeReplacement)
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement(String unsafeReplacement)
  overload: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement*
  type: Method
  package: com.azure.cosmos.implementation.guava25.escape
  summary: Sets the replacement string for any characters outside the 'safe' range that have no explicit replacement. If `unsafeReplacement` is `null` then no replacement will occur, if it is `""` then the unsafe characters are removed from the output.
  syntax:
    content: public Escapers.Builder setUnsafeReplacement(String unsafeReplacement)
    parameters:
    - id: unsafeReplacement
      type: java.lang.String
      description: the string to replace unsafe characters
    return:
      type: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder
      description: the builder instance
references:
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.Builder*
  name: Builder
  nameWithType: Escapers.Builder.Builder
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.Builder
  package: com.azure.cosmos.implementation.guava25.escape
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange*
  name: setSafeRange
  nameWithType: Escapers.Builder.setSafeRange
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange
  package: com.azure.cosmos.implementation.guava25.escape
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement*
  name: setUnsafeReplacement
  nameWithType: Escapers.Builder.setUnsafeReplacement
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setUnsafeReplacement
  package: com.azure.cosmos.implementation.guava25.escape
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.addEscape*
  name: addEscape
  nameWithType: Escapers.Builder.addEscape
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.addEscape
  package: com.azure.cosmos.implementation.guava25.escape
- uid: com.azure.cosmos.implementation.guava25.escape.Escaper
  name: Escaper
  nameWithType: Escaper
  fullName: com.azure.cosmos.implementation.guava25.escape.Escaper
- uid: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.build*
  name: build
  nameWithType: Escapers.Builder.build
  fullName: com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.build
  package: com.azure.cosmos.implementation.guava25.escape
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
