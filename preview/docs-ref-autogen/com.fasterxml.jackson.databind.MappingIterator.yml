### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.MappingIterator
  id: MappingIterator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.MappingIterator.<C>readAll(C)
  - com.fasterxml.jackson.databind.MappingIterator.<L>readAll(L)
  - com.fasterxml.jackson.databind.MappingIterator.<R>_handleIOException(java.io.IOException)
  - com.fasterxml.jackson.databind.MappingIterator.<R>_handleMappingException(com.fasterxml.jackson.databind.JsonMappingException)
  - com.fasterxml.jackson.databind.MappingIterator.<R>_throwNoSuchElement()
  - com.fasterxml.jackson.databind.MappingIterator.<T>emptyIterator()
  - com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR
  - com.fasterxml.jackson.databind.MappingIterator.MappingIterator(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer<?>,boolean,java.lang.Object)
  - com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED
  - com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE
  - com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE
  - com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC
  - com.fasterxml.jackson.databind.MappingIterator._closeParser
  - com.fasterxml.jackson.databind.MappingIterator._context
  - com.fasterxml.jackson.databind.MappingIterator._deserializer
  - com.fasterxml.jackson.databind.MappingIterator._parser
  - com.fasterxml.jackson.databind.MappingIterator._resync()
  - com.fasterxml.jackson.databind.MappingIterator._seqContext
  - com.fasterxml.jackson.databind.MappingIterator._state
  - com.fasterxml.jackson.databind.MappingIterator._type
  - com.fasterxml.jackson.databind.MappingIterator._updatedValue
  - com.fasterxml.jackson.databind.MappingIterator.close()
  - com.fasterxml.jackson.databind.MappingIterator.getCurrentLocation()
  - com.fasterxml.jackson.databind.MappingIterator.getParser()
  - com.fasterxml.jackson.databind.MappingIterator.getParserSchema()
  - com.fasterxml.jackson.databind.MappingIterator.hasNext()
  - com.fasterxml.jackson.databind.MappingIterator.hasNextValue()
  - com.fasterxml.jackson.databind.MappingIterator.next()
  - com.fasterxml.jackson.databind.MappingIterator.nextValue()
  - com.fasterxml.jackson.databind.MappingIterator.readAll()
  - com.fasterxml.jackson.databind.MappingIterator.remove()
  langs:
  - java
  name: MappingIterator<T>
  nameWithType: MappingIterator<T>
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>
  type: Class
  package: com.fasterxml.jackson.databind
  summary: Iterator exposed by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> when binding sequence of objects. Extension is done to allow more convenient exposing of <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref> (which basic <xref uid="java.util.Iterator" data-throw-if-not-resolved="false">Iterator</xref> does not expose)
  syntax:
    content: public class MappingIterator<T> implements Iterator<T>, Closeable
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - java.util.Iterator<T>
  - java.io.Closeable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.MappingIterator.<C>readAll(C)
  id: <C>readAll(C)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: <C>readAll(C results)
  nameWithType: MappingIterator<T>.<C>readAll(C results)
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<C>readAll(C results)
  overload: com.fasterxml.jackson.databind.MappingIterator.readAll*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method for reading all entries accessible via this iterator
  syntax:
    content: public C <C>readAll(C results)
    parameters:
    - id: results
      type: C
    return:
      type: C
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator.<L>readAll(L)
  id: <L>readAll(L)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: <L>readAll(L resultList)
  nameWithType: MappingIterator<T>.<L>readAll(L resultList)
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<L>readAll(L resultList)
  overload: com.fasterxml.jackson.databind.MappingIterator.readAll*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method for reading all entries accessible via this iterator
  syntax:
    content: public L <L>readAll(L resultList)
    parameters:
    - id: resultList
      type: L
    return:
      type: L
      description: List of entries read (same as passed-in argument)
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator.<R>_handleIOException(java.io.IOException)
  id: <R>_handleIOException(java.io.IOException)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: <R>_handleIOException(IOException e)
  nameWithType: MappingIterator<T>.<R>_handleIOException(IOException e)
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<R>_handleIOException(IOException e)
  overload: com.fasterxml.jackson.databind.MappingIterator._handleIOException*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected R <R>_handleIOException(IOException e)
    parameters:
    - id: e
      type: java.io.IOException
    return:
      type: R
- uid: com.fasterxml.jackson.databind.MappingIterator.<R>_handleMappingException(com.fasterxml.jackson.databind.JsonMappingException)
  id: <R>_handleMappingException(com.fasterxml.jackson.databind.JsonMappingException)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: <R>_handleMappingException(JsonMappingException e)
  nameWithType: MappingIterator<T>.<R>_handleMappingException(JsonMappingException e)
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<R>_handleMappingException(JsonMappingException e)
  overload: com.fasterxml.jackson.databind.MappingIterator._handleMappingException*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected R <R>_handleMappingException(JsonMappingException e)
    parameters:
    - id: e
      type: com.fasterxml.jackson.databind.JsonMappingException
    return:
      type: R
- uid: com.fasterxml.jackson.databind.MappingIterator.<R>_throwNoSuchElement()
  id: <R>_throwNoSuchElement()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: <R>_throwNoSuchElement()
  nameWithType: MappingIterator<T>.<R>_throwNoSuchElement()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<R>_throwNoSuchElement()
  overload: com.fasterxml.jackson.databind.MappingIterator._throwNoSuchElement*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected R <R>_throwNoSuchElement()
    return:
      type: R
- uid: com.fasterxml.jackson.databind.MappingIterator.<T>emptyIterator()
  id: <T>emptyIterator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: <T>emptyIterator()
  nameWithType: MappingIterator<T>.<T>emptyIterator()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<T>emptyIterator()
  overload: com.fasterxml.jackson.databind.MappingIterator.emptyIterator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Method for getting an "empty" iterator instance: one that never has more values; may be freely shared.'
  syntax:
    content: public static MappingIterator<T> <T>emptyIterator()
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<T>
- uid: com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR
  id: EMPTY_ITERATOR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: EMPTY_ITERATOR
  nameWithType: MappingIterator<T>.EMPTY_ITERATOR
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.EMPTY_ITERATOR
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected static final MappingIterator<?> EMPTY_ITERATOR
    return:
      type: com.fasterxml.jackson.databind.MappingIterator<?>
- uid: com.fasterxml.jackson.databind.MappingIterator.MappingIterator(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer<?>,boolean,java.lang.Object)
  id: MappingIterator(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer<?>,boolean,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean managedParser, Object valueToUpdate)
  nameWithType: MappingIterator<T>.MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean managedParser, Object valueToUpdate)
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean managedParser, Object valueToUpdate)
  overload: com.fasterxml.jackson.databind.MappingIterator.MappingIterator*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt, JsonDeserializer<?> deser, boolean managedParser, Object valueToUpdate)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: deser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    - id: managedParser
      type: boolean
      description: >-
        Whether we "own" the <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> passed or not:
           if true, it was created by <xref uid="com.fasterxml.jackson.databind.ObjectReader" data-throw-if-not-resolved="false">ObjectReader</xref> and code here needs to
           close it; if false, it was passed by calling code and should not be
           closed by iterator.
    - id: valueToUpdate
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED
  id: STATE_CLOSED
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: STATE_CLOSED
  nameWithType: MappingIterator<T>.STATE_CLOSED
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.STATE_CLOSED
  type: Field
  package: com.fasterxml.jackson.databind
  summary: State in which iterator is closed
  syntax:
    content: protected static final int STATE_CLOSED
    return:
      type: int
- uid: com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE
  id: STATE_HAS_VALUE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: STATE_HAS_VALUE
  nameWithType: MappingIterator<T>.STATE_HAS_VALUE
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.STATE_HAS_VALUE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: State in which "hasNextValue()" has been succesfully called and deserializer can be called to fetch value
  syntax:
    content: protected static final int STATE_HAS_VALUE
    return:
      type: int
- uid: com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE
  id: STATE_MAY_HAVE_VALUE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: STATE_MAY_HAVE_VALUE
  nameWithType: MappingIterator<T>.STATE_MAY_HAVE_VALUE
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.STATE_MAY_HAVE_VALUE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: State in which no recovery is needed, but "hasNextValue()" needs to be called first
  syntax:
    content: protected static final int STATE_MAY_HAVE_VALUE
    return:
      type: int
- uid: com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC
  id: STATE_NEED_RESYNC
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: STATE_NEED_RESYNC
  nameWithType: MappingIterator<T>.STATE_NEED_RESYNC
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.STATE_NEED_RESYNC
  type: Field
  package: com.fasterxml.jackson.databind
  summary: State in which value read failed
  syntax:
    content: protected static final int STATE_NEED_RESYNC
    return:
      type: int
- uid: com.fasterxml.jackson.databind.MappingIterator._closeParser
  id: _closeParser
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _closeParser
  nameWithType: MappingIterator<T>._closeParser
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._closeParser
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Flag that indicates whether input <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> should be closed when we are done or not; generally only called when caller did not pass JsonParser.
  syntax:
    content: protected final boolean _closeParser
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.MappingIterator._context
  id: _context
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _context
  nameWithType: MappingIterator<T>._context
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._context
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Context for deserialization, needed to pass through to deserializer
  syntax:
    content: protected final DeserializationContext _context
    return:
      type: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.MappingIterator._deserializer
  id: _deserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _deserializer
  nameWithType: MappingIterator<T>._deserializer
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._deserializer
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Deserializer for individual element values.
  syntax:
    content: protected final JsonDeserializer<T> _deserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<T>
- uid: com.fasterxml.jackson.databind.MappingIterator._parser
  id: _parser
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _parser
  nameWithType: MappingIterator<T>._parser
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._parser
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Underlying parser used for reading content to bind. Initialized as not `null` but set as `null` when iterator is closed, to denote closing.
  syntax:
    content: protected final JsonParser _parser
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.MappingIterator._resync()
  id: _resync()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _resync()
  nameWithType: MappingIterator<T>._resync()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._resync()
  overload: com.fasterxml.jackson.databind.MappingIterator._resync*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected void _resync()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator._seqContext
  id: _seqContext
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _seqContext
  nameWithType: MappingIterator<T>._seqContext
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._seqContext
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Context to resynchronize to, in case an exception is encountered but caller wants to try to read more elements.
  syntax:
    content: protected final JsonStreamContext _seqContext
    return:
      type: com.fasterxml.jackson.core.JsonStreamContext
- uid: com.fasterxml.jackson.databind.MappingIterator._state
  id: _state
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _state
  nameWithType: MappingIterator<T>._state
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._state
  type: Field
  package: com.fasterxml.jackson.databind
  summary: State of the iterator
  syntax:
    content: protected int _state
    return:
      type: int
- uid: com.fasterxml.jackson.databind.MappingIterator._type
  id: _type
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _type
  nameWithType: MappingIterator<T>._type
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._type
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Type to bind individual elements to.
  syntax:
    content: protected final JavaType _type
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.MappingIterator._updatedValue
  id: _updatedValue
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: _updatedValue
  nameWithType: MappingIterator<T>._updatedValue
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._updatedValue
  type: Field
  package: com.fasterxml.jackson.databind
  summary: If not null, "value to update" instead of creating a new instance for each call.
  syntax:
    content: protected final T _updatedValue
    return:
      type: T
- uid: com.fasterxml.jackson.databind.MappingIterator.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: close()
  nameWithType: MappingIterator<T>.close()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.close()
  overload: com.fasterxml.jackson.databind.MappingIterator.close*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator.getCurrentLocation()
  id: getCurrentLocation()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: getCurrentLocation()
  nameWithType: MappingIterator<T>.getCurrentLocation()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.getCurrentLocation()
  overload: com.fasterxml.jackson.databind.MappingIterator.getCurrentLocation*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Convenience method, functionally equivalent to: `iterator.getParser().getCurrentLocation()`'
  syntax:
    content: public JsonLocation getCurrentLocation()
    return:
      type: com.fasterxml.jackson.core.JsonLocation
      description: Location of the input stream of the underlying parser
- uid: com.fasterxml.jackson.databind.MappingIterator.getParser()
  id: getParser()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: getParser()
  nameWithType: MappingIterator<T>.getParser()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.getParser()
  overload: com.fasterxml.jackson.databind.MappingIterator.getParser*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for getting underlying parser this iterator uses.
  syntax:
    content: public JsonParser getParser()
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.MappingIterator.getParserSchema()
  id: getParserSchema()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: getParserSchema()
  nameWithType: MappingIterator<T>.getParserSchema()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.getParserSchema()
  overload: com.fasterxml.jackson.databind.MappingIterator.getParserSchema*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Accessor for accessing <xref uid="com.fasterxml.jackson.core.FormatSchema" data-throw-if-not-resolved="false">FormatSchema</xref> that the underlying parser (as per <xref uid="com.fasterxml.jackson.databind.MappingIterator.getParser" data-throw-if-not-resolved="false">#getParser</xref>) is using, if any; only parser of schema-aware formats use schemas.
  syntax:
    content: public FormatSchema getParserSchema()
    return:
      type: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.MappingIterator.hasNext()
  id: hasNext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: hasNext()
  nameWithType: MappingIterator<T>.hasNext()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.hasNext()
  overload: com.fasterxml.jackson.databind.MappingIterator.hasNext*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean hasNext()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.MappingIterator.hasNextValue()
  id: hasNextValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: hasNextValue()
  nameWithType: MappingIterator<T>.hasNextValue()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.hasNextValue()
  overload: com.fasterxml.jackson.databind.MappingIterator.hasNextValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Equivalent of <xref uid="com.fasterxml.jackson.databind.MappingIterator.next" data-throw-if-not-resolved="false">#next</xref> but one that may throw checked exceptions from Jackson due to invalid input.
  syntax:
    content: public boolean hasNextValue()
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator.next()
  id: next()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: next()
  nameWithType: MappingIterator<T>.next()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.next()
  overload: com.fasterxml.jackson.databind.MappingIterator.next*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public T next()
    return:
      type: T
- uid: com.fasterxml.jackson.databind.MappingIterator.nextValue()
  id: nextValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: nextValue()
  nameWithType: MappingIterator<T>.nextValue()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.nextValue()
  overload: com.fasterxml.jackson.databind.MappingIterator.nextValue*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public T nextValue()
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator.readAll()
  id: readAll()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: readAll()
  nameWithType: MappingIterator<T>.readAll()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.readAll()
  overload: com.fasterxml.jackson.databind.MappingIterator.readAll*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Convenience method for reading all entries accessible via this iterator; resulting container will be a <xref uid="java.util.ArrayList" data-throw-if-not-resolved="false">java.util.ArrayList</xref>.
  syntax:
    content: public List<T> readAll()
    return:
      type: java.util.List<T>
      description: List of entries read
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator.remove()
  id: remove()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.MappingIterator
  langs:
  - java
  name: remove()
  nameWithType: MappingIterator<T>.remove()
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.remove()
  overload: com.fasterxml.jackson.databind.MappingIterator.remove*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void remove()
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.MappingIterator.MappingIterator*
  name: MappingIterator
  nameWithType: MappingIterator<T>.MappingIterator
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.MappingIterator
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator<T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.MappingIterator
    name: MappingIterator
    fullName: com.fasterxml.jackson.databind.MappingIterator
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.MappingIterator.emptyIterator*
  name: <T>emptyIterator
  nameWithType: MappingIterator<T>.<T>emptyIterator
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<T>emptyIterator
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator.hasNext*
  name: hasNext
  nameWithType: MappingIterator<T>.hasNext
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.hasNext
  package: com.fasterxml.jackson.databind
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.MappingIterator.next*
  name: next
  nameWithType: MappingIterator<T>.next
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.next
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator.remove*
  name: remove
  nameWithType: MappingIterator<T>.remove
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.remove
  package: com.fasterxml.jackson.databind
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.databind.MappingIterator.close*
  name: close
  nameWithType: MappingIterator<T>.close
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.close
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator.hasNextValue*
  name: hasNextValue
  nameWithType: MappingIterator<T>.hasNextValue
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.hasNextValue
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator.nextValue*
  name: nextValue
  nameWithType: MappingIterator<T>.nextValue
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.nextValue
  package: com.fasterxml.jackson.databind
- uid: java.util.List<T>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.MappingIterator.readAll*
  name: readAll
  nameWithType: MappingIterator<T>.readAll
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.readAll
  package: com.fasterxml.jackson.databind
- uid: L
  spec.java:
  - uid: L
    name: L
    fullName: L
- uid: C
  spec.java:
  - uid: C
    name: C
    fullName: C
- uid: com.fasterxml.jackson.databind.MappingIterator.getParser*
  name: getParser
  nameWithType: MappingIterator<T>.getParser
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.getParser
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.FormatSchema
  name: FormatSchema
  nameWithType: FormatSchema
  fullName: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.MappingIterator.getParserSchema*
  name: getParserSchema
  nameWithType: MappingIterator<T>.getParserSchema
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.getParserSchema
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonLocation
  name: JsonLocation
  nameWithType: JsonLocation
  fullName: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.databind.MappingIterator.getCurrentLocation*
  name: getCurrentLocation
  nameWithType: MappingIterator<T>.getCurrentLocation
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.getCurrentLocation
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator._resync*
  name: _resync
  nameWithType: MappingIterator<T>._resync
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>._resync
  package: com.fasterxml.jackson.databind
- uid: R
  spec.java:
  - uid: R
    name: R
    fullName: R
- uid: com.fasterxml.jackson.databind.MappingIterator._throwNoSuchElement*
  name: <R>_throwNoSuchElement
  nameWithType: MappingIterator<T>.<R>_throwNoSuchElement
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<R>_throwNoSuchElement
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.MappingIterator._handleMappingException*
  name: <R>_handleMappingException
  nameWithType: MappingIterator<T>.<R>_handleMappingException
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<R>_handleMappingException
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator._handleIOException*
  name: <R>_handleIOException
  nameWithType: MappingIterator<T>.<R>_handleIOException
  fullName: com.fasterxml.jackson.databind.MappingIterator<T>.<R>_handleIOException
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MappingIterator<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.MappingIterator
    name: MappingIterator
    fullName: com.fasterxml.jackson.databind.MappingIterator
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.JsonDeserializer<T>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.JsonStreamContext
  name: JsonStreamContext
  nameWithType: JsonStreamContext
  fullName: com.fasterxml.jackson.core.JsonStreamContext
- uid: java.io.Closeable
  name: Closeable
  nameWithType: Closeable
  fullName: java.io.Closeable
- uid: java.util.Iterator<T>
  name: Iterator<T>
  nameWithType: Iterator<T>
  fullName: java.util.Iterator<T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
