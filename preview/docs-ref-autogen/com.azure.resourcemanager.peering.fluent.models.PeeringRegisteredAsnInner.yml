### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner"
fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner"
name: "PeeringRegisteredAsnInner"
nameWithType: "PeeringRegisteredAsnInner"
summary: "The customer's ASN that is registered by the peering service provider."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PeeringRegisteredAsnInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.PeeringRegisteredAsnInner()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.PeeringRegisteredAsnInner()"
  name: "PeeringRegisteredAsnInner()"
  nameWithType: "PeeringRegisteredAsnInner.PeeringRegisteredAsnInner()"
  syntax: "public PeeringRegisteredAsnInner()"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.asn()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.asn()"
  name: "asn()"
  nameWithType: "PeeringRegisteredAsnInner.asn()"
  summary: "Get the asn property: The customer's ASN from which traffic originates."
  syntax: "public Integer asn()"
  desc: "Get the asn property: The customer's ASN from which traffic originates."
  returns:
    description: "the asn value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.peeringServicePrefixKey()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.peeringServicePrefixKey()"
  name: "peeringServicePrefixKey()"
  nameWithType: "PeeringRegisteredAsnInner.peeringServicePrefixKey()"
  summary: "Get the peering<wbr>Service<wbr>Prefix<wbr>Key property: The peering service prefix key that is to be shared with the customer."
  syntax: "public String peeringServicePrefixKey()"
  desc: "Get the peeringServicePrefixKey property: The peering service prefix key that is to be shared with the customer."
  returns:
    description: "the peeringServicePrefixKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.provisioningState()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PeeringRegisteredAsnInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ProvisioningState?alt=com.azure.resourcemanager.peering.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.validate()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.validate()"
  name: "validate()"
  nameWithType: "PeeringRegisteredAsnInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.withAsn(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner.withAsn(Integer asn)"
  name: "withAsn(Integer asn)"
  nameWithType: "PeeringRegisteredAsnInner.withAsn(Integer asn)"
  summary: "Set the asn property: The customer's ASN from which traffic originates."
  parameters:
  - description: "the asn value to set."
    name: "asn"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringRegisteredAsnInner withAsn(Integer asn)"
  desc: "Set the asn property: The customer's ASN from which traffic originates."
  returns:
    description: "the PeeringRegisteredAsnInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringRegisteredAsnInner&text=PeeringRegisteredAsnInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The customer's ASN that is registered by the peering service provider."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
