### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType*"
fullName: "com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType"
name: "constructSpecializedType"
nameWithType: "DatabindContext.constructSpecializedType"
members:
- uid: "com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.DatabindContext.constructSpecializedType(JavaType baseType, Class<?> subclass)"
  name: "constructSpecializedType(JavaType baseType, Class<?> subclass)"
  nameWithType: "DatabindContext.constructSpecializedType(JavaType baseType, Class<?> subclass)"
  summary: "Convenience method for constructing subtypes, retaining generic type parameter (if any).\n\nNote: since 2.11 handling has varied a bit across serialization, deserialization."
  parameters:
  - name: "baseType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "subclass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public abstract JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
