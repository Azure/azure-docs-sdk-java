### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Multiset.remove*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multiset<E>.remove"
name: "remove"
nameWithType: "Multiset<E>.remove"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Multiset.remove(java.lang.Object)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multiset<E>.remove(Object element)"
  name: "remove(Object element)"
  nameWithType: "Multiset<E>.remove(Object element)"
  summary: "Removes a *single* occurrence of the specified element from this multiset, if present.\n\nThis method refines <xref uid=\"java.util.Collection.remove\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection#remove\"></xref> to further specify that it **may not** throw an exception in response to `element` being null or of the wrong type.\n\nTo both remove the element and obtain the previous count of that element, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multiset.remove(java.lang.Object,int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"remove\"></xref>`(element, 1)` instead."
  parameters:
  - description: "the element to remove one occurrence of"
    name: "element"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean remove(Object element)"
  returns:
    description: "<code>true</code> if an occurrence was found and removed"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.Multiset.remove(java.lang.Object,int)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multiset<E>.remove(Object element, int occurrences)"
  name: "remove(Object element, int occurrences)"
  nameWithType: "Multiset<E>.remove(Object element, int occurrences)"
  summary: "Removes a number of occurrences of the specified element from this multiset. If the multiset contains fewer than this number of occurrences to begin with, all occurrences will be removed. Note that if `occurrences == 1`, this is functionally equivalent to the call `remove(element)`."
  parameters:
  - description: "the element to conditionally remove occurrences of"
    name: "element"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "the number of occurrences of the element to remove. May be zero, in which\n     case no change will be made."
    name: "occurrences"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract int remove(Object element, int occurrences)"
  returns:
    description: "the count of the element before the operation; possibly zero"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
