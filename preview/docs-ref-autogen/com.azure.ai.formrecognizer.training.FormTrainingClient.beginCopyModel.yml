### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginCopyModel*"
fullName: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginCopyModel"
name: "beginCopyModel"
nameWithType: "FormTrainingClient.beginCopyModel"
members:
- uid: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization)"
  fullName: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginCopyModel(String modelId, CopyAuthorization target)"
  name: "beginCopyModel(String modelId, CopyAuthorization target)"
  nameWithType: "FormTrainingClient.beginCopyModel(String modelId, CopyAuthorization target)"
  summary: "Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n\nThis should be called with the source Form Recognizer resource (with the model that is intended to be copied). The target parameter should be supplied from the target resource's output from <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FormTrainingAsyncClient#getCopyAuthorization(String, String)\"></xref> method.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString resourceId = \"target-resource-Id\";\n String resourceRegion = \"target-resource-region\";\n String copyModelId = \"copy-model-Id\";\n formTrainingAsyncClient.getCopyAuthorization(resourceId, resourceRegion)\n     .flatMapMany(copyAuthorization -> formTrainingAsyncClient.beginCopyModel(copyModelId, copyAuthorization))\n     .flatMap(AsyncPollResponse::getFinalResult)\n     .subscribe(customFormModelInfo ->\n         System.out.printf(\"Copied model has model Id: %s, model status: %s, training started on: %s,\"\n             + \" training completed on: %s.%n\",\n         customFormModelInfo.getModelId(),\n         customFormModelInfo.getStatus(),\n         customFormModelInfo.getTrainingStartedOn(),\n         customFormModelInfo.getTrainingCompletedOn()));\n```"
  parameters:
  - description: "Model identifier of the model to copy to the target Form Recognizer resource"
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the copy authorization to the target Form Recognizer resource. The copy authorization can be\n generated from the target resource's call to <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingClient.getCopyAuthorization(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FormTrainingClient#getCopyAuthorization(String, String)\"></xref>"
    name: "target"
    type: "<xref href=\"com.azure.ai.formrecognizer.training.models.CopyAuthorization?alt=com.azure.ai.formrecognizer.training.models.CopyAuthorization&text=CopyAuthorization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,CustomFormModelInfo> beginCopyModel(String modelId, CopyAuthorization target)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the copy model operation until it has completed, has failed,\n or has been cancelled."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.training.models.CustomFormModelInfo?alt=com.azure.ai.formrecognizer.training.models.CustomFormModelInfo&text=CustomFormModelInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.training.FormTrainingClient.beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval, Context context)"
  name: "beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval, Context context)"
  nameWithType: "FormTrainingClient.beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval, Context context)"
  summary: "Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n\nThis should be called with the source Form Recognizer resource (with the model that is intended to be copied). The target parameter should be supplied from the target resource's output from <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingClient.getCopyAuthorization(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FormTrainingClient#getCopyAuthorization(String, String)\"></xref> method.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\n// The resource to copy model to\n String resourceId = \"target-resource-Id\";\n String resourceRegion = \"target-resource-region\";\n // The Id of the model to be copied\n String copyModelId = \"copy-model-Id\";\n \n CopyAuthorization copyAuthorization = targetFormTrainingClient.getCopyAuthorization(resourceId,\n     resourceRegion);\n formTrainingClient.beginCopyModel(copyModelId, copyAuthorization, Duration.ofSeconds(5), Context.NONE)\n     .waitForCompletion();\n CustomFormModel modelCopy = targetFormTrainingClient.getCustomModel(copyAuthorization.getModelId());\n System.out.printf(\"Copied model has model Id: %s, model status: %s, was requested on: %s,\"\n         + \" transfer completed on: %s.%n\",\n     modelCopy.getModelId(),\n     modelCopy.getModelStatus(),\n     modelCopy.getTrainingStartedOn(),\n     modelCopy.getTrainingCompletedOn());\n```"
  parameters:
  - description: "Model identifier of the model to copy to the target Form Recognizer resource"
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the copy authorization to the target Form Recognizer resource. The copy authorization can be\n generated from the target resource's call to <xref uid=\"com.azure.ai.formrecognizer.training.FormTrainingClient.getCopyAuthorization(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FormTrainingClient#getCopyAuthorization(String, String)\"></xref>"
    name: "target"
    type: "<xref href=\"com.azure.ai.formrecognizer.training.models.CopyAuthorization?alt=com.azure.ai.formrecognizer.training.models.CopyAuthorization&text=CopyAuthorization\" data-throw-if-not-resolved=\"False\" />"
  - description: "Duration between each poll for the operation status. If none is specified, a default of\n 5 seconds is used."
    name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,CustomFormModelInfo> beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the copy model operation until it has completed, has failed,\n or has been cancelled."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.training.models.CustomFormModelInfo?alt=com.azure.ai.formrecognizer.training.models.CustomFormModelInfo&text=CustomFormModelInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer.training"
artifact: com.azure:azure-ai-formrecognizer:3.1.0-beta.1
