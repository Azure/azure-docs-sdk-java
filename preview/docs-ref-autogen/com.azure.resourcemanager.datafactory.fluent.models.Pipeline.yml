### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline"
name: "Pipeline"
nameWithType: "Pipeline"
summary: "A data factory pipeline."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Pipeline"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.Pipeline()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.Pipeline()"
  name: "Pipeline()"
  nameWithType: "Pipeline.Pipeline()"
  syntax: "public Pipeline()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.activities()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.activities()"
  name: "activities()"
  nameWithType: "Pipeline.activities()"
  summary: "Get the activities property: List of activities in pipeline."
  syntax: "public List<Activity> activities()"
  desc: "Get the activities property: List of activities in pipeline."
  returns:
    description: "the activities value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.annotations()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.annotations()"
  name: "annotations()"
  nameWithType: "Pipeline.annotations()"
  summary: "Get the annotations property: List of tags that can be used for describing the Pipeline."
  syntax: "public List<Object> annotations()"
  desc: "Get the annotations property: List of tags that can be used for describing the Pipeline."
  returns:
    description: "the annotations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.concurrency()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.concurrency()"
  name: "concurrency()"
  nameWithType: "Pipeline.concurrency()"
  summary: "Get the concurrency property: The max number of concurrent runs for the pipeline."
  syntax: "public Integer concurrency()"
  desc: "Get the concurrency property: The max number of concurrent runs for the pipeline."
  returns:
    description: "the concurrency value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.description()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.description()"
  name: "description()"
  nameWithType: "Pipeline.description()"
  summary: "Get the description property: The description of the pipeline."
  syntax: "public String description()"
  desc: "Get the description property: The description of the pipeline."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.folder()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.folder()"
  name: "folder()"
  nameWithType: "Pipeline.folder()"
  summary: "Get the folder property: The folder that this Pipeline is in."
  syntax: "public PipelineFolder folder()"
  desc: "Get the folder property: The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level."
  returns:
    description: "the folder value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelineFolder?alt=com.azure.resourcemanager.datafactory.models.PipelineFolder&text=PipelineFolder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.parameters()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.parameters()"
  name: "parameters()"
  nameWithType: "Pipeline.parameters()"
  summary: "Get the parameters property: List of parameters for pipeline."
  syntax: "public Map<String,ParameterSpecification> parameters()"
  desc: "Get the parameters property: List of parameters for pipeline."
  returns:
    description: "the parameters value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.policy()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.policy()"
  name: "policy()"
  nameWithType: "Pipeline.policy()"
  summary: "Get the policy property: Pipeline Policy."
  syntax: "public PipelinePolicy policy()"
  desc: "Get the policy property: Pipeline Policy."
  returns:
    description: "the policy value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelinePolicy?alt=com.azure.resourcemanager.datafactory.models.PipelinePolicy&text=PipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.runDimensions()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.runDimensions()"
  name: "runDimensions()"
  nameWithType: "Pipeline.runDimensions()"
  summary: "Get the run<wbr>Dimensions property: Dimensions emitted by Pipeline."
  syntax: "public Map<String,Object> runDimensions()"
  desc: "Get the runDimensions property: Dimensions emitted by Pipeline."
  returns:
    description: "the runDimensions value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.validate()"
  name: "validate()"
  nameWithType: "Pipeline.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.variables()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.variables()"
  name: "variables()"
  nameWithType: "Pipeline.variables()"
  summary: "Get the variables property: List of variables for pipeline."
  syntax: "public Map<String,VariableSpecification> variables()"
  desc: "Get the variables property: List of variables for pipeline."
  returns:
    description: "the variables value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.VariableSpecification?alt=com.azure.resourcemanager.datafactory.models.VariableSpecification&text=VariableSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withActivities(java.util.List<com.azure.resourcemanager.datafactory.models.Activity>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withActivities(List<Activity> activities)"
  name: "withActivities(List<Activity> activities)"
  nameWithType: "Pipeline.withActivities(List<Activity> activities)"
  summary: "Set the activities property: List of activities in pipeline."
  parameters:
  - description: "the activities value to set."
    name: "activities"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?alt=com.azure.resourcemanager.datafactory.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Pipeline withActivities(List<Activity> activities)"
  desc: "Set the activities property: List of activities in pipeline."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "Pipeline.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the Pipeline."
  parameters:
  - description: "the annotations value to set."
    name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Pipeline withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the Pipeline."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withConcurrency(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withConcurrency(Integer concurrency)"
  name: "withConcurrency(Integer concurrency)"
  nameWithType: "Pipeline.withConcurrency(Integer concurrency)"
  summary: "Set the concurrency property: The max number of concurrent runs for the pipeline."
  parameters:
  - description: "the concurrency value to set."
    name: "concurrency"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Pipeline withConcurrency(Integer concurrency)"
  desc: "Set the concurrency property: The max number of concurrent runs for the pipeline."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "Pipeline.withDescription(String description)"
  summary: "Set the description property: The description of the pipeline."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Pipeline withDescription(String description)"
  desc: "Set the description property: The description of the pipeline."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withFolder(com.azure.resourcemanager.datafactory.models.PipelineFolder)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withFolder(PipelineFolder folder)"
  name: "withFolder(PipelineFolder folder)"
  nameWithType: "Pipeline.withFolder(PipelineFolder folder)"
  summary: "Set the folder property: The folder that this Pipeline is in."
  parameters:
  - description: "the folder value to set."
    name: "folder"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelineFolder?alt=com.azure.resourcemanager.datafactory.models.PipelineFolder&text=PipelineFolder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Pipeline withFolder(PipelineFolder folder)"
  desc: "Set the folder property: The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "Pipeline.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: List of parameters for pipeline."
  parameters:
  - description: "the parameters value to set."
    name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Pipeline withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: List of parameters for pipeline."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withPolicy(com.azure.resourcemanager.datafactory.models.PipelinePolicy)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withPolicy(PipelinePolicy policy)"
  name: "withPolicy(PipelinePolicy policy)"
  nameWithType: "Pipeline.withPolicy(PipelinePolicy policy)"
  summary: "Set the policy property: Pipeline Policy."
  parameters:
  - description: "the policy value to set."
    name: "policy"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.PipelinePolicy?alt=com.azure.resourcemanager.datafactory.models.PipelinePolicy&text=PipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Pipeline withPolicy(PipelinePolicy policy)"
  desc: "Set the policy property: Pipeline Policy."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withRunDimensions(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withRunDimensions(Map<String,Object> runDimensions)"
  name: "withRunDimensions(Map<String,Object> runDimensions)"
  nameWithType: "Pipeline.withRunDimensions(Map<String,Object> runDimensions)"
  summary: "Set the run<wbr>Dimensions property: Dimensions emitted by Pipeline."
  parameters:
  - description: "the runDimensions value to set."
    name: "runDimensions"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Pipeline withRunDimensions(Map<String,Object> runDimensions)"
  desc: "Set the runDimensions property: Dimensions emitted by Pipeline."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withVariables(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.VariableSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withVariables(Map<String,VariableSpecification> variables)"
  name: "withVariables(Map<String,VariableSpecification> variables)"
  nameWithType: "Pipeline.withVariables(Map<String,VariableSpecification> variables)"
  summary: "Set the variables property: List of variables for pipeline."
  parameters:
  - description: "the variables value to set."
    name: "variables"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.VariableSpecification?alt=com.azure.resourcemanager.datafactory.models.VariableSpecification&text=VariableSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Pipeline withVariables(Map<String,VariableSpecification> variables)"
  desc: "Set the variables property: List of variables for pipeline."
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A data factory pipeline."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
