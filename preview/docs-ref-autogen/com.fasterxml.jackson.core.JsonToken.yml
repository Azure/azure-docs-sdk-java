### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.core.JsonToken"
fullName: "com.fasterxml.jackson.core.JsonToken"
name: "JsonToken"
nameWithType: "JsonToken"
summary: "Enumeration for basic token types used for returning results of parsing JSON content."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum JsonToken extends Enum<JsonToken>"
fields:
- uid: "com.fasterxml.jackson.core.JsonToken.END_ARRAY"
  fullName: "com.fasterxml.jackson.core.JsonToken.END_ARRAY"
  name: "END_ARRAY"
  nameWithType: "JsonToken.END_ARRAY"
  summary: "END\\_ARRAY is returned when encountering '\\]' which signals ending of an Array value"
- uid: "com.fasterxml.jackson.core.JsonToken.END_OBJECT"
  fullName: "com.fasterxml.jackson.core.JsonToken.END_OBJECT"
  name: "END_OBJECT"
  nameWithType: "JsonToken.END_OBJECT"
  summary: "END\\_OBJECT is returned when encountering '\\}' which signals ending of an Object value"
- uid: "com.fasterxml.jackson.core.JsonToken.FIELD_NAME"
  fullName: "com.fasterxml.jackson.core.JsonToken.FIELD_NAME"
  name: "FIELD_NAME"
  nameWithType: "JsonToken.FIELD_NAME"
  summary: "FIELD\\_NAME is returned when a String token is encountered as a field name (same lexical value, different function)"
- uid: "com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE"
  fullName: "com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE"
  name: "NOT_AVAILABLE"
  nameWithType: "JsonToken.NOT_AVAILABLE"
  summary: "NOT\\_AVAILABLE can be returned if <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> implementation can not currently return the requested token (usually next one), or even if any will be available, but that may be able to determine this in future. This is the case with non-blocking parsers -- they can not block to wait for more data to parse and must return something."
- uid: "com.fasterxml.jackson.core.JsonToken.START_ARRAY"
  fullName: "com.fasterxml.jackson.core.JsonToken.START_ARRAY"
  name: "START_ARRAY"
  nameWithType: "JsonToken.START_ARRAY"
  summary: "START\\_ARRAY is returned when encountering '\\[' which signals starting of an Array value"
- uid: "com.fasterxml.jackson.core.JsonToken.START_OBJECT"
  fullName: "com.fasterxml.jackson.core.JsonToken.START_OBJECT"
  name: "START_OBJECT"
  nameWithType: "JsonToken.START_OBJECT"
  summary: "START\\_OBJECT is returned when encountering '\\{' which signals starting of an Object value."
- uid: "com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT"
  fullName: "com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT"
  name: "VALUE_EMBEDDED_OBJECT"
  nameWithType: "JsonToken.VALUE_EMBEDDED_OBJECT"
  summary: "Placeholder token returned when the input source has a concept of embedded Object that are not accessible as usual structure (of starting with <xref uid=\"com.fasterxml.jackson.core.JsonToken.START_OBJECT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#START_OBJECT\"></xref>, having values, ending with <xref uid=\"com.fasterxml.jackson.core.JsonToken.END_OBJECT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#END_OBJECT\"></xref>), but as \"raw\" objects.\n\nNote: this token is never returned by regular JSON readers, but only by readers that expose other kinds of source (like `JsonNode`\\-based JSON trees, Maps, Lists and such)."
- uid: "com.fasterxml.jackson.core.JsonToken.VALUE_FALSE"
  fullName: "com.fasterxml.jackson.core.JsonToken.VALUE_FALSE"
  name: "VALUE_FALSE"
  nameWithType: "JsonToken.VALUE_FALSE"
  summary: "VALUE\\_FALSE is returned when encountering literal \"false\" in value context"
- uid: "com.fasterxml.jackson.core.JsonToken.VALUE_NULL"
  fullName: "com.fasterxml.jackson.core.JsonToken.VALUE_NULL"
  name: "VALUE_NULL"
  nameWithType: "JsonToken.VALUE_NULL"
  summary: "VALUE\\_NULL is returned when encountering literal \"null\" in value context"
- uid: "com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT"
  fullName: "com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT"
  name: "VALUE_NUMBER_FLOAT"
  nameWithType: "JsonToken.VALUE_NUMBER_FLOAT"
  summary: "VALUE\\_NUMBER\\_FLOAT is returned when a numeric token other than integer is encountered: that is, a number that does have floating point or exponent marker in it, in addition to one or more digits (or, for non-textual formats, has internal floating-point representation)."
- uid: "com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT"
  fullName: "com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT"
  name: "VALUE_NUMBER_INT"
  nameWithType: "JsonToken.VALUE_NUMBER_INT"
  summary: "VALUE\\_NUMBER\\_INT is returned when an integer numeric token is encountered in value context: that is, a number that does not have floating point or exponent marker in it (consists only of an optional sign, followed by one or more digits; or, for binary formats, is indicated as integral number by internal representation)."
- uid: "com.fasterxml.jackson.core.JsonToken.VALUE_STRING"
  fullName: "com.fasterxml.jackson.core.JsonToken.VALUE_STRING"
  name: "VALUE_STRING"
  nameWithType: "JsonToken.VALUE_STRING"
  summary: "VALUE\\_STRING is returned when a String token is encountered in value context (array element, field value, or root-level stand-alone value)"
- uid: "com.fasterxml.jackson.core.JsonToken.VALUE_TRUE"
  fullName: "com.fasterxml.jackson.core.JsonToken.VALUE_TRUE"
  name: "VALUE_TRUE"
  nameWithType: "JsonToken.VALUE_TRUE"
  summary: "VALUE\\_TRUE is returned when encountering literal \"true\" in value context"
methods:
- uid: "com.fasterxml.jackson.core.JsonToken.asByteArray()"
  fullName: "com.fasterxml.jackson.core.JsonToken.asByteArray()"
  name: "asByteArray()"
  nameWithType: "JsonToken.asByteArray()"
  syntax: "public final byte[] asByteArray()"
  returns:
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.fasterxml.jackson.core.JsonToken.asCharArray()"
  fullName: "com.fasterxml.jackson.core.JsonToken.asCharArray()"
  name: "asCharArray()"
  nameWithType: "JsonToken.asCharArray()"
  syntax: "public final char[] asCharArray()"
  returns:
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.fasterxml.jackson.core.JsonToken.asString()"
  fullName: "com.fasterxml.jackson.core.JsonToken.asString()"
  name: "asString()"
  nameWithType: "JsonToken.asString()"
  syntax: "public final String asString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.id()"
  fullName: "com.fasterxml.jackson.core.JsonToken.id()"
  name: "id()"
  nameWithType: "JsonToken.id()"
  syntax: "public final int id()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.isBoolean()"
  fullName: "com.fasterxml.jackson.core.JsonToken.isBoolean()"
  name: "isBoolean()"
  nameWithType: "JsonToken.isBoolean()"
  syntax: "public final boolean isBoolean()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.isNumeric()"
  fullName: "com.fasterxml.jackson.core.JsonToken.isNumeric()"
  name: "isNumeric()"
  nameWithType: "JsonToken.isNumeric()"
  syntax: "public final boolean isNumeric()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.isScalarValue()"
  fullName: "com.fasterxml.jackson.core.JsonToken.isScalarValue()"
  name: "isScalarValue()"
  nameWithType: "JsonToken.isScalarValue()"
  summary: "Method that can be used to check whether this token represents a valid non-structured value. This means all tokens other than Object/Array start/end markers all field names."
  syntax: "public final boolean isScalarValue()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.isStructEnd()"
  fullName: "com.fasterxml.jackson.core.JsonToken.isStructEnd()"
  name: "isStructEnd()"
  nameWithType: "JsonToken.isStructEnd()"
  summary: "Accessor that is functionally equivalent to: `this == JsonToken.END_OBJECT || this == JsonToken.END_ARRAY`"
  syntax: "public final boolean isStructEnd()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.isStructStart()"
  fullName: "com.fasterxml.jackson.core.JsonToken.isStructStart()"
  name: "isStructStart()"
  nameWithType: "JsonToken.isStructStart()"
  summary: "Accessor that is functionally equivalent to: `this == JsonToken.START_OBJECT || this == JsonToken.START_ARRAY`"
  syntax: "public final boolean isStructStart()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.JsonToken.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "JsonToken.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonToken valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonToken.values()"
  fullName: "com.fasterxml.jackson.core.JsonToken.values()"
  name: "values()"
  nameWithType: "JsonToken.values()"
  syntax: "public static JsonToken[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
