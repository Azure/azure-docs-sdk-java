### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.JsonToken
  id: JsonToken
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.JsonToken.END_ARRAY
  - com.fasterxml.jackson.core.JsonToken.END_OBJECT
  - com.fasterxml.jackson.core.JsonToken.FIELD_NAME
  - com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE
  - com.fasterxml.jackson.core.JsonToken.START_ARRAY
  - com.fasterxml.jackson.core.JsonToken.START_OBJECT
  - com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT
  - com.fasterxml.jackson.core.JsonToken.VALUE_FALSE
  - com.fasterxml.jackson.core.JsonToken.VALUE_NULL
  - com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT
  - com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT
  - com.fasterxml.jackson.core.JsonToken.VALUE_STRING
  - com.fasterxml.jackson.core.JsonToken.VALUE_TRUE
  - com.fasterxml.jackson.core.JsonToken.asByteArray()
  - com.fasterxml.jackson.core.JsonToken.asCharArray()
  - com.fasterxml.jackson.core.JsonToken.asString()
  - com.fasterxml.jackson.core.JsonToken.id()
  - com.fasterxml.jackson.core.JsonToken.isBoolean()
  - com.fasterxml.jackson.core.JsonToken.isNumeric()
  - com.fasterxml.jackson.core.JsonToken.isScalarValue()
  - com.fasterxml.jackson.core.JsonToken.isStructEnd()
  - com.fasterxml.jackson.core.JsonToken.isStructStart()
  - com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)
  - com.fasterxml.jackson.core.JsonToken.values()
  langs:
  - java
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
  type: Enum
  package: com.fasterxml.jackson.core
  summary: Enumeration for basic token types used for returning results of parsing JSON content.
  syntax:
    content: public enum JsonToken extends Enum<JsonToken>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.JsonToken.END_ARRAY
  id: END_ARRAY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: END_ARRAY
  nameWithType: JsonToken.END_ARRAY
  fullName: com.fasterxml.jackson.core.JsonToken.END_ARRAY
  type: Field
  package: com.fasterxml.jackson.core
  summary: END\_ARRAY is returned when encountering '\]' which signals ending of an Array value
  syntax:
    content: public static final JsonToken END_ARRAY
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.END_OBJECT
  id: END_OBJECT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: END_OBJECT
  nameWithType: JsonToken.END_OBJECT
  fullName: com.fasterxml.jackson.core.JsonToken.END_OBJECT
  type: Field
  package: com.fasterxml.jackson.core
  summary: END\_OBJECT is returned when encountering '\}' which signals ending of an Object value
  syntax:
    content: public static final JsonToken END_OBJECT
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.FIELD_NAME
  id: FIELD_NAME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: FIELD_NAME
  nameWithType: JsonToken.FIELD_NAME
  fullName: com.fasterxml.jackson.core.JsonToken.FIELD_NAME
  type: Field
  package: com.fasterxml.jackson.core
  summary: FIELD\_NAME is returned when a String token is encountered as a field name (same lexical value, different function)
  syntax:
    content: public static final JsonToken FIELD_NAME
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.JsonToken(java.lang.String,int)
  id: JsonToken(java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: JsonToken(String token, int id)
  nameWithType: JsonToken.JsonToken(String token, int id)
  fullName: com.fasterxml.jackson.core.JsonToken.JsonToken(String token, int id)
  overload: com.fasterxml.jackson.core.JsonToken.JsonToken*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: private JsonToken(String token, int id)
    parameters:
    - id: token
      type: java.lang.String
      description: >-
        representation for this token, if there is a
           single static representation; null otherwise
    - id: id
      type: int
- uid: com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE
  id: NOT_AVAILABLE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: NOT_AVAILABLE
  nameWithType: JsonToken.NOT_AVAILABLE
  fullName: com.fasterxml.jackson.core.JsonToken.NOT_AVAILABLE
  type: Field
  package: com.fasterxml.jackson.core
  summary: NOT\_AVAILABLE can be returned if <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> implementation can not currently return the requested token (usually next one), or even if any will be available, but that may be able to determine this in future. This is the case with non-blocking parsers -- they can not block to wait for more data to parse and must return something.
  syntax:
    content: public static final JsonToken NOT_AVAILABLE
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.START_ARRAY
  id: START_ARRAY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: START_ARRAY
  nameWithType: JsonToken.START_ARRAY
  fullName: com.fasterxml.jackson.core.JsonToken.START_ARRAY
  type: Field
  package: com.fasterxml.jackson.core
  summary: START\_ARRAY is returned when encountering '\[' which signals starting of an Array value
  syntax:
    content: public static final JsonToken START_ARRAY
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.START_OBJECT
  id: START_OBJECT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: START_OBJECT
  nameWithType: JsonToken.START_OBJECT
  fullName: com.fasterxml.jackson.core.JsonToken.START_OBJECT
  type: Field
  package: com.fasterxml.jackson.core
  summary: START\_OBJECT is returned when encountering '\{' which signals starting of an Object value.
  syntax:
    content: public static final JsonToken START_OBJECT
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT
  id: VALUE_EMBEDDED_OBJECT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: VALUE_EMBEDDED_OBJECT
  nameWithType: JsonToken.VALUE_EMBEDDED_OBJECT
  fullName: com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    Placeholder token returned when the input source has a concept of embedded Object that are not accessible as usual structure (of starting with <xref uid="com.fasterxml.jackson.core.JsonToken.START_OBJECT" data-throw-if-not-resolved="false">#START_OBJECT</xref>, having values, ending with <xref uid="com.fasterxml.jackson.core.JsonToken.END_OBJECT" data-throw-if-not-resolved="false">#END_OBJECT</xref>), but as "raw" objects.


    Note: this token is never returned by regular JSON readers, but only by readers that expose other kinds of source (like `JsonNode`\-based JSON trees, Maps, Lists and such).
  syntax:
    content: public static final JsonToken VALUE_EMBEDDED_OBJECT
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.VALUE_FALSE
  id: VALUE_FALSE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: VALUE_FALSE
  nameWithType: JsonToken.VALUE_FALSE
  fullName: com.fasterxml.jackson.core.JsonToken.VALUE_FALSE
  type: Field
  package: com.fasterxml.jackson.core
  summary: VALUE\_FALSE is returned when encountering literal "false" in value context
  syntax:
    content: public static final JsonToken VALUE_FALSE
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.VALUE_NULL
  id: VALUE_NULL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: VALUE_NULL
  nameWithType: JsonToken.VALUE_NULL
  fullName: com.fasterxml.jackson.core.JsonToken.VALUE_NULL
  type: Field
  package: com.fasterxml.jackson.core
  summary: VALUE\_NULL is returned when encountering literal "null" in value context
  syntax:
    content: public static final JsonToken VALUE_NULL
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT
  id: VALUE_NUMBER_FLOAT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: VALUE_NUMBER_FLOAT
  nameWithType: JsonToken.VALUE_NUMBER_FLOAT
  fullName: com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT
  type: Field
  package: com.fasterxml.jackson.core
  summary: 'VALUE\_NUMBER\_FLOAT is returned when a numeric token other than integer is encountered: that is, a number that does have floating point or exponent marker in it, in addition to one or more digits (or, for non-textual formats, has internal floating-point representation).'
  syntax:
    content: public static final JsonToken VALUE_NUMBER_FLOAT
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT
  id: VALUE_NUMBER_INT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: VALUE_NUMBER_INT
  nameWithType: JsonToken.VALUE_NUMBER_INT
  fullName: com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT
  type: Field
  package: com.fasterxml.jackson.core
  summary: 'VALUE\_NUMBER\_INT is returned when an integer numeric token is encountered in value context: that is, a number that does not have floating point or exponent marker in it (consists only of an optional sign, followed by one or more digits; or, for binary formats, is indicated as integral number by internal representation).'
  syntax:
    content: public static final JsonToken VALUE_NUMBER_INT
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.VALUE_STRING
  id: VALUE_STRING
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: VALUE_STRING
  nameWithType: JsonToken.VALUE_STRING
  fullName: com.fasterxml.jackson.core.JsonToken.VALUE_STRING
  type: Field
  package: com.fasterxml.jackson.core
  summary: VALUE\_STRING is returned when a String token is encountered in value context (array element, field value, or root-level stand-alone value)
  syntax:
    content: public static final JsonToken VALUE_STRING
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.VALUE_TRUE
  id: VALUE_TRUE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: VALUE_TRUE
  nameWithType: JsonToken.VALUE_TRUE
  fullName: com.fasterxml.jackson.core.JsonToken.VALUE_TRUE
  type: Field
  package: com.fasterxml.jackson.core
  summary: VALUE\_TRUE is returned when encountering literal "true" in value context
  syntax:
    content: public static final JsonToken VALUE_TRUE
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.asByteArray()
  id: asByteArray()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: asByteArray()
  nameWithType: JsonToken.asByteArray()
  fullName: com.fasterxml.jackson.core.JsonToken.asByteArray()
  overload: com.fasterxml.jackson.core.JsonToken.asByteArray*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final byte[] asByteArray()
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.JsonToken.asCharArray()
  id: asCharArray()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: asCharArray()
  nameWithType: JsonToken.asCharArray()
  fullName: com.fasterxml.jackson.core.JsonToken.asCharArray()
  overload: com.fasterxml.jackson.core.JsonToken.asCharArray*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final char[] asCharArray()
    return:
      type: char[]
- uid: com.fasterxml.jackson.core.JsonToken.asString()
  id: asString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: asString()
  nameWithType: JsonToken.asString()
  fullName: com.fasterxml.jackson.core.JsonToken.asString()
  overload: com.fasterxml.jackson.core.JsonToken.asString*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final String asString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonToken.id()
  id: id()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: id()
  nameWithType: JsonToken.id()
  fullName: com.fasterxml.jackson.core.JsonToken.id()
  overload: com.fasterxml.jackson.core.JsonToken.id*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final int id()
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonToken.isBoolean()
  id: isBoolean()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: isBoolean()
  nameWithType: JsonToken.isBoolean()
  fullName: com.fasterxml.jackson.core.JsonToken.isBoolean()
  overload: com.fasterxml.jackson.core.JsonToken.isBoolean*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final boolean isBoolean()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonToken.isNumeric()
  id: isNumeric()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: isNumeric()
  nameWithType: JsonToken.isNumeric()
  fullName: com.fasterxml.jackson.core.JsonToken.isNumeric()
  overload: com.fasterxml.jackson.core.JsonToken.isNumeric*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final boolean isNumeric()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonToken.isScalarValue()
  id: isScalarValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: isScalarValue()
  nameWithType: JsonToken.isScalarValue()
  fullName: com.fasterxml.jackson.core.JsonToken.isScalarValue()
  overload: com.fasterxml.jackson.core.JsonToken.isScalarValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that can be used to check whether this token represents a valid non-structured value. This means all tokens other than Object/Array start/end markers all field names.
  syntax:
    content: public final boolean isScalarValue()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonToken.isStructEnd()
  id: isStructEnd()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: isStructEnd()
  nameWithType: JsonToken.isStructEnd()
  fullName: com.fasterxml.jackson.core.JsonToken.isStructEnd()
  overload: com.fasterxml.jackson.core.JsonToken.isStructEnd*
  type: Method
  package: com.fasterxml.jackson.core
  summary: 'Accessor that is functionally equivalent to: `this == JsonToken.END_OBJECT || this == JsonToken.END_ARRAY`'
  syntax:
    content: public final boolean isStructEnd()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonToken.isStructStart()
  id: isStructStart()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: isStructStart()
  nameWithType: JsonToken.isStructStart()
  fullName: com.fasterxml.jackson.core.JsonToken.isStructStart()
  overload: com.fasterxml.jackson.core.JsonToken.isStructStart*
  type: Method
  package: com.fasterxml.jackson.core
  summary: 'Accessor that is functionally equivalent to: `this == JsonToken.START_OBJECT || this == JsonToken.START_ARRAY`'
  syntax:
    content: public final boolean isStructStart()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonToken.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: valueOf(String name)
  nameWithType: JsonToken.valueOf(String name)
  fullName: com.fasterxml.jackson.core.JsonToken.valueOf(String name)
  overload: com.fasterxml.jackson.core.JsonToken.valueOf*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static JsonToken valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.JsonToken.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonToken
  langs:
  - java
  name: values()
  nameWithType: JsonToken.values()
  fullName: com.fasterxml.jackson.core.JsonToken.values()
  overload: com.fasterxml.jackson.core.JsonToken.values*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static JsonToken[] values()
    return:
      type: com.fasterxml.jackson.core.JsonToken[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.JsonToken.JsonToken*
  name: JsonToken
  nameWithType: JsonToken.JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken.JsonToken
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken[]
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonToken
    name: JsonToken
    fullName: com.fasterxml.jackson.core.JsonToken
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonToken.values*
  name: values
  nameWithType: JsonToken.values
  fullName: com.fasterxml.jackson.core.JsonToken.values
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken.valueOf*
  name: valueOf
  nameWithType: JsonToken.valueOf
  fullName: com.fasterxml.jackson.core.JsonToken.valueOf
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken.id*
  name: id
  nameWithType: JsonToken.id
  fullName: com.fasterxml.jackson.core.JsonToken.id
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken.asString*
  name: asString
  nameWithType: JsonToken.asString
  fullName: com.fasterxml.jackson.core.JsonToken.asString
  package: com.fasterxml.jackson.core
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonToken.asCharArray*
  name: asCharArray
  nameWithType: JsonToken.asCharArray
  fullName: com.fasterxml.jackson.core.JsonToken.asCharArray
  package: com.fasterxml.jackson.core
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.JsonToken.asByteArray*
  name: asByteArray
  nameWithType: JsonToken.asByteArray
  fullName: com.fasterxml.jackson.core.JsonToken.asByteArray
  package: com.fasterxml.jackson.core
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.JsonToken.isNumeric*
  name: isNumeric
  nameWithType: JsonToken.isNumeric
  fullName: com.fasterxml.jackson.core.JsonToken.isNumeric
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken.isStructStart*
  name: isStructStart
  nameWithType: JsonToken.isStructStart
  fullName: com.fasterxml.jackson.core.JsonToken.isStructStart
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken.isStructEnd*
  name: isStructEnd
  nameWithType: JsonToken.isStructEnd
  fullName: com.fasterxml.jackson.core.JsonToken.isStructEnd
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken.isScalarValue*
  name: isScalarValue
  nameWithType: JsonToken.isScalarValue
  fullName: com.fasterxml.jackson.core.JsonToken.isScalarValue
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonToken.isBoolean*
  name: isBoolean
  nameWithType: JsonToken.isBoolean
  fullName: com.fasterxml.jackson.core.JsonToken.isBoolean
  package: com.fasterxml.jackson.core
- uid: java.lang.Enum<com.fasterxml.jackson.core.JsonToken>
  name: Enum<JsonToken>
  nameWithType: Enum<JsonToken>
  fullName: java.lang.Enum<com.fasterxml.jackson.core.JsonToken>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
