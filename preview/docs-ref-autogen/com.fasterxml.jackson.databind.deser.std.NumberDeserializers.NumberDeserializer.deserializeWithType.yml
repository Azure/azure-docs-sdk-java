### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer.deserializeWithType*"
fullName: "com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer.deserializeWithType"
name: "deserializeWithType"
nameWithType: "NumberDeserializers.NumberDeserializer.deserializeWithType"
members:
- uid: "com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)"
  fullName: "com.fasterxml.jackson.databind.deser.std.NumberDeserializers.NumberDeserializer.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)"
  name: "deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)"
  nameWithType: "NumberDeserializers.NumberDeserializer.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)"
  summary: "As mentioned in class Javadoc, there is additional complexity in handling potentially mixed type information here. Because of this, we must actually check for \"raw\" integers and doubles first, before calling type deserializer."
  overridden: "com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)"
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeDeserializer"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer?alt=com.fasterxml.jackson.databind.jsontype.TypeDeserializer&text=TypeDeserializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
