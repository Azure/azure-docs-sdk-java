### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64*"
fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64"
name: "_decodeBase64"
nameWithType: "ParserMinimalBase._decodeBase64"
members:
- uid: "com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)"
  fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)"
  name: "_decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)"
  nameWithType: "ParserMinimalBase._decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)"
  summary: "Helper method that can be used for base64 decoding in cases where encoded content has already been read as a String."
  parameters:
  - name: "str"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "builder"
    type: "<xref href=\"com.fasterxml.jackson.core.util.ByteArrayBuilder?alt=com.fasterxml.jackson.core.util.ByteArrayBuilder&text=ByteArrayBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "b64variant"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void _decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.base"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
