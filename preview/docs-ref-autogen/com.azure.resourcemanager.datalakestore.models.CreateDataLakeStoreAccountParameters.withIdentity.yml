### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withIdentity*"
fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withIdentity"
name: "withIdentity"
nameWithType: "CreateDataLakeStoreAccountParameters.withIdentity"
members:
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withIdentity(com.azure.resourcemanager.datalakestore.models.EncryptionIdentity)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withIdentity(EncryptionIdentity identity)"
  name: "withIdentity(EncryptionIdentity identity)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withIdentity(EncryptionIdentity identity)"
  summary: "Set the identity property: The Key Vault encryption identity, if any."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionIdentity?alt=com.azure.resourcemanager.datalakestore.models.EncryptionIdentity&text=EncryptionIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withIdentity(EncryptionIdentity identity)"
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
