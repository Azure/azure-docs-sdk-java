### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity"
fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity"
name: "HDInsightSparkActivity"
nameWithType: "HDInsightSparkActivity"
summary: "HDInsight Spark activity."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.ExecutionActivity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Activity.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.Activity.dependsOn()"
- "com.azure.resourcemanager.datafactory.models.Activity.description()"
- "com.azure.resourcemanager.datafactory.models.Activity.name()"
- "com.azure.resourcemanager.datafactory.models.Activity.userProperties()"
- "com.azure.resourcemanager.datafactory.models.Activity.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.linkedServiceName()"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.policy()"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.validate()"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withName(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withPolicy(com.azure.resourcemanager.datafactory.models.ActivityPolicy)"
- "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HDInsightSparkActivity extends ExecutionActivity"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.HDInsightSparkActivity()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.HDInsightSparkActivity()"
  name: "HDInsightSparkActivity()"
  nameWithType: "HDInsightSparkActivity.HDInsightSparkActivity()"
  syntax: "public HDInsightSparkActivity()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.arguments()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.arguments()"
  name: "arguments()"
  nameWithType: "HDInsightSparkActivity.arguments()"
  summary: "Get the arguments property: The user-specified arguments to HDInsightSparkActivity."
  syntax: "public List<Object> arguments()"
  returns:
    description: "the arguments value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.className()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.className()"
  name: "className()"
  nameWithType: "HDInsightSparkActivity.className()"
  summary: "Get the className property: The application's Java/Spark main class."
  syntax: "public String className()"
  returns:
    description: "the className value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.entryFilePath()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.entryFilePath()"
  name: "entryFilePath()"
  nameWithType: "HDInsightSparkActivity.entryFilePath()"
  summary: "Get the entryFilePath property: The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string)."
  syntax: "public Object entryFilePath()"
  returns:
    description: "the entryFilePath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.getDebugInfo()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.getDebugInfo()"
  name: "getDebugInfo()"
  nameWithType: "HDInsightSparkActivity.getDebugInfo()"
  summary: "Get the getDebugInfo property: Debug info option."
  syntax: "public HDInsightActivityDebugInfoOption getDebugInfo()"
  returns:
    description: "the getDebugInfo value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption?alt=com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption&text=HDInsightActivityDebugInfoOption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.proxyUser()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.proxyUser()"
  name: "proxyUser()"
  nameWithType: "HDInsightSparkActivity.proxyUser()"
  summary: "Get the proxyUser property: The user to impersonate that will execute the job. Type: string (or Expression with resultType string)."
  syntax: "public Object proxyUser()"
  returns:
    description: "the proxyUser value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.rootPath()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.rootPath()"
  name: "rootPath()"
  nameWithType: "HDInsightSparkActivity.rootPath()"
  summary: "Get the rootPath property: The root path in 'sparkJobLinkedService' for all the job\\\\u2019s files. Type: string (or Expression with resultType string)."
  syntax: "public Object rootPath()"
  returns:
    description: "the rootPath value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.sparkConfig()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.sparkConfig()"
  name: "sparkConfig()"
  nameWithType: "HDInsightSparkActivity.sparkConfig()"
  summary: "Get the sparkConfig property: Spark configuration property."
  syntax: "public Map<String,Object> sparkConfig()"
  returns:
    description: "the sparkConfig value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.sparkJobLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.sparkJobLinkedService()"
  name: "sparkJobLinkedService()"
  nameWithType: "HDInsightSparkActivity.sparkJobLinkedService()"
  summary: "Get the sparkJobLinkedService property: The storage linked service for uploading the entry file and dependencies, and for receiving logs."
  syntax: "public LinkedServiceReference sparkJobLinkedService()"
  returns:
    description: "the sparkJobLinkedService value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.validate()"
  name: "validate()"
  nameWithType: "HDInsightSparkActivity.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.ExecutionActivity.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withArguments(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withArguments(List<Object> arguments)"
  name: "withArguments(List<Object> arguments)"
  nameWithType: "HDInsightSparkActivity.withArguments(List<Object> arguments)"
  summary: "Set the arguments property: The user-specified arguments to HDInsightSparkActivity."
  parameters:
  - description: "the arguments value to set."
    name: "arguments"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HDInsightSparkActivity withArguments(List<Object> arguments)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withClassName(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withClassName(String className)"
  name: "withClassName(String className)"
  nameWithType: "HDInsightSparkActivity.withClassName(String className)"
  summary: "Set the className property: The application's Java/Spark main class."
  parameters:
  - description: "the className value to set."
    name: "className"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withClassName(String className)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withDependsOn(List<ActivityDependency> dependsOn)"
  name: "withDependsOn(List<ActivityDependency> dependsOn)"
  nameWithType: "HDInsightSparkActivity.withDependsOn(List<ActivityDependency> dependsOn)"
  summary: "Set the dependsOn property: Activity depends on condition."
  overridden: "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
  parameters:
  - name: "dependsOn"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.ActivityDependency?alt=com.azure.resourcemanager.datafactory.models.ActivityDependency&text=ActivityDependency\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HDInsightSparkActivity withDependsOn(List<ActivityDependency> dependsOn)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "HDInsightSparkActivity.withDescription(String description)"
  summary: "Set the description property: Activity description."
  overridden: "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withDescription(String description)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withEntryFilePath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withEntryFilePath(Object entryFilePath)"
  name: "withEntryFilePath(Object entryFilePath)"
  nameWithType: "HDInsightSparkActivity.withEntryFilePath(Object entryFilePath)"
  summary: "Set the entryFilePath property: The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the entryFilePath value to set."
    name: "entryFilePath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withEntryFilePath(Object entryFilePath)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withGetDebugInfo(com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withGetDebugInfo(HDInsightActivityDebugInfoOption getDebugInfo)"
  name: "withGetDebugInfo(HDInsightActivityDebugInfoOption getDebugInfo)"
  nameWithType: "HDInsightSparkActivity.withGetDebugInfo(HDInsightActivityDebugInfoOption getDebugInfo)"
  summary: "Set the getDebugInfo property: Debug info option."
  parameters:
  - description: "the getDebugInfo value to set."
    name: "getDebugInfo"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption?alt=com.azure.resourcemanager.datafactory.models.HDInsightActivityDebugInfoOption&text=HDInsightActivityDebugInfoOption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withGetDebugInfo(HDInsightActivityDebugInfoOption getDebugInfo)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  name: "withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  nameWithType: "HDInsightSparkActivity.withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  summary: "Set the linkedServiceName property: Linked service reference."
  overridden: "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withLinkedServiceName(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  parameters:
  - name: "linkedServiceName"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withLinkedServiceName(LinkedServiceReference linkedServiceName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withName(String name)"
  name: "withName(String name)"
  nameWithType: "HDInsightSparkActivity.withName(String name)"
  summary: "Set the name property: Activity name."
  overridden: "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withName(String name)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withPolicy(com.azure.resourcemanager.datafactory.models.ActivityPolicy)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withPolicy(ActivityPolicy policy)"
  name: "withPolicy(ActivityPolicy policy)"
  nameWithType: "HDInsightSparkActivity.withPolicy(ActivityPolicy policy)"
  summary: "Set the policy property: Activity policy."
  overridden: "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withPolicy(com.azure.resourcemanager.datafactory.models.ActivityPolicy)"
  parameters:
  - name: "policy"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ActivityPolicy?alt=com.azure.resourcemanager.datafactory.models.ActivityPolicy&text=ActivityPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withPolicy(ActivityPolicy policy)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withProxyUser(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withProxyUser(Object proxyUser)"
  name: "withProxyUser(Object proxyUser)"
  nameWithType: "HDInsightSparkActivity.withProxyUser(Object proxyUser)"
  summary: "Set the proxyUser property: The user to impersonate that will execute the job. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the proxyUser value to set."
    name: "proxyUser"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withProxyUser(Object proxyUser)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withRootPath(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withRootPath(Object rootPath)"
  name: "withRootPath(Object rootPath)"
  nameWithType: "HDInsightSparkActivity.withRootPath(Object rootPath)"
  summary: "Set the rootPath property: The root path in 'sparkJobLinkedService' for all the job\\\\u2019s files. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the rootPath value to set."
    name: "rootPath"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withRootPath(Object rootPath)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withSparkConfig(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withSparkConfig(Map<String,Object> sparkConfig)"
  name: "withSparkConfig(Map<String,Object> sparkConfig)"
  nameWithType: "HDInsightSparkActivity.withSparkConfig(Map<String,Object> sparkConfig)"
  summary: "Set the sparkConfig property: Spark configuration property."
  parameters:
  - description: "the sparkConfig value to set."
    name: "sparkConfig"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HDInsightSparkActivity withSparkConfig(Map<String,Object> sparkConfig)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withSparkJobLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withSparkJobLinkedService(LinkedServiceReference sparkJobLinkedService)"
  name: "withSparkJobLinkedService(LinkedServiceReference sparkJobLinkedService)"
  nameWithType: "HDInsightSparkActivity.withSparkJobLinkedService(LinkedServiceReference sparkJobLinkedService)"
  summary: "Set the sparkJobLinkedService property: The storage linked service for uploading the entry file and dependencies, and for receiving logs."
  parameters:
  - description: "the sparkJobLinkedService value to set."
    name: "sparkJobLinkedService"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HDInsightSparkActivity withSparkJobLinkedService(LinkedServiceReference sparkJobLinkedService)"
  returns:
    description: "the HDInsightSparkActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
  fullName: "com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity.withUserProperties(List<UserProperty> userProperties)"
  name: "withUserProperties(List<UserProperty> userProperties)"
  nameWithType: "HDInsightSparkActivity.withUserProperties(List<UserProperty> userProperties)"
  summary: "Set the userProperties property: Activity user properties."
  overridden: "com.azure.resourcemanager.datafactory.models.ExecutionActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
  parameters:
  - name: "userProperties"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.UserProperty?alt=com.azure.resourcemanager.datafactory.models.UserProperty&text=UserProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HDInsightSparkActivity withUserProperties(List<UserProperty> userProperties)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity?alt=com.azure.resourcemanager.datafactory.models.HDInsightSparkActivity&text=HDInsightSparkActivity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
