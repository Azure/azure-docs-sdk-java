### YamlMime:JavaType
uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner"
fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner"
name: "BigDataPoolResourceInfoInner"
nameWithType: "BigDataPoolResourceInfoInner"
summary: "Big Data pool A Big Data pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BigDataPoolResourceInfoInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.BigDataPoolResourceInfoInner()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.BigDataPoolResourceInfoInner()"
  name: "BigDataPoolResourceInfoInner()"
  nameWithType: "BigDataPoolResourceInfoInner.BigDataPoolResourceInfoInner()"
  syntax: "public BigDataPoolResourceInfoInner()"
methods:
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.autoPause()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.autoPause()"
  name: "autoPause()"
  nameWithType: "BigDataPoolResourceInfoInner.autoPause()"
  summary: "Get the autoPause property: Spark pool auto-pausing properties Auto-pausing properties."
  syntax: "public AutoPauseProperties autoPause()"
  returns:
    description: "the autoPause value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.AutoPauseProperties?alt=com.azure.resourcemanager.synapse.models.AutoPauseProperties&text=AutoPauseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.autoScale()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.autoScale()"
  name: "autoScale()"
  nameWithType: "BigDataPoolResourceInfoInner.autoScale()"
  summary: "Get the autoScale property: Spark pool auto-scaling properties Auto-scaling properties."
  syntax: "public AutoScaleProperties autoScale()"
  returns:
    description: "the autoScale value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.AutoScaleProperties?alt=com.azure.resourcemanager.synapse.models.AutoScaleProperties&text=AutoScaleProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.cacheSize()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.cacheSize()"
  name: "cacheSize()"
  nameWithType: "BigDataPoolResourceInfoInner.cacheSize()"
  summary: "Get the cacheSize property: The cache size."
  syntax: "public Integer cacheSize()"
  returns:
    description: "the cacheSize value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.creationDate()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.creationDate()"
  name: "creationDate()"
  nameWithType: "BigDataPoolResourceInfoInner.creationDate()"
  summary: "Get the creationDate property: The time when the Big Data pool was created."
  syntax: "public OffsetDateTime creationDate()"
  returns:
    description: "the creationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.customLibraries()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.customLibraries()"
  name: "customLibraries()"
  nameWithType: "BigDataPoolResourceInfoInner.customLibraries()"
  summary: "Get the customLibraries property: List of custom libraries/packages associated with the spark pool."
  syntax: "public List<LibraryInfo> customLibraries()"
  returns:
    description: "the customLibraries value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.fluent.models.LibraryInfo?alt=com.azure.resourcemanager.synapse.fluent.models.LibraryInfo&text=LibraryInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.defaultSparkLogFolder()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.defaultSparkLogFolder()"
  name: "defaultSparkLogFolder()"
  nameWithType: "BigDataPoolResourceInfoInner.defaultSparkLogFolder()"
  summary: "Get the defaultSparkLogFolder property: The default folder where Spark logs will be written."
  syntax: "public String defaultSparkLogFolder()"
  returns:
    description: "the defaultSparkLogFolder value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.dynamicExecutorAllocation()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.dynamicExecutorAllocation()"
  name: "dynamicExecutorAllocation()"
  nameWithType: "BigDataPoolResourceInfoInner.dynamicExecutorAllocation()"
  summary: "Get the dynamicExecutorAllocation property: Dynamic Executor Allocation."
  syntax: "public DynamicExecutorAllocation dynamicExecutorAllocation()"
  returns:
    description: "the dynamicExecutorAllocation value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.DynamicExecutorAllocation?alt=com.azure.resourcemanager.synapse.models.DynamicExecutorAllocation&text=DynamicExecutorAllocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.isComputeIsolationEnabled()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.isComputeIsolationEnabled()"
  name: "isComputeIsolationEnabled()"
  nameWithType: "BigDataPoolResourceInfoInner.isComputeIsolationEnabled()"
  summary: "Get the isComputeIsolationEnabled property: Whether compute isolation is required or not."
  syntax: "public Boolean isComputeIsolationEnabled()"
  returns:
    description: "the isComputeIsolationEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.lastSucceededTimestamp()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.lastSucceededTimestamp()"
  name: "lastSucceededTimestamp()"
  nameWithType: "BigDataPoolResourceInfoInner.lastSucceededTimestamp()"
  summary: "Get the lastSucceededTimestamp property: The time when the Big Data pool was updated successfully."
  syntax: "public OffsetDateTime lastSucceededTimestamp()"
  returns:
    description: "the lastSucceededTimestamp value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.libraryRequirements()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.libraryRequirements()"
  name: "libraryRequirements()"
  nameWithType: "BigDataPoolResourceInfoInner.libraryRequirements()"
  summary: "Get the libraryRequirements property: Spark pool library version requirements Library version requirements."
  syntax: "public LibraryRequirements libraryRequirements()"
  returns:
    description: "the libraryRequirements value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.LibraryRequirements?alt=com.azure.resourcemanager.synapse.models.LibraryRequirements&text=LibraryRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.nodeCount()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.nodeCount()"
  name: "nodeCount()"
  nameWithType: "BigDataPoolResourceInfoInner.nodeCount()"
  summary: "Get the nodeCount property: The number of nodes in the Big Data pool."
  syntax: "public Integer nodeCount()"
  returns:
    description: "the nodeCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.nodeSize()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.nodeSize()"
  name: "nodeSize()"
  nameWithType: "BigDataPoolResourceInfoInner.nodeSize()"
  summary: "Get the nodeSize property: The level of compute power that each node in the Big Data pool has."
  syntax: "public NodeSize nodeSize()"
  returns:
    description: "the nodeSize value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.NodeSize?alt=com.azure.resourcemanager.synapse.models.NodeSize&text=NodeSize\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.nodeSizeFamily()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.nodeSizeFamily()"
  name: "nodeSizeFamily()"
  nameWithType: "BigDataPoolResourceInfoInner.nodeSizeFamily()"
  summary: "Get the nodeSizeFamily property: The kind of nodes that the Big Data pool provides."
  syntax: "public NodeSizeFamily nodeSizeFamily()"
  returns:
    description: "the nodeSizeFamily value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.NodeSizeFamily?alt=com.azure.resourcemanager.synapse.models.NodeSizeFamily&text=NodeSizeFamily\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.provisioningState()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "BigDataPoolResourceInfoInner.provisioningState()"
  summary: "Get the provisioningState property: The state of the Big Data pool."
  syntax: "public String provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sessionLevelPackagesEnabled()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sessionLevelPackagesEnabled()"
  name: "sessionLevelPackagesEnabled()"
  nameWithType: "BigDataPoolResourceInfoInner.sessionLevelPackagesEnabled()"
  summary: "Get the sessionLevelPackagesEnabled property: Whether session level packages enabled."
  syntax: "public Boolean sessionLevelPackagesEnabled()"
  returns:
    description: "the sessionLevelPackagesEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sparkConfigProperties()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sparkConfigProperties()"
  name: "sparkConfigProperties()"
  nameWithType: "BigDataPoolResourceInfoInner.sparkConfigProperties()"
  summary: "Get the sparkConfigProperties property: Spark pool Config Properties Spark configuration file to specify additional properties."
  syntax: "public SparkConfigProperties sparkConfigProperties()"
  returns:
    description: "the sparkConfigProperties value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sparkEventsFolder()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sparkEventsFolder()"
  name: "sparkEventsFolder()"
  nameWithType: "BigDataPoolResourceInfoInner.sparkEventsFolder()"
  summary: "Get the sparkEventsFolder property: The Spark events folder."
  syntax: "public String sparkEventsFolder()"
  returns:
    description: "the sparkEventsFolder value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sparkVersion()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.sparkVersion()"
  name: "sparkVersion()"
  nameWithType: "BigDataPoolResourceInfoInner.sparkVersion()"
  summary: "Get the sparkVersion property: The Apache Spark version."
  syntax: "public String sparkVersion()"
  returns:
    description: "the sparkVersion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.validate()"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.validate()"
  name: "validate()"
  nameWithType: "BigDataPoolResourceInfoInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withAutoPause(com.azure.resourcemanager.synapse.models.AutoPauseProperties)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withAutoPause(AutoPauseProperties autoPause)"
  name: "withAutoPause(AutoPauseProperties autoPause)"
  nameWithType: "BigDataPoolResourceInfoInner.withAutoPause(AutoPauseProperties autoPause)"
  summary: "Set the autoPause property: Spark pool auto-pausing properties Auto-pausing properties."
  parameters:
  - description: "the autoPause value to set."
    name: "autoPause"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.AutoPauseProperties?alt=com.azure.resourcemanager.synapse.models.AutoPauseProperties&text=AutoPauseProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withAutoPause(AutoPauseProperties autoPause)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withAutoScale(com.azure.resourcemanager.synapse.models.AutoScaleProperties)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withAutoScale(AutoScaleProperties autoScale)"
  name: "withAutoScale(AutoScaleProperties autoScale)"
  nameWithType: "BigDataPoolResourceInfoInner.withAutoScale(AutoScaleProperties autoScale)"
  summary: "Set the autoScale property: Spark pool auto-scaling properties Auto-scaling properties."
  parameters:
  - description: "the autoScale value to set."
    name: "autoScale"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.AutoScaleProperties?alt=com.azure.resourcemanager.synapse.models.AutoScaleProperties&text=AutoScaleProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withAutoScale(AutoScaleProperties autoScale)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withCacheSize(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withCacheSize(Integer cacheSize)"
  name: "withCacheSize(Integer cacheSize)"
  nameWithType: "BigDataPoolResourceInfoInner.withCacheSize(Integer cacheSize)"
  summary: "Set the cacheSize property: The cache size."
  parameters:
  - description: "the cacheSize value to set."
    name: "cacheSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withCacheSize(Integer cacheSize)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withCustomLibraries(java.util.List<com.azure.resourcemanager.synapse.fluent.models.LibraryInfo>)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withCustomLibraries(List<LibraryInfo> customLibraries)"
  name: "withCustomLibraries(List<LibraryInfo> customLibraries)"
  nameWithType: "BigDataPoolResourceInfoInner.withCustomLibraries(List<LibraryInfo> customLibraries)"
  summary: "Set the customLibraries property: List of custom libraries/packages associated with the spark pool."
  parameters:
  - description: "the customLibraries value to set."
    name: "customLibraries"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.fluent.models.LibraryInfo?alt=com.azure.resourcemanager.synapse.fluent.models.LibraryInfo&text=LibraryInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BigDataPoolResourceInfoInner withCustomLibraries(List<LibraryInfo> customLibraries)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withDefaultSparkLogFolder(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withDefaultSparkLogFolder(String defaultSparkLogFolder)"
  name: "withDefaultSparkLogFolder(String defaultSparkLogFolder)"
  nameWithType: "BigDataPoolResourceInfoInner.withDefaultSparkLogFolder(String defaultSparkLogFolder)"
  summary: "Set the defaultSparkLogFolder property: The default folder where Spark logs will be written."
  parameters:
  - description: "the defaultSparkLogFolder value to set."
    name: "defaultSparkLogFolder"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withDefaultSparkLogFolder(String defaultSparkLogFolder)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withDynamicExecutorAllocation(com.azure.resourcemanager.synapse.models.DynamicExecutorAllocation)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  name: "withDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  nameWithType: "BigDataPoolResourceInfoInner.withDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  summary: "Set the dynamicExecutorAllocation property: Dynamic Executor Allocation."
  parameters:
  - description: "the dynamicExecutorAllocation value to set."
    name: "dynamicExecutorAllocation"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.DynamicExecutorAllocation?alt=com.azure.resourcemanager.synapse.models.DynamicExecutorAllocation&text=DynamicExecutorAllocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withDynamicExecutorAllocation(DynamicExecutorAllocation dynamicExecutorAllocation)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withIsComputeIsolationEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  name: "withIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  nameWithType: "BigDataPoolResourceInfoInner.withIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  summary: "Set the isComputeIsolationEnabled property: Whether compute isolation is required or not."
  parameters:
  - description: "the isComputeIsolationEnabled value to set."
    name: "isComputeIsolationEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withIsComputeIsolationEnabled(Boolean isComputeIsolationEnabled)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withLibraryRequirements(com.azure.resourcemanager.synapse.models.LibraryRequirements)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withLibraryRequirements(LibraryRequirements libraryRequirements)"
  name: "withLibraryRequirements(LibraryRequirements libraryRequirements)"
  nameWithType: "BigDataPoolResourceInfoInner.withLibraryRequirements(LibraryRequirements libraryRequirements)"
  summary: "Set the libraryRequirements property: Spark pool library version requirements Library version requirements."
  parameters:
  - description: "the libraryRequirements value to set."
    name: "libraryRequirements"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.LibraryRequirements?alt=com.azure.resourcemanager.synapse.models.LibraryRequirements&text=LibraryRequirements\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withLibraryRequirements(LibraryRequirements libraryRequirements)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "BigDataPoolResourceInfoInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withNodeCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withNodeCount(Integer nodeCount)"
  name: "withNodeCount(Integer nodeCount)"
  nameWithType: "BigDataPoolResourceInfoInner.withNodeCount(Integer nodeCount)"
  summary: "Set the nodeCount property: The number of nodes in the Big Data pool."
  parameters:
  - description: "the nodeCount value to set."
    name: "nodeCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withNodeCount(Integer nodeCount)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withNodeSize(com.azure.resourcemanager.synapse.models.NodeSize)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withNodeSize(NodeSize nodeSize)"
  name: "withNodeSize(NodeSize nodeSize)"
  nameWithType: "BigDataPoolResourceInfoInner.withNodeSize(NodeSize nodeSize)"
  summary: "Set the nodeSize property: The level of compute power that each node in the Big Data pool has."
  parameters:
  - description: "the nodeSize value to set."
    name: "nodeSize"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.NodeSize?alt=com.azure.resourcemanager.synapse.models.NodeSize&text=NodeSize\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withNodeSize(NodeSize nodeSize)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withNodeSizeFamily(com.azure.resourcemanager.synapse.models.NodeSizeFamily)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  name: "withNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  nameWithType: "BigDataPoolResourceInfoInner.withNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  summary: "Set the nodeSizeFamily property: The kind of nodes that the Big Data pool provides."
  parameters:
  - description: "the nodeSizeFamily value to set."
    name: "nodeSizeFamily"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.NodeSizeFamily?alt=com.azure.resourcemanager.synapse.models.NodeSizeFamily&text=NodeSizeFamily\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withNodeSizeFamily(NodeSizeFamily nodeSizeFamily)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withProvisioningState(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withProvisioningState(String provisioningState)"
  name: "withProvisioningState(String provisioningState)"
  nameWithType: "BigDataPoolResourceInfoInner.withProvisioningState(String provisioningState)"
  summary: "Set the provisioningState property: The state of the Big Data pool."
  parameters:
  - description: "the provisioningState value to set."
    name: "provisioningState"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withProvisioningState(String provisioningState)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSessionLevelPackagesEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  name: "withSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  nameWithType: "BigDataPoolResourceInfoInner.withSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  summary: "Set the sessionLevelPackagesEnabled property: Whether session level packages enabled."
  parameters:
  - description: "the sessionLevelPackagesEnabled value to set."
    name: "sessionLevelPackagesEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withSessionLevelPackagesEnabled(Boolean sessionLevelPackagesEnabled)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSparkConfigProperties(com.azure.resourcemanager.synapse.models.SparkConfigProperties)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSparkConfigProperties(SparkConfigProperties sparkConfigProperties)"
  name: "withSparkConfigProperties(SparkConfigProperties sparkConfigProperties)"
  nameWithType: "BigDataPoolResourceInfoInner.withSparkConfigProperties(SparkConfigProperties sparkConfigProperties)"
  summary: "Set the sparkConfigProperties property: Spark pool Config Properties Spark configuration file to specify additional properties."
  parameters:
  - description: "the sparkConfigProperties value to set."
    name: "sparkConfigProperties"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withSparkConfigProperties(SparkConfigProperties sparkConfigProperties)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSparkEventsFolder(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSparkEventsFolder(String sparkEventsFolder)"
  name: "withSparkEventsFolder(String sparkEventsFolder)"
  nameWithType: "BigDataPoolResourceInfoInner.withSparkEventsFolder(String sparkEventsFolder)"
  summary: "Set the sparkEventsFolder property: The Spark events folder."
  parameters:
  - description: "the sparkEventsFolder value to set."
    name: "sparkEventsFolder"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withSparkEventsFolder(String sparkEventsFolder)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSparkVersion(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withSparkVersion(String sparkVersion)"
  name: "withSparkVersion(String sparkVersion)"
  nameWithType: "BigDataPoolResourceInfoInner.withSparkVersion(String sparkVersion)"
  summary: "Set the sparkVersion property: The Apache Spark version."
  parameters:
  - description: "the sparkVersion value to set."
    name: "sparkVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BigDataPoolResourceInfoInner withSparkVersion(String sparkVersion)"
  returns:
    description: "the BigDataPoolResourceInfoInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "BigDataPoolResourceInfoInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BigDataPoolResourceInfoInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner?alt=com.azure.resourcemanager.synapse.fluent.models.BigDataPoolResourceInfoInner&text=BigDataPoolResourceInfoInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.synapse.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.6
