### YamlMime:JavaType
uid: "org.apache.hc.core5.util.TimeValue"
fullName: "org.apache.hc.core5.util.TimeValue"
name: "TimeValue"
nameWithType: "TimeValue"
summary: "Represents a time value as a `long` time and a <xref uid=\"java.util.concurrent.TimeUnit\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeUnit\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TimeValue implements Comparable<TimeValue>"
fields:
- "org.apache.hc.core5.util.TimeValue.MAX_VALUE"
- "org.apache.hc.core5.util.TimeValue.NEG_ONE_MILLISECOND"
- "org.apache.hc.core5.util.TimeValue.NEG_ONE_SECOND"
- "org.apache.hc.core5.util.TimeValue.ZERO_MILLISECONDS"
methods:
- "org.apache.hc.core5.util.TimeValue.<T>defaultsTo(T,T)"
- "org.apache.hc.core5.util.TimeValue.asBoundInt(long)"
- "org.apache.hc.core5.util.TimeValue.compareTo(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.util.TimeValue.convert(java.util.concurrent.TimeUnit)"
- "org.apache.hc.core5.util.TimeValue.defaultsToNegativeOneMillisecond(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.util.TimeValue.defaultsToNegativeOneSecond(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.util.TimeValue.defaultsToZeroMilliseconds(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.util.TimeValue.divide(long)"
- "org.apache.hc.core5.util.TimeValue.divide(long,java.util.concurrent.TimeUnit)"
- "org.apache.hc.core5.util.TimeValue.equals(java.lang.Object)"
- "org.apache.hc.core5.util.TimeValue.getDuration()"
- "org.apache.hc.core5.util.TimeValue.getTimeUnit()"
- "org.apache.hc.core5.util.TimeValue.hashCode()"
- "org.apache.hc.core5.util.TimeValue.isNonNegative(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.util.TimeValue.isPositive(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.util.TimeValue.min(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.core5.util.TimeValue.of(long,java.util.concurrent.TimeUnit)"
- "org.apache.hc.core5.util.TimeValue.ofDays(long)"
- "org.apache.hc.core5.util.TimeValue.ofHours(long)"
- "org.apache.hc.core5.util.TimeValue.ofMicroseconds(long)"
- "org.apache.hc.core5.util.TimeValue.ofMilliseconds(long)"
- "org.apache.hc.core5.util.TimeValue.ofMinutes(long)"
- "org.apache.hc.core5.util.TimeValue.ofNanoseconds(long)"
- "org.apache.hc.core5.util.TimeValue.ofSeconds(long)"
- "org.apache.hc.core5.util.TimeValue.parse(java.lang.String)"
- "org.apache.hc.core5.util.TimeValue.sleep()"
- "org.apache.hc.core5.util.TimeValue.timedJoin(java.lang.Thread)"
- "org.apache.hc.core5.util.TimeValue.timedWait(java.lang.Object)"
- "org.apache.hc.core5.util.TimeValue.toDays()"
- "org.apache.hc.core5.util.TimeValue.toHours()"
- "org.apache.hc.core5.util.TimeValue.toMicroseconds()"
- "org.apache.hc.core5.util.TimeValue.toMilliseconds()"
- "org.apache.hc.core5.util.TimeValue.toMillisecondsIntBound()"
- "org.apache.hc.core5.util.TimeValue.toMinutes()"
- "org.apache.hc.core5.util.TimeValue.toNanoseconds()"
- "org.apache.hc.core5.util.TimeValue.toSeconds()"
- "org.apache.hc.core5.util.TimeValue.toSecondsIntBound()"
- "org.apache.hc.core5.util.TimeValue.toString()"
- "org.apache.hc.core5.util.TimeValue.toTimeout()"
type: "class"
implements:
- "<xref href=\"java.lang.Comparable?alt=java.lang.Comparable&text=Comparable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.util.TimeValue?alt=org.apache.hc.core5.util.TimeValue&text=TimeValue\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "org.apache.hc.core5.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
