### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.JsonMappingException
  id: JsonMappingException
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.io.Closeable,java.lang.String)
  - com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  - com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.io.Closeable,java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String)
  - com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  - com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  - com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.databind.JsonMappingException.Reference
  - com.fasterxml.jackson.databind.JsonMappingException._appendPathDesc(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.JsonMappingException._buildMessage()
  - com.fasterxml.jackson.databind.JsonMappingException._path
  - com.fasterxml.jackson.databind.JsonMappingException._processor
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String)
  - com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE(java.io.IOException)
  - com.fasterxml.jackson.databind.JsonMappingException.getLocalizedMessage()
  - com.fasterxml.jackson.databind.JsonMappingException.getMessage()
  - com.fasterxml.jackson.databind.JsonMappingException.getPath()
  - com.fasterxml.jackson.databind.JsonMappingException.getPathReference()
  - com.fasterxml.jackson.databind.JsonMappingException.getPathReference(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.JsonMappingException.getProcessor()
  - com.fasterxml.jackson.databind.JsonMappingException.prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
  - com.fasterxml.jackson.databind.JsonMappingException.prependPath(java.lang.Object,int)
  - com.fasterxml.jackson.databind.JsonMappingException.prependPath(java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.JsonMappingException.toString()
  - com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException.Reference)
  - com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(java.lang.Throwable,java.lang.Object,int)
  - com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
  langs:
  - java
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
  type: Class
  package: com.fasterxml.jackson.databind
  summary: >-
    Checked exception used to signal fatal problems with mapping of content, distinct from low-level I/O problems (signaled using simple <xref uid="java.io.IOException" data-throw-if-not-resolved="false">java.io.IOException</xref>s) or data encoding/decoding problems (signaled with <xref uid="com.fasterxml.jackson.core.JsonParseException" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonParseException</xref>, <xref uid="com.fasterxml.jackson.core.JsonGenerationException" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonGenerationException</xref>).


    One additional feature is the ability to denote relevant path of references (during serialization/deserialization) to help in troubleshooting.
  syntax:
    content: public class JsonMappingException extends JsonProcessingException
  inheritance:
  - java.lang.Object
  - java.lang.Throwable
  - java.lang.Exception
  - java.io.IOException
  - com.fasterxml.jackson.core.JsonProcessingException
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getMessage()
  - com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  - com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  - com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
  - com.fasterxml.jackson.core.JsonProcessingException.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.lang.Throwable.addSuppressed(java.lang.Throwable)
  - java.lang.Throwable.fillInStackTrace()
  - java.lang.Throwable.getCause()
  - java.lang.Throwable.getLocalizedMessage()
  - java.lang.Throwable.getStackTrace()
  - java.lang.Throwable.getSuppressed()
  - java.lang.Throwable.initCause(java.lang.Throwable)
  - java.lang.Throwable.printStackTrace()
  - java.lang.Throwable.printStackTrace(java.io.PrintStream)
  - java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  - java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.io.Closeable,java.lang.String)
  id: JsonMappingException(java.io.Closeable,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: JsonMappingException(Closeable processor, String msg)
  nameWithType: JsonMappingException.JsonMappingException(Closeable processor, String msg)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(Closeable processor, String msg)
  overload: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonMappingException(Closeable processor, String msg)
    parameters:
    - id: processor
      type: java.io.Closeable
    - id: msg
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  id: JsonMappingException(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: JsonMappingException(Closeable processor, String msg, JsonLocation loc)
  nameWithType: JsonMappingException.JsonMappingException(Closeable processor, String msg, JsonLocation loc)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(Closeable processor, String msg, JsonLocation loc)
  overload: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonMappingException(Closeable processor, String msg, JsonLocation loc)
    parameters:
    - id: processor
      type: java.io.Closeable
    - id: msg
      type: java.lang.String
    - id: loc
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.io.Closeable,java.lang.String,java.lang.Throwable)
  id: JsonMappingException(java.io.Closeable,java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: JsonMappingException(Closeable processor, String msg, Throwable problem)
  nameWithType: JsonMappingException.JsonMappingException(Closeable processor, String msg, Throwable problem)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(Closeable processor, String msg, Throwable problem)
  overload: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonMappingException(Closeable processor, String msg, Throwable problem)
    parameters:
    - id: processor
      type: java.io.Closeable
    - id: msg
      type: java.lang.String
    - id: problem
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String)
  id: JsonMappingException(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: JsonMappingException(String msg)
  nameWithType: JsonMappingException.JsonMappingException(String msg)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(String msg)
  overload: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonMappingException(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  id: JsonMappingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: JsonMappingException(String msg, JsonLocation loc)
  nameWithType: JsonMappingException.JsonMappingException(String msg, JsonLocation loc)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(String msg, JsonLocation loc)
  overload: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonMappingException(String msg, JsonLocation loc)
    parameters:
    - id: msg
      type: java.lang.String
    - id: loc
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  id: JsonMappingException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: JsonMappingException(String msg, JsonLocation loc, Throwable rootCause)
  nameWithType: JsonMappingException.JsonMappingException(String msg, JsonLocation loc, Throwable rootCause)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(String msg, JsonLocation loc, Throwable rootCause)
  overload: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonMappingException(String msg, JsonLocation loc, Throwable rootCause)
    parameters:
    - id: msg
      type: java.lang.String
    - id: loc
      type: com.fasterxml.jackson.core.JsonLocation
    - id: rootCause
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(java.lang.String,java.lang.Throwable)
  id: JsonMappingException(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: JsonMappingException(String msg, Throwable rootCause)
  nameWithType: JsonMappingException.JsonMappingException(String msg, Throwable rootCause)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException(String msg, Throwable rootCause)
  overload: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonMappingException(String msg, Throwable rootCause)
    parameters:
    - id: msg
      type: java.lang.String
    - id: rootCause
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.JsonMappingException._appendPathDesc(java.lang.StringBuilder)
  id: _appendPathDesc(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: _appendPathDesc(StringBuilder sb)
  nameWithType: JsonMappingException._appendPathDesc(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.JsonMappingException._appendPathDesc(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.JsonMappingException._appendPathDesc*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected void _appendPathDesc(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.JsonMappingException._buildMessage()
  id: _buildMessage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: _buildMessage()
  nameWithType: JsonMappingException._buildMessage()
  fullName: com.fasterxml.jackson.databind.JsonMappingException._buildMessage()
  overload: com.fasterxml.jackson.databind.JsonMappingException._buildMessage*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected String _buildMessage()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException._path
  id: _path
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: _path
  nameWithType: JsonMappingException._path
  fullName: com.fasterxml.jackson.databind.JsonMappingException._path
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Path through which problem that triggering throwing of this exception was reached.
  syntax:
    content: protected LinkedList<JsonMappingException.Reference> _path
    return:
      type: java.util.LinkedList<com.fasterxml.jackson.databind.JsonMappingException.Reference>
- uid: com.fasterxml.jackson.databind.JsonMappingException._processor
  id: _processor
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: _processor
  nameWithType: JsonMappingException._processor
  fullName: com.fasterxml.jackson.databind.JsonMappingException._processor
  type: Field
  package: com.fasterxml.jackson.databind
  summary: >-
    Underlying processor (<xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> or <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref>), if known.


    NOTE: typically not serializable hence `transient`
  syntax:
    content: protected transient Closeable _processor
    return:
      type: java.io.Closeable
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  id: from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(JsonGenerator g, String msg)
  nameWithType: JsonMappingException.from(JsonGenerator g, String msg)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(JsonGenerator g, String msg)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(JsonGenerator g, String msg)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: msg
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)
  id: from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(JsonGenerator g, String msg, Throwable problem)
  nameWithType: JsonMappingException.from(JsonGenerator g, String msg, Throwable problem)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(JsonGenerator g, String msg, Throwable problem)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(JsonGenerator g, String msg, Throwable problem)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: msg
      type: java.lang.String
    - id: problem
      type: java.lang.Throwable
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
  id: from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(JsonParser p, String msg)
  nameWithType: JsonMappingException.from(JsonParser p, String msg)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(JsonParser p, String msg)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(JsonParser p, String msg)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: msg
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
  id: from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(JsonParser p, String msg, Throwable problem)
  nameWithType: JsonMappingException.from(JsonParser p, String msg, Throwable problem)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(JsonParser p, String msg, Throwable problem)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(JsonParser p, String msg, Throwable problem)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: msg
      type: java.lang.String
    - id: problem
      type: java.lang.Throwable
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(DeserializationContext ctxt, String msg)
  nameWithType: JsonMappingException.from(DeserializationContext ctxt, String msg)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(DeserializationContext ctxt, String msg)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(DeserializationContext ctxt, String msg)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: msg
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable)
  id: from(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(DeserializationContext ctxt, String msg, Throwable t)
  nameWithType: JsonMappingException.from(DeserializationContext ctxt, String msg, Throwable t)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(DeserializationContext ctxt, String msg, Throwable t)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(DeserializationContext ctxt, String msg, Throwable t)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String)
  id: from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(SerializerProvider ctxt, String msg)
  nameWithType: JsonMappingException.from(SerializerProvider ctxt, String msg)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(SerializerProvider ctxt, String msg)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(SerializerProvider ctxt, String msg)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: msg
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String,java.lang.Throwable)
  id: from(com.fasterxml.jackson.databind.SerializerProvider,java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: from(SerializerProvider ctxt, String msg, Throwable problem)
  nameWithType: JsonMappingException.from(SerializerProvider ctxt, String msg, Throwable problem)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from(SerializerProvider ctxt, String msg, Throwable problem)
  overload: com.fasterxml.jackson.databind.JsonMappingException.from*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static JsonMappingException from(SerializerProvider ctxt, String msg, Throwable problem)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: msg
      type: java.lang.String
    - id: problem
      type: java.lang.Throwable
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE(java.io.IOException)
  id: fromUnexpectedIOE(java.io.IOException)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: fromUnexpectedIOE(IOException src)
  nameWithType: JsonMappingException.fromUnexpectedIOE(IOException src)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE(IOException src)
  overload: com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Factory method used when "upgrading" an <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref> into <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">JsonMappingException</xref>: usually only needed to comply with a signature.


    NOTE: since 2.9 should usually NOT be used on input-side (deserialization) exceptions; instead use method(s) of `InputMismatchException`
  syntax:
    content: public static JsonMappingException fromUnexpectedIOE(IOException src)
    parameters:
    - id: src
      type: java.io.IOException
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.getLocalizedMessage()
  id: getLocalizedMessage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: getLocalizedMessage()
  nameWithType: JsonMappingException.getLocalizedMessage()
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getLocalizedMessage()
  overload: com.fasterxml.jackson.databind.JsonMappingException.getLocalizedMessage*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public String getLocalizedMessage()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.getMessage()
  id: getMessage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: getMessage()
  nameWithType: JsonMappingException.getMessage()
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getMessage()
  overload: com.fasterxml.jackson.databind.JsonMappingException.getMessage*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method is overridden so that we can properly inject description of problem path, if such is defined.
  syntax:
    content: public String getMessage()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.getPath()
  id: getPath()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: getPath()
  nameWithType: JsonMappingException.getPath()
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getPath()
  overload: com.fasterxml.jackson.databind.JsonMappingException.getPath*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing full structural path within type hierarchy down to problematic property.
  syntax:
    content: public List<JsonMappingException.Reference> getPath()
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JsonMappingException.Reference>
- uid: com.fasterxml.jackson.databind.JsonMappingException.getPathReference()
  id: getPathReference()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: getPathReference()
  nameWithType: JsonMappingException.getPathReference()
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getPathReference()
  overload: com.fasterxml.jackson.databind.JsonMappingException.getPathReference*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for accessing description of path that lead to the problem that triggered this exception
  syntax:
    content: public String getPathReference()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.getPathReference(java.lang.StringBuilder)
  id: getPathReference(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: getPathReference(StringBuilder sb)
  nameWithType: JsonMappingException.getPathReference(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getPathReference(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.JsonMappingException.getPathReference*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public StringBuilder getPathReference(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.JsonMappingException.getProcessor()
  id: getProcessor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: getProcessor()
  nameWithType: JsonMappingException.getProcessor()
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getProcessor()
  overload: com.fasterxml.jackson.databind.JsonMappingException.getProcessor*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that allows accessing underlying processor that triggered this exception; typically either <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> or <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> for exceptions that originate from streaming API. Note that it is possible that \`null\` may be returned if code throwing exception either has no access to processor; or has not been retrofitted to set it; this means that caller needs to take care to check for nulls. Subtypes override this method with co-variant return type, for more type-safe access.
  syntax:
    content: public Object getProcessor()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.JsonMappingException.prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
  id: prependPath(com.fasterxml.jackson.databind.JsonMappingException.Reference)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: prependPath(JsonMappingException.Reference r)
  nameWithType: JsonMappingException.prependPath(JsonMappingException.Reference r)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.Reference r)
  overload: com.fasterxml.jackson.databind.JsonMappingException.prependPath*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void prependPath(JsonMappingException.Reference r)
    parameters:
    - id: r
      type: com.fasterxml.jackson.databind.JsonMappingException.Reference
- uid: com.fasterxml.jackson.databind.JsonMappingException.prependPath(java.lang.Object,int)
  id: prependPath(java.lang.Object,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: prependPath(Object referrer, int index)
  nameWithType: JsonMappingException.prependPath(Object referrer, int index)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.prependPath(Object referrer, int index)
  overload: com.fasterxml.jackson.databind.JsonMappingException.prependPath*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to prepend a reference information in front of current path
  syntax:
    content: public void prependPath(Object referrer, int index)
    parameters:
    - id: referrer
      type: java.lang.Object
    - id: index
      type: int
- uid: com.fasterxml.jackson.databind.JsonMappingException.prependPath(java.lang.Object,java.lang.String)
  id: prependPath(java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: prependPath(Object referrer, String fieldName)
  nameWithType: JsonMappingException.prependPath(Object referrer, String fieldName)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.prependPath(Object referrer, String fieldName)
  overload: com.fasterxml.jackson.databind.JsonMappingException.prependPath*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to prepend a reference information in front of current path
  syntax:
    content: public void prependPath(Object referrer, String fieldName)
    parameters:
    - id: referrer
      type: java.lang.Object
    - id: fieldName
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: toString()
  nameWithType: JsonMappingException.toString()
  fullName: com.fasterxml.jackson.databind.JsonMappingException.toString()
  overload: com.fasterxml.jackson.databind.JsonMappingException.toString*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException.Reference)
  id: wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException.Reference)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: wrapWithPath(Throwable src, JsonMappingException.Reference ref)
  nameWithType: JsonMappingException.wrapWithPath(Throwable src, JsonMappingException.Reference ref)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(Throwable src, JsonMappingException.Reference ref)
  overload: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that can be called to either create a new JsonMappingException (if underlying exception is not a JsonMappingException), or augment given exception with given path/reference information.
  syntax:
    content: public static JsonMappingException wrapWithPath(Throwable src, JsonMappingException.Reference ref)
    parameters:
    - id: src
      type: java.lang.Throwable
    - id: ref
      type: com.fasterxml.jackson.databind.JsonMappingException.Reference
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(java.lang.Throwable,java.lang.Object,int)
  id: wrapWithPath(java.lang.Throwable,java.lang.Object,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: wrapWithPath(Throwable src, Object refFrom, int index)
  nameWithType: JsonMappingException.wrapWithPath(Throwable src, Object refFrom, int index)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(Throwable src, Object refFrom, int index)
  overload: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that can be called to either create a new JsonMappingException (if underlying exception is not a JsonMappingException), or augment given exception with given path/reference information. This version of method is called when the reference is through an index, which happens with arrays and Collections.
  syntax:
    content: public static JsonMappingException wrapWithPath(Throwable src, Object refFrom, int index)
    parameters:
    - id: src
      type: java.lang.Throwable
    - id: refFrom
      type: java.lang.Object
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
  id: wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.JsonMappingException
  langs:
  - java
  name: wrapWithPath(Throwable src, Object refFrom, String refFieldName)
  nameWithType: JsonMappingException.wrapWithPath(Throwable src, Object refFrom, String refFieldName)
  fullName: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(Throwable src, Object refFrom, String refFieldName)
  overload: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that can be called to either create a new JsonMappingException (if underlying exception is not a JsonMappingException), or augment given exception with given path/reference information. This version of method is called when the reference is through a non-indexed object, such as a Map or POJO/bean.
  syntax:
    content: public static JsonMappingException wrapWithPath(Throwable src, Object refFrom, String refFieldName)
    parameters:
    - id: src
      type: java.lang.Throwable
    - id: refFrom
      type: java.lang.Object
    - id: refFieldName
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException*
  name: JsonMappingException
  nameWithType: JsonMappingException.JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException.JsonMappingException
  package: com.fasterxml.jackson.databind
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.fasterxml.jackson.core.JsonLocation
  name: JsonLocation
  nameWithType: JsonLocation
  fullName: com.fasterxml.jackson.core.JsonLocation
- uid: java.io.Closeable
  spec.java:
  - uid: java.io.Closeable
    name: Closeable
    fullName: java.io.Closeable
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.JsonMappingException.from*
  name: from
  nameWithType: JsonMappingException.from
  fullName: com.fasterxml.jackson.databind.JsonMappingException.from
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE*
  name: fromUnexpectedIOE
  nameWithType: JsonMappingException.fromUnexpectedIOE
  fullName: com.fasterxml.jackson.databind.JsonMappingException.fromUnexpectedIOE
  package: com.fasterxml.jackson.databind
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath*
  name: wrapWithPath
  nameWithType: JsonMappingException.wrapWithPath
  fullName: com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath
  package: com.fasterxml.jackson.databind
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.JsonMappingException.Reference
  name: JsonMappingException.Reference
  nameWithType: JsonMappingException.Reference
  fullName: com.fasterxml.jackson.databind.JsonMappingException.Reference
- uid: java.util.List<com.fasterxml.jackson.databind.JsonMappingException.Reference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonMappingException.Reference
    name: Reference
    fullName: com.fasterxml.jackson.databind.JsonMappingException.Reference
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonMappingException.getPath*
  name: getPath
  nameWithType: JsonMappingException.getPath
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getPath
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException.getPathReference*
  name: getPathReference
  nameWithType: JsonMappingException.getPathReference
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getPathReference
  package: com.fasterxml.jackson.databind
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.JsonMappingException.prependPath*
  name: prependPath
  nameWithType: JsonMappingException.prependPath
  fullName: com.fasterxml.jackson.databind.JsonMappingException.prependPath
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException.getProcessor*
  name: getProcessor
  nameWithType: JsonMappingException.getProcessor
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getProcessor
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException.getLocalizedMessage*
  name: getLocalizedMessage
  nameWithType: JsonMappingException.getLocalizedMessage
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getLocalizedMessage
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException.getMessage*
  name: getMessage
  nameWithType: JsonMappingException.getMessage
  fullName: com.fasterxml.jackson.databind.JsonMappingException.getMessage
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException._buildMessage*
  name: _buildMessage
  nameWithType: JsonMappingException._buildMessage
  fullName: com.fasterxml.jackson.databind.JsonMappingException._buildMessage
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException.toString*
  name: toString
  nameWithType: JsonMappingException.toString
  fullName: com.fasterxml.jackson.databind.JsonMappingException.toString
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JsonMappingException._appendPathDesc*
  name: _appendPathDesc
  nameWithType: JsonMappingException._appendPathDesc
  fullName: com.fasterxml.jackson.databind.JsonMappingException._appendPathDesc
  package: com.fasterxml.jackson.databind
- uid: java.util.LinkedList<com.fasterxml.jackson.databind.JsonMappingException.Reference>
  spec.java:
  - uid: java.util.LinkedList
    name: LinkedList
    fullName: java.util.LinkedList
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JsonMappingException.Reference
    name: Reference
    fullName: com.fasterxml.jackson.databind.JsonMappingException.Reference
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Throwable.getCause()
  name: Throwable.getCause()
  nameWithType: Throwable.getCause()
  fullName: java.lang.Throwable.getCause()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.JsonProcessingException.toString()
  name: JsonProcessingException.toString()
  nameWithType: JsonProcessingException.toString()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.toString()
- uid: java.lang.Throwable.fillInStackTrace()
  name: Throwable.fillInStackTrace()
  nameWithType: Throwable.fillInStackTrace()
  fullName: java.lang.Throwable.fillInStackTrace()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Throwable.initCause(java.lang.Throwable)
  name: Throwable.initCause(Throwable)
  nameWithType: Throwable.initCause(Throwable)
  fullName: java.lang.Throwable.initCause(java.lang.Throwable)
- uid: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  name: JsonProcessingException.getLocation()
  nameWithType: JsonProcessingException.getLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  name: JsonProcessingException.getMessageSuffix()
  nameWithType: JsonProcessingException.getMessageSuffix()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
- uid: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  name: Throwable.setStackTrace(StackTraceElement[])
  nameWithType: Throwable.setStackTrace(StackTraceElement[])
  fullName: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: java.lang.Throwable.getSuppressed()
  name: Throwable.getSuppressed()
  nameWithType: Throwable.getSuppressed()
  fullName: java.lang.Throwable.getSuppressed()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Throwable.getStackTrace()
  name: Throwable.getStackTrace()
  nameWithType: Throwable.getStackTrace()
  fullName: java.lang.Throwable.getStackTrace()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Throwable.getLocalizedMessage()
  name: Throwable.getLocalizedMessage()
  nameWithType: Throwable.getLocalizedMessage()
  fullName: java.lang.Throwable.getLocalizedMessage()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessage()
  name: JsonProcessingException.getMessage()
  nameWithType: JsonProcessingException.getMessage()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessage()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  name: Throwable.printStackTrace(PrintWriter)
  nameWithType: Throwable.printStackTrace(PrintWriter)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
- uid: java.lang.Throwable.addSuppressed(java.lang.Throwable)
  name: Throwable.addSuppressed(Throwable)
  nameWithType: Throwable.addSuppressed(Throwable)
  fullName: java.lang.Throwable.addSuppressed(java.lang.Throwable)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  name: JsonProcessingException.getOriginalMessage()
  nameWithType: JsonProcessingException.getOriginalMessage()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
- uid: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  name: JsonProcessingException.clearLocation()
  nameWithType: JsonProcessingException.clearLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
  name: JsonProcessingException.getProcessor()
  nameWithType: JsonProcessingException.getProcessor()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintStream)
  name: Throwable.printStackTrace(PrintStream)
  nameWithType: Throwable.printStackTrace(PrintStream)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintStream)
- uid: java.lang.Throwable.printStackTrace()
  name: Throwable.printStackTrace()
  nameWithType: Throwable.printStackTrace()
  fullName: java.lang.Throwable.printStackTrace()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.util.LinkedList
  name: LinkedList
  nameWithType: LinkedList
  fullName: java.util.LinkedList
