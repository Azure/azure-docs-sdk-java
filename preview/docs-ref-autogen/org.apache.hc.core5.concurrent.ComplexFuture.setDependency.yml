### YamlMime:JavaMember
uid: "org.apache.hc.core5.concurrent.ComplexFuture.setDependency*"
fullName: "org.apache.hc.core5.concurrent.ComplexFuture<T>.setDependency"
name: "setDependency"
nameWithType: "ComplexFuture<T>.setDependency"
members:
- uid: "org.apache.hc.core5.concurrent.ComplexFuture.setDependency(java.util.concurrent.Future<?>)"
  fullName: "org.apache.hc.core5.concurrent.ComplexFuture<T>.setDependency(Future<?> dependency)"
  name: "setDependency(Future<?> dependency)"
  nameWithType: "ComplexFuture<T>.setDependency(Future<?> dependency)"
  parameters:
  - name: "dependency"
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public void setDependency(Future<?> dependency)"
- uid: "org.apache.hc.core5.concurrent.ComplexFuture.setDependency(org.apache.hc.core5.concurrent.Cancellable)"
  fullName: "org.apache.hc.core5.concurrent.ComplexFuture<T>.setDependency(Cancellable dependency)"
  name: "setDependency(Cancellable dependency)"
  nameWithType: "ComplexFuture<T>.setDependency(Cancellable dependency)"
  summary: "Sets <xref uid=\"org.apache.hc.core5.concurrent.Cancellable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Cancellable\"></xref> dependency on another ongoing process or operation represented by <xref uid=\"org.apache.hc.core5.concurrent.Cancellable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Cancellable\"></xref>."
  parameters:
  - name: "dependency"
    type: "<xref href=\"org.apache.hc.core5.concurrent.Cancellable?alt=org.apache.hc.core5.concurrent.Cancellable&text=Cancellable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setDependency(Cancellable dependency)"
type: "method"
metadata: {}
package: "org.apache.hc.core5.concurrent"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
