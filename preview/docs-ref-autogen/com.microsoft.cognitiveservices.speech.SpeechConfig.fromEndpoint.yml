### YamlMime:JavaMember
uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint*"
fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint"
name: "fromEndpoint"
nameWithType: "SpeechConfig.fromEndpoint"
members:
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(URI endpoint)"
  name: "fromEndpoint(URI endpoint)"
  nameWithType: "SpeechConfig.fromEndpoint(URI endpoint)"
  summary: "Creates an instance of the speech config with specified endpoint. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter \"language=de-DE\", and also set by setSpeechRecognitionLanguage(\"en-US\"), the language setting in URI takes precedence, and the effective language is \"de-DE\". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: if the endpoint requires a subscription key for authentication, please use fromEndpoint(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromEndpoint, use this method to create a SpeechConfig instance, and then call setAuthorizationToken() on the created SpeechConfig instance. Note: Added in version 1.5.0."
  parameters:
  - description: "The service endpoint to connect to."
    name: "endpoint"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromEndpoint(URI endpoint)"
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(URI endpoint, String subscriptionKey)"
  name: "fromEndpoint(URI endpoint, String subscriptionKey)"
  nameWithType: "SpeechConfig.fromEndpoint(URI endpoint, String subscriptionKey)"
  summary: "Creates an instance of the speech config with specified endpoint and subscription key. This method is intended only for users who use a non-standard service endpoint or parameters. Note: The query parameters specified in the endpoint URI are not changed, even if they are set by any other APIs. For example, if the recognition language is defined in URI as query parameter \"language=de-DE\", and also set by setSpeechRecognitionLanguage(\"en-US\"), the language setting in URI takes precedence, and the effective language is \"de-DE\". Only the parameters that are not specified in the endpoint URI can be set by other APIs. Note: To use an authorization token with fromEndpoint, please use fromEndpoint(java.net.URI), and then call setAuthorizationToken() on the created SpeechConfig instance."
  parameters:
  - description: "The service endpoint to connect to."
    name: "endpoint"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subscription key."
    name: "subscriptionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechConfig fromEndpoint(URI endpoint, String subscriptionKey)"
  returns:
    description: "A speech config instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.cognitiveservices.speech"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.23.0-alpha.0.29223413
