### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap"
fullName: "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>"
name: "CaseInsensitiveMap<K,V>"
nameWithType: "CaseInsensitiveMap<K,V>"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractMap\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addMapping(int,int,K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateNewCapacity(int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateThreshold(int,float)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.checkCapacity()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clear()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clone()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsKey(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsValue(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.convertKey(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntrySetIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createKeySetIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createValuesIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.ensureCapacity(int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryHashCode(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryKey(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryNext(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entrySet()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryValue(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.get(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.getEntry(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hash(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashCode()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashIndex(int,int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.init()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEmpty()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.keySet()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.mapIterator()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.put(K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.putAll(java.util.Map<? extends K,? extends V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeMapping(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.reuseEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,int,K,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.size()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.toString()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.updateEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,V)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.values()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CaseInsensitiveMap<K,V> extends AbstractHashedMap<K,V> implements Serializable, Cloneable"
constructors:
- "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(int)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(int,float)"
- "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(java.util.Map<? extends K,? extends V>)"
methods:
- "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.clone()"
- "com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.convertKey(java.lang.Object)"
type: "class"
typeParameters:
- name: "K"
- name: "V"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Cloneable?alt=java.lang.Cloneable&text=Cloneable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.collections.map"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
