### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  id: CaseInsensitiveMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map
  children:
  - com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap()
  - com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(int)
  - com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(int,float)
  - com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.clone()
  - com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.convertKey(java.lang.Object)
  langs:
  - java
  name: CaseInsensitiveMap<K,V>
  nameWithType: CaseInsensitiveMap<K,V>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public class CaseInsensitiveMap<K,V> extends AbstractHashedMap<K,V> implements Serializable, Cloneable
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - java.util.AbstractMap
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap
  implements:
  - java.io.Serializable
  - java.lang.Cloneable
  inheritedMembers:
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addMapping(int,int,K,V)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateNewCapacity(int)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateThreshold(int,float)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.checkCapacity()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clear()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clone()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.convertKey(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,K,V)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntrySetIterator()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createKeySetIterator()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createValuesIterator()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.ensureCapacity(int)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryHashCode(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryKey(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryNext(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entrySet()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryValue(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.get(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.getEntry(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hash(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashCode()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashIndex(int,int)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.init()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEmpty()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.keySet()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.mapIterator()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.put(K,V)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.putAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.remove(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeMapping(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.reuseEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,int,K,V)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.size()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.toString()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.updateEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,V)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.values()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap()
  id: CaseInsensitiveMap()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  langs:
  - java
  name: CaseInsensitiveMap()
  nameWithType: CaseInsensitiveMap<K,V>.CaseInsensitiveMap()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.CaseInsensitiveMap()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Constructs a new empty map with default size and load factor.
  syntax:
    content: public CaseInsensitiveMap()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(int)
  id: CaseInsensitiveMap(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  langs:
  - java
  name: CaseInsensitiveMap(int initialCapacity)
  nameWithType: CaseInsensitiveMap<K,V>.CaseInsensitiveMap(int initialCapacity)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.CaseInsensitiveMap(int initialCapacity)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Constructs a new, empty map with the specified initial capacity.
  syntax:
    content: public CaseInsensitiveMap(int initialCapacity)
    parameters:
    - id: initialCapacity
      type: int
      description: the initial capacity
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(int,float)
  id: CaseInsensitiveMap(int,float)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  langs:
  - java
  name: CaseInsensitiveMap(int initialCapacity, float loadFactor)
  nameWithType: CaseInsensitiveMap<K,V>.CaseInsensitiveMap(int initialCapacity, float loadFactor)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.CaseInsensitiveMap(int initialCapacity, float loadFactor)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Constructs a new, empty map with the specified initial capacity and load factor.
  syntax:
    content: public CaseInsensitiveMap(int initialCapacity, float loadFactor)
    parameters:
    - id: initialCapacity
      type: int
      description: the initial capacity
    - id: loadFactor
      type: float
      description: the load factor
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap(java.util.Map<? extends K,? extends V>)
  id: CaseInsensitiveMap(java.util.Map<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  langs:
  - java
  name: CaseInsensitiveMap(Map<? extends K,? extends V> map)
  nameWithType: CaseInsensitiveMap<K,V>.CaseInsensitiveMap(Map<? extends K,? extends V> map)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.CaseInsensitiveMap(Map<? extends K,? extends V> map)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: >-
    Constructor copying elements from another map.


    Keys will be converted to lower case strings, which may cause some entries to be removed (if string representation of keys differ only by character case).
  syntax:
    content: public CaseInsensitiveMap(Map<? extends K,? extends V> map)
    parameters:
    - id: map
      type: java.util.Map<? extends K,? extends V>
      description: the map to copy
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.clone()
  id: clone()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  langs:
  - java
  name: clone()
  nameWithType: CaseInsensitiveMap<K,V>.clone()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.clone()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.clone*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Clones the map without cloning the keys or values.
  syntax:
    content: public CaseInsensitiveMap<K,V> clone()
    return:
      type: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>
      description: a shallow clone
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.convertKey(java.lang.Object)
  id: convertKey(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  langs:
  - java
  name: convertKey(Object key)
  nameWithType: CaseInsensitiveMap<K,V>.convertKey(Object key)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.convertKey(Object key)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.convertKey*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: >-
    Overrides convertKey() from <xref uid="com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap" data-throw-if-not-resolved="false">AbstractHashedMap</xref> to convert keys to lower case.


    Returns <xref uid="com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.NULL" data-throw-if-not-resolved="false">AbstractHashedMap#NULL</xref> if key is null.
  syntax:
    content: protected Object convertKey(Object key)
    parameters:
    - id: key
      type: java.lang.Object
      description: the key convert
    return:
      type: java.lang.Object
      description: the converted key
references:
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.CaseInsensitiveMap*
  name: CaseInsensitiveMap
  nameWithType: CaseInsensitiveMap<K,V>.CaseInsensitiveMap
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.CaseInsensitiveMap
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: float
  spec.java:
  - uid: float
    name: float
    fullName: float
- uid: java.util.Map<? extends K,? extends V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.convertKey*
  name: convertKey
  nameWithType: CaseInsensitiveMap<K,V>.convertKey
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.convertKey
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
    name: CaseInsensitiveMap
    fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap.clone*
  name: clone
  nameWithType: CaseInsensitiveMap<K,V>.clone
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.CaseInsensitiveMap<K,V>.clone
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<K,V>
  name: AbstractHashedMap<K,V>
  nameWithType: AbstractHashedMap<K,V>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap<K,V>
- uid: java.lang.Cloneable
  name: Cloneable
  nameWithType: Cloneable
  fullName: java.lang.Cloneable
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.mapIterator()
  name: AbstractHashedMap.mapIterator()
  nameWithType: AbstractHashedMap.mapIterator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.mapIterator()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createKeySetIterator()
  name: AbstractHashedMap.createKeySetIterator()
  nameWithType: AbstractHashedMap.createKeySetIterator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createKeySetIterator()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.updateEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,V)
  name: AbstractHashedMap.updateEntry(AbstractHashedMap.HashEntry<K,V>,V)
  nameWithType: AbstractHashedMap.updateEntry(AbstractHashedMap.HashEntry<K,V>,V)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.updateEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,V)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.toString()
  name: AbstractHashedMap.toString()
  nameWithType: AbstractHashedMap.toString()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.toString()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)
  name: AbstractHashedMap.isEqualKey(Object,Object)
  nameWithType: AbstractHashedMap.isEqualKey(Object,Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualKey(java.lang.Object,java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,K,V)
  name: AbstractHashedMap.createEntry(AbstractHashedMap.HashEntry<K,V>,int,K,V)
  nameWithType: AbstractHashedMap.createEntry(AbstractHashedMap.HashEntry<K,V>,int,K,V)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,K,V)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeMapping(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  name: AbstractHashedMap.removeMapping(AbstractHashedMap.HashEntry<K,V>,int,AbstractHashedMap.HashEntry<K,V>)
  nameWithType: AbstractHashedMap.removeMapping(AbstractHashedMap.HashEntry<K,V>,int,AbstractHashedMap.HashEntry<K,V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeMapping(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.size()
  name: AbstractHashedMap.size()
  nameWithType: AbstractHashedMap.size()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.size()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntrySetIterator()
  name: AbstractHashedMap.createEntrySetIterator()
  nameWithType: AbstractHashedMap.createEntrySetIterator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntrySetIterator()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsValue(java.lang.Object)
  name: AbstractHashedMap.containsValue(Object)
  nameWithType: AbstractHashedMap.containsValue(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsValue(java.lang.Object)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryHashCode(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  name: AbstractHashedMap.entryHashCode(AbstractHashedMap.HashEntry<K,V>)
  nameWithType: AbstractHashedMap.entryHashCode(AbstractHashedMap.HashEntry<K,V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryHashCode(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.keySet()
  name: AbstractHashedMap.keySet()
  nameWithType: AbstractHashedMap.keySet()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.keySet()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEmpty()
  name: AbstractHashedMap.isEmpty()
  nameWithType: AbstractHashedMap.isEmpty()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEmpty()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addMapping(int,int,K,V)
  name: AbstractHashedMap.addMapping(int,int,K,V)
  nameWithType: AbstractHashedMap.addMapping(int,int,K,V)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addMapping(int,int,K,V)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.init()
  name: AbstractHashedMap.init()
  nameWithType: AbstractHashedMap.init()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.init()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.checkCapacity()
  name: AbstractHashedMap.checkCapacity()
  nameWithType: AbstractHashedMap.checkCapacity()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.checkCapacity()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  name: AbstractHashedMap.removeEntry(AbstractHashedMap.HashEntry<K,V>,int,AbstractHashedMap.HashEntry<K,V>)
  nameWithType: AbstractHashedMap.removeEntry(AbstractHashedMap.HashEntry<K,V>,int,AbstractHashedMap.HashEntry<K,V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)
  name: AbstractHashedMap.doReadObject(ObjectInputStream)
  nameWithType: AbstractHashedMap.doReadObject(ObjectInputStream)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doReadObject(java.io.ObjectInputStream)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryNext(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  name: AbstractHashedMap.entryNext(AbstractHashedMap.HashEntry<K,V>)
  nameWithType: AbstractHashedMap.entryNext(AbstractHashedMap.HashEntry<K,V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryNext(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateThreshold(int,float)
  name: AbstractHashedMap.calculateThreshold(int,float)
  nameWithType: AbstractHashedMap.calculateThreshold(int,float)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateThreshold(int,float)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)
  name: AbstractHashedMap.isEqualValue(Object,Object)
  nameWithType: AbstractHashedMap.isEqualValue(Object,Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.isEqualValue(java.lang.Object,java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hash(java.lang.Object)
  name: AbstractHashedMap.hash(Object)
  nameWithType: AbstractHashedMap.hash(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hash(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)
  name: AbstractHashedMap.doWriteObject(ObjectOutputStream)
  nameWithType: AbstractHashedMap.doWriteObject(ObjectOutputStream)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.doWriteObject(java.io.ObjectOutputStream)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashIndex(int,int)
  name: AbstractHashedMap.hashIndex(int,int)
  nameWithType: AbstractHashedMap.hashIndex(int,int)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashIndex(int,int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  name: AbstractHashedMap.destroyEntry(AbstractHashedMap.HashEntry<K,V>)
  nameWithType: AbstractHashedMap.destroyEntry(AbstractHashedMap.HashEntry<K,V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entrySet()
  name: AbstractHashedMap.entrySet()
  nameWithType: AbstractHashedMap.entrySet()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entrySet()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.get(java.lang.Object)
  name: AbstractHashedMap.get(Object)
  nameWithType: AbstractHashedMap.get(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.get(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.equals(java.lang.Object)
  name: AbstractHashedMap.equals(Object)
  nameWithType: AbstractHashedMap.equals(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.ensureCapacity(int)
  name: AbstractHashedMap.ensureCapacity(int)
  nameWithType: AbstractHashedMap.ensureCapacity(int)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.ensureCapacity(int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.getEntry(java.lang.Object)
  name: AbstractHashedMap.getEntry(Object)
  nameWithType: AbstractHashedMap.getEntry(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.getEntry(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryValue(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  name: AbstractHashedMap.entryValue(AbstractHashedMap.HashEntry<K,V>)
  nameWithType: AbstractHashedMap.entryValue(AbstractHashedMap.HashEntry<K,V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryValue(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.remove(java.lang.Object)
  name: AbstractHashedMap.remove(Object)
  nameWithType: AbstractHashedMap.remove(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.remove(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashCode()
  name: AbstractHashedMap.hashCode()
  nameWithType: AbstractHashedMap.hashCode()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.hashCode()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createValuesIterator()
  name: AbstractHashedMap.createValuesIterator()
  nameWithType: AbstractHashedMap.createValuesIterator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createValuesIterator()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.convertKey(java.lang.Object)
  name: AbstractHashedMap.convertKey(Object)
  nameWithType: AbstractHashedMap.convertKey(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.convertKey(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clone()
  name: AbstractHashedMap.clone()
  nameWithType: AbstractHashedMap.clone()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clone()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateNewCapacity(int)
  name: AbstractHashedMap.calculateNewCapacity(int)
  nameWithType: AbstractHashedMap.calculateNewCapacity(int)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.calculateNewCapacity(int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryKey(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
  name: AbstractHashedMap.entryKey(AbstractHashedMap.HashEntry<K,V>)
  nameWithType: AbstractHashedMap.entryKey(AbstractHashedMap.HashEntry<K,V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryKey(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clear()
  name: AbstractHashedMap.clear()
  nameWithType: AbstractHashedMap.clear()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.clear()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.values()
  name: AbstractHashedMap.values()
  nameWithType: AbstractHashedMap.values()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.values()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int)
  name: AbstractHashedMap.addEntry(AbstractHashedMap.HashEntry<K,V>,int)
  nameWithType: AbstractHashedMap.addEntry(AbstractHashedMap.HashEntry<K,V>,int)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.put(K,V)
  name: AbstractHashedMap.put(K,V)
  nameWithType: AbstractHashedMap.put(K,V)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.put(K,V)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsKey(java.lang.Object)
  name: AbstractHashedMap.containsKey(Object)
  nameWithType: AbstractHashedMap.containsKey(Object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.containsKey(java.lang.Object)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.putAll(java.util.Map<? extends K,? extends V>)
  name: AbstractHashedMap.putAll(Map<? extends K,? extends V>)
  nameWithType: AbstractHashedMap.putAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.putAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.reuseEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,int,K,V)
  name: AbstractHashedMap.reuseEntry(AbstractHashedMap.HashEntry<K,V>,int,int,K,V)
  nameWithType: AbstractHashedMap.reuseEntry(AbstractHashedMap.HashEntry<K,V>,int,int,K,V)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.reuseEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry<K,V>,int,int,K,V)
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: '? extends K,? extends V'
  name: '? extends K,? extends V'
  nameWithType: '? extends K,? extends V'
  fullName: '? extends K,? extends V'
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap
  name: AbstractHashedMap
  nameWithType: AbstractHashedMap
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap
- uid: K,V>,V)
  name: K,V>,V)
  nameWithType: K,V>,V)
  fullName: K,V>,V)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.updateEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.updateEntry(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.updateEntry(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.updateEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: K,V>,int,K,V)
  name: K,V>,int,K,V)
  nameWithType: K,V>,int,K,V)
  fullName: K,V>,int,K,V)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.createEntry(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.createEntry(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.createEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: K,V>)
  name: K,V>)
  nameWithType: K,V>)
  fullName: K,V>)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeMapping(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.removeMapping(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.removeMapping(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeMapping(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: K,V>,int,AbstractHashedMap.HashEntry
  nameWithType: K,V>,int,AbstractHashedMap.HashEntry
  fullName: K,V>,int,com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryHashCode(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.entryHashCode(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.entryHashCode(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryHashCode(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.removeEntry(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.removeEntry(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.removeEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryNext(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.entryNext(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.entryNext(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryNext(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.destroyEntry(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.destroyEntry(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.destroyEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryValue(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.entryValue(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.entryValue(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryValue(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryKey(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.entryKey(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.entryKey(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.entryKey(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.addEntry(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.addEntry(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.addEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: K,V>,int)
  name: K,V>,int)
  nameWithType: K,V>,int)
  fullName: K,V>,int)
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.putAll(java.util.Map
  name: AbstractHashedMap.putAll(Map
  nameWithType: AbstractHashedMap.putAll(Map
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.putAll(java.util.Map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.reuseEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
  name: AbstractHashedMap.reuseEntry(AbstractHashedMap.HashEntry
  nameWithType: AbstractHashedMap.reuseEntry(AbstractHashedMap.HashEntry
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.reuseEntry(com.azure.cosmos.implementation.apachecommons.collections.map.AbstractHashedMap.HashEntry
- uid: K,V>,int,int,K,V)
  name: K,V>,int,int,K,V)
  nameWithType: K,V>,int,int,K,V)
  fullName: K,V>,int,int,K,V)
