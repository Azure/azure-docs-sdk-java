### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>"
name: "ImmutableList<E>"
nameWithType: "ImmutableList<E>"
summary: "A <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"List\"></xref> whose contents will never change, with many other important properties detailed at <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableCollection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableCollection\"></xref>.\n\nSee the Guava User Guide article on [ immutable collections][immutable collections].\n\n\n[immutable collections]: https://github.com/google/guava/wiki/ImmutableCollectionsExplained"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableCollection\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.<T>toArray(T[])"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.add(E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.addAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.asList()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.clear()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.removeIf(java.util.function.Predicate<? super E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.retainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.spliterator()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableCollection.toArray()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractCollection.containsAll(java.util.Collection<?>)"
- "java.util.AbstractCollection.isEmpty()"
- "java.util.AbstractCollection.size()"
- "java.util.AbstractCollection.toString()"
syntax: "public abstract class ImmutableList<E> extends ImmutableCollection<E> implements List<E>, RandomAccess"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>builder()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>builderWithExpectedSize(int)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>copyOf(E[])"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>copyOf(java.lang.Iterable<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>copyOf(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>copyOf(java.util.Iterator<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E,E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>of(E,E,E,E,E,E,E,E,E,E,E,E,E...)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>sortedCopyOf(java.lang.Iterable<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>sortedCopyOf(java.util.Comparator<? super E>,java.lang.Iterable<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>toImmutableList()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.add(int,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.addAll(int,java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.asList()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.forEach(java.util.function.Consumer<? super E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.hashCode()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.indexOf(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.lastIndexOf(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.listIterator()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.listIterator(int)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.remove(int)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.replaceAll(java.util.function.UnaryOperator<E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.reverse()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.set(int,E)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.sort(java.util.Comparator<? super E>)"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.spliterator()"
- "com.azure.cosmos.implementation.guava25.collect.ImmutableList.subList(int,int)"
type: "class"
typeParameters:
- name: "E"
implements:
- "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"java.util.RandomAccess?alt=java.util.RandomAccess&text=RandomAccess\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
