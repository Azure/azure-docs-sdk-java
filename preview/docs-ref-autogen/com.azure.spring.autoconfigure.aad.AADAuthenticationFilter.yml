### YamlMime:ManagedReference
items:
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter
  id: AADAuthenticationFilter
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.aad
  children:
  - com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.azure.spring.autoconfigure.aad.UserPrincipalManager)
  - com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.nimbusds.jose.util.ResourceRetriever)
  - com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.nimbusds.jose.util.ResourceRetriever,com.nimbusds.jose.jwk.source.JWKSetCache)
  - com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  langs:
  - java
  name: AADAuthenticationFilter
  nameWithType: AADAuthenticationFilter
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter
  type: Class
  package: com.azure.spring.autoconfigure.aad
  summary: A stateful authentication filter which uses Microsoft Graph groups to authorize. Both ID token and access token are supported. In the case of access token, only access token issued for the exact same application this filter used for could be accepted, e.g. access token issued for Microsoft Graph could not be processed by users' application.
  syntax:
    content: public class AADAuthenticationFilter extends OncePerRequestFilter
  inheritance:
  - java.lang.Object
  - org.springframework.web.filter.GenericFilterBean
  - org.springframework.web.filter.OncePerRequestFilter
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.web.filter.GenericFilterBean.addRequiredProperty(java.lang.String)
  - org.springframework.web.filter.GenericFilterBean.afterPropertiesSet()
  - org.springframework.web.filter.GenericFilterBean.createEnvironment()
  - org.springframework.web.filter.GenericFilterBean.destroy()
  - org.springframework.web.filter.GenericFilterBean.getEnvironment()
  - org.springframework.web.filter.GenericFilterBean.getFilterConfig()
  - org.springframework.web.filter.GenericFilterBean.getFilterName()
  - org.springframework.web.filter.GenericFilterBean.getServletContext()
  - org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig)
  - org.springframework.web.filter.GenericFilterBean.initBeanWrapper(org.springframework.beans.BeanWrapper)
  - org.springframework.web.filter.GenericFilterBean.initFilterBean()
  - org.springframework.web.filter.GenericFilterBean.setBeanName(java.lang.String)
  - org.springframework.web.filter.GenericFilterBean.setEnvironment(org.springframework.core.env.Environment)
  - org.springframework.web.filter.GenericFilterBean.setServletContext(javax.servlet.ServletContext)
  - org.springframework.web.filter.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
  - org.springframework.web.filter.OncePerRequestFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  - org.springframework.web.filter.OncePerRequestFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  - org.springframework.web.filter.OncePerRequestFilter.getAlreadyFilteredAttributeName()
  - org.springframework.web.filter.OncePerRequestFilter.isAsyncDispatch(javax.servlet.http.HttpServletRequest)
  - org.springframework.web.filter.OncePerRequestFilter.isAsyncStarted(javax.servlet.http.HttpServletRequest)
  - org.springframework.web.filter.OncePerRequestFilter.shouldNotFilter(javax.servlet.http.HttpServletRequest)
  - org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  - org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterErrorDispatch()
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.azure.spring.autoconfigure.aad.UserPrincipalManager)
  id: AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.azure.spring.autoconfigure.aad.UserPrincipalManager)
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter
  langs:
  - java
  name: AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, UserPrincipalManager userPrincipalManager)
  nameWithType: AADAuthenticationFilter.AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, UserPrincipalManager userPrincipalManager)
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, UserPrincipalManager userPrincipalManager)
  overload: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter*
  type: Constructor
  package: com.azure.spring.autoconfigure.aad
  syntax:
    content: public AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, UserPrincipalManager userPrincipalManager)
    parameters:
    - id: aadAuthenticationProperties
      type: com.azure.spring.autoconfigure.aad.AADAuthenticationProperties
    - id: serviceEndpointsProperties
      type: com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
    - id: userPrincipalManager
      type: com.azure.spring.autoconfigure.aad.UserPrincipalManager
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.nimbusds.jose.util.ResourceRetriever)
  id: AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.nimbusds.jose.util.ResourceRetriever)
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter
  langs:
  - java
  name: AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever)
  nameWithType: AADAuthenticationFilter.AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever)
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever)
  overload: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter*
  type: Constructor
  package: com.azure.spring.autoconfigure.aad
  syntax:
    content: public AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever)
    parameters:
    - id: aadAuthenticationProperties
      type: com.azure.spring.autoconfigure.aad.AADAuthenticationProperties
    - id: serviceEndpointsProperties
      type: com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
    - id: resourceRetriever
      type: com.nimbusds.jose.util.ResourceRetriever
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.nimbusds.jose.util.ResourceRetriever,com.nimbusds.jose.jwk.source.JWKSetCache)
  id: AADAuthenticationFilter(com.azure.spring.autoconfigure.aad.AADAuthenticationProperties,com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties,com.nimbusds.jose.util.ResourceRetriever,com.nimbusds.jose.jwk.source.JWKSetCache)
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter
  langs:
  - java
  name: AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever, JWKSetCache jwkSetCache)
  nameWithType: AADAuthenticationFilter.AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever, JWKSetCache jwkSetCache)
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever, JWKSetCache jwkSetCache)
  overload: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter*
  type: Constructor
  package: com.azure.spring.autoconfigure.aad
  syntax:
    content: public AADAuthenticationFilter(AADAuthenticationProperties aadAuthenticationProperties, ServiceEndpointsProperties serviceEndpointsProperties, ResourceRetriever resourceRetriever, JWKSetCache jwkSetCache)
    parameters:
    - id: aadAuthenticationProperties
      type: com.azure.spring.autoconfigure.aad.AADAuthenticationProperties
    - id: serviceEndpointsProperties
      type: com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
    - id: resourceRetriever
      type: com.nimbusds.jose.util.ResourceRetriever
    - id: jwkSetCache
      type: com.nimbusds.jose.jwk.source.JWKSetCache
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  id: doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  artifact: com.azure.spring:azure-spring-boot:3.0.0-beta.1
  parent: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter
  langs:
  - java
  name: doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain)
  nameWithType: AADAuthenticationFilter.doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain)
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain)
  overload: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.doFilterInternal*
  type: Method
  package: com.azure.spring.autoconfigure.aad
  syntax:
    content: protected void doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain)
    parameters:
    - id: httpServletRequest
      type: javax.servlet.http.HttpServletRequest
    - id: httpServletResponse
      type: javax.servlet.http.HttpServletResponse
    - id: filterChain
      type: javax.servlet.FilterChain
  exceptions:
  - type: javax.servlet.ServletException
  - type: java.io.IOException
references:
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationProperties
  name: AADAuthenticationProperties
  nameWithType: AADAuthenticationProperties
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationProperties
- uid: com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
  name: ServiceEndpointsProperties
  nameWithType: ServiceEndpointsProperties
  fullName: com.azure.spring.autoconfigure.aad.ServiceEndpointsProperties
- uid: com.nimbusds.jose.util.ResourceRetriever
  spec.java:
  - uid: com.nimbusds.jose.util.ResourceRetriever
    name: ResourceRetriever
    fullName: com.nimbusds.jose.util.ResourceRetriever
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter*
  name: AADAuthenticationFilter
  nameWithType: AADAuthenticationFilter.AADAuthenticationFilter
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.AADAuthenticationFilter
  package: com.azure.spring.autoconfigure.aad
- uid: com.nimbusds.jose.jwk.source.JWKSetCache
  spec.java:
  - uid: com.nimbusds.jose.jwk.source.JWKSetCache
    name: JWKSetCache
    fullName: com.nimbusds.jose.jwk.source.JWKSetCache
- uid: com.azure.spring.autoconfigure.aad.UserPrincipalManager
  name: UserPrincipalManager
  nameWithType: UserPrincipalManager
  fullName: com.azure.spring.autoconfigure.aad.UserPrincipalManager
- uid: javax.servlet.ServletException
  spec.java:
  - uid: javax.servlet.ServletException
    name: ServletException
    fullName: javax.servlet.ServletException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: javax.servlet.http.HttpServletRequest
  spec.java:
  - uid: javax.servlet.http.HttpServletRequest
    name: HttpServletRequest
    fullName: javax.servlet.http.HttpServletRequest
- uid: javax.servlet.http.HttpServletResponse
  spec.java:
  - uid: javax.servlet.http.HttpServletResponse
    name: HttpServletResponse
    fullName: javax.servlet.http.HttpServletResponse
- uid: javax.servlet.FilterChain
  spec.java:
  - uid: javax.servlet.FilterChain
    name: FilterChain
    fullName: javax.servlet.FilterChain
- uid: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.doFilterInternal*
  name: doFilterInternal
  nameWithType: AADAuthenticationFilter.doFilterInternal
  fullName: com.azure.spring.autoconfigure.aad.AADAuthenticationFilter.doFilterInternal
  package: com.azure.spring.autoconfigure.aad
- uid: org.springframework.web.filter.OncePerRequestFilter
  name: OncePerRequestFilter
  nameWithType: OncePerRequestFilter
  fullName: org.springframework.web.filter.OncePerRequestFilter
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.springframework.web.filter.OncePerRequestFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  name: OncePerRequestFilter.doFilterNestedErrorDispatch(HttpServletRequest,HttpServletResponse,FilterChain)
  nameWithType: OncePerRequestFilter.doFilterNestedErrorDispatch(HttpServletRequest,HttpServletResponse,FilterChain)
  fullName: org.springframework.web.filter.OncePerRequestFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.web.filter.GenericFilterBean.getFilterName()
  name: GenericFilterBean.getFilterName()
  nameWithType: GenericFilterBean.getFilterName()
  fullName: org.springframework.web.filter.GenericFilterBean.getFilterName()
- uid: org.springframework.web.filter.GenericFilterBean.getFilterConfig()
  name: GenericFilterBean.getFilterConfig()
  nameWithType: GenericFilterBean.getFilterConfig()
  fullName: org.springframework.web.filter.GenericFilterBean.getFilterConfig()
- uid: org.springframework.web.filter.GenericFilterBean.setServletContext(javax.servlet.ServletContext)
  name: GenericFilterBean.setServletContext(ServletContext)
  nameWithType: GenericFilterBean.setServletContext(ServletContext)
  fullName: org.springframework.web.filter.GenericFilterBean.setServletContext(javax.servlet.ServletContext)
- uid: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  name: OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  nameWithType: OncePerRequestFilter.shouldNotFilterAsyncDispatch()
  fullName: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterAsyncDispatch()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.springframework.web.filter.GenericFilterBean.getServletContext()
  name: GenericFilterBean.getServletContext()
  nameWithType: GenericFilterBean.getServletContext()
  fullName: org.springframework.web.filter.GenericFilterBean.getServletContext()
- uid: org.springframework.web.filter.GenericFilterBean.afterPropertiesSet()
  name: GenericFilterBean.afterPropertiesSet()
  nameWithType: GenericFilterBean.afterPropertiesSet()
  fullName: org.springframework.web.filter.GenericFilterBean.afterPropertiesSet()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.web.filter.GenericFilterBean.setBeanName(java.lang.String)
  name: GenericFilterBean.setBeanName(String)
  nameWithType: GenericFilterBean.setBeanName(String)
  fullName: org.springframework.web.filter.GenericFilterBean.setBeanName(java.lang.String)
- uid: org.springframework.web.filter.GenericFilterBean.getEnvironment()
  name: GenericFilterBean.getEnvironment()
  nameWithType: GenericFilterBean.getEnvironment()
  fullName: org.springframework.web.filter.GenericFilterBean.getEnvironment()
- uid: org.springframework.web.filter.GenericFilterBean.addRequiredProperty(java.lang.String)
  name: GenericFilterBean.addRequiredProperty(String)
  nameWithType: GenericFilterBean.addRequiredProperty(String)
  fullName: org.springframework.web.filter.GenericFilterBean.addRequiredProperty(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig)
  name: GenericFilterBean.init(FilterConfig)
  nameWithType: GenericFilterBean.init(FilterConfig)
  fullName: org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.web.filter.GenericFilterBean.createEnvironment()
  name: GenericFilterBean.createEnvironment()
  nameWithType: GenericFilterBean.createEnvironment()
  fullName: org.springframework.web.filter.GenericFilterBean.createEnvironment()
- uid: org.springframework.web.filter.GenericFilterBean.initBeanWrapper(org.springframework.beans.BeanWrapper)
  name: GenericFilterBean.initBeanWrapper(BeanWrapper)
  nameWithType: GenericFilterBean.initBeanWrapper(BeanWrapper)
  fullName: org.springframework.web.filter.GenericFilterBean.initBeanWrapper(org.springframework.beans.BeanWrapper)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.web.filter.OncePerRequestFilter.isAsyncStarted(javax.servlet.http.HttpServletRequest)
  name: OncePerRequestFilter.isAsyncStarted(HttpServletRequest)
  nameWithType: OncePerRequestFilter.isAsyncStarted(HttpServletRequest)
  fullName: org.springframework.web.filter.OncePerRequestFilter.isAsyncStarted(javax.servlet.http.HttpServletRequest)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.web.filter.GenericFilterBean.setEnvironment(org.springframework.core.env.Environment)
  name: GenericFilterBean.setEnvironment(Environment)
  nameWithType: GenericFilterBean.setEnvironment(Environment)
  fullName: org.springframework.web.filter.GenericFilterBean.setEnvironment(org.springframework.core.env.Environment)
- uid: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterErrorDispatch()
  name: OncePerRequestFilter.shouldNotFilterErrorDispatch()
  nameWithType: OncePerRequestFilter.shouldNotFilterErrorDispatch()
  fullName: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilterErrorDispatch()
- uid: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilter(javax.servlet.http.HttpServletRequest)
  name: OncePerRequestFilter.shouldNotFilter(HttpServletRequest)
  nameWithType: OncePerRequestFilter.shouldNotFilter(HttpServletRequest)
  fullName: org.springframework.web.filter.OncePerRequestFilter.shouldNotFilter(javax.servlet.http.HttpServletRequest)
- uid: org.springframework.web.filter.OncePerRequestFilter.getAlreadyFilteredAttributeName()
  name: OncePerRequestFilter.getAlreadyFilteredAttributeName()
  nameWithType: OncePerRequestFilter.getAlreadyFilteredAttributeName()
  fullName: org.springframework.web.filter.OncePerRequestFilter.getAlreadyFilteredAttributeName()
- uid: org.springframework.web.filter.GenericFilterBean.initFilterBean()
  name: GenericFilterBean.initFilterBean()
  nameWithType: GenericFilterBean.initFilterBean()
  fullName: org.springframework.web.filter.GenericFilterBean.initFilterBean()
- uid: org.springframework.web.filter.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
  name: OncePerRequestFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
  nameWithType: OncePerRequestFilter.doFilter(ServletRequest,ServletResponse,FilterChain)
  fullName: org.springframework.web.filter.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
- uid: org.springframework.web.filter.OncePerRequestFilter.isAsyncDispatch(javax.servlet.http.HttpServletRequest)
  name: OncePerRequestFilter.isAsyncDispatch(HttpServletRequest)
  nameWithType: OncePerRequestFilter.isAsyncDispatch(HttpServletRequest)
  fullName: org.springframework.web.filter.OncePerRequestFilter.isAsyncDispatch(javax.servlet.http.HttpServletRequest)
- uid: org.springframework.web.filter.OncePerRequestFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
  name: OncePerRequestFilter.doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
  nameWithType: OncePerRequestFilter.doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
  fullName: org.springframework.web.filter.OncePerRequestFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
- uid: org.springframework.web.filter.GenericFilterBean.destroy()
  name: GenericFilterBean.destroy()
  nameWithType: GenericFilterBean.destroy()
  fullName: org.springframework.web.filter.GenericFilterBean.destroy()
