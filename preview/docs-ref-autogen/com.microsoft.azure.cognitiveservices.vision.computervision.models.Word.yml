### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word"
name: "Word"
nameWithType: "Word"
summary: "An object representing a recognized word."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Word"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.Word()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.Word()"
  name: "Word()"
  nameWithType: "Word.Word()"
  syntax: "public Word()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.boundingBox()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.boundingBox()"
  name: "boundingBox()"
  nameWithType: "Word.boundingBox()"
  summary: "Get the bounding<wbr>Box value."
  syntax: "public List<Double> boundingBox()"
  desc: "Get the boundingBox value."
  returns:
    description: "the boundingBox value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.confidence()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.confidence()"
  name: "confidence()"
  nameWithType: "Word.confidence()"
  summary: "Get the confidence value."
  syntax: "public double confidence()"
  desc: "Get the confidence value."
  returns:
    description: "the confidence value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.text()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.text()"
  name: "text()"
  nameWithType: "Word.text()"
  summary: "Get the text value."
  syntax: "public String text()"
  desc: "Get the text value."
  returns:
    description: "the text value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.withBoundingBox(java.util.List<java.lang.Double>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.withBoundingBox(List<Double> boundingBox)"
  name: "withBoundingBox(List<Double> boundingBox)"
  nameWithType: "Word.withBoundingBox(List<Double> boundingBox)"
  summary: "Set the bounding<wbr>Box value."
  parameters:
  - description: "the boundingBox value to set"
    name: "boundingBox"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Word withBoundingBox(List<Double> boundingBox)"
  desc: "Set the boundingBox value."
  returns:
    description: "the Word object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.Word?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Word&text=Word\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.withConfidence(double)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.withConfidence(double confidence)"
  name: "withConfidence(double confidence)"
  nameWithType: "Word.withConfidence(double confidence)"
  summary: "Set the confidence value."
  parameters:
  - description: "the confidence value to set"
    name: "confidence"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Word withConfidence(double confidence)"
  desc: "Set the confidence value."
  returns:
    description: "the Word object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.Word?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Word&text=Word\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.withText(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.Word.withText(String text)"
  name: "withText(String text)"
  nameWithType: "Word.withText(String text)"
  summary: "Set the text value."
  parameters:
  - description: "the text value to set"
    name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Word withText(String text)"
  desc: "Set the text value."
  returns:
    description: "the Word object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.Word?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Word&text=Word\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An object representing a recognized word."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.9-beta
