### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.sortedCopyOf*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>sortedCopyOf"
name: "<E>sortedCopyOf"
nameWithType: "ImmutableList<E>.<E>sortedCopyOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>sortedCopyOf(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>sortedCopyOf(Iterable<? extends E> elements)"
  name: "<E>sortedCopyOf(Iterable<? extends E> elements)"
  nameWithType: "ImmutableList<E>.<E>sortedCopyOf(Iterable<? extends E> elements)"
  summary: "Returns an immutable list containing the given elements, sorted according to their natural order. The sorting algorithm used is stable, so elements that compare as equal will stay in the order in which they appear in the input.\n\nIf your data has no duplicates, or you wish to deduplicate elements, use `ImmutableSortedSet.copyOf(elements)`; if you want a `List` you can use its `asList()` view.\n\n**Java 8 users:** If you want to convert a <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.stream.Stream\"></xref> to a sorted `ImmutableList`, use `stream.sorted().collect(toImmutableList())`."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableList<E> <E>sortedCopyOf(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableList.<E>sortedCopyOf(java.util.Comparator<? super E>,java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableList<E>.<E>sortedCopyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  name: "<E>sortedCopyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  nameWithType: "ImmutableList<E>.<E>sortedCopyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  summary: "Returns an immutable list containing the given elements, in sorted order relative to the specified comparator. The sorting algorithm used is stable, so elements that compare as equal will stay in the order in which they appear in the input.\n\nIf your data has no duplicates, or you wish to deduplicate elements, use `ImmutableSortedSet.copyOf(comparator, elements)`; if you want a `List` you can use its `asList()` view.\n\n**Java 8 users:** If you want to convert a <xref uid=\"java.util.stream.Stream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.stream.Stream\"></xref> to a sorted `ImmutableList`, use `stream.sorted(comparator).collect(toImmutableList())`."
  parameters:
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableList<E> <E>sortedCopyOf(Comparator<? super E> comparator, Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
