### YamlMime:JavaType
uid: "com.azure.compute.batch.models.BatchTask"
fullName: "com.azure.compute.batch.models.BatchTask"
name: "BatchTask"
nameWithType: "BatchTask"
summary: "Batch will retry Tasks when a recovery operation is triggered on a Node."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BatchTask**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchTask?alt=com.azure.compute.batch.models.BatchTask&text=BatchTask\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.BatchTask.BatchTask()"
  fullName: "com.azure.compute.batch.models.BatchTask.BatchTask()"
  name: "BatchTask()"
  nameWithType: "BatchTask.BatchTask()"
  summary: "Creates an instance of Batch<wbr>Task class."
  syntax: "public BatchTask()"
  desc: "Creates an instance of BatchTask class."
methods:
- uid: "com.azure.compute.batch.models.BatchTask.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.BatchTask.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BatchTask.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Batch<wbr>Task from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchTask fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the BatchTask."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BatchTask from the JsonReader."
  returns:
    description: "An instance of BatchTask if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTask?alt=com.azure.compute.batch.models.BatchTask&text=BatchTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getAffinityInfo()"
  fullName: "com.azure.compute.batch.models.BatchTask.getAffinityInfo()"
  name: "getAffinityInfo()"
  nameWithType: "BatchTask.getAffinityInfo()"
  summary: "Get the affinity<wbr>Info property: A locality hint that can be used by the Batch service to select a Compute Node on which to start the new Task."
  syntax: "public AffinityInfo getAffinityInfo()"
  desc: "Get the affinityInfo property: A locality hint that can be used by the Batch service to select a Compute Node on which to start the new Task."
  returns:
    description: "the affinityInfo value."
    type: "<xref href=\"com.azure.compute.batch.models.AffinityInfo?alt=com.azure.compute.batch.models.AffinityInfo&text=AffinityInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getApplicationPackageReferences()"
  fullName: "com.azure.compute.batch.models.BatchTask.getApplicationPackageReferences()"
  name: "getApplicationPackageReferences()"
  nameWithType: "BatchTask.getApplicationPackageReferences()"
  summary: "Get the application<wbr>Package<wbr>References property: A list of Packages that the Batch service will deploy to the Compute Node before running the command line."
  syntax: "public List<BatchApplicationPackageReference> getApplicationPackageReferences()"
  desc: "Get the applicationPackageReferences property: A list of Packages that the Batch service will deploy to the Compute Node before running the command line. Application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails."
  returns:
    description: "the applicationPackageReferences value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.BatchApplicationPackageReference?alt=com.azure.compute.batch.models.BatchApplicationPackageReference&text=BatchApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchTask.getAuthenticationTokenSettings()"
  fullName: "com.azure.compute.batch.models.BatchTask.getAuthenticationTokenSettings()"
  name: "getAuthenticationTokenSettings()"
  nameWithType: "BatchTask.getAuthenticationTokenSettings()"
  summary: "Get the authentication<wbr>Token<wbr>Settings property: The settings for an authentication token that the Task can use to perform Batch service operations."
  syntax: "public AuthenticationTokenSettings getAuthenticationTokenSettings()"
  desc: "Get the authenticationTokenSettings property: The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ\\_BATCH\\_AUTHENTICATION\\_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
  returns:
    description: "the authenticationTokenSettings value."
    type: "<xref href=\"com.azure.compute.batch.models.AuthenticationTokenSettings?alt=com.azure.compute.batch.models.AuthenticationTokenSettings&text=AuthenticationTokenSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getCommandLine()"
  fullName: "com.azure.compute.batch.models.BatchTask.getCommandLine()"
  name: "getCommandLine()"
  nameWithType: "BatchTask.getCommandLine()"
  summary: "Get the command<wbr>Line property: The command line of the Task."
  syntax: "public String getCommandLine()"
  desc: "Get the commandLine property: The command line of the Task. For multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/azure/batch/batch-compute-node-environment-variables)."
  returns:
    description: "the commandLine value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getConstraints()"
  fullName: "com.azure.compute.batch.models.BatchTask.getConstraints()"
  name: "getConstraints()"
  nameWithType: "BatchTask.getConstraints()"
  summary: "Get the constraints property: The execution constraints that apply to this Task."
  syntax: "public BatchTaskConstraints getConstraints()"
  desc: "Get the constraints property: The execution constraints that apply to this Task."
  returns:
    description: "the constraints value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskConstraints?alt=com.azure.compute.batch.models.BatchTaskConstraints&text=BatchTaskConstraints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getContainerSettings()"
  fullName: "com.azure.compute.batch.models.BatchTask.getContainerSettings()"
  name: "getContainerSettings()"
  nameWithType: "BatchTask.getContainerSettings()"
  summary: "Get the container<wbr>Settings property: The settings for the container under which the Task runs."
  syntax: "public BatchTaskContainerSettings getContainerSettings()"
  desc: "Get the containerSettings property: The settings for the container under which the Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the containerSettings value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskContainerSettings?alt=com.azure.compute.batch.models.BatchTaskContainerSettings&text=BatchTaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getCreationTime()"
  fullName: "com.azure.compute.batch.models.BatchTask.getCreationTime()"
  name: "getCreationTime()"
  nameWithType: "BatchTask.getCreationTime()"
  summary: "Get the creation<wbr>Time property: The creation time of the Task."
  syntax: "public OffsetDateTime getCreationTime()"
  desc: "Get the creationTime property: The creation time of the Task."
  returns:
    description: "the creationTime value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getDependsOn()"
  fullName: "com.azure.compute.batch.models.BatchTask.getDependsOn()"
  name: "getDependsOn()"
  nameWithType: "BatchTask.getDependsOn()"
  summary: "Get the depends<wbr>On property: The Tasks that this Task depends on."
  syntax: "public BatchTaskDependencies getDependsOn()"
  desc: "Get the dependsOn property: The Tasks that this Task depends on. This Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled."
  returns:
    description: "the dependsOn value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskDependencies?alt=com.azure.compute.batch.models.BatchTaskDependencies&text=BatchTaskDependencies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getDisplayName()"
  fullName: "com.azure.compute.batch.models.BatchTask.getDisplayName()"
  name: "getDisplayName()"
  nameWithType: "BatchTask.getDisplayName()"
  summary: "Get the display<wbr>Name property: A display name for the Task."
  syntax: "public String getDisplayName()"
  desc: "Get the displayName property: A display name for the Task. The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getEnvironmentSettings()"
  fullName: "com.azure.compute.batch.models.BatchTask.getEnvironmentSettings()"
  name: "getEnvironmentSettings()"
  nameWithType: "BatchTask.getEnvironmentSettings()"
  summary: "Get the environment<wbr>Settings property: A list of environment variable settings for the Task."
  syntax: "public List<EnvironmentSetting> getEnvironmentSettings()"
  desc: "Get the environmentSettings property: A list of environment variable settings for the Task."
  returns:
    description: "the environmentSettings value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchTask.getETag()"
  fullName: "com.azure.compute.batch.models.BatchTask.getETag()"
  name: "getETag()"
  nameWithType: "BatchTask.getETag()"
  summary: "Get the e<wbr>Tag property: The ETag of the Task."
  syntax: "public String getETag()"
  desc: "Get the eTag property: The ETag of the Task. This is an opaque string. You can use it to detect whether the Task has changed between requests. In particular, you can be pass the ETag when updating a Task to specify that your changes should take effect only if nobody else has modified the Task in the meantime."
  returns:
    description: "the eTag value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getExecutionInfo()"
  fullName: "com.azure.compute.batch.models.BatchTask.getExecutionInfo()"
  name: "getExecutionInfo()"
  nameWithType: "BatchTask.getExecutionInfo()"
  summary: "Get the execution<wbr>Info property: Information about the execution of the Task."
  syntax: "public BatchTaskExecutionInfo getExecutionInfo()"
  desc: "Get the executionInfo property: Information about the execution of the Task."
  returns:
    description: "the executionInfo value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskExecutionInfo?alt=com.azure.compute.batch.models.BatchTaskExecutionInfo&text=BatchTaskExecutionInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getExitConditions()"
  fullName: "com.azure.compute.batch.models.BatchTask.getExitConditions()"
  name: "getExitConditions()"
  nameWithType: "BatchTask.getExitConditions()"
  summary: "Get the exit<wbr>Conditions property: How the Batch service should respond when the Task completes."
  syntax: "public ExitConditions getExitConditions()"
  desc: "Get the exitConditions property: How the Batch service should respond when the Task completes."
  returns:
    description: "the exitConditions value."
    type: "<xref href=\"com.azure.compute.batch.models.ExitConditions?alt=com.azure.compute.batch.models.ExitConditions&text=ExitConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getId()"
  fullName: "com.azure.compute.batch.models.BatchTask.getId()"
  name: "getId()"
  nameWithType: "BatchTask.getId()"
  summary: "Get the id property: A string that uniquely identifies the Task within the Job."
  syntax: "public String getId()"
  desc: "Get the id property: A string that uniquely identifies the Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getLastModified()"
  fullName: "com.azure.compute.batch.models.BatchTask.getLastModified()"
  name: "getLastModified()"
  nameWithType: "BatchTask.getLastModified()"
  summary: "Get the last<wbr>Modified property: The last modified time of the Task."
  syntax: "public OffsetDateTime getLastModified()"
  desc: "Get the lastModified property: The last modified time of the Task."
  returns:
    description: "the lastModified value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getMultiInstanceSettings()"
  fullName: "com.azure.compute.batch.models.BatchTask.getMultiInstanceSettings()"
  name: "getMultiInstanceSettings()"
  nameWithType: "BatchTask.getMultiInstanceSettings()"
  summary: "Get the multi<wbr>Instance<wbr>Settings property: An object that indicates that the Task is a multi-instance Task, and contains information about how to run the multi-instance Task."
  syntax: "public MultiInstanceSettings getMultiInstanceSettings()"
  desc: "Get the multiInstanceSettings property: An object that indicates that the Task is a multi-instance Task, and contains information about how to run the multi-instance Task."
  returns:
    description: "the multiInstanceSettings value."
    type: "<xref href=\"com.azure.compute.batch.models.MultiInstanceSettings?alt=com.azure.compute.batch.models.MultiInstanceSettings&text=MultiInstanceSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getNodeInfo()"
  fullName: "com.azure.compute.batch.models.BatchTask.getNodeInfo()"
  name: "getNodeInfo()"
  nameWithType: "BatchTask.getNodeInfo()"
  summary: "Get the node<wbr>Info property: Information about the Compute Node on which the Task ran."
  syntax: "public BatchNodeInfo getNodeInfo()"
  desc: "Get the nodeInfo property: Information about the Compute Node on which the Task ran."
  returns:
    description: "the nodeInfo value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchNodeInfo?alt=com.azure.compute.batch.models.BatchNodeInfo&text=BatchNodeInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getOutputFiles()"
  fullName: "com.azure.compute.batch.models.BatchTask.getOutputFiles()"
  name: "getOutputFiles()"
  nameWithType: "BatchTask.getOutputFiles()"
  summary: "Get the output<wbr>Files property: A list of files that the Batch service will upload from the Compute Node after running the command line."
  syntax: "public List<OutputFile> getOutputFiles()"
  desc: "Get the outputFiles property: A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed."
  returns:
    description: "the outputFiles value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.OutputFile?alt=com.azure.compute.batch.models.OutputFile&text=OutputFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchTask.getPreviousState()"
  fullName: "com.azure.compute.batch.models.BatchTask.getPreviousState()"
  name: "getPreviousState()"
  nameWithType: "BatchTask.getPreviousState()"
  summary: "Get the previous<wbr>State property: The previous state of the Task."
  syntax: "public BatchTaskState getPreviousState()"
  desc: "Get the previousState property: The previous state of the Task. This property is not set if the Task is in its initial Active state."
  returns:
    description: "the previousState value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskState?alt=com.azure.compute.batch.models.BatchTaskState&text=BatchTaskState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getPreviousStateTransitionTime()"
  fullName: "com.azure.compute.batch.models.BatchTask.getPreviousStateTransitionTime()"
  name: "getPreviousStateTransitionTime()"
  nameWithType: "BatchTask.getPreviousStateTransitionTime()"
  summary: "Get the previous<wbr>State<wbr>Transition<wbr>Time property: The time at which the Task entered its previous state."
  syntax: "public OffsetDateTime getPreviousStateTransitionTime()"
  desc: "Get the previousStateTransitionTime property: The time at which the Task entered its previous state. This property is not set if the Task is in its initial Active state."
  returns:
    description: "the previousStateTransitionTime value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getRequiredSlots()"
  fullName: "com.azure.compute.batch.models.BatchTask.getRequiredSlots()"
  name: "getRequiredSlots()"
  nameWithType: "BatchTask.getRequiredSlots()"
  summary: "Get the required<wbr>Slots property: The number of scheduling slots that the Task requires to run."
  syntax: "public Integer getRequiredSlots()"
  desc: "Get the requiredSlots property: The number of scheduling slots that the Task requires to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this must be 1."
  returns:
    description: "the requiredSlots value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getResourceFiles()"
  fullName: "com.azure.compute.batch.models.BatchTask.getResourceFiles()"
  name: "getResourceFiles()"
  nameWithType: "BatchTask.getResourceFiles()"
  summary: "Get the resource<wbr>Files property: A list of files that the Batch service will download to the Compute Node before running the command line."
  syntax: "public List<ResourceFile> getResourceFiles()"
  desc: "Get the resourceFiles property: A list of files that the Batch service will download to the Compute Node before running the command line. For multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers."
  returns:
    description: "the resourceFiles value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.ResourceFile?alt=com.azure.compute.batch.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchTask.getState()"
  fullName: "com.azure.compute.batch.models.BatchTask.getState()"
  name: "getState()"
  nameWithType: "BatchTask.getState()"
  summary: "Get the state property: The current state of the Task."
  syntax: "public BatchTaskState getState()"
  desc: "Get the state property: The current state of the Task."
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskState?alt=com.azure.compute.batch.models.BatchTaskState&text=BatchTaskState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getStateTransitionTime()"
  fullName: "com.azure.compute.batch.models.BatchTask.getStateTransitionTime()"
  name: "getStateTransitionTime()"
  nameWithType: "BatchTask.getStateTransitionTime()"
  summary: "Get the state<wbr>Transition<wbr>Time property: The time at which the Task entered its current state."
  syntax: "public OffsetDateTime getStateTransitionTime()"
  desc: "Get the stateTransitionTime property: The time at which the Task entered its current state."
  returns:
    description: "the stateTransitionTime value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getStats()"
  fullName: "com.azure.compute.batch.models.BatchTask.getStats()"
  name: "getStats()"
  nameWithType: "BatchTask.getStats()"
  summary: "Get the stats property: Resource usage statistics for the Task."
  syntax: "public BatchTaskStatistics getStats()"
  desc: "Get the stats property: Resource usage statistics for the Task."
  returns:
    description: "the stats value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskStatistics?alt=com.azure.compute.batch.models.BatchTaskStatistics&text=BatchTaskStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.getUrl()"
  fullName: "com.azure.compute.batch.models.BatchTask.getUrl()"
  name: "getUrl()"
  nameWithType: "BatchTask.getUrl()"
  summary: "Get the url property: The URL of the Task."
  syntax: "public String getUrl()"
  desc: "Get the url property: The URL of the Task."
  returns:
    description: "the url value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchTask.getUserIdentity()"
  fullName: "com.azure.compute.batch.models.BatchTask.getUserIdentity()"
  name: "getUserIdentity()"
  nameWithType: "BatchTask.getUserIdentity()"
  summary: "Get the user<wbr>Identity property: The user identity under which the Task runs."
  syntax: "public UserIdentity getUserIdentity()"
  desc: "Get the userIdentity property: The user identity under which the Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the userIdentity value."
    type: "<xref href=\"com.azure.compute.batch.models.UserIdentity?alt=com.azure.compute.batch.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.setConstraints(com.azure.compute.batch.models.BatchTaskConstraints)"
  fullName: "com.azure.compute.batch.models.BatchTask.setConstraints(BatchTaskConstraints constraints)"
  name: "setConstraints(BatchTaskConstraints constraints)"
  nameWithType: "BatchTask.setConstraints(BatchTaskConstraints constraints)"
  summary: "Set the constraints property: The execution constraints that apply to this Task."
  parameters:
  - description: "the constraints value to set."
    name: "constraints"
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskConstraints?alt=com.azure.compute.batch.models.BatchTaskConstraints&text=BatchTaskConstraints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchTask setConstraints(BatchTaskConstraints constraints)"
  desc: "Set the constraints property: The execution constraints that apply to this Task."
  returns:
    description: "the BatchTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTask?alt=com.azure.compute.batch.models.BatchTask&text=BatchTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchTask.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.BatchTask.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BatchTask.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchTask?alt=com.azure.compute.batch.models.BatchTask&text=BatchTask\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.3
