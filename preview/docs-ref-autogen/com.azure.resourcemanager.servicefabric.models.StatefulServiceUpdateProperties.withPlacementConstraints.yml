### YamlMime:JavaMember
uid: "com.azure.resourcemanager.servicefabric.models.StatefulServiceUpdateProperties.withPlacementConstraints*"
fullName: "com.azure.resourcemanager.servicefabric.models.StatefulServiceUpdateProperties.withPlacementConstraints"
name: "withPlacementConstraints"
nameWithType: "StatefulServiceUpdateProperties.withPlacementConstraints"
members:
- uid: "com.azure.resourcemanager.servicefabric.models.StatefulServiceUpdateProperties.withPlacementConstraints(java.lang.String)"
  fullName: "com.azure.resourcemanager.servicefabric.models.StatefulServiceUpdateProperties.withPlacementConstraints(String placementConstraints)"
  name: "withPlacementConstraints(String placementConstraints)"
  nameWithType: "StatefulServiceUpdateProperties.withPlacementConstraints(String placementConstraints)"
  summary: "Set the placementConstraints property: The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
  overridden: "com.azure.resourcemanager.servicefabric.models.ServiceResourceUpdateProperties.withPlacementConstraints(java.lang.String)"
  parameters:
  - name: "placementConstraints"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StatefulServiceUpdateProperties withPlacementConstraints(String placementConstraints)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.StatefulServiceUpdateProperties?alt=com.azure.resourcemanager.servicefabric.models.StatefulServiceUpdateProperties&text=StatefulServiceUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.1
