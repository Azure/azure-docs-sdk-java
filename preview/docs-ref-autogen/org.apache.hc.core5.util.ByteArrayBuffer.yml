### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.util.ByteArrayBuffer
  id: ByteArrayBuffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util
  children:
  - org.apache.hc.core5.util.ByteArrayBuffer.ByteArrayBuffer(int)
  - org.apache.hc.core5.util.ByteArrayBuffer.append(byte[],int,int)
  - org.apache.hc.core5.util.ByteArrayBuffer.append(char[],int,int)
  - org.apache.hc.core5.util.ByteArrayBuffer.append(int)
  - org.apache.hc.core5.util.ByteArrayBuffer.append(org.apache.hc.core5.util.CharArrayBuffer,int,int)
  - org.apache.hc.core5.util.ByteArrayBuffer.array()
  - org.apache.hc.core5.util.ByteArrayBuffer.byteAt(int)
  - org.apache.hc.core5.util.ByteArrayBuffer.capacity()
  - org.apache.hc.core5.util.ByteArrayBuffer.clear()
  - org.apache.hc.core5.util.ByteArrayBuffer.ensureCapacity(int)
  - org.apache.hc.core5.util.ByteArrayBuffer.indexOf(byte)
  - org.apache.hc.core5.util.ByteArrayBuffer.indexOf(byte,int,int)
  - org.apache.hc.core5.util.ByteArrayBuffer.isEmpty()
  - org.apache.hc.core5.util.ByteArrayBuffer.isFull()
  - org.apache.hc.core5.util.ByteArrayBuffer.length()
  - org.apache.hc.core5.util.ByteArrayBuffer.setLength(int)
  - org.apache.hc.core5.util.ByteArrayBuffer.toByteArray()
  langs:
  - java
  name: ByteArrayBuffer
  nameWithType: ByteArrayBuffer
  fullName: org.apache.hc.core5.util.ByteArrayBuffer
  type: Class
  package: org.apache.hc.core5.util
  summary: A resizable byte array.
  syntax:
    content: public final class ByteArrayBuffer implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.util.ByteArrayBuffer.ByteArrayBuffer(int)
  id: ByteArrayBuffer(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: ByteArrayBuffer(int capacity)
  nameWithType: ByteArrayBuffer.ByteArrayBuffer(int capacity)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.ByteArrayBuffer(int capacity)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.ByteArrayBuffer*
  type: Constructor
  package: org.apache.hc.core5.util
  summary: Creates an instance of <xref uid="org.apache.hc.core5.util.ByteArrayBuffer" data-throw-if-not-resolved="false">ByteArrayBuffer</xref> with the given initial capacity.
  syntax:
    content: public ByteArrayBuffer(int capacity)
    parameters:
    - id: capacity
      type: int
      description: the capacity
- uid: org.apache.hc.core5.util.ByteArrayBuffer.append(byte[],int,int)
  id: append(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: append(byte[] b, int off, int len)
  nameWithType: ByteArrayBuffer.append(byte[] b, int off, int len)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.append(byte[] b, int off, int len)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends `len` bytes to this buffer from the given source array starting at index `off`. The capacity of the buffer is increased, if necessary, to accommodate all `len` bytes.
  syntax:
    content: public void append(byte[] b, int off, int len)
    parameters:
    - id: b
      type: byte[]
      description: the bytes to be appended.
    - id: off
      type: int
      description: the index of the first byte to append.
    - id: len
      type: int
      description: the number of bytes to append.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.append(char[],int,int)
  id: append(char[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: append(char[] b, int off, int len)
  nameWithType: ByteArrayBuffer.append(char[] b, int off, int len)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.append(char[] b, int off, int len)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: >-
    Appends `len` chars to this buffer from the given source array starting at index `off`. The capacity of the buffer is increased if necessary to accommodate all `len` chars.


    The chars are converted to bytes using simple cast.
  syntax:
    content: public void append(char[] b, int off, int len)
    parameters:
    - id: b
      type: char[]
      description: the chars to be appended.
    - id: off
      type: int
      description: the index of the first char to append.
    - id: len
      type: int
      description: the number of bytes to append.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.append(int)
  id: append(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: append(int b)
  nameWithType: ByteArrayBuffer.append(int b)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.append(int b)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: Appends `b` byte to this buffer. The capacity of the buffer is increased, if necessary, to accommodate the additional byte.
  syntax:
    content: public void append(int b)
    parameters:
    - id: b
      type: int
      description: the byte to be appended.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.append(org.apache.hc.core5.util.CharArrayBuffer,int,int)
  id: append(org.apache.hc.core5.util.CharArrayBuffer,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: append(CharArrayBuffer b, int off, int len)
  nameWithType: ByteArrayBuffer.append(CharArrayBuffer b, int off, int len)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.append(CharArrayBuffer b, int off, int len)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.append*
  type: Method
  package: org.apache.hc.core5.util
  summary: >-
    Appends `len` chars to this buffer from the given source char array buffer starting at index `off`. The capacity of the buffer is increased if necessary to accommodate all `len` chars.


    The chars are converted to bytes using simple cast.
  syntax:
    content: public void append(CharArrayBuffer b, int off, int len)
    parameters:
    - id: b
      type: org.apache.hc.core5.util.CharArrayBuffer
      description: the chars to be appended.
    - id: off
      type: int
      description: the index of the first char to append.
    - id: len
      type: int
      description: the number of bytes to append.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.array()
  id: array()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: array()
  nameWithType: ByteArrayBuffer.array()
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.array()
  overload: org.apache.hc.core5.util.ByteArrayBuffer.array*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns reference to the underlying byte array.
  syntax:
    content: public byte[] array()
    return:
      type: byte[]
      description: the byte array.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.byteAt(int)
  id: byteAt(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: byteAt(int i)
  nameWithType: ByteArrayBuffer.byteAt(int i)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.byteAt(int i)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.byteAt*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the `byte` value in this buffer at the specified index. The index argument must be greater than or equal to `0`, and less than the length of this buffer.
  syntax:
    content: public int byteAt(int i)
    parameters:
    - id: i
      type: int
      description: the index of the desired byte value.
    return:
      type: int
      description: the byte value at the specified index.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.capacity()
  id: capacity()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: capacity()
  nameWithType: ByteArrayBuffer.capacity()
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.capacity()
  overload: org.apache.hc.core5.util.ByteArrayBuffer.capacity*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the current capacity. The capacity is the amount of storage available for newly appended bytes, beyond which an allocation will occur.
  syntax:
    content: public int capacity()
    return:
      type: int
      description: the current capacity
- uid: org.apache.hc.core5.util.ByteArrayBuffer.clear()
  id: clear()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: clear()
  nameWithType: ByteArrayBuffer.clear()
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.clear()
  overload: org.apache.hc.core5.util.ByteArrayBuffer.clear*
  type: Method
  package: org.apache.hc.core5.util
  summary: Clears content of the buffer. The underlying byte array is not resized.
  syntax:
    content: public void clear()
- uid: org.apache.hc.core5.util.ByteArrayBuffer.ensureCapacity(int)
  id: ensureCapacity(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: ensureCapacity(int required)
  nameWithType: ByteArrayBuffer.ensureCapacity(int required)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.ensureCapacity(int required)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.ensureCapacity*
  type: Method
  package: org.apache.hc.core5.util
  summary: Ensures that the capacity is at least equal to the specified minimum. If the current capacity is less than the argument, then a new internal array is allocated with greater capacity. If the `required` argument is non-positive, this method takes no action.
  syntax:
    content: public void ensureCapacity(int required)
    parameters:
    - id: required
      type: int
      description: the minimum required capacity.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.indexOf(byte)
  id: indexOf(byte)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: indexOf(byte b)
  nameWithType: ByteArrayBuffer.indexOf(byte b)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.indexOf(byte b)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.indexOf*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the index within this buffer of the first occurrence of the specified byte, starting the search at `0` and finishing at <xref uid="org.apache.hc.core5.util.ByteArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref>. If no such byte occurs in this buffer within those bounds, `-1` is returned.
  syntax:
    content: public int indexOf(byte b)
    parameters:
    - id: b
      type: byte
      description: the byte to search for.
    return:
      type: int
      description: >-
        the index of the first occurrence of the byte in the
           buffer, or <code>-1</code> if the byte does not occur.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.indexOf(byte,int,int)
  id: indexOf(byte,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: indexOf(byte b, int from, int to)
  nameWithType: ByteArrayBuffer.indexOf(byte b, int from, int to)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.indexOf(byte b, int from, int to)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.indexOf*
  type: Method
  package: org.apache.hc.core5.util
  summary: >-
    Returns the index within this buffer of the first occurrence of the specified byte, starting the search at the specified `beginIndex` and finishing at `endIndex`. If no such byte occurs in this buffer within the specified bounds, `-1` is returned.


    There is no restriction on the value of `beginIndex` and `endIndex`. If `beginIndex` is negative, it has the same effect as if it were zero. If `endIndex` is greater than <xref uid="org.apache.hc.core5.util.ByteArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref>, it has the same effect as if it were <xref uid="org.apache.hc.core5.util.ByteArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref>. If the `beginIndex` is greater than the `endIndex`, `-1` is returned.
  syntax:
    content: public int indexOf(byte b, int from, int to)
    parameters:
    - id: b
      type: byte
      description: the byte to search for.
    - id: from
      type: int
      description: the index to start the search from.
    - id: to
      type: int
      description: the index to finish the search at.
    return:
      type: int
      description: >-
        the index of the first occurrence of the byte in the buffer
           within the given bounds, or <code>-1</code> if the byte does
           not occur.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: isEmpty()
  nameWithType: ByteArrayBuffer.isEmpty()
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.isEmpty()
  overload: org.apache.hc.core5.util.ByteArrayBuffer.isEmpty*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns `true` if this buffer is empty, that is, its <xref uid="org.apache.hc.core5.util.ByteArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref> is equal to `0`.
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
      description: >-
        <code>true</code> if this buffer is empty, <code>false</code>
           otherwise.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.isFull()
  id: isFull()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: isFull()
  nameWithType: ByteArrayBuffer.isFull()
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.isFull()
  overload: org.apache.hc.core5.util.ByteArrayBuffer.isFull*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns `true` if this buffer is full, that is, its <xref uid="org.apache.hc.core5.util.ByteArrayBuffer.length()" data-throw-if-not-resolved="false">#length()</xref> is equal to its <xref uid="org.apache.hc.core5.util.ByteArrayBuffer.capacity()" data-throw-if-not-resolved="false">#capacity()</xref>.
  syntax:
    content: public boolean isFull()
    return:
      type: boolean
      description: >-
        <code>true</code> if this buffer is full, <code>false</code>
           otherwise.
- uid: org.apache.hc.core5.util.ByteArrayBuffer.length()
  id: length()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: length()
  nameWithType: ByteArrayBuffer.length()
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.length()
  overload: org.apache.hc.core5.util.ByteArrayBuffer.length*
  type: Method
  package: org.apache.hc.core5.util
  summary: Returns the length of the buffer (byte count).
  syntax:
    content: public int length()
    return:
      type: int
      description: the length of the buffer
- uid: org.apache.hc.core5.util.ByteArrayBuffer.setLength(int)
  id: setLength(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: setLength(int len)
  nameWithType: ByteArrayBuffer.setLength(int len)
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.setLength(int len)
  overload: org.apache.hc.core5.util.ByteArrayBuffer.setLength*
  type: Method
  package: org.apache.hc.core5.util
  summary: Sets the length of the buffer. The new length value is expected to be less than the current capacity and greater than or equal to `0`.
  syntax:
    content: public void setLength(int len)
    parameters:
    - id: len
      type: int
      description: the new length
- uid: org.apache.hc.core5.util.ByteArrayBuffer.toByteArray()
  id: toByteArray()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.ByteArrayBuffer
  langs:
  - java
  name: toByteArray()
  nameWithType: ByteArrayBuffer.toByteArray()
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.toByteArray()
  overload: org.apache.hc.core5.util.ByteArrayBuffer.toByteArray*
  type: Method
  package: org.apache.hc.core5.util
  summary: Converts the content of this buffer to an array of bytes.
  syntax:
    content: public byte[] toByteArray()
    return:
      type: byte[]
      description: byte array
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.util.ByteArrayBuffer.ByteArrayBuffer*
  name: ByteArrayBuffer
  nameWithType: ByteArrayBuffer.ByteArrayBuffer
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.ByteArrayBuffer
  package: org.apache.hc.core5.util
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.util.ByteArrayBuffer.append*
  name: append
  nameWithType: ByteArrayBuffer.append
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.append
  package: org.apache.hc.core5.util
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.util.CharArrayBuffer
  name: CharArrayBuffer
  nameWithType: CharArrayBuffer
  fullName: org.apache.hc.core5.util.CharArrayBuffer
- uid: org.apache.hc.core5.util.ByteArrayBuffer.clear*
  name: clear
  nameWithType: ByteArrayBuffer.clear
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.clear
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.toByteArray*
  name: toByteArray
  nameWithType: ByteArrayBuffer.toByteArray
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.toByteArray
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.byteAt*
  name: byteAt
  nameWithType: ByteArrayBuffer.byteAt
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.byteAt
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.capacity*
  name: capacity
  nameWithType: ByteArrayBuffer.capacity
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.capacity
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.length*
  name: length
  nameWithType: ByteArrayBuffer.length
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.length
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.ensureCapacity*
  name: ensureCapacity
  nameWithType: ByteArrayBuffer.ensureCapacity
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.ensureCapacity
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.array*
  name: array
  nameWithType: ByteArrayBuffer.array
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.array
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.setLength*
  name: setLength
  nameWithType: ByteArrayBuffer.setLength
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.setLength
  package: org.apache.hc.core5.util
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.util.ByteArrayBuffer.isEmpty*
  name: isEmpty
  nameWithType: ByteArrayBuffer.isEmpty
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.isEmpty
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.ByteArrayBuffer.isFull*
  name: isFull
  nameWithType: ByteArrayBuffer.isFull
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.isFull
  package: org.apache.hc.core5.util
- uid: byte
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
- uid: org.apache.hc.core5.util.ByteArrayBuffer.indexOf*
  name: indexOf
  nameWithType: ByteArrayBuffer.indexOf
  fullName: org.apache.hc.core5.util.ByteArrayBuffer.indexOf
  package: org.apache.hc.core5.util
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
