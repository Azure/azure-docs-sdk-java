### YamlMime:JavaMember
uid: "com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig.fromHost*"
fullName: "com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig.fromHost"
name: "fromHost"
nameWithType: "SpeechTranslationConfig.fromHost"
members:
- uid: "com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig.fromHost(java.net.URI)"
  fullName: "com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig.fromHost(URI host)"
  name: "fromHost(URI host)"
  nameWithType: "SpeechTranslationConfig.fromHost(URI host)"
  summary: "Creates an instance of the speech translation config with specified host. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: If the host requires a subscription key for authentication, use fromHost(java.net.URI, String) to pass the subscription key as parameter. To use an authorization token with fromHost, use this method to create a SpeechTranslationConfig instance, and then call setAuthorizationToken() on the created SpeechTranslationConfig instance. Note: Added in version 1.8.0."
  parameters:
  - description: "The service host to connect to. Format is \"protocol://host:port\" where \":port\" is optional."
    name: "host"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechTranslationConfig fromHost(URI host)"
  returns:
    description: "A SpeechTranslationConfig instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig?alt=com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig&text=SpeechTranslationConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig.fromHost(java.net.URI,java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig.fromHost(URI host, String subscriptionKey)"
  name: "fromHost(URI host, String subscriptionKey)"
  nameWithType: "SpeechTranslationConfig.fromHost(URI host, String subscriptionKey)"
  summary: "Creates an instance of the speech translation config with specified host and subscription key. This method is intended only for users who use a non-default service host. Standard resource path will be assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead. Note: Query parameters are not allowed in the host URI and must be set by other APIs. Note: To use an authorization token with fromHost, use fromHost(java.net.URI), and then call setAuthorizationToken() on the created SpeechTranslationConfig instance. Note: Added in version 1.8.0."
  parameters:
  - description: "The service host to connect to. Format is \"protocol://host:port\" where \":port\" is optional."
    name: "host"
    type: "<xref href=\"java.net.URI?alt=java.net.URI&text=URI\" data-throw-if-not-resolved=\"False\" />"
  - description: "The subscription key."
    name: "subscriptionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SpeechTranslationConfig fromHost(URI host, String subscriptionKey)"
  returns:
    description: "A SpeechTranslationConfig instance."
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig?alt=com.microsoft.cognitiveservices.speech.translation.SpeechTranslationConfig&text=SpeechTranslationConfig\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.cognitiveservices.speech.translation"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.23.0-alpha.0.29223413
