### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder
  id: Builder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config
  children:
  - org.apache.hc.client5.http.config.RequestConfig.Builder.build()
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setAuthenticationEnabled(boolean)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setCircularRedirectsAllowed(boolean)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout(long,java.util.concurrent.TimeUnit)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout(org.apache.hc.core5.util.Timeout)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionKeepAlive(org.apache.hc.core5.util.TimeValue)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout(long,java.util.concurrent.TimeUnit)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout(org.apache.hc.core5.util.Timeout)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setContentCompressionEnabled(boolean)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setCookieSpec(java.lang.String)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setDefaultKeepAlive(long,java.util.concurrent.TimeUnit)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setExpectContinueEnabled(boolean)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setHardCancellationEnabled(boolean)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setMaxRedirects(int)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setProxy(org.apache.hc.core5.http.HttpHost)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setProxyPreferredAuthSchemes(java.util.Collection<java.lang.String>)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setRedirectsEnabled(boolean)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout(long,java.util.concurrent.TimeUnit)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout(org.apache.hc.core5.util.Timeout)
  - org.apache.hc.client5.http.config.RequestConfig.Builder.setTargetPreferredAuthSchemes(java.util.Collection<java.lang.String>)
  langs:
  - java
  name: RequestConfig.Builder
  nameWithType: RequestConfig.Builder
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder
  type: Class
  package: org.apache.hc.client5.http.config
  syntax:
    content: public static class RequestConfig.Builder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.Builder()
  id: Builder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: Builder()
  nameWithType: RequestConfig.Builder.Builder()
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.Builder()
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.Builder*
  type: Constructor
  package: org.apache.hc.client5.http.config
  syntax:
    content: " Builder()"
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.build()
  id: build()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: build()
  nameWithType: RequestConfig.Builder.build()
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.build()
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.build*
  type: Method
  package: org.apache.hc.client5.http.config
  syntax:
    content: public RequestConfig build()
    return:
      type: org.apache.hc.client5.http.config.RequestConfig
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setAuthenticationEnabled(boolean)
  id: setAuthenticationEnabled(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setAuthenticationEnabled(boolean authenticationEnabled)
  nameWithType: RequestConfig.Builder.setAuthenticationEnabled(boolean authenticationEnabled)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setAuthenticationEnabled(boolean authenticationEnabled)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setAuthenticationEnabled*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines whether authentication should be handled automatically.


    Default: `true`
  syntax:
    content: public RequestConfig.Builder setAuthenticationEnabled(boolean authenticationEnabled)
    parameters:
    - id: authenticationEnabled
      type: boolean
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setCircularRedirectsAllowed(boolean)
  id: setCircularRedirectsAllowed(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setCircularRedirectsAllowed(boolean circularRedirectsAllowed)
  nameWithType: RequestConfig.Builder.setCircularRedirectsAllowed(boolean circularRedirectsAllowed)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setCircularRedirectsAllowed(boolean circularRedirectsAllowed)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setCircularRedirectsAllowed*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines whether circular redirects (redirects to the same location) should be allowed. The HTTP spec is not sufficiently clear whether circular redirects are permitted, therefore optionally they can be enabled


    Default: `false`
  syntax:
    content: public RequestConfig.Builder setCircularRedirectsAllowed(boolean circularRedirectsAllowed)
    parameters:
    - id: circularRedirectsAllowed
      type: boolean
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout(long,java.util.concurrent.TimeUnit)
  id: setConnectTimeout(long,java.util.concurrent.TimeUnit)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setConnectTimeout(long connectTimeout, TimeUnit timeUnit)
  nameWithType: RequestConfig.Builder.setConnectTimeout(long connectTimeout, TimeUnit timeUnit)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout(long connectTimeout, TimeUnit timeUnit)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout*
  type: Method
  package: org.apache.hc.client5.http.config
  syntax:
    content: public RequestConfig.Builder setConnectTimeout(long connectTimeout, TimeUnit timeUnit)
    parameters:
    - id: connectTimeout
      type: long
    - id: timeUnit
      type: java.util.concurrent.TimeUnit
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout(org.apache.hc.core5.util.Timeout)
  id: setConnectTimeout(org.apache.hc.core5.util.Timeout)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setConnectTimeout(Timeout connectTimeout)
  nameWithType: RequestConfig.Builder.setConnectTimeout(Timeout connectTimeout)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout(Timeout connectTimeout)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines the timeout until a new connection is fully established. This may also include transport security negotiation exchanges such as `SSL` or `TLS` protocol negotiation).


    A timeout value of zero is interpreted as an infinite timeout.


    Default: 3 minutes
  syntax:
    content: public RequestConfig.Builder setConnectTimeout(Timeout connectTimeout)
    parameters:
    - id: connectTimeout
      type: org.apache.hc.core5.util.Timeout
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionKeepAlive(org.apache.hc.core5.util.TimeValue)
  id: setConnectionKeepAlive(org.apache.hc.core5.util.TimeValue)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setConnectionKeepAlive(TimeValue connectionKeepAlive)
  nameWithType: RequestConfig.Builder.setConnectionKeepAlive(TimeValue connectionKeepAlive)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionKeepAlive(TimeValue connectionKeepAlive)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionKeepAlive*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines the default of value of connection keep-alive time period when not explicitly communicated by the origin server with a `Keep-Alive` response header.


    A negative value is interpreted as an infinite keep-alive period.


    Default: 3 minutes
  syntax:
    content: public RequestConfig.Builder setConnectionKeepAlive(TimeValue connectionKeepAlive)
    parameters:
    - id: connectionKeepAlive
      type: org.apache.hc.core5.util.TimeValue
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout(long,java.util.concurrent.TimeUnit)
  id: setConnectionRequestTimeout(long,java.util.concurrent.TimeUnit)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setConnectionRequestTimeout(long connectionRequestTimeout, TimeUnit timeUnit)
  nameWithType: RequestConfig.Builder.setConnectionRequestTimeout(long connectionRequestTimeout, TimeUnit timeUnit)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout(long connectionRequestTimeout, TimeUnit timeUnit)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout*
  type: Method
  package: org.apache.hc.client5.http.config
  syntax:
    content: public RequestConfig.Builder setConnectionRequestTimeout(long connectionRequestTimeout, TimeUnit timeUnit)
    parameters:
    - id: connectionRequestTimeout
      type: long
    - id: timeUnit
      type: java.util.concurrent.TimeUnit
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout(org.apache.hc.core5.util.Timeout)
  id: setConnectionRequestTimeout(org.apache.hc.core5.util.Timeout)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setConnectionRequestTimeout(Timeout connectionRequestTimeout)
  nameWithType: RequestConfig.Builder.setConnectionRequestTimeout(Timeout connectionRequestTimeout)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout(Timeout connectionRequestTimeout)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Returns the connection lease request timeout used when requesting a connection from the connection manager.


    A timeout value of zero is interpreted as an infinite timeout.


    Default: 3 minutes.
  syntax:
    content: public RequestConfig.Builder setConnectionRequestTimeout(Timeout connectionRequestTimeout)
    parameters:
    - id: connectionRequestTimeout
      type: org.apache.hc.core5.util.Timeout
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setContentCompressionEnabled(boolean)
  id: setContentCompressionEnabled(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setContentCompressionEnabled(boolean contentCompressionEnabled)
  nameWithType: RequestConfig.Builder.setContentCompressionEnabled(boolean contentCompressionEnabled)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setContentCompressionEnabled(boolean contentCompressionEnabled)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setContentCompressionEnabled*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines whether the target server is requested to compress content.


    Default: `true`
  syntax:
    content: public RequestConfig.Builder setContentCompressionEnabled(boolean contentCompressionEnabled)
    parameters:
    - id: contentCompressionEnabled
      type: boolean
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setCookieSpec(java.lang.String)
  id: setCookieSpec(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setCookieSpec(String cookieSpec)
  nameWithType: RequestConfig.Builder.setCookieSpec(String cookieSpec)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setCookieSpec(String cookieSpec)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setCookieSpec*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines the name of the cookie specification to be used for HTTP state management.


    Default: `null`
  syntax:
    content: public RequestConfig.Builder setCookieSpec(String cookieSpec)
    parameters:
    - id: cookieSpec
      type: java.lang.String
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setDefaultKeepAlive(long,java.util.concurrent.TimeUnit)
  id: setDefaultKeepAlive(long,java.util.concurrent.TimeUnit)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setDefaultKeepAlive(long defaultKeepAlive, TimeUnit timeUnit)
  nameWithType: RequestConfig.Builder.setDefaultKeepAlive(long defaultKeepAlive, TimeUnit timeUnit)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setDefaultKeepAlive(long defaultKeepAlive, TimeUnit timeUnit)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setDefaultKeepAlive*
  type: Method
  package: org.apache.hc.client5.http.config
  syntax:
    content: public RequestConfig.Builder setDefaultKeepAlive(long defaultKeepAlive, TimeUnit timeUnit)
    parameters:
    - id: defaultKeepAlive
      type: long
    - id: timeUnit
      type: java.util.concurrent.TimeUnit
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setExpectContinueEnabled(boolean)
  id: setExpectContinueEnabled(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setExpectContinueEnabled(boolean expectContinueEnabled)
  nameWithType: RequestConfig.Builder.setExpectContinueEnabled(boolean expectContinueEnabled)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setExpectContinueEnabled(boolean expectContinueEnabled)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setExpectContinueEnabled*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines whether the 'Expect: 100-Continue' handshake is enabled for entity enclosing methods. The purpose of the 'Expect: 100-Continue' handshake is to allow a client that is sending a request message with a request body to determine if the origin server is willing to accept the request (based on the request headers) before the client sends the request body.


    The use of the 'Expect: 100-continue' handshake can result in a noticeable performance improvement for entity enclosing requests (such as POST and PUT) that require the target server's authentication.


    'Expect: 100-continue' handshake should be used with caution, as it may cause problems with HTTP servers and proxies that do not support HTTP/1.1 protocol.


    Default: `false`
  syntax:
    content: public RequestConfig.Builder setExpectContinueEnabled(boolean expectContinueEnabled)
    parameters:
    - id: expectContinueEnabled
      type: boolean
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setHardCancellationEnabled(boolean)
  id: setHardCancellationEnabled(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setHardCancellationEnabled(boolean hardCancellationEnabled)
  nameWithType: RequestConfig.Builder.setHardCancellationEnabled(boolean hardCancellationEnabled)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setHardCancellationEnabled(boolean hardCancellationEnabled)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setHardCancellationEnabled*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines whether request cancellation, such as through `Future#cancel(boolean)`, should kill the underlying connection. If this option is set to false, the client will attempt to preserve the underlying connection by allowing the request to complete in the background, discarding the response.


    Note that when this option is `true`, cancelling a request may cause other requests to fail, if they are waiting to use the same connection.


    On HTTP/2, this option has no effect. Request cancellation will always result in the stream being cancelled with a `RST_STREAM`. This has no effect on connection reuse.


    On non-asynchronous clients, this option has no effect. Request cancellation, such as through `HttpUriRequestBase#cancel()`, will always kill the underlying connection.


    Default: `true`
  syntax:
    content: public RequestConfig.Builder setHardCancellationEnabled(boolean hardCancellationEnabled)
    parameters:
    - id: hardCancellationEnabled
      type: boolean
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setMaxRedirects(int)
  id: setMaxRedirects(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setMaxRedirects(int maxRedirects)
  nameWithType: RequestConfig.Builder.setMaxRedirects(int maxRedirects)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setMaxRedirects(int maxRedirects)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setMaxRedirects*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Returns the maximum number of redirects to be followed. The limit on number of redirects is intended to prevent infinite loops.


    Default: `50`
  syntax:
    content: public RequestConfig.Builder setMaxRedirects(int maxRedirects)
    parameters:
    - id: maxRedirects
      type: int
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxy(org.apache.hc.core5.http.HttpHost)
  id: setProxy(org.apache.hc.core5.http.HttpHost)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setProxy(HttpHost proxy)
  nameWithType: RequestConfig.Builder.setProxy(HttpHost proxy)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxy(HttpHost proxy)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxy*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Returns HTTP proxy to be used for request execution.


    Default: `null`
  syntax:
    content: public RequestConfig.Builder setProxy(HttpHost proxy)
    parameters:
    - id: proxy
      type: org.apache.hc.core5.http.HttpHost
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxyPreferredAuthSchemes(java.util.Collection<java.lang.String>)
  id: setProxyPreferredAuthSchemes(java.util.Collection<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setProxyPreferredAuthSchemes(Collection<String> proxyPreferredAuthSchemes)
  nameWithType: RequestConfig.Builder.setProxyPreferredAuthSchemes(Collection<String> proxyPreferredAuthSchemes)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxyPreferredAuthSchemes(Collection<String> proxyPreferredAuthSchemes)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxyPreferredAuthSchemes*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines the order of preference for supported authentication schemes by their names when authenticating with the proxy host.


    Default: `null`
  syntax:
    content: public RequestConfig.Builder setProxyPreferredAuthSchemes(Collection<String> proxyPreferredAuthSchemes)
    parameters:
    - id: proxyPreferredAuthSchemes
      type: java.util.Collection<java.lang.String>
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setRedirectsEnabled(boolean)
  id: setRedirectsEnabled(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setRedirectsEnabled(boolean redirectsEnabled)
  nameWithType: RequestConfig.Builder.setRedirectsEnabled(boolean redirectsEnabled)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setRedirectsEnabled(boolean redirectsEnabled)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setRedirectsEnabled*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines whether redirects should be handled automatically.


    Default: `true`
  syntax:
    content: public RequestConfig.Builder setRedirectsEnabled(boolean redirectsEnabled)
    parameters:
    - id: redirectsEnabled
      type: boolean
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout(long,java.util.concurrent.TimeUnit)
  id: setResponseTimeout(long,java.util.concurrent.TimeUnit)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setResponseTimeout(long responseTimeout, TimeUnit timeUnit)
  nameWithType: RequestConfig.Builder.setResponseTimeout(long responseTimeout, TimeUnit timeUnit)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout(long responseTimeout, TimeUnit timeUnit)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout*
  type: Method
  package: org.apache.hc.client5.http.config
  syntax:
    content: public RequestConfig.Builder setResponseTimeout(long responseTimeout, TimeUnit timeUnit)
    parameters:
    - id: responseTimeout
      type: long
    - id: timeUnit
      type: java.util.concurrent.TimeUnit
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout(org.apache.hc.core5.util.Timeout)
  id: setResponseTimeout(org.apache.hc.core5.util.Timeout)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setResponseTimeout(Timeout responseTimeout)
  nameWithType: RequestConfig.Builder.setResponseTimeout(Timeout responseTimeout)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout(Timeout responseTimeout)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines the timeout until arrival of a response from the opposite endpoint.


    A timeout value of zero is interpreted as an infinite timeout.


    Please note that response timeout may be unsupported by HTTP transports with message multiplexing.


    Default: `null`
  syntax:
    content: public RequestConfig.Builder setResponseTimeout(Timeout responseTimeout)
    parameters:
    - id: responseTimeout
      type: org.apache.hc.core5.util.Timeout
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setTargetPreferredAuthSchemes(java.util.Collection<java.lang.String>)
  id: setTargetPreferredAuthSchemes(java.util.Collection<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.config.RequestConfig.Builder
  langs:
  - java
  name: setTargetPreferredAuthSchemes(Collection<String> targetPreferredAuthSchemes)
  nameWithType: RequestConfig.Builder.setTargetPreferredAuthSchemes(Collection<String> targetPreferredAuthSchemes)
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setTargetPreferredAuthSchemes(Collection<String> targetPreferredAuthSchemes)
  overload: org.apache.hc.client5.http.config.RequestConfig.Builder.setTargetPreferredAuthSchemes*
  type: Method
  package: org.apache.hc.client5.http.config
  summary: >-
    Determines the order of preference for supported authentication schemes by their names when authenticating with the target host.


    Default: `null`
  syntax:
    content: public RequestConfig.Builder setTargetPreferredAuthSchemes(Collection<String> targetPreferredAuthSchemes)
    parameters:
    - id: targetPreferredAuthSchemes
      type: java.util.Collection<java.lang.String>
    return:
      type: org.apache.hc.client5.http.config.RequestConfig.Builder
references:
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.Builder*
  name: Builder
  nameWithType: RequestConfig.Builder.Builder
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.Builder
  package: org.apache.hc.client5.http.config
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setExpectContinueEnabled*
  name: setExpectContinueEnabled
  nameWithType: RequestConfig.Builder.setExpectContinueEnabled
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setExpectContinueEnabled
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxy*
  name: setProxy
  nameWithType: RequestConfig.Builder.setProxy
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxy
  package: org.apache.hc.client5.http.config
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setCookieSpec*
  name: setCookieSpec
  nameWithType: RequestConfig.Builder.setCookieSpec
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setCookieSpec
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setRedirectsEnabled*
  name: setRedirectsEnabled
  nameWithType: RequestConfig.Builder.setRedirectsEnabled
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setRedirectsEnabled
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setCircularRedirectsAllowed*
  name: setCircularRedirectsAllowed
  nameWithType: RequestConfig.Builder.setCircularRedirectsAllowed
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setCircularRedirectsAllowed
  package: org.apache.hc.client5.http.config
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setMaxRedirects*
  name: setMaxRedirects
  nameWithType: RequestConfig.Builder.setMaxRedirects
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setMaxRedirects
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setAuthenticationEnabled*
  name: setAuthenticationEnabled
  nameWithType: RequestConfig.Builder.setAuthenticationEnabled
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setAuthenticationEnabled
  package: org.apache.hc.client5.http.config
- uid: java.util.Collection<java.lang.String>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setTargetPreferredAuthSchemes*
  name: setTargetPreferredAuthSchemes
  nameWithType: RequestConfig.Builder.setTargetPreferredAuthSchemes
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setTargetPreferredAuthSchemes
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxyPreferredAuthSchemes*
  name: setProxyPreferredAuthSchemes
  nameWithType: RequestConfig.Builder.setProxyPreferredAuthSchemes
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setProxyPreferredAuthSchemes
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout*
  name: setConnectionRequestTimeout
  nameWithType: RequestConfig.Builder.setConnectionRequestTimeout
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionRequestTimeout
  package: org.apache.hc.client5.http.config
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: java.util.concurrent.TimeUnit
  spec.java:
  - uid: java.util.concurrent.TimeUnit
    name: TimeUnit
    fullName: java.util.concurrent.TimeUnit
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout*
  name: setConnectTimeout
  nameWithType: RequestConfig.Builder.setConnectTimeout
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectTimeout
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout*
  name: setResponseTimeout
  nameWithType: RequestConfig.Builder.setResponseTimeout
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setResponseTimeout
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionKeepAlive*
  name: setConnectionKeepAlive
  nameWithType: RequestConfig.Builder.setConnectionKeepAlive
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setConnectionKeepAlive
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setDefaultKeepAlive*
  name: setDefaultKeepAlive
  nameWithType: RequestConfig.Builder.setDefaultKeepAlive
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setDefaultKeepAlive
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setContentCompressionEnabled*
  name: setContentCompressionEnabled
  nameWithType: RequestConfig.Builder.setContentCompressionEnabled
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setContentCompressionEnabled
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.setHardCancellationEnabled*
  name: setHardCancellationEnabled
  nameWithType: RequestConfig.Builder.setHardCancellationEnabled
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.setHardCancellationEnabled
  package: org.apache.hc.client5.http.config
- uid: org.apache.hc.client5.http.config.RequestConfig
  name: RequestConfig
  nameWithType: RequestConfig
  fullName: org.apache.hc.client5.http.config.RequestConfig
- uid: org.apache.hc.client5.http.config.RequestConfig.Builder.build*
  name: build
  nameWithType: RequestConfig.Builder.build
  fullName: org.apache.hc.client5.http.config.RequestConfig.Builder.build
  package: org.apache.hc.client5.http.config
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
