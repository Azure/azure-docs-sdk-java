### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.PropertyWriter.findAnnotation*"
fullName: "com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation"
name: "<A>findAnnotation"
nameWithType: "PropertyWriter.<A>findAnnotation"
members:
- uid: "com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)"
  fullName: "com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(Class<A> acls)"
  name: "<A>findAnnotation(Class<A> acls)"
  nameWithType: "PropertyWriter.<A>findAnnotation(Class<A> acls)"
  summary: "Convenience method for accessing annotation that may be associated either directly on property, or, if not, via enclosing class (context). This allows adding baseline contextual annotations, for example, by adding an annotation for a given class and making that apply to all properties unless overridden by per-property annotations.\n\nThis method is functionally equivalent to:\n\n```java\nMyAnnotation ann = propWriter.getAnnotation(MyAnnotation.class);\n  if (ann == null) {\n    ann = propWriter.getContextAnnotation(MyAnnotation.class);\n  }\n```\n\nthat is, tries to find a property annotation first, but if one is not found, tries to find context-annotation (from enclosing class) of same type."
  parameters:
  - name: "acls"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public A <A>findAnnotation(Class<A> acls)"
  returns:
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
