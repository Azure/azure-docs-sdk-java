### YamlMime:ManagedReference
items:
- uid: com.azure.core.implementation.logging.DefaultLogger
  id: DefaultLogger
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging
  children:
  - com.azure.core.implementation.logging.DefaultLogger.DEBUG
  - com.azure.core.implementation.logging.DefaultLogger.DefaultLogger(java.lang.Class<?>)
  - com.azure.core.implementation.logging.DefaultLogger.DefaultLogger(java.lang.String)
  - com.azure.core.implementation.logging.DefaultLogger.ERROR
  - com.azure.core.implementation.logging.DefaultLogger.INFO
  - com.azure.core.implementation.logging.DefaultLogger.TRACE
  - com.azure.core.implementation.logging.DefaultLogger.WARN
  - com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String)
  - com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Object,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Object...)
  - com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Throwable)
  - com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String)
  - com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Object,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Object...)
  - com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Throwable)
  - com.azure.core.implementation.logging.DefaultLogger.getName()
  - com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String)
  - com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Object,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Object...)
  - com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Throwable)
  - com.azure.core.implementation.logging.DefaultLogger.isDebugEnabled()
  - com.azure.core.implementation.logging.DefaultLogger.isErrorEnabled()
  - com.azure.core.implementation.logging.DefaultLogger.isInfoEnabled()
  - com.azure.core.implementation.logging.DefaultLogger.isTraceEnabled()
  - com.azure.core.implementation.logging.DefaultLogger.isWarnEnabled()
  - com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String)
  - com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Object,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Object...)
  - com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Throwable)
  - com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String)
  - com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Object,java.lang.Object)
  - com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Object...)
  - com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Throwable)
  langs:
  - java
  name: DefaultLogger
  nameWithType: DefaultLogger
  fullName: com.azure.core.implementation.logging.DefaultLogger
  type: Class
  package: com.azure.core.implementation.logging
  summary: This class is an internal implementation of slf4j logger.
  syntax:
    content: public final class DefaultLogger extends MarkerIgnoringBase
  inheritance:
  - java.lang.Object
  - org.slf4j.helpers.NamedLoggerBase
  - org.slf4j.helpers.MarkerIgnoringBase
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.isDebugEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isErrorEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isInfoEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isTraceEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.isWarnEnabled(org.slf4j.Marker)
  - org.slf4j.helpers.MarkerIgnoringBase.toString()
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  - org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  - org.slf4j.helpers.NamedLoggerBase.getName()
  - org.slf4j.helpers.NamedLoggerBase.readResolve()
- uid: com.azure.core.implementation.logging.DefaultLogger.DEBUG
  id: DEBUG
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: DEBUG
  nameWithType: DefaultLogger.DEBUG
  fullName: com.azure.core.implementation.logging.DefaultLogger.DEBUG
  type: Field
  package: com.azure.core.implementation.logging
  syntax:
    content: public static final String DEBUG
    return:
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger(java.lang.Class<?>)
  id: DefaultLogger(java.lang.Class<?>)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: DefaultLogger(Class<?> clazz)
  nameWithType: DefaultLogger.DefaultLogger(Class<?> clazz)
  fullName: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger(Class<?> clazz)
  overload: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger*
  type: Constructor
  package: com.azure.core.implementation.logging
  summary: Construct DefaultLogger for the given class.
  syntax:
    content: public DefaultLogger(Class<?> clazz)
    parameters:
    - id: clazz
      type: java.lang.Class<?>
      description: Class creating the logger.
- uid: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger(java.lang.String)
  id: DefaultLogger(java.lang.String)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: DefaultLogger(String className)
  nameWithType: DefaultLogger.DefaultLogger(String className)
  fullName: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger(String className)
  overload: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger*
  type: Constructor
  package: com.azure.core.implementation.logging
  summary: Construct DefaultLogger for the given class name.
  syntax:
    content: public DefaultLogger(String className)
    parameters:
    - id: className
      type: java.lang.String
      description: >-
        Class name creating the logger. Will use class canonical name if exists, otherwise use the
         class name passes in.
- uid: com.azure.core.implementation.logging.DefaultLogger.ERROR
  id: ERROR
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: ERROR
  nameWithType: DefaultLogger.ERROR
  fullName: com.azure.core.implementation.logging.DefaultLogger.ERROR
  type: Field
  package: com.azure.core.implementation.logging
  syntax:
    content: public static final String ERROR
    return:
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.INFO
  id: INFO
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: INFO
  nameWithType: DefaultLogger.INFO
  fullName: com.azure.core.implementation.logging.DefaultLogger.INFO
  type: Field
  package: com.azure.core.implementation.logging
  syntax:
    content: public static final String INFO
    return:
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.TRACE
  id: TRACE
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: TRACE
  nameWithType: DefaultLogger.TRACE
  fullName: com.azure.core.implementation.logging.DefaultLogger.TRACE
  type: Field
  package: com.azure.core.implementation.logging
  syntax:
    content: public static final String TRACE
    return:
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.WARN
  id: WARN
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: WARN
  nameWithType: DefaultLogger.WARN
  fullName: com.azure.core.implementation.logging.DefaultLogger.WARN
  type: Field
  package: com.azure.core.implementation.logging
  syntax:
    content: public static final String WARN
    return:
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String)
  id: debug(java.lang.String)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: debug(String msg)
  nameWithType: DefaultLogger.debug(String msg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.debug(String msg)
  overload: com.azure.core.implementation.logging.DefaultLogger.debug*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void debug(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Object)
  id: debug(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: debug(String format, Object arg)
  nameWithType: DefaultLogger.debug(String format, Object arg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.debug(String format, Object arg)
  overload: com.azure.core.implementation.logging.DefaultLogger.debug*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void debug(String format, Object arg)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Object,java.lang.Object)
  id: debug(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: debug(String format, Object arg1, Object arg2)
  nameWithType: DefaultLogger.debug(String format, Object arg1, Object arg2)
  fullName: com.azure.core.implementation.logging.DefaultLogger.debug(String format, Object arg1, Object arg2)
  overload: com.azure.core.implementation.logging.DefaultLogger.debug*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void debug(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Object...)
  id: debug(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: debug(String format, Object[] args)
  nameWithType: DefaultLogger.debug(String format, Object[] args)
  fullName: com.azure.core.implementation.logging.DefaultLogger.debug(String format, Object[] args)
  overload: com.azure.core.implementation.logging.DefaultLogger.debug*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void debug(String format, Object[] args)
    parameters:
    - id: format
      type: java.lang.String
    - id: args
      type: java.lang.Object[]
- uid: com.azure.core.implementation.logging.DefaultLogger.debug(java.lang.String,java.lang.Throwable)
  id: debug(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: debug(String msg, Throwable t)
  nameWithType: DefaultLogger.debug(String msg, Throwable t)
  fullName: com.azure.core.implementation.logging.DefaultLogger.debug(String msg, Throwable t)
  overload: com.azure.core.implementation.logging.DefaultLogger.debug*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void debug(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String)
  id: error(java.lang.String)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: error(String msg)
  nameWithType: DefaultLogger.error(String msg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.error(String msg)
  overload: com.azure.core.implementation.logging.DefaultLogger.error*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void error(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Object)
  id: error(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: error(String format, Object arg)
  nameWithType: DefaultLogger.error(String format, Object arg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.error(String format, Object arg)
  overload: com.azure.core.implementation.logging.DefaultLogger.error*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void error(String format, Object arg)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Object,java.lang.Object)
  id: error(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: error(String format, Object arg1, Object arg2)
  nameWithType: DefaultLogger.error(String format, Object arg1, Object arg2)
  fullName: com.azure.core.implementation.logging.DefaultLogger.error(String format, Object arg1, Object arg2)
  overload: com.azure.core.implementation.logging.DefaultLogger.error*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void error(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Object...)
  id: error(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: error(String format, Object[] args)
  nameWithType: DefaultLogger.error(String format, Object[] args)
  fullName: com.azure.core.implementation.logging.DefaultLogger.error(String format, Object[] args)
  overload: com.azure.core.implementation.logging.DefaultLogger.error*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void error(String format, Object[] args)
    parameters:
    - id: format
      type: java.lang.String
    - id: args
      type: java.lang.Object[]
- uid: com.azure.core.implementation.logging.DefaultLogger.error(java.lang.String,java.lang.Throwable)
  id: error(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: error(String msg, Throwable t)
  nameWithType: DefaultLogger.error(String msg, Throwable t)
  fullName: com.azure.core.implementation.logging.DefaultLogger.error(String msg, Throwable t)
  overload: com.azure.core.implementation.logging.DefaultLogger.error*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void error(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: com.azure.core.implementation.logging.DefaultLogger.getName()
  id: getName()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: getName()
  nameWithType: DefaultLogger.getName()
  fullName: com.azure.core.implementation.logging.DefaultLogger.getName()
  overload: com.azure.core.implementation.logging.DefaultLogger.getName*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String)
  id: info(java.lang.String)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: info(String msg)
  nameWithType: DefaultLogger.info(String msg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.info(String msg)
  overload: com.azure.core.implementation.logging.DefaultLogger.info*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void info(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Object)
  id: info(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: info(String format, Object arg)
  nameWithType: DefaultLogger.info(String format, Object arg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.info(String format, Object arg)
  overload: com.azure.core.implementation.logging.DefaultLogger.info*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void info(String format, Object arg)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Object,java.lang.Object)
  id: info(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: info(String format, Object arg1, Object arg2)
  nameWithType: DefaultLogger.info(String format, Object arg1, Object arg2)
  fullName: com.azure.core.implementation.logging.DefaultLogger.info(String format, Object arg1, Object arg2)
  overload: com.azure.core.implementation.logging.DefaultLogger.info*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void info(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Object...)
  id: info(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: info(String format, Object[] args)
  nameWithType: DefaultLogger.info(String format, Object[] args)
  fullName: com.azure.core.implementation.logging.DefaultLogger.info(String format, Object[] args)
  overload: com.azure.core.implementation.logging.DefaultLogger.info*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void info(String format, Object[] args)
    parameters:
    - id: format
      type: java.lang.String
    - id: args
      type: java.lang.Object[]
- uid: com.azure.core.implementation.logging.DefaultLogger.info(java.lang.String,java.lang.Throwable)
  id: info(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: info(String msg, Throwable t)
  nameWithType: DefaultLogger.info(String msg, Throwable t)
  fullName: com.azure.core.implementation.logging.DefaultLogger.info(String msg, Throwable t)
  overload: com.azure.core.implementation.logging.DefaultLogger.info*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void info(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: com.azure.core.implementation.logging.DefaultLogger.isDebugEnabled()
  id: isDebugEnabled()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: isDebugEnabled()
  nameWithType: DefaultLogger.isDebugEnabled()
  fullName: com.azure.core.implementation.logging.DefaultLogger.isDebugEnabled()
  overload: com.azure.core.implementation.logging.DefaultLogger.isDebugEnabled*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public boolean isDebugEnabled()
    return:
      type: boolean
- uid: com.azure.core.implementation.logging.DefaultLogger.isErrorEnabled()
  id: isErrorEnabled()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: isErrorEnabled()
  nameWithType: DefaultLogger.isErrorEnabled()
  fullName: com.azure.core.implementation.logging.DefaultLogger.isErrorEnabled()
  overload: com.azure.core.implementation.logging.DefaultLogger.isErrorEnabled*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public boolean isErrorEnabled()
    return:
      type: boolean
- uid: com.azure.core.implementation.logging.DefaultLogger.isInfoEnabled()
  id: isInfoEnabled()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: isInfoEnabled()
  nameWithType: DefaultLogger.isInfoEnabled()
  fullName: com.azure.core.implementation.logging.DefaultLogger.isInfoEnabled()
  overload: com.azure.core.implementation.logging.DefaultLogger.isInfoEnabled*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public boolean isInfoEnabled()
    return:
      type: boolean
- uid: com.azure.core.implementation.logging.DefaultLogger.isTraceEnabled()
  id: isTraceEnabled()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: isTraceEnabled()
  nameWithType: DefaultLogger.isTraceEnabled()
  fullName: com.azure.core.implementation.logging.DefaultLogger.isTraceEnabled()
  overload: com.azure.core.implementation.logging.DefaultLogger.isTraceEnabled*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public boolean isTraceEnabled()
    return:
      type: boolean
- uid: com.azure.core.implementation.logging.DefaultLogger.isWarnEnabled()
  id: isWarnEnabled()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: isWarnEnabled()
  nameWithType: DefaultLogger.isWarnEnabled()
  fullName: com.azure.core.implementation.logging.DefaultLogger.isWarnEnabled()
  overload: com.azure.core.implementation.logging.DefaultLogger.isWarnEnabled*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public boolean isWarnEnabled()
    return:
      type: boolean
- uid: com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String)
  id: trace(java.lang.String)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: trace(String msg)
  nameWithType: DefaultLogger.trace(String msg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.trace(String msg)
  overload: com.azure.core.implementation.logging.DefaultLogger.trace*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void trace(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Object)
  id: trace(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: trace(String format, Object arg1)
  nameWithType: DefaultLogger.trace(String format, Object arg1)
  fullName: com.azure.core.implementation.logging.DefaultLogger.trace(String format, Object arg1)
  overload: com.azure.core.implementation.logging.DefaultLogger.trace*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void trace(String format, Object arg1)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Object,java.lang.Object)
  id: trace(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: trace(String format, Object arg1, Object arg2)
  nameWithType: DefaultLogger.trace(String format, Object arg1, Object arg2)
  fullName: com.azure.core.implementation.logging.DefaultLogger.trace(String format, Object arg1, Object arg2)
  overload: com.azure.core.implementation.logging.DefaultLogger.trace*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void trace(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Object...)
  id: trace(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: trace(String format, Object[] arguments)
  nameWithType: DefaultLogger.trace(String format, Object[] arguments)
  fullName: com.azure.core.implementation.logging.DefaultLogger.trace(String format, Object[] arguments)
  overload: com.azure.core.implementation.logging.DefaultLogger.trace*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void trace(String format, Object[] arguments)
    parameters:
    - id: format
      type: java.lang.String
    - id: arguments
      type: java.lang.Object[]
- uid: com.azure.core.implementation.logging.DefaultLogger.trace(java.lang.String,java.lang.Throwable)
  id: trace(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: trace(String msg, Throwable t)
  nameWithType: DefaultLogger.trace(String msg, Throwable t)
  fullName: com.azure.core.implementation.logging.DefaultLogger.trace(String msg, Throwable t)
  overload: com.azure.core.implementation.logging.DefaultLogger.trace*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void trace(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
- uid: com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String)
  id: warn(java.lang.String)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: warn(String msg)
  nameWithType: DefaultLogger.warn(String msg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.warn(String msg)
  overload: com.azure.core.implementation.logging.DefaultLogger.warn*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void warn(String msg)
    parameters:
    - id: msg
      type: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Object)
  id: warn(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: warn(String format, Object arg)
  nameWithType: DefaultLogger.warn(String format, Object arg)
  fullName: com.azure.core.implementation.logging.DefaultLogger.warn(String format, Object arg)
  overload: com.azure.core.implementation.logging.DefaultLogger.warn*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void warn(String format, Object arg)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Object,java.lang.Object)
  id: warn(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: warn(String format, Object arg1, Object arg2)
  nameWithType: DefaultLogger.warn(String format, Object arg1, Object arg2)
  fullName: com.azure.core.implementation.logging.DefaultLogger.warn(String format, Object arg1, Object arg2)
  overload: com.azure.core.implementation.logging.DefaultLogger.warn*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void warn(String format, Object arg1, Object arg2)
    parameters:
    - id: format
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
- uid: com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Object...)
  id: warn(java.lang.String,java.lang.Object...)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: warn(String format, Object[] args)
  nameWithType: DefaultLogger.warn(String format, Object[] args)
  fullName: com.azure.core.implementation.logging.DefaultLogger.warn(String format, Object[] args)
  overload: com.azure.core.implementation.logging.DefaultLogger.warn*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void warn(String format, Object[] args)
    parameters:
    - id: format
      type: java.lang.String
    - id: args
      type: java.lang.Object[]
- uid: com.azure.core.implementation.logging.DefaultLogger.warn(java.lang.String,java.lang.Throwable)
  id: warn(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.implementation.logging.DefaultLogger
  langs:
  - java
  name: warn(String msg, Throwable t)
  nameWithType: DefaultLogger.warn(String msg, Throwable t)
  fullName: com.azure.core.implementation.logging.DefaultLogger.warn(String msg, Throwable t)
  overload: com.azure.core.implementation.logging.DefaultLogger.warn*
  type: Method
  package: com.azure.core.implementation.logging
  syntax:
    content: public void warn(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger*
  name: DefaultLogger
  nameWithType: DefaultLogger.DefaultLogger
  fullName: com.azure.core.implementation.logging.DefaultLogger.DefaultLogger
  package: com.azure.core.implementation.logging
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.implementation.logging.DefaultLogger.getName*
  name: getName
  nameWithType: DefaultLogger.getName
  fullName: com.azure.core.implementation.logging.DefaultLogger.getName
  package: com.azure.core.implementation.logging
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.implementation.logging.DefaultLogger.isTraceEnabled*
  name: isTraceEnabled
  nameWithType: DefaultLogger.isTraceEnabled
  fullName: com.azure.core.implementation.logging.DefaultLogger.isTraceEnabled
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.trace*
  name: trace
  nameWithType: DefaultLogger.trace
  fullName: com.azure.core.implementation.logging.DefaultLogger.trace
  package: com.azure.core.implementation.logging
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.azure.core.implementation.logging.DefaultLogger.isDebugEnabled*
  name: isDebugEnabled
  nameWithType: DefaultLogger.isDebugEnabled
  fullName: com.azure.core.implementation.logging.DefaultLogger.isDebugEnabled
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.debug*
  name: debug
  nameWithType: DefaultLogger.debug
  fullName: com.azure.core.implementation.logging.DefaultLogger.debug
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.isInfoEnabled*
  name: isInfoEnabled
  nameWithType: DefaultLogger.isInfoEnabled
  fullName: com.azure.core.implementation.logging.DefaultLogger.isInfoEnabled
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.info*
  name: info
  nameWithType: DefaultLogger.info
  fullName: com.azure.core.implementation.logging.DefaultLogger.info
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.isWarnEnabled*
  name: isWarnEnabled
  nameWithType: DefaultLogger.isWarnEnabled
  fullName: com.azure.core.implementation.logging.DefaultLogger.isWarnEnabled
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.warn*
  name: warn
  nameWithType: DefaultLogger.warn
  fullName: com.azure.core.implementation.logging.DefaultLogger.warn
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.isErrorEnabled*
  name: isErrorEnabled
  nameWithType: DefaultLogger.isErrorEnabled
  fullName: com.azure.core.implementation.logging.DefaultLogger.isErrorEnabled
  package: com.azure.core.implementation.logging
- uid: com.azure.core.implementation.logging.DefaultLogger.error*
  name: error
  nameWithType: DefaultLogger.error
  fullName: com.azure.core.implementation.logging.DefaultLogger.error
  package: com.azure.core.implementation.logging
- uid: org.slf4j.helpers.MarkerIgnoringBase
  name: MarkerIgnoringBase
  nameWithType: MarkerIgnoringBase
  fullName: org.slf4j.helpers.MarkerIgnoringBase
- uid: org.slf4j.helpers.MarkerIgnoringBase.isDebugEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isDebugEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isDebugEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isDebugEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.info(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.info(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.trace(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.error(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.info(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.error(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.NamedLoggerBase.getName()
  name: NamedLoggerBase.getName()
  nameWithType: NamedLoggerBase.getName()
  fullName: org.slf4j.helpers.NamedLoggerBase.getName()
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.info(Marker,String)
  nameWithType: MarkerIgnoringBase.info(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.error(Marker,String)
  nameWithType: MarkerIgnoringBase.error(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.trace(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.info(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.info(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.info(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: org.slf4j.helpers.MarkerIgnoringBase.isErrorEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isErrorEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isErrorEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isErrorEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.warn(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.trace(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.debug(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.debug(Marker,String)
  nameWithType: MarkerIgnoringBase.debug(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.slf4j.helpers.MarkerIgnoringBase.isInfoEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isInfoEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isInfoEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isInfoEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.error(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.warn(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.warn(Marker,String)
  nameWithType: MarkerIgnoringBase.warn(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object...)
  name: MarkerIgnoringBase.warn(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object...)
- uid: org.slf4j.helpers.MarkerIgnoringBase.isTraceEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isTraceEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isTraceEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isTraceEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
  name: MarkerIgnoringBase.debug(Marker,String,Throwable)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Throwable)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
- uid: org.slf4j.helpers.NamedLoggerBase.readResolve()
  name: NamedLoggerBase.readResolve()
  nameWithType: NamedLoggerBase.readResolve()
  fullName: org.slf4j.helpers.NamedLoggerBase.readResolve()
- uid: org.slf4j.helpers.MarkerIgnoringBase.isWarnEnabled(org.slf4j.Marker)
  name: MarkerIgnoringBase.isWarnEnabled(Marker)
  nameWithType: MarkerIgnoringBase.isWarnEnabled(Marker)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.isWarnEnabled(org.slf4j.Marker)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.trace(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.trace(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.toString()
  name: MarkerIgnoringBase.toString()
  nameWithType: MarkerIgnoringBase.toString()
  fullName: org.slf4j.helpers.MarkerIgnoringBase.toString()
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
  name: MarkerIgnoringBase.debug(Marker,String,Object)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String)
  name: MarkerIgnoringBase.trace(Marker,String)
  nameWithType: MarkerIgnoringBase.trace(Marker,String)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.trace(org.slf4j.Marker,java.lang.String)
- uid: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.error(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.error(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.warn(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.warn(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
  name: MarkerIgnoringBase.debug(Marker,String,Object,Object)
  nameWithType: MarkerIgnoringBase.debug(Marker,String,Object,Object)
  fullName: org.slf4j.helpers.MarkerIgnoringBase.debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
