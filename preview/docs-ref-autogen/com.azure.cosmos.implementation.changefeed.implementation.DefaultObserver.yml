### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver"
  id: "DefaultObserver"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.DefaultObserver(java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>)"
  - "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.close(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext,com.azure.cosmos.implementation.changefeed.ChangeFeedObserverCloseReason)"
  - "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.open(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext)"
  - "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.processChanges(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext,java.util.List<com.fasterxml.jackson.databind.JsonNode>)"
  langs:
  - "java"
  name: "DefaultObserver<T>"
  nameWithType: "DefaultObserver<T>"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>"
  type: "Class"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: " class DefaultObserver<T> implements ChangeFeedObserver"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.DefaultObserver(java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>)"
  id: "DefaultObserver(java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver"
  langs:
  - "java"
  name: "DefaultObserver(Consumer<List<JsonNode>> consumer)"
  nameWithType: "DefaultObserver<T>.DefaultObserver(Consumer<List<JsonNode>> consumer)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.DefaultObserver(Consumer<List<JsonNode>> consumer)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.DefaultObserver*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public DefaultObserver(Consumer<List<JsonNode>> consumer)"
    parameters:
    - id: "consumer"
      type: "java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.close(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext,com.azure.cosmos.implementation.changefeed.ChangeFeedObserverCloseReason)"
  id: "close(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext,com.azure.cosmos.implementation.changefeed.ChangeFeedObserverCloseReason)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver"
  langs:
  - "java"
  name: "close(ChangeFeedObserverContext context, ChangeFeedObserverCloseReason reason)"
  nameWithType: "DefaultObserver<T>.close(ChangeFeedObserverContext context, ChangeFeedObserverCloseReason reason)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.close(ChangeFeedObserverContext context, ChangeFeedObserverCloseReason reason)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.close*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public void close(ChangeFeedObserverContext context, ChangeFeedObserverCloseReason reason)"
    parameters:
    - id: "context"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext"
    - id: "reason"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverCloseReason"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.open(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext)"
  id: "open(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver"
  langs:
  - "java"
  name: "open(ChangeFeedObserverContext context)"
  nameWithType: "DefaultObserver<T>.open(ChangeFeedObserverContext context)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.open(ChangeFeedObserverContext context)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.open*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public void open(ChangeFeedObserverContext context)"
    parameters:
    - id: "context"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.processChanges(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext,java.util.List<com.fasterxml.jackson.databind.JsonNode>)"
  id: "processChanges(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext,java.util.List<com.fasterxml.jackson.databind.JsonNode>)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver"
  langs:
  - "java"
  name: "processChanges(ChangeFeedObserverContext context, List<JsonNode> docs)"
  nameWithType: "DefaultObserver<T>.processChanges(ChangeFeedObserverContext context, List<JsonNode> docs)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.processChanges(ChangeFeedObserverContext context, List<JsonNode> docs)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.processChanges*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Void> processChanges(ChangeFeedObserverContext context, List<JsonNode> docs)"
    parameters:
    - id: "context"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext"
    - id: "docs"
      type: "java.util.List<com.fasterxml.jackson.databind.JsonNode>"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
references:
- uid: "java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>"
  spec.java:
  - uid: "java.util.function.Consumer"
    name: "Consumer"
    fullName: "java.util.function.Consumer"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.fasterxml.jackson.databind.JsonNode"
    name: "JsonNode"
    fullName: "com.fasterxml.jackson.databind.JsonNode"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.DefaultObserver*"
  name: "DefaultObserver"
  nameWithType: "DefaultObserver<T>.DefaultObserver"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.DefaultObserver"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext"
  name: "ChangeFeedObserverContext"
  nameWithType: "ChangeFeedObserverContext"
  fullName: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverContext"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.open*"
  name: "open"
  nameWithType: "DefaultObserver<T>.open"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.open"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverCloseReason"
  name: "ChangeFeedObserverCloseReason"
  nameWithType: "ChangeFeedObserverCloseReason"
  fullName: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverCloseReason"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.close*"
  name: "close"
  nameWithType: "DefaultObserver<T>.close"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.close"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.util.List<com.fasterxml.jackson.databind.JsonNode>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.fasterxml.jackson.databind.JsonNode"
    name: "JsonNode"
    fullName: "com.fasterxml.jackson.databind.JsonNode"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver.processChanges*"
  name: "processChanges"
  nameWithType: "DefaultObserver<T>.processChanges"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.DefaultObserver<T>.processChanges"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
  name: "ChangeFeedObserver"
  nameWithType: "ChangeFeedObserver"
  fullName: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.function.Consumer"
  name: "Consumer"
  nameWithType: "Consumer"
  fullName: "java.util.function.Consumer"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.fasterxml.jackson.databind.JsonNode"
  name: "JsonNode"
  nameWithType: "JsonNode"
  fullName: "com.fasterxml.jackson.databind.JsonNode"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
