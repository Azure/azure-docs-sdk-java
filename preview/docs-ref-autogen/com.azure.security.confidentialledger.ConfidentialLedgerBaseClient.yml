### YamlMime:JavaType
uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient"
fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient"
name: "ConfidentialLedgerBaseClient"
nameWithType: "ConfidentialLedgerBaseClient"
summary: "Initializes a new instance of the Confidential<wbr>Ledger<wbr>Base<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class ConfidentialLedgerBaseClient"
methods:
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.createOrUpdateUser(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.createOrUpdateUser(String userId)"
  name: "createOrUpdateUser(String userId)"
  nameWithType: "ConfidentialLedgerBaseClient.createOrUpdateUser(String userId)"
  summary: "A JSON merge patch is applied for existing users."
  parameters:
  - description: "The user id, either an AAD object ID or certificate fingerprint."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest createOrUpdateUser(String userId)"
  desc: "A JSON merge patch is applied for existing users.\n\n**Request Body Schema**\n\n```java\n{\n     assignedRole: String(Administrator/Contributor/Reader)\n     userId: String\n }\n```\n\n**Response Body Schema**\n\n```java\n(recursive schema, see above)\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.deleteUser(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.deleteUser(String userId)"
  name: "deleteUser(String userId)"
  nameWithType: "ConfidentialLedgerBaseClient.deleteUser(String userId)"
  summary: "Deletes a user from the Confidential Ledger."
  parameters:
  - description: "The user id, either an AAD object ID or certificate fingerprint."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest deleteUser(String userId)"
  desc: "Deletes a user from the Confidential Ledger."
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getConsortiumMembers()"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getConsortiumMembers()"
  name: "getConsortiumMembers()"
  nameWithType: "ConfidentialLedgerBaseClient.getConsortiumMembers()"
  summary: "Consortium members can manage the Confidential Ledger."
  syntax: "public DynamicRequest getConsortiumMembers()"
  desc: "Consortium members can manage the Confidential Ledger.\n\n**Response Body Schema**\n\n```java\n{\n     members: [\n         {\n             certificate: String\n             id: String\n         }\n     ]\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getConstitution()"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getConstitution()"
  name: "getConstitution()"
  nameWithType: "ConfidentialLedgerBaseClient.getConstitution()"
  summary: "The constitution is a script that assesses and applies proposals from consortium members."
  syntax: "public DynamicRequest getConstitution()"
  desc: "The constitution is a script that assesses and applies proposals from consortium members.\n\n**Response Body Schema**\n\n```java\n{\n     digest: String\n     script: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getCurrentLedgerEntry()"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getCurrentLedgerEntry()"
  name: "getCurrentLedgerEntry()"
  nameWithType: "ConfidentialLedgerBaseClient.getCurrentLedgerEntry()"
  summary: "A sub-ledger id may optionally be specified."
  syntax: "public DynamicRequest getCurrentLedgerEntry()"
  desc: "A sub-ledger id may optionally be specified.\n\n**Optional Query Parameters**\n\n    | ----------- | ------ | ------------------ |\n    | Name        | Type   | Description        |\n    | subLedgerId | String | The sub-ledger id. |\n\n**Response Body Schema**\n\n```java\n{\n     contents: String\n     subLedgerId: String\n     transactionId: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getEnclaveQuotes()"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getEnclaveQuotes()"
  name: "getEnclaveQuotes()"
  nameWithType: "ConfidentialLedgerBaseClient.getEnclaveQuotes()"
  summary: "A quote is an SGX enclave measurement that can be used to verify the validity of a node and its enclave."
  syntax: "public DynamicRequest getEnclaveQuotes()"
  desc: "A quote is an SGX enclave measurement that can be used to verify the validity of a node and its enclave.\n\n**Response Body Schema**\n\n```java\n{\n     currentNodeId: String\n     enclaveQuotes: {\n         String: {\n             nodeId: String\n             mrenclave: String\n             quoteVersion: String\n             raw: String\n         }\n     }\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntries()"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntries()"
  name: "getLedgerEntries()"
  nameWithType: "ConfidentialLedgerBaseClient.getLedgerEntries()"
  summary: "A sub-ledger id may optionally be specified."
  syntax: "public DynamicRequest getLedgerEntries()"
  desc: "A sub-ledger id may optionally be specified. Only entries in the specified (or default) sub-ledger will be returned.\n\n**Optional Query Parameters**\n\n    | ----------------- | ------ | -------------------------------------------- |\n    | Name              | Type   | Description                                  |\n    | subLedgerId       | String | The sub-ledger id.                           |\n    | fromTransactionId | String | Specify the first transaction ID in a range. |\n    | toTransactionId   | String | Specify the last transaction ID in a range.  |\n\n**Response Body Schema**\n\n```java\n{\n     state: String(Loading/Ready)\n     nextLink: String\n     entries: [\n         {\n             contents: String\n             subLedgerId: String\n             transactionId: String\n         }\n     ]\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntriesNext(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntriesNext(String nextLink)"
  name: "getLedgerEntriesNext(String nextLink)"
  nameWithType: "ConfidentialLedgerBaseClient.getLedgerEntriesNext(String nextLink)"
  summary: "Get the next page of items."
  parameters:
  - description: "The nextLink parameter."
    name: "nextLink"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest getLedgerEntriesNext(String nextLink)"
  desc: "Get the next page of items.\n\n**Response Body Schema**\n\n```java\n{\n     state: String(Loading/Ready)\n     nextLink: String\n     entries: [\n         {\n             contents: String\n             subLedgerId: String\n             transactionId: String\n         }\n     ]\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntry(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getLedgerEntry(String transactionId)"
  name: "getLedgerEntry(String transactionId)"
  nameWithType: "ConfidentialLedgerBaseClient.getLedgerEntry(String transactionId)"
  summary: "To return older ledger entries, the relevant sections of the ledger must be read from disk and validated."
  parameters:
  - description: "Identifies a write transaction."
    name: "transactionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest getLedgerEntry(String transactionId)"
  desc: "To return older ledger entries, the relevant sections of the ledger must be read from disk and validated. To prevent blocking within the enclave, the response will indicate whether the entry is ready and part of the response, or if the loading is still ongoing.\n\n**Optional Query Parameters**\n\n    | ----------- | ------ | ------------------ |\n    | Name        | Type   | Description        |\n    | subLedgerId | String | The sub-ledger id. |\n\n**Response Body Schema**\n\n```java\n{\n     state: String(Loading/Ready)\n     entry: {\n         contents: String\n         subLedgerId: String\n         transactionId: String\n     }\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getReceipt(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getReceipt(String transactionId)"
  name: "getReceipt(String transactionId)"
  nameWithType: "ConfidentialLedgerBaseClient.getReceipt(String transactionId)"
  summary: "Gets a receipt certifying ledger contents at a particular transaction id."
  parameters:
  - description: "Identifies a write transaction."
    name: "transactionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest getReceipt(String transactionId)"
  desc: "Gets a receipt certifying ledger contents at a particular transaction id.\n\n**Response Body Schema**\n\n```java\n{\n     receipt: {\n         leaf: String\n         nodeId: String\n         proof: [\n             {\n                 left: String\n                 right: String\n             }\n         ]\n         root: String\n         signature: String\n     }\n     state: String(Loading/Ready)\n     transactionId: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getTransactionStatus(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getTransactionStatus(String transactionId)"
  name: "getTransactionStatus(String transactionId)"
  nameWithType: "ConfidentialLedgerBaseClient.getTransactionStatus(String transactionId)"
  summary: "Gets the status of an entry identified by a transaction id."
  parameters:
  - description: "Identifies a write transaction."
    name: "transactionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest getTransactionStatus(String transactionId)"
  desc: "Gets the status of an entry identified by a transaction id.\n\n**Response Body Schema**\n\n```java\n{\n     state: String(Committed/Pending)\n     transactionId: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getUser(java.lang.String)"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.getUser(String userId)"
  name: "getUser(String userId)"
  nameWithType: "ConfidentialLedgerBaseClient.getUser(String userId)"
  summary: "Gets a user."
  parameters:
  - description: "The user id, either an AAD object ID or certificate fingerprint."
    name: "userId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest getUser(String userId)"
  desc: "Gets a user.\n\n**Response Body Schema**\n\n```java\n{\n     assignedRole: String(Administrator/Contributor/Reader)\n     userId: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.invoke()"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.invoke()"
  name: "invoke()"
  nameWithType: "ConfidentialLedgerBaseClient.invoke()"
  summary: "Create an empty Dynamic<wbr>Request with the serializer and pipeline initialized for this client."
  syntax: "public DynamicRequest invoke()"
  desc: "Create an empty DynamicRequest with the serializer and pipeline initialized for this client."
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.postLedgerEntry()"
  fullName: "com.azure.security.confidentialledger.ConfidentialLedgerBaseClient.postLedgerEntry()"
  name: "postLedgerEntry()"
  nameWithType: "ConfidentialLedgerBaseClient.postLedgerEntry()"
  summary: "A sub-ledger id may optionally be specified."
  syntax: "public DynamicRequest postLedgerEntry()"
  desc: "A sub-ledger id may optionally be specified.\n\n**Optional Query Parameters**\n\n    | ----------- | ------ | ------------------ |\n    | Name        | Type   | Description        |\n    | subLedgerId | String | The sub-ledger id. |\n\n**Request Body Schema**\n\n```java\n{\n     contents: String\n     subLedgerId: String\n     transactionId: String\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     subLedgerId: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Initializes a new instance of the ConfidentialLedgerBaseClient type."
metadata: {}
package: "com.azure.security.confidentialledger"
artifact: com.azure:azure-security-confidentialledger:1.0.0-beta.2
