### YamlMime:JavaType
uid: "com.azure.maps.geolocation.GeoLocationClient"
fullName: "com.azure.maps.geolocation.GeoLocationClient"
name: "GeoLocationClient"
nameWithType: "GeoLocationClient"
summary: "<xref uid=\"com.azure.maps.geolocation.GeoLocationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"GeoLocationClient\"></xref> instances are created via the <xref uid=\"com.azure.maps.geolocation.GeoLocationClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"GeoLocationClientBuilder\"></xref>, as shown below."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **GeoLocationClient**"
methods:
- uid: "com.azure.maps.geolocation.GeoLocationClient.getLocation(java.lang.String)"
  fullName: "com.azure.maps.geolocation.GeoLocationClient.getLocation(String ipAddress)"
  name: "getLocation(String ipAddress)"
  nameWithType: "GeoLocationClient.getLocation(String ipAddress)"
  summary: "Get Location"
  parameters:
  - description: "The IP address. Both IPv4 and IPv6 are allowed."
    name: "ipAddress"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public IpAddressToLocationResult getLocation(String ipAddress)"
  desc: "Get Location\n\n```java\nclient.getLocation(\"131.107.0.89\");\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis service will return the ISO country code for the provided IP address. Developers can use this information to block or alter certain content based on geographical locations where the application is being viewed from."
  returns:
    description: "this object is returned from a successful call to IP Address to country/region API."
    type: "<xref href=\"com.azure.maps.geolocation.models.IpAddressToLocationResult?alt=com.azure.maps.geolocation.models.IpAddressToLocationResult&text=IpAddressToLocationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.geolocation.GeoLocationClient.getLocationWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.geolocation.GeoLocationClient.getLocationWithResponse(String ipAddress, Context context)"
  name: "getLocationWithResponse(String ipAddress, Context context)"
  nameWithType: "GeoLocationClient.getLocationWithResponse(String ipAddress, Context context)"
  summary: "Get Location"
  parameters:
  - description: "The IP address. Both IPv4 and IPv6 are allowed."
    name: "ipAddress"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<IpAddressToLocationResult> getLocationWithResponse(String ipAddress, Context context)"
  desc: "Get Location\n\n```java\nclient.getLocation(\"131.107.0.89\");\n```\n\n\\*\\*Applies to\\*\\*: S0 and S1 pricing tiers.\n\nThis service will return the ISO country code for the provided IP address. Developers can use this information to block or alter certain content based on geographical locations where the application is being viewed from."
  returns:
    description: "this object is returned from a successful call to IP Address to country/region API."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.geolocation.models.IpAddressToLocationResult?alt=com.azure.maps.geolocation.models.IpAddressToLocationResult&text=IpAddressToLocationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "<xref uid=\"com.azure.maps.geolocation.GeoLocationClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"GeoLocationClient\"></xref> instances are created via the <xref uid=\"com.azure.maps.geolocation.GeoLocationClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"GeoLocationClientBuilder\"></xref>, as shown below. Creating a sync client using a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref>:\n\n```java\n// Authenticates using subscription key\n AzureKeyCredential keyCredential = new AzureKeyCredential(System.getenv(\"SUBSCRIPTION_KEY\"));\n\n // Creates a client\n GeoLocationClient client = new GeoLocationClientBuilder()\n     .credential(keyCredential)\n     .buildClient();\n```"
metadata: {}
package: "com.azure.maps.geolocation"
artifact: com.azure:azure-maps-geolocation:1.0.0-beta.1
