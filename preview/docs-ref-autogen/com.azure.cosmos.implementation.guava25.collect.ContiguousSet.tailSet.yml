### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ContiguousSet.tailSet*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ContiguousSet<C>.tailSet"
name: "tailSet"
nameWithType: "ContiguousSet<C>.tailSet"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ContiguousSet.tailSet(C)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ContiguousSet<C>.tailSet(C fromElement)"
  name: "tailSet(C fromElement)"
  nameWithType: "ContiguousSet<C>.tailSet(C fromElement)"
  summary: "This method returns a serializable `ImmutableSortedSet`.\n\nThe <xref uid=\"java.util.SortedSet.tailSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedSet#tailSet\"></xref> documentation states that a subset of a subset throws an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> if passed a `fromElement` smaller than an earlier `fromElement`. However, this method doesn't throw an exception in that situation, but instead keeps the original `fromElement`."
  overridden: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.tailSet(E)"
  parameters:
  - name: "fromElement"
    type: "<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContiguousSet<C> tailSet(C fromElement)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ContiguousSet?alt=com.azure.cosmos.implementation.guava25.collect.ContiguousSet&text=ContiguousSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ContiguousSet.tailSet(C,boolean)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ContiguousSet<C>.tailSet(C fromElement, boolean inclusive)"
  name: "tailSet(C fromElement, boolean inclusive)"
  nameWithType: "ContiguousSet<C>.tailSet(C fromElement, boolean inclusive)"
  overridden: "com.azure.cosmos.implementation.guava25.collect.ImmutableSortedSet.tailSet(E,boolean)"
  parameters:
  - name: "fromElement"
    type: "<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />"
  - name: "inclusive"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContiguousSet<C> tailSet(C fromElement, boolean inclusive)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ContiguousSet?alt=com.azure.cosmos.implementation.guava25.collect.ContiguousSet&text=ContiguousSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
