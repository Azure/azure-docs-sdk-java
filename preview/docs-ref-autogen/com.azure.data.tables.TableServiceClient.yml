### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.TableServiceClient
  id: TableServiceClient
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables
  children:
  - com.azure.data.tables.TableServiceClient.createTable(java.lang.String)
  - com.azure.data.tables.TableServiceClient.createTable(java.lang.String,java.time.Duration)
  - com.azure.data.tables.TableServiceClient.createTableIfNotExists(java.lang.String)
  - com.azure.data.tables.TableServiceClient.createTableIfNotExists(java.lang.String,java.time.Duration)
  - com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableServiceClient.createTableWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableServiceClient.deleteTable(java.lang.String)
  - com.azure.data.tables.TableServiceClient.deleteTable(java.lang.String,java.time.Duration)
  - com.azure.data.tables.TableServiceClient.deleteTableWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  - com.azure.data.tables.TableServiceClient.getAccountName()
  - com.azure.data.tables.TableServiceClient.getApiVersion()
  - com.azure.data.tables.TableServiceClient.getServiceUrl()
  - com.azure.data.tables.TableServiceClient.getTableClient(java.lang.String)
  - com.azure.data.tables.TableServiceClient.listTables()
  - com.azure.data.tables.TableServiceClient.listTables(com.azure.data.tables.models.ListTablesOptions)
  langs:
  - java
  name: TableServiceClient
  nameWithType: TableServiceClient
  fullName: com.azure.data.tables.TableServiceClient
  type: Class
  package: com.azure.data.tables
  summary: Provides a synchronous service client for accessing the Azure Tables service. The client encapsulates the URL for the Tables service endpoint and the credentials for accessing the storage or CosmosDB table API account. It provides methods to create, delete, and list tables within the account. These methods invoke REST API operations to make the requests and obtain the results that are returned. Instances of this client are obtained by calling the <xref uid="com.azure.data.tables.TableServiceClientBuilder.buildClient()" data-throw-if-not-resolved="false">TableServiceClientBuilder#buildClient()</xref> method on a <xref uid="com.azure.data.tables.TableServiceClientBuilder" data-throw-if-not-resolved="false">TableServiceClientBuilder</xref> object.
  syntax:
    content: public class TableServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.TableServiceClient.TableServiceClient(com.azure.data.tables.TableServiceAsyncClient)
  id: TableServiceClient(com.azure.data.tables.TableServiceAsyncClient)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: TableServiceClient(TableServiceAsyncClient client)
  nameWithType: TableServiceClient.TableServiceClient(TableServiceAsyncClient client)
  fullName: com.azure.data.tables.TableServiceClient.TableServiceClient(TableServiceAsyncClient client)
  overload: com.azure.data.tables.TableServiceClient.TableServiceClient*
  type: Constructor
  package: com.azure.data.tables
  syntax:
    content: " TableServiceClient(TableServiceAsyncClient client)"
    parameters:
    - id: client
      type: com.azure.data.tables.TableServiceAsyncClient
- uid: com.azure.data.tables.TableServiceClient.createTable(java.lang.String)
  id: createTable(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTable(String tableName)
  nameWithType: TableServiceClient.createTable(String tableName)
  fullName: com.azure.data.tables.TableServiceClient.createTable(String tableName)
  overload: com.azure.data.tables.TableServiceClient.createTable*
  type: Method
  package: com.azure.data.tables
  summary: Creates a table within the Tables service.
  syntax:
    content: public void createTable(String tableName)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to create.
- uid: com.azure.data.tables.TableServiceClient.createTable(java.lang.String,java.time.Duration)
  id: createTable(java.lang.String,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTable(String tableName, Duration timeout)
  nameWithType: TableServiceClient.createTable(String tableName, Duration timeout)
  fullName: com.azure.data.tables.TableServiceClient.createTable(String tableName, Duration timeout)
  overload: com.azure.data.tables.TableServiceClient.createTable*
  type: Method
  package: com.azure.data.tables
  summary: Creates a table within the Tables service.
  syntax:
    content: public void createTable(String tableName, Duration timeout)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to create.
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExists(java.lang.String)
  id: createTableIfNotExists(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTableIfNotExists(String tableName)
  nameWithType: TableServiceClient.createTableIfNotExists(String tableName)
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExists(String tableName)
  overload: com.azure.data.tables.TableServiceClient.createTableIfNotExists*
  type: Method
  package: com.azure.data.tables
  summary: Creates a table within the Tables service if the table does not already exist.
  syntax:
    content: public void createTableIfNotExists(String tableName)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to create.
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExists(java.lang.String,java.time.Duration)
  id: createTableIfNotExists(java.lang.String,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTableIfNotExists(String tableName, Duration timeout)
  nameWithType: TableServiceClient.createTableIfNotExists(String tableName, Duration timeout)
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExists(String tableName, Duration timeout)
  overload: com.azure.data.tables.TableServiceClient.createTableIfNotExists*
  type: Method
  package: com.azure.data.tables
  summary: Creates a table within the Tables service if the table does not already exist.
  syntax:
    content: public void createTableIfNotExists(String tableName, Duration timeout)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to create.
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: createTableIfNotExistsWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTableIfNotExistsWithResponse(String tableName, Duration timeout, Context context)
  nameWithType: TableServiceClient.createTableIfNotExistsWithResponse(String tableName, Duration timeout, Context context)
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse(String tableName, Duration timeout, Context context)
  overload: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: Creates a table within the Tables service if the table does not already exist.
  syntax:
    content: public Response<Void> createTableIfNotExistsWithResponse(String tableName, Duration timeout, Context context)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to create.
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.data.tables.TableServiceClient.createTableWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: createTableWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTableWithResponse(String tableName, Duration timeout, Context context)
  nameWithType: TableServiceClient.createTableWithResponse(String tableName, Duration timeout, Context context)
  fullName: com.azure.data.tables.TableServiceClient.createTableWithResponse(String tableName, Duration timeout, Context context)
  overload: com.azure.data.tables.TableServiceClient.createTableWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: Creates a table within the Tables service.
  syntax:
    content: public Response<Void> createTableWithResponse(String tableName, Duration timeout, Context context)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to create.
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.data.tables.TableServiceClient.deleteTable(java.lang.String)
  id: deleteTable(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: deleteTable(String tableName)
  nameWithType: TableServiceClient.deleteTable(String tableName)
  fullName: com.azure.data.tables.TableServiceClient.deleteTable(String tableName)
  overload: com.azure.data.tables.TableServiceClient.deleteTable*
  type: Method
  package: com.azure.data.tables
  summary: Deletes a table within the Tables service.
  syntax:
    content: public void deleteTable(String tableName)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to delete.
- uid: com.azure.data.tables.TableServiceClient.deleteTable(java.lang.String,java.time.Duration)
  id: deleteTable(java.lang.String,java.time.Duration)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: deleteTable(String tableName, Duration timeout)
  nameWithType: TableServiceClient.deleteTable(String tableName, Duration timeout)
  fullName: com.azure.data.tables.TableServiceClient.deleteTable(String tableName, Duration timeout)
  overload: com.azure.data.tables.TableServiceClient.deleteTable*
  type: Method
  package: com.azure.data.tables
  summary: Deletes a table within the Tables service.
  syntax:
    content: public void deleteTable(String tableName, Duration timeout)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to delete.
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
- uid: com.azure.data.tables.TableServiceClient.deleteTableWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  id: deleteTableWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: deleteTableWithResponse(String tableName, Duration timeout, Context context)
  nameWithType: TableServiceClient.deleteTableWithResponse(String tableName, Duration timeout, Context context)
  fullName: com.azure.data.tables.TableServiceClient.deleteTableWithResponse(String tableName, Duration timeout, Context context)
  overload: com.azure.data.tables.TableServiceClient.deleteTableWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: Deletes a table within the Tables service.
  syntax:
    content: public Response<Void> deleteTableWithResponse(String tableName, Duration timeout, Context context)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table to delete.
    - id: timeout
      type: java.time.Duration
      description: Duration to wait for the operation to complete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.data.tables.TableServiceClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getAccountName()
  nameWithType: TableServiceClient.getAccountName()
  fullName: com.azure.data.tables.TableServiceClient.getAccountName()
  overload: com.azure.data.tables.TableServiceClient.getAccountName*
  type: Method
  package: com.azure.data.tables
  summary: Gets the name of the account containing the table.
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: The name of the account containing the table.
- uid: com.azure.data.tables.TableServiceClient.getApiVersion()
  id: getApiVersion()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getApiVersion()
  nameWithType: TableServiceClient.getApiVersion()
  fullName: com.azure.data.tables.TableServiceClient.getApiVersion()
  overload: com.azure.data.tables.TableServiceClient.getApiVersion*
  type: Method
  package: com.azure.data.tables
  summary: Gets the REST API version used by this client.
  syntax:
    content: public TablesServiceVersion getApiVersion()
    return:
      type: com.azure.data.tables.TablesServiceVersion
      description: The REST API version used by this client.
- uid: com.azure.data.tables.TableServiceClient.getServiceUrl()
  id: getServiceUrl()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getServiceUrl()
  nameWithType: TableServiceClient.getServiceUrl()
  fullName: com.azure.data.tables.TableServiceClient.getServiceUrl()
  overload: com.azure.data.tables.TableServiceClient.getServiceUrl*
  type: Method
  package: com.azure.data.tables
  summary: Gets the absolute URL for the Tables service endpoint.
  syntax:
    content: public String getServiceUrl()
    return:
      type: java.lang.String
      description: The absolute URL for the Tables service endpoint.
- uid: com.azure.data.tables.TableServiceClient.getTableClient(java.lang.String)
  id: getTableClient(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getTableClient(String tableName)
  nameWithType: TableServiceClient.getTableClient(String tableName)
  fullName: com.azure.data.tables.TableServiceClient.getTableClient(String tableName)
  overload: com.azure.data.tables.TableServiceClient.getTableClient*
  type: Method
  package: com.azure.data.tables
  summary: Gets a <xref uid="com.azure.data.tables.TableClient" data-throw-if-not-resolved="false">TableClient</xref> instance for the provided table in the account.
  syntax:
    content: public TableClient getTableClient(String tableName)
    parameters:
    - id: tableName
      type: java.lang.String
      description: The name of the table.
    return:
      type: com.azure.data.tables.TableClient
      description: A <xref uid="com.azure.data.tables.TableClient" data-throw-if-not-resolved="false">TableClient</xref> instance for the provided table in the account.
- uid: com.azure.data.tables.TableServiceClient.listTables()
  id: listTables()
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: listTables()
  nameWithType: TableServiceClient.listTables()
  fullName: com.azure.data.tables.TableServiceClient.listTables()
  overload: com.azure.data.tables.TableServiceClient.listTables*
  type: Method
  package: com.azure.data.tables
  summary: Lists all tables within the account.
  syntax:
    content: public PagedIterable<TableItem> listTables()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableItem>
      description: A paged iterable containing all tables within the account.
- uid: com.azure.data.tables.TableServiceClient.listTables(com.azure.data.tables.models.ListTablesOptions)
  id: listTables(com.azure.data.tables.models.ListTablesOptions)
  artifact: com.azure:azure-data-tables:12.0.0-beta.2
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: listTables(ListTablesOptions options)
  nameWithType: TableServiceClient.listTables(ListTablesOptions options)
  fullName: com.azure.data.tables.TableServiceClient.listTables(ListTablesOptions options)
  overload: com.azure.data.tables.TableServiceClient.listTables*
  type: Method
  package: com.azure.data.tables
  summary: Lists tables using the parameters in the provided options. If the \`filter\` parameter in the options is set, only tables matching the filter will be returned. If the \`top\` parameter is set, the number of returned tables will be limited to that value.
  syntax:
    content: public PagedIterable<TableItem> listTables(ListTablesOptions options)
    parameters:
    - id: options
      type: com.azure.data.tables.models.ListTablesOptions
      description: The `filter` and `top` OData query options to apply to this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableItem>
      description: A paged iterable containing matching tables within the account.
references:
- uid: com.azure.data.tables.TableServiceAsyncClient
  name: TableServiceAsyncClient
  nameWithType: TableServiceAsyncClient
  fullName: com.azure.data.tables.TableServiceAsyncClient
- uid: com.azure.data.tables.TableServiceClient.TableServiceClient*
  name: TableServiceClient
  nameWithType: TableServiceClient.TableServiceClient
  fullName: com.azure.data.tables.TableServiceClient.TableServiceClient
  package: com.azure.data.tables
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.TableServiceClient.getAccountName*
  name: getAccountName
  nameWithType: TableServiceClient.getAccountName
  fullName: com.azure.data.tables.TableServiceClient.getAccountName
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.getServiceUrl*
  name: getServiceUrl
  nameWithType: TableServiceClient.getServiceUrl
  fullName: com.azure.data.tables.TableServiceClient.getServiceUrl
  package: com.azure.data.tables
- uid: com.azure.data.tables.TablesServiceVersion
  name: TablesServiceVersion
  nameWithType: TablesServiceVersion
  fullName: com.azure.data.tables.TablesServiceVersion
- uid: com.azure.data.tables.TableServiceClient.getApiVersion*
  name: getApiVersion
  nameWithType: TableServiceClient.getApiVersion
  fullName: com.azure.data.tables.TableServiceClient.getApiVersion
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient
  name: TableClient
  nameWithType: TableClient
  fullName: com.azure.data.tables.TableClient
- uid: com.azure.data.tables.TableServiceClient.getTableClient*
  name: getTableClient
  nameWithType: TableServiceClient.getTableClient
  fullName: com.azure.data.tables.TableServiceClient.getTableClient
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.createTable*
  name: createTable
  nameWithType: TableServiceClient.createTable
  fullName: com.azure.data.tables.TableServiceClient.createTable
  package: com.azure.data.tables
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableServiceClient.createTableWithResponse*
  name: createTableWithResponse
  nameWithType: TableServiceClient.createTableWithResponse
  fullName: com.azure.data.tables.TableServiceClient.createTableWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExists*
  name: createTableIfNotExists
  nameWithType: TableServiceClient.createTableIfNotExists
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExists
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse*
  name: createTableIfNotExistsWithResponse
  nameWithType: TableServiceClient.createTableIfNotExistsWithResponse
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.deleteTable*
  name: deleteTable
  nameWithType: TableServiceClient.deleteTable
  fullName: com.azure.data.tables.TableServiceClient.deleteTable
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.deleteTableWithResponse*
  name: deleteTableWithResponse
  nameWithType: TableServiceClient.deleteTableWithResponse
  fullName: com.azure.data.tables.TableServiceClient.deleteTableWithResponse
  package: com.azure.data.tables
- uid: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableItem>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.data.tables.models.TableItem
    name: TableItem
    fullName: com.azure.data.tables.models.TableItem
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableServiceClient.listTables*
  name: listTables
  nameWithType: TableServiceClient.listTables
  fullName: com.azure.data.tables.TableServiceClient.listTables
  package: com.azure.data.tables
- uid: com.azure.data.tables.models.ListTablesOptions
  name: ListTablesOptions
  nameWithType: ListTablesOptions
  fullName: com.azure.data.tables.models.ListTablesOptions
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.data.tables.models.TableItem
  name: TableItem
  nameWithType: TableItem
  fullName: com.azure.data.tables.models.TableItem
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
