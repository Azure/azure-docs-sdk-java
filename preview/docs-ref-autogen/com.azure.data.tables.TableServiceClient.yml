### YamlMime:ManagedReference
items:
- uid: com.azure.data.tables.TableServiceClient
  id: TableServiceClient
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables
  children:
  - com.azure.data.tables.TableServiceClient.createTable(java.lang.String)
  - com.azure.data.tables.TableServiceClient.createTableIfNotExists(java.lang.String)
  - com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.tables.TableServiceClient.createTableWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.tables.TableServiceClient.deleteTable(java.lang.String)
  - com.azure.data.tables.TableServiceClient.deleteTableWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.data.tables.TableServiceClient.getAccountName()
  - com.azure.data.tables.TableServiceClient.getApiVersion()
  - com.azure.data.tables.TableServiceClient.getServiceUrl()
  - com.azure.data.tables.TableServiceClient.getTableClient(java.lang.String)
  - com.azure.data.tables.TableServiceClient.listTables()
  - com.azure.data.tables.TableServiceClient.listTables(com.azure.data.tables.models.ListTablesOptions)
  langs:
  - java
  name: TableServiceClient
  nameWithType: TableServiceClient
  fullName: com.azure.data.tables.TableServiceClient
  type: Class
  package: com.azure.data.tables
  summary: client for table service
  syntax:
    content: public class TableServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.tables.TableServiceClient.TableServiceClient(com.azure.data.tables.TableServiceAsyncClient)
  id: TableServiceClient(com.azure.data.tables.TableServiceAsyncClient)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: TableServiceClient(TableServiceAsyncClient client)
  nameWithType: TableServiceClient.TableServiceClient(TableServiceAsyncClient client)
  fullName: com.azure.data.tables.TableServiceClient.TableServiceClient(TableServiceAsyncClient client)
  overload: com.azure.data.tables.TableServiceClient.TableServiceClient*
  type: Constructor
  package: com.azure.data.tables
  syntax:
    content: " TableServiceClient(TableServiceAsyncClient client)"
    parameters:
    - id: client
      type: com.azure.data.tables.TableServiceAsyncClient
- uid: com.azure.data.tables.TableServiceClient.createTable(java.lang.String)
  id: createTable(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTable(String tableName)
  nameWithType: TableServiceClient.createTable(String tableName)
  fullName: com.azure.data.tables.TableServiceClient.createTable(String tableName)
  overload: com.azure.data.tables.TableServiceClient.createTable*
  type: Method
  package: com.azure.data.tables
  summary: creates the table with the given name. If a table with the same name already exists, the operation fails.
  syntax:
    content: public void createTable(String tableName)
    parameters:
    - id: tableName
      type: java.lang.String
      description: the name of the table to create
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExists(java.lang.String)
  id: createTableIfNotExists(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTableIfNotExists(String tableName)
  nameWithType: TableServiceClient.createTableIfNotExists(String tableName)
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExists(String tableName)
  overload: com.azure.data.tables.TableServiceClient.createTableIfNotExists*
  type: Method
  package: com.azure.data.tables
  summary: creates the table with the given name if it does not exist, otherwise no action is taken.
  syntax:
    content: public void createTableIfNotExists(String tableName)
    parameters:
    - id: tableName
      type: java.lang.String
      description: the name of the table to create
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  id: createTableIfNotExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTableIfNotExistsWithResponse(String tableName, Context context)
  nameWithType: TableServiceClient.createTableIfNotExistsWithResponse(String tableName, Context context)
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse(String tableName, Context context)
  overload: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: creates the table with the given name if it does not exist, otherwise no action is taken.
  syntax:
    content: public Response<Void> createTableIfNotExistsWithResponse(String tableName, Context context)
    parameters:
    - id: tableName
      type: java.lang.String
      description: the name of the table to create
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: response
- uid: com.azure.data.tables.TableServiceClient.createTableWithResponse(java.lang.String,com.azure.core.util.Context)
  id: createTableWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: createTableWithResponse(String tableName, Context context)
  nameWithType: TableServiceClient.createTableWithResponse(String tableName, Context context)
  fullName: com.azure.data.tables.TableServiceClient.createTableWithResponse(String tableName, Context context)
  overload: com.azure.data.tables.TableServiceClient.createTableWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: creates the table with the given name. If a table with the same name already exists, the operation fails.
  syntax:
    content: public Response<Void> createTableWithResponse(String tableName, Context context)
    parameters:
    - id: tableName
      type: java.lang.String
      description: the name of the table to create
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: response
- uid: com.azure.data.tables.TableServiceClient.deleteTable(java.lang.String)
  id: deleteTable(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: deleteTable(String tableName)
  nameWithType: TableServiceClient.deleteTable(String tableName)
  fullName: com.azure.data.tables.TableServiceClient.deleteTable(String tableName)
  overload: com.azure.data.tables.TableServiceClient.deleteTable*
  type: Method
  package: com.azure.data.tables
  summary: deletes the given table. Will error if the table doesn't exists or cannot be found with the given name.
  syntax:
    content: public void deleteTable(String tableName)
    parameters:
    - id: tableName
      type: java.lang.String
      description: the name of the table to be deleted
- uid: com.azure.data.tables.TableServiceClient.deleteTableWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteTableWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: deleteTableWithResponse(String tableName, Context context)
  nameWithType: TableServiceClient.deleteTableWithResponse(String tableName, Context context)
  fullName: com.azure.data.tables.TableServiceClient.deleteTableWithResponse(String tableName, Context context)
  overload: com.azure.data.tables.TableServiceClient.deleteTableWithResponse*
  type: Method
  package: com.azure.data.tables
  summary: deletes the given table. Will error if the table doesn't exists or cannot be found with the given name.
  syntax:
    content: public Response<Void> deleteTableWithResponse(String tableName, Context context)
    parameters:
    - id: tableName
      type: java.lang.String
      description: the name of the table to be deleted
    - id: context
      type: com.azure.core.util.Context
      description: the context of the query
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: response
- uid: com.azure.data.tables.TableServiceClient.getAccountName()
  id: getAccountName()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getAccountName()
  nameWithType: TableServiceClient.getAccountName()
  fullName: com.azure.data.tables.TableServiceClient.getAccountName()
  overload: com.azure.data.tables.TableServiceClient.getAccountName*
  type: Method
  package: com.azure.data.tables
  summary: returns the account for this service
  syntax:
    content: public String getAccountName()
    return:
      type: java.lang.String
      description: returns the account name
- uid: com.azure.data.tables.TableServiceClient.getApiVersion()
  id: getApiVersion()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getApiVersion()
  nameWithType: TableServiceClient.getApiVersion()
  fullName: com.azure.data.tables.TableServiceClient.getApiVersion()
  overload: com.azure.data.tables.TableServiceClient.getApiVersion*
  type: Method
  package: com.azure.data.tables
  summary: returns the version
  syntax:
    content: public TablesServiceVersion getApiVersion()
    return:
      type: com.azure.data.tables.TablesServiceVersion
      description: the version
- uid: com.azure.data.tables.TableServiceClient.getServiceUrl()
  id: getServiceUrl()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getServiceUrl()
  nameWithType: TableServiceClient.getServiceUrl()
  fullName: com.azure.data.tables.TableServiceClient.getServiceUrl()
  overload: com.azure.data.tables.TableServiceClient.getServiceUrl*
  type: Method
  package: com.azure.data.tables
  summary: returns Url of this service
  syntax:
    content: public String getServiceUrl()
    return:
      type: java.lang.String
      description: Url
- uid: com.azure.data.tables.TableServiceClient.getTableClient(java.lang.String)
  id: getTableClient(java.lang.String)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: getTableClient(String name)
  nameWithType: TableServiceClient.getTableClient(String name)
  fullName: com.azure.data.tables.TableServiceClient.getTableClient(String name)
  overload: com.azure.data.tables.TableServiceClient.getTableClient*
  type: Method
  package: com.azure.data.tables
  summary: gets the Table Client for the given table
  syntax:
    content: public TableClient getTableClient(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name of the table
    return:
      type: com.azure.data.tables.TableClient
      description: the Table Client for the table
- uid: com.azure.data.tables.TableServiceClient.listTables()
  id: listTables()
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: listTables()
  nameWithType: TableServiceClient.listTables()
  fullName: com.azure.data.tables.TableServiceClient.listTables()
  overload: com.azure.data.tables.TableServiceClient.listTables*
  type: Method
  package: com.azure.data.tables
  summary: query all the tables under the storage account
  syntax:
    content: public PagedIterable<TableItem> listTables()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableItem>
      description: a list of tables that meet the query
- uid: com.azure.data.tables.TableServiceClient.listTables(com.azure.data.tables.models.ListTablesOptions)
  id: listTables(com.azure.data.tables.models.ListTablesOptions)
  artifact: com.azure:azure-data-tables:12.0.0-beta.1
  parent: com.azure.data.tables.TableServiceClient
  langs:
  - java
  name: listTables(ListTablesOptions options)
  nameWithType: TableServiceClient.listTables(ListTablesOptions options)
  fullName: com.azure.data.tables.TableServiceClient.listTables(ListTablesOptions options)
  overload: com.azure.data.tables.TableServiceClient.listTables*
  type: Method
  package: com.azure.data.tables
  summary: query all the tables under the storage account given the query options and returns the ones that fit the criteria
  syntax:
    content: public PagedIterable<TableItem> listTables(ListTablesOptions options)
    parameters:
    - id: options
      type: com.azure.data.tables.models.ListTablesOptions
      description: the odata query object
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableItem>
      description: a list of tables that meet the query
references:
- uid: com.azure.data.tables.TableServiceAsyncClient
  name: TableServiceAsyncClient
  nameWithType: TableServiceAsyncClient
  fullName: com.azure.data.tables.TableServiceAsyncClient
- uid: com.azure.data.tables.TableServiceClient.TableServiceClient*
  name: TableServiceClient
  nameWithType: TableServiceClient.TableServiceClient
  fullName: com.azure.data.tables.TableServiceClient.TableServiceClient
  package: com.azure.data.tables
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.tables.TableServiceClient.getAccountName*
  name: getAccountName
  nameWithType: TableServiceClient.getAccountName
  fullName: com.azure.data.tables.TableServiceClient.getAccountName
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.getServiceUrl*
  name: getServiceUrl
  nameWithType: TableServiceClient.getServiceUrl
  fullName: com.azure.data.tables.TableServiceClient.getServiceUrl
  package: com.azure.data.tables
- uid: com.azure.data.tables.TablesServiceVersion
  name: TablesServiceVersion
  nameWithType: TablesServiceVersion
  fullName: com.azure.data.tables.TablesServiceVersion
- uid: com.azure.data.tables.TableServiceClient.getApiVersion*
  name: getApiVersion
  nameWithType: TableServiceClient.getApiVersion
  fullName: com.azure.data.tables.TableServiceClient.getApiVersion
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableClient
  name: TableClient
  nameWithType: TableClient
  fullName: com.azure.data.tables.TableClient
- uid: com.azure.data.tables.TableServiceClient.getTableClient*
  name: getTableClient
  nameWithType: TableServiceClient.getTableClient
  fullName: com.azure.data.tables.TableServiceClient.getTableClient
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.createTable*
  name: createTable
  nameWithType: TableServiceClient.createTable
  fullName: com.azure.data.tables.TableServiceClient.createTable
  package: com.azure.data.tables
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableServiceClient.createTableWithResponse*
  name: createTableWithResponse
  nameWithType: TableServiceClient.createTableWithResponse
  fullName: com.azure.data.tables.TableServiceClient.createTableWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExists*
  name: createTableIfNotExists
  nameWithType: TableServiceClient.createTableIfNotExists
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExists
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse*
  name: createTableIfNotExistsWithResponse
  nameWithType: TableServiceClient.createTableIfNotExistsWithResponse
  fullName: com.azure.data.tables.TableServiceClient.createTableIfNotExistsWithResponse
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.deleteTable*
  name: deleteTable
  nameWithType: TableServiceClient.deleteTable
  fullName: com.azure.data.tables.TableServiceClient.deleteTable
  package: com.azure.data.tables
- uid: com.azure.data.tables.TableServiceClient.deleteTableWithResponse*
  name: deleteTableWithResponse
  nameWithType: TableServiceClient.deleteTableWithResponse
  fullName: com.azure.data.tables.TableServiceClient.deleteTableWithResponse
  package: com.azure.data.tables
- uid: com.azure.core.http.rest.PagedIterable<com.azure.data.tables.models.TableItem>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.data.tables.models.TableItem
    name: TableItem
    fullName: com.azure.data.tables.models.TableItem
  - name: '>'
    fullName: '>'
- uid: com.azure.data.tables.TableServiceClient.listTables*
  name: listTables
  nameWithType: TableServiceClient.listTables
  fullName: com.azure.data.tables.TableServiceClient.listTables
  package: com.azure.data.tables
- uid: com.azure.data.tables.models.ListTablesOptions
  name: ListTablesOptions
  nameWithType: ListTablesOptions
  fullName: com.azure.data.tables.models.ListTablesOptions
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.data.tables.models.TableItem
  name: TableItem
  nameWithType: TableItem
  fullName: com.azure.data.tables.models.TableItem
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
