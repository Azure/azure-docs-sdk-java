### YamlMime:JavaMember
uid: "com.azure.storage.blob.batch.BlobBatchClient.submitBatchWithResponse*"
fullName: "com.azure.storage.blob.batch.BlobBatchClient.submitBatchWithResponse"
name: "submitBatchWithResponse"
nameWithType: "BlobBatchClient.submitBatchWithResponse"
members:
- uid: "com.azure.storage.blob.batch.BlobBatchClient.submitBatchWithResponse(com.azure.storage.blob.batch.BlobBatch,boolean,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.batch.BlobBatchClient.submitBatchWithResponse(BlobBatch batch, boolean throwOnAnyFailure, Duration timeout, Context context)"
  name: "submitBatchWithResponse(BlobBatch batch, boolean throwOnAnyFailure, Duration timeout, Context context)"
  nameWithType: "BlobBatchClient.submitBatchWithResponse(BlobBatch batch, boolean throwOnAnyFailure, Duration timeout, Context context)"
  summary: "Submits a batch operation.\n\nIf `throwOnAnyFailure` is `true` a <xref uid=\"com.azure.storage.blob.models.BlobStorageException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobStorageException\"></xref> will be thrown if any request fails.\n\n**Code samples**\n\n```java\nBlobBatch batch = batchClient.getBlobBatch();\n \n Response<Void> deleteResponse1 = batch.deleteBlob(\"container\", \"blob1\");\n Response<Void> deleteResponse2 = batch.deleteBlob(\"container\", \"blob2\", DeleteSnapshotsOptionType.INCLUDE,\n     new BlobRequestConditions().setLeaseId(\"leaseId\"));\n \n try {\n     System.out.printf(\"Batch submission completed with status code: %d%n\",\n         batchClient.submitBatchWithResponse(batch, true, timeout, Context.NONE).getStatusCode());\n     System.out.printf(\"Delete operation 1 completed with status code: %d%n\", deleteResponse1.getStatusCode());\n     System.out.printf(\"Delete operation 2 completed with status code: %d%n\", deleteResponse2.getStatusCode());\n } catch (BlobStorageException error) {\n     System.err.printf(\"Batch submission failed. Error message: %s%n\", error.getMessage());\n }\n```"
  parameters:
  - description: "Batch to submit."
    name: "batch"
    type: "<xref href=\"com.azure.storage.blob.batch.BlobBatch?alt=com.azure.storage.blob.batch.BlobBatch&text=BlobBatch\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag to indicate if an exception should be thrown if any request in the batch fails."
    name: "throwOnAnyFailure"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> submitBatchWithResponse(BlobBatch batch, boolean throwOnAnyFailure, Duration timeout, Context context)"
  returns:
    description: "A response only containing header and status code information, used to indicate that the batch operation\n has completed."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.batch"
artifact: com.azure:azure-storage-blob-batch:12.7.0-beta.1
