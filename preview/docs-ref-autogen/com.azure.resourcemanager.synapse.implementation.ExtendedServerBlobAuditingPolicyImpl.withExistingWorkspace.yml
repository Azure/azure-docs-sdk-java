### YamlMime:JavaMember
uid: "com.azure.resourcemanager.synapse.implementation.ExtendedServerBlobAuditingPolicyImpl.withExistingWorkspace*"
fullName: "com.azure.resourcemanager.synapse.implementation.ExtendedServerBlobAuditingPolicyImpl.withExistingWorkspace"
name: "withExistingWorkspace"
nameWithType: "ExtendedServerBlobAuditingPolicyImpl.withExistingWorkspace"
members:
- uid: "com.azure.resourcemanager.synapse.implementation.ExtendedServerBlobAuditingPolicyImpl.withExistingWorkspace(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.implementation.ExtendedServerBlobAuditingPolicyImpl.withExistingWorkspace(String resourceGroupName, String workspaceName)"
  name: "withExistingWorkspace(String resourceGroupName, String workspaceName)"
  nameWithType: "ExtendedServerBlobAuditingPolicyImpl.withExistingWorkspace(String resourceGroupName, String workspaceName)"
  summary: "Specifies resourceGroupName, workspaceName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExtendedServerBlobAuditingPolicyImpl withExistingWorkspace(String resourceGroupName, String workspaceName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.synapse.implementation.ExtendedServerBlobAuditingPolicyImpl?alt=com.azure.resourcemanager.synapse.implementation.ExtendedServerBlobAuditingPolicyImpl&text=ExtendedServerBlobAuditingPolicyImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.synapse.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.1
