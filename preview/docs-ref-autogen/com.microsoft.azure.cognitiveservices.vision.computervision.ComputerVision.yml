### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision"
name: "ComputerVision"
nameWithType: "ComputerVision"
summary: "An instance of this class provides access to all the operations defined in Computer<wbr>Vision."
syntax: "public interface ComputerVision"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage()"
  name: "analyzeImage()"
  nameWithType: "ComputerVision.analyzeImage()"
  summary: "This operation extracts a rich set of visual features based on the image content."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionAnalyzeImageDefinitionStages.WithUrl analyzeImage()"
  desc: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the analyzeImage call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageDefinitionStages.WithUrl?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageDefinitionStages.WithUrl&text=WithUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  name: "analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  summary: "This operation extracts a rich set of visual features based on the image content."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter&text=AnalyzeImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageAnalysis analyzeImage(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  desc: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the ImageAnalysis object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  name: "analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  summary: "This operation extracts a rich set of visual features based on the image content."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageOptionalParameter&text=AnalyzeImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageAnalysis> analyzeImageAsync(String url, AnalyzeImageOptionalParameter analyzeImageOptionalParameter)"
  desc: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the ImageAnalysis object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain()"
  name: "analyzeImageByDomain()"
  nameWithType: "ComputerVision.analyzeImageByDomain()"
  summary: "This operation recognizes content within an image by applying a domain-specific model."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel analyzeImageByDomain()"
  desc: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the analyzeImageByDomain call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageByDomainDefinitionStages.WithModel&text=WithModel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  name: "analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  summary: "This operation recognizes content within an image by applying a domain-specific model."
  modifiers:
  - "abstract"
  parameters:
  - description: "The domain-specific content to recognize."
    name: "model"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageByDomainOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter&text=AnalyzeImageByDomainOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DomainModelResults analyzeImageByDomain(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  desc: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the DomainModelResults object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  name: "analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  summary: "This operation recognizes content within an image by applying a domain-specific model."
  modifiers:
  - "abstract"
  parameters:
  - description: "The domain-specific content to recognize."
    name: "model"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageByDomainOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainOptionalParameter&text=AnalyzeImageByDomainOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<DomainModelResults> analyzeImageByDomainAsync(String model, String url, AnalyzeImageByDomainOptionalParameter analyzeImageByDomainOptionalParameter)"
  desc: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the DomainModelResults object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream()"
  name: "analyzeImageByDomainInStream()"
  nameWithType: "ComputerVision.analyzeImageByDomainInStream()"
  summary: "This operation recognizes content within an image by applying a domain-specific model."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel analyzeImageByDomainInStream()"
  desc: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the analyzeImageByDomainInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageByDomainInStreamDefinitionStages.WithModel&text=WithModel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  name: "analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  summary: "This operation recognizes content within an image by applying a domain-specific model."
  modifiers:
  - "abstract"
  parameters:
  - description: "The domain-specific content to recognize."
    name: "model"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageByDomainInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter&text=AnalyzeImageByDomainInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DomainModelResults analyzeImageByDomainInStream(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  desc: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the DomainModelResults object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  name: "analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  summary: "This operation recognizes content within an image by applying a domain-specific model."
  modifiers:
  - "abstract"
  parameters:
  - description: "The domain-specific content to recognize."
    name: "model"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageByDomainInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter&text=AnalyzeImageByDomainInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  desc: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the DomainModelResults object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream()"
  name: "analyzeImageInStream()"
  nameWithType: "ComputerVision.analyzeImageInStream()"
  summary: "This operation extracts a rich set of visual features based on the image content."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage analyzeImageInStream()"
  desc: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the analyzeImageInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionAnalyzeImageInStreamDefinitionStages.WithImage&text=WithImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  name: "analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  summary: "This operation extracts a rich set of visual features based on the image content."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter&text=AnalyzeImageInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageAnalysis analyzeImageInStream(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  desc: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the ImageAnalysis object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  name: "analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  nameWithType: "ComputerVision.analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  summary: "This operation extracts a rich set of visual features based on the image content."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageInStreamOptionalParameter&text=AnalyzeImageInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageAnalysis> analyzeImageInStreamAsync(byte[] image, AnalyzeImageInStreamOptionalParameter analyzeImageInStreamOptionalParameter)"
  desc: "This operation extracts a rich set of visual features based on the image content. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the ImageAnalysis object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageAnalysis&text=ImageAnalysis\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage()"
  name: "describeImage()"
  nameWithType: "ComputerVision.describeImage()"
  summary: "This operation generates a description of an image in human readable language with complete sentences."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionDescribeImageDefinitionStages.WithUrl describeImage()"
  desc: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the describeImage call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDescribeImageDefinitionStages.WithUrl?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDescribeImageDefinitionStages.WithUrl&text=WithUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  name: "describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  nameWithType: "ComputerVision.describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  summary: "This operation generates a description of an image in human readable language with complete sentences."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "describeImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter&text=DescribeImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageDescription describeImage(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  desc: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the ImageDescription object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription&text=ImageDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  name: "describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  nameWithType: "ComputerVision.describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  summary: "This operation generates a description of an image in human readable language with complete sentences."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "describeImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageOptionalParameter&text=DescribeImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageDescription> describeImageAsync(String url, DescribeImageOptionalParameter describeImageOptionalParameter)"
  desc: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the ImageDescription object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription&text=ImageDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream()"
  name: "describeImageInStream()"
  nameWithType: "ComputerVision.describeImageInStream()"
  summary: "This operation generates a description of an image in human readable language with complete sentences."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionDescribeImageInStreamDefinitionStages.WithImage describeImageInStream()"
  desc: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the describeImageInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDescribeImageInStreamDefinitionStages.WithImage?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDescribeImageInStreamDefinitionStages.WithImage&text=WithImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  name: "describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  nameWithType: "ComputerVision.describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  summary: "This operation generates a description of an image in human readable language with complete sentences."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "describeImageInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter&text=DescribeImageInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageDescription describeImageInStream(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  desc: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the ImageDescription object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription&text=ImageDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  name: "describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  nameWithType: "ComputerVision.describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  summary: "This operation generates a description of an image in human readable language with complete sentences."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "describeImageInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DescribeImageInStreamOptionalParameter&text=DescribeImageInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImageDescription> describeImageInStreamAsync(byte[] image, DescribeImageInStreamOptionalParameter describeImageInStreamOptionalParameter)"
  desc: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the ImageDescription object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ImageDescription&text=ImageDescription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects()"
  name: "detectObjects()"
  nameWithType: "ComputerVision.detectObjects()"
  summary: "Performs object detection on the specified image."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionDetectObjectsDefinitionStages.WithUrl detectObjects()"
  desc: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the detectObjects call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDetectObjectsDefinitionStages.WithUrl?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDetectObjectsDefinitionStages.WithUrl&text=WithUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjects(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  name: "detectObjects(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  nameWithType: "ComputerVision.detectObjects(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  summary: "Performs object detection on the specified image."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectObjectsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsOptionalParameter&text=DetectObjectsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DetectResult detectObjects(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  desc: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the DetectResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult&text=DetectResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsAsync(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  name: "detectObjectsAsync(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  nameWithType: "ComputerVision.detectObjectsAsync(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  summary: "Performs object detection on the specified image."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectObjectsOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsOptionalParameter&text=DetectObjectsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<DetectResult> detectObjectsAsync(String url, DetectObjectsOptionalParameter detectObjectsOptionalParameter)"
  desc: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the DetectResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult&text=DetectResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream()"
  name: "detectObjectsInStream()"
  nameWithType: "ComputerVision.detectObjectsInStream()"
  summary: "Performs object detection on the specified image."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionDetectObjectsInStreamDefinitionStages.WithImage detectObjectsInStream()"
  desc: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the detectObjectsInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDetectObjectsInStreamDefinitionStages.WithImage?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionDetectObjectsInStreamDefinitionStages.WithImage&text=WithImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStream(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  name: "detectObjectsInStream(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  nameWithType: "ComputerVision.detectObjectsInStream(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  summary: "Performs object detection on the specified image."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectObjectsInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter&text=DetectObjectsInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DetectResult detectObjectsInStream(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  desc: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the DetectResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult&text=DetectResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.detectObjectsInStreamAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  name: "detectObjectsInStreamAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  nameWithType: "ComputerVision.detectObjectsInStreamAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  summary: "Performs object detection on the specified image."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectObjectsInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter&text=DetectObjectsInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<DetectResult> detectObjectsInStreamAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  desc: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the DetectResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult&text=DetectResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail()"
  name: "generateThumbnail()"
  nameWithType: "ComputerVision.generateThumbnail()"
  summary: "This operation generates a thumbnail image with the user-specified width and height."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionGenerateThumbnailDefinitionStages.WithWidth generateThumbnail()"
  desc: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the first stage of the generateThumbnail call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGenerateThumbnailDefinitionStages.WithWidth?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGenerateThumbnailDefinitionStages.WithWidth&text=WithWidth\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  name: "generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  nameWithType: "ComputerVision.generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  summary: "This operation generates a thumbnail image with the user-specified width and height."
  modifiers:
  - "abstract"
  parameters:
  - description: "Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "width"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "height"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "generateThumbnailOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter&text=GenerateThumbnailOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract InputStream generateThumbnail(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  desc: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the InputStream object if successful."
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int,int,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  name: "generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  nameWithType: "ComputerVision.generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  summary: "This operation generates a thumbnail image with the user-specified width and height."
  modifiers:
  - "abstract"
  parameters:
  - description: "Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "width"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "height"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "generateThumbnailOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailOptionalParameter&text=GenerateThumbnailOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<InputStream> generateThumbnailAsync(int width, int height, String url, GenerateThumbnailOptionalParameter generateThumbnailOptionalParameter)"
  desc: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the observable to the InputStream object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream()"
  name: "generateThumbnailInStream()"
  nameWithType: "ComputerVision.generateThumbnailInStream()"
  summary: "This operation generates a thumbnail image with the user-specified width and height."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth generateThumbnailInStream()"
  desc: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the first stage of the generateThumbnailInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGenerateThumbnailInStreamDefinitionStages.WithWidth&text=WithWidth\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  name: "generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  nameWithType: "ComputerVision.generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  summary: "This operation generates a thumbnail image with the user-specified width and height."
  modifiers:
  - "abstract"
  parameters:
  - description: "Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "width"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "height"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "generateThumbnailInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter&text=GenerateThumbnailInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract InputStream generateThumbnailInStream(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  desc: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the InputStream object if successful."
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int,int,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  name: "generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  nameWithType: "ComputerVision.generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  summary: "This operation generates a thumbnail image with the user-specified width and height."
  modifiers:
  - "abstract"
  parameters:
  - description: "Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "width"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50."
    name: "height"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "generateThumbnailInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GenerateThumbnailInStreamOptionalParameter&text=GenerateThumbnailInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<InputStream> generateThumbnailInStreamAsync(int width, int height, byte[] image, GenerateThumbnailInStreamOptionalParameter generateThumbnailInStreamOptionalParameter)"
  desc: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image. A successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the observable to the InputStream object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest()"
  name: "getAreaOfInterest()"
  nameWithType: "ComputerVision.getAreaOfInterest()"
  summary: "This operation returns a bounding box around the most important area of the image."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionGetAreaOfInterestDefinitionStages.WithUrl getAreaOfInterest()"
  desc: "This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the first stage of the getAreaOfInterest call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGetAreaOfInterestDefinitionStages.WithUrl?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGetAreaOfInterestDefinitionStages.WithUrl&text=WithUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterest(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  name: "getAreaOfInterest(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  nameWithType: "ComputerVision.getAreaOfInterest(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  summary: "This operation returns a bounding box around the most important area of the image."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getAreaOfInterestOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestOptionalParameter&text=GetAreaOfInterestOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AreaOfInterestResult getAreaOfInterest(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  desc: "This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the AreaOfInterestResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult&text=AreaOfInterestResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestAsync(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  name: "getAreaOfInterestAsync(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  nameWithType: "ComputerVision.getAreaOfInterestAsync(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  summary: "This operation returns a bounding box around the most important area of the image."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getAreaOfInterestOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestOptionalParameter&text=GetAreaOfInterestOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AreaOfInterestResult> getAreaOfInterestAsync(String url, GetAreaOfInterestOptionalParameter getAreaOfInterestOptionalParameter)"
  desc: "This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the observable to the AreaOfInterestResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult&text=AreaOfInterestResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream()"
  name: "getAreaOfInterestInStream()"
  nameWithType: "ComputerVision.getAreaOfInterestInStream()"
  summary: "This operation returns a bounding box around the most important area of the image."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionGetAreaOfInterestInStreamDefinitionStages.WithImage getAreaOfInterestInStream()"
  desc: "This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the first stage of the getAreaOfInterestInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGetAreaOfInterestInStreamDefinitionStages.WithImage?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionGetAreaOfInterestInStreamDefinitionStages.WithImage&text=WithImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStream(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  name: "getAreaOfInterestInStream(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  nameWithType: "ComputerVision.getAreaOfInterestInStream(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  summary: "This operation returns a bounding box around the most important area of the image."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getAreaOfInterestInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestInStreamOptionalParameter&text=GetAreaOfInterestInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AreaOfInterestResult getAreaOfInterestInStream(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  desc: "This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the AreaOfInterestResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult&text=AreaOfInterestResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getAreaOfInterestInStreamAsync(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  name: "getAreaOfInterestInStreamAsync(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  nameWithType: "ComputerVision.getAreaOfInterestInStreamAsync(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  summary: "This operation returns a bounding box around the most important area of the image."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "getAreaOfInterestInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.GetAreaOfInterestInStreamOptionalParameter&text=GetAreaOfInterestInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AreaOfInterestResult> getAreaOfInterestInStreamAsync(byte[] image, GetAreaOfInterestInStreamOptionalParameter getAreaOfInterestInStreamOptionalParameter)"
  desc: "This operation returns a bounding box around the most important area of the image. A successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong. Upon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
  returns:
    description: "the observable to the AreaOfInterestResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AreaOfInterestResult&text=AreaOfInterestResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResult(UUID operationId)"
  name: "getReadResult(UUID operationId)"
  nameWithType: "ComputerVision.getReadResult(UUID operationId)"
  summary: "This interface is used for getting OCR results of Read operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id of read operation returned in the response of the 'Read' interface."
    name: "operationId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ReadOperationResult getReadResult(UUID operationId)"
  desc: "This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface."
  returns:
    description: "the ReadOperationResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult&text=ReadOperationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync(java.util.UUID)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.getReadResultAsync(UUID operationId)"
  name: "getReadResultAsync(UUID operationId)"
  nameWithType: "ComputerVision.getReadResultAsync(UUID operationId)"
  summary: "This interface is used for getting OCR results of Read operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id of read operation returned in the response of the 'Read' interface."
    name: "operationId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ReadOperationResult> getReadResultAsync(UUID operationId)"
  desc: "This interface is used for getting OCR results of Read operation. The URL to this interface should be retrieved from 'Operation-Location' field returned from Read interface."
  returns:
    description: "the observable to the ReadOperationResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOperationResult&text=ReadOperationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModels()"
  name: "listModels()"
  nameWithType: "ComputerVision.listModels()"
  summary: "This operation returns the list of domain-specific models that are supported by the Computer Vision API."
  modifiers:
  - "abstract"
  syntax: "public abstract ListModelsResult listModels()"
  desc: "This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the ListModelsResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult&text=ListModelsResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.listModelsAsync()"
  name: "listModelsAsync()"
  nameWithType: "ComputerVision.listModelsAsync()"
  summary: "This operation returns the list of domain-specific models that are supported by the Computer Vision API."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ListModelsResult> listModelsAsync()"
  desc: "This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the ListModelsResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ListModelsResult&text=ListModelsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read()"
  name: "read()"
  nameWithType: "ComputerVision.read()"
  summary: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionReadDefinitionStages.WithUrl read()"
  desc: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\\\u200b."
  returns:
    description: "the first stage of the read call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionReadDefinitionStages.WithUrl?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionReadDefinitionStages.WithUrl&text=WithUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.read(String url, ReadOptionalParameter readOptionalParameter)"
  name: "read(String url, ReadOptionalParameter readOptionalParameter)"
  nameWithType: "ComputerVision.read(String url, ReadOptionalParameter readOptionalParameter)"
  summary: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "readOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter&text=ReadOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void read(String url, ReadOptionalParameter readOptionalParameter)"
  desc: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\\\u200b."
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readAsync(String url, ReadOptionalParameter readOptionalParameter)"
  name: "readAsync(String url, ReadOptionalParameter readOptionalParameter)"
  nameWithType: "ComputerVision.readAsync(String url, ReadOptionalParameter readOptionalParameter)"
  summary: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "readOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadOptionalParameter&text=ReadOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> readAsync(String url, ReadOptionalParameter readOptionalParameter)"
  desc: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\\\u200b."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream()"
  name: "readInStream()"
  nameWithType: "ComputerVision.readInStream()"
  summary: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionReadInStreamDefinitionStages.WithImage readInStream()"
  desc: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\\\u200b."
  returns:
    description: "the first stage of the readInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionReadInStreamDefinitionStages.WithImage?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionReadInStreamDefinitionStages.WithImage&text=WithImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  name: "readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  nameWithType: "ComputerVision.readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  summary: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "readInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter&text=ReadInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void readInStream(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  desc: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\\\u200b."
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  name: "readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  nameWithType: "ComputerVision.readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  summary: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "readInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadInStreamOptionalParameter&text=ReadInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> readInStreamAsync(byte[] image, ReadInStreamOptionalParameter readInStreamOptionalParameter)"
  desc: "Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents. When you use the Read interface, the response contains a field called 'Operation-Location'. The 'Operation-Location' field contains the URL that you must use for your 'GetReadResult' operation to access OCR results.\\\\u200b."
  returns:
    description: "a representation of the deferred computation of this call if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText()"
  name: "recognizePrintedText()"
  nameWithType: "ComputerVision.recognizePrintedText()"
  summary: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation recognizePrintedText()"
  desc: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
  returns:
    description: "the first stage of the recognizePrintedText call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionRecognizePrintedTextDefinitionStages.WithDetectOrientation&text=WithDetectOrientation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  name: "recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  nameWithType: "ComputerVision.recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  summary: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream."
  modifiers:
  - "abstract"
  parameters:
  - description: "Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to\n   detect the image orientation and correct it before further processing (e.g. if it's upside-down)."
    name: "detectOrientation"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "recognizePrintedTextOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter&text=RecognizePrintedTextOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract OcrResult recognizePrintedText(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  desc: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
  returns:
    description: "the OcrResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult&text=OcrResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean,java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  name: "recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  nameWithType: "ComputerVision.recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  summary: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream."
  modifiers:
  - "abstract"
  parameters:
  - description: "Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to\n   detect the image orientation and correct it before further processing (e.g. if it's upside-down)."
    name: "detectOrientation"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "recognizePrintedTextOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextOptionalParameter&text=RecognizePrintedTextOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<OcrResult> recognizePrintedTextAsync(boolean detectOrientation, String url, RecognizePrintedTextOptionalParameter recognizePrintedTextOptionalParameter)"
  desc: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
  returns:
    description: "the observable to the OcrResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult&text=OcrResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream()"
  name: "recognizePrintedTextInStream()"
  nameWithType: "ComputerVision.recognizePrintedTextInStream()"
  summary: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation recognizePrintedTextInStream()"
  desc: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
  returns:
    description: "the first stage of the recognizePrintedTextInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionRecognizePrintedTextInStreamDefinitionStages.WithDetectOrientation&text=WithDetectOrientation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  name: "recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  nameWithType: "ComputerVision.recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  summary: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream."
  modifiers:
  - "abstract"
  parameters:
  - description: "Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to\n   detect the image orientation and correct it before further processing (e.g. if it's upside-down)."
    name: "detectOrientation"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "recognizePrintedTextInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter&text=RecognizePrintedTextInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract OcrResult recognizePrintedTextInStream(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  desc: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
  returns:
    description: "the OcrResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult&text=OcrResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  name: "recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  nameWithType: "ComputerVision.recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  summary: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream."
  modifiers:
  - "abstract"
  parameters:
  - description: "Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to\n   detect the image orientation and correct it before further processing (e.g. if it's upside-down)."
    name: "detectOrientation"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "recognizePrintedTextInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.RecognizePrintedTextInStreamOptionalParameter&text=RecognizePrintedTextInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<OcrResult> recognizePrintedTextInStreamAsync(boolean detectOrientation, byte[] image, RecognizePrintedTextInStreamOptionalParameter recognizePrintedTextInStreamOptionalParameter)"
  desc: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream. Upon success, the OCR results will be returned. Upon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
  returns:
    description: "the observable to the OcrResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.OcrResult&text=OcrResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage()"
  name: "tagImage()"
  nameWithType: "ComputerVision.tagImage()"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionTagImageDefinitionStages.WithUrl tagImage()"
  desc: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the tagImage call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionTagImageDefinitionStages.WithUrl?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionTagImageDefinitionStages.WithUrl&text=WithUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  name: "tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  nameWithType: "ComputerVision.tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "tagImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter&text=TagImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TagResult tagImage(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  desc: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the TagResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult&text=TagResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  name: "tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  nameWithType: "ComputerVision.tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image."
  modifiers:
  - "abstract"
  parameters:
  - description: "Publicly reachable URL of an image."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "tagImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageOptionalParameter&text=TagImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TagResult> tagImageAsync(String url, TagImageOptionalParameter tagImageOptionalParameter)"
  desc: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the TagResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult&text=TagResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream()"
  name: "tagImageInStream()"
  nameWithType: "ComputerVision.tagImageInStream()"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image."
  modifiers:
  - "abstract"
  syntax: "public abstract ComputerVision.ComputerVisionTagImageInStreamDefinitionStages.WithImage tagImageInStream()"
  desc: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the first stage of the tagImageInStream call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionTagImageInStreamDefinitionStages.WithImage?alt=com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.ComputerVisionTagImageInStreamDefinitionStages.WithImage&text=WithImage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  name: "tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  nameWithType: "ComputerVision.tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "tagImageInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter&text=TagImageInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TagResult tagImageInStream(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  desc: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the TagResult object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult&text=TagResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  name: "tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  nameWithType: "ComputerVision.tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  summary: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image."
  modifiers:
  - "abstract"
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "tagImageInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagImageInStreamOptionalParameter&text=TagImageInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<TagResult> tagImageInStreamAsync(byte[] image, TagImageInStreamOptionalParameter tagImageInStreamOptionalParameter)"
  desc: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\". Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  returns:
    description: "the observable to the TagResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TagResult&text=TagResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ComputerVision."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.9-beta
