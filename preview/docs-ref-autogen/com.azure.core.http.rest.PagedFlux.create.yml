### YamlMime:JavaMember
uid: "com.azure.core.http.rest.PagedFlux.create*"
fullName: "com.azure.core.http.rest.PagedFlux<T>.<T>create"
name: "<T>create"
nameWithType: "PagedFlux<T>.<T>create"
members:
- uid: "com.azure.core.http.rest.PagedFlux.<T>create(java.util.function.Supplier<com.azure.core.util.paging.PageRetriever<java.lang.String,com.azure.core.http.rest.PagedResponse<T>>>)"
  fullName: "com.azure.core.http.rest.PagedFlux<T>.<T>create(Supplier<PageRetriever<String,PagedResponse<T>>> provider)"
  name: "<T>create(Supplier<PageRetriever<String,PagedResponse<T>>> provider)"
  nameWithType: "PagedFlux<T>.<T>create(Supplier<PageRetriever<String,PagedResponse<T>>> provider)"
  summary: "Creates an instance of <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> backed by a Page Retriever Supplier (provider). When invoked provider should return <xref uid=\"com.azure.core.util.paging.PageRetriever\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageRetriever\"></xref>. The provider will be called for each Subscription to the PagedFlux instance. The Page Retriever can get called multiple times in serial fashion, each time after the completion of the Flux returned from the previous invocation. The final completion signal will be send to the Subscriber when the last Page emitted by the Flux returned by Page Retriever has `null` continuation token. The provider is useful mainly in two scenarios:\n\n *  To manage state across multiple call to Page Retrieval within the same Subscription.\n *  To decorate a PagedFlux to produce new PagedFlux.\n\n**Decoration sample**\n\n\\{@codesnippet com.azure.core.http.rest.pagedflux.create.decoration\\}"
  parameters:
  - description: "the Page Retrieval Provider"
    name: "provider"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.paging.PageRetriever?alt=com.azure.core.util.paging.PageRetriever&text=PageRetriever\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  syntax: "public static PagedFlux<T> <T>create(Supplier<PageRetriever<String,PagedResponse<T>>> provider)"
  returns:
    description: "PagedFlux backed by the Page Retriever Function Supplier"
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.http.rest"
artifact: com.azure:azure-core:1.3.0-beta.1
