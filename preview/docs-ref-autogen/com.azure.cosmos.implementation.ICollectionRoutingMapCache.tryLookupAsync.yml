### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.ICollectionRoutingMapCache.tryLookupAsync*"
fullName: "com.azure.cosmos.implementation.ICollectionRoutingMapCache.tryLookupAsync"
name: "tryLookupAsync"
nameWithType: "ICollectionRoutingMapCache.tryLookupAsync"
members:
- uid: "com.azure.cosmos.implementation.ICollectionRoutingMapCache.tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.cosmos.implementation.ICollectionRoutingMapCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  name: "tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  nameWithType: "ICollectionRoutingMapCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  parameters:
  - name: "metaDataDiagnosticsContext"
    type: "<xref href=\"com.azure.cosmos.implementation.MetadataDiagnosticsContext?alt=com.azure.cosmos.implementation.MetadataDiagnosticsContext&text=MetadataDiagnosticsContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "collectionRid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "previousValue"
    type: "<xref href=\"com.azure.cosmos.implementation.routing.CollectionRoutingMap?alt=com.azure.cosmos.implementation.routing.CollectionRoutingMap&text=CollectionRoutingMap\" data-throw-if-not-resolved=\"False\" />"
  - name: "forceRefreshCollectionRoutingMap"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "properties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Utils.ValueHolder<CollectionRoutingMap>> tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.Utils.ValueHolder?alt=com.azure.cosmos.implementation.Utils.ValueHolder&text=ValueHolder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.routing.CollectionRoutingMap?alt=com.azure.cosmos.implementation.routing.CollectionRoutingMap&text=CollectionRoutingMap\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.cosmos.implementation.ICollectionRoutingMapCache.tryLookupAsync(com.azure.cosmos.implementation.MetadataDiagnosticsContext,java.lang.String,com.azure.cosmos.implementation.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.cosmos.implementation.ICollectionRoutingMapCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  name: "tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  nameWithType: "ICollectionRoutingMapCache.tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  parameters:
  - name: "metaDataDiagnosticsContext"
    type: "<xref href=\"com.azure.cosmos.implementation.MetadataDiagnosticsContext?alt=com.azure.cosmos.implementation.MetadataDiagnosticsContext&text=MetadataDiagnosticsContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "collectionRid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "previousValue"
    type: "<xref href=\"com.azure.cosmos.implementation.routing.CollectionRoutingMap?alt=com.azure.cosmos.implementation.routing.CollectionRoutingMap&text=CollectionRoutingMap\" data-throw-if-not-resolved=\"False\" />"
  - name: "properties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public default Mono<Utils.ValueHolder<CollectionRoutingMap>> tryLookupAsync(MetadataDiagnosticsContext metaDataDiagnosticsContext, String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.Utils.ValueHolder?alt=com.azure.cosmos.implementation.Utils.ValueHolder&text=ValueHolder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.routing.CollectionRoutingMap?alt=com.azure.cosmos.implementation.routing.CollectionRoutingMap&text=CollectionRoutingMap\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
