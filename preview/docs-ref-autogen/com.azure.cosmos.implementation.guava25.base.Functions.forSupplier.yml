### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Functions.forSupplier*"
fullName: "com.azure.cosmos.implementation.guava25.base.Functions.<T>forSupplier"
name: "<T>forSupplier"
nameWithType: "Functions.<T>forSupplier"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Functions.<T>forSupplier(com.azure.cosmos.implementation.guava25.base.Supplier<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Functions.<T>forSupplier(Supplier<T> supplier)"
  name: "<T>forSupplier(Supplier<T> supplier)"
  nameWithType: "Functions.<T>forSupplier(Supplier<T> supplier)"
  summary: "Returns a function that ignores its input and returns the result of `supplier.get()`.\n\n**Java 8 users:** use the lambda expression `o -> supplier.get()` instead."
  parameters:
  - name: "supplier"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Supplier?alt=com.azure.cosmos.implementation.guava25.base.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Function<Object,T> <T>forSupplier(Supplier<T> supplier)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Function?alt=com.azure.cosmos.implementation.guava25.base.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
