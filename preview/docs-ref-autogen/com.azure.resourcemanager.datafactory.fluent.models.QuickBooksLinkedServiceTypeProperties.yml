### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties"
name: "QuickBooksLinkedServiceTypeProperties"
nameWithType: "QuickBooksLinkedServiceTypeProperties"
summary: "QuickBooks server linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class QuickBooksLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.QuickBooksLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.QuickBooksLinkedServiceTypeProperties()"
  name: "QuickBooksLinkedServiceTypeProperties()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.QuickBooksLinkedServiceTypeProperties()"
  syntax: "public QuickBooksLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.accessToken()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.accessToken()"
  name: "accessToken()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.accessToken()"
  summary: "Get the accessToken property: The access token for OAuth 1.0 authentication."
  syntax: "public SecretBase accessToken()"
  returns:
    description: "the accessToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.accessTokenSecret()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.accessTokenSecret()"
  name: "accessTokenSecret()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.accessTokenSecret()"
  summary: "Get the accessTokenSecret property: The access token secret for OAuth 1.0 authentication."
  syntax: "public SecretBase accessTokenSecret()"
  returns:
    description: "the accessTokenSecret value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.companyId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.companyId()"
  name: "companyId()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.companyId()"
  summary: "Get the companyId property: The company ID of the QuickBooks company to authorize."
  syntax: "public Object companyId()"
  returns:
    description: "the companyId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.connectionProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.connectionProperties()"
  name: "connectionProperties()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.connectionProperties()"
  summary: "Get the connectionProperties property: Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object."
  syntax: "public Object connectionProperties()"
  returns:
    description: "the connectionProperties value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.consumerKey()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.consumerKey()"
  name: "consumerKey()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.consumerKey()"
  summary: "Get the consumerKey property: The consumer key for OAuth 1.0 authentication."
  syntax: "public Object consumerKey()"
  returns:
    description: "the consumerKey value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.consumerSecret()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.consumerSecret()"
  name: "consumerSecret()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.consumerSecret()"
  summary: "Get the consumerSecret property: The consumer secret for OAuth 1.0 authentication."
  syntax: "public SecretBase consumerSecret()"
  returns:
    description: "the consumerSecret value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.endpoint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.endpoint()"
  name: "endpoint()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.endpoint()"
  summary: "Get the endpoint property: The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)."
  syntax: "public Object endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.useEncryptedEndpoints()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.useEncryptedEndpoints()"
  name: "useEncryptedEndpoints()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.useEncryptedEndpoints()"
  summary: "Get the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  syntax: "public Object useEncryptedEndpoints()"
  returns:
    description: "the useEncryptedEndpoints value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withAccessToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withAccessToken(SecretBase accessToken)"
  name: "withAccessToken(SecretBase accessToken)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withAccessToken(SecretBase accessToken)"
  summary: "Set the accessToken property: The access token for OAuth 1.0 authentication."
  parameters:
  - description: "the accessToken value to set."
    name: "accessToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withAccessToken(SecretBase accessToken)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withAccessTokenSecret(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withAccessTokenSecret(SecretBase accessTokenSecret)"
  name: "withAccessTokenSecret(SecretBase accessTokenSecret)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withAccessTokenSecret(SecretBase accessTokenSecret)"
  summary: "Set the accessTokenSecret property: The access token secret for OAuth 1.0 authentication."
  parameters:
  - description: "the accessTokenSecret value to set."
    name: "accessTokenSecret"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withAccessTokenSecret(SecretBase accessTokenSecret)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withCompanyId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withCompanyId(Object companyId)"
  name: "withCompanyId(Object companyId)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withCompanyId(Object companyId)"
  summary: "Set the companyId property: The company ID of the QuickBooks company to authorize."
  parameters:
  - description: "the companyId value to set."
    name: "companyId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withCompanyId(Object companyId)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withConnectionProperties(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withConnectionProperties(Object connectionProperties)"
  name: "withConnectionProperties(Object connectionProperties)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withConnectionProperties(Object connectionProperties)"
  summary: "Set the connectionProperties property: Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object."
  parameters:
  - description: "the connectionProperties value to set."
    name: "connectionProperties"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withConnectionProperties(Object connectionProperties)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withConsumerKey(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withConsumerKey(Object consumerKey)"
  name: "withConsumerKey(Object consumerKey)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withConsumerKey(Object consumerKey)"
  summary: "Set the consumerKey property: The consumer key for OAuth 1.0 authentication."
  parameters:
  - description: "the consumerKey value to set."
    name: "consumerKey"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withConsumerKey(Object consumerKey)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withConsumerSecret(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withConsumerSecret(SecretBase consumerSecret)"
  name: "withConsumerSecret(SecretBase consumerSecret)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withConsumerSecret(SecretBase consumerSecret)"
  summary: "Set the consumerSecret property: The consumer secret for OAuth 1.0 authentication."
  parameters:
  - description: "the consumerSecret value to set."
    name: "consumerSecret"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withConsumerSecret(SecretBase consumerSecret)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  name: "withEndpoint(Object endpoint)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  summary: "Set the endpoint property: The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)."
  parameters:
  - description: "the endpoint value to set."
    name: "endpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withEndpoint(Object endpoint)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withUseEncryptedEndpoints(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  name: "withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  nameWithType: "QuickBooksLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  summary: "Set the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  parameters:
  - description: "the useEncryptedEndpoints value to set."
    name: "useEncryptedEndpoints"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QuickBooksLinkedServiceTypeProperties withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  returns:
    description: "the QuickBooksLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.QuickBooksLinkedServiceTypeProperties&text=QuickBooksLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
