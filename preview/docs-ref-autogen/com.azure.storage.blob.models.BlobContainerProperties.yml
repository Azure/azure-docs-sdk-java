### YamlMime:JavaType
uid: "com.azure.storage.blob.models.BlobContainerProperties"
fullName: "com.azure.storage.blob.models.BlobContainerProperties"
name: "BlobContainerProperties"
nameWithType: "BlobContainerProperties"
summary: "This class contains the response information returned from the service when getting container properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BlobContainerProperties"
constructors:
- uid: "com.azure.storage.blob.models.BlobContainerProperties.BlobContainerProperties(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,com.azure.storage.blob.models.LeaseDurationType,com.azure.storage.blob.models.LeaseStateType,com.azure.storage.blob.models.LeaseStatusType,com.azure.storage.blob.models.PublicAccessType,boolean,boolean)"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
  name: "BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
  nameWithType: "BlobContainerProperties.BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
  summary: "Constructs a <xref uid=\"com.azure.storage.blob.models.BlobContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerProperties\"></xref>."
  parameters:
  - description: "Metadata associated with the container."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "ETag of the container."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Datetime when the container was last modified."
    name: "lastModified"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of the lease on the container."
    name: "leaseDuration"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseDurationType?alt=com.azure.storage.blob.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "State of the lease on the container."
    name: "leaseState"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStateType?alt=com.azure.storage.blob.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status of the lease on the container."
    name: "leaseStatus"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStatusType?alt=com.azure.storage.blob.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Public access status for the container."
    name: "blobPublicAccess"
    type: "<xref href=\"com.azure.storage.blob.models.PublicAccessType?alt=com.azure.storage.blob.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the container has an immutability policy set on it."
    name: "hasImmutabilityPolicy"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the container has a legal hold."
    name: "hasLegalHold"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold)"
  desc: "Constructs a <xref uid=\"com.azure.storage.blob.models.BlobContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerProperties\"></xref>."
- uid: "com.azure.storage.blob.models.BlobContainerProperties.BlobContainerProperties(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,com.azure.storage.blob.models.LeaseDurationType,com.azure.storage.blob.models.LeaseStateType,com.azure.storage.blob.models.LeaseStatusType,com.azure.storage.blob.models.PublicAccessType,boolean,boolean,java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented)"
  name: "BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented)"
  nameWithType: "BlobContainerProperties.BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented)"
  summary: "Constructs a <xref uid=\"com.azure.storage.blob.models.BlobContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerProperties\"></xref>."
  parameters:
  - description: "Metadata associated with the container."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "ETag of the container."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Datetime when the container was last modified."
    name: "lastModified"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of the lease on the container."
    name: "leaseDuration"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseDurationType?alt=com.azure.storage.blob.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "State of the lease on the container."
    name: "leaseState"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStateType?alt=com.azure.storage.blob.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status of the lease on the container."
    name: "leaseStatus"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStatusType?alt=com.azure.storage.blob.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Public access status for the container."
    name: "blobPublicAccess"
    type: "<xref href=\"com.azure.storage.blob.models.PublicAccessType?alt=com.azure.storage.blob.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the container has an immutability policy set on it."
    name: "hasImmutabilityPolicy"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the container has a legal hold."
    name: "hasLegalHold"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The container's default encryption scope to encrypt blobs with."
    name: "defaultEncryptionScope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not a container's default encryption scope can be overriden"
    name: "encryptionScopeOverridePrevented"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented)"
  desc: "Constructs a <xref uid=\"com.azure.storage.blob.models.BlobContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerProperties\"></xref>."
- uid: "com.azure.storage.blob.models.BlobContainerProperties.BlobContainerProperties(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,com.azure.storage.blob.models.LeaseDurationType,com.azure.storage.blob.models.LeaseStateType,com.azure.storage.blob.models.LeaseStatusType,com.azure.storage.blob.models.PublicAccessType,boolean,boolean,java.lang.String,java.lang.Boolean,java.lang.Boolean)"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Boolean isImmutableStorageWithVersioningEnabled)"
  name: "BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Boolean isImmutableStorageWithVersioningEnabled)"
  nameWithType: "BlobContainerProperties.BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Boolean isImmutableStorageWithVersioningEnabled)"
  summary: "Constructs a <xref uid=\"com.azure.storage.blob.models.BlobContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerProperties\"></xref>."
  parameters:
  - description: "Metadata associated with the container."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "ETag of the container."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Datetime when the container was last modified."
    name: "lastModified"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of the lease on the container."
    name: "leaseDuration"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseDurationType?alt=com.azure.storage.blob.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
  - description: "State of the lease on the container."
    name: "leaseState"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStateType?alt=com.azure.storage.blob.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Status of the lease on the container."
    name: "leaseStatus"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStatusType?alt=com.azure.storage.blob.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Public access status for the container."
    name: "blobPublicAccess"
    type: "<xref href=\"com.azure.storage.blob.models.PublicAccessType?alt=com.azure.storage.blob.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the container has an immutability policy set on it."
    name: "hasImmutabilityPolicy"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag indicating if the container has a legal hold."
    name: "hasLegalHold"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The container's default encryption scope to encrypt blobs with."
    name: "defaultEncryptionScope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not a container's default encryption scope can be overriden"
    name: "encryptionScopeOverridePrevented"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not immutable storage with versioning is enabled on\n                                                this container."
    name: "isImmutableStorageWithVersioningEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobContainerProperties(Map<String,String> metadata, String eTag, OffsetDateTime lastModified, LeaseDurationType leaseDuration, LeaseStateType leaseState, LeaseStatusType leaseStatus, PublicAccessType blobPublicAccess, boolean hasImmutabilityPolicy, boolean hasLegalHold, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Boolean isImmutableStorageWithVersioningEnabled)"
  desc: "Constructs a <xref uid=\"com.azure.storage.blob.models.BlobContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerProperties\"></xref>."
methods:
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getBlobPublicAccess()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getBlobPublicAccess()"
  name: "getBlobPublicAccess()"
  nameWithType: "BlobContainerProperties.getBlobPublicAccess()"
  syntax: "public PublicAccessType getBlobPublicAccess()"
  returns:
    description: "the access type for the container"
    type: "<xref href=\"com.azure.storage.blob.models.PublicAccessType?alt=com.azure.storage.blob.models.PublicAccessType&text=PublicAccessType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getDefaultEncryptionScope()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getDefaultEncryptionScope()"
  name: "getDefaultEncryptionScope()"
  nameWithType: "BlobContainerProperties.getDefaultEncryptionScope()"
  syntax: "public String getDefaultEncryptionScope()"
  returns:
    description: "the container's default encryption scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getETag()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getETag()"
  name: "getETag()"
  nameWithType: "BlobContainerProperties.getETag()"
  syntax: "public String getETag()"
  returns:
    description: "the eTag of the container"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getLastModified()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getLastModified()"
  name: "getLastModified()"
  nameWithType: "BlobContainerProperties.getLastModified()"
  syntax: "public OffsetDateTime getLastModified()"
  returns:
    description: "the time the container was last modified"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getLeaseDuration()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getLeaseDuration()"
  name: "getLeaseDuration()"
  nameWithType: "BlobContainerProperties.getLeaseDuration()"
  syntax: "public LeaseDurationType getLeaseDuration()"
  returns:
    description: "the type of lease on the container"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseDurationType?alt=com.azure.storage.blob.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getLeaseState()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getLeaseState()"
  name: "getLeaseState()"
  nameWithType: "BlobContainerProperties.getLeaseState()"
  syntax: "public LeaseStateType getLeaseState()"
  returns:
    description: "the lease state of the container"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStateType?alt=com.azure.storage.blob.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getLeaseStatus()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getLeaseStatus()"
  name: "getLeaseStatus()"
  nameWithType: "BlobContainerProperties.getLeaseStatus()"
  syntax: "public LeaseStatusType getLeaseStatus()"
  returns:
    description: "the lease status of the container"
    type: "<xref href=\"com.azure.storage.blob.models.LeaseStatusType?alt=com.azure.storage.blob.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.getMetadata()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.getMetadata()"
  name: "getMetadata()"
  nameWithType: "BlobContainerProperties.getMetadata()"
  syntax: "public Map<String,String> getMetadata()"
  returns:
    description: "the metadata associated with the container"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.hasImmutabilityPolicy()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.hasImmutabilityPolicy()"
  name: "hasImmutabilityPolicy()"
  nameWithType: "BlobContainerProperties.hasImmutabilityPolicy()"
  syntax: "public boolean hasImmutabilityPolicy()"
  returns:
    description: "the immutability status for the container"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.hasLegalHold()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.hasLegalHold()"
  name: "hasLegalHold()"
  nameWithType: "BlobContainerProperties.hasLegalHold()"
  syntax: "public boolean hasLegalHold()"
  returns:
    description: "the legal hold status for the container"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.isEncryptionScopeOverridePrevented()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.isEncryptionScopeOverridePrevented()"
  name: "isEncryptionScopeOverridePrevented()"
  nameWithType: "BlobContainerProperties.isEncryptionScopeOverridePrevented()"
  syntax: "public Boolean isEncryptionScopeOverridePrevented()"
  returns:
    description: "the container's deny encryption scope override property."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.models.BlobContainerProperties.isImmutableStorageWithVersioningEnabled()"
  fullName: "com.azure.storage.blob.models.BlobContainerProperties.isImmutableStorageWithVersioningEnabled()"
  name: "isImmutableStorageWithVersioningEnabled()"
  nameWithType: "BlobContainerProperties.isImmutableStorageWithVersioningEnabled()"
  syntax: "public Boolean isImmutableStorageWithVersioningEnabled()"
  returns:
    description: "Whether or not immutable storage with versioning is enabled on this container."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class contains the response information returned from the service when getting container properties."
metadata: {}
package: "com.azure.storage.blob.models"
artifact: com.azure:azure-storage-blob:12.18.0-beta.1
