### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createDataFeedWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createDataFeedWithResponse"
name: "createDataFeedWithResponse"
nameWithType: "MetricsAdvisorAdministrationClient.createDataFeedWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createDataFeedWithResponse(com.azure.ai.metricsadvisor.models.DataFeed,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createDataFeedWithResponse(DataFeed dataFeed, Context context)"
  name: "createDataFeedWithResponse(DataFeed dataFeed, Context context)"
  nameWithType: "MetricsAdvisorAdministrationClient.createDataFeedWithResponse(DataFeed dataFeed, Context context)"
  summary: "Create a new data feed with REST response.\n\n**Code sample**\n\n```java\nDataFeed dataFeed = new DataFeed()\n     .setName(\"dataFeedName\")\n     .setSource(new MySqlDataFeedSource(\"conn-string\", \"query\"))\n     .setGranularity(new DataFeedGranularity().setGranularityType(DataFeedGranularityType.DAILY))\n     .setSchema(new DataFeedSchema(\n         Arrays.asList(\n             new DataFeedMetric().setName(\"cost\"),\n             new DataFeedMetric().setName(\"revenue\")\n         )).setDimensions(\n         Arrays.asList(\n             new DataFeedDimension().setName(\"city\"),\n             new DataFeedDimension().setName(\"category\")\n         ))\n     )\n     .setIngestionSettings(new DataFeedIngestionSettings(OffsetDateTime.parse(\"2020-01-01T00:00:00Z\")))\n     .setOptions(new DataFeedOptions()\n         .setDescription(\"data feed description\")\n         .setRollupSettings(new DataFeedRollupSettings()\n             .setRollupType(DataFeedRollupType.AUTO_ROLLUP)));\n \n final Response<DataFeed> createdDataFeedResponse =\n     metricsAdvisorAdminClient.createDataFeedWithResponse(dataFeed, Context.NONE);\n \n System.out.printf(\"Data feed create operation status: %s%n\", createdDataFeedResponse.getStatusCode());\n DataFeed createdDataFeed = createdDataFeedResponse.getValue();\n System.out.printf(\"Data feed Id: %s%n\", createdDataFeed.getId());\n System.out.printf(\"Data feed description: %s%n\", createdDataFeed.getOptions().getDescription());\n System.out.printf(\"Data feed source type: %s%n\", createdDataFeed.getSourceType());\n System.out.printf(\"Data feed creator: %s%n\", createdDataFeed.getCreator());\n```"
  parameters:
  - description: "The data feed to be created."
    name: "dataFeed"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.DataFeed?alt=com.azure.ai.metricsadvisor.models.DataFeed&text=DataFeed\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DataFeed> createDataFeedWithResponse(DataFeed dataFeed, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the created data feed."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DataFeed?alt=com.azure.ai.metricsadvisor.models.DataFeed&text=DataFeed\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
