### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.SearchIndex"
fullName: "com.azure.search.documents.indexes.models.SearchIndex"
name: "SearchIndex"
nameWithType: "SearchIndex"
summary: "Represents a search index definition, which describes the fields and search behavior of an index."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SearchIndex"
constructors:
- uid: "com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(String name)"
  name: "SearchIndex(String name)"
  nameWithType: "SearchIndex.SearchIndex(String name)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.SearchIndex\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndex\"></xref>."
  parameters:
  - description: "The name of the index."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchIndex(String name)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.SearchIndex\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndex\"></xref>."
- uid: "com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(java.lang.String,java.util.List<com.azure.search.documents.indexes.models.SearchField>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.SearchIndex(String name, List<SearchField> fields)"
  name: "SearchIndex(String name, List<SearchField> fields)"
  nameWithType: "SearchIndex.SearchIndex(String name, List<SearchField> fields)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.SearchIndex\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndex\"></xref>."
  parameters:
  - description: "The name of the index."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fields of the index."
    name: "fields"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchField?alt=com.azure.search.documents.indexes.models.SearchField&text=SearchField\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex(String name, List<SearchField> fields)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.SearchIndex\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndex\"></xref>."
methods:
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getAnalyzers()"
  name: "getAnalyzers()"
  nameWithType: "SearchIndex.getAnalyzers()"
  summary: "Get the analyzers property: The analyzers for the index."
  syntax: "public List<LexicalAnalyzer> getAnalyzers()"
  desc: "Get the analyzers property: The analyzers for the index."
  returns:
    description: "the analyzers value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.LexicalAnalyzer?alt=com.azure.search.documents.indexes.models.LexicalAnalyzer&text=LexicalAnalyzer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getCharFilters()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getCharFilters()"
  name: "getCharFilters()"
  nameWithType: "SearchIndex.getCharFilters()"
  summary: "Get the char<wbr>Filters property: The character filters for the index."
  syntax: "public List<CharFilter> getCharFilters()"
  desc: "Get the charFilters property: The character filters for the index."
  returns:
    description: "the charFilters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.CharFilter?alt=com.azure.search.documents.indexes.models.CharFilter&text=CharFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getCorsOptions()"
  name: "getCorsOptions()"
  nameWithType: "SearchIndex.getCorsOptions()"
  summary: "Get the cors<wbr>Options property: Options to control Cross-Origin Resource Sharing (CORS) for the index."
  syntax: "public CorsOptions getCorsOptions()"
  desc: "Get the corsOptions property: Options to control Cross-Origin Resource Sharing (CORS) for the index."
  returns:
    description: "the corsOptions value."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CorsOptions?alt=com.azure.search.documents.indexes.models.CorsOptions&text=CorsOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getDefaultScoringProfile()"
  name: "getDefaultScoringProfile()"
  nameWithType: "SearchIndex.getDefaultScoringProfile()"
  summary: "Get the default<wbr>Scoring<wbr>Profile property: The name of the scoring profile to use if none is specified in the query."
  syntax: "public String getDefaultScoringProfile()"
  desc: "Get the defaultScoringProfile property: The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used."
  returns:
    description: "the defaultScoringProfile value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getETag()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getETag()"
  name: "getETag()"
  nameWithType: "SearchIndex.getETag()"
  summary: "Get the e<wbr>Tag property: The ETag of the index."
  syntax: "public String getETag()"
  desc: "Get the eTag property: The ETag of the index."
  returns:
    description: "the eTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getEncryptionKey()"
  name: "getEncryptionKey()"
  nameWithType: "SearchIndex.getEncryptionKey()"
  summary: "Get the encryption<wbr>Key property: A description of an encryption key that you create in Azure Key Vault."
  syntax: "public SearchResourceEncryptionKey getEncryptionKey()"
  desc: "Get the encryptionKey property: A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
  returns:
    description: "the encryptionKey value."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchResourceEncryptionKey?alt=com.azure.search.documents.indexes.models.SearchResourceEncryptionKey&text=SearchResourceEncryptionKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getFields()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getFields()"
  name: "getFields()"
  nameWithType: "SearchIndex.getFields()"
  summary: "Get the fields property: The fields of the index."
  syntax: "public List<SearchField> getFields()"
  desc: "Get the fields property: The fields of the index."
  returns:
    description: "the fields value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchField?alt=com.azure.search.documents.indexes.models.SearchField&text=SearchField\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getName()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getName()"
  name: "getName()"
  nameWithType: "SearchIndex.getName()"
  summary: "Get the name property: The name of the index."
  syntax: "public String getName()"
  desc: "Get the name property: The name of the index."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getNormalizers()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getNormalizers()"
  name: "getNormalizers()"
  nameWithType: "SearchIndex.getNormalizers()"
  summary: "Get the normalizers property: The normalizers for the index."
  syntax: "public List<LexicalNormalizer> getNormalizers()"
  desc: "Get the normalizers property: The normalizers for the index."
  returns:
    description: "the normalizers value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer?alt=com.azure.search.documents.indexes.models.LexicalNormalizer&text=LexicalNormalizer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getScoringProfiles()"
  name: "getScoringProfiles()"
  nameWithType: "SearchIndex.getScoringProfiles()"
  summary: "Get the scoring<wbr>Profiles property: The scoring profiles for the index."
  syntax: "public List<ScoringProfile> getScoringProfiles()"
  desc: "Get the scoringProfiles property: The scoring profiles for the index."
  returns:
    description: "the scoringProfiles value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.ScoringProfile?alt=com.azure.search.documents.indexes.models.ScoringProfile&text=ScoringProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getSemanticSettings()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getSemanticSettings()"
  name: "getSemanticSettings()"
  nameWithType: "SearchIndex.getSemanticSettings()"
  summary: "Get the semantic<wbr>Settings property: Defines parameters for a search index that influence semantic capabilities."
  syntax: "public SemanticSettings getSemanticSettings()"
  desc: "Get the semanticSettings property: Defines parameters for a search index that influence semantic capabilities."
  returns:
    description: "the semanticSettings value."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SemanticSettings?alt=com.azure.search.documents.indexes.models.SemanticSettings&text=SemanticSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getSimilarity()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getSimilarity()"
  name: "getSimilarity()"
  nameWithType: "SearchIndex.getSimilarity()"
  summary: "Get the similarity property: The type of similarity algorithm to be used when scoring and ranking the documents matching a search query."
  syntax: "public SimilarityAlgorithm getSimilarity()"
  desc: "Get the similarity property: The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used."
  returns:
    description: "the similarity value."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SimilarityAlgorithm?alt=com.azure.search.documents.indexes.models.SimilarityAlgorithm&text=SimilarityAlgorithm\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getSuggesters()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getSuggesters()"
  name: "getSuggesters()"
  nameWithType: "SearchIndex.getSuggesters()"
  summary: "Get the suggesters property: The suggesters for the index."
  syntax: "public List<SearchSuggester> getSuggesters()"
  desc: "Get the suggesters property: The suggesters for the index."
  returns:
    description: "the suggesters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchSuggester?alt=com.azure.search.documents.indexes.models.SearchSuggester&text=SearchSuggester\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getTokenFilters()"
  name: "getTokenFilters()"
  nameWithType: "SearchIndex.getTokenFilters()"
  summary: "Get the token<wbr>Filters property: The token filters for the index."
  syntax: "public List<TokenFilter> getTokenFilters()"
  desc: "Get the tokenFilters property: The token filters for the index."
  returns:
    description: "the tokenFilters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?alt=com.azure.search.documents.indexes.models.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.getTokenizers()"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.getTokenizers()"
  name: "getTokenizers()"
  nameWithType: "SearchIndex.getTokenizers()"
  summary: "Get the tokenizers property: The tokenizers for the index."
  syntax: "public List<LexicalTokenizer> getTokenizers()"
  desc: "Get the tokenizers property: The tokenizers for the index."
  returns:
    description: "the tokenizers value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?alt=com.azure.search.documents.indexes.models.LexicalTokenizer&text=LexicalTokenizer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(com.azure.search.documents.indexes.models.LexicalAnalyzer...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(LexicalAnalyzer[] analyzers)"
  name: "setAnalyzers(LexicalAnalyzer[] analyzers)"
  nameWithType: "SearchIndex.setAnalyzers(LexicalAnalyzer[] analyzers)"
  summary: "Set the analyzers property: The analyzers for the index."
  parameters:
  - description: "the analyzers value to set."
    name: "analyzers"
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalAnalyzer?alt=com.azure.search.documents.indexes.models.LexicalAnalyzer&text=LexicalAnalyzer\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setAnalyzers(LexicalAnalyzer[] analyzers)"
  desc: "Set the analyzers property: The analyzers for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(java.util.List<com.azure.search.documents.indexes.models.LexicalAnalyzer>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setAnalyzers(List<LexicalAnalyzer> analyzers)"
  name: "setAnalyzers(List<LexicalAnalyzer> analyzers)"
  nameWithType: "SearchIndex.setAnalyzers(List<LexicalAnalyzer> analyzers)"
  summary: "Set the analyzers property: The analyzers for the index."
  parameters:
  - description: "the analyzers value to set."
    name: "analyzers"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.LexicalAnalyzer?alt=com.azure.search.documents.indexes.models.LexicalAnalyzer&text=LexicalAnalyzer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setAnalyzers(List<LexicalAnalyzer> analyzers)"
  desc: "Set the analyzers property: The analyzers for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(com.azure.search.documents.indexes.models.CharFilter...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(CharFilter[] charFilters)"
  name: "setCharFilters(CharFilter[] charFilters)"
  nameWithType: "SearchIndex.setCharFilters(CharFilter[] charFilters)"
  summary: "Set the char<wbr>Filters property: The character filters for the index."
  parameters:
  - description: "the charFilters value to set."
    name: "charFilters"
    type: "<xref href=\"com.azure.search.documents.indexes.models.CharFilter?alt=com.azure.search.documents.indexes.models.CharFilter&text=CharFilter\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setCharFilters(CharFilter[] charFilters)"
  desc: "Set the charFilters property: The character filters for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(java.util.List<com.azure.search.documents.indexes.models.CharFilter>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setCharFilters(List<CharFilter> charFilters)"
  name: "setCharFilters(List<CharFilter> charFilters)"
  nameWithType: "SearchIndex.setCharFilters(List<CharFilter> charFilters)"
  summary: "Set the char<wbr>Filters property: The character filters for the index."
  parameters:
  - description: "the charFilters value to set."
    name: "charFilters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.CharFilter?alt=com.azure.search.documents.indexes.models.CharFilter&text=CharFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setCharFilters(List<CharFilter> charFilters)"
  desc: "Set the charFilters property: The character filters for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions(com.azure.search.documents.indexes.models.CorsOptions)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setCorsOptions(CorsOptions corsOptions)"
  name: "setCorsOptions(CorsOptions corsOptions)"
  nameWithType: "SearchIndex.setCorsOptions(CorsOptions corsOptions)"
  summary: "Set the cors<wbr>Options property: Options to control Cross-Origin Resource Sharing (CORS) for the index."
  parameters:
  - description: "the corsOptions value to set."
    name: "corsOptions"
    type: "<xref href=\"com.azure.search.documents.indexes.models.CorsOptions?alt=com.azure.search.documents.indexes.models.CorsOptions&text=CorsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchIndex setCorsOptions(CorsOptions corsOptions)"
  desc: "Set the corsOptions property: Options to control Cross-Origin Resource Sharing (CORS) for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setDefaultScoringProfile(String defaultScoringProfile)"
  name: "setDefaultScoringProfile(String defaultScoringProfile)"
  nameWithType: "SearchIndex.setDefaultScoringProfile(String defaultScoringProfile)"
  summary: "Set the default<wbr>Scoring<wbr>Profile property: The name of the scoring profile to use if none is specified in the query."
  parameters:
  - description: "the defaultScoringProfile value to set."
    name: "defaultScoringProfile"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchIndex setDefaultScoringProfile(String defaultScoringProfile)"
  desc: "Set the defaultScoringProfile property: The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setETag(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setETag(String eTag)"
  name: "setETag(String eTag)"
  nameWithType: "SearchIndex.setETag(String eTag)"
  summary: "Set the e<wbr>Tag property: The ETag of the index."
  parameters:
  - description: "the eTag value to set."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchIndex setETag(String eTag)"
  desc: "Set the eTag property: The ETag of the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey(com.azure.search.documents.indexes.models.SearchResourceEncryptionKey)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setEncryptionKey(SearchResourceEncryptionKey encryptionKey)"
  name: "setEncryptionKey(SearchResourceEncryptionKey encryptionKey)"
  nameWithType: "SearchIndex.setEncryptionKey(SearchResourceEncryptionKey encryptionKey)"
  summary: "Set the encryption<wbr>Key property: A description of an encryption key that you create in Azure Key Vault."
  parameters:
  - description: "the encryptionKey value to set."
    name: "encryptionKey"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchResourceEncryptionKey?alt=com.azure.search.documents.indexes.models.SearchResourceEncryptionKey&text=SearchResourceEncryptionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchIndex setEncryptionKey(SearchResourceEncryptionKey encryptionKey)"
  desc: "Set the encryptionKey property: A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setFields(com.azure.search.documents.indexes.models.SearchField...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setFields(SearchField[] fields)"
  name: "setFields(SearchField[] fields)"
  nameWithType: "SearchIndex.setFields(SearchField[] fields)"
  summary: "Set the fields property: The fields of the index."
  parameters:
  - description: "the fields value to set."
    name: "fields"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchField?alt=com.azure.search.documents.indexes.models.SearchField&text=SearchField\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setFields(SearchField[] fields)"
  desc: "Set the fields property: The fields of the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setFields(java.util.List<com.azure.search.documents.indexes.models.SearchField>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setFields(List<SearchField> fields)"
  name: "setFields(List<SearchField> fields)"
  nameWithType: "SearchIndex.setFields(List<SearchField> fields)"
  summary: "Set the fields property: The fields of the index."
  parameters:
  - description: "the fields value to set."
    name: "fields"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchField?alt=com.azure.search.documents.indexes.models.SearchField&text=SearchField\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setFields(List<SearchField> fields)"
  desc: "Set the fields property: The fields of the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setNormalizers(com.azure.search.documents.indexes.models.LexicalNormalizer...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setNormalizers(LexicalNormalizer[] normalizers)"
  name: "setNormalizers(LexicalNormalizer[] normalizers)"
  nameWithType: "SearchIndex.setNormalizers(LexicalNormalizer[] normalizers)"
  summary: "Set the normalizers property: The normalizers for the index."
  parameters:
  - description: "the normalizers value to set."
    name: "normalizers"
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer?alt=com.azure.search.documents.indexes.models.LexicalNormalizer&text=LexicalNormalizer\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setNormalizers(LexicalNormalizer[] normalizers)"
  desc: "Set the normalizers property: The normalizers for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setNormalizers(java.util.List<com.azure.search.documents.indexes.models.LexicalNormalizer>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setNormalizers(List<LexicalNormalizer> normalizers)"
  name: "setNormalizers(List<LexicalNormalizer> normalizers)"
  nameWithType: "SearchIndex.setNormalizers(List<LexicalNormalizer> normalizers)"
  summary: "Set the normalizers property: The normalizers for the index."
  parameters:
  - description: "the normalizers value to set."
    name: "normalizers"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer?alt=com.azure.search.documents.indexes.models.LexicalNormalizer&text=LexicalNormalizer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setNormalizers(List<LexicalNormalizer> normalizers)"
  desc: "Set the normalizers property: The normalizers for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(com.azure.search.documents.indexes.models.ScoringProfile...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(ScoringProfile[] scoringProfiles)"
  name: "setScoringProfiles(ScoringProfile[] scoringProfiles)"
  nameWithType: "SearchIndex.setScoringProfiles(ScoringProfile[] scoringProfiles)"
  summary: "Set the scoring<wbr>Profiles property: The scoring profiles for the index."
  parameters:
  - description: "the scoringProfiles value to set."
    name: "scoringProfiles"
    type: "<xref href=\"com.azure.search.documents.indexes.models.ScoringProfile?alt=com.azure.search.documents.indexes.models.ScoringProfile&text=ScoringProfile\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setScoringProfiles(ScoringProfile[] scoringProfiles)"
  desc: "Set the scoringProfiles property: The scoring profiles for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(java.util.List<com.azure.search.documents.indexes.models.ScoringProfile>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setScoringProfiles(List<ScoringProfile> scoringProfiles)"
  name: "setScoringProfiles(List<ScoringProfile> scoringProfiles)"
  nameWithType: "SearchIndex.setScoringProfiles(List<ScoringProfile> scoringProfiles)"
  summary: "Set the scoring<wbr>Profiles property: The scoring profiles for the index."
  parameters:
  - description: "the scoringProfiles value to set."
    name: "scoringProfiles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.ScoringProfile?alt=com.azure.search.documents.indexes.models.ScoringProfile&text=ScoringProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setScoringProfiles(List<ScoringProfile> scoringProfiles)"
  desc: "Set the scoringProfiles property: The scoring profiles for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setSemanticSettings(com.azure.search.documents.indexes.models.SemanticSettings)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setSemanticSettings(SemanticSettings semanticSettings)"
  name: "setSemanticSettings(SemanticSettings semanticSettings)"
  nameWithType: "SearchIndex.setSemanticSettings(SemanticSettings semanticSettings)"
  summary: "Set the semantic<wbr>Settings property: Defines parameters for a search index that influence semantic capabilities."
  parameters:
  - description: "the semanticSettings value to set."
    name: "semanticSettings"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SemanticSettings?alt=com.azure.search.documents.indexes.models.SemanticSettings&text=SemanticSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchIndex setSemanticSettings(SemanticSettings semanticSettings)"
  desc: "Set the semanticSettings property: Defines parameters for a search index that influence semantic capabilities."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setSimilarity(com.azure.search.documents.indexes.models.SimilarityAlgorithm)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setSimilarity(SimilarityAlgorithm similarity)"
  name: "setSimilarity(SimilarityAlgorithm similarity)"
  nameWithType: "SearchIndex.setSimilarity(SimilarityAlgorithm similarity)"
  summary: "Set the similarity property: The type of similarity algorithm to be used when scoring and ranking the documents matching a search query."
  parameters:
  - description: "the similarity value to set."
    name: "similarity"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SimilarityAlgorithm?alt=com.azure.search.documents.indexes.models.SimilarityAlgorithm&text=SimilarityAlgorithm\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchIndex setSimilarity(SimilarityAlgorithm similarity)"
  desc: "Set the similarity property: The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(com.azure.search.documents.indexes.models.SearchSuggester...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(SearchSuggester[] suggesters)"
  name: "setSuggesters(SearchSuggester[] suggesters)"
  nameWithType: "SearchIndex.setSuggesters(SearchSuggester[] suggesters)"
  summary: "Set the suggesters property: The suggesters for the index."
  parameters:
  - description: "the suggesters value to set."
    name: "suggesters"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchSuggester?alt=com.azure.search.documents.indexes.models.SearchSuggester&text=SearchSuggester\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setSuggesters(SearchSuggester[] suggesters)"
  desc: "Set the suggesters property: The suggesters for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(java.util.List<com.azure.search.documents.indexes.models.SearchSuggester>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setSuggesters(List<SearchSuggester> suggesters)"
  name: "setSuggesters(List<SearchSuggester> suggesters)"
  nameWithType: "SearchIndex.setSuggesters(List<SearchSuggester> suggesters)"
  summary: "Set the suggesters property: The suggesters for the index."
  parameters:
  - description: "the suggesters value to set."
    name: "suggesters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchSuggester?alt=com.azure.search.documents.indexes.models.SearchSuggester&text=SearchSuggester\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setSuggesters(List<SearchSuggester> suggesters)"
  desc: "Set the suggesters property: The suggesters for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(com.azure.search.documents.indexes.models.TokenFilter...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(TokenFilter[] tokenFilters)"
  name: "setTokenFilters(TokenFilter[] tokenFilters)"
  nameWithType: "SearchIndex.setTokenFilters(TokenFilter[] tokenFilters)"
  summary: "Set the token<wbr>Filters property: The token filters for the index."
  parameters:
  - description: "the tokenFilters value to set."
    name: "tokenFilters"
    type: "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?alt=com.azure.search.documents.indexes.models.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setTokenFilters(TokenFilter[] tokenFilters)"
  desc: "Set the tokenFilters property: The token filters for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(java.util.List<com.azure.search.documents.indexes.models.TokenFilter>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setTokenFilters(List<TokenFilter> tokenFilters)"
  name: "setTokenFilters(List<TokenFilter> tokenFilters)"
  nameWithType: "SearchIndex.setTokenFilters(List<TokenFilter> tokenFilters)"
  summary: "Set the token<wbr>Filters property: The token filters for the index."
  parameters:
  - description: "the tokenFilters value to set."
    name: "tokenFilters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?alt=com.azure.search.documents.indexes.models.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setTokenFilters(List<TokenFilter> tokenFilters)"
  desc: "Set the tokenFilters property: The token filters for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(com.azure.search.documents.indexes.models.LexicalTokenizer...)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(LexicalTokenizer[] tokenizers)"
  name: "setTokenizers(LexicalTokenizer[] tokenizers)"
  nameWithType: "SearchIndex.setTokenizers(LexicalTokenizer[] tokenizers)"
  summary: "Set the tokenizers property: The tokenizers for the index."
  parameters:
  - description: "the tokenizers value to set."
    name: "tokenizers"
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?alt=com.azure.search.documents.indexes.models.LexicalTokenizer&text=LexicalTokenizer\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SearchIndex setTokenizers(LexicalTokenizer[] tokenizers)"
  desc: "Set the tokenizers property: The tokenizers for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(java.util.List<com.azure.search.documents.indexes.models.LexicalTokenizer>)"
  fullName: "com.azure.search.documents.indexes.models.SearchIndex.setTokenizers(List<LexicalTokenizer> tokenizers)"
  name: "setTokenizers(List<LexicalTokenizer> tokenizers)"
  nameWithType: "SearchIndex.setTokenizers(List<LexicalTokenizer> tokenizers)"
  summary: "Set the tokenizers property: The tokenizers for the index."
  parameters:
  - description: "the tokenizers value to set."
    name: "tokenizers"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizer?alt=com.azure.search.documents.indexes.models.LexicalTokenizer&text=LexicalTokenizer\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SearchIndex setTokenizers(List<LexicalTokenizer> tokenizers)"
  desc: "Set the tokenizers property: The tokenizers for the index."
  returns:
    description: "the SearchIndex object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndex?alt=com.azure.search.documents.indexes.models.SearchIndex&text=SearchIndex\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a search index definition, which describes the fields and search behavior of an index."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.5.0-beta.12
