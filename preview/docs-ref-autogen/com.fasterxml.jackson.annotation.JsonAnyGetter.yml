### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonAnyGetter"
fullName: "com.fasterxml.jackson.annotation.JsonAnyGetter"
name: "JsonAnyGetter"
nameWithType: "JsonAnyGetter"
summary: "Marker annotation that can be used to define a non-static, no-argument method to be an \"any getter\"; accessor for getting a set of key/value pairs, to be serialized as part of containing POJO (similar to unwrapping) along with regular property values it has. This typically serves as a counterpart to \"any setter\" mutators (see <xref uid=\"com.fasterxml.jackson.annotation.JsonAnySetter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonAnySetter\"></xref>). Note that the return type of annotated methods **must** be <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref>).\n\nAs with <xref uid=\"com.fasterxml.jackson.annotation.JsonAnySetter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonAnySetter\"></xref>, only one property should be annotated with this annotation; if multiple methods are annotated, an exception may be thrown."
syntax: "public interface JsonAnyGetter implements Annotation"
methods:
- "com.fasterxml.jackson.annotation.JsonAnyGetter.enabled()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
