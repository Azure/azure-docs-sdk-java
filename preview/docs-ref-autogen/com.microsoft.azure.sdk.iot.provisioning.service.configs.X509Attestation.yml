### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation"
name: "X509Attestation"
nameWithType: "X509Attestation"
summary: "Representation of a single Device Provisioning Service X509 Attestation.\n\nThe provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism. To use DICE, user must provide the X509 certificate. This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Attestation\"></xref>.\n\nAn X509 attestation can contains one of the 3 types of certificate:\n\n**Client or Alias certificate:**\n\nCalled on this class as clientCertificates, this certificate can authenticate a single device.\n\n**Signing or Root certificate:**\n\nCalled on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices.\n\n**CA Reference:**\n\nCalled on this class as X509CAReferences, this is a CA reference for a rootCertificate that can create multiple Client certificates to authenticate multiple devices.\n\nThe provisioning service allows user to create <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref>. For all operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IndividualEnrollment\"></xref> with **DICE**, user must provide a **clientCertificates**, and for operations over <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnrollmentGroup\"></xref>, user must provide a **rootCertificates** or a **X509CAReferences**.\n\nFor each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the primary is mandatory, the secondary is optional.\n\nThe provisioning service will process the provided certificates, but will never return it back. Instead of it, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getPrimaryX509CertificateInfo()\"></xref> and <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getSecondaryX509CertificateInfo()\"></xref> will return the certificate information for the certificates."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class X509Attestation extends Attestation"
constructors:
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.X509Attestation(com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation)"
methods:
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromCAReferences(java.lang.String)"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromCAReferences(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromClientCertificates(java.lang.String)"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromClientCertificates(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates(java.lang.String)"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates(java.lang.String,java.lang.String)"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getCAReferences()"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getCAReferencesFinal()"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getClientCertificates()"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getClientCertificatesFinal()"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getRootCertificates()"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getRootCertificatesFinal()"
- "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service.configs"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
