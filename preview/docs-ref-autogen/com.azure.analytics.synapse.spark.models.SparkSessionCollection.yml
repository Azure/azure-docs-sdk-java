### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection"
fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection"
name: "SparkSessionCollection"
nameWithType: "SparkSessionCollection"
summary: "The Spark<wbr>Session<wbr>Collection model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkSessionCollection"
constructors:
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.SparkSessionCollection()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.SparkSessionCollection()"
  name: "SparkSessionCollection()"
  nameWithType: "SparkSessionCollection.SparkSessionCollection()"
  syntax: "public SparkSessionCollection()"
methods:
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.getFrom()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.getFrom()"
  name: "getFrom()"
  nameWithType: "SparkSessionCollection.getFrom()"
  summary: "Get the from property: The from property."
  syntax: "public int getFrom()"
  desc: "Get the from property: The from property."
  returns:
    description: "the from value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.getSessions()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.getSessions()"
  name: "getSessions()"
  nameWithType: "SparkSessionCollection.getSessions()"
  summary: "Get the sessions property: The sessions property."
  syntax: "public List<SparkSession> getSessions()"
  desc: "Get the sessions property: The sessions property."
  returns:
    description: "the sessions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.getTotal()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.getTotal()"
  name: "getTotal()"
  nameWithType: "SparkSessionCollection.getTotal()"
  summary: "Get the total property: The total property."
  syntax: "public int getTotal()"
  desc: "Get the total property: The total property."
  returns:
    description: "the total value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.setFrom(int)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.setFrom(int from)"
  name: "setFrom(int from)"
  nameWithType: "SparkSessionCollection.setFrom(int from)"
  summary: "Set the from property: The from property."
  parameters:
  - description: "the from value to set."
    name: "from"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionCollection setFrom(int from)"
  desc: "Set the from property: The from property."
  returns:
    description: "the SparkSessionCollection object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionCollection?alt=com.azure.analytics.synapse.spark.models.SparkSessionCollection&text=SparkSessionCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.setSessions(java.util.List<com.azure.analytics.synapse.spark.models.SparkSession>)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.setSessions(List<SparkSession> sessions)"
  name: "setSessions(List<SparkSession> sessions)"
  nameWithType: "SparkSessionCollection.setSessions(List<SparkSession> sessions)"
  summary: "Set the sessions property: The sessions property."
  parameters:
  - description: "the sessions value to set."
    name: "sessions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkSession?alt=com.azure.analytics.synapse.spark.models.SparkSession&text=SparkSession\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkSessionCollection setSessions(List<SparkSession> sessions)"
  desc: "Set the sessions property: The sessions property."
  returns:
    description: "the SparkSessionCollection object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionCollection?alt=com.azure.analytics.synapse.spark.models.SparkSessionCollection&text=SparkSessionCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.setTotal(int)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionCollection.setTotal(int total)"
  name: "setTotal(int total)"
  nameWithType: "SparkSessionCollection.setTotal(int total)"
  summary: "Set the total property: The total property."
  parameters:
  - description: "the total value to set."
    name: "total"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionCollection setTotal(int total)"
  desc: "Set the total property: The total property."
  returns:
    description: "the SparkSessionCollection object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionCollection?alt=com.azure.analytics.synapse.spark.models.SparkSessionCollection&text=SparkSessionCollection\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SparkSessionCollection model."
metadata: {}
package: "com.azure.analytics.synapse.spark.models"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
