### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter"
fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter"
name: "EventSubscriptionFilter"
nameWithType: "EventSubscriptionFilter"
summary: "Filter for the Event Subscription."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EventSubscriptionFilter"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.EventSubscriptionFilter()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.EventSubscriptionFilter()"
  name: "EventSubscriptionFilter()"
  nameWithType: "EventSubscriptionFilter.EventSubscriptionFilter()"
  syntax: "public EventSubscriptionFilter()"
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.advancedFilters()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.advancedFilters()"
  name: "advancedFilters()"
  nameWithType: "EventSubscriptionFilter.advancedFilters()"
  summary: "Get the advanced<wbr>Filters property: An array of advanced filters that are used for filtering event subscriptions."
  syntax: "public List<AdvancedFilter> advancedFilters()"
  desc: "Get the advancedFilters property: An array of advanced filters that are used for filtering event subscriptions."
  returns:
    description: "the advancedFilters value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.AdvancedFilter?alt=com.azure.resourcemanager.eventgrid.models.AdvancedFilter&text=AdvancedFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.enableAdvancedFilteringOnArrays()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.enableAdvancedFilteringOnArrays()"
  name: "enableAdvancedFilteringOnArrays()"
  nameWithType: "EventSubscriptionFilter.enableAdvancedFilteringOnArrays()"
  summary: "Get the enable<wbr>Advanced<wbr>Filtering<wbr>OnArrays property: Allows advanced filters to be evaluated against an array of values instead of expecting a singular value."
  syntax: "public Boolean enableAdvancedFilteringOnArrays()"
  desc: "Get the enableAdvancedFilteringOnArrays property: Allows advanced filters to be evaluated against an array of values instead of expecting a singular value."
  returns:
    description: "the enableAdvancedFilteringOnArrays value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.includedEventTypes()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.includedEventTypes()"
  name: "includedEventTypes()"
  nameWithType: "EventSubscriptionFilter.includedEventTypes()"
  summary: "Get the included<wbr>Event<wbr>Types property: A list of applicable event types that need to be part of the event subscription."
  syntax: "public List<String> includedEventTypes()"
  desc: "Get the includedEventTypes property: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null."
  returns:
    description: "the includedEventTypes value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.isSubjectCaseSensitive()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.isSubjectCaseSensitive()"
  name: "isSubjectCaseSensitive()"
  nameWithType: "EventSubscriptionFilter.isSubjectCaseSensitive()"
  summary: "Get the is<wbr>Subject<wbr>Case<wbr>Sensitive property: Specifies if the Subject<wbr>Begins<wbr>With and Subject<wbr>Ends<wbr>With properties of the filter should be compared in a case sensitive manner."
  syntax: "public Boolean isSubjectCaseSensitive()"
  desc: "Get the isSubjectCaseSensitive property: Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter should be compared in a case sensitive manner."
  returns:
    description: "the isSubjectCaseSensitive value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.subjectBeginsWith()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.subjectBeginsWith()"
  name: "subjectBeginsWith()"
  nameWithType: "EventSubscriptionFilter.subjectBeginsWith()"
  summary: "Get the subject<wbr>Begins<wbr>With property: An optional string to filter events for an event subscription based on a resource path prefix."
  syntax: "public String subjectBeginsWith()"
  desc: "Get the subjectBeginsWith property: An optional string to filter events for an event subscription based on a resource path prefix. The format of this depends on the publisher of the events. Wildcard characters are not supported in this path."
  returns:
    description: "the subjectBeginsWith value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.subjectEndsWith()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.subjectEndsWith()"
  name: "subjectEndsWith()"
  nameWithType: "EventSubscriptionFilter.subjectEndsWith()"
  summary: "Get the subject<wbr>Ends<wbr>With property: An optional string to filter events for an event subscription based on a resource path suffix."
  syntax: "public String subjectEndsWith()"
  desc: "Get the subjectEndsWith property: An optional string to filter events for an event subscription based on a resource path suffix. Wildcard characters are not supported in this path."
  returns:
    description: "the subjectEndsWith value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.validate()"
  name: "validate()"
  nameWithType: "EventSubscriptionFilter.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withAdvancedFilters(java.util.List<com.azure.resourcemanager.eventgrid.models.AdvancedFilter>)"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withAdvancedFilters(List<AdvancedFilter> advancedFilters)"
  name: "withAdvancedFilters(List<AdvancedFilter> advancedFilters)"
  nameWithType: "EventSubscriptionFilter.withAdvancedFilters(List<AdvancedFilter> advancedFilters)"
  summary: "Set the advanced<wbr>Filters property: An array of advanced filters that are used for filtering event subscriptions."
  parameters:
  - description: "the advancedFilters value to set."
    name: "advancedFilters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.AdvancedFilter?alt=com.azure.resourcemanager.eventgrid.models.AdvancedFilter&text=AdvancedFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventSubscriptionFilter withAdvancedFilters(List<AdvancedFilter> advancedFilters)"
  desc: "Set the advancedFilters property: An array of advanced filters that are used for filtering event subscriptions."
  returns:
    description: "the EventSubscriptionFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter&text=EventSubscriptionFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withEnableAdvancedFilteringOnArrays(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withEnableAdvancedFilteringOnArrays(Boolean enableAdvancedFilteringOnArrays)"
  name: "withEnableAdvancedFilteringOnArrays(Boolean enableAdvancedFilteringOnArrays)"
  nameWithType: "EventSubscriptionFilter.withEnableAdvancedFilteringOnArrays(Boolean enableAdvancedFilteringOnArrays)"
  summary: "Set the enable<wbr>Advanced<wbr>Filtering<wbr>OnArrays property: Allows advanced filters to be evaluated against an array of values instead of expecting a singular value."
  parameters:
  - description: "the enableAdvancedFilteringOnArrays value to set."
    name: "enableAdvancedFilteringOnArrays"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventSubscriptionFilter withEnableAdvancedFilteringOnArrays(Boolean enableAdvancedFilteringOnArrays)"
  desc: "Set the enableAdvancedFilteringOnArrays property: Allows advanced filters to be evaluated against an array of values instead of expecting a singular value."
  returns:
    description: "the EventSubscriptionFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter&text=EventSubscriptionFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withIncludedEventTypes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withIncludedEventTypes(List<String> includedEventTypes)"
  name: "withIncludedEventTypes(List<String> includedEventTypes)"
  nameWithType: "EventSubscriptionFilter.withIncludedEventTypes(List<String> includedEventTypes)"
  summary: "Set the included<wbr>Event<wbr>Types property: A list of applicable event types that need to be part of the event subscription."
  parameters:
  - description: "the includedEventTypes value to set."
    name: "includedEventTypes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventSubscriptionFilter withIncludedEventTypes(List<String> includedEventTypes)"
  desc: "Set the includedEventTypes property: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null."
  returns:
    description: "the EventSubscriptionFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter&text=EventSubscriptionFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withIsSubjectCaseSensitive(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withIsSubjectCaseSensitive(Boolean isSubjectCaseSensitive)"
  name: "withIsSubjectCaseSensitive(Boolean isSubjectCaseSensitive)"
  nameWithType: "EventSubscriptionFilter.withIsSubjectCaseSensitive(Boolean isSubjectCaseSensitive)"
  summary: "Set the is<wbr>Subject<wbr>Case<wbr>Sensitive property: Specifies if the Subject<wbr>Begins<wbr>With and Subject<wbr>Ends<wbr>With properties of the filter should be compared in a case sensitive manner."
  parameters:
  - description: "the isSubjectCaseSensitive value to set."
    name: "isSubjectCaseSensitive"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventSubscriptionFilter withIsSubjectCaseSensitive(Boolean isSubjectCaseSensitive)"
  desc: "Set the isSubjectCaseSensitive property: Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter should be compared in a case sensitive manner."
  returns:
    description: "the EventSubscriptionFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter&text=EventSubscriptionFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withSubjectBeginsWith(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withSubjectBeginsWith(String subjectBeginsWith)"
  name: "withSubjectBeginsWith(String subjectBeginsWith)"
  nameWithType: "EventSubscriptionFilter.withSubjectBeginsWith(String subjectBeginsWith)"
  summary: "Set the subject<wbr>Begins<wbr>With property: An optional string to filter events for an event subscription based on a resource path prefix."
  parameters:
  - description: "the subjectBeginsWith value to set."
    name: "subjectBeginsWith"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventSubscriptionFilter withSubjectBeginsWith(String subjectBeginsWith)"
  desc: "Set the subjectBeginsWith property: An optional string to filter events for an event subscription based on a resource path prefix. The format of this depends on the publisher of the events. Wildcard characters are not supported in this path."
  returns:
    description: "the EventSubscriptionFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter&text=EventSubscriptionFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withSubjectEndsWith(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter.withSubjectEndsWith(String subjectEndsWith)"
  name: "withSubjectEndsWith(String subjectEndsWith)"
  nameWithType: "EventSubscriptionFilter.withSubjectEndsWith(String subjectEndsWith)"
  summary: "Set the subject<wbr>Ends<wbr>With property: An optional string to filter events for an event subscription based on a resource path suffix."
  parameters:
  - description: "the subjectEndsWith value to set."
    name: "subjectEndsWith"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventSubscriptionFilter withSubjectEndsWith(String subjectEndsWith)"
  desc: "Set the subjectEndsWith property: An optional string to filter events for an event subscription based on a resource path suffix. Wildcard characters are not supported in this path."
  returns:
    description: "the EventSubscriptionFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter?alt=com.azure.resourcemanager.eventgrid.models.EventSubscriptionFilter&text=EventSubscriptionFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Filter for the Event Subscription."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
