### YamlMime:ManagedReference
items:
- uid: org.slf4j.MDC
  id: MDC
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j
  children:
  - org.slf4j.MDC.MDCCloseable
  - org.slf4j.MDC.clear()
  - org.slf4j.MDC.get(java.lang.String)
  - org.slf4j.MDC.getCopyOfContextMap()
  - org.slf4j.MDC.getMDCAdapter()
  - org.slf4j.MDC.put(java.lang.String,java.lang.String)
  - org.slf4j.MDC.putCloseable(java.lang.String,java.lang.String)
  - org.slf4j.MDC.remove(java.lang.String)
  - org.slf4j.MDC.setContextMap(java.util.Map<java.lang.String,java.lang.String>)
  langs:
  - java
  name: MDC
  nameWithType: MDC
  fullName: org.slf4j.MDC
  type: Class
  package: org.slf4j
  summary: >-
    This class hides and serves as a substitute for the underlying logging system's MDC implementation.


    If the underlying logging system offers MDC functionality, then SLF4J's MDC, i.e. this class, will delegate to the underlying system's MDC. Note that at this time, only two logging systems, namely log4j and logback, offer MDC functionality. For java.util.logging which does not support MDC, <xref uid="org.slf4j.helpers.BasicMDCAdapter" data-throw-if-not-resolved="false">BasicMDCAdapter</xref> will be used. For other systems, i.e. slf4j-simple and slf4j-nop, <xref uid="org.slf4j.helpers.NOPMDCAdapter" data-throw-if-not-resolved="false">NOPMDCAdapter</xref> will be used.


    Thus, as a SLF4J user, you can take advantage of MDC in the presence of log4j, logback, or java.util.logging, but without forcing these systems as dependencies upon your users.


    For more information on MDC please see the [chapter on MDC][] in the logback manual.


    Please note that all methods in this class are static.



    [chapter on MDC]: http://logback.qos.ch/manual/mdc.html
  syntax:
    content: public class MDC
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.slf4j.MDC.MDC()
  id: MDC()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: MDC()
  nameWithType: MDC.MDC()
  fullName: org.slf4j.MDC.MDC()
  overload: org.slf4j.MDC.MDC*
  type: Constructor
  package: org.slf4j
  syntax:
    content: private MDC()
- uid: org.slf4j.MDC.clear()
  id: clear()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: clear()
  nameWithType: MDC.clear()
  fullName: org.slf4j.MDC.clear()
  overload: org.slf4j.MDC.clear*
  type: Method
  package: org.slf4j
  summary: Clear all entries in the MDC of the underlying implementation.
  syntax:
    content: public static void clear()
- uid: org.slf4j.MDC.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: get(String key)
  nameWithType: MDC.get(String key)
  fullName: org.slf4j.MDC.get(String key)
  overload: org.slf4j.MDC.get*
  type: Method
  package: org.slf4j
  summary: >-
    Get the diagnostic context identified by the `key` parameter. The `key` parameter cannot be null.


    This method delegates all work to the MDC of the underlying logging system.
  syntax:
    content: public static String get(String key)
    parameters:
    - id: key
      type: java.lang.String
    return:
      type: java.lang.String
      description: the string value identified by the <code>key</code> parameter.
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: in case the "key" parameter is null
- uid: org.slf4j.MDC.getCopyOfContextMap()
  id: getCopyOfContextMap()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: getCopyOfContextMap()
  nameWithType: MDC.getCopyOfContextMap()
  fullName: org.slf4j.MDC.getCopyOfContextMap()
  overload: org.slf4j.MDC.getCopyOfContextMap*
  type: Method
  package: org.slf4j
  summary: Return a copy of the current thread's context map, with keys and values of type String. Returned value may be null.
  syntax:
    content: public static Map<String,String> getCopyOfContextMap()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: A copy of the current thread's context map. May be null.
- uid: org.slf4j.MDC.getMDCAdapter()
  id: getMDCAdapter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: getMDCAdapter()
  nameWithType: MDC.getMDCAdapter()
  fullName: org.slf4j.MDC.getMDCAdapter()
  overload: org.slf4j.MDC.getMDCAdapter*
  type: Method
  package: org.slf4j
  summary: Returns the MDCAdapter instance currently in use.
  syntax:
    content: public static MDCAdapter getMDCAdapter()
    return:
      type: org.slf4j.spi.MDCAdapter
      description: the MDcAdapter instance currently in use.
- uid: org.slf4j.MDC.put(java.lang.String,java.lang.String)
  id: put(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: put(String key, String val)
  nameWithType: MDC.put(String key, String val)
  fullName: org.slf4j.MDC.put(String key, String val)
  overload: org.slf4j.MDC.put*
  type: Method
  package: org.slf4j
  summary: >-
    Put a diagnostic context value (the `val` parameter) as identified with the `key` parameter into the current thread's diagnostic context map. The `key` parameter cannot be null. The `val` parameter can be null only if the underlying implementation supports it.


    This method delegates all work to the MDC of the underlying logging system.
  syntax:
    content: public static void put(String key, String val)
    parameters:
    - id: key
      type: java.lang.String
      description: non-null key
    - id: val
      type: java.lang.String
      description: value to put in the map
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: in case the "key" parameter is null
- uid: org.slf4j.MDC.putCloseable(java.lang.String,java.lang.String)
  id: putCloseable(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: putCloseable(String key, String val)
  nameWithType: MDC.putCloseable(String key, String val)
  fullName: org.slf4j.MDC.putCloseable(String key, String val)
  overload: org.slf4j.MDC.putCloseable*
  type: Method
  package: org.slf4j
  summary: >-
    Put a diagnostic context value (the `val` parameter) as identified with the `key` parameter into the current thread's diagnostic context map. The `key` parameter cannot be null. The `val` parameter can be null only if the underlying implementation supports it.


    This method delegates all work to the MDC of the underlying logging system.


    This method return a `Closeable` object who can remove `key` when `close` is called.


    Useful with Java 7 for example : `try(MDC.MDCCloseable closeable = MDC.putCloseable(key, value)) { .... }`
  syntax:
    content: public static MDC.MDCCloseable putCloseable(String key, String val)
    parameters:
    - id: key
      type: java.lang.String
      description: non-null key
    - id: val
      type: java.lang.String
      description: value to put in the map
    return:
      type: org.slf4j.MDC.MDCCloseable
      description: >-
        a <code>Closeable</code> who can remove <code>key</code> when <code>close</code>
         is called.
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: in case the "key" parameter is null
- uid: org.slf4j.MDC.remove(java.lang.String)
  id: remove(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: remove(String key)
  nameWithType: MDC.remove(String key)
  fullName: org.slf4j.MDC.remove(String key)
  overload: org.slf4j.MDC.remove*
  type: Method
  package: org.slf4j
  summary: Remove the diagnostic context identified by the `key` parameter using the underlying system's MDC implementation. The `key` parameter cannot be null. This method does nothing if there is no previous value associated with `key`.
  syntax:
    content: public static void remove(String key)
    parameters:
    - id: key
      type: java.lang.String
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: in case the "key" parameter is null
- uid: org.slf4j.MDC.setContextMap(java.util.Map<java.lang.String,java.lang.String>)
  id: setContextMap(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.MDC
  langs:
  - java
  name: setContextMap(Map<String,String> contextMap)
  nameWithType: MDC.setContextMap(Map<String,String> contextMap)
  fullName: org.slf4j.MDC.setContextMap(Map<String,String> contextMap)
  overload: org.slf4j.MDC.setContextMap*
  type: Method
  package: org.slf4j
  summary: Set the current thread's context map by first clearing any existing map and then copying the map passed as parameter. The context map passed as parameter must only contain keys and values of type String.
  syntax:
    content: public static void setContextMap(Map<String,String> contextMap)
    parameters:
    - id: contextMap
      type: java.util.Map<java.lang.String,java.lang.String>
      description: must contain only keys and values of type String
references:
- uid: org.slf4j.MDC.MDC*
  name: MDC
  nameWithType: MDC.MDC
  fullName: org.slf4j.MDC.MDC
  package: org.slf4j
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.slf4j.MDC.put*
  name: put
  nameWithType: MDC.put
  fullName: org.slf4j.MDC.put
  package: org.slf4j
- uid: org.slf4j.MDC.MDCCloseable
  name: MDC.MDCCloseable
  nameWithType: MDC.MDCCloseable
  fullName: org.slf4j.MDC.MDCCloseable
- uid: org.slf4j.MDC.putCloseable*
  name: putCloseable
  nameWithType: MDC.putCloseable
  fullName: org.slf4j.MDC.putCloseable
  package: org.slf4j
- uid: org.slf4j.MDC.get*
  name: get
  nameWithType: MDC.get
  fullName: org.slf4j.MDC.get
  package: org.slf4j
- uid: org.slf4j.MDC.remove*
  name: remove
  nameWithType: MDC.remove
  fullName: org.slf4j.MDC.remove
  package: org.slf4j
- uid: org.slf4j.MDC.clear*
  name: clear
  nameWithType: MDC.clear
  fullName: org.slf4j.MDC.clear
  package: org.slf4j
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: org.slf4j.MDC.getCopyOfContextMap*
  name: getCopyOfContextMap
  nameWithType: MDC.getCopyOfContextMap
  fullName: org.slf4j.MDC.getCopyOfContextMap
  package: org.slf4j
- uid: org.slf4j.MDC.setContextMap*
  name: setContextMap
  nameWithType: MDC.setContextMap
  fullName: org.slf4j.MDC.setContextMap
  package: org.slf4j
- uid: org.slf4j.spi.MDCAdapter
  name: MDCAdapter
  nameWithType: MDCAdapter
  fullName: org.slf4j.spi.MDCAdapter
- uid: org.slf4j.MDC.getMDCAdapter*
  name: getMDCAdapter
  nameWithType: MDC.getMDCAdapter
  fullName: org.slf4j.MDC.getMDCAdapter
  package: org.slf4j
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
