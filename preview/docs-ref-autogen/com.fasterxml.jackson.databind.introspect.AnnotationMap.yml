### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap
  id: AnnotationMap
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect
  children:
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.<A>get(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap()
  - com.fasterxml.jackson.databind.introspect.AnnotationMap._add(java.lang.annotation.Annotation)
  - com.fasterxml.jackson.databind.introspect.AnnotationMap._annotations
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.add(java.lang.annotation.Annotation)
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.addIfNotPresent(java.lang.annotation.Annotation)
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.annotations()
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.has(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.hasOneOf(java.lang.Class<? extends java.lang.annotation.Annotation>[])
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap)
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.of(java.lang.Class<?>,java.lang.annotation.Annotation)
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.size()
  - com.fasterxml.jackson.databind.introspect.AnnotationMap.toString()
  langs:
  - java
  name: AnnotationMap
  nameWithType: AnnotationMap
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap
  type: Class
  package: com.fasterxml.jackson.databind.introspect
  summary: Simple helper class used to keep track of collection of Jackson Annotations associated with annotatable things (methods, constructors, classes). Note that only Jackson-owned annotations are tracked (for now?).
  syntax:
    content: public final class AnnotationMap implements Annotations
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.util.Annotations
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.<A>get(java.lang.Class<A>)
  id: <A>get(java.lang.Class<A>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: <A>get(Class<A> cls)
  nameWithType: AnnotationMap.<A>get(Class<A> cls)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.<A>get(Class<A> cls)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.get*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Main access method used to find value for given annotation.
  syntax:
    content: public A <A>get(Class<A> cls)
    parameters:
    - id: cls
      type: java.lang.Class<A>
    return:
      type: A
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap()
  id: AnnotationMap()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: AnnotationMap()
  nameWithType: AnnotationMap.AnnotationMap()
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap()
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public AnnotationMap()
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap(java.util.HashMap<java.lang.Class<?>,java.lang.annotation.Annotation>)
  id: AnnotationMap(java.util.HashMap<java.lang.Class<?>,java.lang.annotation.Annotation>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: AnnotationMap(HashMap<Class<?>,Annotation> a)
  nameWithType: AnnotationMap.AnnotationMap(HashMap<Class<?>,Annotation> a)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap(HashMap<Class<?>,Annotation> a)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: " AnnotationMap(HashMap<Class<?>,Annotation> a)"
    parameters:
    - id: a
      type: java.util.HashMap<java.lang.Class<?>,java.lang.annotation.Annotation>
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap._add(java.lang.annotation.Annotation)
  id: _add(java.lang.annotation.Annotation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: _add(Annotation ann)
  nameWithType: AnnotationMap._add(Annotation ann)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap._add(Annotation ann)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap._add*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: protected final boolean _add(Annotation ann)
    parameters:
    - id: ann
      type: java.lang.annotation.Annotation
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap._annotations
  id: _annotations
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: _annotations
  nameWithType: AnnotationMap._annotations
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap._annotations
  type: Field
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: protected HashMap<Class<?>,Annotation> _annotations
    return:
      type: java.util.HashMap<java.lang.Class<?>,java.lang.annotation.Annotation>
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.add(java.lang.annotation.Annotation)
  id: add(java.lang.annotation.Annotation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: add(Annotation ann)
  nameWithType: AnnotationMap.add(Annotation ann)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.add(Annotation ann)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.add*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method called to add specified annotation in the Map.
  syntax:
    content: public boolean add(Annotation ann)
    parameters:
    - id: ann
      type: java.lang.annotation.Annotation
    return:
      type: boolean
      description: >-
        True if the addition changed the contents, that is, this map did not
           already have specified annotation
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.addIfNotPresent(java.lang.annotation.Annotation)
  id: addIfNotPresent(java.lang.annotation.Annotation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: addIfNotPresent(Annotation ann)
  nameWithType: AnnotationMap.addIfNotPresent(Annotation ann)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.addIfNotPresent(Annotation ann)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.addIfNotPresent*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Method called to add specified annotation in the Map, but only if it didn't yet exist.
  syntax:
    content: public boolean addIfNotPresent(Annotation ann)
    parameters:
    - id: ann
      type: java.lang.annotation.Annotation
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.annotations()
  id: annotations()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: annotations()
  nameWithType: AnnotationMap.annotations()
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.annotations()
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.annotations*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public Iterable<Annotation> annotations()
    return:
      type: java.lang.Iterable<java.lang.annotation.Annotation>
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.has(java.lang.Class<?>)
  id: has(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: has(Class<?> cls)
  nameWithType: AnnotationMap.has(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.has(Class<?> cls)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.has*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public boolean has(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.hasOneOf(java.lang.Class<? extends java.lang.annotation.Annotation>[])
  id: hasOneOf(java.lang.Class<? extends java.lang.annotation.Annotation>[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: hasOneOf(Class<? extends Annotation>[] annoClasses)
  nameWithType: AnnotationMap.hasOneOf(Class<? extends Annotation>[] annoClasses)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.hasOneOf(Class<? extends Annotation>[] annoClasses)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.hasOneOf*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Helper method that can be used for a "bulk" check to see if at least one of given annotation types is included within this map.
  syntax:
    content: public boolean hasOneOf(Class<? extends Annotation>[] annoClasses)
    parameters:
    - id: annoClasses
      type: java.lang.Class<? extends java.lang.annotation.Annotation>[]
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap)
  id: merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: merge(AnnotationMap primary, AnnotationMap secondary)
  nameWithType: AnnotationMap.merge(AnnotationMap primary, AnnotationMap secondary)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.merge(AnnotationMap primary, AnnotationMap secondary)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.merge*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public static AnnotationMap merge(AnnotationMap primary, AnnotationMap secondary)
    parameters:
    - id: primary
      type: com.fasterxml.jackson.databind.introspect.AnnotationMap
    - id: secondary
      type: com.fasterxml.jackson.databind.introspect.AnnotationMap
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotationMap
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.of(java.lang.Class<?>,java.lang.annotation.Annotation)
  id: of(java.lang.Class<?>,java.lang.annotation.Annotation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: of(Class<?> type, Annotation value)
  nameWithType: AnnotationMap.of(Class<?> type, Annotation value)
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.of(Class<?> type, Annotation value)
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.of*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public static AnnotationMap of(Class<?> type, Annotation value)
    parameters:
    - id: type
      type: java.lang.Class<?>
    - id: value
      type: java.lang.annotation.Annotation
    return:
      type: com.fasterxml.jackson.databind.introspect.AnnotationMap
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.size()
  id: size()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: size()
  nameWithType: AnnotationMap.size()
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.size()
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.size*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  summary: Returns number of annotation entries in this collection.
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.introspect.AnnotationMap
  langs:
  - java
  name: toString()
  nameWithType: AnnotationMap.toString()
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.toString()
  overload: com.fasterxml.jackson.databind.introspect.AnnotationMap.toString*
  type: Method
  package: com.fasterxml.jackson.databind.introspect
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap*
  name: AnnotationMap
  nameWithType: AnnotationMap.AnnotationMap
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.AnnotationMap
  package: com.fasterxml.jackson.databind.introspect
- uid: java.util.HashMap<java.lang.Class<?>,java.lang.annotation.Annotation>
  spec.java:
  - uid: java.util.HashMap
    name: HashMap
    fullName: java.util.HashMap
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.annotation.Annotation
    name: Annotation
    fullName: java.lang.annotation.Annotation
  - name: '>'
    fullName: '>'
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: java.lang.annotation.Annotation
  spec.java:
  - uid: java.lang.annotation.Annotation
    name: Annotation
    fullName: java.lang.annotation.Annotation
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.of*
  name: of
  nameWithType: AnnotationMap.of
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.of
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.Class<A>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: A
    name: A
    fullName: A
  - name: '>'
    fullName: '>'
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.get*
  name: <A>get
  nameWithType: AnnotationMap.<A>get
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.<A>get
  package: com.fasterxml.jackson.databind.introspect
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.has*
  name: has
  nameWithType: AnnotationMap.has
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.has
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.Class<? extends java.lang.annotation.Annotation>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends java.lang.annotation.Annotation'
    name: Annotation
    fullName: '? extends java.lang.annotation.Annotation'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.hasOneOf*
  name: hasOneOf
  nameWithType: AnnotationMap.hasOneOf
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.hasOneOf
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.Iterable<java.lang.annotation.Annotation>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: java.lang.annotation.Annotation
    name: Annotation
    fullName: java.lang.annotation.Annotation
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.annotations*
  name: annotations
  nameWithType: AnnotationMap.annotations
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.annotations
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.merge*
  name: merge
  nameWithType: AnnotationMap.merge
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.merge
  package: com.fasterxml.jackson.databind.introspect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.size*
  name: size
  nameWithType: AnnotationMap.size
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.size
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.addIfNotPresent*
  name: addIfNotPresent
  nameWithType: AnnotationMap.addIfNotPresent
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.addIfNotPresent
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.add*
  name: add
  nameWithType: AnnotationMap.add
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.add
  package: com.fasterxml.jackson.databind.introspect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap.toString*
  name: toString
  nameWithType: AnnotationMap.toString
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap.toString
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.introspect.AnnotationMap._add*
  name: _add
  nameWithType: AnnotationMap._add
  fullName: com.fasterxml.jackson.databind.introspect.AnnotationMap._add
  package: com.fasterxml.jackson.databind.introspect
- uid: com.fasterxml.jackson.databind.util.Annotations
  name: Annotations
  nameWithType: Annotations
  fullName: com.fasterxml.jackson.databind.util.Annotations
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: ?>,java.lang.annotation.Annotation
  name: ?>,Annotation
  nameWithType: ?>,Annotation
  fullName: ?>,java.lang.annotation.Annotation
- uid: java.util.HashMap
  name: HashMap
  nameWithType: HashMap
  fullName: java.util.HashMap
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: '? extends java.lang.annotation.Annotation>[]'
  name: '? extends Annotation>[]'
  nameWithType: '? extends Annotation>[]'
  fullName: '? extends java.lang.annotation.Annotation>[]'
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
