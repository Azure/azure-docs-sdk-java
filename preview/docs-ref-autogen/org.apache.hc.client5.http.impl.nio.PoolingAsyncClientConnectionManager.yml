### YamlMime:JavaType
uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager"
fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager"
name: "PoolingAsyncClientConnectionManager"
nameWithType: "PoolingAsyncClientConnectionManager"
summary: "`PoolingAsyncClientConnectionManager` maintains a pool of non-blocking <xref uid=\"org.apache.hc.core5.http.HttpConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"org.apache.hc.core5.http.HttpConnection\"></xref>s and is able to service connection requests from multiple execution threads. Connections are pooled on a per route basis. A request for a route which already the manager has persistent connections for available in the pool will be services by leasing a connection from the pool rather than creating a new connection.\n\n`PoolingAsyncClientConnectionManager` maintains a maximum limit of connection on a per route basis and in total. Connection limits can be adjusted using <xref uid=\"org.apache.hc.core5.pool.ConnPoolControl\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConnPoolControl\"></xref> methods.\n\nTotal time to live (TTL) set at construction time defines maximum life span of persistent connections regardless of their expiration setting. No persistent connection will be re-used past its TTL value."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PoolingAsyncClientConnectionManager implements AsyncClientConnectionManager, ConnPoolControl<HttpRoute>"
constructors:
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.client5.http.nio.AsyncClientConnectionOperator,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.client5.http.SchemePortResolver,org.apache.hc.client5.http.DnsResolver)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.nio.ManagedAsyncClientConnection>,org.apache.hc.client5.http.nio.AsyncClientConnectionOperator)"
fields:
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.DEFAULT_MAX_CONNECTIONS_PER_ROUTE"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.DEFAULT_MAX_TOTAL_CONNECTIONS"
methods:
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.close()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.close(org.apache.hc.core5.io.CloseMode)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.closeExpired()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.closeIdle(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.connect(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,org.apache.hc.core5.reactor.ConnectionInitiator,org.apache.hc.core5.util.Timeout,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.getDefaultMaxPerRoute()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.getMaxPerRoute(org.apache.hc.client5.http.HttpRoute)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.getMaxTotal()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.getRoutes()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.getStats(org.apache.hc.client5.http.HttpRoute)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.getTotalStats()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.getValidateAfterInactivity()"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.lease(java.lang.String,org.apache.hc.client5.http.HttpRoute,java.lang.Object,org.apache.hc.core5.util.Timeout,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.release(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setDefaultMaxPerRoute(int)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setMaxPerRoute(org.apache.hc.client5.http.HttpRoute,int)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setMaxTotal(int)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue)"
- "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.upgrade(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint,java.lang.Object,org.apache.hc.core5.http.protocol.HttpContext)"
type: "class"
implements:
- "<xref href=\"org.apache.hc.client5.http.nio.AsyncClientConnectionManager?alt=org.apache.hc.client5.http.nio.AsyncClientConnectionManager&text=AsyncClientConnectionManager\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.hc.core5.pool.ConnPoolControl?alt=org.apache.hc.core5.pool.ConnPoolControl&text=ConnPoolControl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.client5.http.HttpRoute?alt=org.apache.hc.client5.http.HttpRoute&text=HttpRoute\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "org.apache.hc.client5.http.impl.nio"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
