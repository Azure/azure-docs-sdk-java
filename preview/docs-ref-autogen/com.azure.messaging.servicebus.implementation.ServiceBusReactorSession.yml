### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  id: ServiceBusReactorSession
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation
  children:
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.LOCKED_UNTIL_UTC
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.SESSION_FILTER
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.ServiceBusReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,com.azure.core.amqp.implementation.TokenManagerProvider,java.time.Duration,com.azure.core.amqp.implementation.MessageSerializer,com.azure.core.amqp.AmqpRetryPolicy)
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode)
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode,java.lang.String)
  - com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider)
  langs:
  - java
  name: ServiceBusReactorSession
  nameWithType: ServiceBusReactorSession
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  type: Class
  package: com.azure.messaging.servicebus.implementation
  summary: An AMQP session for Service Bus.
  syntax:
    content: " class ServiceBusReactorSession extends ReactorSession implements ServiceBusSession"
  inheritance:
  - java.lang.Object
  - com.azure.core.amqp.implementation.ReactorSession
  implements:
  - com.azure.messaging.servicebus.implementation.ServiceBusSession
  inheritedMembers:
  - com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
  - com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[],org.apache.qpid.proton.amqp.transport.SenderSettleMode,org.apache.qpid.proton.amqp.transport.ReceiverSettleMode)
  - com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider)
  - com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
  - com.azure.core.amqp.implementation.ReactorSession.dispose()
  - com.azure.core.amqp.implementation.ReactorSession.getEndpointStates()
  - com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()
  - com.azure.core.amqp.implementation.ReactorSession.getSessionName()
  - com.azure.core.amqp.implementation.ReactorSession.isDisposed()
  - com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)
  - com.azure.core.amqp.implementation.ReactorSession.session()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.LOCKED_UNTIL_UTC
  id: LOCKED_UNTIL_UTC
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  langs:
  - java
  name: LOCKED_UNTIL_UTC
  nameWithType: ServiceBusReactorSession.LOCKED_UNTIL_UTC
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.LOCKED_UNTIL_UTC
  type: Field
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: static final Symbol LOCKED_UNTIL_UTC
    return:
      type: org.apache.qpid.proton.amqp.Symbol
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.SESSION_FILTER
  id: SESSION_FILTER
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  langs:
  - java
  name: SESSION_FILTER
  nameWithType: ServiceBusReactorSession.SESSION_FILTER
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.SESSION_FILTER
  type: Field
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: static final Symbol SESSION_FILTER
    return:
      type: org.apache.qpid.proton.amqp.Symbol
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.ServiceBusReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,com.azure.core.amqp.implementation.TokenManagerProvider,java.time.Duration,com.azure.core.amqp.implementation.MessageSerializer,com.azure.core.amqp.AmqpRetryPolicy)
  id: ServiceBusReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,com.azure.core.amqp.implementation.TokenManagerProvider,java.time.Duration,com.azure.core.amqp.implementation.MessageSerializer,com.azure.core.amqp.AmqpRetryPolicy)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  langs:
  - java
  name: ServiceBusReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer, AmqpRetryPolicy retryPolicy)
  nameWithType: ServiceBusReactorSession.ServiceBusReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer, AmqpRetryPolicy retryPolicy)
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.ServiceBusReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer, AmqpRetryPolicy retryPolicy)
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.ServiceBusReactorSession*
  type: Constructor
  package: com.azure.messaging.servicebus.implementation
  summary: Creates a new AMQP session using proton-j.
  syntax:
    content: " ServiceBusReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<ClaimsBasedSecurityNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer, AmqpRetryPolicy retryPolicy)"
    parameters:
    - id: session
      type: org.apache.qpid.proton.engine.Session
      description: Proton-j session for this AMQP session.
    - id: sessionHandler
      type: com.azure.core.amqp.implementation.handler.SessionHandler
      description: Handler for events that occur in the session.
    - id: sessionName
      type: java.lang.String
      description: Name of the session.
    - id: provider
      type: com.azure.core.amqp.implementation.ReactorProvider
      description: Provides reactor instances for messages to sent with.
    - id: handlerProvider
      type: com.azure.core.amqp.implementation.ReactorHandlerProvider
      description: Providers reactor handlers for listening to proton-j reactor events.
    - id: cbsNodeSupplier
      type: reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>
      description: Mono that returns a reference to the <xref uid="com.azure.core.amqp.ClaimsBasedSecurityNode" data-throw-if-not-resolved="false">ClaimsBasedSecurityNode</xref>.
    - id: tokenManagerProvider
      type: com.azure.core.amqp.implementation.TokenManagerProvider
      description: >-
        Provides <xref uid="" data-throw-if-not-resolved="false">TokenManager</xref> that authorizes the client when performing
             operations on the message broker.
    - id: openTimeout
      type: java.time.Duration
      description: Timeout to wait for the session operation to complete.
    - id: messageSerializer
      type: com.azure.core.amqp.implementation.MessageSerializer
    - id: retryPolicy
      type: com.azure.core.amqp.AmqpRetryPolicy
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode)
  id: createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  langs:
  - java
  name: createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode)
  nameWithType: ServiceBusReactorSession.createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode)
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode)
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public Mono<ServiceBusReceiveLink> createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode)
    parameters:
    - id: linkName
      type: java.lang.String
    - id: entityPath
      type: java.lang.String
    - id: entityType
      type: com.azure.messaging.servicebus.implementation.MessagingEntityType
    - id: timeout
      type: java.time.Duration
    - id: retry
      type: com.azure.core.amqp.AmqpRetryPolicy
    - id: receiveMode
      type: com.azure.messaging.servicebus.models.ReceiveMode
    return:
      type: reactor.core.publisher.Mono<com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink>
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode,java.lang.String)
  id: createConsumer(java.lang.String,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,com.azure.messaging.servicebus.models.ReceiveMode,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  langs:
  - java
  name: createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, String sessionId)
  nameWithType: ServiceBusReactorSession.createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, String sessionId)
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, String sessionId)
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public Mono<ServiceBusReceiveLink> createConsumer(String linkName, String entityPath, MessagingEntityType entityType, Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, String sessionId)
    parameters:
    - id: linkName
      type: java.lang.String
    - id: entityPath
      type: java.lang.String
    - id: entityType
      type: com.azure.messaging.servicebus.implementation.MessagingEntityType
    - id: timeout
      type: java.time.Duration
    - id: retry
      type: com.azure.core.amqp.AmqpRetryPolicy
    - id: receiveMode
      type: com.azure.messaging.servicebus.models.ReceiveMode
    - id: sessionId
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink>
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider)
  id: createConsumer(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession
  langs:
  - java
  name: createConsumer(String entityPath, Receiver receiver, ReceiveLinkHandler receiveLinkHandler, TokenManager tokenManager, ReactorProvider reactorProvider)
  nameWithType: ServiceBusReactorSession.createConsumer(String entityPath, Receiver receiver, ReceiveLinkHandler receiveLinkHandler, TokenManager tokenManager, ReactorProvider reactorProvider)
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer(String entityPath, Receiver receiver, ReceiveLinkHandler receiveLinkHandler, TokenManager tokenManager, ReactorProvider reactorProvider)
  overload: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: protected ReactorReceiver createConsumer(String entityPath, Receiver receiver, ReceiveLinkHandler receiveLinkHandler, TokenManager tokenManager, ReactorProvider reactorProvider)
    parameters:
    - id: entityPath
      type: java.lang.String
    - id: receiver
      type: org.apache.qpid.proton.engine.Receiver
    - id: receiveLinkHandler
      type: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
    - id: tokenManager
      type: com.azure.core.amqp.implementation.TokenManager
    - id: reactorProvider
      type: com.azure.core.amqp.implementation.ReactorProvider
    return:
      type: com.azure.core.amqp.implementation.ReactorReceiver
references:
- uid: org.apache.qpid.proton.engine.Session
  spec.java:
  - uid: org.apache.qpid.proton.engine.Session
    name: Session
    fullName: org.apache.qpid.proton.engine.Session
- uid: com.azure.core.amqp.implementation.handler.SessionHandler
  spec.java:
  - uid: com.azure.core.amqp.implementation.handler.SessionHandler
    name: SessionHandler
    fullName: com.azure.core.amqp.implementation.handler.SessionHandler
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.amqp.implementation.ReactorProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.ReactorProvider
    name: ReactorProvider
    fullName: com.azure.core.amqp.implementation.ReactorProvider
- uid: com.azure.core.amqp.implementation.ReactorHandlerProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.ReactorHandlerProvider
    name: ReactorHandlerProvider
    fullName: com.azure.core.amqp.implementation.ReactorHandlerProvider
- uid: reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.amqp.ClaimsBasedSecurityNode
    name: ClaimsBasedSecurityNode
    fullName: com.azure.core.amqp.ClaimsBasedSecurityNode
  - name: '>'
    fullName: '>'
- uid: com.azure.core.amqp.implementation.TokenManagerProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.TokenManagerProvider
    name: TokenManagerProvider
    fullName: com.azure.core.amqp.implementation.TokenManagerProvider
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.amqp.implementation.MessageSerializer
  spec.java:
  - uid: com.azure.core.amqp.implementation.MessageSerializer
    name: MessageSerializer
    fullName: com.azure.core.amqp.implementation.MessageSerializer
- uid: com.azure.core.amqp.AmqpRetryPolicy
  spec.java:
  - uid: com.azure.core.amqp.AmqpRetryPolicy
    name: AmqpRetryPolicy
    fullName: com.azure.core.amqp.AmqpRetryPolicy
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.ServiceBusReactorSession*
  name: ServiceBusReactorSession
  nameWithType: ServiceBusReactorSession.ServiceBusReactorSession
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.ServiceBusReactorSession
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.MessagingEntityType
  name: MessagingEntityType
  nameWithType: MessagingEntityType
  fullName: com.azure.messaging.servicebus.implementation.MessagingEntityType
- uid: com.azure.messaging.servicebus.models.ReceiveMode
  name: ReceiveMode
  nameWithType: ReceiveMode
  fullName: com.azure.messaging.servicebus.models.ReceiveMode
- uid: reactor.core.publisher.Mono<com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink
    name: ServiceBusReceiveLink
    fullName: com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer*
  name: createConsumer
  nameWithType: ServiceBusReactorSession.createConsumer
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReactorSession.createConsumer
  package: com.azure.messaging.servicebus.implementation
- uid: org.apache.qpid.proton.engine.Receiver
  spec.java:
  - uid: org.apache.qpid.proton.engine.Receiver
    name: Receiver
    fullName: org.apache.qpid.proton.engine.Receiver
- uid: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
  spec.java:
  - uid: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
    name: ReceiveLinkHandler
    fullName: com.azure.core.amqp.implementation.handler.ReceiveLinkHandler
- uid: com.azure.core.amqp.implementation.TokenManager
  spec.java:
  - uid: com.azure.core.amqp.implementation.TokenManager
    name: TokenManager
    fullName: com.azure.core.amqp.implementation.TokenManager
- uid: com.azure.core.amqp.implementation.ReactorReceiver
  spec.java:
  - uid: com.azure.core.amqp.implementation.ReactorReceiver
    name: ReactorReceiver
    fullName: com.azure.core.amqp.implementation.ReactorReceiver
- uid: org.apache.qpid.proton.amqp.Symbol
  spec.java:
  - uid: org.apache.qpid.proton.amqp.Symbol
    name: Symbol
    fullName: org.apache.qpid.proton.amqp.Symbol
- uid: com.azure.core.amqp.implementation.ReactorSession
  name: ReactorSession
  nameWithType: ReactorSession
  fullName: com.azure.core.amqp.implementation.ReactorSession
- uid: com.azure.messaging.servicebus.implementation.ServiceBusSession
  name: ServiceBusSession
  nameWithType: ServiceBusSession
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusSession
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.core.amqp.implementation.ReactorSession.getEndpointStates()
  name: ReactorSession.getEndpointStates()
  nameWithType: ReactorSession.getEndpointStates()
  fullName: com.azure.core.amqp.implementation.ReactorSession.getEndpointStates()
- uid: com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)
  name: ReactorSession.removeLink(String)
  nameWithType: ReactorSession.removeLink(String)
  fullName: com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
  name: ReactorSession.createConsumer(String,String,Duration,AmqpRetryPolicy)
  nameWithType: ReactorSession.createConsumer(String,String,Duration,AmqpRetryPolicy)
  fullName: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
- uid: com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
  name: ReactorSession.createProducer(String,String,Duration,AmqpRetryPolicy)
  nameWithType: ReactorSession.createProducer(String,String,Duration,AmqpRetryPolicy)
  fullName: com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()
  name: ReactorSession.getOperationTimeout()
  nameWithType: ReactorSession.getOperationTimeout()
  fullName: com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()
- uid: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider)
  name: ReactorSession.createConsumer(String,Receiver,ReceiveLinkHandler,TokenManager,ReactorProvider)
  nameWithType: ReactorSession.createConsumer(String,Receiver,ReceiveLinkHandler,TokenManager,ReactorProvider)
  fullName: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,org.apache.qpid.proton.engine.Receiver,com.azure.core.amqp.implementation.handler.ReceiveLinkHandler,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.ReactorProvider)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[],org.apache.qpid.proton.amqp.transport.SenderSettleMode,org.apache.qpid.proton.amqp.transport.ReceiverSettleMode)
  name: ReactorSession.createConsumer(String,String,Duration,AmqpRetryPolicy,Map<Symbol,Object>,Map<Symbol,Object>,Symbol[],SenderSettleMode,ReceiverSettleMode)
  nameWithType: ReactorSession.createConsumer(String,String,Duration,AmqpRetryPolicy,Map<Symbol,Object>,Map<Symbol,Object>,Symbol[],SenderSettleMode,ReceiverSettleMode)
  fullName: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[],org.apache.qpid.proton.amqp.transport.SenderSettleMode,org.apache.qpid.proton.amqp.transport.ReceiverSettleMode)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.core.amqp.implementation.ReactorSession.isDisposed()
  name: ReactorSession.isDisposed()
  nameWithType: ReactorSession.isDisposed()
  fullName: com.azure.core.amqp.implementation.ReactorSession.isDisposed()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.core.amqp.implementation.ReactorSession.session()
  name: ReactorSession.session()
  nameWithType: ReactorSession.session()
  fullName: com.azure.core.amqp.implementation.ReactorSession.session()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.core.amqp.implementation.ReactorSession.getSessionName()
  name: ReactorSession.getSessionName()
  nameWithType: ReactorSession.getSessionName()
  fullName: com.azure.core.amqp.implementation.ReactorSession.getSessionName()
- uid: com.azure.core.amqp.implementation.ReactorSession.dispose()
  name: ReactorSession.dispose()
  nameWithType: ReactorSession.dispose()
  fullName: com.azure.core.amqp.implementation.ReactorSession.dispose()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.amqp.ClaimsBasedSecurityNode
  name: ClaimsBasedSecurityNode
  nameWithType: ClaimsBasedSecurityNode
  fullName: com.azure.core.amqp.ClaimsBasedSecurityNode
- uid: com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink
  name: ServiceBusReceiveLink
  nameWithType: ServiceBusReceiveLink
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusReceiveLink
- uid: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map
  name: ReactorSession.createConsumer(String,String,Duration,AmqpRetryPolicy,Map
  nameWithType: ReactorSession.createConsumer(String,String,Duration,AmqpRetryPolicy,Map
  fullName: com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,java.util.Map
- uid: org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,java.util.Map
  name: Symbol,Object>,Map
  nameWithType: Symbol,Object>,Map
  fullName: org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,java.util.Map
- uid: org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[],org.apache.qpid.proton.amqp.transport.SenderSettleMode,org.apache.qpid.proton.amqp.transport.ReceiverSettleMode)
  name: Symbol,Object>,Symbol[],SenderSettleMode,ReceiverSettleMode)
  nameWithType: Symbol,Object>,Symbol[],SenderSettleMode,ReceiverSettleMode)
  fullName: org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[],org.apache.qpid.proton.amqp.transport.SenderSettleMode,org.apache.qpid.proton.amqp.transport.ReceiverSettleMode)
