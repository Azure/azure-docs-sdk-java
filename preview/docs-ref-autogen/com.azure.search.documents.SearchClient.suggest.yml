### YamlMime:JavaMember
uid: "com.azure.search.documents.SearchClient.suggest*"
fullName: "com.azure.search.documents.SearchClient.suggest"
name: "suggest"
nameWithType: "SearchClient.suggest"
members:
- uid: "com.azure.search.documents.SearchClient.suggest(java.lang.String,java.lang.String)"
  fullName: "com.azure.search.documents.SearchClient.suggest(String searchText, String suggesterName)"
  name: "suggest(String searchText, String suggesterName)"
  nameWithType: "SearchClient.suggest(String searchText, String suggesterName)"
  summary: "Suggests documents in the index that match the given partial query.\n\n**Code Sample**\n\nSuggest text from documents in service.\n\n```java\nSuggestPagedIterable suggestPagedIterable = searchClient.suggest(\"searchText\", \"sg\");\n for (SuggestResult result: suggestPagedIterable) {\n     SearchDocument searchDocument = result.getDocument(SearchDocument.class);\n     for (Map.Entry<String, Object> keyValuePair: searchDocument.entrySet()) {\n         System.out.printf(\"Document key %s, document value %s\", keyValuePair.getKey(), keyValuePair.getValue());\n     }\n }\n```"
  parameters:
  - description: "The search text on which to base suggestions"
    name: "searchText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the suggester as specified in the suggesters collection that's part of the index\n definition"
    name: "suggesterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SuggestPagedIterable suggest(String searchText, String suggesterName)"
  returns:
    description: "A <xref uid=\"com.azure.search.documents.util.SuggestPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedIterable\"></xref> that iterates over <xref uid=\"com.azure.search.documents.models.SuggestResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestResult\"></xref> objects and provides access to\n the <xref uid=\"com.azure.search.documents.util.SuggestPagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedResponse\"></xref> object for each page containing HTTP response and coverage information."
    type: "<xref href=\"com.azure.search.documents.util.SuggestPagedIterable?alt=com.azure.search.documents.util.SuggestPagedIterable&text=SuggestPagedIterable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.SearchClient.suggest(java.lang.String,java.lang.String,com.azure.search.documents.models.SuggestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.documents.SearchClient.suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, Context context)"
  name: "suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, Context context)"
  nameWithType: "SearchClient.suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, Context context)"
  summary: "Suggests documents in the index that match the given partial query.\n\n**Code Sample**\n\nSuggest text from documents in service with option.\n\n```java\nSuggestPagedIterable suggestPagedIterable = searchClient.suggest(\"searchText\", \"sg\",\n     new SuggestOptions().setOrderBy(\"hotelId desc\"), new Context(key1, value1));\n for (SuggestResult result: suggestPagedIterable) {\n     SearchDocument searchDocument = result.getDocument(SearchDocument.class);\n     for (Map.Entry<String, Object> keyValuePair: searchDocument.entrySet()) {\n         System.out.printf(\"Document key %s, document value %s\", keyValuePair.getKey(), keyValuePair.getValue());\n     }\n }\n```"
  parameters:
  - description: "The search text on which to base suggestions"
    name: "searchText"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the suggester as specified in the suggesters collection that's part of the index\n definition"
    name: "suggesterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters to further refine the suggestion query."
    name: "suggestOptions"
    type: "<xref href=\"com.azure.search.documents.models.SuggestOptions?alt=com.azure.search.documents.models.SuggestOptions&text=SuggestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the Http pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SuggestPagedIterable suggest(String searchText, String suggesterName, SuggestOptions suggestOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.search.documents.util.SuggestPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedIterable\"></xref> that iterates over <xref uid=\"com.azure.search.documents.models.SuggestResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestResult\"></xref> objects and provides access to\n the <xref uid=\"com.azure.search.documents.util.SuggestPagedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuggestPagedResponse\"></xref> object for each page containing HTTP response and coverage information."
    type: "<xref href=\"com.azure.search.documents.util.SuggestPagedIterable?alt=com.azure.search.documents.util.SuggestPagedIterable&text=SuggestPagedIterable\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.search.documents"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
