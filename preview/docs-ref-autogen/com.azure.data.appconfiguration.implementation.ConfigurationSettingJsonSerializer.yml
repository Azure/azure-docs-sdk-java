### YamlMime:JavaType
uid: "com.azure.data.appconfiguration.implementation.ConfigurationSettingJsonSerializer"
fullName: "com.azure.data.appconfiguration.implementation.ConfigurationSettingJsonSerializer"
name: "ConfigurationSettingJsonSerializer"
nameWithType: "ConfigurationSettingJsonSerializer"
summary: "Custom JSON serializer for <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> and its derived classes, <xref uid=\"com.azure.data.appconfiguration.models.SecretReferenceConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecretReferenceConfigurationSetting\"></xref> and <xref uid=\"com.azure.data.appconfiguration.models.FeatureFlagConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FeatureFlagConfigurationSetting\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()"
- "com.fasterxml.jackson.databind.JsonSerializer.handledType()"
- "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)"
- "com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)"
- "com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()"
- "com.fasterxml.jackson.databind.JsonSerializer.properties()"
- "com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)"
- "com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
- "com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
- "com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)"
- "com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()"
- "com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ConfigurationSettingJsonSerializer extends JsonSerializer<ConfigurationSetting>"
constructors:
- "com.azure.data.appconfiguration.implementation.ConfigurationSettingJsonSerializer.ConfigurationSettingJsonSerializer()"
methods:
- "com.azure.data.appconfiguration.implementation.ConfigurationSettingJsonSerializer.getModule()"
- "com.azure.data.appconfiguration.implementation.ConfigurationSettingJsonSerializer.serialize(com.azure.data.appconfiguration.models.ConfigurationSetting,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)"
type: "class"
metadata: {}
package: "com.azure.data.appconfiguration.implementation"
artifact: com.azure:azure-data-appconfiguration:1.2.0-beta.1
