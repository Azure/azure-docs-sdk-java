### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  id: DefaultPrettyPrinter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util
  children:
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(java.lang.String)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectFieldValueSeparatorWithSpaces
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._separators
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter._withSpaces(boolean)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance()
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withArrayIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withObjectIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(java.lang.String)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSeparators(com.fasterxml.jackson.core.util.Separators)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSpacesInObjectEntries()
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withoutSpacesInObjectEntries()
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)
  langs:
  - java
  name: DefaultPrettyPrinter
  nameWithType: DefaultPrettyPrinter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  type: Class
  package: com.fasterxml.jackson.core.util
  summary: Default <xref uid="com.fasterxml.jackson.core.PrettyPrinter" data-throw-if-not-resolved="false">PrettyPrinter</xref> implementation that uses 2-space indentation with platform-default linefeeds. Usually this class is not instantiated directly, but instead method <xref uid="com.fasterxml.jackson.core.JsonGenerator.useDefaultPrettyPrinter*" data-throw-if-not-resolved="false">JsonGenerator#useDefaultPrettyPrinter</xref> is used, which will use an instance of this class for operation.
  syntax:
    content: public class DefaultPrettyPrinter implements PrettyPrinter, Instantiatable<DefaultPrettyPrinter>, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.core.PrettyPrinter
  - com.fasterxml.jackson.core.util.Instantiatable<com.fasterxml.jackson.core.util.DefaultPrettyPrinter>
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR
  id: DEFAULT_ROOT_VALUE_SEPARATOR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: DEFAULT_ROOT_VALUE_SEPARATOR
  nameWithType: DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: 'Constant that specifies default "root-level" separator to use between root values: a single space character.'
  syntax:
    content: public static final SerializedString DEFAULT_ROOT_VALUE_SEPARATOR
    return:
      type: com.fasterxml.jackson.core.io.SerializedString
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()
  id: DefaultPrettyPrinter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: DefaultPrettyPrinter()
  nameWithType: DefaultPrettyPrinter.DefaultPrettyPrinter()
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter()
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)
  id: DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: DefaultPrettyPrinter(SerializableString rootSeparator)
  nameWithType: DefaultPrettyPrinter.DefaultPrettyPrinter(SerializableString rootSeparator)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(SerializableString rootSeparator)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  summary: Constructor that specifies separator String to use between root values; if null, no separator is printed.
  syntax:
    content: public DefaultPrettyPrinter(SerializableString rootSeparator)
    parameters:
    - id: rootSeparator
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)
  id: DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: DefaultPrettyPrinter(DefaultPrettyPrinter base)
  nameWithType: DefaultPrettyPrinter.DefaultPrettyPrinter(DefaultPrettyPrinter base)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(DefaultPrettyPrinter base)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter(DefaultPrettyPrinter base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString)
  id: DefaultPrettyPrinter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter,com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: DefaultPrettyPrinter(DefaultPrettyPrinter base, SerializableString rootSeparator)
  nameWithType: DefaultPrettyPrinter.DefaultPrettyPrinter(DefaultPrettyPrinter base, SerializableString rootSeparator)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(DefaultPrettyPrinter base, SerializableString rootSeparator)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter(DefaultPrettyPrinter base, SerializableString rootSeparator)
    parameters:
    - id: base
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
    - id: rootSeparator
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(java.lang.String)
  id: DefaultPrettyPrinter(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: DefaultPrettyPrinter(String rootSeparator)
  nameWithType: DefaultPrettyPrinter.DefaultPrettyPrinter(String rootSeparator)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(String rootSeparator)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter*
  type: Constructor
  package: com.fasterxml.jackson.core.util
  summary: >-
    Constructor that specifies separator String to use between root values; if null, no separator is printed.


    Note: simply constructs a <xref uid="com.fasterxml.jackson.core.io.SerializedString" data-throw-if-not-resolved="false">SerializedString</xref> out of parameter, calls <xref uid="com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter(com.fasterxml.jackson.core.SerializableString)" data-throw-if-not-resolved="false">#DefaultPrettyPrinter(SerializableString)</xref>
  syntax:
    content: public DefaultPrettyPrinter(String rootSeparator)
    parameters:
    - id: rootSeparator
      type: java.lang.String
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter
  id: _arrayIndenter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _arrayIndenter
  nameWithType: DefaultPrettyPrinter._arrayIndenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._arrayIndenter
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: By default, let's use only spaces to separate array values.
  syntax:
    content: protected DefaultPrettyPrinter.Indenter _arrayIndenter
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting
  id: _nesting
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _nesting
  nameWithType: DefaultPrettyPrinter._nesting
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._nesting
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: Number of open levels of nesting. Used to determine amount of indentation to use.
  syntax:
    content: protected transient int _nesting
    return:
      type: int
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectFieldValueSeparatorWithSpaces
  id: _objectFieldValueSeparatorWithSpaces
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _objectFieldValueSeparatorWithSpaces
  nameWithType: DefaultPrettyPrinter._objectFieldValueSeparatorWithSpaces
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectFieldValueSeparatorWithSpaces
  type: Field
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected String _objectFieldValueSeparatorWithSpaces
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter
  id: _objectIndenter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _objectIndenter
  nameWithType: DefaultPrettyPrinter._objectIndenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._objectIndenter
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: By default, let's use linefeed-adding indenter for separate object entries. We'll further configure indenter to use system-specific linefeeds, and 2 spaces per level (as opposed to, say, single tabs)
  syntax:
    content: protected DefaultPrettyPrinter.Indenter _objectIndenter
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator
  id: _rootSeparator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _rootSeparator
  nameWithType: DefaultPrettyPrinter._rootSeparator
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._rootSeparator
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: String printed between root-level values, if any.
  syntax:
    content: protected final SerializableString _rootSeparator
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._separators
  id: _separators
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _separators
  nameWithType: DefaultPrettyPrinter._separators
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._separators
  type: Field
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected Separators _separators
    return:
      type: com.fasterxml.jackson.core.util.Separators
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries
  id: _spacesInObjectEntries
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _spacesInObjectEntries
  nameWithType: DefaultPrettyPrinter._spacesInObjectEntries
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._spacesInObjectEntries
  type: Field
  package: com.fasterxml.jackson.core.util
  summary: By default we will add spaces around colons used to separate object fields and values. If disabled, will not use spaces around colon.
  syntax:
    content: protected boolean _spacesInObjectEntries
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._withSpaces(boolean)
  id: _withSpaces(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: _withSpaces(boolean state)
  nameWithType: DefaultPrettyPrinter._withSpaces(boolean state)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._withSpaces(boolean state)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._withSpaces*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: protected DefaultPrettyPrinter _withSpaces(boolean state)
    parameters:
    - id: state
      type: boolean
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)
  id: beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: beforeArrayValues(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.beforeArrayValues(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after array start marker has been output, and right before the first value is to be output. It is **not** called for arrays with no values.


    Default handling does not output anything, but pretty-printer is free to add any white space decoration.
  syntax:
    content: public void beforeArrayValues(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)
  id: beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: beforeObjectEntries(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.beforeObjectEntries(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after object start marker has been output, and right before the field name of the first entry is to be output. It is **not** called for objects without entries.


    Default handling does not output anything, but pretty-printer is free to add any white space decoration.
  syntax:
    content: public void beforeObjectEntries(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance()
  id: createInstance()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: createInstance()
  nameWithType: DefaultPrettyPrinter.createInstance()
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance()
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: Method called to ensure that we have a non-blueprint object to use; it is either this object (if stateless), or a newly created object with separate state.
  syntax:
    content: public DefaultPrettyPrinter createInstance()
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  id: indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: indentArraysWith(DefaultPrettyPrinter.Indenter i)
  nameWithType: DefaultPrettyPrinter.indentArraysWith(DefaultPrettyPrinter.Indenter i)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith(DefaultPrettyPrinter.Indenter i)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public void indentArraysWith(DefaultPrettyPrinter.Indenter i)
    parameters:
    - id: i
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  id: indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: indentObjectsWith(DefaultPrettyPrinter.Indenter i)
  nameWithType: DefaultPrettyPrinter.indentObjectsWith(DefaultPrettyPrinter.Indenter i)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith(DefaultPrettyPrinter.Indenter i)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public void indentObjectsWith(DefaultPrettyPrinter.Indenter i)
    parameters:
    - id: i
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withArrayIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  id: withArrayIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: withArrayIndenter(DefaultPrettyPrinter.Indenter i)
  nameWithType: DefaultPrettyPrinter.withArrayIndenter(DefaultPrettyPrinter.Indenter i)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withArrayIndenter(DefaultPrettyPrinter.Indenter i)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withArrayIndenter*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter withArrayIndenter(DefaultPrettyPrinter.Indenter i)
    parameters:
    - id: i
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withObjectIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  id: withObjectIndenter(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: withObjectIndenter(DefaultPrettyPrinter.Indenter i)
  nameWithType: DefaultPrettyPrinter.withObjectIndenter(DefaultPrettyPrinter.Indenter i)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withObjectIndenter(DefaultPrettyPrinter.Indenter i)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withObjectIndenter*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter withObjectIndenter(DefaultPrettyPrinter.Indenter i)
    parameters:
    - id: i
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(com.fasterxml.jackson.core.SerializableString)
  id: withRootSeparator(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: withRootSeparator(SerializableString rootSeparator)
  nameWithType: DefaultPrettyPrinter.withRootSeparator(SerializableString rootSeparator)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(SerializableString rootSeparator)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter withRootSeparator(SerializableString rootSeparator)
    parameters:
    - id: rootSeparator
      type: com.fasterxml.jackson.core.SerializableString
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(java.lang.String)
  id: withRootSeparator(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: withRootSeparator(String rootSeparator)
  nameWithType: DefaultPrettyPrinter.withRootSeparator(String rootSeparator)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(String rootSeparator)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter withRootSeparator(String rootSeparator)
    parameters:
    - id: rootSeparator
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSeparators(com.fasterxml.jackson.core.util.Separators)
  id: withSeparators(com.fasterxml.jackson.core.util.Separators)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: withSeparators(Separators separators)
  nameWithType: DefaultPrettyPrinter.withSeparators(Separators separators)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSeparators(Separators separators)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSeparators*
  type: Method
  package: com.fasterxml.jackson.core.util
  syntax:
    content: public DefaultPrettyPrinter withSeparators(Separators separators)
    parameters:
    - id: separators
      type: com.fasterxml.jackson.core.util.Separators
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSpacesInObjectEntries()
  id: withSpacesInObjectEntries()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: withSpacesInObjectEntries()
  nameWithType: DefaultPrettyPrinter.withSpacesInObjectEntries()
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSpacesInObjectEntries()
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSpacesInObjectEntries*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: "\"Mutant factory\" method that will return a pretty printer instance that does use spaces inside object entries; if 'this' instance already does this, it is returned; if not, a new instance will be constructed and returned."
  syntax:
    content: public DefaultPrettyPrinter withSpacesInObjectEntries()
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withoutSpacesInObjectEntries()
  id: withoutSpacesInObjectEntries()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: withoutSpacesInObjectEntries()
  nameWithType: DefaultPrettyPrinter.withoutSpacesInObjectEntries()
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withoutSpacesInObjectEntries()
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withoutSpacesInObjectEntries*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: "\"Mutant factory\" method that will return a pretty printer instance that does not use spaces inside object entries; if 'this' instance already does this, it is returned; if not, a new instance will be constructed and returned."
  syntax:
    content: public DefaultPrettyPrinter withoutSpacesInObjectEntries()
    return:
      type: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeArrayValueSeparator(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.writeArrayValueSeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an array value has been completely output, and before another value is to be output.


    Default handling (without pretty-printing) will output a single comma to separate the two. Pretty-printer is to output a comma as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeArrayValueSeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)
  id: writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeEndArray(JsonGenerator g, int nrOfValues)
  nameWithType: DefaultPrettyPrinter.writeEndArray(JsonGenerator g, int nrOfValues)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(JsonGenerator g, int nrOfValues)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an Array value has been completely output (minus closing bracket).


    Default handling (without pretty-printing) will output the closing bracket. Pretty-printer is to output a bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeEndArray(JsonGenerator g, int nrOfValues)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: nrOfValues
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)
  id: writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeEndObject(JsonGenerator g, int nrOfEntries)
  nameWithType: DefaultPrettyPrinter.writeEndObject(JsonGenerator g, int nrOfEntries)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(JsonGenerator g, int nrOfEntries)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an Object value has been completely output (minus closing curly bracket).


    Default handling (without pretty-printing) will output the closing curly bracket. Pretty-printer is to output a curly bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeEndObject(JsonGenerator g, int nrOfEntries)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: nrOfEntries
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeObjectEntrySeparator(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.writeObjectEntrySeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an object entry (field:value) has been completely output, and before another value is to be output.


    Default handling (without pretty-printing) will output a single comma to separate the two. Pretty-printer is to output a comma as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeObjectEntrySeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeObjectFieldValueSeparator(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.writeObjectFieldValueSeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after an object field has been output, but before the value is output.


    Default handling (without pretty-printing) will output a single colon to separate the two. Pretty-printer is to output a colon as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeObjectFieldValueSeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  id: writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeRootValueSeparator(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.writeRootValueSeparator(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called after a root-level value has been completely output, and before another value is to be output.


    Default handling (without pretty-printing) will output a space, to allow values to be parsed correctly. Pretty-printer is to output some other suitable and nice-looking separator (tab(s), space(s), linefeed(s) or any combination thereof).
  syntax:
    content: public void writeRootValueSeparator(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(com.fasterxml.jackson.core.JsonGenerator)
  id: writeStartArray(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeStartArray(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.writeStartArray(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called when an Array value is to be output, before any member/child values are output.


    Default handling (without pretty-printing) will output the opening bracket. Pretty-printer is to output a bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeStartArray(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(com.fasterxml.jackson.core.JsonGenerator)
  id: writeStartObject(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.util.DefaultPrettyPrinter
  langs:
  - java
  name: writeStartObject(JsonGenerator g)
  nameWithType: DefaultPrettyPrinter.writeStartObject(JsonGenerator g)
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(JsonGenerator g)
  overload: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject*
  type: Method
  package: com.fasterxml.jackson.core.util
  summary: >-
    Method called when an Object value is to be output, before any fields are output.


    Default handling (without pretty-printing) will output the opening curly bracket. Pretty-printer is to output a curly bracket as well, but can surround that with other (white-space) decoration.
  syntax:
    content: public void writeStartObject(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter*
  name: DefaultPrettyPrinter
  nameWithType: DefaultPrettyPrinter.DefaultPrettyPrinter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter
  package: com.fasterxml.jackson.core.util
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator*
  name: withRootSeparator
  nameWithType: DefaultPrettyPrinter.withRootSeparator
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
  name: DefaultPrettyPrinter.Indenter
  nameWithType: DefaultPrettyPrinter.Indenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Indenter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith*
  name: indentArraysWith
  nameWithType: DefaultPrettyPrinter.indentArraysWith
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentArraysWith
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith*
  name: indentObjectsWith
  nameWithType: DefaultPrettyPrinter.indentObjectsWith
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.indentObjectsWith
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withArrayIndenter*
  name: withArrayIndenter
  nameWithType: DefaultPrettyPrinter.withArrayIndenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withArrayIndenter
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withObjectIndenter*
  name: withObjectIndenter
  nameWithType: DefaultPrettyPrinter.withObjectIndenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withObjectIndenter
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSpacesInObjectEntries*
  name: withSpacesInObjectEntries
  nameWithType: DefaultPrettyPrinter.withSpacesInObjectEntries
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSpacesInObjectEntries
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withoutSpacesInObjectEntries*
  name: withoutSpacesInObjectEntries
  nameWithType: DefaultPrettyPrinter.withoutSpacesInObjectEntries
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withoutSpacesInObjectEntries
  package: com.fasterxml.jackson.core.util
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._withSpaces*
  name: _withSpaces
  nameWithType: DefaultPrettyPrinter._withSpaces
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter._withSpaces
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.Separators
  name: Separators
  nameWithType: Separators
  fullName: com.fasterxml.jackson.core.util.Separators
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSeparators*
  name: withSeparators
  nameWithType: DefaultPrettyPrinter.withSeparators
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSeparators
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance*
  name: createInstance
  nameWithType: DefaultPrettyPrinter.createInstance
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance
  package: com.fasterxml.jackson.core.util
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator*
  name: writeRootValueSeparator
  nameWithType: DefaultPrettyPrinter.writeRootValueSeparator
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject*
  name: writeStartObject
  nameWithType: DefaultPrettyPrinter.writeStartObject
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries*
  name: beforeObjectEntries
  nameWithType: DefaultPrettyPrinter.beforeObjectEntries
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeObjectEntries
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator*
  name: writeObjectFieldValueSeparator
  nameWithType: DefaultPrettyPrinter.writeObjectFieldValueSeparator
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectFieldValueSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator*
  name: writeObjectEntrySeparator
  nameWithType: DefaultPrettyPrinter.writeObjectEntrySeparator
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeObjectEntrySeparator
  package: com.fasterxml.jackson.core.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject*
  name: writeEndObject
  nameWithType: DefaultPrettyPrinter.writeEndObject
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray*
  name: writeStartArray
  nameWithType: DefaultPrettyPrinter.writeStartArray
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues*
  name: beforeArrayValues
  nameWithType: DefaultPrettyPrinter.beforeArrayValues
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.beforeArrayValues
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator*
  name: writeArrayValueSeparator
  nameWithType: DefaultPrettyPrinter.writeArrayValueSeparator
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeArrayValueSeparator
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray*
  name: writeEndArray
  nameWithType: DefaultPrettyPrinter.writeEndArray
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray
  package: com.fasterxml.jackson.core.util
- uid: com.fasterxml.jackson.core.io.SerializedString
  name: SerializedString
  nameWithType: SerializedString
  fullName: com.fasterxml.jackson.core.io.SerializedString
- uid: com.fasterxml.jackson.core.PrettyPrinter
  name: PrettyPrinter
  nameWithType: PrettyPrinter
  fullName: com.fasterxml.jackson.core.PrettyPrinter
- uid: com.fasterxml.jackson.core.util.Instantiatable<com.fasterxml.jackson.core.util.DefaultPrettyPrinter>
  name: Instantiatable<DefaultPrettyPrinter>
  nameWithType: Instantiatable<DefaultPrettyPrinter>
  fullName: com.fasterxml.jackson.core.util.Instantiatable<com.fasterxml.jackson.core.util.DefaultPrettyPrinter>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter
  name: DefaultPrettyPrinter.FixedSpaceIndenter
  nameWithType: DefaultPrettyPrinter.FixedSpaceIndenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.FixedSpaceIndenter
- uid: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter
  name: DefaultPrettyPrinter.NopIndenter
  nameWithType: DefaultPrettyPrinter.NopIndenter
  fullName: com.fasterxml.jackson.core.util.DefaultPrettyPrinter.NopIndenter
- uid: com.fasterxml.jackson.core.util.Instantiatable
  name: Instantiatable
  nameWithType: Instantiatable
  fullName: com.fasterxml.jackson.core.util.Instantiatable
