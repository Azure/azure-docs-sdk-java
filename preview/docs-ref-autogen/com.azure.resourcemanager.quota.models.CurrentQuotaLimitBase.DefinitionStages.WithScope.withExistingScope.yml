### YamlMime:JavaMember
uid: "com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.WithScope.withExistingScope*"
fullName: "com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.WithScope.withExistingScope"
name: "withExistingScope"
nameWithType: "CurrentQuotaLimitBase.DefinitionStages.WithScope.withExistingScope"
members:
- uid: "com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.WithScope.withExistingScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.WithScope.withExistingScope(String scope)"
  name: "withExistingScope(String scope)"
  nameWithType: "CurrentQuotaLimitBase.DefinitionStages.WithScope.withExistingScope(String scope)"
  summary: "Specifies scope."
  parameters:
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added\n     after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific\n     resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBase.DefinitionStages.WithCreate withExistingScope(String scope)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.quota.models.CurrentQuotaLimitBase.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.quota.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-quota:1.0.0-beta.2
