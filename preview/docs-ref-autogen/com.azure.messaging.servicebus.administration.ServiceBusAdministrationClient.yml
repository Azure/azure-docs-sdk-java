### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  id: ServiceBusAdministrationClient
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration
  children:
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties()
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse(com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues()
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues(com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules(java.lang.String,java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(java.lang.String)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics()
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics(com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue(com.azure.messaging.servicebus.administration.models.QueueProperties)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse(com.azure.messaging.servicebus.administration.models.QueueProperties,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription(com.azure.messaging.servicebus.administration.models.SubscriptionProperties)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse(com.azure.messaging.servicebus.administration.models.SubscriptionProperties,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic(com.azure.messaging.servicebus.administration.models.TopicProperties)
  - com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse(com.azure.messaging.servicebus.administration.models.TopicProperties,com.azure.core.util.Context)
  langs:
  - java
  name: ServiceBusAdministrationClient
  nameWithType: ServiceBusAdministrationClient
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  type: Class
  package: com.azure.messaging.servicebus.administration
  summary: A **synchronous** client for managing a Service Bus namespace.
  syntax:
    content: public final class ServiceBusAdministrationClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.ServiceBusAdministrationClient(com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient)
  id: ServiceBusAdministrationClient(com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: ServiceBusAdministrationClient(ServiceBusAdministrationAsyncClient asyncClient)
  nameWithType: ServiceBusAdministrationClient.ServiceBusAdministrationClient(ServiceBusAdministrationAsyncClient asyncClient)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.ServiceBusAdministrationClient(ServiceBusAdministrationAsyncClient asyncClient)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.ServiceBusAdministrationClient*
  type: Constructor
  package: com.azure.messaging.servicebus.administration
  summary: Creates a new instance with the given client.
  syntax:
    content: " ServiceBusAdministrationClient(ServiceBusAdministrationAsyncClient asyncClient)"
    parameters:
    - id: asyncClient
      type: com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient
      description: Asynchronous client to perform management calls through.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(java.lang.String)
  id: createQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createQueue(String queueName)
  nameWithType: ServiceBusAdministrationClient.createQueue(String queueName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(String queueName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a queue with the given name.
  syntax:
    content: public QueueProperties createQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue to create.
    return:
      type: com.azure.messaging.servicebus.administration.models.QueueProperties
      description: The created queue.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions)
  id: createQueue(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createQueue(String queueName, CreateQueueOptions queueOptions)
  nameWithType: ServiceBusAdministrationClient.createQueue(String queueName, CreateQueueOptions queueOptions)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue(String queueName, CreateQueueOptions queueOptions)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a queue with the <xref uid="com.azure.messaging.servicebus.administration.models.CreateQueueOptions" data-throw-if-not-resolved="false">CreateQueueOptions</xref>.
  syntax:
    content: public QueueProperties createQueue(String queueName, CreateQueueOptions queueOptions)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue to create.
    - id: queueOptions
      type: com.azure.messaging.servicebus.administration.models.CreateQueueOptions
      description: Information about the queue to create.
    return:
      type: com.azure.messaging.servicebus.administration.models.QueueProperties
      description: The created queue.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions,com.azure.core.util.Context)
  id: createQueueWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)
  nameWithType: ServiceBusAdministrationClient.createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a queue and returns the created queue in addition to the HTTP response.
  syntax:
    content: public Response<QueueProperties> createQueueWithResponse(String queueName, CreateQueueOptions queueOptions, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue to create.
    - id: queueOptions
      type: com.azure.messaging.servicebus.administration.models.CreateQueueOptions
      description: Information about the queue to create.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.QueueProperties>
      description: The created queue in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(java.lang.String,java.lang.String,java.lang.String)
  id: createRule(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createRule(String topicName, String subscriptionName, String ruleName)
  nameWithType: ServiceBusAdministrationClient.createRule(String topicName, String subscriptionName, String ruleName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(String topicName, String subscriptionName, String ruleName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a rule under the given topic and subscription
  syntax:
    content: public RuleProperties createRule(String topicName, String subscriptionName, String ruleName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic associated with rule.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription associated with the rule.
    - id: ruleName
      type: java.lang.String
      description: Name of the rule.
    return:
      type: com.azure.messaging.servicebus.administration.models.RuleProperties
      description: Information about the created rule.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)
  id: createRule(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)
  nameWithType: ServiceBusAdministrationClient.createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a rule with the <xref uid="com.azure.messaging.servicebus.administration.models.CreateRuleOptions" data-throw-if-not-resolved="false">CreateRuleOptions</xref>.
  syntax:
    content: public RuleProperties createRule(String topicName, String ruleName, String subscriptionName, CreateRuleOptions ruleOptions)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic associated with rule.
    - id: ruleName
      type: java.lang.String
      description: Name of the rule.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription associated with the rule.
    - id: ruleOptions
      type: com.azure.messaging.servicebus.administration.models.CreateRuleOptions
      description: Information about the rule to create.
    return:
      type: com.azure.messaging.servicebus.administration.models.RuleProperties
      description: Information about the created rule.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions,com.azure.core.util.Context)
  id: createRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)
  nameWithType: ServiceBusAdministrationClient.createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a rule and returns the created rule in addition to the HTTP response.
  syntax:
    content: public Response<RuleProperties> createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic associated with rule.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription associated with the rule.
    - id: ruleName
      type: java.lang.String
      description: Name of the rule.
    - id: ruleOptions
      type: com.azure.messaging.servicebus.administration.models.CreateRuleOptions
      description: Information about the rule to create.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.RuleProperties>
      description: The created rule in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(java.lang.String,java.lang.String)
  id: createSubscription(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createSubscription(String topicName, String subscriptionName)
  nameWithType: ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a subscription with the given topic and subscription names.
  syntax:
    content: public SubscriptionProperties createSubscription(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    return:
      type: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
      description: Information about the created subscription.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions)
  id: createSubscription(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)
  nameWithType: ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a subscription with the <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref>.
  syntax:
    content: public SubscriptionProperties createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    - id: subscriptionOptions
      type: com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions
      description: Information about the subscription to create.
    return:
      type: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
      description: Information about the created subscription.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions,com.azure.core.util.Context)
  id: createSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)
  nameWithType: ServiceBusAdministrationClient.createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a queue and returns the created queue in addition to the HTTP response.
  syntax:
    content: public Response<SubscriptionProperties> createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    - id: subscriptionOptions
      type: com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions
      description: Information about the subscription to create.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.SubscriptionProperties>
      description: The created subscription in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(java.lang.String)
  id: createTopic(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createTopic(String topicName)
  nameWithType: ServiceBusAdministrationClient.createTopic(String topicName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(String topicName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a topic with the given name.
  syntax:
    content: public TopicProperties createTopic(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic to create.
    return:
      type: com.azure.messaging.servicebus.administration.models.TopicProperties
      description: Information about the created topic.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions)
  id: createTopic(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createTopic(String topicName, CreateTopicOptions topicOptions)
  nameWithType: ServiceBusAdministrationClient.createTopic(String topicName, CreateTopicOptions topicOptions)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic(String topicName, CreateTopicOptions topicOptions)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a topic with the <xref uid="com.azure.messaging.servicebus.administration.models.CreateTopicOptions" data-throw-if-not-resolved="false">CreateTopicOptions</xref>.
  syntax:
    content: public TopicProperties createTopic(String topicName, CreateTopicOptions topicOptions)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic to create.
    - id: topicOptions
      type: com.azure.messaging.servicebus.administration.models.CreateTopicOptions
      description: Information about the topic to create.
    return:
      type: com.azure.messaging.servicebus.administration.models.TopicProperties
      description: Information about the created topic.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions,com.azure.core.util.Context)
  id: createTopicWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)
  nameWithType: ServiceBusAdministrationClient.createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Creates a topic and returns the created topic in addition to the HTTP response.
  syntax:
    content: public Response<TopicProperties> createTopicWithResponse(String topicName, CreateTopicOptions topicOptions, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic to create.
    - id: topicOptions
      type: com.azure.messaging.servicebus.administration.models.CreateTopicOptions
      description: Information about the topic to create.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.TopicProperties>
      description: The created topic in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue(java.lang.String)
  id: deleteQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteQueue(String queueName)
  nameWithType: ServiceBusAdministrationClient.deleteQueue(String queueName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue(String queueName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a queue the matching `queueName`.
  syntax:
    content: public void deleteQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to delete.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteQueueWithResponse(String queueName, Context context)
  nameWithType: ServiceBusAdministrationClient.deleteQueueWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a queue the matching `queueName` and returns the HTTP response.
  syntax:
    content: public Response<Void> deleteQueueWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to delete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response when the queue is successfully deleted.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule(java.lang.String,java.lang.String,java.lang.String)
  id: deleteRule(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteRule(String topicName, String subscriptionName, String ruleName)
  nameWithType: ServiceBusAdministrationClient.deleteRule(String topicName, String subscriptionName, String ruleName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule(String topicName, String subscriptionName, String ruleName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a rule the matching `ruleName`.
  syntax:
    content: public void deleteRule(String topicName, String subscriptionName, String ruleName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with rule to delete.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription associated with the rule to delete.
    - id: ruleName
      type: java.lang.String
      description: Name of rule to delete.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
  nameWithType: ServiceBusAdministrationClient.deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a rule the matching `ruleName` and returns the HTTP response.
  syntax:
    content: public Response<Void> deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with rule to delete.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription associated with the rule to delete.
    - id: ruleName
      type: java.lang.String
      description: Name of rule to delete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription(java.lang.String,java.lang.String)
  id: deleteSubscription(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteSubscription(String topicName, String subscriptionName)
  nameWithType: ServiceBusAdministrationClient.deleteSubscription(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a subscription the matching `subscriptionName`.
  syntax:
    content: public void deleteSubscription(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription to delete.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to delete.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusAdministrationClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a subscription the matching `subscriptionName` and returns the HTTP response.
  syntax:
    content: public Response<Void> deleteSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription to delete.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to delete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic(java.lang.String)
  id: deleteTopic(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteTopic(String topicName)
  nameWithType: ServiceBusAdministrationClient.deleteTopic(String topicName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic(String topicName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a topic the matching `topicName`.
  syntax:
    content: public void deleteTopic(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to delete.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: deleteTopicWithResponse(String topicName, Context context)
  nameWithType: ServiceBusAdministrationClient.deleteTopicWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Deletes a topic the matching `topicName` and returns the HTTP response.
  syntax:
    content: public Response<Void> deleteTopicWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to delete.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: The HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties()
  id: getNamespaceProperties()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getNamespaceProperties()
  nameWithType: ServiceBusAdministrationClient.getNamespaceProperties()
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties()
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the Service Bus namespace.
  syntax:
    content: public NamespaceProperties getNamespaceProperties()
    return:
      type: com.azure.messaging.servicebus.administration.models.NamespaceProperties
      description: Information about the Service Bus namespace.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse(com.azure.core.util.Context)
  id: getNamespacePropertiesWithResponse(com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getNamespacePropertiesWithResponse(Context context)
  nameWithType: ServiceBusAdministrationClient.getNamespacePropertiesWithResponse(Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse(Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the Service Bus namespace along with its HTTP response.
  syntax:
    content: public Response<NamespaceProperties> getNamespacePropertiesWithResponse(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.NamespaceProperties>
      description: Information about the namespace and the associated HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(java.lang.String)
  id: getQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getQueue(String queueName)
  nameWithType: ServiceBusAdministrationClient.getQueue(String queueName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(String queueName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the queue.
  syntax:
    content: public QueueProperties getQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: com.azure.messaging.servicebus.administration.models.QueueProperties
      description: Information about the queue.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists(java.lang.String)
  id: getQueueExists(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getQueueExists(String queueName)
  nameWithType: ServiceBusAdministrationClient.getQueueExists(String queueName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists(String queueName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets whether or not a queue with `queueName` exists in the Service Bus namespace.
  syntax:
    content: public boolean getQueueExists(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue.
    return:
      type: boolean
      description: <code>true</code> if the queue exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getQueueExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getQueueExistsWithResponse(String queueName, Context context)
  nameWithType: ServiceBusAdministrationClient.getQueueExistsWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets whether or not a queue with `queueName` exists in the Service Bus namespace.
  syntax:
    content: public Response<Boolean> getQueueExistsWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: The HTTP response and <code>true</code> if the queue exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties(java.lang.String)
  id: getQueueRuntimeProperties(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getQueueRuntimeProperties(String queueName)
  nameWithType: ServiceBusAdministrationClient.getQueueRuntimeProperties(String queueName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties(String queueName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets runtime properties about the queue.
  syntax:
    content: public QueueRuntimeProperties getQueueRuntimeProperties(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties
      description: Runtime properties about the queue.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getQueueRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getQueueRuntimePropertiesWithResponse(String queueName, Context context)
  nameWithType: ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets runtime properties about the queue along with its HTTP response.
  syntax:
    content: public Response<QueueRuntimeProperties> getQueueRuntimePropertiesWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties>
      description: Runtime properties about the queue and the associated HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getQueueWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getQueueWithResponse(String queueName, Context context)
  nameWithType: ServiceBusAdministrationClient.getQueueWithResponse(String queueName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse(String queueName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the queue along with its HTTP response.
  syntax:
    content: public Response<QueueProperties> getQueueWithResponse(String queueName, Context context)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.QueueProperties>
      description: Information about the queue and the associated HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(java.lang.String,java.lang.String,java.lang.String)
  id: getRule(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getRule(String topicName, String subscriptionName, String ruleName)
  nameWithType: ServiceBusAdministrationClient.getRule(String topicName, String subscriptionName, String ruleName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(String topicName, String subscriptionName, String ruleName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets a rule from the service namespace. Only following data types are deserialized in Filters and Action parameters - string, int, long, boolean, double, and OffsetDateTime. Other data types would return its string value.
  syntax:
    content: public RuleProperties getRule(String topicName, String subscriptionName, String ruleName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The name of the topic relative to service bus namespace.
    - id: subscriptionName
      type: java.lang.String
      description: The subscription name the rule belongs to.
    - id: ruleName
      type: java.lang.String
      description: The name of the rule to retrieve.
    return:
      type: com.azure.messaging.servicebus.administration.models.RuleProperties
      description: The associated rule.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
  nameWithType: ServiceBusAdministrationClient.getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets a rule from the service namespace. Only following data types are deserialized in Filters and Action parameters - string, int, long, bool, double, and OffsetDateTime. Other data types would return its string value.
  syntax:
    content: public Response<RuleProperties> getRuleWithResponse(String topicName, String subscriptionName, String ruleName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The name of the topic relative to service bus namespace.
    - id: subscriptionName
      type: java.lang.String
      description: The subscription name the rule belongs to.
    - id: ruleName
      type: java.lang.String
      description: The name of the rule to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.RuleProperties>
      description: The associated rule with the corresponding HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(java.lang.String,java.lang.String)
  id: getSubscription(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getSubscription(String topicName, String subscriptionName)
  nameWithType: ServiceBusAdministrationClient.getSubscription(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the queue.
  syntax:
    content: public SubscriptionProperties getSubscription(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    return:
      type: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
      description: Information about the subscription.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists(java.lang.String,java.lang.String)
  id: getSubscriptionExists(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getSubscriptionExists(String topicName, String subscriptionName)
  nameWithType: ServiceBusAdministrationClient.getSubscriptionExists(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets whether or not a subscription within a topic exists.
  syntax:
    content: public boolean getSubscriptionExists(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    return:
      type: boolean
      description: <code>true</code> if the subscription exists.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSubscriptionExistsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusAdministrationClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets whether or not a subscription within a topic exists.
  syntax:
    content: public Response<Boolean> getSubscriptionExistsWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of the subscription.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: The HTTP response and <code>true</code> if the subscription exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties(java.lang.String,java.lang.String)
  id: getSubscriptionRuntimeProperties(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getSubscriptionRuntimeProperties(String topicName, String subscriptionName)
  nameWithType: ServiceBusAdministrationClient.getSubscriptionRuntimeProperties(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets runtime properties about the subscription.
  syntax:
    content: public SubscriptionRuntimeProperties getSubscriptionRuntimeProperties(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    return:
      type: com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties
      description: Runtime properties about the subscription.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSubscriptionRuntimePropertiesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets runtime properties about the subscription.
  syntax:
    content: public Response<SubscriptionRuntimeProperties> getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties>
      description: Runtime properties about the subscription.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  nameWithType: ServiceBusAdministrationClient.getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the subscription along with its HTTP response.
  syntax:
    content: public Response<SubscriptionProperties> getSubscriptionWithResponse(String topicName, String subscriptionName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic associated with subscription.
    - id: subscriptionName
      type: java.lang.String
      description: Name of subscription to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.SubscriptionProperties>
      description: Information about the subscription and the associated HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(java.lang.String)
  id: getTopic(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getTopic(String topicName)
  nameWithType: ServiceBusAdministrationClient.getTopic(String topicName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(String topicName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the topic.
  syntax:
    content: public TopicProperties getTopic(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    return:
      type: com.azure.messaging.servicebus.administration.models.TopicProperties
      description: Information about the topic.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists(java.lang.String)
  id: getTopicExists(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getTopicExists(String topicName)
  nameWithType: ServiceBusAdministrationClient.getTopicExists(String topicName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists(String topicName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets whether or not a topic with `topicName` exists in the Service Bus namespace.
  syntax:
    content: public boolean getTopicExists(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic.
    return:
      type: boolean
      description: <code>true</code> if the topic exists.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getTopicExistsWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getTopicExistsWithResponse(String topicName, Context context)
  nameWithType: ServiceBusAdministrationClient.getTopicExistsWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets whether or not a topic with `topicName` exists in the Service Bus namespace.
  syntax:
    content: public Response<Boolean> getTopicExistsWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of the topic.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Boolean>
      description: The HTTP response and <code>true</code> if the topic exists; otherwise <code>false</code>.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties(java.lang.String)
  id: getTopicRuntimeProperties(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getTopicRuntimeProperties(String topicName)
  nameWithType: ServiceBusAdministrationClient.getTopicRuntimeProperties(String topicName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties(String topicName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets runtime properties about the topic.
  syntax:
    content: public TopicRuntimeProperties getTopicRuntimeProperties(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    return:
      type: com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties
      description: Runtime properties about the topic.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getTopicRuntimePropertiesWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getTopicRuntimePropertiesWithResponse(String topicName, Context context)
  nameWithType: ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets runtime properties about the topic with its HTTP response.
  syntax:
    content: public Response<TopicRuntimeProperties> getTopicRuntimePropertiesWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties>
      description: Runtime properties about the topic and the associated HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getTopicWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: getTopicWithResponse(String topicName, Context context)
  nameWithType: ServiceBusAdministrationClient.getTopicWithResponse(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse(String topicName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Gets information about the topic along with its HTTP response.
  syntax:
    content: public Response<TopicProperties> getTopicWithResponse(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: Name of topic to get information about.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.TopicProperties>
      description: Information about the topic and the associated HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues()
  id: listQueues()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: listQueues()
  nameWithType: ServiceBusAdministrationClient.listQueues()
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues()
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Fetches all the queues in the Service Bus namespace.
  syntax:
    content: public PagedIterable<QueueProperties> listQueues()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.QueueProperties>
      description: A PagedIterable of <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties" data-throw-if-not-resolved="false">queues</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues(com.azure.core.util.Context)
  id: listQueues(com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: listQueues(Context context)
  nameWithType: ServiceBusAdministrationClient.listQueues(Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues(Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Fetches all the queues in the Service Bus namespace.
  syntax:
    content: public PagedIterable<QueueProperties> listQueues(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.QueueProperties>
      description: A PagedIterable of <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties" data-throw-if-not-resolved="false">queues</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules(java.lang.String,java.lang.String)
  id: listRules(java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: listRules(String topicName, String subscriptionName)
  nameWithType: ServiceBusAdministrationClient.listRules(String topicName, String subscriptionName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules(String topicName, String subscriptionName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Fetches all the rules for a topic and subscription.
  syntax:
    content: public PagedIterable<RuleProperties> listRules(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The topic name under which all the rules need to be retrieved.
    - id: subscriptionName
      type: java.lang.String
      description: The name of the subscription for which all rules need to be retrieved.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.RuleProperties>
      description: An iterable of <xref uid="com.azure.messaging.servicebus.administration.models.RuleProperties" data-throw-if-not-resolved="false">rules</xref> for the <code>topicName</code> and <code>subscriptionName</code>.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(java.lang.String)
  id: listSubscriptions(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: listSubscriptions(String topicName)
  nameWithType: ServiceBusAdministrationClient.listSubscriptions(String topicName)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(String topicName)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Fetches all the subscriptions for a topic.
  syntax:
    content: public PagedIterable<SubscriptionProperties> listSubscriptions(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The topic name under which all the subscriptions need to be retrieved.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.SubscriptionProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties" data-throw-if-not-resolved="false">subscriptions</xref> for the <code>topicName</code>.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(java.lang.String,com.azure.core.util.Context)
  id: listSubscriptions(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: listSubscriptions(String topicName, Context context)
  nameWithType: ServiceBusAdministrationClient.listSubscriptions(String topicName, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions(String topicName, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Fetches all the subscriptions for a topic.
  syntax:
    content: public PagedIterable<SubscriptionProperties> listSubscriptions(String topicName, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The topic name under which all the subscriptions need to be retrieved.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.SubscriptionProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties" data-throw-if-not-resolved="false">subscriptions</xref> for the <code>topicName</code>.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics()
  id: listTopics()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: listTopics()
  nameWithType: ServiceBusAdministrationClient.listTopics()
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics()
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Fetches all the topics in the Service Bus namespace.
  syntax:
    content: public PagedIterable<TopicProperties> listTopics()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.TopicProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties" data-throw-if-not-resolved="false">topics</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics(com.azure.core.util.Context)
  id: listTopics(com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: listTopics(Context context)
  nameWithType: ServiceBusAdministrationClient.listTopics(Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics(Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: Fetches all the topics in the Service Bus namespace.
  syntax:
    content: public PagedIterable<TopicProperties> listTopics(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.TopicProperties>
      description: A paged iterable of <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties" data-throw-if-not-resolved="false">topics</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue(com.azure.messaging.servicebus.administration.models.QueueProperties)
  id: updateQueue(com.azure.messaging.servicebus.administration.models.QueueProperties)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateQueue(QueueProperties queue)
  nameWithType: ServiceBusAdministrationClient.updateQueue(QueueProperties queue)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue(QueueProperties queue)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a queue with the given <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(java.lang.String)" data-throw-if-not-resolved="false">Get queue description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public QueueProperties updateQueue(QueueProperties queue)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.administration.models.QueueProperties
      description: >-
        Information about the queue to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    return:
      type: com.azure.messaging.servicebus.administration.models.QueueProperties
      description: The updated queue.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse(com.azure.messaging.servicebus.administration.models.QueueProperties,com.azure.core.util.Context)
  id: updateQueueWithResponse(com.azure.messaging.servicebus.administration.models.QueueProperties,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateQueueWithResponse(QueueProperties queue, Context context)
  nameWithType: ServiceBusAdministrationClient.updateQueueWithResponse(QueueProperties queue, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse(QueueProperties queue, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a queue with the given <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties" data-throw-if-not-resolved="false">QueueProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue(java.lang.String)" data-throw-if-not-resolved="false">Get queue description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public Response<QueueProperties> updateQueueWithResponse(QueueProperties queue, Context context)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.administration.models.QueueProperties
      description: >-
        Information about the queue to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.QueueProperties>
      description: The updated queue with its HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties)
  id: updateRule(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateRule(String topicName, String subscriptionName, RuleProperties rule)
  nameWithType: ServiceBusAdministrationClient.updateRule(String topicName, String subscriptionName, RuleProperties rule)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule(String topicName, String subscriptionName, RuleProperties rule)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a rule with the given <xref uid="com.azure.messaging.servicebus.administration.models.RuleProperties" data-throw-if-not-resolved="false">RuleProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.RuleProperties" data-throw-if-not-resolved="false">RuleProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(java.lang.String,java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">Get rule description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.
  syntax:
    content: public RuleProperties updateRule(String topicName, String subscriptionName, RuleProperties rule)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The topic name under which the rule is updated.
    - id: subscriptionName
      type: java.lang.String
      description: The name of the subscription for which the rule is updated.
    - id: rule
      type: com.azure.messaging.servicebus.administration.models.RuleProperties
      description: >-
        Information about the rule to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    return:
      type: com.azure.messaging.servicebus.administration.models.RuleProperties
      description: The updated rule.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties,com.azure.core.util.Context)
  id: updateRuleWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)
  nameWithType: ServiceBusAdministrationClient.updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a rule with the given <xref uid="com.azure.messaging.servicebus.administration.models.RuleProperties" data-throw-if-not-resolved="false">RuleProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.RuleProperties" data-throw-if-not-resolved="false">RuleProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule(java.lang.String,java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">Get rule description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.
  syntax:
    content: public Response<RuleProperties> updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule, Context context)
    parameters:
    - id: topicName
      type: java.lang.String
      description: The topic name under which the rule is updated.
    - id: subscriptionName
      type: java.lang.String
      description: The name of the subscription for which the rule is updated.
    - id: rule
      type: com.azure.messaging.servicebus.administration.models.RuleProperties
      description: >-
        Information about the rule to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.RuleProperties>
      description: A Mono that returns the updated rule in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription(com.azure.messaging.servicebus.administration.models.SubscriptionProperties)
  id: updateSubscription(com.azure.messaging.servicebus.administration.models.SubscriptionProperties)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateSubscription(SubscriptionProperties subscription)
  nameWithType: ServiceBusAdministrationClient.updateSubscription(SubscriptionProperties subscription)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription(SubscriptionProperties subscription)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a subscription with the given <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">Get subscription description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setMaxDeliveryCount(int)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public SubscriptionProperties updateSubscription(SubscriptionProperties subscription)
    parameters:
    - id: subscription
      type: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
      description: >-
        Information about the subscription to update. You must provide all the property values
             that are desired on the updated entity. Any values not provided are set to the service default values.
    return:
      type: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
      description: Updated subscription in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse(com.azure.messaging.servicebus.administration.models.SubscriptionProperties,com.azure.core.util.Context)
  id: updateSubscriptionWithResponse(com.azure.messaging.servicebus.administration.models.SubscriptionProperties,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
  nameWithType: ServiceBusAdministrationClient.updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a subscription with the given <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties" data-throw-if-not-resolved="false">SubscriptionProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">Get subscription description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setMaxDeliveryCount(int)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public Response<SubscriptionProperties> updateSubscriptionWithResponse(SubscriptionProperties subscription, Context context)
    parameters:
    - id: subscription
      type: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
      description: >-
        Information about the subscription to update. You must provide all the property values
             that are desired on the updated entity. Any values not provided are set to the service default values.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.SubscriptionProperties>
      description: Updated subscription in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic(com.azure.messaging.servicebus.administration.models.TopicProperties)
  id: updateTopic(com.azure.messaging.servicebus.administration.models.TopicProperties)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateTopic(TopicProperties topic)
  nameWithType: ServiceBusAdministrationClient.updateTopic(TopicProperties topic)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic(TopicProperties topic)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a topic with the given <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(java.lang.String)" data-throw-if-not-resolved="false">Get topic description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
  syntax:
    content: public TopicProperties updateTopic(TopicProperties topic)
    parameters:
    - id: topic
      type: com.azure.messaging.servicebus.administration.models.TopicProperties
      description: >-
        Information about the topic to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    return:
      type: com.azure.messaging.servicebus.administration.models.TopicProperties
      description: The updated topic.
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse(com.azure.messaging.servicebus.administration.models.TopicProperties,com.azure.core.util.Context)
  id: updateTopicWithResponse(com.azure.messaging.servicebus.administration.models.TopicProperties,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
  parent: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient
  langs:
  - java
  name: updateTopicWithResponse(TopicProperties topic, Context context)
  nameWithType: ServiceBusAdministrationClient.updateTopicWithResponse(TopicProperties topic, Context context)
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse(TopicProperties topic, Context context)
  overload: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse*
  type: Method
  package: com.azure.messaging.servicebus.administration
  summary: >-
    Updates a topic with the given <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref>. The <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties" data-throw-if-not-resolved="false">TopicProperties</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic(java.lang.String)" data-throw-if-not-resolved="false">Get topic description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. More information can be found in the links below. They are:

     *  <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.administration.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
  syntax:
    content: public Response<TopicProperties> updateTopicWithResponse(TopicProperties topic, Context context)
    parameters:
    - id: topic
      type: com.azure.messaging.servicebus.administration.models.TopicProperties
      description: >-
        Information about the topic to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the HTTP pipeline during the service call.
    return:
      type: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.TopicProperties>
      description: The updated topic with its HTTP response.
references:
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient
  name: ServiceBusAdministrationAsyncClient
  nameWithType: ServiceBusAdministrationAsyncClient
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.ServiceBusAdministrationClient*
  name: ServiceBusAdministrationClient
  nameWithType: ServiceBusAdministrationClient.ServiceBusAdministrationClient
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.ServiceBusAdministrationClient
  package: com.azure.messaging.servicebus.administration
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.messaging.servicebus.administration.models.QueueProperties
  name: QueueProperties
  nameWithType: QueueProperties
  fullName: com.azure.messaging.servicebus.administration.models.QueueProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue*
  name: createQueue
  nameWithType: ServiceBusAdministrationClient.createQueue
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueue
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.CreateQueueOptions
  name: CreateQueueOptions
  nameWithType: CreateQueueOptions
  fullName: com.azure.messaging.servicebus.administration.models.CreateQueueOptions
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.QueueProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.QueueProperties
    name: QueueProperties
    fullName: com.azure.messaging.servicebus.administration.models.QueueProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse*
  name: createQueueWithResponse
  nameWithType: ServiceBusAdministrationClient.createQueueWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createQueueWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.RuleProperties
  name: RuleProperties
  nameWithType: RuleProperties
  fullName: com.azure.messaging.servicebus.administration.models.RuleProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule*
  name: createRule
  nameWithType: ServiceBusAdministrationClient.createRule
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRule
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.CreateRuleOptions
  name: CreateRuleOptions
  nameWithType: CreateRuleOptions
  fullName: com.azure.messaging.servicebus.administration.models.CreateRuleOptions
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.RuleProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.RuleProperties
    name: RuleProperties
    fullName: com.azure.messaging.servicebus.administration.models.RuleProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse*
  name: createRuleWithResponse
  nameWithType: ServiceBusAdministrationClient.createRuleWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createRuleWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
  name: SubscriptionProperties
  nameWithType: SubscriptionProperties
  fullName: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription*
  name: createSubscription
  nameWithType: ServiceBusAdministrationClient.createSubscription
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscription
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions
  name: CreateSubscriptionOptions
  nameWithType: CreateSubscriptionOptions
  fullName: com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.SubscriptionProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
    name: SubscriptionProperties
    fullName: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse*
  name: createSubscriptionWithResponse
  nameWithType: ServiceBusAdministrationClient.createSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createSubscriptionWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.TopicProperties
  name: TopicProperties
  nameWithType: TopicProperties
  fullName: com.azure.messaging.servicebus.administration.models.TopicProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic*
  name: createTopic
  nameWithType: ServiceBusAdministrationClient.createTopic
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopic
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.CreateTopicOptions
  name: CreateTopicOptions
  nameWithType: CreateTopicOptions
  fullName: com.azure.messaging.servicebus.administration.models.CreateTopicOptions
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.TopicProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.TopicProperties
    name: TopicProperties
    fullName: com.azure.messaging.servicebus.administration.models.TopicProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse*
  name: createTopicWithResponse
  nameWithType: ServiceBusAdministrationClient.createTopicWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.createTopicWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue*
  name: deleteQueue
  nameWithType: ServiceBusAdministrationClient.deleteQueue
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueue
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse*
  name: deleteQueueWithResponse
  nameWithType: ServiceBusAdministrationClient.deleteQueueWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteQueueWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule*
  name: deleteRule
  nameWithType: ServiceBusAdministrationClient.deleteRule
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRule
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse*
  name: deleteRuleWithResponse
  nameWithType: ServiceBusAdministrationClient.deleteRuleWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteRuleWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription*
  name: deleteSubscription
  nameWithType: ServiceBusAdministrationClient.deleteSubscription
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscription
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse*
  name: deleteSubscriptionWithResponse
  nameWithType: ServiceBusAdministrationClient.deleteSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteSubscriptionWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic*
  name: deleteTopic
  nameWithType: ServiceBusAdministrationClient.deleteTopic
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopic
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse*
  name: deleteTopicWithResponse
  nameWithType: ServiceBusAdministrationClient.deleteTopicWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.deleteTopicWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue*
  name: getQueue
  nameWithType: ServiceBusAdministrationClient.getQueue
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueue
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse*
  name: getQueueWithResponse
  nameWithType: ServiceBusAdministrationClient.getQueueWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists*
  name: getQueueExists
  nameWithType: ServiceBusAdministrationClient.getQueueExists
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExists
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.Response<java.lang.Boolean>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse*
  name: getQueueExistsWithResponse
  nameWithType: ServiceBusAdministrationClient.getQueueExistsWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueExistsWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties
  name: QueueRuntimeProperties
  nameWithType: QueueRuntimeProperties
  fullName: com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties*
  name: getQueueRuntimeProperties
  nameWithType: ServiceBusAdministrationClient.getQueueRuntimeProperties
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimeProperties
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties
    name: QueueRuntimeProperties
    fullName: com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse*
  name: getQueueRuntimePropertiesWithResponse
  nameWithType: ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getQueueRuntimePropertiesWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.NamespaceProperties
  name: NamespaceProperties
  nameWithType: NamespaceProperties
  fullName: com.azure.messaging.servicebus.administration.models.NamespaceProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties*
  name: getNamespaceProperties
  nameWithType: ServiceBusAdministrationClient.getNamespaceProperties
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespaceProperties
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.NamespaceProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.NamespaceProperties
    name: NamespaceProperties
    fullName: com.azure.messaging.servicebus.administration.models.NamespaceProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse*
  name: getNamespacePropertiesWithResponse
  nameWithType: ServiceBusAdministrationClient.getNamespacePropertiesWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getNamespacePropertiesWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule*
  name: getRule
  nameWithType: ServiceBusAdministrationClient.getRule
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRule
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse*
  name: getRuleWithResponse
  nameWithType: ServiceBusAdministrationClient.getRuleWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getRuleWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription*
  name: getSubscription
  nameWithType: ServiceBusAdministrationClient.getSubscription
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscription
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse*
  name: getSubscriptionWithResponse
  nameWithType: ServiceBusAdministrationClient.getSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists*
  name: getSubscriptionExists
  nameWithType: ServiceBusAdministrationClient.getSubscriptionExists
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExists
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse*
  name: getSubscriptionExistsWithResponse
  nameWithType: ServiceBusAdministrationClient.getSubscriptionExistsWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionExistsWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties
  name: SubscriptionRuntimeProperties
  nameWithType: SubscriptionRuntimeProperties
  fullName: com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties*
  name: getSubscriptionRuntimeProperties
  nameWithType: ServiceBusAdministrationClient.getSubscriptionRuntimeProperties
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimeProperties
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties
    name: SubscriptionRuntimeProperties
    fullName: com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse*
  name: getSubscriptionRuntimePropertiesWithResponse
  nameWithType: ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getSubscriptionRuntimePropertiesWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic*
  name: getTopic
  nameWithType: ServiceBusAdministrationClient.getTopic
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopic
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse*
  name: getTopicWithResponse
  nameWithType: ServiceBusAdministrationClient.getTopicWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists*
  name: getTopicExists
  nameWithType: ServiceBusAdministrationClient.getTopicExists
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExists
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse*
  name: getTopicExistsWithResponse
  nameWithType: ServiceBusAdministrationClient.getTopicExistsWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicExistsWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties
  name: TopicRuntimeProperties
  nameWithType: TopicRuntimeProperties
  fullName: com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties*
  name: getTopicRuntimeProperties
  nameWithType: ServiceBusAdministrationClient.getTopicRuntimeProperties
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimeProperties
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.Response<com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties
    name: TopicRuntimeProperties
    fullName: com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse*
  name: getTopicRuntimePropertiesWithResponse
  nameWithType: ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.getTopicRuntimePropertiesWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.QueueProperties>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.QueueProperties
    name: QueueProperties
    fullName: com.azure.messaging.servicebus.administration.models.QueueProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues*
  name: listQueues
  nameWithType: ServiceBusAdministrationClient.listQueues
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listQueues
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.RuleProperties>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.RuleProperties
    name: RuleProperties
    fullName: com.azure.messaging.servicebus.administration.models.RuleProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules*
  name: listRules
  nameWithType: ServiceBusAdministrationClient.listRules
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listRules
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.SubscriptionProperties>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
    name: SubscriptionProperties
    fullName: com.azure.messaging.servicebus.administration.models.SubscriptionProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions*
  name: listSubscriptions
  nameWithType: ServiceBusAdministrationClient.listSubscriptions
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listSubscriptions
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.core.http.rest.PagedIterable<com.azure.messaging.servicebus.administration.models.TopicProperties>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.administration.models.TopicProperties
    name: TopicProperties
    fullName: com.azure.messaging.servicebus.administration.models.TopicProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics*
  name: listTopics
  nameWithType: ServiceBusAdministrationClient.listTopics
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.listTopics
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue*
  name: updateQueue
  nameWithType: ServiceBusAdministrationClient.updateQueue
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueue
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse*
  name: updateQueueWithResponse
  nameWithType: ServiceBusAdministrationClient.updateQueueWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateQueueWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule*
  name: updateRule
  nameWithType: ServiceBusAdministrationClient.updateRule
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRule
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse*
  name: updateRuleWithResponse
  nameWithType: ServiceBusAdministrationClient.updateRuleWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateRuleWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription*
  name: updateSubscription
  nameWithType: ServiceBusAdministrationClient.updateSubscription
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscription
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse*
  name: updateSubscriptionWithResponse
  nameWithType: ServiceBusAdministrationClient.updateSubscriptionWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateSubscriptionWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic*
  name: updateTopic
  nameWithType: ServiceBusAdministrationClient.updateTopic
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopic
  package: com.azure.messaging.servicebus.administration
- uid: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse*
  name: updateTopicWithResponse
  nameWithType: ServiceBusAdministrationClient.updateTopicWithResponse
  fullName: com.azure.messaging.servicebus.administration.ServiceBusAdministrationClient.updateTopicWithResponse
  package: com.azure.messaging.servicebus.administration
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
