### YamlMime:ManagedReference
items:
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  id: CachedSchemaRegistryClientBuilder
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client
  children:
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder()
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addSchemaParser(com.azure.data.schemaregistry.Codec)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.buildClient()
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.credential(com.azure.core.credential.TokenCredential)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.endpoint(java.lang.String)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpClient(com.azure.core.http.HttpClient)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.maxSchemaMapSize(int)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  - com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)
  langs:
  - java
  name: CachedSchemaRegistryClientBuilder
  nameWithType: CachedSchemaRegistryClientBuilder
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  type: Class
  package: com.azure.data.schemaregistry.client
  summary: Builder implementation for <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref>.
  syntax:
    content: public class CachedSchemaRegistryClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder()
  id: CachedSchemaRegistryClientBuilder()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: CachedSchemaRegistryClientBuilder()
  nameWithType: CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder()
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder()
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder*
  type: Constructor
  package: com.azure.data.schemaregistry.client
  summary: Constructor for CachedSchemaRegistryClientBuilder. Supplies client defaults.
  syntax:
    content: public CachedSchemaRegistryClientBuilder()
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  id: addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy policy)
  nameWithType: CachedSchemaRegistryClientBuilder.addPolicy(HttpPipelinePolicy policy)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addPolicy(HttpPipelinePolicy policy)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addPolicy*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Adds a policy to the set of existing policies that are executed after required policies.
  syntax:
    content: public CachedSchemaRegistryClientBuilder addPolicy(HttpPipelinePolicy policy)
    parameters:
    - id: policy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: The retry policy for service requests.
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addSchemaParser(com.azure.data.schemaregistry.Codec)
  id: addSchemaParser(com.azure.data.schemaregistry.Codec)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: addSchemaParser(Codec codec)
  nameWithType: CachedSchemaRegistryClientBuilder.addSchemaParser(Codec codec)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addSchemaParser(Codec codec)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addSchemaParser*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Loads a parser method Function object used to convert schema strings returned from the Schema Registry service into useable schema objects. Any com.azure.data.schemaregistry.ByteEncoder or com.azure.data.schemaregistry.ByteDecoder class will implement - schemaType(), which specifies schema type, and - parseSchemaString(), which parses schemas of the specified schema type from String to Object. The parseMethod argument should be a stateless, idempotent function.
  syntax:
    content: public CachedSchemaRegistryClientBuilder addSchemaParser(Codec codec)
    parameters:
    - id: codec
      type: com.azure.data.schemaregistry.Codec
      description: Codec class implementation
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.buildClient()
  id: buildClient()
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: buildClient()
  nameWithType: CachedSchemaRegistryClientBuilder.buildClient()
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.buildClient()
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.buildClient*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Creates a <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref> based on options set in the builder. Every time `buildClient()` is called a new instance of <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref> is created. If <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.pipeline(com.azure.core.http.HttpPipeline)" data-throw-if-not-resolved="false">pipeline</xref> is set, then all HTTP pipeline related settings are ignored endpoint\} are when creating the <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">client</xref>.
  syntax:
    content: public CachedSchemaRegistryClient buildClient()
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
      description: A <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref> with the options set from the builder.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.credential(com.azure.core.credential.TokenCredential)
  id: credential(com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: credential(TokenCredential credential)
  nameWithType: CachedSchemaRegistryClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.credential(TokenCredential credential)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.credential*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Sets the <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref> to use when authenticating HTTP requests for this <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref>.
  syntax:
    content: public CachedSchemaRegistryClientBuilder credential(TokenCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credential.TokenCredential
      description: <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref>
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.endpoint(java.lang.String)
  id: endpoint(java.lang.String)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: endpoint(String schemaRegistryUrl)
  nameWithType: CachedSchemaRegistryClientBuilder.endpoint(String schemaRegistryUrl)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.endpoint(String schemaRegistryUrl)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.endpoint*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Sets the service endpoint for the Azure Schema Registry instance.
  syntax:
    content: public CachedSchemaRegistryClientBuilder endpoint(String schemaRegistryUrl)
    parameters:
    - id: schemaRegistryUrl
      type: java.lang.String
      description: The URL of the Azure Schema Registry instance
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpClient(com.azure.core.http.HttpClient)
  id: httpClient(com.azure.core.http.HttpClient)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: httpClient(HttpClient httpClient)
  nameWithType: CachedSchemaRegistryClientBuilder.httpClient(HttpClient httpClient)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpClient(HttpClient httpClient)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpClient*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Sets the HTTP client to use for sending and receiving requests to and from the service.
  syntax:
    content: public CachedSchemaRegistryClientBuilder httpClient(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: com.azure.core.http.HttpClient
      description: The HTTP client to use for requests.
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  id: httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: httpLogOptions(HttpLogOptions logOptions)
  nameWithType: CachedSchemaRegistryClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpLogOptions*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: >-
    Sets the logging configuration for HTTP requests and responses.


    If logLevel is not provided, default value of <xref uid="" data-throw-if-not-resolved="false">HttpLogDetailLevel#NONE</xref> is set.
  syntax:
    content: public CachedSchemaRegistryClientBuilder httpLogOptions(HttpLogOptions logOptions)
    parameters:
    - id: logOptions
      type: com.azure.core.http.policy.HttpLogOptions
      description: The logging configuration to use when sending and receiving HTTP requests/responses.
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.maxSchemaMapSize(int)
  id: maxSchemaMapSize(int)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: maxSchemaMapSize(int maxSchemaMapSize)
  nameWithType: CachedSchemaRegistryClientBuilder.maxSchemaMapSize(int maxSchemaMapSize)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.maxSchemaMapSize(int maxSchemaMapSize)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.maxSchemaMapSize*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: Sets schema cache size limit. If limit is exceeded on any cache, all caches are recycled.
  syntax:
    content: public CachedSchemaRegistryClientBuilder maxSchemaMapSize(int maxSchemaMapSize)
    parameters:
    - id: maxSchemaMapSize
      type: int
      description: max size for internal schema caches in <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref>
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  id: pipeline(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: pipeline(HttpPipeline httpPipeline)
  nameWithType: CachedSchemaRegistryClientBuilder.pipeline(HttpPipeline httpPipeline)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.pipeline(HttpPipeline httpPipeline)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.pipeline*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: >-
    Sets the HTTP pipeline to use for the service client.


    If `pipeline` is set, all other HTTP settings are ignored to build <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref>.
  syntax:
    content: public CachedSchemaRegistryClientBuilder pipeline(HttpPipeline httpPipeline)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to use for sending service requests and receiving responses.
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)
  id: retryPolicy(com.azure.core.http.policy.RetryPolicy)
  artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.1
  parent: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
  langs:
  - java
  name: retryPolicy(RetryPolicy retryPolicy)
  nameWithType: CachedSchemaRegistryClientBuilder.retryPolicy(RetryPolicy retryPolicy)
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.retryPolicy(RetryPolicy retryPolicy)
  overload: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.retryPolicy*
  type: Method
  package: com.azure.data.schemaregistry.client
  summary: >-
    Sets the <xref uid="com.azure.core.http.policy.RetryPolicy" data-throw-if-not-resolved="false">RetryPolicy</xref> that is used when each request is sent.


    The default retry policy will be used if not provided to build <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClient" data-throw-if-not-resolved="false">CachedSchemaRegistryClient</xref> .
  syntax:
    content: public CachedSchemaRegistryClientBuilder retryPolicy(RetryPolicy retryPolicy)
    parameters:
    - id: retryPolicy
      type: com.azure.core.http.policy.RetryPolicy
      description: user's retry policy applied to each request.
    return:
      type: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder
      description: The updated <xref uid="com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder" data-throw-if-not-resolved="false">CachedSchemaRegistryClientBuilder</xref> object.
references:
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder*
  name: CachedSchemaRegistryClientBuilder
  nameWithType: CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.CachedSchemaRegistryClientBuilder
  package: com.azure.data.schemaregistry.client
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.endpoint*
  name: endpoint
  nameWithType: CachedSchemaRegistryClientBuilder.endpoint
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.endpoint
  package: com.azure.data.schemaregistry.client
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.maxSchemaMapSize*
  name: maxSchemaMapSize
  nameWithType: CachedSchemaRegistryClientBuilder.maxSchemaMapSize
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.maxSchemaMapSize
  package: com.azure.data.schemaregistry.client
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpClient*
  name: httpClient
  nameWithType: CachedSchemaRegistryClientBuilder.httpClient
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpClient
  package: com.azure.data.schemaregistry.client
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.pipeline*
  name: pipeline
  nameWithType: CachedSchemaRegistryClientBuilder.pipeline
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.pipeline
  package: com.azure.data.schemaregistry.client
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.credential*
  name: credential
  nameWithType: CachedSchemaRegistryClientBuilder.credential
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.credential
  package: com.azure.data.schemaregistry.client
- uid: com.azure.core.http.policy.HttpLogOptions
  spec.java:
  - uid: com.azure.core.http.policy.HttpLogOptions
    name: HttpLogOptions
    fullName: com.azure.core.http.policy.HttpLogOptions
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpLogOptions*
  name: httpLogOptions
  nameWithType: CachedSchemaRegistryClientBuilder.httpLogOptions
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.httpLogOptions
  package: com.azure.data.schemaregistry.client
- uid: com.azure.core.http.policy.RetryPolicy
  spec.java:
  - uid: com.azure.core.http.policy.RetryPolicy
    name: RetryPolicy
    fullName: com.azure.core.http.policy.RetryPolicy
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.retryPolicy*
  name: retryPolicy
  nameWithType: CachedSchemaRegistryClientBuilder.retryPolicy
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.retryPolicy
  package: com.azure.data.schemaregistry.client
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: CachedSchemaRegistryClientBuilder.addPolicy
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addPolicy
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.Codec
  name: Codec
  nameWithType: Codec
  fullName: com.azure.data.schemaregistry.Codec
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addSchemaParser*
  name: addSchemaParser
  nameWithType: CachedSchemaRegistryClientBuilder.addSchemaParser
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.addSchemaParser
  package: com.azure.data.schemaregistry.client
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
  name: CachedSchemaRegistryClient
  nameWithType: CachedSchemaRegistryClient
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClient
- uid: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.buildClient*
  name: buildClient
  nameWithType: CachedSchemaRegistryClientBuilder.buildClient
  fullName: com.azure.data.schemaregistry.client.CachedSchemaRegistryClientBuilder.buildClient
  package: com.azure.data.schemaregistry.client
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
