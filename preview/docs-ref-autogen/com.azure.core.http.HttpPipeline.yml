### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.HttpPipeline
  id: HttpPipeline
  parent: com.azure.core.http
  children:
  - com.azure.core.http.HttpPipeline.builder()
  - com.azure.core.http.HttpPipeline.getPolicy(final int)
  - com.azure.core.http.HttpPipeline.getPolicyCount()
  - com.azure.core.http.HttpPipeline.httpClient()
  - com.azure.core.http.HttpPipeline.send(HttpPipelineCallContext)
  - com.azure.core.http.HttpPipeline.send(HttpRequest)
  - com.azure.core.http.HttpPipeline.send(HttpRequest,Context)
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: HttpPipeline
  nameWithType: HttpPipeline
  fullName: com.azure.core.http.HttpPipeline
  type: Class
  source:
    remote: &o0
      path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 15
  package: com.azure.core.http
  summary: "<p>The http pipeline. </p>"
  syntax:
    content: public class HttpPipeline
  inheritance:
  - java.lang.Object
- uid: com.azure.core.http.HttpPipeline.builder()
  id: builder()
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: builder()
  nameWithType: HttpPipeline.builder()
  fullName: com.azure.core.http.HttpPipeline.builder()
  overload: com.azure.core.http.HttpPipeline.builder*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 25
  package: com.azure.core.http
  summary: "<p>Creates a builder that can configure options for the HttpPipeline before creating an instance of it.</p>\r\n<p></p>"
  syntax:
    content: public static HttpPipelineBuilder builder()
    return:
      type: com.azure.core.http.HttpPipelineBuilder
      description: <p>A new <xref uid="com.azure.core.http.HttpPipelineBuilder" data-throw-if-not-resolved="false">HttpPipelineBuilder</xref> to create a HttpPipeline from. </p>
- uid: com.azure.core.http.HttpPipeline.getPolicy(final int)
  id: getPolicy(final int)
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: getPolicy(final int index)
  nameWithType: HttpPipeline.getPolicy(final int index)
  fullName: com.azure.core.http.HttpPipeline.getPolicy(final int index)
  overload: com.azure.core.http.HttpPipeline.getPolicy*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 50
  package: com.azure.core.http
  summary: "<p>Get the policy at the passed index in the pipeline. </p>"
  syntax:
    content: public HttpPipelinePolicy getPolicy(final int index)
    parameters:
    - id: index
      type: cd225469
      description: <p>index of the the policy to retrieve. </p>
    return:
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: <p>the policy stored at that index. </p>
- uid: com.azure.core.http.HttpPipeline.getPolicyCount()
  id: getPolicyCount()
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: getPolicyCount()
  nameWithType: HttpPipeline.getPolicyCount()
  fullName: com.azure.core.http.HttpPipeline.getPolicyCount()
  overload: com.azure.core.http.HttpPipeline.getPolicyCount*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 58
  package: com.azure.core.http
  summary: "<p>Get the count of policies in the pipeline. </p>"
  syntax:
    content: public int getPolicyCount()
    return:
      type: f75371fa
      description: <p>count of policies. </p>
- uid: com.azure.core.http.HttpPipeline.httpClient()
  id: httpClient()
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: httpClient()
  nameWithType: HttpPipeline.httpClient()
  fullName: com.azure.core.http.HttpPipeline.httpClient()
  overload: com.azure.core.http.HttpPipeline.httpClient*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 67
  package: com.azure.core.http
  summary: "<p>Get the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\">HttpClient</xref> associated with the pipeline.</p>\r\n<p></p>"
  syntax:
    content: public HttpClient httpClient()
    return:
      type: com.azure.core.http.HttpClient
      description: <p>the <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">HttpClient</xref> associated with the pipeline </p>
- uid: com.azure.core.http.HttpPipeline.send(HttpPipelineCallContext)
  id: send(HttpPipelineCallContext)
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: send(HttpPipelineCallContext context)
  nameWithType: HttpPipeline.send(HttpPipelineCallContext context)
  fullName: com.azure.core.http.HttpPipeline.send(HttpPipelineCallContext context)
  overload: com.azure.core.http.HttpPipeline.send*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 97
  package: com.azure.core.http
  summary: "<p>Sends the context (containing request) through pipeline.</p>\r\n<p></p>"
  syntax: &o1
    content: public Mono<HttpResponse> send(HttpPipelineCallContext context)
    parameters:
    - id: context
      type: com.azure.core.http.HttpPipelineCallContext
      description: <p>the request context </p>
    return:
      type: 744507a1com.azure.core.http.HttpResponsea08ddfce
      description: <p>a publisher upon subscription flows the context through policies, sends the request and emits response upon completion </p>
- uid: com.azure.core.http.HttpPipeline.send(HttpRequest)
  id: send(HttpRequest)
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: send(HttpRequest request)
  nameWithType: HttpPipeline.send(HttpRequest request)
  fullName: com.azure.core.http.HttpPipeline.send(HttpRequest request)
  overload: com.azure.core.http.HttpPipeline.send*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 77
  package: com.azure.core.http
  summary: "<p>Wraps the request in a context and send it through pipeline.</p>\r\n<p></p>"
  syntax:
    content: public Mono<HttpResponse> send(HttpRequest request)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: <p>the request </p>
    return:
      type: 744507a1com.azure.core.http.HttpResponsea08ddfce
      description: <p>a publisher upon subscription flows the context through policies, sends the request and emits response upon completion </p>
- uid: com.azure.core.http.HttpPipeline.send(HttpRequest,Context)
  id: send(HttpRequest,Context)
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  langs:
  - java
  name: send(HttpRequest request, Context data)
  nameWithType: HttpPipeline.send(HttpRequest request, Context data)
  fullName: com.azure.core.http.HttpPipeline.send(HttpRequest request, Context data)
  overload: com.azure.core.http.HttpPipeline.send*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/http/HttpPipeline.java
    startLine: 87
  package: com.azure.core.http
  summary: "<p>Wraps the request in a context with additional metadata and sends it through the pipeline. </p>"
  syntax:
    content: public Mono<HttpResponse> send(HttpRequest request, Context data)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: <p>the request </p>
    - id: data
      type: com.azure.core.util.Context
      description: <p>additional metadata to pass along in the request </p>
    return:
      type: 744507a1com.azure.core.http.HttpResponsea08ddfce
      description: <p>a publisher upon subscription flows the context through policies, sends the request and emits response upon completion </p>
references:
- uid: com.azure.core.http.HttpPipeline.builder*
  name: builder
  nameWithType: HttpPipeline.builder
  fullName: com.azure.core.http.HttpPipeline.builder
  package: com.azure.core.http
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: com.azure.core.http.HttpPipeline.getPolicy*
  name: getPolicy
  nameWithType: HttpPipeline.getPolicy
  fullName: com.azure.core.http.HttpPipeline.getPolicy
  package: com.azure.core.http
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.azure.core.http.HttpPipeline.getPolicyCount*
  name: getPolicyCount
  nameWithType: HttpPipeline.getPolicyCount
  fullName: com.azure.core.http.HttpPipeline.getPolicyCount
  package: com.azure.core.http
- uid: com.azure.core.http.HttpPipeline.httpClient*
  name: httpClient
  nameWithType: HttpPipeline.httpClient
  fullName: com.azure.core.http.HttpPipeline.httpClient
  package: com.azure.core.http
- uid: 744507a1com.azure.core.http.HttpResponsea08ddfce
  spec.java:
  - name: Mono<
    fullName: Mono<
  - uid: com.azure.core.http.HttpResponse
    name: HttpResponse
    fullName: com.azure.core.http.HttpResponse
    href: com.azure.core.http.HttpResponse.yml
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.HttpPipeline.send*
  name: send
  nameWithType: HttpPipeline.send
  fullName: com.azure.core.http.HttpPipeline.send
  package: com.azure.core.http
- uid: com.azure.core.http.HttpClient
  parent: com.azure.core.http
  href: com.azure.core.http.HttpClient.yml
  name: HttpClient
  nameWithType: HttpClient
  fullName: com.azure.core.http.HttpClient
  type: Interface
  summary: "<p>A generic interface for sending HTTP requests and getting responses. </p>"
  syntax:
    content: public interface HttpClient
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  parent: com.azure.core.http.policy
  href: com.azure.core.http.policy.HttpPipelinePolicy.yml
  name: HttpPipelinePolicy
  nameWithType: HttpPipelinePolicy
  fullName: com.azure.core.http.policy.HttpPipelinePolicy
  type: Interface
  summary: "<p>Pipeline policy. </p>"
  syntax:
    content: public interface HttpPipelinePolicy
- uid: com.azure.core.http.HttpPipelineBuilder
  parent: com.azure.core.http
  href: com.azure.core.http.HttpPipelineBuilder.yml
  name: HttpPipelineBuilder
  nameWithType: HttpPipelineBuilder
  fullName: com.azure.core.http.HttpPipelineBuilder
  type: Class
  summary: "<p>This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref>, calling <xref uid=\"com.azure.core.http.HttpPipelineBuilder.build()\" data-throw-if-not-resolved=\"false\">build</xref> constructs an instance of the pipeline.</p>\r\n<p>A pipeline is configured with a HttpClient that sends the request, if no client is set a default is used. A pipeline may be configured with a list of policies that are applied to each request.</p>\r\n<p>\r\n  <b>Code Samples</b>\r\n</p>\r\n<p>Create a pipeline without configuration</p>\r\n<p>\r\n  <pre>\r\nHttpPipeline.builder()\r\n    .build();\r\n</pre>\r\n</p>\r\n<p>Create a pipeline using the default HTTP client and a retry policy</p>\r\n<p>\r\n  <pre>\r\nHttpPipeline.builder()\r\n    .httpClient(HttpClient.createDefault())\r\n    .policies(new RetryPolicy())\r\n    .build();\r\n</pre>\r\n</p>\r\n<p></p>"
  syntax:
    content: public class HttpPipelineBuilder
- uid: com.azure.core.http.HttpPipeline.send(HttpPipelineCallContext)
  parent: com.azure.core.http.HttpPipeline
  href: com.azure.core.http.HttpPipeline.yml
  name: send(HttpPipelineCallContext context)
  nameWithType: HttpPipeline.send(HttpPipelineCallContext context)
  fullName: com.azure.core.http.HttpPipeline.send(HttpPipelineCallContext context)
  type: Method
  summary: "<p>Sends the context (containing request) through pipeline.</p>\r\n<p></p>"
  syntax: *o1
- uid: com.azure.core.http.HttpResponse
  parent: com.azure.core.http
  href: com.azure.core.http.HttpResponse.yml
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.azure.core.http.HttpResponse
  type: Class
  summary: "<p>The type representing response of <xref uid=\"com.azure.core.http.HttpRequest\" data-throw-if-not-resolved=\"false\">HttpRequest</xref>. </p>"
  syntax:
    content: public class HttpResponse
- uid: com.azure.core.http.HttpRequest
  parent: com.azure.core.http
  href: com.azure.core.http.HttpRequest.yml
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: com.azure.core.http.HttpRequest
  type: Class
  summary: "<p>The outgoing Http request. </p>"
  syntax:
    content: public class HttpRequest
- uid: com.azure.core.util.Context
  parent: com.azure.core.util
  href: com.azure.core.util.Context.yml
  name: Context
  nameWithType: Context
  fullName: com.azure.core.util.Context
  type: Class
  summary: "<p>\r\n  <code>Context \r\n    </code> offers a means of passing arbitrary data (key-value pairs) to pipeline policies. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE \r\n    </code> or <code>null \r\n    </code> . Each context object is immutable. The<code>addData(Object, Object) \r\n    </code> method creates a new <code>Context \r\n    </code> object that refers to its parent, forming a linked list. </p>"
  syntax:
    content: public class Context
- uid: com.azure.core.http.HttpPipelineCallContext
  parent: com.azure.core.http
  href: com.azure.core.http.HttpPipelineCallContext.yml
  name: HttpPipelineCallContext
  nameWithType: HttpPipelineCallContext
  fullName: com.azure.core.http.HttpPipelineCallContext
  type: Class
  summary: "<p>Type representing context local to a single http request and it's response. </p>"
  syntax:
    content: public class HttpPipelineCallContext
