### YamlMime:JavaType
uid: "com.azure.core.http.HttpPipeline"
fullName: "com.azure.core.http.HttpPipeline"
name: "HttpPipeline"
nameWithType: "HttpPipeline"
summary: "The HTTP pipeline that HTTP requests and responses will flow through."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class HttpPipeline"
methods:
- uid: "com.azure.core.http.HttpPipeline.getHttpClient()"
  fullName: "com.azure.core.http.HttpPipeline.getHttpClient()"
  name: "getHttpClient()"
  nameWithType: "HttpPipeline.getHttpClient()"
  summary: "Get the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> associated with the pipeline."
  syntax: "public HttpClient getHttpClient()"
  desc: "Get the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> associated with the pipeline."
  returns:
    description: "the <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpClient\"></xref> associated with the pipeline"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpPipeline.getPolicy(int)"
  fullName: "com.azure.core.http.HttpPipeline.getPolicy(int index)"
  name: "getPolicy(int index)"
  nameWithType: "HttpPipeline.getPolicy(int index)"
  summary: "Get the policy at the passed index in the pipeline."
  parameters:
  - description: "index of the the policy to retrieve."
    name: "index"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpPipelinePolicy getPolicy(int index)"
  desc: "Get the policy at the passed index in the pipeline."
  returns:
    description: "the policy stored at that index."
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpPipeline.getPolicyCount()"
  fullName: "com.azure.core.http.HttpPipeline.getPolicyCount()"
  name: "getPolicyCount()"
  nameWithType: "HttpPipeline.getPolicyCount()"
  summary: "Get the count of policies in the pipeline."
  syntax: "public int getPolicyCount()"
  desc: "Get the count of policies in the pipeline."
  returns:
    description: "count of policies."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpPipelineCallContext)"
  fullName: "com.azure.core.http.HttpPipeline.send(HttpPipelineCallContext context)"
  name: "send(HttpPipelineCallContext context)"
  nameWithType: "HttpPipeline.send(HttpPipelineCallContext context)"
  summary: "Sends the context (containing an HTTP request) through pipeline."
  parameters:
  - description: "The request context."
    name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> send(HttpPipelineCallContext context)"
  desc: "Sends the context (containing an HTTP request) through pipeline."
  returns:
    description: "A publisher upon subscription flows the context through policies, sends the request and emits response\n upon completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpRequest)"
  fullName: "com.azure.core.http.HttpPipeline.send(HttpRequest request)"
  name: "send(HttpRequest request)"
  nameWithType: "HttpPipeline.send(HttpRequest request)"
  summary: "Wraps the `request` in a context and sends it through pipeline."
  parameters:
  - description: "The HTTP request to send."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> send(HttpRequest request)"
  desc: "Wraps the `request` in a context and sends it through pipeline."
  returns:
    description: "A publisher upon subscription flows the context through policies, sends the request, and emits response\n upon completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.HttpPipeline.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  fullName: "com.azure.core.http.HttpPipeline.send(HttpRequest request, Context data)"
  name: "send(HttpRequest request, Context data)"
  nameWithType: "HttpPipeline.send(HttpRequest request, Context data)"
  summary: "Wraps the request in a context with additional metadata and sends it through the pipeline."
  parameters:
  - description: "THe HTTP request to send."
    name: "request"
    type: "<xref href=\"com.azure.core.http.HttpRequest?alt=com.azure.core.http.HttpRequest&text=HttpRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional metadata to pass along with the request."
    name: "data"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> send(HttpRequest request, Context data)"
  desc: "Wraps the request in a context with additional metadata and sends it through the pipeline."
  returns:
    description: "A publisher upon subscription flows the context through policies, sends the request, and emits response\n upon completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "The HTTP pipeline that HTTP requests and responses will flow through.\n\nThe HTTP pipeline may apply a set of <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipelinePolicies\"></xref> to the request before it is sent and on the response as it is being returned."
metadata: {}
package: "com.azure.core.http"
artifact: com.azure:azure-core:1.22.0-beta.1
