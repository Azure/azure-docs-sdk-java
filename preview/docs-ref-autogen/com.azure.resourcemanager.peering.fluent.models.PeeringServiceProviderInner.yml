### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner"
fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner"
name: "PeeringServiceProviderInner"
nameWithType: "PeeringServiceProviderInner"
summary: "Peering<wbr>Service provider."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PeeringServiceProviderInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.PeeringServiceProviderInner()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.PeeringServiceProviderInner()"
  name: "PeeringServiceProviderInner()"
  nameWithType: "PeeringServiceProviderInner.PeeringServiceProviderInner()"
  syntax: "public PeeringServiceProviderInner()"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.peeringLocations()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.peeringLocations()"
  name: "peeringLocations()"
  nameWithType: "PeeringServiceProviderInner.peeringLocations()"
  summary: "Get the peering<wbr>Locations property: The list of locations at which the service provider peers with Microsoft."
  syntax: "public List<String> peeringLocations()"
  desc: "Get the peeringLocations property: The list of locations at which the service provider peers with Microsoft."
  returns:
    description: "the peeringLocations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.serviceProviderName()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.serviceProviderName()"
  name: "serviceProviderName()"
  nameWithType: "PeeringServiceProviderInner.serviceProviderName()"
  summary: "Get the service<wbr>Provider<wbr>Name property: The name of the service provider."
  syntax: "public String serviceProviderName()"
  desc: "Get the serviceProviderName property: The name of the service provider."
  returns:
    description: "the serviceProviderName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.validate()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.validate()"
  name: "validate()"
  nameWithType: "PeeringServiceProviderInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.withPeeringLocations(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.withPeeringLocations(List<String> peeringLocations)"
  name: "withPeeringLocations(List<String> peeringLocations)"
  nameWithType: "PeeringServiceProviderInner.withPeeringLocations(List<String> peeringLocations)"
  summary: "Set the peering<wbr>Locations property: The list of locations at which the service provider peers with Microsoft."
  parameters:
  - description: "the peeringLocations value to set."
    name: "peeringLocations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PeeringServiceProviderInner withPeeringLocations(List<String> peeringLocations)"
  desc: "Set the peeringLocations property: The list of locations at which the service provider peers with Microsoft."
  returns:
    description: "the PeeringServiceProviderInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner&text=PeeringServiceProviderInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.withServiceProviderName(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner.withServiceProviderName(String serviceProviderName)"
  name: "withServiceProviderName(String serviceProviderName)"
  nameWithType: "PeeringServiceProviderInner.withServiceProviderName(String serviceProviderName)"
  summary: "Set the service<wbr>Provider<wbr>Name property: The name of the service provider."
  parameters:
  - description: "the serviceProviderName value to set."
    name: "serviceProviderName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceProviderInner withServiceProviderName(String serviceProviderName)"
  desc: "Set the serviceProviderName property: The name of the service provider."
  returns:
    description: "the PeeringServiceProviderInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceProviderInner&text=PeeringServiceProviderInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "PeeringService provider."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
