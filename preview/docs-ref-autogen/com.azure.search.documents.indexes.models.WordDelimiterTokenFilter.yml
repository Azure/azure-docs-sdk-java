### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  id: WordDelimiterTokenFilter
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models
  children:
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.WordDelimiterTokenFilter(java.lang.String)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areNumbersCatenated()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areWordsCatenated()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.catenateAll()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateNumberParts()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateWordParts()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.getProtectedWords()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isPreserveOriginal()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isStemEnglishPossessive()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setCatenateAll(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateNumberParts(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateWordParts(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setNumbersCatenated(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setPreserveOriginal(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords(java.lang.String...)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords(java.util.List<java.lang.String>)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnCaseChange(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnNumerics(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setStemEnglishPossessive(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setWordsCatenated(java.lang.Boolean)
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnCaseChange()
  - com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnNumerics()
  langs:
  - java
  name: WordDelimiterTokenFilter
  nameWithType: WordDelimiterTokenFilter
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  type: Class
  package: com.azure.search.documents.indexes.models
  summary: Splits words into subwords and performs optional transformations on subword groups. This token filter is implemented using Apache Lucene.
  syntax:
    content: public final class WordDelimiterTokenFilter extends TokenFilter
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.models.TokenFilter
  inheritedMembers:
  - com.azure.search.documents.indexes.models.TokenFilter.getName()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.WordDelimiterTokenFilter(java.lang.String)
  id: WordDelimiterTokenFilter(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: WordDelimiterTokenFilter(String name)
  nameWithType: WordDelimiterTokenFilter.WordDelimiterTokenFilter(String name)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.WordDelimiterTokenFilter(String name)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.WordDelimiterTokenFilter*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  summary: Constructor of <xref uid="com.azure.search.documents.indexes.models.WordDelimiterTokenFilter" data-throw-if-not-resolved="false">WordDelimiterTokenFilter</xref>.
  syntax:
    content: public WordDelimiterTokenFilter(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: >-
        The name of the token filter. It must only contain letters, digits,
         spaces, dashes or underscores, can only start and end with alphanumeric
         characters, and is limited to 128 characters.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areNumbersCatenated()
  id: areNumbersCatenated()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: areNumbersCatenated()
  nameWithType: WordDelimiterTokenFilter.areNumbersCatenated()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areNumbersCatenated()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areNumbersCatenated*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the catenateNumbers property: A value indicating whether maximum runs of number parts will be catenated. For example, if this is set to true, "1-2" becomes "12". Default is false.'
  syntax:
    content: public Boolean areNumbersCatenated()
    return:
      type: java.lang.Boolean
      description: the catenateNumbers value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areWordsCatenated()
  id: areWordsCatenated()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: areWordsCatenated()
  nameWithType: WordDelimiterTokenFilter.areWordsCatenated()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areWordsCatenated()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areWordsCatenated*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the catenateWords property: A value indicating whether maximum runs of word parts will be catenated. For example, if this is set to true, "Azure-Search" becomes "AzureSearch". Default is false.'
  syntax:
    content: public Boolean areWordsCatenated()
    return:
      type: java.lang.Boolean
      description: the catenateWords value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.catenateAll()
  id: catenateAll()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: catenateAll()
  nameWithType: WordDelimiterTokenFilter.catenateAll()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.catenateAll()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.catenateAll*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the catenateAll property: A value indicating whether all subword parts will be catenated. For example, if this is set to true, "Azure-Search-1" becomes "AzureSearch1". Default is false.'
  syntax:
    content: public Boolean catenateAll()
    return:
      type: java.lang.Boolean
      description: the catenateAll value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateNumberParts()
  id: generateNumberParts()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: generateNumberParts()
  nameWithType: WordDelimiterTokenFilter.generateNumberParts()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateNumberParts()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateNumberParts*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the generateNumberParts property: A value indicating whether to generate number subwords. Default is true.'
  syntax:
    content: public Boolean generateNumberParts()
    return:
      type: java.lang.Boolean
      description: the generateNumberParts value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateWordParts()
  id: generateWordParts()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: generateWordParts()
  nameWithType: WordDelimiterTokenFilter.generateWordParts()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateWordParts()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateWordParts*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the generateWordParts property: A value indicating whether to generate part words. If set, causes parts of words to be generated; for example "AzureSearch" becomes "Azure" "Search". Default is true.'
  syntax:
    content: public Boolean generateWordParts()
    return:
      type: java.lang.Boolean
      description: the generateWordParts value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.getProtectedWords()
  id: getProtectedWords()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: getProtectedWords()
  nameWithType: WordDelimiterTokenFilter.getProtectedWords()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.getProtectedWords()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.getProtectedWords*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the protectedWords property: A list of tokens to protect from being delimited.'
  syntax:
    content: public List<String> getProtectedWords()
    return:
      type: java.util.List<java.lang.String>
      description: the protectedWords value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isPreserveOriginal()
  id: isPreserveOriginal()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: isPreserveOriginal()
  nameWithType: WordDelimiterTokenFilter.isPreserveOriginal()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isPreserveOriginal()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isPreserveOriginal*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the preserveOriginal property: A value indicating whether original words will be preserved and added to the subword list. Default is false.'
  syntax:
    content: public Boolean isPreserveOriginal()
    return:
      type: java.lang.Boolean
      description: the preserveOriginal value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isStemEnglishPossessive()
  id: isStemEnglishPossessive()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: isStemEnglishPossessive()
  nameWithType: WordDelimiterTokenFilter.isStemEnglishPossessive()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isStemEnglishPossessive()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isStemEnglishPossessive*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: "Get the stemEnglishPossessive property: A value indicating whether to remove trailing \"'s\" for each subword. Default is true."
  syntax:
    content: public Boolean isStemEnglishPossessive()
    return:
      type: java.lang.Boolean
      description: the stemEnglishPossessive value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setCatenateAll(java.lang.Boolean)
  id: setCatenateAll(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setCatenateAll(Boolean catenateAll)
  nameWithType: WordDelimiterTokenFilter.setCatenateAll(Boolean catenateAll)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setCatenateAll(Boolean catenateAll)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setCatenateAll*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the catenateAll property: A value indicating whether all subword parts will be catenated. For example, if this is set to true, "Azure-Search-1" becomes "AzureSearch1". Default is false.'
  syntax:
    content: public WordDelimiterTokenFilter setCatenateAll(Boolean catenateAll)
    parameters:
    - id: catenateAll
      type: java.lang.Boolean
      description: the catenateAll value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateNumberParts(java.lang.Boolean)
  id: setGenerateNumberParts(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setGenerateNumberParts(Boolean generateNumberParts)
  nameWithType: WordDelimiterTokenFilter.setGenerateNumberParts(Boolean generateNumberParts)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateNumberParts(Boolean generateNumberParts)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateNumberParts*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the generateNumberParts property: A value indicating whether to generate number subwords. Default is true.'
  syntax:
    content: public WordDelimiterTokenFilter setGenerateNumberParts(Boolean generateNumberParts)
    parameters:
    - id: generateNumberParts
      type: java.lang.Boolean
      description: the generateNumberParts value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateWordParts(java.lang.Boolean)
  id: setGenerateWordParts(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setGenerateWordParts(Boolean generateWordParts)
  nameWithType: WordDelimiterTokenFilter.setGenerateWordParts(Boolean generateWordParts)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateWordParts(Boolean generateWordParts)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateWordParts*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the generateWordParts property: A value indicating whether to generate part words. If set, causes parts of words to be generated; for example "AzureSearch" becomes "Azure" "Search". Default is true.'
  syntax:
    content: public WordDelimiterTokenFilter setGenerateWordParts(Boolean generateWordParts)
    parameters:
    - id: generateWordParts
      type: java.lang.Boolean
      description: the generateWordParts value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setNumbersCatenated(java.lang.Boolean)
  id: setNumbersCatenated(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setNumbersCatenated(Boolean numbersCatenated)
  nameWithType: WordDelimiterTokenFilter.setNumbersCatenated(Boolean numbersCatenated)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setNumbersCatenated(Boolean numbersCatenated)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setNumbersCatenated*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the catenateNumbers property: A value indicating whether maximum runs of number parts will be catenated. For example, if this is set to true, "1-2" becomes "12". Default is false.'
  syntax:
    content: public WordDelimiterTokenFilter setNumbersCatenated(Boolean numbersCatenated)
    parameters:
    - id: numbersCatenated
      type: java.lang.Boolean
      description: the catenateNumbers value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setPreserveOriginal(java.lang.Boolean)
  id: setPreserveOriginal(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setPreserveOriginal(Boolean preserveOriginal)
  nameWithType: WordDelimiterTokenFilter.setPreserveOriginal(Boolean preserveOriginal)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setPreserveOriginal(Boolean preserveOriginal)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setPreserveOriginal*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the preserveOriginal property: A value indicating whether original words will be preserved and added to the subword list. Default is false.'
  syntax:
    content: public WordDelimiterTokenFilter setPreserveOriginal(Boolean preserveOriginal)
    parameters:
    - id: preserveOriginal
      type: java.lang.Boolean
      description: the preserveOriginal value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords(java.lang.String...)
  id: setProtectedWords(java.lang.String...)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setProtectedWords(String[] protectedWords)
  nameWithType: WordDelimiterTokenFilter.setProtectedWords(String[] protectedWords)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords(String[] protectedWords)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the protectedWords property: A list of tokens to protect from being delimited.'
  syntax:
    content: public WordDelimiterTokenFilter setProtectedWords(String[] protectedWords)
    parameters:
    - id: protectedWords
      type: java.lang.String[]
      description: the protectedWords value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords(java.util.List<java.lang.String>)
  id: setProtectedWords(java.util.List<java.lang.String>)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setProtectedWords(List<String> protectedWords)
  nameWithType: WordDelimiterTokenFilter.setProtectedWords(List<String> protectedWords)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords(List<String> protectedWords)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the protectedWords property: A list of tokens to protect from being delimited.'
  syntax:
    content: public WordDelimiterTokenFilter setProtectedWords(List<String> protectedWords)
    parameters:
    - id: protectedWords
      type: java.util.List<java.lang.String>
      description: the protectedWords value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnCaseChange(java.lang.Boolean)
  id: setSplitOnCaseChange(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setSplitOnCaseChange(Boolean splitOnCaseChange)
  nameWithType: WordDelimiterTokenFilter.setSplitOnCaseChange(Boolean splitOnCaseChange)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnCaseChange(Boolean splitOnCaseChange)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnCaseChange*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the splitOnCaseChange property: A value indicating whether to split words on caseChange. For example, if this is set to true, "AzureSearch" becomes "Azure" "Search". Default is true.'
  syntax:
    content: public WordDelimiterTokenFilter setSplitOnCaseChange(Boolean splitOnCaseChange)
    parameters:
    - id: splitOnCaseChange
      type: java.lang.Boolean
      description: the splitOnCaseChange value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnNumerics(java.lang.Boolean)
  id: setSplitOnNumerics(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setSplitOnNumerics(Boolean splitOnNumerics)
  nameWithType: WordDelimiterTokenFilter.setSplitOnNumerics(Boolean splitOnNumerics)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnNumerics(Boolean splitOnNumerics)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnNumerics*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the splitOnNumerics property: A value indicating whether to split on numbers. For example, if this is set to true, "Azure1Search" becomes "Azure" "1" "Search". Default is true.'
  syntax:
    content: public WordDelimiterTokenFilter setSplitOnNumerics(Boolean splitOnNumerics)
    parameters:
    - id: splitOnNumerics
      type: java.lang.Boolean
      description: the splitOnNumerics value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setStemEnglishPossessive(java.lang.Boolean)
  id: setStemEnglishPossessive(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setStemEnglishPossessive(Boolean stemEnglishPossessive)
  nameWithType: WordDelimiterTokenFilter.setStemEnglishPossessive(Boolean stemEnglishPossessive)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setStemEnglishPossessive(Boolean stemEnglishPossessive)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setStemEnglishPossessive*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: "Set the stemEnglishPossessive property: A value indicating whether to remove trailing \"'s\" for each subword. Default is true."
  syntax:
    content: public WordDelimiterTokenFilter setStemEnglishPossessive(Boolean stemEnglishPossessive)
    parameters:
    - id: stemEnglishPossessive
      type: java.lang.Boolean
      description: the stemEnglishPossessive value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setWordsCatenated(java.lang.Boolean)
  id: setWordsCatenated(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: setWordsCatenated(Boolean wordsCatenated)
  nameWithType: WordDelimiterTokenFilter.setWordsCatenated(Boolean wordsCatenated)
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setWordsCatenated(Boolean wordsCatenated)
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setWordsCatenated*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the catenateWords property: A value indicating whether maximum runs of word parts will be catenated. For example, if this is set to true, "Azure-Search" becomes "AzureSearch". Default is false.'
  syntax:
    content: public WordDelimiterTokenFilter setWordsCatenated(Boolean wordsCatenated)
    parameters:
    - id: wordsCatenated
      type: java.lang.Boolean
      description: the catenateWords value to set.
    return:
      type: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
      description: the WordDelimiterTokenFilter object itself.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnCaseChange()
  id: splitOnCaseChange()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: splitOnCaseChange()
  nameWithType: WordDelimiterTokenFilter.splitOnCaseChange()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnCaseChange()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnCaseChange*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the splitOnCaseChange property: A value indicating whether to split words on caseChange. For example, if this is set to true, "AzureSearch" becomes "Azure" "Search". Default is true.'
  syntax:
    content: public Boolean splitOnCaseChange()
    return:
      type: java.lang.Boolean
      description: the splitOnCaseChange value.
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnNumerics()
  id: splitOnNumerics()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter
  langs:
  - java
  name: splitOnNumerics()
  nameWithType: WordDelimiterTokenFilter.splitOnNumerics()
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnNumerics()
  overload: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnNumerics*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the splitOnNumerics property: A value indicating whether to split on numbers. For example, if this is set to true, "Azure1Search" becomes "Azure" "1" "Search". Default is true.'
  syntax:
    content: public Boolean splitOnNumerics()
    return:
      type: java.lang.Boolean
      description: the splitOnNumerics value.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.WordDelimiterTokenFilter*
  name: WordDelimiterTokenFilter
  nameWithType: WordDelimiterTokenFilter.WordDelimiterTokenFilter
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.WordDelimiterTokenFilter
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateWordParts*
  name: generateWordParts
  nameWithType: WordDelimiterTokenFilter.generateWordParts
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateWordParts
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateWordParts*
  name: setGenerateWordParts
  nameWithType: WordDelimiterTokenFilter.setGenerateWordParts
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateWordParts
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateNumberParts*
  name: generateNumberParts
  nameWithType: WordDelimiterTokenFilter.generateNumberParts
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.generateNumberParts
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateNumberParts*
  name: setGenerateNumberParts
  nameWithType: WordDelimiterTokenFilter.setGenerateNumberParts
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setGenerateNumberParts
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areWordsCatenated*
  name: areWordsCatenated
  nameWithType: WordDelimiterTokenFilter.areWordsCatenated
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areWordsCatenated
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setWordsCatenated*
  name: setWordsCatenated
  nameWithType: WordDelimiterTokenFilter.setWordsCatenated
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setWordsCatenated
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areNumbersCatenated*
  name: areNumbersCatenated
  nameWithType: WordDelimiterTokenFilter.areNumbersCatenated
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.areNumbersCatenated
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setNumbersCatenated*
  name: setNumbersCatenated
  nameWithType: WordDelimiterTokenFilter.setNumbersCatenated
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setNumbersCatenated
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.catenateAll*
  name: catenateAll
  nameWithType: WordDelimiterTokenFilter.catenateAll
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.catenateAll
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setCatenateAll*
  name: setCatenateAll
  nameWithType: WordDelimiterTokenFilter.setCatenateAll
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setCatenateAll
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnCaseChange*
  name: splitOnCaseChange
  nameWithType: WordDelimiterTokenFilter.splitOnCaseChange
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnCaseChange
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnCaseChange*
  name: setSplitOnCaseChange
  nameWithType: WordDelimiterTokenFilter.setSplitOnCaseChange
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnCaseChange
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isPreserveOriginal*
  name: isPreserveOriginal
  nameWithType: WordDelimiterTokenFilter.isPreserveOriginal
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isPreserveOriginal
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setPreserveOriginal*
  name: setPreserveOriginal
  nameWithType: WordDelimiterTokenFilter.setPreserveOriginal
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setPreserveOriginal
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnNumerics*
  name: splitOnNumerics
  nameWithType: WordDelimiterTokenFilter.splitOnNumerics
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.splitOnNumerics
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnNumerics*
  name: setSplitOnNumerics
  nameWithType: WordDelimiterTokenFilter.setSplitOnNumerics
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setSplitOnNumerics
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isStemEnglishPossessive*
  name: isStemEnglishPossessive
  nameWithType: WordDelimiterTokenFilter.isStemEnglishPossessive
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.isStemEnglishPossessive
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setStemEnglishPossessive*
  name: setStemEnglishPossessive
  nameWithType: WordDelimiterTokenFilter.setStemEnglishPossessive
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setStemEnglishPossessive
  package: com.azure.search.documents.indexes.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.getProtectedWords*
  name: getProtectedWords
  nameWithType: WordDelimiterTokenFilter.getProtectedWords
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.getProtectedWords
  package: com.azure.search.documents.indexes.models
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords*
  name: setProtectedWords
  nameWithType: WordDelimiterTokenFilter.setProtectedWords
  fullName: com.azure.search.documents.indexes.models.WordDelimiterTokenFilter.setProtectedWords
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.TokenFilter
  name: TokenFilter
  nameWithType: TokenFilter
  fullName: com.azure.search.documents.indexes.models.TokenFilter
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.search.documents.indexes.models.TokenFilter.getName()
  name: TokenFilter.getName()
  nameWithType: TokenFilter.getName()
  fullName: com.azure.search.documents.indexes.models.TokenFilter.getName()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
