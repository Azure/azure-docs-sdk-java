### YamlMime:JavaType
uid: "org.apache.commons.codec.binary.Base32"
fullName: "org.apache.commons.codec.binary.Base32"
name: "Base32"
nameWithType: "Base32"
summary: "Provides Base32 encoding and decoding as defined by [RFC 4648][].\n\nThe class can be parameterized in the following manner with various constructors:\n\n *  Whether to use the \"base32hex\" variant instead of the default \"base32\"\n *  Line length: Default 76. Line length that aren't multiples of 8 will still essentially end up being multiples of 8 in the encoded data.\n *  Line separator: Default is CRLF (\"\\\\r\\\\n\")\n\nThis class operates directly on byte streams, and not character streams.\n\nThis class is thread-safe.\n\n\n[RFC 4648]: http://www.ietf.org/rfc/rfc4648.txt"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.commons.codec.binary.BaseNCodec\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.decode(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.Object)"
- "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.String)"
- "org.apache.commons.codec.binary.BaseNCodec.encode(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int)"
- "org.apache.commons.codec.binary.BaseNCodec.encode(java.lang.Object)"
- "org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec.Context)"
- "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()"
- "org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte)"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)"
- "org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(java.lang.String)"
- "org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte)"
syntax: "public class Base32 extends BaseNCodec"
constructors:
- "org.apache.commons.codec.binary.Base32.Base32()"
- "org.apache.commons.codec.binary.Base32.Base32(boolean)"
- "org.apache.commons.codec.binary.Base32.Base32(boolean,byte)"
- "org.apache.commons.codec.binary.Base32.Base32(byte)"
- "org.apache.commons.codec.binary.Base32.Base32(int)"
- "org.apache.commons.codec.binary.Base32.Base32(int,byte[])"
- "org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean)"
- "org.apache.commons.codec.binary.Base32.Base32(int,byte[],boolean,byte)"
methods:
- "org.apache.commons.codec.binary.Base32.isInAlphabet(byte)"
type: "class"
metadata: {}
package: "org.apache.commons.codec.binary"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
