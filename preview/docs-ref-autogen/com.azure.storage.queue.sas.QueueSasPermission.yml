### YamlMime:JavaType
uid: "com.azure.storage.queue.sas.QueueSasPermission"
fullName: "com.azure.storage.queue.sas.QueueSasPermission"
name: "QueueSasPermission"
nameWithType: "QueueSasPermission"
summary: "Constructs a string representing the permissions granted by an Azure Service SAS to a queue."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class QueueSasPermission"
constructors:
- uid: "com.azure.storage.queue.sas.QueueSasPermission.QueueSasPermission()"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.QueueSasPermission()"
  name: "QueueSasPermission()"
  nameWithType: "QueueSasPermission.QueueSasPermission()"
  summary: "Initializes a <xref uid=\"com.azure.storage.queue.sas.QueueSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueSasPermission\"></xref> object with all fields set to false."
  syntax: "public QueueSasPermission()"
  desc: "Initializes a <xref uid=\"com.azure.storage.queue.sas.QueueSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueSasPermission\"></xref> object with all fields set to false."
methods:
- uid: "com.azure.storage.queue.sas.QueueSasPermission.hasAddPermission()"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.hasAddPermission()"
  name: "hasAddPermission()"
  nameWithType: "QueueSasPermission.hasAddPermission()"
  summary: "Gets the add permission status."
  syntax: "public boolean hasAddPermission()"
  desc: "Gets the add permission status."
  returns:
    description: "<code>true</code> if SAS has permission to add messages to the queue. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.hasProcessPermission()"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.hasProcessPermission()"
  name: "hasProcessPermission()"
  nameWithType: "QueueSasPermission.hasProcessPermission()"
  summary: "Gets the process permission status."
  syntax: "public boolean hasProcessPermission()"
  desc: "Gets the process permission status."
  returns:
    description: "<code>true</code> if SAS has permission to get and delete messages from the queue. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.hasReadPermission()"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.hasReadPermission()"
  name: "hasReadPermission()"
  nameWithType: "QueueSasPermission.hasReadPermission()"
  summary: "Gets the read permissions status."
  syntax: "public boolean hasReadPermission()"
  desc: "Gets the read permissions status."
  returns:
    description: "<code>true</code> if SAS has permission to read metadata, properties, message count, peek at messages.\n <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.hasUpdatePermission()"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.hasUpdatePermission()"
  name: "hasUpdatePermission()"
  nameWithType: "QueueSasPermission.hasUpdatePermission()"
  summary: "Gets the update permission status."
  syntax: "public boolean hasUpdatePermission()"
  desc: "Gets the update permission status."
  returns:
    description: "<code>true</code> if SAS has permission to update messages in the queue. <code>false</code>, otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.parse(java.lang.String)"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.parse(String permissionString)"
  name: "parse(String permissionString)"
  nameWithType: "QueueSasPermission.parse(String permissionString)"
  summary: "Creates a <xref uid=\"com.azure.storage.queue.sas.QueueSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueSasPermission\"></xref> from the specified permissions string."
  modifiers:
  - "static"
  parameters:
  - description: "A <code>String</code> which represents the <code>QueueSasPermission</code>."
    name: "permissionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static QueueSasPermission parse(String permissionString)"
  desc: "Creates a <xref uid=\"com.azure.storage.queue.sas.QueueSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueSasPermission\"></xref> from the specified permissions string. This method will throw an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> if it encounters a character that does not correspond to a valid permission."
  returns:
    description: "A <code>QueueSasPermission</code> generated from the given <code>String</code>."
    type: "<xref href=\"com.azure.storage.queue.sas.QueueSasPermission?alt=com.azure.storage.queue.sas.QueueSasPermission&text=QueueSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.setAddPermission(boolean)"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.setAddPermission(boolean hasAddPermission)"
  name: "setAddPermission(boolean hasAddPermission)"
  nameWithType: "QueueSasPermission.setAddPermission(boolean hasAddPermission)"
  summary: "Sets the add permission status."
  parameters:
  - description: "<code>true</code> if SAS has permission to add messages to the queue. <code>false</code>,\n otherwise."
    name: "hasAddPermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueSasPermission setAddPermission(boolean hasAddPermission)"
  desc: "Sets the add permission status."
  returns:
    description: "the updated QueueSasPermission object."
    type: "<xref href=\"com.azure.storage.queue.sas.QueueSasPermission?alt=com.azure.storage.queue.sas.QueueSasPermission&text=QueueSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.setProcessPermission(boolean)"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.setProcessPermission(boolean hasProcessPermission)"
  name: "setProcessPermission(boolean hasProcessPermission)"
  nameWithType: "QueueSasPermission.setProcessPermission(boolean hasProcessPermission)"
  summary: "Sets the process permission status."
  parameters:
  - description: "<code>true</code> if SAS has permission to get and delete messages from the queue.\n <code>false</code>, otherwise."
    name: "hasProcessPermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueSasPermission setProcessPermission(boolean hasProcessPermission)"
  desc: "Sets the process permission status."
  returns:
    description: "the updated QueueSasPermission object."
    type: "<xref href=\"com.azure.storage.queue.sas.QueueSasPermission?alt=com.azure.storage.queue.sas.QueueSasPermission&text=QueueSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.setReadPermission(boolean)"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.setReadPermission(boolean hasReadPermission)"
  name: "setReadPermission(boolean hasReadPermission)"
  nameWithType: "QueueSasPermission.setReadPermission(boolean hasReadPermission)"
  summary: "Sets the read permission status."
  parameters:
  - description: "<code>true</code> if SAS has permission to read metadata, properties, message count, peek at\n messages. <code>false</code>, otherwise."
    name: "hasReadPermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueSasPermission setReadPermission(boolean hasReadPermission)"
  desc: "Sets the read permission status."
  returns:
    description: "The updated QueueSasPermission object."
    type: "<xref href=\"com.azure.storage.queue.sas.QueueSasPermission?alt=com.azure.storage.queue.sas.QueueSasPermission&text=QueueSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.setUpdatePermission(boolean)"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.setUpdatePermission(boolean hasUpdatePermission)"
  name: "setUpdatePermission(boolean hasUpdatePermission)"
  nameWithType: "QueueSasPermission.setUpdatePermission(boolean hasUpdatePermission)"
  summary: "Sets the update permission status."
  parameters:
  - description: "<code>true</code> if SAS has permission to update messages in the queue. <code>false</code>,\n otherwise."
    name: "hasUpdatePermission"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueSasPermission setUpdatePermission(boolean hasUpdatePermission)"
  desc: "Sets the update permission status.\n\n**Note:** Use <xref uid=\"com.azure.storage.queue.sas.QueueSasPermission.setProcessPermission(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setProcessPermission(true)\"></xref> to get a particular message in the queue to update."
  returns:
    description: "the updated QueueSasPermission object."
    type: "<xref href=\"com.azure.storage.queue.sas.QueueSasPermission?alt=com.azure.storage.queue.sas.QueueSasPermission&text=QueueSasPermission\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.queue.sas.QueueSasPermission.toString()"
  fullName: "com.azure.storage.queue.sas.QueueSasPermission.toString()"
  name: "toString()"
  nameWithType: "QueueSasPermission.toString()"
  summary: "Converts the given permissions to a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>."
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  desc: "Converts the given permissions to a <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref>. Using this method will guarantee the permissions are in an order accepted by the service."
  returns:
    description: "A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> which represents the <xref uid=\"com.azure.storage.queue.sas.QueueSasPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueSasPermission\"></xref>."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Constructs a string representing the permissions granted by an Azure Service SAS to a queue. Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the values are set, this should be serialized with <xref uid=\"com.azure.storage.queue.sas.QueueSasPermission.toString()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"toString\"></xref> and set as the permissions field on <xref uid=\"com.azure.storage.queue.sas.QueueServiceSasSignatureValues.setPermissions(com.azure.storage.queue.sas.QueueSasPermission)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueServiceSasSignatureValues\"></xref>.\n\nIt is possible to construct the permissions string without this class, but the order of the permissions is particular and this class guarantees correctness."
metadata: {}
package: "com.azure.storage.queue.sas"
artifact: com.azure:azure-storage-queue:12.14.0-beta.1
