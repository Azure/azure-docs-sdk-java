### YamlMime:JavaType
uid: "com.azure.quantum.jobs.JobsAsyncClient"
fullName: "com.azure.quantum.jobs.JobsAsyncClient"
name: "JobsAsyncClient"
nameWithType: "JobsAsyncClient"
summary: "Initializes a new instance of the asynchronous Quantum<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class JobsAsyncClient"
methods:
- uid: "com.azure.quantum.jobs.JobsAsyncClient.cancel(java.lang.String)"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.cancel(String jobId)"
  name: "cancel(String jobId)"
  nameWithType: "JobsAsyncClient.cancel(String jobId)"
  summary: "Cancel a job."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> cancel(String jobId)"
  desc: "Cancel a job."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.cancelWithResponse(java.lang.String)"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.cancelWithResponse(String jobId)"
  name: "cancelWithResponse(String jobId)"
  nameWithType: "JobsAsyncClient.cancelWithResponse(String jobId)"
  summary: "Cancel a job."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> cancelWithResponse(String jobId)"
  desc: "Cancel a job."
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.create(java.lang.String,com.azure.quantum.jobs.models.JobDetails)"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.create(String jobId, JobDetails job)"
  name: "create(String jobId, JobDetails job)"
  nameWithType: "JobsAsyncClient.create(String jobId, JobDetails job)"
  summary: "Create a job."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The complete metadata of the job to submit."
    name: "job"
    type: "<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<JobDetails> create(String jobId, JobDetails job)"
  desc: "Create a job."
  returns:
    description: "job details."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.createWithResponse(java.lang.String,com.azure.quantum.jobs.models.JobDetails)"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.createWithResponse(String jobId, JobDetails job)"
  name: "createWithResponse(String jobId, JobDetails job)"
  nameWithType: "JobsAsyncClient.createWithResponse(String jobId, JobDetails job)"
  summary: "Create a job."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The complete metadata of the job to submit."
    name: "job"
    type: "<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<JobDetails>> createWithResponse(String jobId, JobDetails job)"
  desc: "Create a job."
  returns:
    description: "job details."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.get(java.lang.String)"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.get(String jobId)"
  name: "get(String jobId)"
  nameWithType: "JobsAsyncClient.get(String jobId)"
  summary: "Get job by id."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<JobDetails> get(String jobId)"
  desc: "Get job by id."
  returns:
    description: "job by id."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.getWithResponse(java.lang.String)"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.getWithResponse(String jobId)"
  name: "getWithResponse(String jobId)"
  nameWithType: "JobsAsyncClient.getWithResponse(String jobId)"
  summary: "Get job by id."
  parameters:
  - description: "Id of the job."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<JobDetails>> getWithResponse(String jobId)"
  desc: "Get job by id."
  returns:
    description: "job by id."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.list()"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.list()"
  name: "list()"
  nameWithType: "JobsAsyncClient.list()"
  summary: "List jobs."
  syntax: "public PagedFlux<JobDetails> list()"
  desc: "List jobs."
  returns:
    description: "list of job details."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.listNextSinglePage(java.lang.String)"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.listNextSinglePage(String nextLink)"
  name: "listNextSinglePage(String nextLink)"
  nameWithType: "JobsAsyncClient.listNextSinglePage(String nextLink)"
  summary: "Get the next page of items."
  parameters:
  - description: "The nextLink parameter."
    name: "nextLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PagedResponse<JobDetails>> listNextSinglePage(String nextLink)"
  desc: "Get the next page of items."
  returns:
    description: "list of job details."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.quantum.jobs.JobsAsyncClient.listSinglePage()"
  fullName: "com.azure.quantum.jobs.JobsAsyncClient.listSinglePage()"
  name: "listSinglePage()"
  nameWithType: "JobsAsyncClient.listSinglePage()"
  summary: "List jobs."
  syntax: "public Mono<PagedResponse<JobDetails>> listSinglePage()"
  desc: "List jobs."
  returns:
    description: "list of job details."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.JobDetails?alt=com.azure.quantum.jobs.models.JobDetails&text=JobDetails\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous QuantumClient type."
metadata: {}
package: "com.azure.quantum.jobs"
artifact: com.azure:azure-quantum-jobs:1.0.0-beta.1
