### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour"
fullName: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour"
name: "Base64Variant.PaddingReadBehaviour"
nameWithType: "Base64Variant.PaddingReadBehaviour"
summary: "Defines how the Base64Variant deals with Padding while reading"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum Base64Variant.PaddingReadBehaviour extends Enum<Base64Variant.PaddingReadBehaviour>"
fields:
- uid: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.PADDING_ALLOWED"
  fullName: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.PADDING_ALLOWED"
  name: "PADDING_ALLOWED"
  nameWithType: "Base64Variant.PaddingReadBehaviour.PADDING_ALLOWED"
  summary: "Padding is allowed but not required in Base64 content being read: no exception thrown based on existence or absence, as long as proper padding characters are used."
- uid: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.PADDING_FORBIDDEN"
  fullName: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.PADDING_FORBIDDEN"
  name: "PADDING_FORBIDDEN"
  nameWithType: "Base64Variant.PaddingReadBehaviour.PADDING_FORBIDDEN"
  summary: "Padding is not allowed in Base64 content being read (finding something that looks like padding at the end of content results in an exception)"
- uid: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.PADDING_REQUIRED"
  fullName: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.PADDING_REQUIRED"
  name: "PADDING_REQUIRED"
  nameWithType: "Base64Variant.PaddingReadBehaviour.PADDING_REQUIRED"
  summary: "Padding is required in Base64 content being read (missing padding for incomplete ending quartet results in an exception)"
methods:
- uid: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "Base64Variant.PaddingReadBehaviour.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Base64Variant.PaddingReadBehaviour valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour?alt=com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour&text=PaddingReadBehaviour\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.values()"
  fullName: "com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour.values()"
  name: "values()"
  nameWithType: "Base64Variant.PaddingReadBehaviour.values()"
  syntax: "public static Base64Variant.PaddingReadBehaviour[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour?alt=com.fasterxml.jackson.core.Base64Variant.PaddingReadBehaviour&text=PaddingReadBehaviour\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
