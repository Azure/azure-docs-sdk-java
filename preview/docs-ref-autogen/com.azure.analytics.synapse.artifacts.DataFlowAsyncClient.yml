### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient"
name: "DataFlowAsyncClient"
nameWithType: "DataFlowAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataFlowAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.createOrUpdateDataFlow(java.lang.String,com.azure.analytics.synapse.artifacts.models.DataFlowResource)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow)"
  name: "createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow)"
  nameWithType: "DataFlowAsyncClient.createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow)"
  summary: "Creates or updates a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Data flow resource definition."
    name: "dataFlow"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DataFlowResource> createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow)"
  desc: "Creates or updates a data flow."
  returns:
    description: "data flow resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.createOrUpdateDataFlow(java.lang.String,com.azure.analytics.synapse.artifacts.models.DataFlowResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  name: "createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  nameWithType: "DataFlowAsyncClient.createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  summary: "Creates or updates a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Data flow resource definition."
    name: "dataFlow"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the data flow entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DataFlowResource> createOrUpdateDataFlow(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  desc: "Creates or updates a data flow."
  returns:
    description: "data flow resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.createOrUpdateDataFlowWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.DataFlowResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.createOrUpdateDataFlowWithResponse(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  name: "createOrUpdateDataFlowWithResponse(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  nameWithType: "DataFlowAsyncClient.createOrUpdateDataFlowWithResponse(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  summary: "Creates or updates a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Data flow resource definition."
    name: "dataFlow"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the data flow entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<DataFlowResource>> createOrUpdateDataFlowWithResponse(String dataFlowName, DataFlowResource dataFlow, String ifMatch)"
  desc: "Creates or updates a data flow."
  returns:
    description: "data flow resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.deleteDataFlow(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.deleteDataFlow(String dataFlowName)"
  name: "deleteDataFlow(String dataFlowName)"
  nameWithType: "DataFlowAsyncClient.deleteDataFlow(String dataFlowName)"
  summary: "Deletes a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteDataFlow(String dataFlowName)"
  desc: "Deletes a data flow."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.deleteDataFlowWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.deleteDataFlowWithResponse(String dataFlowName)"
  name: "deleteDataFlowWithResponse(String dataFlowName)"
  nameWithType: "DataFlowAsyncClient.deleteDataFlowWithResponse(String dataFlowName)"
  summary: "Deletes a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteDataFlowWithResponse(String dataFlowName)"
  desc: "Deletes a data flow."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlow(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlow(String dataFlowName)"
  name: "getDataFlow(String dataFlowName)"
  nameWithType: "DataFlowAsyncClient.getDataFlow(String dataFlowName)"
  summary: "Gets a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DataFlowResource> getDataFlow(String dataFlowName)"
  desc: "Gets a data flow."
  returns:
    description: "a data flow on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlow(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlow(String dataFlowName, String ifNoneMatch)"
  name: "getDataFlow(String dataFlowName, String ifNoneMatch)"
  nameWithType: "DataFlowAsyncClient.getDataFlow(String dataFlowName, String ifNoneMatch)"
  summary: "Gets a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the data flow entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DataFlowResource> getDataFlow(String dataFlowName, String ifNoneMatch)"
  desc: "Gets a data flow."
  returns:
    description: "a data flow on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlowWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlowWithResponse(String dataFlowName, String ifNoneMatch)"
  name: "getDataFlowWithResponse(String dataFlowName, String ifNoneMatch)"
  nameWithType: "DataFlowAsyncClient.getDataFlowWithResponse(String dataFlowName, String ifNoneMatch)"
  summary: "Gets a data flow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the data flow entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<DataFlowResource>> getDataFlowWithResponse(String dataFlowName, String ifNoneMatch)"
  desc: "Gets a data flow."
  returns:
    description: "a data flow along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlowsByWorkspace()"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.getDataFlowsByWorkspace()"
  name: "getDataFlowsByWorkspace()"
  nameWithType: "DataFlowAsyncClient.getDataFlowsByWorkspace()"
  summary: "Lists data flows."
  syntax: "public PagedFlux<DataFlowResource> getDataFlowsByWorkspace()"
  desc: "Lists data flows."
  returns:
    description: "a list of data flow resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.DataFlowResource?alt=com.azure.analytics.synapse.artifacts.models.DataFlowResource&text=DataFlowResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.renameDataFlow(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.renameDataFlow(String dataFlowName, ArtifactRenameRequest request)"
  name: "renameDataFlow(String dataFlowName, ArtifactRenameRequest request)"
  nameWithType: "DataFlowAsyncClient.renameDataFlow(String dataFlowName, ArtifactRenameRequest request)"
  summary: "Renames a dataflow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> renameDataFlow(String dataFlowName, ArtifactRenameRequest request)"
  desc: "Renames a dataflow."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.renameDataFlowWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.DataFlowAsyncClient.renameDataFlowWithResponse(String dataFlowName, ArtifactRenameRequest request)"
  name: "renameDataFlowWithResponse(String dataFlowName, ArtifactRenameRequest request)"
  nameWithType: "DataFlowAsyncClient.renameDataFlowWithResponse(String dataFlowName, ArtifactRenameRequest request)"
  summary: "Renames a dataflow."
  parameters:
  - description: "The data flow name."
    name: "dataFlowName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> renameDataFlowWithResponse(String dataFlowName, ArtifactRenameRequest request)"
  desc: "Renames a dataflow."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
