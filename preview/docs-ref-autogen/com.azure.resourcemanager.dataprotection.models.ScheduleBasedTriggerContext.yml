### YamlMime:JavaType
uid: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext"
fullName: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext"
name: "ScheduleBasedTriggerContext"
nameWithType: "ScheduleBasedTriggerContext"
summary: "ScheduleBasedTriggerContext Schedule based trigger context."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.dataprotection.models.TriggerContext?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.dataprotection.models.TriggerContext.validate()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ScheduleBasedTriggerContext extends TriggerContext"
constructors:
- uid: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.ScheduleBasedTriggerContext()"
  fullName: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.ScheduleBasedTriggerContext()"
  name: "ScheduleBasedTriggerContext()"
  nameWithType: "ScheduleBasedTriggerContext.ScheduleBasedTriggerContext()"
  syntax: "public ScheduleBasedTriggerContext()"
methods:
- uid: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.schedule()"
  fullName: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.schedule()"
  name: "schedule()"
  nameWithType: "ScheduleBasedTriggerContext.schedule()"
  summary: "Get the schedule property: BackupSchedule Schedule for this backup."
  syntax: "public BackupSchedule schedule()"
  returns:
    description: "the schedule value."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupSchedule?alt=com.azure.resourcemanager.dataprotection.models.BackupSchedule&text=BackupSchedule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.taggingCriteria()"
  fullName: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.taggingCriteria()"
  name: "taggingCriteria()"
  nameWithType: "ScheduleBasedTriggerContext.taggingCriteria()"
  summary: "Get the taggingCriteria property: List of tags that can be applicable for given schedule."
  syntax: "public List<TaggingCriteria> taggingCriteria()"
  returns:
    description: "the taggingCriteria value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.TaggingCriteria?alt=com.azure.resourcemanager.dataprotection.models.TaggingCriteria&text=TaggingCriteria\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.validate()"
  fullName: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.validate()"
  name: "validate()"
  nameWithType: "ScheduleBasedTriggerContext.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.dataprotection.models.TriggerContext.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.withSchedule(com.azure.resourcemanager.dataprotection.models.BackupSchedule)"
  fullName: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.withSchedule(BackupSchedule schedule)"
  name: "withSchedule(BackupSchedule schedule)"
  nameWithType: "ScheduleBasedTriggerContext.withSchedule(BackupSchedule schedule)"
  summary: "Set the schedule property: BackupSchedule Schedule for this backup."
  parameters:
  - description: "the schedule value to set."
    name: "schedule"
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupSchedule?alt=com.azure.resourcemanager.dataprotection.models.BackupSchedule&text=BackupSchedule\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ScheduleBasedTriggerContext withSchedule(BackupSchedule schedule)"
  returns:
    description: "the ScheduleBasedTriggerContext object itself."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext?alt=com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext&text=ScheduleBasedTriggerContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.withTaggingCriteria(java.util.List<com.azure.resourcemanager.dataprotection.models.TaggingCriteria>)"
  fullName: "com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext.withTaggingCriteria(List<TaggingCriteria> taggingCriteria)"
  name: "withTaggingCriteria(List<TaggingCriteria> taggingCriteria)"
  nameWithType: "ScheduleBasedTriggerContext.withTaggingCriteria(List<TaggingCriteria> taggingCriteria)"
  summary: "Set the taggingCriteria property: List of tags that can be applicable for given schedule."
  parameters:
  - description: "the taggingCriteria value to set."
    name: "taggingCriteria"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.TaggingCriteria?alt=com.azure.resourcemanager.dataprotection.models.TaggingCriteria&text=TaggingCriteria\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ScheduleBasedTriggerContext withTaggingCriteria(List<TaggingCriteria> taggingCriteria)"
  returns:
    description: "the ScheduleBasedTriggerContext object itself."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext?alt=com.azure.resourcemanager.dataprotection.models.ScheduleBasedTriggerContext&text=ScheduleBasedTriggerContext\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.dataprotection.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-dataprotection:1.0.0-beta.1
