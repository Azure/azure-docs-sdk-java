### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValues*"
fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValues"
name: "writeValues"
nameWithType: "ObjectWriter.writeValues"
members:
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(com.fasterxml.jackson.core.JsonGenerator)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(JsonGenerator g)"
  name: "writeValues(JsonGenerator g)"
  nameWithType: "ObjectWriter.writeValues(JsonGenerator g)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write a sequence of root values using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure that all content gets flushed by the generator. However, since a <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref> is explicitly passed, it will NOT be closed when <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref> is called."
  parameters:
  - description: "Low-level generator caller has already constructed that will\n   be used for actual writing of token stream."
    name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValues(JsonGenerator g)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.DataOutput)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(DataOutput out)"
  name: "writeValues(DataOutput out)"
  nameWithType: "ObjectWriter.writeValues(DataOutput out)"
  parameters:
  - name: "out"
    type: "<xref href=\"java.io.DataOutput?alt=java.io.DataOutput&text=DataOutput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValues(DataOutput out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.File)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(File out)"
  name: "writeValues(File out)"
  nameWithType: "ObjectWriter.writeValues(File out)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write a sequence of root values using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure closing of underlying generator and output stream."
  parameters:
  - description: "Target file to write value sequence to."
    name: "out"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValues(File out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.OutputStream)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(OutputStream out)"
  name: "writeValues(OutputStream out)"
  nameWithType: "ObjectWriter.writeValues(OutputStream out)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write a sequence of root values using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure closing of underlying generator and output stream."
  parameters:
  - description: "Physical output stream to use for writing the token stream"
    name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValues(OutputStream out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.Writer)"
  fullName: "com.fasterxml.jackson.databind.ObjectWriter.writeValues(Writer out)"
  name: "writeValues(Writer out)"
  nameWithType: "ObjectWriter.writeValues(Writer out)"
  summary: "Method for creating a <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter\"></xref> to write a sequence of root values using configuration of this <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid=\"com.fasterxml.jackson.databind.SequenceWriter.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SequenceWriter#close()\"></xref>d after all values have been written to ensure closing of underlying generator and output stream."
  parameters:
  - description: "Target writer to use for writing the token stream"
    name: "out"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SequenceWriter writeValues(Writer out)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.SequenceWriter?alt=com.fasterxml.jackson.databind.SequenceWriter&text=SequenceWriter\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
