### YamlMime:JavaType
uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset"
fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset"
name: "ExportDataset"
nameWithType: "ExportDataset"
summary: "The definition for data in the export."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ExportDataset**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportDataset?alt=com.azure.resourcemanager.costmanagement.models.ExportDataset&text=ExportDataset\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.ExportDataset()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.ExportDataset()"
  name: "ExportDataset()"
  nameWithType: "ExportDataset.ExportDataset()"
  summary: "Creates an instance of Export<wbr>Dataset class."
  syntax: "public ExportDataset()"
  desc: "Creates an instance of ExportDataset class."
methods:
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.configuration()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.configuration()"
  name: "configuration()"
  nameWithType: "ExportDataset.configuration()"
  summary: "Get the configuration property: The export dataset configuration."
  syntax: "public ExportDatasetConfiguration configuration()"
  desc: "Get the configuration property: The export dataset configuration."
  returns:
    description: "the configuration value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportDatasetConfiguration?alt=com.azure.resourcemanager.costmanagement.models.ExportDatasetConfiguration&text=ExportDatasetConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ExportDataset.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Export<wbr>Dataset from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ExportDataset fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the ExportDataset."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ExportDataset from the JsonReader."
  returns:
    description: "An instance of ExportDataset if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportDataset?alt=com.azure.resourcemanager.costmanagement.models.ExportDataset&text=ExportDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.granularity()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.granularity()"
  name: "granularity()"
  nameWithType: "ExportDataset.granularity()"
  summary: "Get the granularity property: The granularity of rows in the export."
  syntax: "public GranularityType granularity()"
  desc: "Get the granularity property: The granularity of rows in the export. Currently only 'Daily' is supported."
  returns:
    description: "the granularity value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.GranularityType?alt=com.azure.resourcemanager.costmanagement.models.GranularityType&text=GranularityType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ExportDataset.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.validate()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.validate()"
  name: "validate()"
  nameWithType: "ExportDataset.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.withConfiguration(com.azure.resourcemanager.costmanagement.models.ExportDatasetConfiguration)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.withConfiguration(ExportDatasetConfiguration configuration)"
  name: "withConfiguration(ExportDatasetConfiguration configuration)"
  nameWithType: "ExportDataset.withConfiguration(ExportDatasetConfiguration configuration)"
  summary: "Set the configuration property: The export dataset configuration."
  parameters:
  - description: "the configuration value to set."
    name: "configuration"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportDatasetConfiguration?alt=com.azure.resourcemanager.costmanagement.models.ExportDatasetConfiguration&text=ExportDatasetConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExportDataset withConfiguration(ExportDatasetConfiguration configuration)"
  desc: "Set the configuration property: The export dataset configuration."
  returns:
    description: "the ExportDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportDataset?alt=com.azure.resourcemanager.costmanagement.models.ExportDataset&text=ExportDataset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportDataset.withGranularity(com.azure.resourcemanager.costmanagement.models.GranularityType)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportDataset.withGranularity(GranularityType granularity)"
  name: "withGranularity(GranularityType granularity)"
  nameWithType: "ExportDataset.withGranularity(GranularityType granularity)"
  summary: "Set the granularity property: The granularity of rows in the export."
  parameters:
  - description: "the granularity value to set."
    name: "granularity"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.GranularityType?alt=com.azure.resourcemanager.costmanagement.models.GranularityType&text=GranularityType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExportDataset withGranularity(GranularityType granularity)"
  desc: "Set the granularity property: The granularity of rows in the export. Currently only 'Daily' is supported."
  returns:
    description: "the ExportDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportDataset?alt=com.azure.resourcemanager.costmanagement.models.ExportDataset&text=ExportDataset\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The definition for data in the export."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportDataset?alt=com.azure.resourcemanager.costmanagement.models.ExportDataset&text=ExportDataset\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.7
