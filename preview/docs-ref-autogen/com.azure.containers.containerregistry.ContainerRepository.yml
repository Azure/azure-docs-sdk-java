### YamlMime:JavaType
uid: "com.azure.containers.containerregistry.ContainerRepository"
fullName: "com.azure.containers.containerregistry.ContainerRepository"
name: "ContainerRepository"
nameWithType: "ContainerRepository"
summary: "This class provides a helper type that contains all the operations for repositories in Azure Container Registry."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContainerRepository"
methods:
- uid: "com.azure.containers.containerregistry.ContainerRepository.delete()"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.delete()"
  name: "delete()"
  nameWithType: "ContainerRepository.delete()"
  summary: "Delete the repository in the Azure Container Registry for the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
  syntax: "public void delete()"
  desc: "Delete the repository in the Azure Container Registry for the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>.\n\n**Code Samples**\n\nDelete the repository.\n\n```java\nclient.delete();\n System.out.printf(\"Successfully initiated delete.\");\n```"
- uid: "com.azure.containers.containerregistry.ContainerRepository.deleteWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.deleteWithResponse(Context context)"
  name: "deleteWithResponse(Context context)"
  nameWithType: "ContainerRepository.deleteWithResponse(Context context)"
  summary: "Delete the repository in the Azure Container Registry for the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call. artifacts\n that are deleted as part of the repository delete."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteWithResponse(Context context)"
  desc: "Delete the repository in the Azure Container Registry for the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>.\n\n**Code Samples**\n\nDelete the repository.\n\n```java\nResponse<Void> response = client.deleteWithResponse(Context.NONE);\n System.out.printf(\"Successfully initiated delete.\");\n```"
  returns:
    description: "A void response for completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.ContainerRepository.getArtifact(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.getArtifact(String tagOrDigest)"
  name: "getArtifact(String tagOrDigest)"
  nameWithType: "ContainerRepository.getArtifact(String tagOrDigest)"
  summary: "Creates a new instance of <xref uid=\"com.azure.containers.containerregistry.RegistryArtifact\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RegistryArtifact\"></xref> object for the specified artifact."
  parameters:
  - description: "Either a tag or digest that uniquely identifies the artifact."
    name: "tagOrDigest"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RegistryArtifact getArtifact(String tagOrDigest)"
  desc: "Creates a new instance of <xref uid=\"com.azure.containers.containerregistry.RegistryArtifact\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RegistryArtifact\"></xref> object for the specified artifact."
  returns:
    description: "A new <xref uid=\"com.azure.containers.containerregistry.RegistryArtifact\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RegistryArtifact\"></xref> object for the desired repository."
    type: "<xref href=\"com.azure.containers.containerregistry.RegistryArtifact?alt=com.azure.containers.containerregistry.RegistryArtifact&text=RegistryArtifact\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.containers.containerregistry.ContainerRepository.getName()"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.getName()"
  name: "getName()"
  nameWithType: "ContainerRepository.getName()"
  summary: "Gets the Azure Container Registry service endpoint for the current instance."
  syntax: "public String getName()"
  desc: "Gets the Azure Container Registry service endpoint for the current instance."
  returns:
    description: "The service endpoint for the current instance."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.containers.containerregistry.ContainerRepository.getProperties()"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.getProperties()"
  name: "getProperties()"
  nameWithType: "ContainerRepository.getProperties()"
  summary: "Gets the <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
  syntax: "public ContainerRepositoryProperties getProperties()"
  desc: "Gets the <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>.\n\n**Code Samples**\n\nGet the properties for the given repository.\n\n```java\nContainerRepositoryProperties properties = client.getProperties();\n System.out.printf(\"Name:%s,\", properties.getName());\n```"
  returns:
    description: "The <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
    type: "<xref href=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties?alt=com.azure.containers.containerregistry.models.ContainerRepositoryProperties&text=ContainerRepositoryProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.containers.containerregistry.ContainerRepository.getPropertiesWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.getPropertiesWithResponse(Context context)"
  name: "getPropertiesWithResponse(Context context)"
  nameWithType: "ContainerRepository.getPropertiesWithResponse(Context context)"
  summary: "Gets the <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ContainerRepositoryProperties> getPropertiesWithResponse(Context context)"
  desc: "Gets the <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>.\n\n**Code Samples**\n\nGet the properties for the given repository.\n\n```java\nResponse<ContainerRepositoryProperties> response = client.getPropertiesWithResponse(Context.NONE);\n final ContainerRepositoryProperties properties = response.getValue();\n System.out.printf(\"Name:%s,\", properties.getName());\n```"
  returns:
    description: "A REST response with the <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> associated with the given\n <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties?alt=com.azure.containers.containerregistry.models.ContainerRepositoryProperties&text=ContainerRepositoryProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.ContainerRepository.getRegistryEndpoint()"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.getRegistryEndpoint()"
  name: "getRegistryEndpoint()"
  nameWithType: "ContainerRepository.getRegistryEndpoint()"
  summary: "Gets the Azure Container Registry name for the current instance."
  syntax: "public String getRegistryEndpoint()"
  desc: "Gets the Azure Container Registry name for the current instance."
  returns:
    description: "Return the registry name."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.containers.containerregistry.ContainerRepository.listManifestProperties()"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.listManifestProperties()"
  name: "listManifestProperties()"
  nameWithType: "ContainerRepository.listManifestProperties()"
  summary: "Fetches all the artifacts associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
  syntax: "public PagedIterable<ArtifactManifestProperties> listManifestProperties()"
  desc: "Fetches all the artifacts associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>.\n\nIf you would like to specify the order in which the tags are returned please use the overload that takes in the options parameter <xref uid=\"#listManifestProperties(ArtifactManifestOrder,\n Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#listManifestProperties(ArtifactManifestOrder,\n Context)\"></xref> listManifestProperties\\} No assumptions on the order can be made if no options are provided to the service.\n\n**Code Samples**\n\nRetrieve all artifacts associated with the given repository.\n\n```java\nclient.listManifestProperties().iterableByPage(10)\n     .forEach(pagedResponse -> {\n         pagedResponse.getValue().stream().forEach(\n             ManifestProperties -> System.out.println(ManifestProperties.getDigest()));\n     });\n```"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of the artifacts for the given repository in the order specified by the options."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.ArtifactManifestProperties?alt=com.azure.containers.containerregistry.models.ArtifactManifestProperties&text=ArtifactManifestProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.ContainerRepository.listManifestProperties(com.azure.containers.containerregistry.models.ArtifactManifestOrder)"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.listManifestProperties(ArtifactManifestOrder order)"
  name: "listManifestProperties(ArtifactManifestOrder order)"
  nameWithType: "ContainerRepository.listManifestProperties(ArtifactManifestOrder order)"
  summary: "Fetches all the artifacts associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository \"></xref>."
  parameters:
  - description: "the order in which the artifacts are returned by the service."
    name: "order"
    type: "<xref href=\"com.azure.containers.containerregistry.models.ArtifactManifestOrder?alt=com.azure.containers.containerregistry.models.ArtifactManifestOrder&text=ArtifactManifestOrder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<ArtifactManifestProperties> listManifestProperties(ArtifactManifestOrder order)"
  desc: "Fetches all the artifacts associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository \"></xref>.\n\nThe method supports options to select the order in which the artifacts are returned by the service. Currently the service supports an ascending or descending order for the last updated time for the artifacts. No assumptions on the order can be made if no options are provided by the service.\n\n**Code Samples**\n\nRetrieve all artifacts associated with the given repository from the most recently updated to the last.\n\n```java\nclient.listManifestProperties(ArtifactManifestOrder.LAST_UPDATED_ON_DESCENDING).iterableByPage(10)\n     .forEach(pagedResponse -> {\n         pagedResponse.getValue().stream().forEach(\n             ManifestProperties -> System.out.println(ManifestProperties.getDigest()));\n     });\n```"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of the artifacts for the given repository in the order specified by the options."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.ArtifactManifestProperties?alt=com.azure.containers.containerregistry.models.ArtifactManifestProperties&text=ArtifactManifestProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.ContainerRepository.listManifestProperties(com.azure.containers.containerregistry.models.ArtifactManifestOrder,com.azure.core.util.Context)"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.listManifestProperties(ArtifactManifestOrder order, Context context)"
  name: "listManifestProperties(ArtifactManifestOrder order, Context context)"
  nameWithType: "ContainerRepository.listManifestProperties(ArtifactManifestOrder order, Context context)"
  summary: "Fetches all the artifacts associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository \"></xref>."
  parameters:
  - description: "the order in which the artifacts are returned by the service."
    name: "order"
    type: "<xref href=\"com.azure.containers.containerregistry.models.ArtifactManifestOrder?alt=com.azure.containers.containerregistry.models.ArtifactManifestOrder&text=ArtifactManifestOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<ArtifactManifestProperties> listManifestProperties(ArtifactManifestOrder order, Context context)"
  desc: "Fetches all the artifacts associated with the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository \"></xref>.\n\nThe method supports options to select the order in which the artifacts are returned by the service. Currently the service supports an ascending or descending order for the last updated time for the artifacts. No assumptions on the order can be made if no options are provided by the service.\n\n**Code Samples**\n\nRetrieve all artifacts associated with the given repository from the most recently updated to the last.\n\n```java\nclient.listManifestProperties(ArtifactManifestOrder.LAST_UPDATED_ON_DESCENDING, Context.NONE).iterableByPage(10)\n     .forEach(pagedResponse -> {\n         pagedResponse.getValue().stream().forEach(\n             ManifestProperties -> System.out.println(ManifestProperties.getDigest()));\n     });\n```"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of the artifacts for the given repository in the order specified by the options."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.ArtifactManifestProperties?alt=com.azure.containers.containerregistry.models.ArtifactManifestProperties&text=ArtifactManifestProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.ContainerRepository.updateProperties(com.azure.containers.containerregistry.models.ContainerRepositoryProperties)"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.updateProperties(ContainerRepositoryProperties repositoryProperties)"
  name: "updateProperties(ContainerRepositoryProperties repositoryProperties)"
  nameWithType: "ContainerRepository.updateProperties(ContainerRepositoryProperties repositoryProperties)"
  summary: "Update the repository properties <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContainerRepositoryProperties\"></xref> of the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository properties\"></xref> that need to be updated\n for the repository."
    name: "repositoryProperties"
    type: "<xref href=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties?alt=com.azure.containers.containerregistry.models.ContainerRepositoryProperties&text=ContainerRepositoryProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRepositoryProperties updateProperties(ContainerRepositoryProperties repositoryProperties)"
  desc: "Update the repository properties <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContainerRepositoryProperties\"></xref> of the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>. These properties set the update, delete and retrieve options of the repository.\n\n**Code Samples**\n\nUpdate the writeable properties for the given repository.\n\n```java\nContainerRepositoryProperties properties = getRepositoryProperties();\n client.updateProperties(properties);\n```"
  returns:
    description: "The updated <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties \"></xref>"
    type: "<xref href=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties?alt=com.azure.containers.containerregistry.models.ContainerRepositoryProperties&text=ContainerRepositoryProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.containers.containerregistry.ContainerRepository.updatePropertiesWithResponse(com.azure.containers.containerregistry.models.ContainerRepositoryProperties,com.azure.core.util.Context)"
  fullName: "com.azure.containers.containerregistry.ContainerRepository.updatePropertiesWithResponse(ContainerRepositoryProperties repositoryProperties, Context context)"
  name: "updatePropertiesWithResponse(ContainerRepositoryProperties repositoryProperties, Context context)"
  nameWithType: "ContainerRepository.updatePropertiesWithResponse(ContainerRepositoryProperties repositoryProperties, Context context)"
  summary: "Update the settable properties <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContainerRepositoryProperties\"></xref> of the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository properties\"></xref> that need to be updated\n for the repository."
    name: "repositoryProperties"
    type: "<xref href=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties?alt=com.azure.containers.containerregistry.models.ContainerRepositoryProperties&text=ContainerRepositoryProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ContainerRepositoryProperties> updatePropertiesWithResponse(ContainerRepositoryProperties repositoryProperties, Context context)"
  desc: "Update the settable properties <xref uid=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContainerRepositoryProperties\"></xref> of the given <xref uid=\"com.azure.containers.containerregistry.ContainerRepository.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"repository\"></xref>. These properties set the update, delete and retrieve options of the repository.\n\n**Code Samples**\n\nUpdate the writeable properties for the given repository.\n\n```java\nContainerRepositoryProperties properties = getRepositoryProperties();\n client.updatePropertiesWithResponse(properties, Context.NONE);\n```"
  returns:
    description: "A REST response with the completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.ContainerRepositoryProperties?alt=com.azure.containers.containerregistry.models.ContainerRepositoryProperties&text=ContainerRepositoryProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This class provides a helper type that contains all the operations for repositories in Azure Container Registry. Operations allowed by this type are listing, retrieving, deleting, setting writeable properties. These operations are supported on the repository and the respective tags and manifests in it.\n\n**Instantiating Container Repository helper type.**\n\n```java\nContainerRepository repositoryClient = new ContainerRegistryClientBuilder()\n     .endpoint(endpoint)\n     .credential(credential)\n     .audience(ContainerRegistryAudience.AZURE_RESOURCE_MANAGER_PUBLIC_CLOUD)\n     .buildClient().getRepository(repository);\n```\n\nView <xref uid=\"com.azure.containers.containerregistry.ContainerRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the client."
metadata: {}
package: "com.azure.containers.containerregistry"
artifact: com.azure:azure-containers-containerregistry:1.1.0-beta.1
