### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  id: ObjectIdWriter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl
  children:
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.ObjectIdWriter(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,boolean)
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.alwaysAsId
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,boolean)
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.generator
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.idType
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.propertyName
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.serializer
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withAlwaysAsId(boolean)
  - com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  langs:
  - java
  name: ObjectIdWriter
  nameWithType: ObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  type: Class
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Object that knows how to serialize Object Ids.
  syntax:
    content: public final class ObjectIdWriter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.ObjectIdWriter(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,boolean)
  id: ObjectIdWriter(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.SerializableString,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,com.fasterxml.jackson.databind.JsonSerializer<?>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: ObjectIdWriter(JavaType t, SerializableString propName, ObjectIdGenerator<?> gen, JsonSerializer<?> ser, boolean alwaysAsId)
  nameWithType: ObjectIdWriter.ObjectIdWriter(JavaType t, SerializableString propName, ObjectIdGenerator<?> gen, JsonSerializer<?> ser, boolean alwaysAsId)
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.ObjectIdWriter(JavaType t, SerializableString propName, ObjectIdGenerator<?> gen, JsonSerializer<?> ser, boolean alwaysAsId)
  overload: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.ObjectIdWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected ObjectIdWriter(JavaType t, SerializableString propName, ObjectIdGenerator<?> gen, JsonSerializer<?> ser, boolean alwaysAsId)
    parameters:
    - id: t
      type: com.fasterxml.jackson.databind.JavaType
    - id: propName
      type: com.fasterxml.jackson.core.SerializableString
    - id: gen
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    - id: alwaysAsId
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.alwaysAsId
  id: alwaysAsId
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: alwaysAsId
  nameWithType: ObjectIdWriter.alwaysAsId
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.alwaysAsId
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Marker that indicates what the first reference is to be serialized as full POJO, or as Object Id (other references will always be serialized as Object Id)
  syntax:
    content: public final boolean alwaysAsId
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,boolean)
  id: construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.annotation.ObjectIdGenerator<?>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: construct(JavaType idType, PropertyName propName, ObjectIdGenerator<?> generator, boolean alwaysAsId)
  nameWithType: ObjectIdWriter.construct(JavaType idType, PropertyName propName, ObjectIdGenerator<?> generator, boolean alwaysAsId)
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.construct(JavaType idType, PropertyName propName, ObjectIdGenerator<?> generator, boolean alwaysAsId)
  overload: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.construct*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Factory method called by <xref uid="com.fasterxml.jackson.databind.ser.std.BeanSerializerBase" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.ser.std.BeanSerializerBase</xref> with the initial information based on standard settings for the type for which serializer is being built.
  syntax:
    content: public static ObjectIdWriter construct(JavaType idType, PropertyName propName, ObjectIdGenerator<?> generator, boolean alwaysAsId)
    parameters:
    - id: idType
      type: com.fasterxml.jackson.databind.JavaType
    - id: propName
      type: com.fasterxml.jackson.databind.PropertyName
    - id: generator
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
    - id: alwaysAsId
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.generator
  id: generator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: generator
  nameWithType: ObjectIdWriter.generator
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.generator
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  summary: 'Blueprint generator instance: actual instance will be fetched from <xref uid="com.fasterxml.jackson.databind.SerializerProvider" data-throw-if-not-resolved="false">SerializerProvider</xref> using this as the key.'
  syntax:
    content: public final ObjectIdGenerator<?> generator
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.idType
  id: idType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: idType
  nameWithType: ObjectIdWriter.idType
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.idType
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public final JavaType idType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.propertyName
  id: propertyName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: propertyName
  nameWithType: ObjectIdWriter.propertyName
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.propertyName
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  summary: 'Name of id property to write, if not null: if null, should only write references, but id property is handled by some other entity.'
  syntax:
    content: public final SerializableString propertyName
    return:
      type: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.serializer
  id: serializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: serializer
  nameWithType: ObjectIdWriter.serializer
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.serializer
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Serializer used for serializing id values.
  syntax:
    content: public final JsonSerializer<Object> serializer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withAlwaysAsId(boolean)
  id: withAlwaysAsId(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: withAlwaysAsId(boolean newState)
  nameWithType: ObjectIdWriter.withAlwaysAsId(boolean newState)
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withAlwaysAsId(boolean newState)
  overload: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withAlwaysAsId*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public ObjectIdWriter withAlwaysAsId(boolean newState)
    parameters:
    - id: newState
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  id: withSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  langs:
  - java
  name: withSerializer(JsonSerializer<?> ser)
  nameWithType: ObjectIdWriter.withSerializer(JsonSerializer<?> ser)
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withSerializer(JsonSerializer<?> ser)
  overload: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public ObjectIdWriter withSerializer(JsonSerializer<?> ser)
    parameters:
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    return:
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator<?>
  spec.java:
  - uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
    name: ObjectIdGenerator
    fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.ObjectIdWriter*
  name: ObjectIdWriter
  nameWithType: ObjectIdWriter.ObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.ObjectIdWriter
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.construct*
  name: construct
  nameWithType: ObjectIdWriter.construct
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.construct
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withSerializer*
  name: withSerializer
  nameWithType: ObjectIdWriter.withSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withAlwaysAsId*
  name: withAlwaysAsId
  nameWithType: ObjectIdWriter.withAlwaysAsId
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withAlwaysAsId
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator
  name: ObjectIdGenerator
  nameWithType: ObjectIdGenerator
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
