### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed*"
fullName: "com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed"
name: "elapsed"
nameWithType: "Stopwatch.elapsed"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed()"
  fullName: "com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed()"
  name: "elapsed()"
  nameWithType: "Stopwatch.elapsed()"
  summary: "Returns the current elapsed time shown on this stopwatch as a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref>. Unlike <xref uid=\"com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed(java.util.concurrent.TimeUnit)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#elapsed(TimeUnit)\"></xref>, this method does not lose any precision due to rounding."
  syntax: "public Duration elapsed()"
  returns:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed(java.util.concurrent.TimeUnit)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed(TimeUnit desiredUnit)"
  name: "elapsed(TimeUnit desiredUnit)"
  nameWithType: "Stopwatch.elapsed(TimeUnit desiredUnit)"
  summary: "Returns the current elapsed time shown on this stopwatch, expressed in the desired time unit, with any fraction rounded down.\n\n**Note:** the overhead of measurement can be more than a microsecond, so it is generally not useful to specify <xref uid=\"java.util.concurrent.TimeUnit.NANOSECONDS\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeUnit#NANOSECONDS\"></xref> precision here.\n\nIt is generally not a good idea to use an ambiguous, unitless `long` to represent elapsed time. Therefore, we recommend using <xref uid=\"com.azure.cosmos.implementation.guava25.base.Stopwatch.elapsed()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#elapsed()\"></xref> instead, which returns a strongly-typed <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> instance."
  parameters:
  - name: "desiredUnit"
    type: "<xref href=\"java.util.concurrent.TimeUnit?alt=java.util.concurrent.TimeUnit&text=TimeUnit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public long elapsed(TimeUnit desiredUnit)"
  returns:
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
