### YamlMime:JavaType
uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner"
fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner"
name: "QueryResponseInner"
nameWithType: "QueryResponseInner"
summary: "Query result."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class QueryResponseInner"
constructors:
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.QueryResponseInner()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.QueryResponseInner()"
  name: "QueryResponseInner()"
  nameWithType: "QueryResponseInner.QueryResponseInner()"
  syntax: "public QueryResponseInner()"
methods:
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.count()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.count()"
  name: "count()"
  nameWithType: "QueryResponseInner.count()"
  summary: "Get the count property: Number of records returned in the current response."
  syntax: "public long count()"
  desc: "Get the count property: Number of records returned in the current response. In the case of paging, this is the number of records in the current page."
  returns:
    description: "the count value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.data()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.data()"
  name: "data()"
  nameWithType: "QueryResponseInner.data()"
  summary: "Get the data property: Query output in JObject array or Table format."
  syntax: "public Object data()"
  desc: "Get the data property: Query output in JObject array or Table format."
  returns:
    description: "the data value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.facets()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.facets()"
  name: "facets()"
  nameWithType: "QueryResponseInner.facets()"
  summary: "Get the facets property: Query facets."
  syntax: "public List<Facet> facets()"
  desc: "Get the facets property: Query facets."
  returns:
    description: "the facets value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resourcegraph.models.Facet?alt=com.azure.resourcemanager.resourcegraph.models.Facet&text=Facet\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.resultTruncated()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.resultTruncated()"
  name: "resultTruncated()"
  nameWithType: "QueryResponseInner.resultTruncated()"
  summary: "Get the result<wbr>Truncated property: Indicates whether the query results are truncated."
  syntax: "public ResultTruncated resultTruncated()"
  desc: "Get the resultTruncated property: Indicates whether the query results are truncated."
  returns:
    description: "the resultTruncated value."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.models.ResultTruncated?alt=com.azure.resourcemanager.resourcegraph.models.ResultTruncated&text=ResultTruncated\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.skipToken()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.skipToken()"
  name: "skipToken()"
  nameWithType: "QueryResponseInner.skipToken()"
  summary: "Get the skip<wbr>Token property: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data."
  syntax: "public String skipToken()"
  desc: "Get the skipToken property: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data."
  returns:
    description: "the skipToken value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.totalRecords()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.totalRecords()"
  name: "totalRecords()"
  nameWithType: "QueryResponseInner.totalRecords()"
  summary: "Get the total<wbr>Records property: Number of total records matching the query."
  syntax: "public long totalRecords()"
  desc: "Get the totalRecords property: Number of total records matching the query."
  returns:
    description: "the totalRecords value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.validate()"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.validate()"
  name: "validate()"
  nameWithType: "QueryResponseInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withCount(long)"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withCount(long count)"
  name: "withCount(long count)"
  nameWithType: "QueryResponseInner.withCount(long count)"
  summary: "Set the count property: Number of records returned in the current response."
  parameters:
  - description: "the count value to set."
    name: "count"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryResponseInner withCount(long count)"
  desc: "Set the count property: Number of records returned in the current response. In the case of paging, this is the number of records in the current page."
  returns:
    description: "the QueryResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner?alt=com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner&text=QueryResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withData(java.lang.Object)"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withData(Object data)"
  name: "withData(Object data)"
  nameWithType: "QueryResponseInner.withData(Object data)"
  summary: "Set the data property: Query output in JObject array or Table format."
  parameters:
  - description: "the data value to set."
    name: "data"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryResponseInner withData(Object data)"
  desc: "Set the data property: Query output in JObject array or Table format."
  returns:
    description: "the QueryResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner?alt=com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner&text=QueryResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withFacets(java.util.List<com.azure.resourcemanager.resourcegraph.models.Facet>)"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withFacets(List<Facet> facets)"
  name: "withFacets(List<Facet> facets)"
  nameWithType: "QueryResponseInner.withFacets(List<Facet> facets)"
  summary: "Set the facets property: Query facets."
  parameters:
  - description: "the facets value to set."
    name: "facets"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resourcegraph.models.Facet?alt=com.azure.resourcemanager.resourcegraph.models.Facet&text=Facet\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueryResponseInner withFacets(List<Facet> facets)"
  desc: "Set the facets property: Query facets."
  returns:
    description: "the QueryResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner?alt=com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner&text=QueryResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withResultTruncated(com.azure.resourcemanager.resourcegraph.models.ResultTruncated)"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withResultTruncated(ResultTruncated resultTruncated)"
  name: "withResultTruncated(ResultTruncated resultTruncated)"
  nameWithType: "QueryResponseInner.withResultTruncated(ResultTruncated resultTruncated)"
  summary: "Set the result<wbr>Truncated property: Indicates whether the query results are truncated."
  parameters:
  - description: "the resultTruncated value to set."
    name: "resultTruncated"
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.models.ResultTruncated?alt=com.azure.resourcemanager.resourcegraph.models.ResultTruncated&text=ResultTruncated\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryResponseInner withResultTruncated(ResultTruncated resultTruncated)"
  desc: "Set the resultTruncated property: Indicates whether the query results are truncated."
  returns:
    description: "the QueryResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner?alt=com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner&text=QueryResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withSkipToken(java.lang.String)"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withSkipToken(String skipToken)"
  name: "withSkipToken(String skipToken)"
  nameWithType: "QueryResponseInner.withSkipToken(String skipToken)"
  summary: "Set the skip<wbr>Token property: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data."
  parameters:
  - description: "the skipToken value to set."
    name: "skipToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryResponseInner withSkipToken(String skipToken)"
  desc: "Set the skipToken property: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data."
  returns:
    description: "the QueryResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner?alt=com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner&text=QueryResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withTotalRecords(long)"
  fullName: "com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner.withTotalRecords(long totalRecords)"
  name: "withTotalRecords(long totalRecords)"
  nameWithType: "QueryResponseInner.withTotalRecords(long totalRecords)"
  summary: "Set the total<wbr>Records property: Number of total records matching the query."
  parameters:
  - description: "the totalRecords value to set."
    name: "totalRecords"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryResponseInner withTotalRecords(long totalRecords)"
  desc: "Set the totalRecords property: Number of total records matching the query."
  returns:
    description: "the QueryResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner?alt=com.azure.resourcemanager.resourcegraph.fluent.models.QueryResponseInner&text=QueryResponseInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Query result."
metadata: {}
package: "com.azure.resourcemanager.resourcegraph.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resourcegraph:1.0.0-beta.3
