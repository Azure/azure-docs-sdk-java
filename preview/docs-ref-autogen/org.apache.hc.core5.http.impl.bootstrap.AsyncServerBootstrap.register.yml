### YamlMime:JavaMember
uid: "org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap.register*"
fullName: "org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap.<T>register"
name: "<T>register"
nameWithType: "AsyncServerBootstrap.<T>register"
members:
- uid: "org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap.<T>register(java.lang.String,org.apache.hc.core5.http.nio.AsyncServerRequestHandler<T>)"
  fullName: "org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap.<T>register(String uriPattern, AsyncServerRequestHandler<T> requestHandler)"
  name: "<T>register(String uriPattern, AsyncServerRequestHandler<T> requestHandler)"
  nameWithType: "AsyncServerBootstrap.<T>register(String uriPattern, AsyncServerRequestHandler<T> requestHandler)"
  summary: "Registers the given <xref uid=\"org.apache.hc.core5.http.nio.AsyncServerRequestHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsyncServerRequestHandler\"></xref> as a default handler for URIs matching the given pattern."
  parameters:
  - description: "the pattern to register the handler for."
    name: "uriPattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the handler."
    name: "requestHandler"
    type: "<xref href=\"org.apache.hc.core5.http.nio.AsyncServerRequestHandler?alt=org.apache.hc.core5.http.nio.AsyncServerRequestHandler&text=AsyncServerRequestHandler\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final AsyncServerBootstrap <T>register(String uriPattern, AsyncServerRequestHandler<T> requestHandler)"
  returns:
    type: "<xref href=\"org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap?alt=org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap&text=AsyncServerBootstrap\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap.register(java.lang.String,org.apache.hc.core5.function.Supplier<org.apache.hc.core5.http.nio.AsyncServerExchangeHandler>)"
  fullName: "org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap.register(String uriPattern, Supplier<AsyncServerExchangeHandler> supplier)"
  name: "register(String uriPattern, Supplier<AsyncServerExchangeHandler> supplier)"
  nameWithType: "AsyncServerBootstrap.register(String uriPattern, Supplier<AsyncServerExchangeHandler> supplier)"
  summary: "Registers the given <xref uid=\"org.apache.hc.core5.http.nio.AsyncServerExchangeHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsyncServerExchangeHandler\"></xref> <xref uid=\"org.apache.hc.core5.function.Supplier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Supplier\"></xref> as a default handler for URIs matching the given pattern."
  parameters:
  - description: "the pattern to register the handler for."
    name: "uriPattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the handler supplier."
    name: "supplier"
    type: "<xref href=\"org.apache.hc.core5.function.Supplier?alt=org.apache.hc.core5.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.http.nio.AsyncServerExchangeHandler?alt=org.apache.hc.core5.http.nio.AsyncServerExchangeHandler&text=AsyncServerExchangeHandler\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final AsyncServerBootstrap register(String uriPattern, Supplier<AsyncServerExchangeHandler> supplier)"
  returns:
    type: "<xref href=\"org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap?alt=org.apache.hc.core5.http.impl.bootstrap.AsyncServerBootstrap&text=AsyncServerBootstrap\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.core5.http.impl.bootstrap"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
