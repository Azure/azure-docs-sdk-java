### YamlMime:JavaType
uid: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult"
fullName: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult"
name: "PolicySetResult"
nameWithType: "PolicySetResult"
summary: "Result of a policy set evaluation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PolicySetResult"
constructors:
- uid: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.PolicySetResult()"
  fullName: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.PolicySetResult()"
  name: "PolicySetResult()"
  nameWithType: "PolicySetResult.PolicySetResult()"
  syntax: "public PolicySetResult()"
methods:
- uid: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.hasError()"
  fullName: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.hasError()"
  name: "hasError()"
  nameWithType: "PolicySetResult.hasError()"
  summary: "Get the has<wbr>Error property: A value indicating whether this policy set evaluation has discovered violations."
  syntax: "public Boolean hasError()"
  desc: "Get the hasError property: A value indicating whether this policy set evaluation has discovered violations."
  returns:
    description: "the hasError value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.policyViolations()"
  fullName: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.policyViolations()"
  name: "policyViolations()"
  nameWithType: "PolicySetResult.policyViolations()"
  summary: "Get the policy<wbr>Violations property: The list of policy violations."
  syntax: "public List<PolicyViolation> policyViolations()"
  desc: "Get the policyViolations property: The list of policy violations."
  returns:
    description: "the policyViolations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.devtestlabs.models.PolicyViolation?alt=com.azure.resourcemanager.devtestlabs.models.PolicyViolation&text=PolicyViolation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.validate()"
  fullName: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.validate()"
  name: "validate()"
  nameWithType: "PolicySetResult.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.withHasError(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.withHasError(Boolean hasError)"
  name: "withHasError(Boolean hasError)"
  nameWithType: "PolicySetResult.withHasError(Boolean hasError)"
  summary: "Set the has<wbr>Error property: A value indicating whether this policy set evaluation has discovered violations."
  parameters:
  - description: "the hasError value to set."
    name: "hasError"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicySetResult withHasError(Boolean hasError)"
  desc: "Set the hasError property: A value indicating whether this policy set evaluation has discovered violations."
  returns:
    description: "the PolicySetResult object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.PolicySetResult?alt=com.azure.resourcemanager.devtestlabs.models.PolicySetResult&text=PolicySetResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.withPolicyViolations(java.util.List<com.azure.resourcemanager.devtestlabs.models.PolicyViolation>)"
  fullName: "com.azure.resourcemanager.devtestlabs.models.PolicySetResult.withPolicyViolations(List<PolicyViolation> policyViolations)"
  name: "withPolicyViolations(List<PolicyViolation> policyViolations)"
  nameWithType: "PolicySetResult.withPolicyViolations(List<PolicyViolation> policyViolations)"
  summary: "Set the policy<wbr>Violations property: The list of policy violations."
  parameters:
  - description: "the policyViolations value to set."
    name: "policyViolations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.devtestlabs.models.PolicyViolation?alt=com.azure.resourcemanager.devtestlabs.models.PolicyViolation&text=PolicyViolation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PolicySetResult withPolicyViolations(List<PolicyViolation> policyViolations)"
  desc: "Set the policyViolations property: The list of policy violations."
  returns:
    description: "the PolicySetResult object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.PolicySetResult?alt=com.azure.resourcemanager.devtestlabs.models.PolicySetResult&text=PolicySetResult\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Result of a policy set evaluation."
metadata: {}
package: "com.azure.resourcemanager.devtestlabs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devtestlabs:1.0.0-beta.1
