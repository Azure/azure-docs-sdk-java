### YamlMime:JavaType
uid: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient"
fullName: "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient"
name: "CryptographyAsyncClient"
nameWithType: "CryptographyAsyncClient"
summary: "The <xref uid=\"com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CryptographyAsyncClient\"></xref> provides asynchronous methods to perform cryptographic operations using asymmetric and symmetric keys. The client supports encrypt, decrypt, wrap key, unwrap key, sign and verify operations using the configured key.\n\n**Samples to construct the sync client**\n\n```java\nCryptographyAsyncClient cryptographyAsyncClient = new CryptographyClientBuilder()\n     .keyIdentifier(\"<YOUR-KEY-ID>\")\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .buildAsyncClient();\n```\n\n```java\nJsonWebKey jsonWebKey = new JsonWebKey().setId(\"SampleJsonWebKey\");\n \n CryptographyAsyncClient cryptographyAsyncClient = new CryptographyClientBuilder()\n     .jsonWebKey(jsonWebKey)\n     .buildAsyncClient();\n```\n\n```java\nCryptographyAsyncClient cryptographyAsyncClient = new CryptographyClientBuilder()\n     .keyIdentifier(\"<Your-Key-ID>\")\n     .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS))\n     .addPolicy(new KeyVaultCredentialPolicy(new DefaultAzureCredentialBuilder().build()))\n     .httpClient(HttpClient.createDefault())\n     .buildAsyncClient();\n```\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(new KeyVaultCredentialPolicy(new DefaultAzureCredentialBuilder().build()), new RetryPolicy())\n     .build();\n CryptographyAsyncClient cryptographyAsyncClient = new CryptographyClientBuilder()\n     .pipeline(pipeline)\n     .keyIdentifier(\"<YOUR-KEY-ID\")\n     .buildAsyncClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CryptographyAsyncClient"
methods:
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.decrypt(com.azure.security.keyvault.keys.cryptography.DecryptParameters)"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.decrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt(com.azure.security.keyvault.keys.cryptography.EncryptParameters)"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.encrypt(com.azure.security.keyvault.keys.cryptography.models.EncryptionAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.getKey()"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.getKeyWithResponse()"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.sign(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.signData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.unwrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.verify(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.verifyData(com.azure.security.keyvault.keys.cryptography.models.SignatureAlgorithm,byte[],byte[])"
- "com.azure.security.keyvault.keys.cryptography.CryptographyAsyncClient.wrapKey(com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,byte[])"
type: "class"
metadata: {}
package: "com.azure.security.keyvault.keys.cryptography"
artifact: com.azure:azure-security-keyvault-keys:4.3.0-beta.6
