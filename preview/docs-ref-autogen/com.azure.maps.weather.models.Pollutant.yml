### YamlMime:JavaType
uid: "com.azure.maps.weather.models.Pollutant"
fullName: "com.azure.maps.weather.models.Pollutant"
name: "Pollutant"
nameWithType: "Pollutant"
summary: "Detailed information about an individual pollutant."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **Pollutant**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.Pollutant?alt=com.azure.maps.weather.models.Pollutant&text=Pollutant\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.maps.weather.models.Pollutant.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.maps.weather.models.Pollutant.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Pollutant.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Pollutant from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Pollutant fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the Pollutant."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of Pollutant from the JsonReader."
  returns:
    description: "An instance of Pollutant if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.maps.weather.models.Pollutant?alt=com.azure.maps.weather.models.Pollutant&text=Pollutant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.Pollutant.getConcentration()"
  fullName: "com.azure.maps.weather.models.Pollutant.getConcentration()"
  name: "getConcentration()"
  nameWithType: "Pollutant.getConcentration()"
  summary: "Get the concentration property: An object containing the number of pollutant particles per volume of air."
  syntax: "public WeatherUnitDetails getConcentration()"
  desc: "Get the concentration property: An object containing the number of pollutant particles per volume of air."
  returns:
    description: "the concentration value."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherUnitDetails?alt=com.azure.maps.weather.models.WeatherUnitDetails&text=WeatherUnitDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.Pollutant.getGlobalIndex()"
  fullName: "com.azure.maps.weather.models.Pollutant.getGlobalIndex()"
  name: "getGlobalIndex()"
  nameWithType: "Pollutant.getGlobalIndex()"
  summary: "Get the global<wbr>Index property: Internationally normalized air quality rating on a scale from 0 to 300 and up, with higher numbers representing worse air quality."
  syntax: "public Float getGlobalIndex()"
  desc: "Get the globalIndex property: Internationally normalized air quality rating on a scale from 0 to 300 and up, with higher numbers representing worse air quality."
  returns:
    description: "the globalIndex value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html\">Float</a>"
- uid: "com.azure.maps.weather.models.Pollutant.getIndex()"
  fullName: "com.azure.maps.weather.models.Pollutant.getIndex()"
  name: "getIndex()"
  nameWithType: "Pollutant.getIndex()"
  summary: "Get the index property: Air quality rating on a scale set by local regulating bodies."
  syntax: "public Float getIndex()"
  desc: "Get the index property: Air quality rating on a scale set by local regulating bodies. Scales can vary widely based on location. See \\[Wikipedia\\](https://en.wikipedia.org/wiki/Air\\_quality\\_index) for more information."
  returns:
    description: "the index value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html\">Float</a>"
- uid: "com.azure.maps.weather.models.Pollutant.getName()"
  fullName: "com.azure.maps.weather.models.Pollutant.getName()"
  name: "getName()"
  nameWithType: "Pollutant.getName()"
  summary: "Get the name property: The name of the pollutant in English."
  syntax: "public String getName()"
  desc: "Get the name property: The name of the pollutant in English."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.Pollutant.getType()"
  fullName: "com.azure.maps.weather.models.Pollutant.getType()"
  name: "getType()"
  nameWithType: "Pollutant.getType()"
  summary: "Get the type property: Type of pollutant."
  syntax: "public PollutantType getType()"
  desc: "Get the type property: Type of pollutant. Please note that more may be added at any time."
  returns:
    description: "the type value."
    type: "<xref href=\"com.azure.maps.weather.models.PollutantType?alt=com.azure.maps.weather.models.PollutantType&text=PollutantType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.Pollutant.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.maps.weather.models.Pollutant.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Pollutant.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Detailed information about an individual pollutant. Not returned if \\`pollutants\\`=false."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.Pollutant?alt=com.azure.maps.weather.models.Pollutant&text=Pollutant\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.maps.weather.models"
artifact: com.azure:azure-maps-weather:1.0.0-beta.2
