### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape"
fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape"
name: "JsonFormat.Shape"
nameWithType: "JsonFormat.Shape"
summary: "Value enumeration used for indicating preferred Shape; translates loosely to JSON types, with some extra values to indicate less precise choices (i.e. allowing one of multiple actual shapes)"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum JsonFormat.Shape extends Enum<JsonFormat.Shape>"
fields:
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.ANY"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.ANY"
  name: "ANY"
  nameWithType: "JsonFormat.Shape.ANY"
  summary: "Marker enum value that indicates \"whatever\" choice, meaning that annotation does NOT specify shape to use. Note that this is different from <xref uid=\"com.fasterxml.jackson.annotation.JsonFormat.Shape.NATURAL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#NATURAL\"></xref>, which specifically instructs use of the \"natural\" shape for datatype."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.ARRAY"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.ARRAY"
  name: "ARRAY"
  nameWithType: "JsonFormat.Shape.ARRAY"
  summary: "Value that indicates that (JSON) Array type should be used."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.BINARY"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.BINARY"
  name: "BINARY"
  nameWithType: "JsonFormat.Shape.BINARY"
  summary: "Value that indicates that Binary type (native, if format supports it; encoding using Base64 if only textual types supported) should be used."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.BOOLEAN"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.BOOLEAN"
  name: "BOOLEAN"
  nameWithType: "JsonFormat.Shape.BOOLEAN"
  summary: "Value that indicates that (JSON) boolean type (true, false) should be used."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NATURAL"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NATURAL"
  name: "NATURAL"
  nameWithType: "JsonFormat.Shape.NATURAL"
  summary: "Marker enum value that indicates the \"default\" choice for given datatype; for example, JSON String for <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.String\"></xref>, or JSON Number for Java numbers. Note that this is different from <xref uid=\"com.fasterxml.jackson.annotation.JsonFormat.Shape.ANY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shape#ANY\"></xref> in that this is actual explicit choice that overrides possible default settings."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NUMBER"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NUMBER"
  name: "NUMBER"
  nameWithType: "JsonFormat.Shape.NUMBER"
  summary: "Value that indicates that a numeric (JSON) type should be used (but does not specify whether integer or floating-point representation should be used)"
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NUMBER_FLOAT"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NUMBER_FLOAT"
  name: "NUMBER_FLOAT"
  nameWithType: "JsonFormat.Shape.NUMBER_FLOAT"
  summary: "Value that indicates that floating-point numeric type should be used"
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NUMBER_INT"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.NUMBER_INT"
  name: "NUMBER_INT"
  nameWithType: "JsonFormat.Shape.NUMBER_INT"
  summary: "Value that indicates that integer number type should be used (and not <xref uid=\"com.fasterxml.jackson.annotation.JsonFormat.Shape.NUMBER_FLOAT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#NUMBER_FLOAT\"></xref>)."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.OBJECT"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.OBJECT"
  name: "OBJECT"
  nameWithType: "JsonFormat.Shape.OBJECT"
  summary: "Value that indicates that (JSON) Object type should be used."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.SCALAR"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.SCALAR"
  name: "SCALAR"
  nameWithType: "JsonFormat.Shape.SCALAR"
  summary: "Value that indicates shape should not be structural (that is, not <xref uid=\"com.fasterxml.jackson.annotation.JsonFormat.Shape.ARRAY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#ARRAY\"></xref> or <xref uid=\"com.fasterxml.jackson.annotation.JsonFormat.Shape.OBJECT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#OBJECT\"></xref>, but can be any other shape."
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.STRING"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.STRING"
  name: "STRING"
  nameWithType: "JsonFormat.Shape.STRING"
  summary: "Value that indicates that (JSON) String type should be used."
methods:
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.isNumeric()"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.isNumeric()"
  name: "isNumeric()"
  nameWithType: "JsonFormat.Shape.isNumeric()"
  syntax: "public boolean isNumeric()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.isStructured()"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.isStructured()"
  name: "isStructured()"
  nameWithType: "JsonFormat.Shape.isStructured()"
  syntax: "public boolean isStructured()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "JsonFormat.Shape.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonFormat.Shape valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonFormat.Shape?alt=com.fasterxml.jackson.annotation.JsonFormat.Shape&text=Shape\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.JsonFormat.Shape.values()"
  fullName: "com.fasterxml.jackson.annotation.JsonFormat.Shape.values()"
  name: "values()"
  nameWithType: "JsonFormat.Shape.values()"
  syntax: "public static JsonFormat.Shape[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonFormat.Shape?alt=com.fasterxml.jackson.annotation.JsonFormat.Shape&text=Shape\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
