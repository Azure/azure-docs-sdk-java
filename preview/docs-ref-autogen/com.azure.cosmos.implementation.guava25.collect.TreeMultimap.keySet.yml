### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.TreeMultimap.keySet*"
fullName: "com.azure.cosmos.implementation.guava25.collect.TreeMultimap<K,V>.keySet"
name: "keySet"
nameWithType: "TreeMultimap<K,V>.keySet"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.TreeMultimap.keySet()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.TreeMultimap<K,V>.keySet()"
  name: "keySet()"
  nameWithType: "TreeMultimap<K,V>.keySet()"
  summary: "Returns a view collection of all *distinct* keys contained in this multimap. Note that the key set contains a key if and only if this multimap maps that key to at least one value.\n\nChanges to the returned set will update the underlying multimap, and vice versa. However, *adding* to the returned set is not possible.\n\nBecause a `TreeMultimap` has unique sorted keys, this method returns a <xref uid=\"java.util.NavigableSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NavigableSet\"></xref>, instead of the <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Set\"></xref> specified in the <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap\"></xref> interface."
  overridden: "com.azure.cosmos.implementation.guava25.collect.AbstractSortedKeySortedSetMultimap.keySet()"
  syntax: "public NavigableSet<K> keySet()"
  returns:
    type: "<xref href=\"java.util.NavigableSet?alt=java.util.NavigableSet&text=NavigableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
