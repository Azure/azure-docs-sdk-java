### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.RetryUtils.toRetryWithAlternateFunc*"
fullName: "com.azure.cosmos.implementation.RetryUtils.<T>toRetryWithAlternateFunc"
name: "<T>toRetryWithAlternateFunc"
nameWithType: "RetryUtils.<T>toRetryWithAlternateFunc"
members:
- uid: "com.azure.cosmos.implementation.RetryUtils.<T>toRetryWithAlternateFunc(java.util.function.Function<com.azure.cosmos.implementation.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,com.azure.cosmos.implementation.IRetryPolicy,java.util.function.Function<com.azure.cosmos.implementation.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,java.time.Duration,com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  fullName: "com.azure.cosmos.implementation.RetryUtils.<T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback, RxDocumentServiceRequest rxDocumentServiceRequest)"
  name: "<T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback, RxDocumentServiceRequest rxDocumentServiceRequest)"
  nameWithType: "RetryUtils.<T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback, RxDocumentServiceRequest rxDocumentServiceRequest)"
  summary: "This method will be called after getting error on callbackMethod , and then keep trying between callbackMethod and inBackoffAlternateCallbackMethod until success or as stated in retry policy."
  parameters:
  - description: "The callbackMethod"
    name: "callbackMethod"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.Quadruple?alt=com.azure.cosmos.implementation.Quadruple&text=Quadruple\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "Retry policy"
    name: "retryPolicy"
    type: "<xref href=\"com.azure.cosmos.implementation.IRetryPolicy?alt=com.azure.cosmos.implementation.IRetryPolicy&text=IRetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  - description: "The inBackoffAlternateCallbackMethod"
    name: "inBackoffAlternateCallbackMethod"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.Quadruple?alt=com.azure.cosmos.implementation.Quadruple&text=Quadruple\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "Minimum backoff for InBackoffCallbackMethod"
    name: "minBackoffForInBackoffCallback"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - name: "rxDocumentServiceRequest"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Function<Throwable,Mono<T>> <T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback, RxDocumentServiceRequest rxDocumentServiceRequest)"
  returns:
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
