### YamlMime:JavaType
uid: "com.azure.monitor.opentelemetry.exporter.AzureMonitorTraceExporter"
fullName: "com.azure.monitor.opentelemetry.exporter.AzureMonitorTraceExporter"
name: "AzureMonitorTraceExporter"
nameWithType: "AzureMonitorTraceExporter"
summary: "This class is an implementation of OpenTelemetry <xref uid=\"io.opentelemetry.sdk.trace.export.SpanExporter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpanExporter\"></xref> that allows different tracing services to export recorded data for sampled spans in their own format."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureMonitorTraceExporter implements SpanExporter"
methods:
- "com.azure.monitor.opentelemetry.exporter.AzureMonitorTraceExporter.export(java.util.Collection<io.opentelemetry.sdk.trace.data.SpanData>)"
- "com.azure.monitor.opentelemetry.exporter.AzureMonitorTraceExporter.flush()"
- "com.azure.monitor.opentelemetry.exporter.AzureMonitorTraceExporter.shutdown()"
type: "class"
implements:
- "<xref href=\"io.opentelemetry.sdk.trace.export.SpanExporter?alt=io.opentelemetry.sdk.trace.export.SpanExporter&text=SpanExporter\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.monitor.opentelemetry.exporter"
artifact: com.azure:azure-monitor-opentelemetry-exporter:1.0.0-beta.4
