### YamlMime:JavaMember
uid: "com.azure.resourcemanager.sql.models.SqlDatabase.DefinitionStages.WithStorageKeyAfterElasticPool.withStorageAccessKey*"
fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.DefinitionStages.WithStorageKeyAfterElasticPool<ParentT>.withStorageAccessKey"
name: "withStorageAccessKey"
nameWithType: "SqlDatabase.DefinitionStages.WithStorageKeyAfterElasticPool<ParentT>.withStorageAccessKey"
members:
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.DefinitionStages.WithStorageKeyAfterElasticPool.withStorageAccessKey(java.lang.String)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.DefinitionStages.WithStorageKeyAfterElasticPool<ParentT>.withStorageAccessKey(String storageAccessKey)"
  name: "withStorageAccessKey(String storageAccessKey)"
  nameWithType: "SqlDatabase.DefinitionStages.WithStorageKeyAfterElasticPool<ParentT>.withStorageAccessKey(String storageAccessKey)"
  parameters:
  - description: "the storage access key to use"
    name: "storageAccessKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.DefinitionStages.WithAuthenticationAfterElasticPool<ParentT> withStorageAccessKey(String storageAccessKey)"
  returns:
    description: "next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.DefinitionStages.WithAuthenticationAfterElasticPool?alt=com.azure.resourcemanager.sql.models.SqlDatabase.DefinitionStages.WithAuthenticationAfterElasticPool&text=WithAuthenticationAfterElasticPool\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
