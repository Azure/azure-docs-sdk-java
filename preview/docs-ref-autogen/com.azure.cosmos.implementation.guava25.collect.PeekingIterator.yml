### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.PeekingIterator
  id: PeekingIterator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.PeekingIterator.next()
  - com.azure.cosmos.implementation.guava25.collect.PeekingIterator.peek()
  - com.azure.cosmos.implementation.guava25.collect.PeekingIterator.remove()
  langs:
  - java
  name: PeekingIterator<E>
  nameWithType: PeekingIterator<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.PeekingIterator<E>
  type: Interface
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    An iterator that supports a one-element lookahead while iterating.


    See the Guava User Guide article on [ `PeekingIterator`][_PeekingIterator].



    [_PeekingIterator]: https://github.com/google/guava/wiki/CollectionHelpersExplained#peekingiterator
  syntax:
    content: public interface PeekingIterator<E> extends Iterator<E>
    typeParameters:
    - id: E
  implements:
  - java.util.Iterator<E>
- uid: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.next()
  id: next()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.PeekingIterator
  langs:
  - java
  name: next()
  nameWithType: PeekingIterator<E>.next()
  fullName: com.azure.cosmos.implementation.guava25.collect.PeekingIterator<E>.next()
  overload: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.next*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: The objects returned by consecutive calls to <xref uid="com.azure.cosmos.implementation.guava25.collect.PeekingIterator.peek()" data-throw-if-not-resolved="false">#peek()</xref> then <xref uid="com.azure.cosmos.implementation.guava25.collect.PeekingIterator.next()" data-throw-if-not-resolved="false">#next()</xref> are guaranteed to be equal to each other.
  syntax:
    content: public abstract E next()
    return:
      type: E
- uid: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.peek()
  id: peek()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.PeekingIterator
  langs:
  - java
  name: peek()
  nameWithType: PeekingIterator<E>.peek()
  fullName: com.azure.cosmos.implementation.guava25.collect.PeekingIterator<E>.peek()
  overload: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.peek*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Returns the next element in the iteration, without advancing the iteration.


    Calls to `peek()` should not change the state of the iteration, except that it *may* prevent removal of the most recent element via <xref uid="com.azure.cosmos.implementation.guava25.collect.PeekingIterator.remove()" data-throw-if-not-resolved="false">#remove()</xref>.
  syntax:
    content: public abstract E peek()
    return:
      type: E
- uid: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.remove()
  id: remove()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.PeekingIterator
  langs:
  - java
  name: remove()
  nameWithType: PeekingIterator<E>.remove()
  fullName: com.azure.cosmos.implementation.guava25.collect.PeekingIterator<E>.remove()
  overload: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.remove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Implementations may or may not support removal when a call to <xref uid="com.azure.cosmos.implementation.guava25.collect.PeekingIterator.peek()" data-throw-if-not-resolved="false">#peek()</xref> has occurred since the most recent call to <xref uid="com.azure.cosmos.implementation.guava25.collect.PeekingIterator.next()" data-throw-if-not-resolved="false">#next()</xref>.
  syntax:
    content: public abstract void remove()
references:
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.peek*
  name: peek
  nameWithType: PeekingIterator<E>.peek
  fullName: com.azure.cosmos.implementation.guava25.collect.PeekingIterator<E>.peek
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.next*
  name: next
  nameWithType: PeekingIterator<E>.next
  fullName: com.azure.cosmos.implementation.guava25.collect.PeekingIterator<E>.next
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.PeekingIterator.remove*
  name: remove
  nameWithType: PeekingIterator<E>.remove
  fullName: com.azure.cosmos.implementation.guava25.collect.PeekingIterator<E>.remove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Iterator<E>
  name: Iterator<E>
  nameWithType: Iterator<E>
  fullName: java.util.Iterator<E>
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
