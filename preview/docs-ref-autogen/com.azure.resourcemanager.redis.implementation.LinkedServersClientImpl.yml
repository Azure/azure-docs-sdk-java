### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  id: LinkedServersClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation
  children:
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.listAsync(java.lang.String,java.lang.String)
  langs:
  - java
  name: LinkedServersClientImpl
  nameWithType: LinkedServersClientImpl
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  type: Class
  package: com.azure.resourcemanager.redis.implementation
  summary: An instance of this class provides access to all the operations defined in LinkedServersClient.
  syntax:
    content: public final class LinkedServersClientImpl implements LinkedServersClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.redis.fluent.LinkedServersClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.LinkedServersClientImpl(com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl)
  id: LinkedServersClientImpl(com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: LinkedServersClientImpl(RedisManagementClientImpl client)
  nameWithType: LinkedServersClientImpl.LinkedServersClientImpl(RedisManagementClientImpl client)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.LinkedServersClientImpl(RedisManagementClientImpl client)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.LinkedServersClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.redis.implementation
  summary: Initializes an instance of LinkedServersClientImpl.
  syntax:
    content: " LinkedServersClientImpl(RedisManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClientImpl.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public SyncPoller<PollResult<RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner> beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  id: beginCreate(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  nameWithType: LinkedServersClientImpl.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public SyncPoller<PollResult<RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner> beginCreate(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: beginCreateAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClientImpl.beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreateAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public PollerFlux<PollResult<RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner> beginCreateAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClientImpl.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public RedisLinkedServerWithPropertiesInner create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  id: create(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  nameWithType: LinkedServersClientImpl.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public RedisLinkedServerWithPropertiesInner create(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClientImpl.createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public Mono<RedisLinkedServerWithPropertiesInner> createAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  nameWithType: LinkedServersClientImpl.createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Adds a linked server to the Redis cache (requires Premium SKU).
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String name, String linkedServerName, RedisLinkedServerCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the Redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: parameters
      type: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
      description: Parameter required for creating a linked server to redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: response to put/get linked server (with properties) for Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClientImpl.delete(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.delete(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public void delete(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClientImpl.deleteAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  nameWithType: LinkedServersClientImpl.deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public Response<Void> deleteWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClientImpl.deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Deletes the linked server from a redis cache (requires Premium SKU).
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server that is being added to the Redis cache.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClientImpl.get(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.get(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public RedisLinkedServerWithPropertiesInner get(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    return:
      type: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClientImpl.getAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public Mono<RedisLinkedServerWithPropertiesInner> getAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  nameWithType: LinkedServersClientImpl.getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public Response<RedisLinkedServerWithPropertiesInner> getWithResponse(String resourceGroupName, String name, String linkedServerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  nameWithType: LinkedServersClientImpl.getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
  syntax:
    content: public Mono<Response<RedisLinkedServerWithPropertiesInner>> getWithResponseAsync(String resourceGroupName, String name, String linkedServerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: linkedServerName
      type: java.lang.String
      description: The name of the linked server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>>
      description: the detailed information about a linked server of a redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String name)
  nameWithType: LinkedServersClientImpl.list(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
  syntax:
    content: public PagedIterable<RedisLinkedServerWithPropertiesInner> list(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the list of linked servers associated with this redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String name, Context context)
  nameWithType: LinkedServersClientImpl.list(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
  syntax:
    content: public PagedIterable<RedisLinkedServerWithPropertiesInner> list(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the list of linked servers associated with this redis cache (requires Premium SKU).
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String name)
  nameWithType: LinkedServersClientImpl.listAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.listAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.redis.implementation
  summary: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
  syntax:
    content: public PagedFlux<RedisLinkedServerWithPropertiesInner> listAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: name
      type: java.lang.String
      description: The name of the redis cache.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
      description: the list of linked servers associated with this redis cache (requires Premium SKU).
references:
- uid: com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl
  name: RedisManagementClientImpl
  nameWithType: RedisManagementClientImpl
  fullName: com.azure.resourcemanager.redis.implementation.RedisManagementClientImpl
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.LinkedServersClientImpl*
  name: LinkedServersClientImpl
  nameWithType: LinkedServersClientImpl.LinkedServersClientImpl
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.LinkedServersClientImpl
  package: com.azure.resourcemanager.redis.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
  name: RedisLinkedServerCreateParameters
  nameWithType: RedisLinkedServerCreateParameters
  fullName: com.azure.resourcemanager.redis.models.RedisLinkedServerCreateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: LinkedServersClientImpl.createWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreateAsync*
  name: beginCreateAsync
  nameWithType: LinkedServersClientImpl.beginCreateAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreateAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate*
  name: beginCreate
  nameWithType: LinkedServersClientImpl.beginCreate
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.beginCreate
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createAsync*
  name: createAsync
  nameWithType: LinkedServersClientImpl.createAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.createAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  name: RedisLinkedServerWithPropertiesInner
  nameWithType: RedisLinkedServerWithPropertiesInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create*
  name: create
  nameWithType: LinkedServersClientImpl.create
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.create
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: LinkedServersClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: LinkedServersClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.delete*
  name: delete
  nameWithType: LinkedServersClientImpl.delete
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.delete
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: LinkedServersClientImpl.deleteWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.deleteWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: LinkedServersClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getAsync*
  name: getAsync
  nameWithType: LinkedServersClientImpl.getAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.get*
  name: get
  nameWithType: LinkedServersClientImpl.get
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.get
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: LinkedServersClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.getWithResponse
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.listAsync*
  name: listAsync
  nameWithType: LinkedServersClientImpl.listAsync
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.listAsync
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
    name: RedisLinkedServerWithPropertiesInner
    fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list*
  name: list
  nameWithType: LinkedServersClientImpl.list
  fullName: com.azure.resourcemanager.redis.implementation.LinkedServersClientImpl.list
  package: com.azure.resourcemanager.redis.implementation
- uid: com.azure.resourcemanager.redis.fluent.LinkedServersClient
  name: LinkedServersClient
  nameWithType: LinkedServersClient
  fullName: com.azure.resourcemanager.redis.fluent.LinkedServersClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
  name: RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner
  nameWithType: RedisLinkedServerWithPropertiesInner>,RedisLinkedServerWithPropertiesInner
  fullName: com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner>,com.azure.resourcemanager.redis.fluent.models.RedisLinkedServerWithPropertiesInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
