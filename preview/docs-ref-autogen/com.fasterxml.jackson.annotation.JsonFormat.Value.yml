### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonFormat.Value"
fullName: "com.fasterxml.jackson.annotation.JsonFormat.Value"
name: "JsonFormat.Value"
nameWithType: "JsonFormat.Value"
summary: "Helper class used to contain information from a single <xref uid=\"com.fasterxml.jackson.annotation.JsonFormat\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonFormat\"></xref> annotation."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class JsonFormat.Value implements JacksonAnnotationValue<JsonFormat>, Serializable"
constructors:
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value(com.fasterxml.jackson.annotation.JsonFormat)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)"
methods:
- "com.fasterxml.jackson.annotation.JsonFormat.Value.empty()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.equals(java.lang.Object)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.forLeniency(boolean)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.forPattern(java.lang.String)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.forShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.from(com.fasterxml.jackson.annotation.JsonFormat)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.getFeatures()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.getLenient()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.getLocale()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.getPattern()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.getShape()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.hasLenient()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.hasLocale()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.hasPattern()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.hasShape()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.hasTimeZone()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.hashCode()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.isLenient()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.merge(com.fasterxml.jackson.annotation.JsonFormat.Value,com.fasterxml.jackson.annotation.JsonFormat.Value)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.mergeAll(com.fasterxml.jackson.annotation.JsonFormat.Value...)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.timeZoneAsString()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.toString()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.valueFor()"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withLenient(java.lang.Boolean)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withLocale(java.util.Locale)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withOverrides(com.fasterxml.jackson.annotation.JsonFormat.Value)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withPattern(java.lang.String)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withTimeZone(java.util.TimeZone)"
- "com.fasterxml.jackson.annotation.JsonFormat.Value.withoutFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.annotation.JacksonAnnotationValue?alt=com.fasterxml.jackson.annotation.JacksonAnnotationValue&text=JacksonAnnotationValue\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.annotation.JsonFormat?alt=com.fasterxml.jackson.annotation.JsonFormat&text=JsonFormat\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
