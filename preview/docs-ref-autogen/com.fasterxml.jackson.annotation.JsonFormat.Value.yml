### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value
  id: Value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value(com.fasterxml.jackson.annotation.JsonFormat)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.empty()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.equals(java.lang.Object)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.forLeniency(boolean)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.forPattern(java.lang.String)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.forShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.from(com.fasterxml.jackson.annotation.JsonFormat)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.getFeatures()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.getLenient()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.getLocale()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.getPattern()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.getShape()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.hasLenient()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.hasLocale()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.hasPattern()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.hasShape()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.hasTimeZone()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.hashCode()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.isLenient()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.merge(com.fasterxml.jackson.annotation.JsonFormat.Value,com.fasterxml.jackson.annotation.JsonFormat.Value)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.mergeAll(com.fasterxml.jackson.annotation.JsonFormat.Value...)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.timeZoneAsString()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.toString()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.valueFor()
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withLenient(java.lang.Boolean)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withLocale(java.util.Locale)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withOverrides(com.fasterxml.jackson.annotation.JsonFormat.Value)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withPattern(java.lang.String)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withTimeZone(java.util.TimeZone)
  - com.fasterxml.jackson.annotation.JsonFormat.Value.withoutFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  langs:
  - java
  name: JsonFormat.Value
  nameWithType: JsonFormat.Value
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value
  type: Class
  package: com.fasterxml.jackson.annotation
  summary: Helper class used to contain information from a single <xref uid="com.fasterxml.jackson.annotation.JsonFormat" data-throw-if-not-resolved="false">JsonFormat</xref> annotation.
  syntax:
    content: public static class JsonFormat.Value implements JacksonAnnotationValue<JsonFormat>, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JsonFormat>
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value()
  id: Value()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value()
  nameWithType: JsonFormat.Value.Value()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value()
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(com.fasterxml.jackson.annotation.JsonFormat)
  id: Value(com.fasterxml.jackson.annotation.JsonFormat)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value(JsonFormat ann)
  nameWithType: JsonFormat.Value.Value(JsonFormat ann)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(JsonFormat ann)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value(JsonFormat ann)
    parameters:
    - id: ann
      type: com.fasterxml.jackson.annotation.JsonFormat
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features)
  id: Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f)
  nameWithType: JsonFormat.Value.Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f)
    parameters:
    - id: p
      type: java.lang.String
    - id: sh
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    - id: localeStr
      type: java.lang.String
    - id: tzStr
      type: java.lang.String
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Features
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  id: Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.lang.String,java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f, Boolean lenient)
  nameWithType: JsonFormat.Value.Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f, Boolean lenient)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f, Boolean lenient)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value(String p, JsonFormat.Shape sh, String localeStr, String tzStr, JsonFormat.Features f, Boolean lenient)
    parameters:
    - id: p
      type: java.lang.String
    - id: sh
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    - id: localeStr
      type: java.lang.String
    - id: tzStr
      type: java.lang.String
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Features
    - id: lenient
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)
  id: Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f)
  nameWithType: JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f)
    parameters:
    - id: p
      type: java.lang.String
    - id: sh
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    - id: l
      type: java.util.Locale
    - id: tzStr
      type: java.lang.String
    - id: tz
      type: java.util.TimeZone
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Features
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  id: Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.lang.String,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f, Boolean lenient)
  nameWithType: JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f, Boolean lenient)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f, Boolean lenient)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value(String p, JsonFormat.Shape sh, Locale l, String tzStr, TimeZone tz, JsonFormat.Features f, Boolean lenient)
    parameters:
    - id: p
      type: java.lang.String
    - id: sh
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    - id: l
      type: java.util.Locale
    - id: tzStr
      type: java.lang.String
    - id: tz
      type: java.util.TimeZone
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Features
    - id: lenient
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)
  id: Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f)
  nameWithType: JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f)
    parameters:
    - id: p
      type: java.lang.String
    - id: sh
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    - id: l
      type: java.util.Locale
    - id: tz
      type: java.util.TimeZone
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Features
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  id: Value(java.lang.String,com.fasterxml.jackson.annotation.JsonFormat.Shape,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.annotation.JsonFormat.Features,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f, Boolean lenient)
  nameWithType: JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f, Boolean lenient)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f, Boolean lenient)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Value(String p, JsonFormat.Shape sh, Locale l, TimeZone tz, JsonFormat.Features f, Boolean lenient)
    parameters:
    - id: p
      type: java.lang.String
    - id: sh
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    - id: l
      type: java.util.Locale
    - id: tz
      type: java.util.TimeZone
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Features
    - id: lenient
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.empty()
  id: empty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: empty()
  nameWithType: JsonFormat.Value.empty()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.empty()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.empty*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static final JsonFormat.Value empty()
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: equals(Object o)
  nameWithType: JsonFormat.Value.equals(Object o)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.equals(Object o)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.equals*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.forLeniency(boolean)
  id: forLeniency(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: forLeniency(boolean lenient)
  nameWithType: JsonFormat.Value.forLeniency(boolean lenient)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.forLeniency(boolean lenient)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.forLeniency*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonFormat.Value forLeniency(boolean lenient)
    parameters:
    - id: lenient
      type: boolean
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.forPattern(java.lang.String)
  id: forPattern(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: forPattern(String p)
  nameWithType: JsonFormat.Value.forPattern(String p)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.forPattern(String p)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.forPattern*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonFormat.Value forPattern(String p)
    parameters:
    - id: p
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.forShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)
  id: forShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: forShape(JsonFormat.Shape sh)
  nameWithType: JsonFormat.Value.forShape(JsonFormat.Shape sh)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.forShape(JsonFormat.Shape sh)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.forShape*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonFormat.Value forShape(JsonFormat.Shape sh)
    parameters:
    - id: sh
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.from(com.fasterxml.jackson.annotation.JsonFormat)
  id: from(com.fasterxml.jackson.annotation.JsonFormat)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: from(JsonFormat ann)
  nameWithType: JsonFormat.Value.from(JsonFormat ann)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.from(JsonFormat ann)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.from*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static final JsonFormat.Value from(JsonFormat ann)
    parameters:
    - id: ann
      type: com.fasterxml.jackson.annotation.JsonFormat
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  id: getFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: getFeature(JsonFormat.Feature f)
  nameWithType: JsonFormat.Value.getFeature(JsonFormat.Feature f)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature(JsonFormat.Feature f)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Accessor for checking whether this format value has specific setting for given feature. Result is 3-valued with either \`null\`, <xref uid="java.lang.Boolean.TRUE" data-throw-if-not-resolved="false">Boolean#TRUE</xref> or <xref uid="java.lang.Boolean.FALSE" data-throw-if-not-resolved="false">Boolean#FALSE</xref>, indicating 'yes/no/dunno' choices, where \`null\` ("dunno") indicates that the default handling should be used based on global defaults, and there is no format override.
  syntax:
    content: public Boolean getFeature(JsonFormat.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Feature
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeatures()
  id: getFeatures()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: getFeatures()
  nameWithType: JsonFormat.Value.getFeatures()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeatures()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeatures*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Accessor for getting full set of features enabled/disabled.
  syntax:
    content: public JsonFormat.Features getFeatures()
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Features
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getLenient()
  id: getLenient()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: getLenient()
  nameWithType: JsonFormat.Value.getLenient()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getLenient()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.getLenient*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Boolean getLenient()
    return:
      type: java.lang.Boolean
      description: >-
        <code>Boolean.TRUE</code> if explicitly set to true; <code>Boolean.FALSE</code>
           if explicit set to false; or <code>null</code> if not set either way (assuming
           "default leniency" for the context)
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getLocale()
  id: getLocale()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: getLocale()
  nameWithType: JsonFormat.Value.getLocale()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getLocale()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.getLocale*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public Locale getLocale()
    return:
      type: java.util.Locale
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getPattern()
  id: getPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: getPattern()
  nameWithType: JsonFormat.Value.getPattern()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getPattern()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.getPattern*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public String getPattern()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getShape()
  id: getShape()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: getShape()
  nameWithType: JsonFormat.Value.getShape()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getShape()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.getShape*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Shape getShape()
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone()
  id: getTimeZone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: getTimeZone()
  nameWithType: JsonFormat.Value.getTimeZone()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public TimeZone getTimeZone()
    return:
      type: java.util.TimeZone
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLenient()
  id: hasLenient()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: hasLenient()
  nameWithType: JsonFormat.Value.hasLenient()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLenient()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLenient*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: 'Accessor for checking whether there is a setting for leniency. NOTE: does NOT mean that \`lenient\` is \`true\` necessarily; just that it has been set.'
  syntax:
    content: public boolean hasLenient()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLocale()
  id: hasLocale()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: hasLocale()
  nameWithType: JsonFormat.Value.hasLocale()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLocale()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLocale*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean hasLocale()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasPattern()
  id: hasPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: hasPattern()
  nameWithType: JsonFormat.Value.hasPattern()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasPattern()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.hasPattern*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean hasPattern()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasShape()
  id: hasShape()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: hasShape()
  nameWithType: JsonFormat.Value.hasShape()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasShape()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.hasShape*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean hasShape()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasTimeZone()
  id: hasTimeZone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: hasTimeZone()
  nameWithType: JsonFormat.Value.hasTimeZone()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasTimeZone()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.hasTimeZone*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public boolean hasTimeZone()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: hashCode()
  nameWithType: JsonFormat.Value.hashCode()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hashCode()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.hashCode*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.isLenient()
  id: isLenient()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: isLenient()
  nameWithType: JsonFormat.Value.isLenient()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.isLenient()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.isLenient*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: >-
    Convenience method equivalent to


    ```java

    Boolean.TRUE.equals(getLenient())

    ```


    that is, returns `true` if (and only if) leniency has been explicitly set to \{code true\}; but not if it is undefined.
  syntax:
    content: public boolean isLenient()
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.merge(com.fasterxml.jackson.annotation.JsonFormat.Value,com.fasterxml.jackson.annotation.JsonFormat.Value)
  id: merge(com.fasterxml.jackson.annotation.JsonFormat.Value,com.fasterxml.jackson.annotation.JsonFormat.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: merge(JsonFormat.Value base, JsonFormat.Value overrides)
  nameWithType: JsonFormat.Value.merge(JsonFormat.Value base, JsonFormat.Value overrides)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.merge(JsonFormat.Value base, JsonFormat.Value overrides)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.merge*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Helper method that will try to combine values from two <xref uid="com.fasterxml.jackson.annotation.JsonFormat.Value" data-throw-if-not-resolved="false">Value</xref> instances, using one as base settings, and the other as overrides to use instead of base values when defined; base values are only use if override does not specify a value (matching value is null or logically missing). Note that one or both of value instances may be \`null\`, directly; if both are \`null\`, result will also be \`null\`; otherwise never null.
  syntax:
    content: public static JsonFormat.Value merge(JsonFormat.Value base, JsonFormat.Value overrides)
    parameters:
    - id: base
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
    - id: overrides
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.mergeAll(com.fasterxml.jackson.annotation.JsonFormat.Value...)
  id: mergeAll(com.fasterxml.jackson.annotation.JsonFormat.Value...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: mergeAll(JsonFormat.Value[] values)
  nameWithType: JsonFormat.Value.mergeAll(JsonFormat.Value[] values)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.mergeAll(JsonFormat.Value[] values)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.mergeAll*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static JsonFormat.Value mergeAll(JsonFormat.Value[] values)
    parameters:
    - id: values
      type: com.fasterxml.jackson.annotation.JsonFormat.Value[]
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.timeZoneAsString()
  id: timeZoneAsString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: timeZoneAsString()
  nameWithType: JsonFormat.Value.timeZoneAsString()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.timeZoneAsString()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.timeZoneAsString*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Alternate access (compared to <xref uid="com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone()" data-throw-if-not-resolved="false">#getTimeZone()</xref>) which is useful when caller just wants time zone id to convert, but not as JDK provided <xref uid="java.util.TimeZone" data-throw-if-not-resolved="false">TimeZone</xref>
  syntax:
    content: public String timeZoneAsString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: toString()
  nameWithType: JsonFormat.Value.toString()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.toString()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.toString*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.valueFor()
  id: valueFor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: valueFor()
  nameWithType: JsonFormat.Value.valueFor()
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.valueFor()
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.valueFor*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Introspection method that may be used to find actual annotation that may be used as the source for value instance.
  syntax:
    content: public Class<JsonFormat> valueFor()
    return:
      type: java.lang.Class<com.fasterxml.jackson.annotation.JsonFormat>
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  id: withFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withFeature(JsonFormat.Feature f)
  nameWithType: JsonFormat.Value.withFeature(JsonFormat.Feature f)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withFeature(JsonFormat.Feature f)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withFeature*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Value withFeature(JsonFormat.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Feature
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withLenient(java.lang.Boolean)
  id: withLenient(java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withLenient(Boolean lenient)
  nameWithType: JsonFormat.Value.withLenient(Boolean lenient)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withLenient(Boolean lenient)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withLenient*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Value withLenient(Boolean lenient)
    parameters:
    - id: lenient
      type: java.lang.Boolean
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withLocale(java.util.Locale)
  id: withLocale(java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withLocale(Locale l)
  nameWithType: JsonFormat.Value.withLocale(Locale l)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withLocale(Locale l)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withLocale*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Value withLocale(Locale l)
    parameters:
    - id: l
      type: java.util.Locale
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withOverrides(com.fasterxml.jackson.annotation.JsonFormat.Value)
  id: withOverrides(com.fasterxml.jackson.annotation.JsonFormat.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withOverrides(JsonFormat.Value overrides)
  nameWithType: JsonFormat.Value.withOverrides(JsonFormat.Value overrides)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withOverrides(JsonFormat.Value overrides)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withOverrides*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public final JsonFormat.Value withOverrides(JsonFormat.Value overrides)
    parameters:
    - id: overrides
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withPattern(java.lang.String)
  id: withPattern(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withPattern(String p)
  nameWithType: JsonFormat.Value.withPattern(String p)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withPattern(String p)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withPattern*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Value withPattern(String p)
    parameters:
    - id: p
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)
  id: withShape(com.fasterxml.jackson.annotation.JsonFormat.Shape)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withShape(JsonFormat.Shape s)
  nameWithType: JsonFormat.Value.withShape(JsonFormat.Shape s)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withShape(JsonFormat.Shape s)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withShape*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Value withShape(JsonFormat.Shape s)
    parameters:
    - id: s
      type: com.fasterxml.jackson.annotation.JsonFormat.Shape
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withTimeZone(java.util.TimeZone)
  id: withTimeZone(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withTimeZone(TimeZone tz)
  nameWithType: JsonFormat.Value.withTimeZone(TimeZone tz)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withTimeZone(TimeZone tz)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withTimeZone*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Value withTimeZone(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withoutFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  id: withoutFeature(com.fasterxml.jackson.annotation.JsonFormat.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonFormat.Value
  langs:
  - java
  name: withoutFeature(JsonFormat.Feature f)
  nameWithType: JsonFormat.Value.withoutFeature(JsonFormat.Feature f)
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withoutFeature(JsonFormat.Feature f)
  overload: com.fasterxml.jackson.annotation.JsonFormat.Value.withoutFeature*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public JsonFormat.Value withoutFeature(JsonFormat.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.annotation.JsonFormat.Feature
    return:
      type: com.fasterxml.jackson.annotation.JsonFormat.Value
references:
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.Value*
  name: Value
  nameWithType: JsonFormat.Value.Value
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.Value
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat
  name: JsonFormat
  nameWithType: JsonFormat
  fullName: com.fasterxml.jackson.annotation.JsonFormat
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonFormat.Shape
  name: JsonFormat.Shape
  nameWithType: JsonFormat.Shape
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Shape
- uid: com.fasterxml.jackson.annotation.JsonFormat.Features
  name: JsonFormat.Features
  nameWithType: JsonFormat.Features
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Features
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.empty*
  name: empty
  nameWithType: JsonFormat.Value.empty
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.empty
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.merge*
  name: merge
  nameWithType: JsonFormat.Value.merge
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.merge
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value[]
  spec.java:
  - uid: com.fasterxml.jackson.annotation.JsonFormat.Value
    name: Value
    fullName: com.fasterxml.jackson.annotation.JsonFormat.Value
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.mergeAll*
  name: mergeAll
  nameWithType: JsonFormat.Value.mergeAll
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.mergeAll
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.from*
  name: from
  nameWithType: JsonFormat.Value.from
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.from
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withOverrides*
  name: withOverrides
  nameWithType: JsonFormat.Value.withOverrides
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withOverrides
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.forPattern*
  name: forPattern
  nameWithType: JsonFormat.Value.forPattern
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.forPattern
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.forShape*
  name: forShape
  nameWithType: JsonFormat.Value.forShape
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.forShape
  package: com.fasterxml.jackson.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.forLeniency*
  name: forLeniency
  nameWithType: JsonFormat.Value.forLeniency
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.forLeniency
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withPattern*
  name: withPattern
  nameWithType: JsonFormat.Value.withPattern
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withPattern
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withShape*
  name: withShape
  nameWithType: JsonFormat.Value.withShape
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withShape
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withLocale*
  name: withLocale
  nameWithType: JsonFormat.Value.withLocale
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withLocale
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withTimeZone*
  name: withTimeZone
  nameWithType: JsonFormat.Value.withTimeZone
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withTimeZone
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withLenient*
  name: withLenient
  nameWithType: JsonFormat.Value.withLenient
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withLenient
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Feature
  name: JsonFormat.Feature
  nameWithType: JsonFormat.Feature
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Feature
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withFeature*
  name: withFeature
  nameWithType: JsonFormat.Value.withFeature
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withFeature
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.withoutFeature*
  name: withoutFeature
  nameWithType: JsonFormat.Value.withoutFeature
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.withoutFeature
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Class<com.fasterxml.jackson.annotation.JsonFormat>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.annotation.JsonFormat
    name: JsonFormat
    fullName: com.fasterxml.jackson.annotation.JsonFormat
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.valueFor*
  name: valueFor
  nameWithType: JsonFormat.Value.valueFor
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.valueFor
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getPattern*
  name: getPattern
  nameWithType: JsonFormat.Value.getPattern
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getPattern
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getShape*
  name: getShape
  nameWithType: JsonFormat.Value.getShape
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getShape
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getLocale*
  name: getLocale
  nameWithType: JsonFormat.Value.getLocale
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getLocale
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getLenient*
  name: getLenient
  nameWithType: JsonFormat.Value.getLenient
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getLenient
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.isLenient*
  name: isLenient
  nameWithType: JsonFormat.Value.isLenient
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.isLenient
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.timeZoneAsString*
  name: timeZoneAsString
  nameWithType: JsonFormat.Value.timeZoneAsString
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.timeZoneAsString
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone*
  name: getTimeZone
  nameWithType: JsonFormat.Value.getTimeZone
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getTimeZone
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasShape*
  name: hasShape
  nameWithType: JsonFormat.Value.hasShape
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasShape
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasPattern*
  name: hasPattern
  nameWithType: JsonFormat.Value.hasPattern
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasPattern
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLocale*
  name: hasLocale
  nameWithType: JsonFormat.Value.hasLocale
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLocale
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasTimeZone*
  name: hasTimeZone
  nameWithType: JsonFormat.Value.hasTimeZone
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasTimeZone
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLenient*
  name: hasLenient
  nameWithType: JsonFormat.Value.hasLenient
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hasLenient
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature*
  name: getFeature
  nameWithType: JsonFormat.Value.getFeature
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeature
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeatures*
  name: getFeatures
  nameWithType: JsonFormat.Value.getFeatures
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.getFeatures
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.toString*
  name: toString
  nameWithType: JsonFormat.Value.toString
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.toString
  package: com.fasterxml.jackson.annotation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.hashCode*
  name: hashCode
  nameWithType: JsonFormat.Value.hashCode
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.hashCode
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.annotation.JsonFormat.Value.equals*
  name: equals
  nameWithType: JsonFormat.Value.equals
  fullName: com.fasterxml.jackson.annotation.JsonFormat.Value.equals
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JsonFormat>
  name: JacksonAnnotationValue<JsonFormat>
  nameWithType: JacksonAnnotationValue<JsonFormat>
  fullName: com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JsonFormat>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.annotation.JacksonAnnotationValue
  name: JacksonAnnotationValue
  nameWithType: JacksonAnnotationValue
  fullName: com.fasterxml.jackson.annotation.JacksonAnnotationValue
