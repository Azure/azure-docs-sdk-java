### YamlMime:JavaType
uid: "com.azure.ai.formrecognizer.models.DocumentParagraph"
fullName: "com.azure.ai.formrecognizer.models.DocumentParagraph"
name: "DocumentParagraph"
nameWithType: "DocumentParagraph"
summary: "A paragraph object consisting with contiguous lines generally with common alignment and spacing."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DocumentParagraph"
constructors:
- uid: "com.azure.ai.formrecognizer.models.DocumentParagraph.DocumentParagraph()"
  fullName: "com.azure.ai.formrecognizer.models.DocumentParagraph.DocumentParagraph()"
  name: "DocumentParagraph()"
  nameWithType: "DocumentParagraph.DocumentParagraph()"
  syntax: "public DocumentParagraph()"
methods:
- uid: "com.azure.ai.formrecognizer.models.DocumentParagraph.getBoundingRegions()"
  fullName: "com.azure.ai.formrecognizer.models.DocumentParagraph.getBoundingRegions()"
  name: "getBoundingRegions()"
  nameWithType: "DocumentParagraph.getBoundingRegions()"
  summary: "Get the boundingRegions property: Bounding regions covering the paragraph."
  syntax: "public List<BoundingRegion> getBoundingRegions()"
  returns:
    description: "the boundingRegions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.BoundingRegion?alt=com.azure.ai.formrecognizer.models.BoundingRegion&text=BoundingRegion\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.models.DocumentParagraph.getContent()"
  fullName: "com.azure.ai.formrecognizer.models.DocumentParagraph.getContent()"
  name: "getContent()"
  nameWithType: "DocumentParagraph.getContent()"
  summary: "Get the content property: Concatenated content of the paragraph in reading order."
  syntax: "public String getContent()"
  returns:
    description: "the content value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.DocumentParagraph.getRole()"
  fullName: "com.azure.ai.formrecognizer.models.DocumentParagraph.getRole()"
  name: "getRole()"
  nameWithType: "DocumentParagraph.getRole()"
  summary: "Get the role property: Semantic role of the paragraph."
  syntax: "public ParagraphRole getRole()"
  returns:
    description: "the role value."
    type: "<xref href=\"com.azure.ai.formrecognizer.models.ParagraphRole?alt=com.azure.ai.formrecognizer.models.ParagraphRole&text=ParagraphRole\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.models.DocumentParagraph.getSpans()"
  fullName: "com.azure.ai.formrecognizer.models.DocumentParagraph.getSpans()"
  name: "getSpans()"
  nameWithType: "DocumentParagraph.getSpans()"
  summary: "Get the spans property: Location of the paragraph in the reading order concatenated content."
  syntax: "public List<DocumentSpan> getSpans()"
  returns:
    description: "the spans value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.DocumentSpan?alt=com.azure.ai.formrecognizer.models.DocumentSpan&text=DocumentSpan\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
metadata: {}
package: "com.azure.ai.formrecognizer.models"
artifact: com.azure:azure-ai-formrecognizer:4.0.0-beta.5
