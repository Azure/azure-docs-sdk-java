### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex
  id: DaitchMokotoffSoundex
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language
  children:
  - org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex()
  - org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean)
  - org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.Object)
  - org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)
  - org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)
  langs:
  - java
  name: DaitchMokotoffSoundex
  nameWithType: DaitchMokotoffSoundex
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex
  type: Class
  package: org.apache.commons.codec.language
  summary: >-
    Encodes a string into a Daitch-Mokotoff Soundex value.


    The Daitch-Mokotoff Soundex algorithm is a refinement of the Russel and American Soundex algorithms, yielding greater accuracy in matching especially Slavish and Yiddish surnames with similar pronunciation but differences in spelling.


    The main differences compared to the other soundex variants are:

     *  coded names are 6 digits long
     *  the initial character of the name is coded
     *  rules to encoded multi-character n-grams
     *  multiple possible encodings for the same name (branching)

    This implementation supports branching, depending on the used method:

     *  <xref uid="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" data-throw-if-not-resolved="false">#encode(String)</xref> \- branching disabled, only the first code will be returned
     *  <xref uid="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" data-throw-if-not-resolved="false">#soundex(String)</xref> \- branching enabled, all codes will be returned, separated by '|'

    Note: this implementation has additional branching rules compared to the original description of the algorithm. The rules can be customized by overriding the default rules contained in the resource file `org/apache/commons/codec/language/dmrules.txt`.


    This class is thread-safe.
  syntax:
    content: public class DaitchMokotoffSoundex implements StringEncoder
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.commons.codec.StringEncoder
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex()
  id: DaitchMokotoffSoundex()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.DaitchMokotoffSoundex
  langs:
  - java
  name: DaitchMokotoffSoundex()
  nameWithType: DaitchMokotoffSoundex.DaitchMokotoffSoundex()
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex()
  overload: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex*
  type: Constructor
  package: org.apache.commons.codec.language
  summary: Creates a new instance with ASCII-folding enabled.
  syntax:
    content: public DaitchMokotoffSoundex()
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean)
  id: DaitchMokotoffSoundex(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.DaitchMokotoffSoundex
  langs:
  - java
  name: DaitchMokotoffSoundex(boolean folding)
  nameWithType: DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean folding)
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex(boolean folding)
  overload: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex*
  type: Constructor
  package: org.apache.commons.codec.language
  summary: >-
    Creates a new instance.


    With ASCII-folding enabled, certain accented characters will be transformed to equivalent ASCII characters, e.g. ï¿½ -> e.
  syntax:
    content: public DaitchMokotoffSoundex(boolean folding)
    parameters:
    - id: folding
      type: boolean
      description: if ASCII-folding shall be performed before encoding
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.Object)
  id: encode(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.DaitchMokotoffSoundex
  langs:
  - java
  name: encode(Object obj)
  nameWithType: DaitchMokotoffSoundex.encode(Object obj)
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(Object obj)
  overload: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode*
  type: Method
  package: org.apache.commons.codec.language
  summary: >-
    Encodes an Object using the Daitch-Mokotoff soundex algorithm without branching.


    This method is provided in order to satisfy the requirements of the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String.
  syntax:
    content: public Object encode(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
      description: Object to encode
    return:
      type: java.lang.Object
      description: >-
        An object (of type java.lang.String) containing the DM soundex code, which corresponds to the String
                 supplied.
  exceptions:
  - type: org.apache.commons.codec.EncoderException
    description: if the parameter supplied is not of type java.lang.String
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)
  id: encode(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.DaitchMokotoffSoundex
  langs:
  - java
  name: encode(String source)
  nameWithType: DaitchMokotoffSoundex.encode(String source)
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(String source)
  overload: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode*
  type: Method
  package: org.apache.commons.codec.language
  summary: Encodes a String using the Daitch-Mokotoff soundex algorithm without branching.
  syntax:
    content: public String encode(String source)
    parameters:
    - id: source
      type: java.lang.String
      description: A String object to encode
    return:
      type: java.lang.String
      description: A DM Soundex code corresponding to the String supplied
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)
  id: soundex(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.DaitchMokotoffSoundex
  langs:
  - java
  name: soundex(String source)
  nameWithType: DaitchMokotoffSoundex.soundex(String source)
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(String source)
  overload: org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex*
  type: Method
  package: org.apache.commons.codec.language
  summary: >-
    Encodes a String using the Daitch-Mokotoff soundex algorithm with branching.


    In case a string is encoded into multiple codes (see branching rules), the result will contain all codes, separated by '|'.


    Example: the name "AUERBACH" is encoded as both

     *  097400
     *  097500

    Thus the result will be "097400|097500".
  syntax:
    content: public String soundex(String source)
    parameters:
    - id: source
      type: java.lang.String
      description: A String object to encode
    return:
      type: java.lang.String
      description: A string containing a set of DM Soundex codes corresponding to the String supplied
references:
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex*
  name: DaitchMokotoffSoundex
  nameWithType: DaitchMokotoffSoundex.DaitchMokotoffSoundex
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.DaitchMokotoffSoundex
  package: org.apache.commons.codec.language
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.commons.codec.EncoderException
  name: EncoderException
  nameWithType: EncoderException
  fullName: org.apache.commons.codec.EncoderException
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode*
  name: encode
  nameWithType: DaitchMokotoffSoundex.encode
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.encode
  package: org.apache.commons.codec.language
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex*
  name: soundex
  nameWithType: DaitchMokotoffSoundex.soundex
  fullName: org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex
  package: org.apache.commons.codec.language
- uid: org.apache.commons.codec.StringEncoder
  name: StringEncoder
  nameWithType: StringEncoder
  fullName: org.apache.commons.codec.StringEncoder
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
