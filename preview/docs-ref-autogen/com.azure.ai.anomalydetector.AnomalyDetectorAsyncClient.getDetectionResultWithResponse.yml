### YamlMime:JavaMember
uid: "com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.getDetectionResultWithResponse*"
fullName: "com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.getDetectionResultWithResponse"
name: "getDetectionResultWithResponse"
nameWithType: "AnomalyDetectorAsyncClient.getDetectionResultWithResponse"
members:
- uid: "com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.getDetectionResultWithResponse(java.util.UUID)"
  fullName: "com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.getDetectionResultWithResponse(UUID resultId)"
  name: "getDetectionResultWithResponse(UUID resultId)"
  nameWithType: "AnomalyDetectorAsyncClient.getDetectionResultWithResponse(UUID resultId)"
  summary: "Get multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api."
  parameters:
  - description: "Result identifier."
    name: "resultId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<DetectionResult>> getDetectionResultWithResponse(UUID resultId)"
  returns:
    description: "multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.anomalydetector.models.DetectionResult?alt=com.azure.ai.anomalydetector.models.DetectionResult&text=DetectionResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.anomalydetector"
artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.2
