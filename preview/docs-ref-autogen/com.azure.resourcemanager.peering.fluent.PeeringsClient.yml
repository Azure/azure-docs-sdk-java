### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient"
fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient"
name: "PeeringsClient"
nameWithType: "PeeringsClient"
summary: "An instance of this class provides access to all the operations defined in Peerings<wbr>Client."
syntax: "public interface PeeringsClient"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringInner)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.createOrUpdate(String resourceGroupName, String peeringName, PeeringInner peering)"
  name: "createOrUpdate(String resourceGroupName, String peeringName, PeeringInner peering)"
  nameWithType: "PeeringsClient.createOrUpdate(String resourceGroupName, String peeringName, PeeringInner peering)"
  summary: "Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create or update a peering."
    name: "peering"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringInner createOrUpdate(String resourceGroupName, String peeringName, PeeringInner peering)"
  desc: "Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "peering is a logical representation of a set of connections to the Microsoft Cloud Edge at a location."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.createOrUpdateWithResponse(String resourceGroupName, String peeringName, PeeringInner peering, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String peeringName, PeeringInner peering, Context context)"
  nameWithType: "PeeringsClient.createOrUpdateWithResponse(String resourceGroupName, String peeringName, PeeringInner peering, Context context)"
  summary: "Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create or update a peering."
    name: "peering"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringInner> createOrUpdateWithResponse(String resourceGroupName, String peeringName, PeeringInner peering, Context context)"
  desc: "Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "peering is a logical representation of a set of connections to the Microsoft Cloud Edge at a location."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.delete(String resourceGroupName, String peeringName)"
  name: "delete(String resourceGroupName, String peeringName)"
  nameWithType: "PeeringsClient.delete(String resourceGroupName, String peeringName)"
  summary: "Deletes an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String peeringName)"
  desc: "Deletes an existing peering with the specified name under the given subscription and resource group."
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  nameWithType: "PeeringsClient.deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  summary: "Deletes an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringName, Context context)"
  desc: "Deletes an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.getByResourceGroup(String resourceGroupName, String peeringName)"
  name: "getByResourceGroup(String resourceGroupName, String peeringName)"
  nameWithType: "PeeringsClient.getByResourceGroup(String resourceGroupName, String peeringName)"
  summary: "Gets an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringInner getByResourceGroup(String resourceGroupName, String peeringName)"
  desc: "Gets an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  nameWithType: "PeeringsClient.getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  summary: "Gets an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringInner> getByResourceGroupWithResponse(String resourceGroupName, String peeringName, Context context)"
  desc: "Gets an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.list()"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.list()"
  name: "list()"
  nameWithType: "PeeringsClient.list()"
  summary: "Lists all of the peerings under the given subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PeeringInner> list()"
  desc: "Lists all of the peerings under the given subscription."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "PeeringsClient.list(Context context)"
  summary: "Lists all of the peerings under the given subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringInner> list(Context context)"
  desc: "Lists all of the peerings under the given subscription."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "PeeringsClient.listByResourceGroup(String resourceGroupName)"
  summary: "Lists all of the peerings under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringInner> listByResourceGroup(String resourceGroupName)"
  desc: "Lists all of the peerings under the given subscription and resource group."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "PeeringsClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Lists all of the peerings under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Lists all of the peerings under the given subscription and resource group."
  returns:
    description: "the paginated list of peerings."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.models.ResourceTags)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.update(String resourceGroupName, String peeringName, ResourceTags tags)"
  name: "update(String resourceGroupName, String peeringName, ResourceTags tags)"
  nameWithType: "PeeringsClient.update(String resourceGroupName, String peeringName, ResourceTags tags)"
  summary: "Updates tags for a peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource tags."
    name: "tags"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ResourceTags?alt=com.azure.resourcemanager.peering.models.ResourceTags&text=ResourceTags\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringInner update(String resourceGroupName, String peeringName, ResourceTags tags)"
  desc: "Updates tags for a peering with the specified name under the given subscription and resource group."
  returns:
    description: "peering is a logical representation of a set of connections to the Microsoft Cloud Edge at a location."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringsClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.models.ResourceTags,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringsClient.updateWithResponse(String resourceGroupName, String peeringName, ResourceTags tags, Context context)"
  name: "updateWithResponse(String resourceGroupName, String peeringName, ResourceTags tags, Context context)"
  nameWithType: "PeeringsClient.updateWithResponse(String resourceGroupName, String peeringName, ResourceTags tags, Context context)"
  summary: "Updates tags for a peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource tags."
    name: "tags"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ResourceTags?alt=com.azure.resourcemanager.peering.models.ResourceTags&text=ResourceTags\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringInner> updateWithResponse(String resourceGroupName, String peeringName, ResourceTags tags, Context context)"
  desc: "Updates tags for a peering with the specified name under the given subscription and resource group."
  returns:
    description: "peering is a logical representation of a set of connections to the Microsoft Cloud Edge at a location."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringInner&text=PeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in PeeringsClient."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
