### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser"
name: "createParser"
nameWithType: "ObjectMapper.createParser"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[])"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[] content)"
  name: "createParser(byte[] content)"
  nameWithType: "ObjectMapper.createParser(byte[] content)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content from specified byte array. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "content"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public JsonParser createParser(byte[] content)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[],int,int)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[] content, int offset, int len)"
  name: "createParser(byte[] content, int offset, int len)"
  nameWithType: "ObjectMapper.createParser(byte[] content, int offset, int len)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content from specified byte array. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "content"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(byte[] content, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(char[])"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(char[] content)"
  name: "createParser(char[] content)"
  nameWithType: "ObjectMapper.createParser(char[] content)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content from specified character array Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "content"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public JsonParser createParser(char[] content)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(char[],int,int)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(char[] content, int offset, int len)"
  name: "createParser(char[] content, int offset, int len)"
  nameWithType: "ObjectMapper.createParser(char[] content, int offset, int len)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content from specified character array. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "content"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "offset"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(char[] content, int offset, int len)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.DataInput)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(DataInput content)"
  name: "createParser(DataInput content)"
  nameWithType: "ObjectMapper.createParser(DataInput content)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content using specified <xref uid=\"java.io.DataInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataInput\"></xref>. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "content"
    type: "<xref href=\"java.io.DataInput?alt=java.io.DataInput&text=DataInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(DataInput content)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.File)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(File src)"
  name: "createParser(File src)"
  nameWithType: "ObjectMapper.createParser(File src)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content from specified <xref uid=\"java.io.File\" data-throw-if-not-resolved=\"false\" data-raw-source=\"File\"></xref>. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "src"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(File src)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.InputStream)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(InputStream in)"
  name: "createParser(InputStream in)"
  nameWithType: "ObjectMapper.createParser(InputStream in)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content using specified <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "in"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(InputStream in)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.Reader)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(Reader r)"
  name: "createParser(Reader r)"
  nameWithType: "ObjectMapper.createParser(Reader r)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content using specified <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "r"
    type: "<xref href=\"java.io.Reader?alt=java.io.Reader&text=Reader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(Reader r)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(String content)"
  name: "createParser(String content)"
  nameWithType: "ObjectMapper.createParser(String content)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content from specified String. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "content"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(String content)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.net.URL)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.createParser(URL src)"
  name: "createParser(URL src)"
  nameWithType: "ObjectMapper.createParser(URL src)"
  summary: "Factory method for constructing properly initialized <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> to read content from specified <xref uid=\"java.io.File\" data-throw-if-not-resolved=\"false\" data-raw-source=\"File\"></xref>. Parser is not managed (or \"owned\") by ObjectMapper: caller is responsible for properly closing it once content reading is complete."
  parameters:
  - name: "src"
    type: "<xref href=\"java.net.URL?alt=java.net.URL&text=URL\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonParser createParser(URL src)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
