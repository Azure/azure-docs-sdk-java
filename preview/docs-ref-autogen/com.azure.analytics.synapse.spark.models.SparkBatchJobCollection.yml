### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection"
fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection"
name: "SparkBatchJobCollection"
nameWithType: "SparkBatchJobCollection"
summary: "Response for batch list operation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkBatchJobCollection"
constructors:
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.SparkBatchJobCollection()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.SparkBatchJobCollection()"
  name: "SparkBatchJobCollection()"
  nameWithType: "SparkBatchJobCollection.SparkBatchJobCollection()"
  syntax: "public SparkBatchJobCollection()"
methods:
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.getFrom()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.getFrom()"
  name: "getFrom()"
  nameWithType: "SparkBatchJobCollection.getFrom()"
  summary: "Get the from property: The start index of fetched sessions."
  syntax: "public int getFrom()"
  desc: "Get the from property: The start index of fetched sessions."
  returns:
    description: "the from value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.getSessions()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.getSessions()"
  name: "getSessions()"
  nameWithType: "SparkBatchJobCollection.getSessions()"
  summary: "Get the sessions property: Batch list."
  syntax: "public List<SparkBatchJob> getSessions()"
  desc: "Get the sessions property: Batch list."
  returns:
    description: "the sessions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.getTotal()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.getTotal()"
  name: "getTotal()"
  nameWithType: "SparkBatchJobCollection.getTotal()"
  summary: "Get the total property: Number of sessions fetched."
  syntax: "public int getTotal()"
  desc: "Get the total property: Number of sessions fetched."
  returns:
    description: "the total value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.setFrom(int)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.setFrom(int from)"
  name: "setFrom(int from)"
  nameWithType: "SparkBatchJobCollection.setFrom(int from)"
  summary: "Set the from property: The start index of fetched sessions."
  parameters:
  - description: "the from value to set."
    name: "from"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobCollection setFrom(int from)"
  desc: "Set the from property: The start index of fetched sessions."
  returns:
    description: "the SparkBatchJobCollection object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.setSessions(java.util.List<com.azure.analytics.synapse.spark.models.SparkBatchJob>)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.setSessions(List<SparkBatchJob> sessions)"
  name: "setSessions(List<SparkBatchJob> sessions)"
  nameWithType: "SparkBatchJobCollection.setSessions(List<SparkBatchJob> sessions)"
  summary: "Set the sessions property: Batch list."
  parameters:
  - description: "the sessions value to set."
    name: "sessions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJob?alt=com.azure.analytics.synapse.spark.models.SparkBatchJob&text=SparkBatchJob\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SparkBatchJobCollection setSessions(List<SparkBatchJob> sessions)"
  desc: "Set the sessions property: Batch list."
  returns:
    description: "the SparkBatchJobCollection object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.setTotal(int)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkBatchJobCollection.setTotal(int total)"
  name: "setTotal(int total)"
  nameWithType: "SparkBatchJobCollection.setTotal(int total)"
  summary: "Set the total property: Number of sessions fetched."
  parameters:
  - description: "the total value to set."
    name: "total"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkBatchJobCollection setTotal(int total)"
  desc: "Set the total property: Number of sessions fetched."
  returns:
    description: "the SparkBatchJobCollection object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkBatchJobCollection?alt=com.azure.analytics.synapse.spark.models.SparkBatchJobCollection&text=SparkBatchJobCollection\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Response for batch list operation."
metadata: {}
package: "com.azure.analytics.synapse.spark.models"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
