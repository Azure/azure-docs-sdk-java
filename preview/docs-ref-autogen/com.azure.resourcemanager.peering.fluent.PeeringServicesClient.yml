### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient"
fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient"
name: "PeeringServicesClient"
nameWithType: "PeeringServicesClient"
summary: "An instance of this class provides access to all the operations defined in Peering<wbr>Services<wbr>Client."
syntax: "public interface PeeringServicesClient"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.createOrUpdate(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService)"
  name: "createOrUpdate(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService)"
  nameWithType: "PeeringServicesClient.createOrUpdate(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService)"
  summary: "Creates a new peering service or updates an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create or update a peering service."
    name: "peeringService"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServiceInner createOrUpdate(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService)"
  desc: "Creates a new peering service or updates an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "peering Service."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.createOrUpdateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService, Context context)"
  name: "createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService, Context context)"
  nameWithType: "PeeringServicesClient.createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService, Context context)"
  summary: "Creates a new peering service or updates an existing peering with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The properties needed to create or update a peering service."
    name: "peeringService"
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringServiceInner> createOrUpdateWithResponse(String resourceGroupName, String peeringServiceName, PeeringServiceInner peeringService, Context context)"
  desc: "Creates a new peering service or updates an existing peering with the specified name under the given subscription and resource group."
  returns:
    description: "peering Service."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.delete(String resourceGroupName, String peeringServiceName)"
  name: "delete(String resourceGroupName, String peeringServiceName)"
  nameWithType: "PeeringServicesClient.delete(String resourceGroupName, String peeringServiceName)"
  summary: "Deletes an existing peering service with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String peeringServiceName)"
  desc: "Deletes an existing peering service with the specified name under the given subscription and resource group."
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.deleteWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  nameWithType: "PeeringServicesClient.deleteWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  summary: "Deletes an existing peering service with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  desc: "Deletes an existing peering service with the specified name under the given subscription and resource group."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.getByResourceGroup(String resourceGroupName, String peeringServiceName)"
  name: "getByResourceGroup(String resourceGroupName, String peeringServiceName)"
  nameWithType: "PeeringServicesClient.getByResourceGroup(String resourceGroupName, String peeringServiceName)"
  summary: "Gets an existing peering service with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServiceInner getByResourceGroup(String resourceGroupName, String peeringServiceName)"
  desc: "Gets an existing peering service with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering service with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.getByResourceGroupWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  nameWithType: "PeeringServicesClient.getByResourceGroupWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  summary: "Gets an existing peering service with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringServiceInner> getByResourceGroupWithResponse(String resourceGroupName, String peeringServiceName, Context context)"
  desc: "Gets an existing peering service with the specified name under the given subscription and resource group."
  returns:
    description: "an existing peering service with the specified name under the given subscription and resource group."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.list()"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.list()"
  name: "list()"
  nameWithType: "PeeringServicesClient.list()"
  summary: "Lists all of the peerings under the given subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<PeeringServiceInner> list()"
  desc: "Lists all of the peerings under the given subscription."
  returns:
    description: "the paginated list of peering services."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "PeeringServicesClient.list(Context context)"
  summary: "Lists all of the peerings under the given subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringServiceInner> list(Context context)"
  desc: "Lists all of the peerings under the given subscription."
  returns:
    description: "the paginated list of peering services."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "PeeringServicesClient.listByResourceGroup(String resourceGroupName)"
  summary: "Lists all of the peering services under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringServiceInner> listByResourceGroup(String resourceGroupName)"
  desc: "Lists all of the peering services under the given subscription and resource group."
  returns:
    description: "the paginated list of peering services."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "PeeringServicesClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Lists all of the peering services under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PeeringServiceInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Lists all of the peering services under the given subscription and resource group."
  returns:
    description: "the paginated list of peering services."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.models.ResourceTags)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.update(String resourceGroupName, String peeringServiceName, ResourceTags tags)"
  name: "update(String resourceGroupName, String peeringServiceName, ResourceTags tags)"
  nameWithType: "PeeringServicesClient.update(String resourceGroupName, String peeringServiceName, ResourceTags tags)"
  summary: "Updates tags for a peering service with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource tags."
    name: "tags"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ResourceTags?alt=com.azure.resourcemanager.peering.models.ResourceTags&text=ResourceTags\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServiceInner update(String resourceGroupName, String peeringServiceName, ResourceTags tags)"
  desc: "Updates tags for a peering service with the specified name under the given subscription and resource group."
  returns:
    description: "peering Service."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.peering.models.ResourceTags,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.PeeringServicesClient.updateWithResponse(String resourceGroupName, String peeringServiceName, ResourceTags tags, Context context)"
  name: "updateWithResponse(String resourceGroupName, String peeringServiceName, ResourceTags tags, Context context)"
  nameWithType: "PeeringServicesClient.updateWithResponse(String resourceGroupName, String peeringServiceName, ResourceTags tags, Context context)"
  summary: "Updates tags for a peering service with the specified name under the given subscription and resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the peering service."
    name: "peeringServiceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource tags."
    name: "tags"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ResourceTags?alt=com.azure.resourcemanager.peering.models.ResourceTags&text=ResourceTags\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<PeeringServiceInner> updateWithResponse(String resourceGroupName, String peeringServiceName, ResourceTags tags, Context context)"
  desc: "Updates tags for a peering service with the specified name under the given subscription and resource group."
  returns:
    description: "peering Service."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in PeeringServicesClient."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
