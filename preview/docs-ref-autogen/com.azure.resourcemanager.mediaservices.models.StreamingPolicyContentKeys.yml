### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys"
fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys"
name: "StreamingPolicyContentKeys"
nameWithType: "StreamingPolicyContentKeys"
summary: "Class to specify properties of all content keys in Streaming Policy."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StreamingPolicyContentKeys"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.StreamingPolicyContentKeys()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.StreamingPolicyContentKeys()"
  name: "StreamingPolicyContentKeys()"
  nameWithType: "StreamingPolicyContentKeys.StreamingPolicyContentKeys()"
  syntax: "public StreamingPolicyContentKeys()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.defaultKey()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.defaultKey()"
  name: "defaultKey()"
  nameWithType: "StreamingPolicyContentKeys.defaultKey()"
  summary: "Get the default<wbr>Key property: Default content key for an encryption scheme."
  syntax: "public DefaultKey defaultKey()"
  desc: "Get the defaultKey property: Default content key for an encryption scheme."
  returns:
    description: "the defaultKey value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.DefaultKey?alt=com.azure.resourcemanager.mediaservices.models.DefaultKey&text=DefaultKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.keyToTrackMappings()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.keyToTrackMappings()"
  name: "keyToTrackMappings()"
  nameWithType: "StreamingPolicyContentKeys.keyToTrackMappings()"
  summary: "Get the key<wbr>ToTrack<wbr>Mappings property: Representing tracks needs separate content key."
  syntax: "public List<StreamingPolicyContentKey> keyToTrackMappings()"
  desc: "Get the keyToTrackMappings property: Representing tracks needs separate content key."
  returns:
    description: "the keyToTrackMappings value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey&text=StreamingPolicyContentKey\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.validate()"
  name: "validate()"
  nameWithType: "StreamingPolicyContentKeys.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.withDefaultKey(com.azure.resourcemanager.mediaservices.models.DefaultKey)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.withDefaultKey(DefaultKey defaultKey)"
  name: "withDefaultKey(DefaultKey defaultKey)"
  nameWithType: "StreamingPolicyContentKeys.withDefaultKey(DefaultKey defaultKey)"
  summary: "Set the default<wbr>Key property: Default content key for an encryption scheme."
  parameters:
  - description: "the defaultKey value to set."
    name: "defaultKey"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.DefaultKey?alt=com.azure.resourcemanager.mediaservices.models.DefaultKey&text=DefaultKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyContentKeys withDefaultKey(DefaultKey defaultKey)"
  desc: "Set the defaultKey property: Default content key for an encryption scheme."
  returns:
    description: "the StreamingPolicyContentKeys object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.withKeyToTrackMappings(java.util.List<com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys.withKeyToTrackMappings(List<StreamingPolicyContentKey> keyToTrackMappings)"
  name: "withKeyToTrackMappings(List<StreamingPolicyContentKey> keyToTrackMappings)"
  nameWithType: "StreamingPolicyContentKeys.withKeyToTrackMappings(List<StreamingPolicyContentKey> keyToTrackMappings)"
  summary: "Set the key<wbr>ToTrack<wbr>Mappings property: Representing tracks needs separate content key."
  parameters:
  - description: "the keyToTrackMappings value to set."
    name: "keyToTrackMappings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKey&text=StreamingPolicyContentKey\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StreamingPolicyContentKeys withKeyToTrackMappings(List<StreamingPolicyContentKey> keyToTrackMappings)"
  desc: "Set the keyToTrackMappings property: Representing tracks needs separate content key."
  returns:
    description: "the StreamingPolicyContentKeys object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class to specify properties of all content keys in Streaming Policy."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
