### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  id: ManagedDatabaseVulnerabilityAssessmentScansClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient(com.azure.resourcemanager.sql.SqlManagementClient)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: ManagedDatabaseVulnerabilityAssessmentScansClient
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  type: Class
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in ManagedDatabaseVulnerabilityAssessmentScans.
  syntax:
    content: public final class ManagedDatabaseVulnerabilityAssessmentScansClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient(com.azure.resourcemanager.sql.SqlManagementClient)
  id: ManagedDatabaseVulnerabilityAssessmentScansClient(com.azure.resourcemanager.sql.SqlManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: ManagedDatabaseVulnerabilityAssessmentScansClient(SqlManagementClient client)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient(SqlManagementClient client)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient(SqlManagementClient client)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient*
  type: Constructor
  package: com.azure.resourcemanager.sql.fluent
  summary: Initializes an instance of ManagedDatabaseVulnerabilityAssessmentScansClient.
  syntax:
    content: public ManagedDatabaseVulnerabilityAssessmentScansClient(SqlManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.SqlManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginInitiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginInitiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginInitiateScanWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public void beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginInitiateScanWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public void beginInitiateScanWithoutPolling(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginInitiateScanWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Void> beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginInitiateScanWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Void> beginInitiateScanWithoutPollingAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginInitiateScanWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Response<Void>> beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginInitiateScanWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Response<Void>> beginInitiateScanWithoutPollingWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: export(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public DatabaseVulnerabilityAssessmentScansExportInner export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: export(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public DatabaseVulnerabilityAssessmentScansExportInner export(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: exportAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public Mono<DatabaseVulnerabilityAssessmentScansExportInner> exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner>
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: exportAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public Mono<DatabaseVulnerabilityAssessmentScansExportInner> exportAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner>
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public Mono<Response<DatabaseVulnerabilityAssessmentScansExportInner>> exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner>>
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: exportWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Convert an existing scan result to a human readable format. If already exists nothing happens.
  syntax:
    content: public Mono<Response<DatabaseVulnerabilityAssessmentScansExportInner>> exportWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the scanned database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner>>
      description: a database Vulnerability Assessment scan export resource.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public VulnerabilityAssessmentScanRecordInner get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public VulnerabilityAssessmentScanRecordInner get(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public Mono<VulnerabilityAssessmentScanRecordInner> getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public Mono<VulnerabilityAssessmentScanRecordInner> getAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public Mono<Response<VulnerabilityAssessmentScanRecordInner>> getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a vulnerability assessment scan record of a database.
  syntax:
    content: public Mono<Response<VulnerabilityAssessmentScanRecordInner>> getWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
      description: a vulnerability assessment scan record of a database.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: initiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public void initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: initiateScan(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public void initiateScan(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Void> initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: initiateScanAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Void> initiateScanAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: initiateScanWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Executes a Vulnerability Assessment database scan.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> initiateScanWithResponseAsync(String resourceGroupName, String managedInstanceName, String databaseName, String scanId, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: scanId
      type: java.lang.String
      description: The vulnerability assessment scan Id of the scan to retrieve.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public PagedIterable<VulnerabilityAssessmentScanRecordInner> listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public PagedIterable<VulnerabilityAssessmentScanRecordInner> listByDatabase(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public PagedFlux<VulnerabilityAssessmentScanRecordInner> listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public PagedFlux<VulnerabilityAssessmentScanRecordInner> listByDatabaseAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(java.lang.String)
  id: listByDatabaseNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabaseNextSinglePageAsync(String nextLink)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<VulnerabilityAssessmentScanRecordInner>> listByDatabaseNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByDatabaseNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabaseNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<VulnerabilityAssessmentScanRecordInner>> listByDatabaseNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public Mono<PagedResponse<VulnerabilityAssessmentScanRecordInner>> listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
      description: a list of vulnerability assessment scan records.
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByDatabaseSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient
  langs:
  - java
  name: listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Lists the vulnerability assessment scans of a database.
  syntax:
    content: public Mono<PagedResponse<VulnerabilityAssessmentScanRecordInner>> listByDatabaseSinglePageAsync(String resourceGroupName, String managedInstanceName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: managedInstanceName
      type: java.lang.String
      description: The name of the managed instance.
    - id: databaseName
      type: java.lang.String
      description: The name of the database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
      description: a list of vulnerability assessment scan records.
references:
- uid: com.azure.resourcemanager.sql.SqlManagementClient
  name: SqlManagementClient
  nameWithType: SqlManagementClient
  fullName: com.azure.resourcemanager.sql.SqlManagementClient
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient*
  name: ManagedDatabaseVulnerabilityAssessmentScansClient
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.ManagedDatabaseVulnerabilityAssessmentScansClient
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync*
  name: listByDatabaseSinglePageAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync*
  name: listByDatabaseAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase*
  name: listByDatabase
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabase
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
    name: VulnerabilityAssessmentScanRecordInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync*
  name: getAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.getAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
  name: VulnerabilityAssessmentScanRecordInner
  nameWithType: VulnerabilityAssessmentScanRecordInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.VulnerabilityAssessmentScanRecordInner
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get*
  name: get
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.get
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.get
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync*
  name: initiateScanWithResponseAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan*
  name: beginInitiateScan
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScan
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync*
  name: initiateScanAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScanAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan*
  name: initiateScan
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.initiateScan
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
    name: DatabaseVulnerabilityAssessmentScansExportInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync*
  name: exportWithResponseAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
    name: DatabaseVulnerabilityAssessmentScansExportInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync*
  name: exportAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.exportAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
  name: DatabaseVulnerabilityAssessmentScansExportInner
  nameWithType: DatabaseVulnerabilityAssessmentScansExportInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.DatabaseVulnerabilityAssessmentScansExportInner
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export*
  name: export
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.export
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.export
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync*
  name: beginInitiateScanWithoutPollingWithResponseAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync*
  name: beginInitiateScanWithoutPollingAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling*
  name: beginInitiateScanWithoutPolling
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.beginInitiateScanWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync*
  name: listByDatabaseNextSinglePageAsync
  nameWithType: ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.ManagedDatabaseVulnerabilityAssessmentScansClient.listByDatabaseNextSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
