### YamlMime:JavaType
uid: "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap"
fullName: "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap"
name: "AsyncRequesterBootstrap"
nameWithType: "AsyncRequesterBootstrap"
summary: "<xref uid=\"org.apache.hc.core5.http.impl.bootstrap.HttpAsyncRequester\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpAsyncRequester\"></xref> bootstrap."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AsyncRequesterBootstrap"
methods:
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.bootstrap()"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.create()"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setCharCodingConfig(org.apache.hc.core5.http.config.CharCodingConfig)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setConnPoolListener(org.apache.hc.core5.pool.ConnPoolListener<org.apache.hc.core5.http.HttpHost>)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setConnectionReuseStrategy(org.apache.hc.core5.http.ConnectionReuseStrategy)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setDefaultMaxPerRoute(int)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setExceptionCallback(org.apache.hc.core5.function.Callback<java.lang.Exception>)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setHttp1Config(org.apache.hc.core5.http.config.Http1Config)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setHttpProcessor(org.apache.hc.core5.http.protocol.HttpProcessor)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setIOReactorConfig(org.apache.hc.core5.reactor.IOReactorConfig)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setIOSessionDecorator(org.apache.hc.core5.function.Decorator<org.apache.hc.core5.reactor.IOSession>)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setIOSessionListener(org.apache.hc.core5.reactor.IOSessionListener)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setMaxTotal(int)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setPoolConcurrencyPolicy(org.apache.hc.core5.pool.PoolConcurrencyPolicy)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setPoolReusePolicy(org.apache.hc.core5.pool.PoolReusePolicy)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setStreamListener(org.apache.hc.core5.http.impl.Http1StreamListener)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setTimeToLive(org.apache.hc.core5.util.Timeout)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setTlsHandshakeTimeout(org.apache.hc.core5.util.Timeout)"
- "org.apache.hc.core5.http.impl.bootstrap.AsyncRequesterBootstrap.setTlsStrategy(org.apache.hc.core5.http.nio.ssl.TlsStrategy)"
type: "class"
metadata: {}
package: "org.apache.hc.core5.http.impl.bootstrap"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
