### YamlMime:JavaMember
uid: "com.azure.core.util.paging.ContinuablePagedFlux.byPage*"
fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.byPage"
name: "byPage"
nameWithType: "ContinuablePagedFlux<C,T,P>.byPage"
members:
- uid: "com.azure.core.util.paging.ContinuablePagedFlux.byPage()"
  fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.byPage()"
  name: "byPage()"
  nameWithType: "ContinuablePagedFlux<C,T,P>.byPage()"
  syntax: "public abstract Flux<P> byPage()"
  returns:
    description: "a Flux of <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePage\"></xref> in this Paged Flux."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"P?alt=P&text=P\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.paging.ContinuablePagedFlux.byPage(C)"
  fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.byPage(C continuationToken)"
  name: "byPage(C continuationToken)"
  nameWithType: "ContinuablePagedFlux<C,T,P>.byPage(C continuationToken)"
  summary: "Get a Flux <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePage\"></xref> identified by the given continuation token."
  parameters:
  - description: "the continuation token"
    name: "continuationToken"
    type: "<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Flux<P> byPage(C continuationToken)"
  returns:
    description: "a Flux of <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePage\"></xref>"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"P?alt=P&text=P\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.paging.ContinuablePagedFlux.byPage(C,int)"
  fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.byPage(C continuationToken, int preferredPageSize)"
  name: "byPage(C continuationToken, int preferredPageSize)"
  nameWithType: "ContinuablePagedFlux<C,T,P>.byPage(C continuationToken, int preferredPageSize)"
  summary: "Get a Flux of <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePage\"></xref> identified by the given continuation token, with each page containing number of elements equal to the preferred page size."
  parameters:
  - description: "the continuation token"
    name: "continuationToken"
    type: "<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />"
  - description: "the preferred page size, service may or may not honor the page\n                          size preference hence client MUST be prepared to handle pages\n                          with different page size."
    name: "preferredPageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Flux<P> byPage(C continuationToken, int preferredPageSize)"
  returns:
    description: "a Flux of <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePage\"></xref>"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"P?alt=P&text=P\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.paging.ContinuablePagedFlux.byPage(int)"
  fullName: "com.azure.core.util.paging.ContinuablePagedFlux<C,T,P>.byPage(int preferredPageSize)"
  name: "byPage(int preferredPageSize)"
  nameWithType: "ContinuablePagedFlux<C,T,P>.byPage(int preferredPageSize)"
  summary: "Get a Flux of <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePage\"></xref> in this Paged Flux, with each page containing number of elements equal to the preferred page size."
  parameters:
  - description: "the preferred page size, service may or may not honor the page\n                          size preference hence client MUST be prepared to handle pages\n                          with different page size."
    name: "preferredPageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Flux<P> byPage(int preferredPageSize)"
  returns:
    description: "a Flux of <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContinuablePage\"></xref>"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"P?alt=P&text=P\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.util.paging"
artifact: com.azure:azure-core:1.3.0-beta.1
