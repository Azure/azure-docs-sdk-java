### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonAnySetter"
fullName: "com.fasterxml.jackson.annotation.JsonAnySetter"
name: "JsonAnySetter"
nameWithType: "JsonAnySetter"
summary: "Marker annotation that can be used to define a logical \"any setter\" mutator -- either using non-static two-argument method (first argument name of property, second value to set) or a field (of type <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> or POJO) - to be used as a \"fallback\" handler for all otherwise unrecognized properties found from JSON content. It is similar to `javax.xml.bind.annotation.XmlAnyElement` in behavior; and can only be used to denote a single property per type.\n\nIf used, all otherwise unmapped key-value pairs from JSON Object values are added using mutator.\n\nNOTE: ability to annotated fields was added in version 2.8; earlier only methods could be annotated."
syntax: "public interface JsonAnySetter implements Annotation"
methods:
- "com.fasterxml.jackson.annotation.JsonAnySetter.enabled()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
