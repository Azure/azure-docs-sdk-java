### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base
  id: Base
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.Base()
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findEnumDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.findTreeNodeDeserializer(java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.Deserializers.Base.hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)
  langs:
  - java
  name: Deserializers.Base
  nameWithType: Deserializers.Base
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base
  type: Class
  package: com.fasterxml.jackson.databind.deser
  summary: Basic <xref uid="com.fasterxml.jackson.databind.deser.Deserializers" data-throw-if-not-resolved="false">Deserializers</xref> implementation that implements all methods but provides no deserializers. Its main purpose is to serve as a base class so that sub-classes only need to override methods they need, as most of the time some of methods are not needed (especially enumeration and array deserializers are very rarely overridden).
  syntax:
    content: public abstract static class Deserializers.Base implements Deserializers
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.databind.deser.Deserializers
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.Base()
  id: Base()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: Base()
  nameWithType: Deserializers.Base.Base()
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.Base()
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.Base*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public Base()
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.Base.findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findArrayDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified array type.


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).
  syntax:
    content: public JsonDeserializer<?> findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.ArrayType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  nameWithType: Deserializers.Base.findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findBeanDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for specified value type which does not belong to any other category (not an Enum, Collection, Map, Array, reference value or tree node)
  syntax:
    content: public JsonDeserializer<?> findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.Base.findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> (List, Set etc) type.


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).
  syntax:
    content: public JsonDeserializer<?> findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.Base.findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified "Collection-like" type (one that acts like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> but does not implement it).


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).
  syntax:
    content: public JsonDeserializer<?> findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionLikeType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findEnumDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: findEnumDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
  nameWithType: Deserializers.Base.findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findEnumDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for specified <xref uid="java.lang.Enum" data-throw-if-not-resolved="false">java.lang.Enum</xref> type.
  syntax:
    content: public JsonDeserializer<?> findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: type
      type: java.lang.Class<?>
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.Base.findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate deserializer for specified <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> type.


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).


    Similarly, a <xref uid="com.fasterxml.jackson.databind.KeyDeserializer" data-throw-if-not-resolved="false">KeyDeserializer</xref> may be passed, but this is only done if there is a specific configuration override (annotations) to indicate instance to use. Otherwise null is passed, and key deserializer needs to be obtained later during resolution (using <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*" data-throw-if-not-resolved="false">ResolvableDeserializer#resolve</xref>).
  syntax:
    content: public JsonDeserializer<?> findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.MapType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: keyDeserializer
      type: com.fasterxml.jackson.databind.KeyDeserializer
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.Base.findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified "Map-like" type (one that acts like <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> but does not implement it).


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).


    Similarly, a <xref uid="com.fasterxml.jackson.databind.KeyDeserializer" data-throw-if-not-resolved="false">KeyDeserializer</xref> may be passed, but this is only done if there is a specific configuration override (annotations) to indicate instance to use. Otherwise null is passed, and key deserializer needs to be obtained later during resolution (using <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*" data-throw-if-not-resolved="false">ResolvableDeserializer#resolve</xref>).
  syntax:
    content: public JsonDeserializer<?> findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.MapLikeType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: keyDeserializer
      type: com.fasterxml.jackson.databind.KeyDeserializer
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
  nameWithType: Deserializers.Base.findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findReferenceDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for value that is of referential type,
  syntax:
    content: public JsonDeserializer<?> findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
    parameters:
    - id: refType
      type: com.fasterxml.jackson.databind.type.ReferenceType
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: contentTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    - id: contentDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findTreeNodeDeserializer(java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: findTreeNodeDeserializer(java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
  nameWithType: Deserializers.Base.findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.findTreeNodeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for specified JSON tree node type.
  syntax:
    content: public JsonDeserializer<?> findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: nodeType
      type: java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)
  id: hasDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers.Base
  langs:
  - java
  name: hasDeserializerFor(DeserializationConfig config, Class<?> valueType)
  nameWithType: Deserializers.Base.hasDeserializerFor(DeserializationConfig config, Class<?> valueType)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.hasDeserializerFor(DeserializationConfig config, Class<?> valueType)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.Base.hasDeserializerFor*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method that may be called to check whether this deserializer provider would provide deserializer for values of given type, without attempting to construct (and possibly fail in some cases) actual deserializer. Mostly needed to support validation of polymorphic type ids.


    Note: implementations should take care NOT to claim supporting types that they do not recognize as this could to incorrect assumption of safe support by caller.


    Method added in this implementation since adding new methods for interfaces before Java 8 is not a good idea: will be added in Jackson 3.0 for \`Deserializers\`.
  syntax:
    content: public boolean hasDeserializerFor(DeserializationConfig config, Class<?> valueType)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: valueType
      type: java.lang.Class<?>
    return:
      type: boolean
references:
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.Base*
  name: Base
  nameWithType: Deserializers.Base.Base
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.Base
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findEnumDeserializer*
  name: findEnumDeserializer
  nameWithType: Deserializers.Base.findEnumDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findEnumDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends com.fasterxml.jackson.databind.JsonNode'
    name: JsonNode
    fullName: '? extends com.fasterxml.jackson.databind.JsonNode'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findTreeNodeDeserializer*
  name: findTreeNodeDeserializer
  nameWithType: Deserializers.Base.findTreeNodeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findTreeNodeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ReferenceType
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findReferenceDeserializer*
  name: findReferenceDeserializer
  nameWithType: Deserializers.Base.findReferenceDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findReferenceDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findBeanDeserializer*
  name: findBeanDeserializer
  nameWithType: Deserializers.Base.findBeanDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findBeanDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ArrayType
  name: ArrayType
  nameWithType: ArrayType
  fullName: com.fasterxml.jackson.databind.type.ArrayType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findArrayDeserializer*
  name: findArrayDeserializer
  nameWithType: Deserializers.Base.findArrayDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findArrayDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionType
  name: CollectionType
  nameWithType: CollectionType
  fullName: com.fasterxml.jackson.databind.type.CollectionType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionDeserializer*
  name: findCollectionDeserializer
  nameWithType: Deserializers.Base.findCollectionDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionLikeType
  name: CollectionLikeType
  nameWithType: CollectionLikeType
  fullName: com.fasterxml.jackson.databind.type.CollectionLikeType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionLikeDeserializer*
  name: findCollectionLikeDeserializer
  nameWithType: Deserializers.Base.findCollectionLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findCollectionLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapType
  name: MapType
  nameWithType: MapType
  fullName: com.fasterxml.jackson.databind.type.MapType
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapDeserializer*
  name: findMapDeserializer
  nameWithType: Deserializers.Base.findMapDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapLikeDeserializer*
  name: findMapLikeDeserializer
  nameWithType: Deserializers.Base.findMapLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.findMapLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base.hasDeserializerFor*
  name: hasDeserializerFor
  nameWithType: Deserializers.Base.hasDeserializerFor
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base.hasDeserializerFor
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.Deserializers
  name: Deserializers
  nameWithType: Deserializers
  fullName: com.fasterxml.jackson.databind.deser.Deserializers
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '? extends com.fasterxml.jackson.databind.JsonNode'
  name: '? extends JsonNode'
  nameWithType: '? extends JsonNode'
  fullName: '? extends com.fasterxml.jackson.databind.JsonNode'
