### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.FilterActivity"
fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity"
name: "FilterActivity"
nameWithType: "FilterActivity"
summary: "Filter and return results from input array based on the conditions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Activity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.ControlActivity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Activity.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.Activity.dependsOn()"
- "com.azure.resourcemanager.datafactory.models.Activity.description()"
- "com.azure.resourcemanager.datafactory.models.Activity.name()"
- "com.azure.resourcemanager.datafactory.models.Activity.userProperties()"
- "com.azure.resourcemanager.datafactory.models.Activity.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.validate()"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withName(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.ControlActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FilterActivity extends ControlActivity"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.FilterActivity()"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.FilterActivity()"
  name: "FilterActivity()"
  nameWithType: "FilterActivity.FilterActivity()"
  syntax: "public FilterActivity()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.condition()"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.condition()"
  name: "condition()"
  nameWithType: "FilterActivity.condition()"
  summary: "Get the condition property: Condition to be used for filtering the input."
  syntax: "public Expression condition()"
  desc: "Get the condition property: Condition to be used for filtering the input."
  returns:
    description: "the condition value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.items()"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.items()"
  name: "items()"
  nameWithType: "FilterActivity.items()"
  summary: "Get the items property: Input array on which filter should be applied."
  syntax: "public Expression items()"
  desc: "Get the items property: Input array on which filter should be applied."
  returns:
    description: "the items value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.validate()"
  name: "validate()"
  nameWithType: "FilterActivity.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.withCondition(com.azure.resourcemanager.datafactory.models.Expression)"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.withCondition(Expression condition)"
  name: "withCondition(Expression condition)"
  nameWithType: "FilterActivity.withCondition(Expression condition)"
  summary: "Set the condition property: Condition to be used for filtering the input."
  parameters:
  - description: "the condition value to set."
    name: "condition"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FilterActivity withCondition(Expression condition)"
  desc: "Set the condition property: Condition to be used for filtering the input."
  returns:
    description: "the FilterActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FilterActivity?alt=com.azure.resourcemanager.datafactory.models.FilterActivity&text=FilterActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.withDependsOn(List<ActivityDependency> dependsOn)"
  name: "withDependsOn(List<ActivityDependency> dependsOn)"
  nameWithType: "FilterActivity.withDependsOn(List<ActivityDependency> dependsOn)"
  summary: "Set the depends<wbr>On property: Activity depends on condition."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withDependsOn(java.util.List<com.azure.resourcemanager.datafactory.models.ActivityDependency>)"
  parameters:
  - name: "dependsOn"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.ActivityDependency?alt=com.azure.resourcemanager.datafactory.models.ActivityDependency&text=ActivityDependency\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FilterActivity withDependsOn(List<ActivityDependency> dependsOn)"
  desc: "Set the dependsOn property: Activity depends on condition."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FilterActivity?alt=com.azure.resourcemanager.datafactory.models.FilterActivity&text=FilterActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "FilterActivity.withDescription(String description)"
  summary: "Set the description property: Activity description."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FilterActivity withDescription(String description)"
  desc: "Set the description property: Activity description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FilterActivity?alt=com.azure.resourcemanager.datafactory.models.FilterActivity&text=FilterActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.withItems(com.azure.resourcemanager.datafactory.models.Expression)"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.withItems(Expression items)"
  name: "withItems(Expression items)"
  nameWithType: "FilterActivity.withItems(Expression items)"
  summary: "Set the items property: Input array on which filter should be applied."
  parameters:
  - description: "the items value to set."
    name: "items"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Expression?alt=com.azure.resourcemanager.datafactory.models.Expression&text=Expression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FilterActivity withItems(Expression items)"
  desc: "Set the items property: Input array on which filter should be applied."
  returns:
    description: "the FilterActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FilterActivity?alt=com.azure.resourcemanager.datafactory.models.FilterActivity&text=FilterActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.withName(String name)"
  name: "withName(String name)"
  nameWithType: "FilterActivity.withName(String name)"
  summary: "Set the name property: Activity name."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FilterActivity withName(String name)"
  desc: "Set the name property: Activity name."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FilterActivity?alt=com.azure.resourcemanager.datafactory.models.FilterActivity&text=FilterActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.FilterActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
  fullName: "com.azure.resourcemanager.datafactory.models.FilterActivity.withUserProperties(List<UserProperty> userProperties)"
  name: "withUserProperties(List<UserProperty> userProperties)"
  nameWithType: "FilterActivity.withUserProperties(List<UserProperty> userProperties)"
  summary: "Set the user<wbr>Properties property: Activity user properties."
  overridden: "com.azure.resourcemanager.datafactory.models.ControlActivity.withUserProperties(java.util.List<com.azure.resourcemanager.datafactory.models.UserProperty>)"
  parameters:
  - name: "userProperties"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.UserProperty?alt=com.azure.resourcemanager.datafactory.models.UserProperty&text=UserProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FilterActivity withUserProperties(List<UserProperty> userProperties)"
  desc: "Set the userProperties property: Activity user properties."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FilterActivity?alt=com.azure.resourcemanager.datafactory.models.FilterActivity&text=FilterActivity\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Filter and return results from input array based on the conditions."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
