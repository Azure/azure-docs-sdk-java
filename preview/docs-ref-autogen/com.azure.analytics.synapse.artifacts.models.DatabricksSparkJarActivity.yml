### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity"
fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity"
name: "DatabricksSparkJarActivity"
nameWithType: "DatabricksSparkJarActivity"
summary: "Databricks<wbr>Spark<wbr>Jar activity."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity?alt=com.azure.analytics.synapse.artifacts.models.Activity&text=Activity\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.getAdditionalProperties()?alt=com.azure.analytics.synapse.artifacts.models.Activity.getAdditionalProperties&text=getAdditionalProperties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.getDependsOn()?alt=com.azure.analytics.synapse.artifacts.models.Activity.getDependsOn&text=getDependsOn\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.getDescription()?alt=com.azure.analytics.synapse.artifacts.models.Activity.getDescription&text=getDescription\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.getName()?alt=com.azure.analytics.synapse.artifacts.models.Activity.getName&text=getName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.getOnInactiveMarkAs()?alt=com.azure.analytics.synapse.artifacts.models.Activity.getOnInactiveMarkAs&text=getOnInactiveMarkAs\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.getState()?alt=com.azure.analytics.synapse.artifacts.models.Activity.getState&text=getState\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.getUserProperties()?alt=com.azure.analytics.synapse.artifacts.models.Activity.getUserProperties&text=getUserProperties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.Activity.setAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)?alt=com.azure.analytics.synapse.artifacts.models.Activity.setAdditionalProperties&text=setAdditionalProperties\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity&text=ExecutionActivity\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.fromJson(com.azure.json.JsonReader)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getLinkedServiceName()?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getLinkedServiceName&text=getLinkedServiceName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getPolicy()?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getPolicy&text=getPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getType()?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getType&text=getType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDependsOn&text=setDependsOn\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDescription(java.lang.String)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDescription&text=setDescription\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setLinkedServiceName&text=setLinkedServiceName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setName(java.lang.String)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setName&text=setName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setOnInactiveMarkAs(com.azure.analytics.synapse.artifacts.models.ActivityOnInactiveMarkAs)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setOnInactiveMarkAs&text=setOnInactiveMarkAs\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setPolicy&text=setPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setState(com.azure.analytics.synapse.artifacts.models.ActivityState)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setState&text=setState\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setUserProperties&text=setUserProperties\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity.toJson(com.azure.json.JsonWriter)?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **DatabricksSparkJarActivity**</br> extends <xref href=\"com.azure.analytics.synapse.artifacts.models.ExecutionActivity?alt=com.azure.analytics.synapse.artifacts.models.ExecutionActivity&text=ExecutionActivity\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.DatabricksSparkJarActivity()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.DatabricksSparkJarActivity()"
  name: "DatabricksSparkJarActivity()"
  nameWithType: "DatabricksSparkJarActivity.DatabricksSparkJarActivity()"
  summary: "Creates an instance of Databricks<wbr>Spark<wbr>Jar<wbr>Activity class."
  syntax: "public DatabricksSparkJarActivity()"
  desc: "Creates an instance of DatabricksSparkJarActivity class."
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "DatabricksSparkJarActivity.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Databricks<wbr>Spark<wbr>Jar<wbr>Activity from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DatabricksSparkJarActivity fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of DatabricksSparkJarActivity from the JsonReader."
  returns:
    description: "An instance of DatabricksSparkJarActivity if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getLibraries()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getLibraries()"
  name: "getLibraries()"
  nameWithType: "DatabricksSparkJarActivity.getLibraries()"
  summary: "Get the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  syntax: "public List<Map<String,Object>> getLibraries()"
  desc: "Get the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  returns:
    description: "the libraries value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getMainClassName()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getMainClassName()"
  name: "getMainClassName()"
  nameWithType: "DatabricksSparkJarActivity.getMainClassName()"
  summary: "Get the main<wbr>Class<wbr>Name property: The full name of the class containing the main method to be executed."
  syntax: "public Object getMainClassName()"
  desc: "Get the mainClassName property: The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string)."
  returns:
    description: "the mainClassName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getParameters()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getParameters()"
  name: "getParameters()"
  nameWithType: "DatabricksSparkJarActivity.getParameters()"
  summary: "Get the parameters property: Parameters that will be passed to the main method."
  syntax: "public List<Object> getParameters()"
  desc: "Get the parameters property: Parameters that will be passed to the main method."
  returns:
    description: "the parameters value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getType()"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.getType()"
  name: "getType()"
  nameWithType: "DatabricksSparkJarActivity.getType()"
  summary: "Get the type property: Type of activity."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.getType()"
  syntax: "public String getType()"
  desc: "Get the type property: Type of activity."
  returns:
    description: "the type value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setDependsOn(List<ActivityDependency> dependsOn)"
  name: "setDependsOn(List<ActivityDependency> dependsOn)"
  nameWithType: "DatabricksSparkJarActivity.setDependsOn(List<ActivityDependency> dependsOn)"
  summary: "Set the depends<wbr>On property: Activity depends on condition."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDependsOn(java.util.List<com.azure.analytics.synapse.artifacts.models.ActivityDependency>)"
  parameters:
  - name: "dependsOn"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityDependency?alt=com.azure.analytics.synapse.artifacts.models.ActivityDependency&text=ActivityDependency\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabricksSparkJarActivity setDependsOn(List<ActivityDependency> dependsOn)"
  desc: "Set the dependsOn property: Activity depends on condition."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setDescription(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setDescription(String description)"
  name: "setDescription(String description)"
  nameWithType: "DatabricksSparkJarActivity.setDescription(String description)"
  summary: "Set the description property: Activity description."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DatabricksSparkJarActivity setDescription(String description)"
  desc: "Set the description property: Activity description."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setLibraries(java.util.List<java.util.Map<java.lang.String,java.lang.Object>>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setLibraries(List<Map<String,Object>> libraries)"
  name: "setLibraries(List<Map<String,Object>> libraries)"
  nameWithType: "DatabricksSparkJarActivity.setLibraries(List<Map<String,Object>> libraries)"
  summary: "Set the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  parameters:
  - description: "the libraries value to set."
    name: "libraries"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;&gt;"
  syntax: "public DatabricksSparkJarActivity setLibraries(List<Map<String,Object>> libraries)"
  desc: "Set the libraries property: A list of libraries to be installed on the cluster that will execute the job."
  returns:
    description: "the DatabricksSparkJarActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  name: "setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  nameWithType: "DatabricksSparkJarActivity.setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  summary: "Set the linked<wbr>Service<wbr>Name property: Linked service reference."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setLinkedServiceName(com.azure.analytics.synapse.artifacts.models.LinkedServiceReference)"
  parameters:
  - name: "linkedServiceName"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.LinkedServiceReference?alt=com.azure.analytics.synapse.artifacts.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkJarActivity setLinkedServiceName(LinkedServiceReference linkedServiceName)"
  desc: "Set the linkedServiceName property: Linked service reference."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setMainClassName(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setMainClassName(Object mainClassName)"
  name: "setMainClassName(Object mainClassName)"
  nameWithType: "DatabricksSparkJarActivity.setMainClassName(Object mainClassName)"
  summary: "Set the main<wbr>Class<wbr>Name property: The full name of the class containing the main method to be executed."
  parameters:
  - description: "the mainClassName value to set."
    name: "mainClassName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public DatabricksSparkJarActivity setMainClassName(Object mainClassName)"
  desc: "Set the mainClassName property: The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string)."
  returns:
    description: "the DatabricksSparkJarActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setName(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setName(String name)"
  name: "setName(String name)"
  nameWithType: "DatabricksSparkJarActivity.setName(String name)"
  summary: "Set the name property: Activity name."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DatabricksSparkJarActivity setName(String name)"
  desc: "Set the name property: Activity name."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setOnInactiveMarkAs(com.azure.analytics.synapse.artifacts.models.ActivityOnInactiveMarkAs)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setOnInactiveMarkAs(ActivityOnInactiveMarkAs onInactiveMarkAs)"
  name: "setOnInactiveMarkAs(ActivityOnInactiveMarkAs onInactiveMarkAs)"
  nameWithType: "DatabricksSparkJarActivity.setOnInactiveMarkAs(ActivityOnInactiveMarkAs onInactiveMarkAs)"
  summary: "Set the on<wbr>Inactive<wbr>Mark<wbr>As property: Status result of the activity when the state is set to Inactive."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setOnInactiveMarkAs(com.azure.analytics.synapse.artifacts.models.ActivityOnInactiveMarkAs)"
  parameters:
  - name: "onInactiveMarkAs"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityOnInactiveMarkAs?alt=com.azure.analytics.synapse.artifacts.models.ActivityOnInactiveMarkAs&text=ActivityOnInactiveMarkAs\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkJarActivity setOnInactiveMarkAs(ActivityOnInactiveMarkAs onInactiveMarkAs)"
  desc: "Set the onInactiveMarkAs property: Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setParameters(java.util.List<java.lang.Object>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setParameters(List<Object> parameters)"
  name: "setParameters(List<Object> parameters)"
  nameWithType: "DatabricksSparkJarActivity.setParameters(List<Object> parameters)"
  summary: "Set the parameters property: Parameters that will be passed to the main method."
  parameters:
  - description: "the parameters value to set."
    name: "parameters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>&gt;"
  syntax: "public DatabricksSparkJarActivity setParameters(List<Object> parameters)"
  desc: "Set the parameters property: Parameters that will be passed to the main method."
  returns:
    description: "the DatabricksSparkJarActivity object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setPolicy(ActivityPolicy policy)"
  name: "setPolicy(ActivityPolicy policy)"
  nameWithType: "DatabricksSparkJarActivity.setPolicy(ActivityPolicy policy)"
  summary: "Set the policy property: Activity policy."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setPolicy(com.azure.analytics.synapse.artifacts.models.ActivityPolicy)"
  parameters:
  - name: "policy"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityPolicy?alt=com.azure.analytics.synapse.artifacts.models.ActivityPolicy&text=ActivityPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkJarActivity setPolicy(ActivityPolicy policy)"
  desc: "Set the policy property: Activity policy."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setState(com.azure.analytics.synapse.artifacts.models.ActivityState)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setState(ActivityState state)"
  name: "setState(ActivityState state)"
  nameWithType: "DatabricksSparkJarActivity.setState(ActivityState state)"
  summary: "Set the state property: Activity state."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setState(com.azure.analytics.synapse.artifacts.models.ActivityState)"
  parameters:
  - name: "state"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ActivityState?alt=com.azure.analytics.synapse.artifacts.models.ActivityState&text=ActivityState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabricksSparkJarActivity setState(ActivityState state)"
  desc: "Set the state property: Activity state. This is an optional property and if not provided, the state will be Active by default."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.setUserProperties(List<UserProperty> userProperties)"
  name: "setUserProperties(List<UserProperty> userProperties)"
  nameWithType: "DatabricksSparkJarActivity.setUserProperties(List<UserProperty> userProperties)"
  summary: "Set the user<wbr>Properties property: Activity user properties."
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.setUserProperties(java.util.List<com.azure.analytics.synapse.artifacts.models.UserProperty>)"
  parameters:
  - name: "userProperties"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.UserProperty?alt=com.azure.analytics.synapse.artifacts.models.UserProperty&text=UserProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabricksSparkJarActivity setUserProperties(List<UserProperty> userProperties)"
  desc: "Set the userProperties property: Activity user properties."
  returns:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity?alt=com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity&text=DatabricksSparkJarActivity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.analytics.synapse.artifacts.models.DatabricksSparkJarActivity.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "DatabricksSparkJarActivity.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.analytics.synapse.artifacts.models.ExecutionActivity.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "DatabricksSparkJar activity."
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.16
