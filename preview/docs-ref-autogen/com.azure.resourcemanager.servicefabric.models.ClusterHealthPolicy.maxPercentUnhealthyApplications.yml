### YamlMime:JavaMember
uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyApplications*"
fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyApplications"
name: "maxPercentUnhealthyApplications"
nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyApplications"
members:
- uid: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  fullName: "com.azure.resourcemanager.servicefabric.models.ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  name: "maxPercentUnhealthyApplications()"
  nameWithType: "ClusterHealthPolicy.maxPercentUnhealthyApplications()"
  summary: "Get the maxPercentUnhealthyApplications property: The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error. If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning. This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap. The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero."
  syntax: "public Integer maxPercentUnhealthyApplications()"
  returns:
    description: "the maxPercentUnhealthyApplications value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.1
