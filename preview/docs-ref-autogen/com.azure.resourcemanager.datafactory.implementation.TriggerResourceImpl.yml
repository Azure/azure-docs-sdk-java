### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl"
fullName: "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl"
name: "TriggerResourceImpl"
nameWithType: "TriggerResourceImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TriggerResourceImpl implements TriggerResource, TriggerResource.Definition, TriggerResource.Update"
methods:
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.apply()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.create()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.etag()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.getEventSubscriptionStatus()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.getEventSubscriptionStatusWithResponse(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.id()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.innerModel()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.name()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.properties()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.refresh()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.start()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.start(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.stop()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.stop(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.subscribeToEvents()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.subscribeToEvents(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.type()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.unsubscribeFromEvents()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.unsubscribeFromEvents(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.update()"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.withExistingFactory(java.lang.String,java.lang.String)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.withIfMatch(java.lang.String)"
- "com.azure.resourcemanager.datafactory.implementation.TriggerResourceImpl.withProperties(com.azure.resourcemanager.datafactory.models.Trigger)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.datafactory.models.TriggerResource.Definition?alt=com.azure.resourcemanager.datafactory.models.TriggerResource.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.TriggerResource.Update?alt=com.azure.resourcemanager.datafactory.models.TriggerResource.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.TriggerResource?alt=com.azure.resourcemanager.datafactory.models.TriggerResource&text=TriggerResource\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.datafactory.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
