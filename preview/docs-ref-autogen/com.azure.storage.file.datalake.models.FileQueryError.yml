### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.models.FileQueryError"
fullName: "com.azure.storage.file.datalake.models.FileQueryError"
name: "FileQueryError"
nameWithType: "FileQueryError"
summary: "Defines a file query error that can be returned on parsing a file query request."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class FileQueryError"
constructors:
- uid: "com.azure.storage.file.datalake.models.FileQueryError.FileQueryError(boolean,java.lang.String,java.lang.String,long)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryError.FileQueryError(boolean fatal, String name, String description, long position)"
  name: "FileQueryError(boolean fatal, String name, String description, long position)"
  nameWithType: "FileQueryError.FileQueryError(boolean fatal, String name, String description, long position)"
  summary: "Creates a new File<wbr>Query<wbr>Error object."
  parameters:
  - description: "Whether or not the error is fatal."
    name: "fatal"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the error."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A description of the error."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The file offset at which the error occurred."
    name: "position"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryError(boolean fatal, String name, String description, long position)"
  desc: "Creates a new FileQueryError object."
methods:
- uid: "com.azure.storage.file.datalake.models.FileQueryError.getDescription()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryError.getDescription()"
  name: "getDescription()"
  nameWithType: "FileQueryError.getDescription()"
  syntax: "public String getDescription()"
  returns:
    description: "A description of the error."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryError.getName()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryError.getName()"
  name: "getName()"
  nameWithType: "FileQueryError.getName()"
  syntax: "public String getName()"
  returns:
    description: "The name of the error."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryError.getPosition()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryError.getPosition()"
  name: "getPosition()"
  nameWithType: "FileQueryError.getPosition()"
  syntax: "public long getPosition()"
  returns:
    description: "The file offset at which the error occurred."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryError.isFatal()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryError.isFatal()"
  name: "isFatal()"
  nameWithType: "FileQueryError.isFatal()"
  summary: "Whether or not the error is fatal."
  syntax: "public boolean isFatal()"
  desc: "Whether or not the error is fatal. If true, this error prevents further query processing. More result data may be returned, but there is no guarantee that all of the original data will be processed. If false, this error does not prevent further query processing."
  returns:
    description: "Whether or not the error is fatal."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryError.toString()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryError.toString()"
  name: "toString()"
  nameWithType: "FileQueryError.toString()"
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines a file query error that can be returned on parsing a file query request."
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.11.0-beta.1
