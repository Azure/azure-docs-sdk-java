### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingObject"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingObject"
name: "ForwardingObject"
nameWithType: "ForwardingObject"
summary: "An abstract base class for implementing the [decorator pattern][]. The <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#delegate()\"></xref> method must be overridden to return the instance being decorated.\n\nThis class does *not* forward the `hashCode` and `equals` methods through to the backing object, but relies on `Object`'s implementation. This is necessary to preserve the symmetry of `equals`. Custom definitions of equality are usually based on an interface, such as `Set` or `List`, so that the implementation of `equals` can cast the object being tested for equality to the custom interface. `ForwardingObject` implements no such custom interfaces directly; they are implemented only in subclasses. Therefore, forwarding `equals` would break symmetry, as the forwarding object might consider itself equal to the object being tested, but the reverse could not be true. This behavior is consistent with the JDK's collection wrappers, such as <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collections#unmodifiableCollection\"></xref>. Use an interface-specific subclass of `ForwardingObject`, such as <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingList\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingList\"></xref>, to preserve equality behavior, or override `equals` directly.\n\nThe `toString` method is forwarded to the delegate. Although this class does not implement <xref uid=\"java.io.Serializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Serializable\"></xref>, a serializable subclass may be created since this class has a parameter-less constructor.\n\n\n[decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class ForwardingObject"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingObject.ForwardingObject()"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
