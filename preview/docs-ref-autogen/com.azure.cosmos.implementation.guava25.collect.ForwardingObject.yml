### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  id: ForwardingObject
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.ForwardingObject()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  langs:
  - java
  name: ForwardingObject
  nameWithType: ForwardingObject
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    An abstract base class for implementing the [decorator pattern][]. The <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()" data-throw-if-not-resolved="false">#delegate()</xref> method must be overridden to return the instance being decorated.


    This class does *not* forward the `hashCode` and `equals` methods through to the backing object, but relies on `Object`'s implementation. This is necessary to preserve the symmetry of `equals`. Custom definitions of equality are usually based on an interface, such as `Set` or `List`, so that the implementation of `equals` can cast the object being tested for equality to the custom interface. `ForwardingObject` implements no such custom interfaces directly; they are implemented only in subclasses. Therefore, forwarding `equals` would break symmetry, as the forwarding object might consider itself equal to the object being tested, but the reverse could not be true. This behavior is consistent with the JDK's collection wrappers, such as <xref uid="" data-throw-if-not-resolved="false">java.util.Collections#unmodifiableCollection</xref>. Use an interface-specific subclass of `ForwardingObject`, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingList" data-throw-if-not-resolved="false">ForwardingList</xref>, to preserve equality behavior, or override `equals` directly.


    The `toString` method is forwarded to the delegate. Although this class does not implement <xref uid="java.io.Serializable" data-throw-if-not-resolved="false">Serializable</xref>, a serializable subclass may be created since this class has a parameter-less constructor.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingObject
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.ForwardingObject()
  id: ForwardingObject()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  langs:
  - java
  name: ForwardingObject()
  nameWithType: ForwardingObject.ForwardingObject()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.ForwardingObject()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.ForwardingObject*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingObject()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingObject.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract Object delegate()
    return:
      type: java.lang.Object
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  langs:
  - java
  name: toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the string representation generated by the delegate's `toString` method.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.ForwardingObject*
  name: ForwardingObject
  nameWithType: ForwardingObject.ForwardingObject
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.ForwardingObject
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate*
  name: delegate
  nameWithType: ForwardingObject.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString*
  name: toString
  nameWithType: ForwardingObject.toString
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
