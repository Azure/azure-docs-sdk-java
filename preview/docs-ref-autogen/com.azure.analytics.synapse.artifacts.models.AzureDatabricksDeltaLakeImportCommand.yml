### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand"
fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand"
name: "AzureDatabricksDeltaLakeImportCommand"
nameWithType: "AzureDatabricksDeltaLakeImportCommand"
summary: "Azure Databricks Delta Lake import command settings."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.analytics.synapse.artifacts.models.ImportSettings?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.analytics.synapse.artifacts.models.ImportSettings.getAdditionalProperties()"
- "com.azure.analytics.synapse.artifacts.models.ImportSettings.setAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureDatabricksDeltaLakeImportCommand extends ImportSettings"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.AzureDatabricksDeltaLakeImportCommand()"
  fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.AzureDatabricksDeltaLakeImportCommand()"
  name: "AzureDatabricksDeltaLakeImportCommand()"
  nameWithType: "AzureDatabricksDeltaLakeImportCommand.AzureDatabricksDeltaLakeImportCommand()"
  syntax: "public AzureDatabricksDeltaLakeImportCommand()"
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.getDateFormat()"
  fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.getDateFormat()"
  name: "getDateFormat()"
  nameWithType: "AzureDatabricksDeltaLakeImportCommand.getDateFormat()"
  summary: "Get the date<wbr>Format property: Specify the date format for csv in Azure Databricks Delta Lake Copy."
  syntax: "public Object getDateFormat()"
  desc: "Get the dateFormat property: Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
  returns:
    description: "the dateFormat value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.getTimestampFormat()"
  fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.getTimestampFormat()"
  name: "getTimestampFormat()"
  nameWithType: "AzureDatabricksDeltaLakeImportCommand.getTimestampFormat()"
  summary: "Get the timestamp<wbr>Format property: Specify the timestamp format for csv in Azure Databricks Delta Lake Copy."
  syntax: "public Object getTimestampFormat()"
  desc: "Get the timestampFormat property: Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
  returns:
    description: "the timestampFormat value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.setDateFormat(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.setDateFormat(Object dateFormat)"
  name: "setDateFormat(Object dateFormat)"
  nameWithType: "AzureDatabricksDeltaLakeImportCommand.setDateFormat(Object dateFormat)"
  summary: "Set the date<wbr>Format property: Specify the date format for csv in Azure Databricks Delta Lake Copy."
  parameters:
  - description: "the dateFormat value to set."
    name: "dateFormat"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeImportCommand setDateFormat(Object dateFormat)"
  desc: "Set the dateFormat property: Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksDeltaLakeImportCommand object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand?alt=com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand&text=AzureDatabricksDeltaLakeImportCommand\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.setTimestampFormat(java.lang.Object)"
  fullName: "com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand.setTimestampFormat(Object timestampFormat)"
  name: "setTimestampFormat(Object timestampFormat)"
  nameWithType: "AzureDatabricksDeltaLakeImportCommand.setTimestampFormat(Object timestampFormat)"
  summary: "Set the timestamp<wbr>Format property: Specify the timestamp format for csv in Azure Databricks Delta Lake Copy."
  parameters:
  - description: "the timestampFormat value to set."
    name: "timestampFormat"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksDeltaLakeImportCommand setTimestampFormat(Object timestampFormat)"
  desc: "Set the timestampFormat property: Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksDeltaLakeImportCommand object itself."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand?alt=com.azure.analytics.synapse.artifacts.models.AzureDatabricksDeltaLakeImportCommand&text=AzureDatabricksDeltaLakeImportCommand\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Azure Databricks Delta Lake import command settings."
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
