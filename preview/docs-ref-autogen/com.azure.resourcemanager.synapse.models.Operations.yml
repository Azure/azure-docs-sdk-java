### YamlMime:JavaType
uid: "com.azure.resourcemanager.synapse.models.Operations"
fullName: "com.azure.resourcemanager.synapse.models.Operations"
name: "Operations"
nameWithType: "Operations"
summary: "Resource collection API of Operations."
syntax: "public interface Operations"
methods:
- uid: "com.azure.resourcemanager.synapse.models.Operations.checkNameAvailability(com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.checkNameAvailability(CheckNameAvailabilityRequest request)"
  name: "checkNameAvailability(CheckNameAvailabilityRequest request)"
  nameWithType: "Operations.checkNameAvailability(CheckNameAvailabilityRequest request)"
  summary: "Check whether a workspace name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "The check request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResponse checkNameAvailability(CheckNameAvailabilityRequest request)"
  desc: "Check whether a workspace name is available."
  returns:
    description: "check name availability response."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.CheckNameAvailabilityResponse?alt=com.azure.resourcemanager.synapse.models.CheckNameAvailabilityResponse&text=CheckNameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.Operations.checkNameAvailabilityWithResponse(com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest request, Context context)"
  name: "checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest request, Context context)"
  nameWithType: "Operations.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest request, Context context)"
  summary: "Check whether a workspace name is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "The check request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.synapse.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityResponse> checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest request, Context context)"
  desc: "Check whether a workspace name is available."
  returns:
    description: "check name availability response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.models.CheckNameAvailabilityResponse?alt=com.azure.resourcemanager.synapse.models.CheckNameAvailabilityResponse&text=CheckNameAvailabilityResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.synapse.models.Operations.getAzureAsyncHeaderResult(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.getAzureAsyncHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  name: "getAzureAsyncHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  nameWithType: "Operations.getAzureAsyncHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  summary: "Get the status of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation ID."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract OperationResource getAzureAsyncHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  desc: "Get the status of an operation."
  returns:
    description: "the status of an operation."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.OperationResource?alt=com.azure.resourcemanager.synapse.models.OperationResource&text=OperationResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.Operations.getAzureAsyncHeaderResultWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.getAzureAsyncHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  name: "getAzureAsyncHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  nameWithType: "Operations.getAzureAsyncHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  summary: "Get the status of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation ID."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<OperationResource> getAzureAsyncHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  desc: "Get the status of an operation."
  returns:
    description: "the status of an operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.models.OperationResource?alt=com.azure.resourcemanager.synapse.models.OperationResource&text=OperationResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.synapse.models.Operations.getLocationHeaderResult(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.getLocationHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  name: "getLocationHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  nameWithType: "Operations.getLocationHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  summary: "Get the result of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation ID."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void getLocationHeaderResult(String resourceGroupName, String workspaceName, String operationId)"
  desc: "Get the result of an operation."
- uid: "com.azure.resourcemanager.synapse.models.Operations.getLocationHeaderResultWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.getLocationHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  name: "getLocationHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  nameWithType: "Operations.getLocationHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  summary: "Get the result of an operation."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation ID."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> getLocationHeaderResultWithResponse(String resourceGroupName, String workspaceName, String operationId, Context context)"
  desc: "Get the result of an operation."
  returns:
    description: "the result of an operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.synapse.models.Operations.list()"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.list()"
  name: "list()"
  nameWithType: "Operations.list()"
  summary: "Get all available operations."
  modifiers:
  - "abstract"
  syntax: "public abstract List<AvailableRpOperation> list()"
  desc: "Get all available operations."
  returns:
    description: "all available operations."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.models.AvailableRpOperation?alt=com.azure.resourcemanager.synapse.models.AvailableRpOperation&text=AvailableRpOperation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.synapse.models.Operations.listWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.synapse.models.Operations.listWithResponse(Context context)"
  name: "listWithResponse(Context context)"
  nameWithType: "Operations.listWithResponse(Context context)"
  summary: "Get all available operations."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<List<AvailableRpOperation>> listWithResponse(Context context)"
  desc: "Get all available operations."
  returns:
    description: "all available operations along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.models.AvailableRpOperation?alt=com.azure.resourcemanager.synapse.models.AvailableRpOperation&text=AvailableRpOperation\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "Resource collection API of Operations."
metadata: {}
package: "com.azure.resourcemanager.synapse.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.6
