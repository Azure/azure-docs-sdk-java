### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations*"
fullName: "com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations"
name: "setMixInAnnotations"
nameWithType: "Module.SetupContext.setMixInAnnotations"
members:
- uid: "com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations(java.lang.Class<?>,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.Module.SetupContext.setMixInAnnotations(Class<?> target, Class<?> mixinSource)"
  name: "setMixInAnnotations(Class<?> target, Class<?> mixinSource)"
  nameWithType: "Module.SetupContext.setMixInAnnotations(Class<?> target, Class<?> mixinSource)"
  summary: "Method used for defining mix-in annotations to use for augmenting specified class or interface. All annotations from `mixinSource` are taken to override annotations that `target` (or its supertypes) has.\n\nNote: mix-ins are registered both for serialization and deserialization (which can be different internally).\n\nNote: currently only one set of mix-in annotations can be defined for a single class; so if multiple modules register mix-ins, highest priority one (last one registered) will have priority over other modules."
  parameters:
  - description: "Class (or interface) whose annotations to effectively override"
    name: "target"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "Class (or interface) whose annotations are to\n   be \"added\" to target's annotations, overriding as necessary"
    name: "mixinSource"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public abstract void setMixInAnnotations(Class<?> target, Class<?> mixinSource)"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
