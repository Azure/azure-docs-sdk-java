### YamlMime:JavaMember
uid: "com.azure.communication.networktraversal.CommunicationRelayAsyncClient.getRelayConfiguration*"
fullName: "com.azure.communication.networktraversal.CommunicationRelayAsyncClient.getRelayConfiguration"
name: "getRelayConfiguration"
nameWithType: "CommunicationRelayAsyncClient.getRelayConfiguration"
members:
- uid: "com.azure.communication.networktraversal.CommunicationRelayAsyncClient.getRelayConfiguration()"
  fullName: "com.azure.communication.networktraversal.CommunicationRelayAsyncClient.getRelayConfiguration()"
  name: "getRelayConfiguration()"
  nameWithType: "CommunicationRelayAsyncClient.getRelayConfiguration()"
  summary: "Gets a Relay Configuration.\n\n**Sample code for getting a relay configuration without parameters**\n\n```java\nCommunicationRelayClient communicationRelayClient = createCommunicationNetworkTraversalClient();\n CommunicationRelayConfiguration config = communicationRelayClient.getRelayConfiguration();\n\n System.out.println(\"Expires on:\" + config.getExpiresOn());\n List<CommunicationIceServer> iceServers = config.getIceServers();\n\n for (CommunicationIceServer iceS : iceServers) {\n     System.out.println(\"URLS: \" + iceS.getUrls());\n     System.out.println(\"Username: \" + iceS.getUsername());\n     System.out.println(\"Credential: \" + iceS.getCredential());\n     System.out.println(\"RouteType: \" + iceS.getRouteType());\n }\n```"
  syntax: "public Mono<CommunicationRelayConfiguration> getRelayConfiguration()"
  returns:
    description: "The obtained Communication Relay Configuration."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.networktraversal.models.CommunicationRelayConfiguration?alt=com.azure.communication.networktraversal.models.CommunicationRelayConfiguration&text=CommunicationRelayConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.networktraversal.CommunicationRelayAsyncClient.getRelayConfiguration(com.azure.communication.networktraversal.models.GetRelayConfigurationOptions)"
  fullName: "com.azure.communication.networktraversal.CommunicationRelayAsyncClient.getRelayConfiguration(GetRelayConfigurationOptions options)"
  name: "getRelayConfiguration(GetRelayConfigurationOptions options)"
  nameWithType: "CommunicationRelayAsyncClient.getRelayConfiguration(GetRelayConfigurationOptions options)"
  summary: "Gets a Relay Configuration for a CommunicationUserIdentifier.\n\n**Sample code for getting a relay configuration**\n\n```java\nCommunicationIdentityClient communicationIdentityClient = createCommunicationIdentityClient();\n\n CommunicationUserIdentifier user = communicationIdentityClient.createUser();\n System.out.println(\"User id: \" + user.getId());\n\n GetRelayConfigurationOptions options = new GetRelayConfigurationOptions();\n options.setCommunicationUserIdentifier(user);\n\n CommunicationRelayClient communicationRelayClient = createCommunicationNetworkTraversalClient();\n CommunicationRelayConfiguration config = communicationRelayClient.getRelayConfiguration(options);\n\n System.out.println(\"Expires on:\" + config.getExpiresOn());\n List<CommunicationIceServer> iceServers = config.getIceServers();\n\n for (CommunicationIceServer iceS : iceServers) {\n     System.out.println(\"URLS: \" + iceS.getUrls());\n     System.out.println(\"Username: \" + iceS.getUsername());\n     System.out.println(\"Credential: \" + iceS.getCredential());\n     System.out.println(\"RouteType: \" + iceS.getRouteType());\n }\n```"
  parameters:
  - description: "of the GetRelayConfigurationOptions request"
    name: "options"
    type: "<xref href=\"com.azure.communication.networktraversal.models.GetRelayConfigurationOptions?alt=com.azure.communication.networktraversal.models.GetRelayConfigurationOptions&text=GetRelayConfigurationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CommunicationRelayConfiguration> getRelayConfiguration(GetRelayConfigurationOptions options)"
  returns:
    description: "The obtained Communication Relay Configuration."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.networktraversal.models.CommunicationRelayConfiguration?alt=com.azure.communication.networktraversal.models.CommunicationRelayConfiguration&text=CommunicationRelayConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.communication.networktraversal"
artifact: com.azure:azure-communication-networktraversal:1.1.0-beta.1
