### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.util.VersionInfo
  id: VersionInfo
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util
  children:
  - org.apache.hc.core5.util.VersionInfo.PROPERTY_MODULE
  - org.apache.hc.core5.util.VersionInfo.PROPERTY_RELEASE
  - org.apache.hc.core5.util.VersionInfo.PROPERTY_TIMESTAMP
  - org.apache.hc.core5.util.VersionInfo.UNAVAILABLE
  - org.apache.hc.core5.util.VersionInfo.VERSION_PROPERTY_FILE
  - org.apache.hc.core5.util.VersionInfo.VersionInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - org.apache.hc.core5.util.VersionInfo.fromMap(java.lang.String,java.util.Map<?,?>,java.lang.ClassLoader)
  - org.apache.hc.core5.util.VersionInfo.getClassloader()
  - org.apache.hc.core5.util.VersionInfo.getModule()
  - org.apache.hc.core5.util.VersionInfo.getPackage()
  - org.apache.hc.core5.util.VersionInfo.getRelease()
  - org.apache.hc.core5.util.VersionInfo.getSoftwareInfo(java.lang.String,java.lang.String,java.lang.Class<?>)
  - org.apache.hc.core5.util.VersionInfo.getTimestamp()
  - org.apache.hc.core5.util.VersionInfo.loadVersionInfo(java.lang.String,java.lang.ClassLoader)
  - org.apache.hc.core5.util.VersionInfo.loadVersionInfo(java.lang.String[],java.lang.ClassLoader)
  - org.apache.hc.core5.util.VersionInfo.toString()
  langs:
  - java
  name: VersionInfo
  nameWithType: VersionInfo
  fullName: org.apache.hc.core5.util.VersionInfo
  type: Class
  package: org.apache.hc.core5.util
  summary: >-
    Provides access to version information for HTTP components. Static methods are used to extract version information from property files that are automatically packaged with HTTP component release JARs.


    All available version information is provided in strings, where the string format is informal and subject to change without notice. Version information is provided for debugging output and interpretation by humans, not for automated processing in applications.
  syntax:
    content: public class VersionInfo
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.util.VersionInfo.PROPERTY_MODULE
  id: PROPERTY_MODULE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: PROPERTY_MODULE
  nameWithType: VersionInfo.PROPERTY_MODULE
  fullName: org.apache.hc.core5.util.VersionInfo.PROPERTY_MODULE
  type: Field
  package: org.apache.hc.core5.util
  syntax:
    content: public static final String PROPERTY_MODULE
    return:
      type: java.lang.String
- uid: org.apache.hc.core5.util.VersionInfo.PROPERTY_RELEASE
  id: PROPERTY_RELEASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: PROPERTY_RELEASE
  nameWithType: VersionInfo.PROPERTY_RELEASE
  fullName: org.apache.hc.core5.util.VersionInfo.PROPERTY_RELEASE
  type: Field
  package: org.apache.hc.core5.util
  syntax:
    content: public static final String PROPERTY_RELEASE
    return:
      type: java.lang.String
- uid: org.apache.hc.core5.util.VersionInfo.PROPERTY_TIMESTAMP
  id: PROPERTY_TIMESTAMP
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: PROPERTY_TIMESTAMP
  nameWithType: VersionInfo.PROPERTY_TIMESTAMP
  fullName: org.apache.hc.core5.util.VersionInfo.PROPERTY_TIMESTAMP
  type: Field
  package: org.apache.hc.core5.util
  syntax:
    content: public static final String PROPERTY_TIMESTAMP
    return:
      type: java.lang.String
- uid: org.apache.hc.core5.util.VersionInfo.UNAVAILABLE
  id: UNAVAILABLE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: UNAVAILABLE
  nameWithType: VersionInfo.UNAVAILABLE
  fullName: org.apache.hc.core5.util.VersionInfo.UNAVAILABLE
  type: Field
  package: org.apache.hc.core5.util
  summary: A string constant for unavailable information.
  syntax:
    content: public static final String UNAVAILABLE
    return:
      type: java.lang.String
- uid: org.apache.hc.core5.util.VersionInfo.VERSION_PROPERTY_FILE
  id: VERSION_PROPERTY_FILE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: VERSION_PROPERTY_FILE
  nameWithType: VersionInfo.VERSION_PROPERTY_FILE
  fullName: org.apache.hc.core5.util.VersionInfo.VERSION_PROPERTY_FILE
  type: Field
  package: org.apache.hc.core5.util
  summary: The filename of the version information files.
  syntax:
    content: public static final String VERSION_PROPERTY_FILE
    return:
      type: java.lang.String
- uid: org.apache.hc.core5.util.VersionInfo.VersionInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: VersionInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: VersionInfo(String pckg, String module, String release, String time, String clsldr)
  nameWithType: VersionInfo.VersionInfo(String pckg, String module, String release, String time, String clsldr)
  fullName: org.apache.hc.core5.util.VersionInfo.VersionInfo(String pckg, String module, String release, String time, String clsldr)
  overload: org.apache.hc.core5.util.VersionInfo.VersionInfo*
  type: Constructor
  package: org.apache.hc.core5.util
  summary: Instantiates version information.
  syntax:
    content: protected VersionInfo(String pckg, String module, String release, String time, String clsldr)
    parameters:
    - id: pckg
      type: java.lang.String
      description: the package
    - id: module
      type: java.lang.String
      description: the module, or <code>null</code>
    - id: release
      type: java.lang.String
      description: the release, or <code>null</code>
    - id: time
      type: java.lang.String
      description: the build time, or <code>null</code>
    - id: clsldr
      type: java.lang.String
      description: the class loader, or <code>null</code>
- uid: org.apache.hc.core5.util.VersionInfo.fromMap(java.lang.String,java.util.Map<?,?>,java.lang.ClassLoader)
  id: fromMap(java.lang.String,java.util.Map<?,?>,java.lang.ClassLoader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: fromMap(String pckg, Map<?,?> info, ClassLoader clsldr)
  nameWithType: VersionInfo.fromMap(String pckg, Map<?,?> info, ClassLoader clsldr)
  fullName: org.apache.hc.core5.util.VersionInfo.fromMap(String pckg, Map<?,?> info, ClassLoader clsldr)
  overload: org.apache.hc.core5.util.VersionInfo.fromMap*
  type: Method
  package: org.apache.hc.core5.util
  summary: Instantiates version information from properties.
  syntax:
    content: protected static VersionInfo fromMap(String pckg, Map<?,?> info, ClassLoader clsldr)
    parameters:
    - id: pckg
      type: java.lang.String
      description: the package for the version information
    - id: info
      type: java.util.Map<?,?>
      description: >-
        the map from string keys to string values,
                          for example <xref uid="" data-throw-if-not-resolved="false">java.util.Properties</xref>
    - id: clsldr
      type: java.lang.ClassLoader
      description: the classloader, or <code>null</code>
    return:
      type: org.apache.hc.core5.util.VersionInfo
      description: the version information
- uid: org.apache.hc.core5.util.VersionInfo.getClassloader()
  id: getClassloader()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: getClassloader()
  nameWithType: VersionInfo.getClassloader()
  fullName: org.apache.hc.core5.util.VersionInfo.getClassloader()
  overload: org.apache.hc.core5.util.VersionInfo.getClassloader*
  type: Method
  package: org.apache.hc.core5.util
  summary: Obtains the classloader used to read the version information. This is just the `toString` output of the classloader, since the version information should not keep a reference to the classloader itself. That could prevent garbage collection.
  syntax:
    content: public final String getClassloader()
    return:
      type: java.lang.String
      description: the classloader description, never <code>null</code>
- uid: org.apache.hc.core5.util.VersionInfo.getModule()
  id: getModule()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: getModule()
  nameWithType: VersionInfo.getModule()
  fullName: org.apache.hc.core5.util.VersionInfo.getModule()
  overload: org.apache.hc.core5.util.VersionInfo.getModule*
  type: Method
  package: org.apache.hc.core5.util
  summary: Obtains the name of the versioned module or informal unit. This data is read from the version information for the package.
  syntax:
    content: public final String getModule()
    return:
      type: java.lang.String
      description: the module name, never <code>null</code>
- uid: org.apache.hc.core5.util.VersionInfo.getPackage()
  id: getPackage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: getPackage()
  nameWithType: VersionInfo.getPackage()
  fullName: org.apache.hc.core5.util.VersionInfo.getPackage()
  overload: org.apache.hc.core5.util.VersionInfo.getPackage*
  type: Method
  package: org.apache.hc.core5.util
  summary: Obtains the package name. The package name identifies the module or informal unit.
  syntax:
    content: public final String getPackage()
    return:
      type: java.lang.String
      description: the package name, never <code>null</code>
- uid: org.apache.hc.core5.util.VersionInfo.getRelease()
  id: getRelease()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: getRelease()
  nameWithType: VersionInfo.getRelease()
  fullName: org.apache.hc.core5.util.VersionInfo.getRelease()
  overload: org.apache.hc.core5.util.VersionInfo.getRelease*
  type: Method
  package: org.apache.hc.core5.util
  summary: Obtains the release of the versioned module or informal unit. This data is read from the version information for the package.
  syntax:
    content: public final String getRelease()
    return:
      type: java.lang.String
      description: the release version, never <code>null</code>
- uid: org.apache.hc.core5.util.VersionInfo.getSoftwareInfo(java.lang.String,java.lang.String,java.lang.Class<?>)
  id: getSoftwareInfo(java.lang.String,java.lang.String,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: getSoftwareInfo(String name, String pkg, Class<?> cls)
  nameWithType: VersionInfo.getSoftwareInfo(String name, String pkg, Class<?> cls)
  fullName: org.apache.hc.core5.util.VersionInfo.getSoftwareInfo(String name, String pkg, Class<?> cls)
  overload: org.apache.hc.core5.util.VersionInfo.getSoftwareInfo*
  type: Method
  package: org.apache.hc.core5.util
  summary: >-
    Gets software information as `"/ (Java/)"`. If release is <xref uid="org.apache.hc.core5.util.VersionInfo.UNAVAILABLE" data-throw-if-not-resolved="false">#UNAVAILABLE</xref>, it will be omitted.


    For example:


    ```java

    "Apache-HttpClient/4.3 (Java/1.6.0_35)"

    ```
  syntax:
    content: public static String getSoftwareInfo(String name, String pkg, Class<?> cls)
    parameters:
    - id: name
      type: java.lang.String
      description: the component name, like "Apache-HttpClient".
    - id: pkg
      type: java.lang.String
      description: >-
        the package for which to load version information, for example "org.apache.http". The package name
                    should NOT end with a dot.
    - id: cls
      type: java.lang.Class<?>
      description: the class' class loader to load from, or <code>null</code> for the thread context class loader
    return:
      type: java.lang.String
- uid: org.apache.hc.core5.util.VersionInfo.getTimestamp()
  id: getTimestamp()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: getTimestamp()
  nameWithType: VersionInfo.getTimestamp()
  fullName: org.apache.hc.core5.util.VersionInfo.getTimestamp()
  overload: org.apache.hc.core5.util.VersionInfo.getTimestamp*
  type: Method
  package: org.apache.hc.core5.util
  summary: Obtains the timestamp of the versioned module or informal unit. This data is read from the version information for the package.
  syntax:
    content: public final String getTimestamp()
    return:
      type: java.lang.String
      description: the timestamp, never <code>null</code>
- uid: org.apache.hc.core5.util.VersionInfo.loadVersionInfo(java.lang.String,java.lang.ClassLoader)
  id: loadVersionInfo(java.lang.String,java.lang.ClassLoader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: loadVersionInfo(String pckg, ClassLoader clsldr)
  nameWithType: VersionInfo.loadVersionInfo(String pckg, ClassLoader clsldr)
  fullName: org.apache.hc.core5.util.VersionInfo.loadVersionInfo(String pckg, ClassLoader clsldr)
  overload: org.apache.hc.core5.util.VersionInfo.loadVersionInfo*
  type: Method
  package: org.apache.hc.core5.util
  summary: Loads version information for a package.
  syntax:
    content: public static VersionInfo loadVersionInfo(String pckg, ClassLoader clsldr)
    parameters:
    - id: pckg
      type: java.lang.String
      description: >-
        the package for which to load version information,
                          for example "org.apache.http".
                          The package name should NOT end with a dot.
    - id: clsldr
      type: java.lang.ClassLoader
      description: >-
        the classloader to load from, or
                          <code>null</code> for the thread context classloader
    return:
      type: org.apache.hc.core5.util.VersionInfo
      description: >-
        the version information for the argument package, or
                  <code>null</code> if not available
- uid: org.apache.hc.core5.util.VersionInfo.loadVersionInfo(java.lang.String[],java.lang.ClassLoader)
  id: loadVersionInfo(java.lang.String[],java.lang.ClassLoader)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: loadVersionInfo(String[] pckgs, ClassLoader clsldr)
  nameWithType: VersionInfo.loadVersionInfo(String[] pckgs, ClassLoader clsldr)
  fullName: org.apache.hc.core5.util.VersionInfo.loadVersionInfo(String[] pckgs, ClassLoader clsldr)
  overload: org.apache.hc.core5.util.VersionInfo.loadVersionInfo*
  type: Method
  package: org.apache.hc.core5.util
  summary: Loads version information for a list of packages.
  syntax:
    content: public static VersionInfo[] loadVersionInfo(String[] pckgs, ClassLoader clsldr)
    parameters:
    - id: pckgs
      type: java.lang.String[]
      description: the packages for which to load version info
    - id: clsldr
      type: java.lang.ClassLoader
      description: >-
        the classloader to load from, or
                          <code>null</code> for the thread context classloader
    return:
      type: org.apache.hc.core5.util.VersionInfo[]
      description: >-
        the version information for all packages found,
                  never <code>null</code>
- uid: org.apache.hc.core5.util.VersionInfo.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.util.VersionInfo
  langs:
  - java
  name: toString()
  nameWithType: VersionInfo.toString()
  fullName: org.apache.hc.core5.util.VersionInfo.toString()
  overload: org.apache.hc.core5.util.VersionInfo.toString*
  type: Method
  package: org.apache.hc.core5.util
  summary: Provides the version information in human-readable format.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: a string holding this version information
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.util.VersionInfo.VersionInfo*
  name: VersionInfo
  nameWithType: VersionInfo.VersionInfo
  fullName: org.apache.hc.core5.util.VersionInfo.VersionInfo
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.VersionInfo.getPackage*
  name: getPackage
  nameWithType: VersionInfo.getPackage
  fullName: org.apache.hc.core5.util.VersionInfo.getPackage
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.VersionInfo.getModule*
  name: getModule
  nameWithType: VersionInfo.getModule
  fullName: org.apache.hc.core5.util.VersionInfo.getModule
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.VersionInfo.getRelease*
  name: getRelease
  nameWithType: VersionInfo.getRelease
  fullName: org.apache.hc.core5.util.VersionInfo.getRelease
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.VersionInfo.getTimestamp*
  name: getTimestamp
  nameWithType: VersionInfo.getTimestamp
  fullName: org.apache.hc.core5.util.VersionInfo.getTimestamp
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.VersionInfo.getClassloader*
  name: getClassloader
  nameWithType: VersionInfo.getClassloader
  fullName: org.apache.hc.core5.util.VersionInfo.getClassloader
  package: org.apache.hc.core5.util
- uid: org.apache.hc.core5.util.VersionInfo.toString*
  name: toString
  nameWithType: VersionInfo.toString
  fullName: org.apache.hc.core5.util.VersionInfo.toString
  package: org.apache.hc.core5.util
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: java.lang.ClassLoader
  spec.java:
  - uid: java.lang.ClassLoader
    name: ClassLoader
    fullName: java.lang.ClassLoader
- uid: org.apache.hc.core5.util.VersionInfo[]
  spec.java:
  - uid: org.apache.hc.core5.util.VersionInfo
    name: VersionInfo
    fullName: org.apache.hc.core5.util.VersionInfo
  - name: '[]'
    fullName: '[]'
- uid: org.apache.hc.core5.util.VersionInfo.loadVersionInfo*
  name: loadVersionInfo
  nameWithType: VersionInfo.loadVersionInfo
  fullName: org.apache.hc.core5.util.VersionInfo.loadVersionInfo
  package: org.apache.hc.core5.util
- uid: java.util.Map<?,?>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.util.VersionInfo.fromMap*
  name: fromMap
  nameWithType: VersionInfo.fromMap
  fullName: org.apache.hc.core5.util.VersionInfo.fromMap
  package: org.apache.hc.core5.util
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.util.VersionInfo.getSoftwareInfo*
  name: getSoftwareInfo
  nameWithType: VersionInfo.getSoftwareInfo
  fullName: org.apache.hc.core5.util.VersionInfo.getSoftwareInfo
  package: org.apache.hc.core5.util
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
