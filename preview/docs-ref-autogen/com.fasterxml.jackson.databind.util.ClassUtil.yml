### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.ClassUtil
  id: ClassUtil
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.ClassUtil.<T>createInstance(java.lang.Class<T>,boolean)
  - com.fasterxml.jackson.databind.util.ClassUtil.<T>emptyIterator()
  - com.fasterxml.jackson.databind.util.ClassUtil.<T>findConstructor(java.lang.Class<T>,boolean)
  - com.fasterxml.jackson.databind.util.ClassUtil.<T>findFirstAnnotatedEnumValue(java.lang.Class<java.lang.Enum<?>>,java.lang.Class<T>)
  - com.fasterxml.jackson.databind.util.ClassUtil.<T>nonNull(T,T)
  - com.fasterxml.jackson.databind.util.ClassUtil.<T>throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)
  - com.fasterxml.jackson.databind.util.ClassUtil.ClassUtil()
  - com.fasterxml.jackson.databind.util.ClassUtil.Ctor
  - com.fasterxml.jackson.databind.util.ClassUtil.backticked(java.lang.String)
  - com.fasterxml.jackson.databind.util.ClassUtil.canBeABeanType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(java.lang.reflect.Member)
  - com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(java.lang.reflect.Member,boolean)
  - com.fasterxml.jackson.databind.util.ClassUtil.classNameOf(java.lang.Object)
  - com.fasterxml.jackson.databind.util.ClassUtil.classOf(java.lang.Object)
  - com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)
  - com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)
  - com.fasterxml.jackson.databind.util.ClassUtil.defaultValue(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.findClassAnnotations(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.lang.Enum<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.util.EnumMap<?,?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.util.EnumSet<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.findRawSuperTypes(java.lang.Class<?>,java.lang.Class<?>,boolean)
  - com.fasterxml.jackson.databind.util.ClassUtil.findSuperClasses(java.lang.Class<?>,java.lang.Class<?>,boolean)
  - com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>,boolean)
  - com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(java.lang.Class<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(java.lang.Class<?>,java.lang.Class<?>,java.util.List<java.lang.Class<?>>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription(java.lang.Object)
  - com.fasterxml.jackson.databind.util.ClassUtil.getClassMethods(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getConstructors(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredMethods(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getDeclaringClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getGenericInterfaces(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.getTypeDescription(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.util.ClassUtil.hasClass(java.lang.Object,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.hasGetterSignature(java.lang.reflect.Method)
  - com.fasterxml.jackson.databind.util.ClassUtil.isBogusClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isCollectionMapOrArray(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isConcrete(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isConcrete(java.lang.reflect.Member)
  - com.fasterxml.jackson.databind.util.ClassUtil.isEnumType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isJDKClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(java.lang.Object)
  - com.fasterxml.jackson.databind.util.ClassUtil.isLocalType(java.lang.Class<?>,boolean)
  - com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.isProxyType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.nameOf(com.fasterxml.jackson.databind.util.Named)
  - com.fasterxml.jackson.databind.util.ClassUtil.nameOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.nonNullString(java.lang.String)
  - com.fasterxml.jackson.databind.util.ClassUtil.nullOrToString(java.lang.Object)
  - com.fasterxml.jackson.databind.util.ClassUtil.primitiveType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.util.ClassUtil.quotedOr(java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.util.ClassUtil.rawClass(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(java.lang.Throwable,java.lang.String)
  - com.fasterxml.jackson.databind.util.ClassUtil.throwIfError(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.throwRootCauseIfIOE(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(java.lang.Throwable)
  - com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)
  - com.fasterxml.jackson.databind.util.ClassUtil.verifyMustOverride(java.lang.Class<?>,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.util.ClassUtil.wrapperType(java.lang.Class<?>)
  langs:
  - java
  name: ClassUtil
  nameWithType: ClassUtil
  fullName: com.fasterxml.jackson.databind.util.ClassUtil
  type: Class
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public final class ClassUtil
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.util.ClassUtil.<T>createInstance(java.lang.Class<T>,boolean)
  id: <T>createInstance(java.lang.Class<T>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: <T>createInstance(Class<T> cls, boolean canFixAccess)
  nameWithType: ClassUtil.<T>createInstance(Class<T> cls, boolean canFixAccess)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>createInstance(Class<T> cls, boolean canFixAccess)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.createInstance*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that can be called to try to create an instantiate of specified type. Instantiation is done using default no-argument constructor.
  syntax:
    content: public static T <T>createInstance(Class<T> cls, boolean canFixAccess)
    parameters:
    - id: cls
      type: java.lang.Class<T>
    - id: canFixAccess
      type: boolean
      description: >-
        Whether it is possible to try to change access
           rights of the default constructor (in case it is not publicly
           accessible) or not.
    return:
      type: T
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: >-
      If instantiation fails for any reason;
          except for cases where constructor throws an unchecked exception
          (which will be passed as is)
- uid: com.fasterxml.jackson.databind.util.ClassUtil.<T>emptyIterator()
  id: <T>emptyIterator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: <T>emptyIterator()
  nameWithType: ClassUtil.<T>emptyIterator()
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>emptyIterator()
  overload: com.fasterxml.jackson.databind.util.ClassUtil.emptyIterator*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Iterator<T> <T>emptyIterator()
    return:
      type: java.util.Iterator<T>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.<T>findConstructor(java.lang.Class<T>,boolean)
  id: <T>findConstructor(java.lang.Class<T>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: <T>findConstructor(Class<T> cls, boolean forceAccess)
  nameWithType: ClassUtil.<T>findConstructor(Class<T> cls, boolean forceAccess)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>findConstructor(Class<T> cls, boolean forceAccess)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findConstructor*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Constructor<T> <T>findConstructor(Class<T> cls, boolean forceAccess)
    parameters:
    - id: cls
      type: java.lang.Class<T>
    - id: forceAccess
      type: boolean
    return:
      type: java.lang.reflect.Constructor<T>
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.databind.util.ClassUtil.<T>findFirstAnnotatedEnumValue(java.lang.Class<java.lang.Enum<?>>,java.lang.Class<T>)
  id: <T>findFirstAnnotatedEnumValue(java.lang.Class<java.lang.Enum<?>>,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: <T>findFirstAnnotatedEnumValue(Class<Enum<?>> enumClass, Class<T> annotationClass)
  nameWithType: ClassUtil.<T>findFirstAnnotatedEnumValue(Class<Enum<?>> enumClass, Class<T> annotationClass)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>findFirstAnnotatedEnumValue(Class<Enum<?>> enumClass, Class<T> annotationClass)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findFirstAnnotatedEnumValue*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    A method that will look for the first Enum value annotated with the given Annotation.


    If there's more than one value annotated, the first one found will be returned. Which one exactly is used is undetermined.
  syntax:
    content: public static Enum<?> <T>findFirstAnnotatedEnumValue(Class<Enum<?>> enumClass, Class<T> annotationClass)
    parameters:
    - id: enumClass
      type: java.lang.Class<java.lang.Enum<?>>
      description: The Enum class to scan for a value with the given annotation
    - id: annotationClass
      type: java.lang.Class<T>
      description: The annotation to look for.
    return:
      type: java.lang.Enum<?>
      description: the Enum value annotated with the given Annotation or <code>null</code> if none is found.
- uid: com.fasterxml.jackson.databind.util.ClassUtil.<T>nonNull(T,T)
  id: <T>nonNull(T,T)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: <T>nonNull(T valueOrNull, T defaultValue)
  nameWithType: ClassUtil.<T>nonNull(T valueOrNull, T defaultValue)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>nonNull(T valueOrNull, T defaultValue)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.nonNull*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static T <T>nonNull(T valueOrNull, T defaultValue)
    parameters:
    - id: valueOrNull
      type: T
    - id: defaultValue
      type: T
    return:
      type: T
- uid: com.fasterxml.jackson.databind.util.ClassUtil.<T>throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)
  id: <T>throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: <T>throwAsMappingException(DeserializationContext ctxt, IOException e0)
  nameWithType: ClassUtil.<T>throwAsMappingException(DeserializationContext ctxt, IOException e0)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>throwAsMappingException(DeserializationContext ctxt, IOException e0)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.throwAsMappingException*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static T <T>throwAsMappingException(DeserializationContext ctxt, IOException e0)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: e0
      type: java.io.IOException
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.util.ClassUtil.ClassUtil()
  id: ClassUtil()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: ClassUtil()
  nameWithType: ClassUtil.ClassUtil()
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.ClassUtil()
  overload: com.fasterxml.jackson.databind.util.ClassUtil.ClassUtil*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public ClassUtil()
- uid: com.fasterxml.jackson.databind.util.ClassUtil.backticked(java.lang.String)
  id: backticked(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: backticked(String text)
  nameWithType: ClassUtil.backticked(String text)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.backticked(String text)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.backticked*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Returns either \`text\` or \[null\].
  syntax:
    content: public static String backticked(String text)
    parameters:
    - id: text
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.canBeABeanType(java.lang.Class<?>)
  id: canBeABeanType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: canBeABeanType(Class<?> type)
  nameWithType: ClassUtil.canBeABeanType(Class<?> type)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.canBeABeanType(Class<?> type)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.canBeABeanType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static String canBeABeanType(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: java.lang.String
      description: >-
        Null if class might be a bean; type String (that identifies
           why it's not a bean) if not
- uid: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(java.lang.reflect.Member)
  id: checkAndFixAccess(java.lang.reflect.Member)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: checkAndFixAccess(Member member)
  nameWithType: ClassUtil.checkAndFixAccess(Member member)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(Member member)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Equivalent to call:


    ```java

    checkAndFixAccess(member, false);

    ```
  syntax:
    content: public static void checkAndFixAccess(Member member)
    parameters:
    - id: member
      type: java.lang.reflect.Member
- uid: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(java.lang.reflect.Member,boolean)
  id: checkAndFixAccess(java.lang.reflect.Member,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: checkAndFixAccess(Member member, boolean force)
  nameWithType: ClassUtil.checkAndFixAccess(Member member, boolean force)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(Member member, boolean force)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: 'Method that is called if a <xref uid="java.lang.reflect.Member" data-throw-if-not-resolved="false">Member</xref> may need forced access, to force a field, method or constructor to be accessible: this is done by calling <xref uid="" data-throw-if-not-resolved="false">AccessibleObject#setAccessible(boolean)</xref>.'
  syntax:
    content: public static void checkAndFixAccess(Member member, boolean force)
    parameters:
    - id: member
      type: java.lang.reflect.Member
      description: Accessor to call <code>setAccessible()</code> on.
    - id: force
      type: boolean
      description: >-
        Whether to always try to make accessor accessible (true),
           or only if needed as per access rights (false)
- uid: com.fasterxml.jackson.databind.util.ClassUtil.classNameOf(java.lang.Object)
  id: classNameOf(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: classNameOf(Object inst)
  nameWithType: ClassUtil.classNameOf(Object inst)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.classNameOf(Object inst)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.classNameOf*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method used to construct appropriate description when passed either type (Class) or an instance; in latter case, class of instance is to be used.
  syntax:
    content: public static String classNameOf(Object inst)
    parameters:
    - id: inst
      type: java.lang.Object
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.classOf(java.lang.Object)
  id: classOf(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: classOf(Object inst)
  nameWithType: ClassUtil.classOf(Object inst)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.classOf(Object inst)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.classOf*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Class<?> classOf(Object inst)
    parameters:
    - id: inst
      type: java.lang.Object
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)
  id: closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)
  nameWithType: ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that encapsulate logic in trying to close given <xref uid="java.io.Closeable" data-throw-if-not-resolved="false">Closeable</xref> in case of failure; useful mostly in forcing flush()ing as otherwise error conditions tend to be hard to diagnose. However, it is often the case that output state may be corrupt so we need to be prepared for secondary exception without masking original one.
  syntax:
    content: public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Closeable toClose, Exception fail)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: toClose
      type: java.io.Closeable
    - id: fail
      type: java.lang.Exception
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)
  id: closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)
  nameWithType: ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that encapsulate logic in trying to close output generator in case of failure; useful mostly in forcing flush()ing as otherwise error conditions tend to be hard to diagnose. However, it is often the case that output state may be corrupt so we need to be prepared for secondary exception without masking original one.
  syntax:
    content: public static void closeOnFailAndThrowAsIOE(JsonGenerator g, Exception fail)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: fail
      type: java.lang.Exception
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.ClassUtil.defaultValue(java.lang.Class<?>)
  id: defaultValue(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: defaultValue(Class<?> cls)
  nameWithType: ClassUtil.defaultValue(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.defaultValue(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.defaultValue*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method used to get default value for wrappers used for primitive types (0 for Integer etc)
  syntax:
    content: public static Object defaultValue(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(java.lang.Throwable)
  id: exceptionMessage(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: exceptionMessage(Throwable t)
  nameWithType: ClassUtil.exceptionMessage(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that returns <xref uid="java.lang.Throwable.getMessage()" data-throw-if-not-resolved="false">Throwable#getMessage()</xref> for all other exceptions except for <xref uid="com.fasterxml.jackson.core.JsonProcessingException" data-throw-if-not-resolved="false">JsonProcessingException</xref>, for which `getOriginalMessage()` is returned instead. Method is used to avoid accidentally including trailing location information twice in message when wrapping exceptions.
  syntax:
    content: public static String exceptionMessage(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findClassAnnotations(java.lang.Class<?>)
  id: findClassAnnotations(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findClassAnnotations(Class<?> cls)
  nameWithType: ClassUtil.findClassAnnotations(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findClassAnnotations(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findClassAnnotations*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Annotation[] findClassAnnotations(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.annotation.Annotation[]
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.lang.Class<?>)
  id: findEnumType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findEnumType(Class<?> cls)
  nameWithType: ClassUtil.findEnumType(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that can be used to dynamically figure out formal enumeration type (class) for given class of an enumeration value. This is either class of enum instance (for "simple" enumerations), or its superclass (for enums with instance fields or methods)
  syntax:
    content: public static Class<? extends Enum<?>> findEnumType(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<? extends java.lang.Enum<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.lang.Enum<?>)
  id: findEnumType(java.lang.Enum<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findEnumType(Enum<?> en)
  nameWithType: ClassUtil.findEnumType(Enum<?> en)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(Enum<?> en)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that can be used to dynamically figure out formal enumeration type (class) for given enumeration. This is either class of enum instance (for "simple" enumerations), or its superclass (for enums with instance fields or methods)
  syntax:
    content: public static Class<? extends Enum<?>> findEnumType(Enum<?> en)
    parameters:
    - id: en
      type: java.lang.Enum<?>
    return:
      type: java.lang.Class<? extends java.lang.Enum<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.util.EnumMap<?,?>)
  id: findEnumType(java.util.EnumMap<?,?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findEnumType(EnumMap<?,?> m)
  nameWithType: ClassUtil.findEnumType(EnumMap<?,?> m)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(EnumMap<?,?> m)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that can be used to dynamically figure out enumeration type of given <xref uid="java.util.EnumSet" data-throw-if-not-resolved="false">EnumSet</xref>, without having access to its declaration. Code is needed to work around design flaw in JDK.
  syntax:
    content: public static Class<? extends Enum<?>> findEnumType(EnumMap<?,?> m)
    parameters:
    - id: m
      type: java.util.EnumMap<?,?>
    return:
      type: java.lang.Class<? extends java.lang.Enum<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(java.util.EnumSet<?>)
  id: findEnumType(java.util.EnumSet<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findEnumType(EnumSet<?> s)
  nameWithType: ClassUtil.findEnumType(EnumSet<?> s)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(EnumSet<?> s)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that can be used to dynamically figure out enumeration type of given <xref uid="java.util.EnumSet" data-throw-if-not-resolved="false">EnumSet</xref>, without having access to its declaration. Code is needed to work around design flaw in JDK.
  syntax:
    content: public static Class<? extends Enum<?>> findEnumType(EnumSet<?> s)
    parameters:
    - id: s
      type: java.util.EnumSet<?>
    return:
      type: java.lang.Class<? extends java.lang.Enum<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findRawSuperTypes(java.lang.Class<?>,java.lang.Class<?>,boolean)
  id: findRawSuperTypes(java.lang.Class<?>,java.lang.Class<?>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findRawSuperTypes(Class<?> cls, Class<?> endBefore, boolean addClassItself)
  nameWithType: ClassUtil.findRawSuperTypes(Class<?> cls, Class<?> endBefore, boolean addClassItself)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findRawSuperTypes(Class<?> cls, Class<?> endBefore, boolean addClassItself)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findRawSuperTypes*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static List<Class<?>> findRawSuperTypes(Class<?> cls, Class<?> endBefore, boolean addClassItself)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: endBefore
      type: java.lang.Class<?>
    - id: addClassItself
      type: boolean
    return:
      type: java.util.List<java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findSuperClasses(java.lang.Class<?>,java.lang.Class<?>,boolean)
  id: findSuperClasses(java.lang.Class<?>,java.lang.Class<?>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findSuperClasses(Class<?> cls, Class<?> endBefore, boolean addClassItself)
  nameWithType: ClassUtil.findSuperClasses(Class<?> cls, Class<?> endBefore, boolean addClassItself)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findSuperClasses(Class<?> cls, Class<?> endBefore, boolean addClassItself)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findSuperClasses*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Method for finding all super classes (but not super interfaces) of given class, starting with the immediate super class and ending in the most distant one. Class itself is included if `addClassItself` is true.


    NOTE: mostly/only called to resolve mix-ins as that's where we do not care about fully-resolved types, just associated annotations.
  syntax:
    content: public static List<Class<?>> findSuperClasses(Class<?> cls, Class<?> endBefore, boolean addClassItself)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: endBefore
      type: java.lang.Class<?>
    - id: addClassItself
      type: boolean
    return:
      type: java.util.List<java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>,boolean)
  id: findSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findSuperTypes(JavaType type, Class<?> endBefore, boolean addClassItself)
  nameWithType: ClassUtil.findSuperTypes(JavaType type, Class<?> endBefore, boolean addClassItself)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(JavaType type, Class<?> endBefore, boolean addClassItself)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that will find all sub-classes and implemented interfaces of a given class or interface. Classes are listed in order of precedence, starting with the immediate super-class, followed by interfaces class directly declares to implemented, and then recursively followed by parent of super-class and so forth. Note that `Object.class` is not included in the list regardless of whether `endBefore` argument is defined or not.
  syntax:
    content: public static List<JavaType> findSuperTypes(JavaType type, Class<?> endBefore, boolean addClassItself)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: endBefore
      type: java.lang.Class<?>
      description: >-
        Super-type to NOT include in results, if any; when
            encountered, will be ignored (and no super types are checked).
    - id: addClassItself
      type: boolean
    return:
      type: java.util.List<com.fasterxml.jackson.databind.JavaType>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(java.lang.Class<?>,java.lang.Class<?>)
  id: findSuperTypes(java.lang.Class<?>,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findSuperTypes(Class<?> cls, Class<?> endBefore)
  nameWithType: ClassUtil.findSuperTypes(Class<?> cls, Class<?> endBefore)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(Class<?> cls, Class<?> endBefore)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static List<Class<?>> findSuperTypes(Class<?> cls, Class<?> endBefore)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: endBefore
      type: java.lang.Class<?>
    return:
      type: java.util.List<java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(java.lang.Class<?>,java.lang.Class<?>,java.util.List<java.lang.Class<?>>)
  id: findSuperTypes(java.lang.Class<?>,java.lang.Class<?>,java.util.List<java.lang.Class<?>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: findSuperTypes(Class<?> cls, Class<?> endBefore, List<Class<?>> result)
  nameWithType: ClassUtil.findSuperTypes(Class<?> cls, Class<?> endBefore, List<Class<?>> result)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(Class<?> cls, Class<?> endBefore, List<Class<?>> result)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static List<Class<?>> findSuperTypes(Class<?> cls, Class<?> endBefore, List<Class<?>> result)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: endBefore
      type: java.lang.Class<?>
    - id: result
      type: java.util.List<java.lang.Class<?>>
    return:
      type: java.util.List<java.lang.Class<?>>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription(java.lang.Object)
  id: getClassDescription(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getClassDescription(Object classOrInstance)
  nameWithType: ClassUtil.getClassDescription(Object classOrInstance)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription(Object classOrInstance)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method used to construct appropriate description when passed either type (Class) or an instance; in latter case, class of instance is to be used.
  syntax:
    content: public static String getClassDescription(Object classOrInstance)
    parameters:
    - id: classOrInstance
      type: java.lang.Object
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getClassMethods(java.lang.Class<?>)
  id: getClassMethods(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getClassMethods(Class<?> cls)
  nameWithType: ClassUtil.getClassMethods(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getClassMethods(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getClassMethods*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that gets methods declared in given class; usually a simple thing, but sometimes (as per \[databind\#785\]) more complicated, depending on classloader setup.
  syntax:
    content: public static Method[] getClassMethods(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.reflect.Method[]
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getConstructors(java.lang.Class<?>)
  id: getConstructors(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getConstructors(Class<?> cls)
  nameWithType: ClassUtil.getConstructors(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getConstructors(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getConstructors*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static ClassUtil.Ctor[] getConstructors(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.util.ClassUtil.Ctor[]
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields(java.lang.Class<?>)
  id: getDeclaredFields(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getDeclaredFields(Class<?> cls)
  nameWithType: ClassUtil.getDeclaredFields(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Field[] getDeclaredFields(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.reflect.Field[]
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredMethods(java.lang.Class<?>)
  id: getDeclaredMethods(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getDeclaredMethods(Class<?> cls)
  nameWithType: ClassUtil.getDeclaredMethods(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredMethods(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredMethods*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Method[] getDeclaredMethods(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.reflect.Method[]
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaringClass(java.lang.Class<?>)
  id: getDeclaringClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getDeclaringClass(Class<?> cls)
  nameWithType: ClassUtil.getDeclaringClass(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaringClass(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaringClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Class<?> getDeclaringClass(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(java.lang.Class<?>)
  id: getEnclosingClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getEnclosingClass(Class<?> cls)
  nameWithType: ClassUtil.getEnclosingClass(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Class<?> getEnclosingClass(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getGenericInterfaces(java.lang.Class<?>)
  id: getGenericInterfaces(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getGenericInterfaces(Class<?> cls)
  nameWithType: ClassUtil.getGenericInterfaces(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getGenericInterfaces(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getGenericInterfaces*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Type[] getGenericInterfaces(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.reflect.Type[]
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass(java.lang.Class<?>)
  id: getGenericSuperclass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getGenericSuperclass(Class<?> cls)
  nameWithType: ClassUtil.getGenericSuperclass(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Type getGenericSuperclass(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.reflect.Type
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass(java.lang.Class<?>)
  id: getOuterClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getOuterClass(Class<?> type)
  nameWithType: ClassUtil.getOuterClass(Class<?> type)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass(Class<?> type)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method for finding enclosing class for non-static inner classes
  syntax:
    content: public static Class<?> getOuterClass(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(java.lang.Class<?>)
  id: getPackageName(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getPackageName(Class<?> cls)
  nameWithType: ClassUtil.getPackageName(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getPackageName*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static String getPackageName(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(java.lang.Throwable)
  id: getRootCause(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getRootCause(Throwable t)
  nameWithType: ClassUtil.getRootCause(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getRootCause(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getRootCause*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that can be used to find the "root cause", innermost of chained (wrapped) exceptions.
  syntax:
    content: public static Throwable getRootCause(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
    return:
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getTypeDescription(com.fasterxml.jackson.databind.JavaType)
  id: getTypeDescription(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: getTypeDescription(JavaType fullType)
  nameWithType: ClassUtil.getTypeDescription(JavaType fullType)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getTypeDescription(JavaType fullType)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.getTypeDescription*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method to create and return "backticked" description of given resolved type (or, `"null"` if `null` passed), similar to return vaue of <xref uid="com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription(java.lang.Object)" data-throw-if-not-resolved="false">#getClassDescription(Object)</xref>.
  syntax:
    content: public static String getTypeDescription(JavaType fullType)
    parameters:
    - id: fullType
      type: com.fasterxml.jackson.databind.JavaType
      description: Fully resolved type or null
    return:
      type: java.lang.String
      description: >-
        String description of type including generic type parameters, surrounded
           by backticks, if type passed; or string "null" if {code null} passed
- uid: com.fasterxml.jackson.databind.util.ClassUtil.hasClass(java.lang.Object,java.lang.Class<?>)
  id: hasClass(java.lang.Object,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: hasClass(Object inst, Class<?> raw)
  nameWithType: ClassUtil.hasClass(Object inst, Class<?> raw)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.hasClass(Object inst, Class<?> raw)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.hasClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean hasClass(Object inst, Class<?> raw)
    parameters:
    - id: inst
      type: java.lang.Object
    - id: raw
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod(java.lang.Class<?>)
  id: hasEnclosingMethod(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: hasEnclosingMethod(Class<?> cls)
  nameWithType: ClassUtil.hasEnclosingMethod(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean hasEnclosingMethod(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.hasGetterSignature(java.lang.reflect.Method)
  id: hasGetterSignature(java.lang.reflect.Method)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: hasGetterSignature(Method m)
  nameWithType: ClassUtil.hasGetterSignature(Method m)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.hasGetterSignature(Method m)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.hasGetterSignature*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean hasGetterSignature(Method m)
    parameters:
    - id: m
      type: java.lang.reflect.Method
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isBogusClass(java.lang.Class<?>)
  id: isBogusClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isBogusClass(Class<?> cls)
  nameWithType: ClassUtil.isBogusClass(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isBogusClass(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isBogusClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean isBogusClass(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isCollectionMapOrArray(java.lang.Class<?>)
  id: isCollectionMapOrArray(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isCollectionMapOrArray(Class<?> type)
  nameWithType: ClassUtil.isCollectionMapOrArray(Class<?> type)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isCollectionMapOrArray(Class<?> type)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isCollectionMapOrArray*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean isCollectionMapOrArray(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete(java.lang.Class<?>)
  id: isConcrete(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isConcrete(Class<?> type)
  nameWithType: ClassUtil.isConcrete(Class<?> type)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete(Class<?> type)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that checks if given class is a concrete one; that is, not an interface or abstract class.
  syntax:
    content: public static boolean isConcrete(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete(java.lang.reflect.Member)
  id: isConcrete(java.lang.reflect.Member)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isConcrete(Member member)
  nameWithType: ClassUtil.isConcrete(Member member)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete(Member member)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean isConcrete(Member member)
    parameters:
    - id: member
      type: java.lang.reflect.Member
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isEnumType(java.lang.Class<?>)
  id: isEnumType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isEnumType(Class<?> rawType)
  nameWithType: ClassUtil.isEnumType(Class<?> rawType)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isEnumType(Class<?> rawType)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isEnumType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that encapsulates reliable check on whether given raw type "is an Enum", that is, is or extends <xref uid="java.lang.Enum" data-throw-if-not-resolved="false">java.lang.Enum</xref>.
  syntax:
    content: public static boolean isEnumType(Class<?> rawType)
    parameters:
    - id: rawType
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isJDKClass(java.lang.Class<?>)
  id: isJDKClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isJDKClass(Class<?> rawType)
  nameWithType: ClassUtil.isJDKClass(Class<?> rawType)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isJDKClass(Class<?> rawType)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isJDKClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: 'Some aspects of handling need to be changed for JDK types (and possibly some extensions under `javax.`?): for example, forcing of access will not work well for future JDKs (12 and later).'
  syntax:
    content: public static boolean isJDKClass(Class<?> rawType)
    parameters:
    - id: rawType
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(java.lang.Class<?>)
  id: isJacksonStdImpl(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isJacksonStdImpl(Class<?> implClass)
  nameWithType: ClassUtil.isJacksonStdImpl(Class<?> implClass)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(Class<?> implClass)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean isJacksonStdImpl(Class<?> implClass)
    parameters:
    - id: implClass
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(java.lang.Object)
  id: isJacksonStdImpl(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isJacksonStdImpl(Object impl)
  nameWithType: ClassUtil.isJacksonStdImpl(Object impl)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(Object impl)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Method that can be called to determine if given Object is the default implementation Jackson uses; as opposed to a custom serializer installed by a module or calling application. Determination is done using <xref uid="com.fasterxml.jackson.databind.annotation.JacksonStdImpl" data-throw-if-not-resolved="false">JacksonStdImpl</xref> annotation on handler (serializer, deserializer etc) class.


    NOTE: passing \`null\` is legal, and will result in `true` being returned.
  syntax:
    content: public static boolean isJacksonStdImpl(Object impl)
    parameters:
    - id: impl
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isLocalType(java.lang.Class<?>,boolean)
  id: isLocalType(java.lang.Class<?>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isLocalType(Class<?> type, boolean allowNonStatic)
  nameWithType: ClassUtil.isLocalType(Class<?> type, boolean allowNonStatic)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isLocalType(Class<?> type, boolean allowNonStatic)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isLocalType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static String isLocalType(Class<?> type, boolean allowNonStatic)
    parameters:
    - id: type
      type: java.lang.Class<?>
    - id: allowNonStatic
      type: boolean
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass(java.lang.Class<?>)
  id: isNonStaticInnerClass(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isNonStaticInnerClass(Class<?> cls)
  nameWithType: ClassUtil.isNonStaticInnerClass(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean isNonStaticInnerClass(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(java.lang.Class<?>)
  id: isObjectOrPrimitive(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isObjectOrPrimitive(Class<?> cls)
  nameWithType: ClassUtil.isObjectOrPrimitive(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static boolean isObjectOrPrimitive(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isProxyType(java.lang.Class<?>)
  id: isProxyType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: isProxyType(Class<?> type)
  nameWithType: ClassUtil.isProxyType(Class<?> type)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isProxyType(Class<?> type)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.isProxyType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method used to weed out dynamic Proxy types; types that do not expose concrete method API that we could use to figure out automatic Bean (property) based serialization.
  syntax:
    content: public static boolean isProxyType(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nameOf(com.fasterxml.jackson.databind.util.Named)
  id: nameOf(com.fasterxml.jackson.databind.util.Named)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: nameOf(Named named)
  nameWithType: ClassUtil.nameOf(Named named)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.nameOf(Named named)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.nameOf*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Returns either backtick-quoted \`named.getName()\` (if \`named\` not null), or "\[null\]" if \`named\` is null.
  syntax:
    content: public static String nameOf(Named named)
    parameters:
    - id: named
      type: com.fasterxml.jackson.databind.util.Named
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nameOf(java.lang.Class<?>)
  id: nameOf(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: nameOf(Class<?> cls)
  nameWithType: ClassUtil.nameOf(Class<?> cls)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.nameOf(Class<?> cls)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.nameOf*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Returns either \`cls.getName()\` (if \`cls\` not null), or "\[null\]" if \`cls\` is null.
  syntax:
    content: public static String nameOf(Class<?> cls)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nonNullString(java.lang.String)
  id: nonNullString(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: nonNullString(String str)
  nameWithType: ClassUtil.nonNullString(String str)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.nonNullString(String str)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.nonNullString*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static String nonNullString(String str)
    parameters:
    - id: str
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nullOrToString(java.lang.Object)
  id: nullOrToString(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: nullOrToString(Object value)
  nameWithType: ClassUtil.nullOrToString(Object value)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.nullOrToString(Object value)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.nullOrToString*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static String nullOrToString(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.primitiveType(java.lang.Class<?>)
  id: primitiveType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: primitiveType(Class<?> type)
  nameWithType: ClassUtil.primitiveType(Class<?> type)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.primitiveType(Class<?> type)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.primitiveType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that can be used to find primitive type for given class if (but only if) it is either wrapper type or primitive type; returns \`null\` if type is neither.
  syntax:
    content: public static Class<?> primitiveType(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.quotedOr(java.lang.Object,java.lang.String)
  id: quotedOr(java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: quotedOr(Object str, String forNull)
  nameWithType: ClassUtil.quotedOr(Object str, String forNull)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.quotedOr(Object str, String forNull)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.quotedOr*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Returns either quoted value (with double-quotes) -- if argument non-null String -- or String NULL (no quotes) (if null).
  syntax:
    content: public static String quotedOr(Object str, String forNull)
    parameters:
    - id: str
      type: java.lang.Object
    - id: forNull
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.rawClass(com.fasterxml.jackson.databind.JavaType)
  id: rawClass(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: rawClass(JavaType t)
  nameWithType: ClassUtil.rawClass(JavaType t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.rawClass(JavaType t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.rawClass*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static Class<?> rawClass(JavaType t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(java.lang.Throwable)
  id: throwAsIAE(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: throwAsIAE(Throwable t)
  nameWithType: ClassUtil.throwAsIAE(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that will wrap 't' as an <xref uid="java.lang.IllegalArgumentException" data-throw-if-not-resolved="false">IllegalArgumentException</xref> if it is a checked exception; otherwise (runtime exception or error) throw as is
  syntax:
    content: public static void throwAsIAE(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(java.lang.Throwable,java.lang.String)
  id: throwAsIAE(java.lang.Throwable,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: throwAsIAE(Throwable t, String msg)
  nameWithType: ClassUtil.throwAsIAE(Throwable t, String msg)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE(Throwable t, String msg)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that will wrap 't' as an <xref uid="java.lang.IllegalArgumentException" data-throw-if-not-resolved="false">IllegalArgumentException</xref> (and with specified message) if it is a checked exception; otherwise (runtime exception or error) throw as is
  syntax:
    content: public static void throwAsIAE(Throwable t, String msg)
    parameters:
    - id: t
      type: java.lang.Throwable
    - id: msg
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwIfError(java.lang.Throwable)
  id: throwIfError(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: throwIfError(Throwable t)
  nameWithType: ClassUtil.throwIfError(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwIfError(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.throwIfError*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that will check if argument is an <xref uid="" data-throw-if-not-resolved="false">Error</xref>, and if so, (re)throw it; otherwise just return
  syntax:
    content: public static Throwable throwIfError(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
    return:
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE(java.lang.Throwable)
  id: throwIfIOE(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: throwIfIOE(Throwable t)
  nameWithType: ClassUtil.throwIfIOE(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that will check if argument is an <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>, and if so, (re)throw it; otherwise just return
  syntax:
    content: public static Throwable throwIfIOE(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
    return:
      type: java.lang.Throwable
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE(java.lang.Throwable)
  id: throwIfRTE(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: throwIfRTE(Throwable t)
  nameWithType: ClassUtil.throwIfRTE(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method that will check if argument is an <xref uid="java.lang.RuntimeException" data-throw-if-not-resolved="false">RuntimeException</xref>, and if so, (re)throw it; otherwise just return
  syntax:
    content: public static Throwable throwIfRTE(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
    return:
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwRootCauseIfIOE(java.lang.Throwable)
  id: throwRootCauseIfIOE(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: throwRootCauseIfIOE(Throwable t)
  nameWithType: ClassUtil.throwRootCauseIfIOE(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwRootCauseIfIOE(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.throwRootCauseIfIOE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that works like by calling <xref uid="com.fasterxml.jackson.databind.util.ClassUtil.getRootCause*" data-throw-if-not-resolved="false">#getRootCause</xref> and then either throwing it (if instanceof <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>), or return.
  syntax:
    content: public static Throwable throwRootCauseIfIOE(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
    return:
      type: java.lang.Throwable
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(java.lang.Throwable)
  id: unwrapAndThrowAsIAE(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: unwrapAndThrowAsIAE(Throwable t)
  nameWithType: ClassUtil.unwrapAndThrowAsIAE(Throwable t)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(Throwable t)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that will locate the innermost exception for given Throwable; and then wrap it as an <xref uid="java.lang.IllegalArgumentException" data-throw-if-not-resolved="false">IllegalArgumentException</xref> if it is a checked exception; otherwise (runtime exception or error) throw as is
  syntax:
    content: public static void unwrapAndThrowAsIAE(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)
  id: unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: unwrapAndThrowAsIAE(Throwable t, String msg)
  nameWithType: ClassUtil.unwrapAndThrowAsIAE(Throwable t, String msg)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE(Throwable t, String msg)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method that will locate the innermost exception for given Throwable; and then wrap it as an <xref uid="java.lang.IllegalArgumentException" data-throw-if-not-resolved="false">IllegalArgumentException</xref> if it is a checked exception; otherwise (runtime exception or error) throw as is
  syntax:
    content: public static void unwrapAndThrowAsIAE(Throwable t, String msg)
    parameters:
    - id: t
      type: java.lang.Throwable
    - id: msg
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.verifyMustOverride(java.lang.Class<?>,java.lang.Object,java.lang.String)
  id: verifyMustOverride(java.lang.Class<?>,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: verifyMustOverride(Class<?> expType, Object instance, String method)
  nameWithType: ClassUtil.verifyMustOverride(Class<?> expType, Object instance, String method)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.verifyMustOverride(Class<?> expType, Object instance, String method)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.verifyMustOverride*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static void verifyMustOverride(Class<?> expType, Object instance, String method)
    parameters:
    - id: expType
      type: java.lang.Class<?>
    - id: instance
      type: java.lang.Object
    - id: method
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.wrapperType(java.lang.Class<?>)
  id: wrapperType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.ClassUtil
  langs:
  - java
  name: wrapperType(Class<?> primitiveType)
  nameWithType: ClassUtil.wrapperType(Class<?> primitiveType)
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.wrapperType(Class<?> primitiveType)
  overload: com.fasterxml.jackson.databind.util.ClassUtil.wrapperType*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method for finding wrapper type for given primitive type (why isn't there one in JDK?)
  syntax:
    content: public static Class<?> wrapperType(Class<?> primitiveType)
    parameters:
    - id: primitiveType
      type: java.lang.Class<?>
    return:
      type: java.lang.Class<?>
references:
- uid: com.fasterxml.jackson.databind.util.ClassUtil.ClassUtil*
  name: ClassUtil
  nameWithType: ClassUtil.ClassUtil
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.ClassUtil
  package: com.fasterxml.jackson.databind.util
- uid: java.util.Iterator<T>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.emptyIterator*
  name: <T>emptyIterator
  nameWithType: ClassUtil.<T>emptyIterator
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>emptyIterator
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.util.List<com.fasterxml.jackson.databind.JavaType>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes*
  name: findSuperTypes
  nameWithType: ClassUtil.findSuperTypes
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes
  package: com.fasterxml.jackson.databind.util
- uid: java.util.List<java.lang.Class<?>>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findRawSuperTypes*
  name: findRawSuperTypes
  nameWithType: ClassUtil.findRawSuperTypes
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findRawSuperTypes
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findSuperClasses*
  name: findSuperClasses
  nameWithType: ClassUtil.findSuperClasses
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findSuperClasses
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.util.ClassUtil.canBeABeanType*
  name: canBeABeanType
  nameWithType: ClassUtil.canBeABeanType
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.canBeABeanType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isLocalType*
  name: isLocalType
  nameWithType: ClassUtil.isLocalType
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isLocalType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass*
  name: getOuterClass
  nameWithType: ClassUtil.getOuterClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isProxyType*
  name: isProxyType
  nameWithType: ClassUtil.isProxyType
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isProxyType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete*
  name: isConcrete
  nameWithType: ClassUtil.isConcrete
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isConcrete
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.reflect.Member
  spec.java:
  - uid: java.lang.reflect.Member
    name: Member
    fullName: java.lang.reflect.Member
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isCollectionMapOrArray*
  name: isCollectionMapOrArray
  nameWithType: ClassUtil.isCollectionMapOrArray
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isCollectionMapOrArray
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isBogusClass*
  name: isBogusClass
  nameWithType: ClassUtil.isBogusClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isBogusClass
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive*
  name: isObjectOrPrimitive
  nameWithType: ClassUtil.isObjectOrPrimitive
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.ClassUtil.hasClass*
  name: hasClass
  nameWithType: ClassUtil.hasClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.hasClass
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.verifyMustOverride*
  name: verifyMustOverride
  nameWithType: ClassUtil.verifyMustOverride
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.verifyMustOverride
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.reflect.Method
  spec.java:
  - uid: java.lang.reflect.Method
    name: Method
    fullName: java.lang.reflect.Method
- uid: com.fasterxml.jackson.databind.util.ClassUtil.hasGetterSignature*
  name: hasGetterSignature
  nameWithType: ClassUtil.hasGetterSignature
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.hasGetterSignature
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwIfError*
  name: throwIfError
  nameWithType: ClassUtil.throwIfError
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwIfError
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE*
  name: throwIfRTE
  nameWithType: ClassUtil.throwIfRTE
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwIfRTE
  package: com.fasterxml.jackson.databind.util
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE*
  name: throwIfIOE
  nameWithType: ClassUtil.throwIfIOE
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwIfIOE
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getRootCause*
  name: getRootCause
  nameWithType: ClassUtil.getRootCause
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getRootCause
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwRootCauseIfIOE*
  name: throwRootCauseIfIOE
  nameWithType: ClassUtil.throwRootCauseIfIOE
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwRootCauseIfIOE
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE*
  name: throwAsIAE
  nameWithType: ClassUtil.throwAsIAE
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.throwAsIAE
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.util.ClassUtil.throwAsMappingException*
  name: <T>throwAsMappingException
  nameWithType: ClassUtil.<T>throwAsMappingException
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>throwAsMappingException
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE*
  name: unwrapAndThrowAsIAE
  nameWithType: ClassUtil.unwrapAndThrowAsIAE
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.unwrapAndThrowAsIAE
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE*
  name: closeOnFailAndThrowAsIOE
  nameWithType: ClassUtil.closeOnFailAndThrowAsIOE
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE
  package: com.fasterxml.jackson.databind.util
- uid: java.io.Closeable
  spec.java:
  - uid: java.io.Closeable
    name: Closeable
    fullName: java.io.Closeable
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.createInstance*
  name: <T>createInstance
  nameWithType: ClassUtil.<T>createInstance
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>createInstance
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.reflect.Constructor<T>
  spec.java:
  - uid: java.lang.reflect.Constructor
    name: Constructor
    fullName: java.lang.reflect.Constructor
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findConstructor*
  name: <T>findConstructor
  nameWithType: ClassUtil.<T>findConstructor
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>findConstructor
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.classOf*
  name: classOf
  nameWithType: ClassUtil.classOf
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.classOf
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.rawClass*
  name: rawClass
  nameWithType: ClassUtil.rawClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.rawClass
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nonNull*
  name: <T>nonNull
  nameWithType: ClassUtil.<T>nonNull
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>nonNull
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nullOrToString*
  name: nullOrToString
  nameWithType: ClassUtil.nullOrToString
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.nullOrToString
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nonNullString*
  name: nonNullString
  nameWithType: ClassUtil.nonNullString
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.nonNullString
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.quotedOr*
  name: quotedOr
  nameWithType: ClassUtil.quotedOr
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.quotedOr
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription*
  name: getClassDescription
  nameWithType: ClassUtil.getClassDescription
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getTypeDescription*
  name: getTypeDescription
  nameWithType: ClassUtil.getTypeDescription
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getTypeDescription
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.classNameOf*
  name: classNameOf
  nameWithType: ClassUtil.classNameOf
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.classNameOf
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.nameOf*
  name: nameOf
  nameWithType: ClassUtil.nameOf
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.nameOf
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.Named
  name: Named
  nameWithType: Named
  fullName: com.fasterxml.jackson.databind.util.Named
- uid: com.fasterxml.jackson.databind.util.ClassUtil.backticked*
  name: backticked
  nameWithType: ClassUtil.backticked
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.backticked
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage*
  name: exceptionMessage
  nameWithType: ClassUtil.exceptionMessage
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.exceptionMessage
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.defaultValue*
  name: defaultValue
  nameWithType: ClassUtil.defaultValue
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.defaultValue
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.wrapperType*
  name: wrapperType
  nameWithType: ClassUtil.wrapperType
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.wrapperType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.primitiveType*
  name: primitiveType
  nameWithType: ClassUtil.primitiveType
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.primitiveType
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess*
  name: checkAndFixAccess
  nameWithType: ClassUtil.checkAndFixAccess
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isEnumType*
  name: isEnumType
  nameWithType: ClassUtil.isEnumType
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isEnumType
  package: com.fasterxml.jackson.databind.util
- uid: java.util.EnumSet<?>
  spec.java:
  - uid: java.util.EnumSet
    name: EnumSet
    fullName: java.util.EnumSet
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: java.lang.Class<? extends java.lang.Enum<?>>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends java.lang.Enum'
    name: Enum
    fullName: '? extends java.lang.Enum'
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType*
  name: findEnumType
  nameWithType: ClassUtil.findEnumType
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findEnumType
  package: com.fasterxml.jackson.databind.util
- uid: java.util.EnumMap<?,?>
  spec.java:
  - uid: java.util.EnumMap
    name: EnumMap
    fullName: java.util.EnumMap
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: java.lang.Enum<?>
  spec.java:
  - uid: java.lang.Enum
    name: Enum
    fullName: java.lang.Enum
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: java.lang.Class<java.lang.Enum<?>>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: java.lang.Enum
    name: Enum
    fullName: java.lang.Enum
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findFirstAnnotatedEnumValue*
  name: <T>findFirstAnnotatedEnumValue
  nameWithType: ClassUtil.<T>findFirstAnnotatedEnumValue
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.<T>findFirstAnnotatedEnumValue
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl*
  name: isJacksonStdImpl
  nameWithType: ClassUtil.isJacksonStdImpl
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isJDKClass*
  name: isJDKClass
  nameWithType: ClassUtil.isJDKClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isJDKClass
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass*
  name: isNonStaticInnerClass
  nameWithType: ClassUtil.isNonStaticInnerClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getPackageName*
  name: getPackageName
  nameWithType: ClassUtil.getPackageName
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getPackageName
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod*
  name: hasEnclosingMethod
  nameWithType: ClassUtil.hasEnclosingMethod
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.reflect.Field[]
  spec.java:
  - uid: java.lang.reflect.Field
    name: Field
    fullName: java.lang.reflect.Field
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields*
  name: getDeclaredFields
  nameWithType: ClassUtil.getDeclaredFields
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredFields
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.reflect.Method[]
  spec.java:
  - uid: java.lang.reflect.Method
    name: Method
    fullName: java.lang.reflect.Method
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredMethods*
  name: getDeclaredMethods
  nameWithType: ClassUtil.getDeclaredMethods
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaredMethods
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.annotation.Annotation[]
  spec.java:
  - uid: java.lang.annotation.Annotation
    name: Annotation
    fullName: java.lang.annotation.Annotation
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.findClassAnnotations*
  name: findClassAnnotations
  nameWithType: ClassUtil.findClassAnnotations
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.findClassAnnotations
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getClassMethods*
  name: getClassMethods
  nameWithType: ClassUtil.getClassMethods
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getClassMethods
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.Ctor[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.util.ClassUtil.Ctor
    name: Ctor
    fullName: com.fasterxml.jackson.databind.util.ClassUtil.Ctor
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getConstructors*
  name: getConstructors
  nameWithType: ClassUtil.getConstructors
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getConstructors
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaringClass*
  name: getDeclaringClass
  nameWithType: ClassUtil.getDeclaringClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getDeclaringClass
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass*
  name: getGenericSuperclass
  nameWithType: ClassUtil.getGenericSuperclass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getGenericSuperclass
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.reflect.Type[]
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getGenericInterfaces*
  name: getGenericInterfaces
  nameWithType: ClassUtil.getGenericInterfaces
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getGenericInterfaces
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass*
  name: getEnclosingClass
  nameWithType: ClassUtil.getEnclosingClass
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.util.ClassUtil.Ctor
  name: ClassUtil.Ctor
  nameWithType: ClassUtil.Ctor
  fullName: com.fasterxml.jackson.databind.util.ClassUtil.Ctor
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.reflect.Constructor
  name: Constructor
  nameWithType: Constructor
  fullName: java.lang.reflect.Constructor
- uid: java.util.EnumSet
  name: EnumSet
  nameWithType: EnumSet
  fullName: java.util.EnumSet
- uid: '? extends java.lang.Enum'
  name: '? extends Enum'
  nameWithType: '? extends Enum'
  fullName: '? extends java.lang.Enum'
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: java.util.EnumMap
  name: EnumMap
  nameWithType: EnumMap
  fullName: java.util.EnumMap
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
