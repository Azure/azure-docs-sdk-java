### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.models.SparkScheduler"
fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler"
name: "SparkScheduler"
nameWithType: "SparkScheduler"
summary: "The Spark<wbr>Scheduler model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkScheduler"
constructors:
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.SparkScheduler()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.SparkScheduler()"
  name: "SparkScheduler()"
  nameWithType: "SparkScheduler.SparkScheduler()"
  syntax: "public SparkScheduler()"
methods:
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.getCancellationRequestedAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.getCancellationRequestedAt()"
  name: "getCancellationRequestedAt()"
  nameWithType: "SparkScheduler.getCancellationRequestedAt()"
  summary: "Get the cancellation<wbr>Requested<wbr>At property: The cancellation<wbr>Requested<wbr>At property."
  syntax: "public OffsetDateTime getCancellationRequestedAt()"
  desc: "Get the cancellationRequestedAt property: The cancellationRequestedAt property."
  returns:
    description: "the cancellationRequestedAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.getCurrentState()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.getCurrentState()"
  name: "getCurrentState()"
  nameWithType: "SparkScheduler.getCurrentState()"
  summary: "Get the current<wbr>State property: The current<wbr>State property."
  syntax: "public SchedulerCurrentState getCurrentState()"
  desc: "Get the currentState property: The currentState property."
  returns:
    description: "the currentState value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SchedulerCurrentState?alt=com.azure.analytics.synapse.spark.models.SchedulerCurrentState&text=SchedulerCurrentState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.getEndedAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.getEndedAt()"
  name: "getEndedAt()"
  nameWithType: "SparkScheduler.getEndedAt()"
  summary: "Get the ended<wbr>At property: The ended<wbr>At property."
  syntax: "public OffsetDateTime getEndedAt()"
  desc: "Get the endedAt property: The endedAt property."
  returns:
    description: "the endedAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.getScheduledAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.getScheduledAt()"
  name: "getScheduledAt()"
  nameWithType: "SparkScheduler.getScheduledAt()"
  summary: "Get the scheduled<wbr>At property: The scheduled<wbr>At property."
  syntax: "public OffsetDateTime getScheduledAt()"
  desc: "Get the scheduledAt property: The scheduledAt property."
  returns:
    description: "the scheduledAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.getSubmittedAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.getSubmittedAt()"
  name: "getSubmittedAt()"
  nameWithType: "SparkScheduler.getSubmittedAt()"
  summary: "Get the submitted<wbr>At property: The submitted<wbr>At property."
  syntax: "public OffsetDateTime getSubmittedAt()"
  desc: "Get the submittedAt property: The submittedAt property."
  returns:
    description: "the submittedAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.setCancellationRequestedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.setCancellationRequestedAt(OffsetDateTime cancellationRequestedAt)"
  name: "setCancellationRequestedAt(OffsetDateTime cancellationRequestedAt)"
  nameWithType: "SparkScheduler.setCancellationRequestedAt(OffsetDateTime cancellationRequestedAt)"
  summary: "Set the cancellation<wbr>Requested<wbr>At property: The cancellation<wbr>Requested<wbr>At property."
  parameters:
  - description: "the cancellationRequestedAt value to set."
    name: "cancellationRequestedAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkScheduler setCancellationRequestedAt(OffsetDateTime cancellationRequestedAt)"
  desc: "Set the cancellationRequestedAt property: The cancellationRequestedAt property."
  returns:
    description: "the SparkScheduler object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkScheduler?alt=com.azure.analytics.synapse.spark.models.SparkScheduler&text=SparkScheduler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.setCurrentState(com.azure.analytics.synapse.spark.models.SchedulerCurrentState)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.setCurrentState(SchedulerCurrentState currentState)"
  name: "setCurrentState(SchedulerCurrentState currentState)"
  nameWithType: "SparkScheduler.setCurrentState(SchedulerCurrentState currentState)"
  summary: "Set the current<wbr>State property: The current<wbr>State property."
  parameters:
  - description: "the currentState value to set."
    name: "currentState"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SchedulerCurrentState?alt=com.azure.analytics.synapse.spark.models.SchedulerCurrentState&text=SchedulerCurrentState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkScheduler setCurrentState(SchedulerCurrentState currentState)"
  desc: "Set the currentState property: The currentState property."
  returns:
    description: "the SparkScheduler object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkScheduler?alt=com.azure.analytics.synapse.spark.models.SparkScheduler&text=SparkScheduler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.setEndedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.setEndedAt(OffsetDateTime endedAt)"
  name: "setEndedAt(OffsetDateTime endedAt)"
  nameWithType: "SparkScheduler.setEndedAt(OffsetDateTime endedAt)"
  summary: "Set the ended<wbr>At property: The ended<wbr>At property."
  parameters:
  - description: "the endedAt value to set."
    name: "endedAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkScheduler setEndedAt(OffsetDateTime endedAt)"
  desc: "Set the endedAt property: The endedAt property."
  returns:
    description: "the SparkScheduler object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkScheduler?alt=com.azure.analytics.synapse.spark.models.SparkScheduler&text=SparkScheduler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.setScheduledAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.setScheduledAt(OffsetDateTime scheduledAt)"
  name: "setScheduledAt(OffsetDateTime scheduledAt)"
  nameWithType: "SparkScheduler.setScheduledAt(OffsetDateTime scheduledAt)"
  summary: "Set the scheduled<wbr>At property: The scheduled<wbr>At property."
  parameters:
  - description: "the scheduledAt value to set."
    name: "scheduledAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkScheduler setScheduledAt(OffsetDateTime scheduledAt)"
  desc: "Set the scheduledAt property: The scheduledAt property."
  returns:
    description: "the SparkScheduler object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkScheduler?alt=com.azure.analytics.synapse.spark.models.SparkScheduler&text=SparkScheduler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkScheduler.setSubmittedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkScheduler.setSubmittedAt(OffsetDateTime submittedAt)"
  name: "setSubmittedAt(OffsetDateTime submittedAt)"
  nameWithType: "SparkScheduler.setSubmittedAt(OffsetDateTime submittedAt)"
  summary: "Set the submitted<wbr>At property: The submitted<wbr>At property."
  parameters:
  - description: "the submittedAt value to set."
    name: "submittedAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkScheduler setSubmittedAt(OffsetDateTime submittedAt)"
  desc: "Set the submittedAt property: The submittedAt property."
  returns:
    description: "the SparkScheduler object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkScheduler?alt=com.azure.analytics.synapse.spark.models.SparkScheduler&text=SparkScheduler\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SparkScheduler model."
metadata: {}
package: "com.azure.analytics.synapse.spark.models"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
