### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.MapSerializer.getKeySerializer*"
fullName: "com.fasterxml.jackson.databind.ser.std.MapSerializer.getKeySerializer"
name: "getKeySerializer"
nameWithType: "MapSerializer.getKeySerializer"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.MapSerializer.getKeySerializer()"
  fullName: "com.fasterxml.jackson.databind.ser.std.MapSerializer.getKeySerializer()"
  name: "getKeySerializer()"
  nameWithType: "MapSerializer.getKeySerializer()"
  summary: "Accessor for currently assigned key serializer. Note that this may return null during construction of `MapSerializer`: depedencies are resolved during <xref uid=\"com.fasterxml.jackson.databind.ser.std.MapSerializer.createContextual*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createContextual\"></xref> method (which can be overridden by custom implementations), but for some dynamic types, it is possible that serializer is only resolved during actual serialization."
  syntax: "public JsonSerializer<?> getKeySerializer()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
