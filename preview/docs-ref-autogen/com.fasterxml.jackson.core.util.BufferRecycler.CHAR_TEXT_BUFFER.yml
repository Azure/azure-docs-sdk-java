### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TEXT_BUFFER*"
fullName: "com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TEXT_BUFFER"
name: "CHAR_TEXT_BUFFER"
nameWithType: "BufferRecycler.CHAR_TEXT_BUFFER"
members:
- uid: "com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TEXT_BUFFER"
  fullName: "com.fasterxml.jackson.core.util.BufferRecycler.CHAR_TEXT_BUFFER"
  name: "CHAR_TEXT_BUFFER"
  nameWithType: "BufferRecycler.CHAR_TEXT_BUFFER"
  summary: "Used through <xref uid=\"com.fasterxml.jackson.core.util.TextBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TextBuffer\"></xref>: directly by parsers (to concatenate String values) and indirectly via <xref uid=\"com.fasterxml.jackson.core.io.SegmentedStringWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.io.SegmentedStringWriter\"></xref> when serializing (databind level `ObjectMapper` and `ObjectWriter`). In both cases used as segments (and not for whole value), but may result in retention of larger chunks for big content (long text values during parsing; bigger output documents for generation)."
  syntax: "public static final int CHAR_TEXT_BUFFER"
type: "field"
metadata: {}
package: "com.fasterxml.jackson.core.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
