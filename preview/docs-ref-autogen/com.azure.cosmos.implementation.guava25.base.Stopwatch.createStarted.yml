### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Stopwatch.createStarted*"
fullName: "com.azure.cosmos.implementation.guava25.base.Stopwatch.createStarted"
name: "createStarted"
nameWithType: "Stopwatch.createStarted"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Stopwatch.createStarted()"
  fullName: "com.azure.cosmos.implementation.guava25.base.Stopwatch.createStarted()"
  name: "createStarted()"
  nameWithType: "Stopwatch.createStarted()"
  summary: "Creates (and starts) a new stopwatch using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"System#nanoTime\"></xref> as its time source."
  syntax: "public static Stopwatch createStarted()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Stopwatch?alt=com.azure.cosmos.implementation.guava25.base.Stopwatch&text=Stopwatch\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Stopwatch.createStarted(com.azure.cosmos.implementation.guava25.base.Ticker)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Stopwatch.createStarted(Ticker ticker)"
  name: "createStarted(Ticker ticker)"
  nameWithType: "Stopwatch.createStarted(Ticker ticker)"
  summary: "Creates (and starts) a new stopwatch, using the specified time source."
  parameters:
  - name: "ticker"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Ticker?alt=com.azure.cosmos.implementation.guava25.base.Ticker&text=Ticker\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Stopwatch createStarted(Ticker ticker)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Stopwatch?alt=com.azure.cosmos.implementation.guava25.base.Stopwatch&text=Stopwatch\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
