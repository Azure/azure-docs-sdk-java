### YamlMime:JavaMember
uid: "com.azure.core.amqp.implementation.AzureTokenManagerProvider.getTokenManager*"
fullName: "com.azure.core.amqp.implementation.AzureTokenManagerProvider.getTokenManager"
name: "getTokenManager"
nameWithType: "AzureTokenManagerProvider.getTokenManager"
members:
- uid: "com.azure.core.amqp.implementation.AzureTokenManagerProvider.getTokenManager(reactor.core.publisher.Mono<com.azure.core.amqp.ClaimsBasedSecurityNode>,java.lang.String)"
  fullName: "com.azure.core.amqp.implementation.AzureTokenManagerProvider.getTokenManager(Mono<ClaimsBasedSecurityNode> cbsNodeMono, String resource)"
  name: "getTokenManager(Mono<ClaimsBasedSecurityNode> cbsNodeMono, String resource)"
  nameWithType: "AzureTokenManagerProvider.getTokenManager(Mono<ClaimsBasedSecurityNode> cbsNodeMono, String resource)"
  summary: "Returns a token manager given the authorization type, the message broker host, and resource to access."
  parameters:
  - name: "cbsNodeMono"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.amqp.ClaimsBasedSecurityNode?alt=com.azure.core.amqp.ClaimsBasedSecurityNode&text=ClaimsBasedSecurityNode\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "resource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TokenManager getTokenManager(Mono<ClaimsBasedSecurityNode> cbsNodeMono, String resource)"
  returns:
    type: "<xref href=\"com.azure.core.amqp.implementation.TokenManager?alt=com.azure.core.amqp.implementation.TokenManager&text=TokenManager\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.amqp.implementation"
artifact: com.azure:azure-core-amqp:1.7.0-beta.2
