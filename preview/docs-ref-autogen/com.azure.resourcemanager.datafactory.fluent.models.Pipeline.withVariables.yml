### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withVariables*"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withVariables"
name: "withVariables"
nameWithType: "Pipeline.withVariables"
members:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withVariables(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.VariableSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.Pipeline.withVariables(Map<String,VariableSpecification> variables)"
  name: "withVariables(Map<String,VariableSpecification> variables)"
  nameWithType: "Pipeline.withVariables(Map<String,VariableSpecification> variables)"
  summary: "Set the variables property: List of variables for pipeline."
  parameters:
  - description: "the variables value to set."
    name: "variables"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.VariableSpecification?alt=com.azure.resourcemanager.datafactory.models.VariableSpecification&text=VariableSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Pipeline withVariables(Map<String,VariableSpecification> variables)"
  returns:
    description: "the Pipeline object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.Pipeline?alt=com.azure.resourcemanager.datafactory.fluent.models.Pipeline&text=Pipeline\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.7
