### YamlMime:JavaType
uid: "com.azure.storage.blob.specialized.BlobClientBase"
fullName: "com.azure.storage.blob.specialized.BlobClientBase"
name: "BlobClientBase"
nameWithType: "BlobClientBase"
summary: "This class provides a client that contains all operations that apply to any blob type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BlobClientBase"
constructors:
- uid: "com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase(com.azure.storage.blob.specialized.BlobAsyncClientBase)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.BlobClientBase(BlobAsyncClientBase client)"
  name: "BlobClientBase(BlobAsyncClientBase client)"
  nameWithType: "BlobClientBase.BlobClientBase(BlobAsyncClientBase client)"
  summary: "Constructor used by <xref uid=\"com.azure.storage.blob.specialized.SpecializedBlobClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecializedBlobClientBuilder\"></xref>."
  modifiers:
  - "protected"
  parameters:
  - description: "the async blob client"
    name: "client"
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobAsyncClientBase?alt=com.azure.storage.blob.specialized.BlobAsyncClientBase&text=BlobAsyncClientBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected BlobClientBase(BlobAsyncClientBase client)"
  desc: "Constructor used by <xref uid=\"com.azure.storage.blob.specialized.SpecializedBlobClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecializedBlobClientBuilder\"></xref>."
methods:
- uid: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(String copyId)"
  name: "abortCopyFromUrl(String copyId)"
  nameWithType: "BlobClientBase.abortCopyFromUrl(String copyId)"
  summary: "Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata."
  parameters:
  - description: "The id of the copy operation to abort."
    name: "copyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void abortCopyFromUrl(String copyId)"
  desc: "Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata.\n\n**Code Samples**\n\n```java\nclient.abortCopyFromUrl(copyId);\n System.out.println(\"Aborted copy completed.\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/abort-copy-blob"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)"
  name: "abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)"
  summary: "Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata."
  parameters:
  - description: "The id of the copy operation to abort."
    name: "copyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The lease ID the active lease on the blob must match."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> abortCopyFromUrlWithResponse(String copyId, String leaseId, Duration timeout, Context context)"
  desc: "Stops a pending copy that was previously started and leaves a destination blob with 0 length and metadata.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Aborted copy completed with status %d%n\",\n     client.abortCopyFromUrlWithResponse(copyId, leaseId, timeout,\n         new Context(key2, value2)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/abort-copy-blob"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(com.azure.storage.blob.options.BlobBeginCopyOptions)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(BlobBeginCopyOptions options)"
  name: "beginCopy(BlobBeginCopyOptions options)"
  nameWithType: "BlobClientBase.beginCopy(BlobBeginCopyOptions options)"
  summary: "Copies the data at the source URL to a blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobBeginCopyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobBeginCopyOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobBeginCopyOptions?alt=com.azure.storage.blob.options.BlobBeginCopyOptions&text=BlobBeginCopyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BlobCopyInfo,Void> beginCopy(BlobBeginCopyOptions options)"
  desc: "Copies the data at the source URL to a blob.\n\nThis method triggers a long-running, asynchronous operations. The source may be another blob or an Azure File. If the source is in another account, the source must either be public or authenticated with a SAS token. If the source is in the same account, the Shared Key authorization on the destination will also be applied to the source. The source URL must be URL encoded.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n BlobBeginCopySourceRequestConditions modifiedRequestConditions = new BlobBeginCopySourceRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n SyncPoller<BlobCopyInfo, Void> poller = client.beginCopy(new BlobBeginCopyOptions(url).setMetadata(metadata)\n     .setTags(tags).setTier(AccessTier.HOT).setRehydratePriority(RehydratePriority.STANDARD)\n     .setSourceRequestConditions(modifiedRequestConditions)\n     .setDestinationRequestConditions(blobRequestConditions).setPollInterval(Duration.ofSeconds(2)));\n\n PollResponse<BlobCopyInfo> response = poller.waitUntil(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED);\n System.out.printf(\"Copy identifier: %s%n\", response.getValue().getCopyId());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of blob copy operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobCopyInfo?alt=com.azure.storage.blob.models.BlobCopyInfo&text=BlobCopyInfo\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(String sourceUrl, Duration pollInterval)"
  name: "beginCopy(String sourceUrl, Duration pollInterval)"
  nameWithType: "BlobClientBase.beginCopy(String sourceUrl, Duration pollInterval)"
  summary: "Copies the data at the source URL to a blob."
  parameters:
  - description: "The source URL to copy from. URLs outside of Azure may only be copied to block blobs."
    name: "sourceUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Duration between each poll for the copy status. If none is specified, a default of one second\n is used."
    name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BlobCopyInfo,Void> beginCopy(String sourceUrl, Duration pollInterval)"
  desc: "Copies the data at the source URL to a blob.\n\nThis method triggers a long-running, asynchronous operations. The source may be another blob or an Azure File. If the source is in another account, the source must either be public or authenticated with a SAS token. If the source is in the same account, the Shared Key authorization on the destination will also be applied to the source. The source URL must be URL encoded.\n\n**Code Samples**\n\n```java\nfinal SyncPoller<BlobCopyInfo, Void> poller = client.beginCopy(url, Duration.ofSeconds(2));\n PollResponse<BlobCopyInfo> pollResponse = poller.poll();\n System.out.printf(\"Copy identifier: %s%n\", pollResponse.getValue().getCopyId());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of blob copy operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobCopyInfo?alt=com.azure.storage.blob.models.BlobCopyInfo&text=BlobCopyInfo\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  name: "beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  nameWithType: "BlobClientBase.beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  summary: "Copies the data at the source URL to a blob."
  parameters:
  - description: "The source URL to copy from. URLs outside of Azure may only be copied to block blobs."
    name: "sourceUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the destination blob. If there is leading or trailing whitespace in\n any metadata key or value, it must be removed or encoded."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> for the destination blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.RehydratePriority\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RehydratePriority\"></xref> for rehydrating the blob."
    name: "priority"
    type: "<xref href=\"com.azure.storage.blob.models.RehydratePriority?alt=com.azure.storage.blob.models.RehydratePriority&text=RehydratePriority\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.core.http.RequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestConditions\"></xref> against the source. Standard HTTP Access\n conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions\n related to when the blob was changed relative to the given request. The request will fail if the specified\n condition is not satisfied."
    name: "sourceModifiedRequestConditions"
    type: "<xref href=\"com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> against the destination."
    name: "destRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Duration between each poll for the copy status. If none is specified, a default of one second\n is used."
    name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BlobCopyInfo,Void> beginCopy(String sourceUrl, Map<String,String> metadata, AccessTier tier, RehydratePriority priority, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration pollInterval)"
  desc: "Copies the data at the source URL to a blob.\n\nThis method triggers a long-running, asynchronous operations. The source may be another blob or an Azure File. If the source is in another account, the source must either be public or authenticated with a SAS token. If the source is in the same account, the Shared Key authorization on the destination will also be applied to the source. The source URL must be URL encoded.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n SyncPoller<BlobCopyInfo, Void> poller = client.beginCopy(url, metadata, AccessTier.HOT,\n     RehydratePriority.STANDARD, modifiedRequestConditions, blobRequestConditions, Duration.ofSeconds(2));\n\n PollResponse<BlobCopyInfo> response = poller.waitUntil(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED);\n System.out.printf(\"Copy identifier: %s%n\", response.getValue().getCopyId());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of blob copy operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobCopyInfo?alt=com.azure.storage.blob.models.BlobCopyInfo&text=BlobCopyInfo\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(String copySource)"
  name: "copyFromUrl(String copySource)"
  nameWithType: "BlobClientBase.copyFromUrl(String copySource)"
  summary: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response."
  parameters:
  - description: "The source URL to copy from."
    name: "copySource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String copyFromUrl(String copySource)"
  desc: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.\n\nThe source must be a block blob no larger than 256MB. The source must also be either public or have a sas token attached. The URL must be URL encoded.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Copy identifier: %s%n\", client.copyFromUrl(url));\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob-from-url"
  returns:
    description: "The copy ID for the long running operation."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(com.azure.storage.blob.options.BlobCopyFromUrlOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)"
  name: "copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)"
  summary: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobCopyFromUrlOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobCopyFromUrlOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobCopyFromUrlOptions?alt=com.azure.storage.blob.options.BlobCopyFromUrlOptions&text=BlobCopyFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> copyFromUrlWithResponse(BlobCopyFromUrlOptions options, Duration timeout, Context context)"
  desc: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.\n\nThe source must be a block blob no larger than 256MB. The source must also be either public or have a sas token attached. The URL must be URL encoded.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n Map<String, String> tags = Collections.singletonMap(\"tag\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n\n System.out.printf(\"Copy identifier: %s%n\",\n     client.copyFromUrlWithResponse(new BlobCopyFromUrlOptions(url).setMetadata(metadata).setTags(tags)\n         .setTier(AccessTier.HOT).setSourceRequestConditions(modifiedRequestConditions)\n         .setDestinationRequestConditions(blobRequestConditions), timeout,\n         new Context(key1, value1)).getValue());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob-from-url"
  returns:
    description: "The copy ID for the long running operation."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)"
  name: "copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)"
  summary: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response."
  parameters:
  - description: "The source URL to copy from. URLs outside of Azure may only be copied to block blobs."
    name: "copySource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the destination blob. If there is leading or trailing whitespace in\n any metadata key or value, it must be removed or encoded."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> for the destination blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.core.http.RequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestConditions\"></xref> against the source. Standard HTTP Access\n conditions related to the modification of data. ETag and LastModifiedTime are used to construct conditions\n related to when the blob was changed relative to the given request. The request will fail if the specified\n condition is not satisfied."
    name: "sourceModifiedRequestConditions"
    type: "<xref href=\"com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> against the destination."
    name: "destRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<String> copyFromUrlWithResponse(String copySource, Map<String,String> metadata, AccessTier tier, RequestConditions sourceModifiedRequestConditions, BlobRequestConditions destRequestConditions, Duration timeout, Context context)"
  desc: "Copies the data at the source URL to a blob and waits for the copy to complete before returning a response.\n\nThe source must be a block blob no larger than 256MB. The source must also be either public or have a sas token attached. The URL must be URL encoded.\n\n**Code Samples**\n\n```java\nMap<String, String> metadata = Collections.singletonMap(\"metadata\", \"value\");\n RequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(7));\n BlobRequestConditions blobRequestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n\n System.out.printf(\"Copy identifier: %s%n\",\n     client.copyFromUrlWithResponse(url, metadata, AccessTier.HOT, modifiedRequestConditions,\n         blobRequestConditions, timeout,\n         new Context(key1, value1)).getValue());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/copy-blob-from-url"
  returns:
    description: "The copy ID for the long running operation."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()"
  name: "createSnapshot()"
  nameWithType: "BlobClientBase.createSnapshot()"
  summary: "Creates a read-only snapshot of the blob."
  syntax: "public BlobClientBase createSnapshot()"
  desc: "Creates a read-only snapshot of the blob.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Identifier for the snapshot is %s%n\", client.createSnapshot().getSnapshotId());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/snapshot-blob"
  returns:
    description: "A response containing a <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> which is used to interact with the created snapshot, use\n <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase#getSnapshotId()\"></xref> to get the identifier for the snapshot."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Creates a read-only snapshot of the blob."
  parameters:
  - description: "Metadata to associate with the resource. If there is leading or trailing whitespace in any\n metadata key or value, it must be removed or encoded."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlobClientBase> createSnapshotWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Creates a read-only snapshot of the blob.\n\n**Code Samples**\n\n```java\nMap<String, String> snapshotMetadata = Collections.singletonMap(\"metadata\", \"value\");\n BlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n\n System.out.printf(\"Identifier for the snapshot is %s%n\",\n     client.createSnapshotWithResponse(snapshotMetadata, requestConditions, timeout,\n         new Context(key1, value1)).getValue());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/snapshot-blob"
  returns:
    description: "A response containing a <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> which is used to interact with the created snapshot, use\n <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase#getSnapshotId()\"></xref> to get the identifier for the snapshot."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.delete()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.delete()"
  name: "delete()"
  nameWithType: "BlobClientBase.delete()"
  summary: "Deletes the specified blob or snapshot."
  syntax: "public void delete()"
  desc: "Deletes the specified blob or snapshot. To delete a blob with its snapshots use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteWithResponse(DeleteSnapshotsOptionType, BlobRequestConditions, Duration, Context)\"></xref> and set `DeleteSnapshotsOptionType` to INCLUDE.\n\n**Code Samples**\n\n```java\nclient.delete();\n System.out.println(\"Delete completed.\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/delete-blob"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.deleteIfExists()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.deleteIfExists()"
  name: "deleteIfExists()"
  nameWithType: "BlobClientBase.deleteIfExists()"
  summary: "Deletes the specified blob or snapshot if it exists."
  syntax: "public boolean deleteIfExists()"
  desc: "Deletes the specified blob or snapshot if it exists. To delete a blob with its snapshots use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.deleteIfExistsWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIfExistsWithResponse(DeleteSnapshotsOptionType, BlobRequestConditions, Duration, Context)\"></xref> and set `DeleteSnapshotsOptionType` to INCLUDE.\n\n**Code Samples**\n\n```java\nboolean result = client.deleteIfExists();\n System.out.println(\"Delete completed: \" + result);\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/delete-blob"
  returns:
    description: "<code>true</code> if delete succeeds, or <code>false</code> if blob does not exist."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.deleteIfExistsWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.deleteIfExistsWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "deleteIfExistsWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.deleteIfExistsWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Deletes the specified blob or snapshot if it exists."
  parameters:
  - description: "Specifies the behavior for deleting the snapshots on this blob. <code>Include</code>\n will delete the base blob and all snapshots. <code>Only</code> will delete only the snapshots. If a snapshot is being\n deleted, you must pass null."
    name: "deleteBlobSnapshotOptions"
    type: "<xref href=\"com.azure.storage.blob.models.DeleteSnapshotsOptionType?alt=com.azure.storage.blob.models.DeleteSnapshotsOptionType&text=DeleteSnapshotsOptionType\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Boolean> deleteIfExistsWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Deletes the specified blob or snapshot if it exists. To delete a blob with its snapshots use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.deleteIfExistsWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteIfExistsWithResponse(DeleteSnapshotsOptionType, BlobRequestConditions, Duration, Context)\"></xref> and set `DeleteSnapshotsOptionType` to INCLUDE.\n\n**Code Samples**\n\n```java\nResponse<Boolean> response = client.deleteIfExistsWithResponse(DeleteSnapshotsOptionType.INCLUDE, null, timeout,\n     new Context(key1, value1));\n if (response.getStatusCode() == 404) {\n     System.out.println(\"Does not exist.\");\n } else {\n     System.out.printf(\"Delete completed with status %d%n\", response.getStatusCode());\n }\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/delete-blob"
  returns:
    description: "A response containing status code and HTTP headers. If <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>'s status code is 202, the base\n blob was successfully deleted. If status code is 404, the base blob does not exist."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicy()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicy()"
  name: "deleteImmutabilityPolicy()"
  nameWithType: "BlobClientBase.deleteImmutabilityPolicy()"
  summary: "Delete the immutability policy on a blob, blob snapshot or blob version."
  syntax: "public void deleteImmutabilityPolicy()"
  desc: "Delete the immutability policy on a blob, blob snapshot or blob version.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nclient.deleteImmutabilityPolicy();\n System.out.println(\"Completed immutability policy deletion.\");\n```"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicyWithResponse(java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.deleteImmutabilityPolicyWithResponse(Duration timeout, Context context)"
  name: "deleteImmutabilityPolicyWithResponse(Duration timeout, Context context)"
  nameWithType: "BlobClientBase.deleteImmutabilityPolicyWithResponse(Duration timeout, Context context)"
  summary: "Delete the immutability policy on a blob, blob snapshot or blob version."
  parameters:
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteImmutabilityPolicyWithResponse(Duration timeout, Context context)"
  desc: "Delete the immutability policy on a blob, blob snapshot or blob version.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nSystem.out.println(\"Delete immutability policy completed with status: \"\n     + client.deleteImmutabilityPolicyWithResponse(timeout, new Context(key1, value1)).getStatusCode());\n```"
  returns:
    description: "A response containing the immutability policy."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Deletes the specified blob or snapshot."
  parameters:
  - description: "Specifies the behavior for deleting the snapshots on this blob. <code>Include</code>\n will delete the base blob and all snapshots. <code>Only</code> will delete only the snapshots. If a snapshot is being\n deleted, you must pass null."
    name: "deleteBlobSnapshotOptions"
    type: "<xref href=\"com.azure.storage.blob.models.DeleteSnapshotsOptionType?alt=com.azure.storage.blob.models.DeleteSnapshotsOptionType&text=DeleteSnapshotsOptionType\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteWithResponse(DeleteSnapshotsOptionType deleteBlobSnapshotOptions, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Deletes the specified blob or snapshot. To delete a blob with its snapshots use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#deleteWithResponse(DeleteSnapshotsOptionType, BlobRequestConditions, Duration, Context)\"></xref> and set `DeleteSnapshotsOptionType` to INCLUDE.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Delete completed with status %d%n\",\n     client.deleteWithResponse(DeleteSnapshotsOptionType.INCLUDE, null, timeout,\n         new Context(key1, value1)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/delete-blob"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.download(OutputStream stream)"
  name: "download(OutputStream stream)"
  nameWithType: "BlobClientBase.download(OutputStream stream)"
  summary: "Downloads the entire blob into an output stream."
  deprecatedTag: "use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.downloadStream(java.io.OutputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStream(OutputStream)\"></xref> instead."
  parameters:
  - description: "A non-null <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> instance where the downloaded data will be written."
    name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic void download(OutputStream stream)"
  desc: "Downloads the entire blob into an output stream. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref>.\n\n**Code Samples**\n\n```java\nclient.download(new ByteArrayOutputStream());\n System.out.println(\"Download completed.\");\n```\n\nFor more information, see the [Azure Docs][]\n\nThis method will be deprecated in the future. Use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.downloadStream(java.io.OutputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStream(OutputStream)\"></xref> instead.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  hasDeprecatedTag: true
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadContent()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadContent()"
  name: "downloadContent()"
  nameWithType: "BlobClientBase.downloadContent()"
  summary: "Downloads the entire blob."
  syntax: "public BinaryData downloadContent()"
  desc: "Downloads the entire blob. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref>.\n\n**Code Samples**\n\n```java\nBinaryData data = client.downloadContent();\n System.out.printf(\"Downloaded %s\", data.toString());\n```\n\nFor more information, see the [Azure Docs][]\n\nThis method supports downloads up to 2GB of data. Use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.downloadStream(java.io.OutputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStream(OutputStream)\"></xref> to download larger blobs.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "The content of the blob."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadContentWithResponse(com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Downloads a range of bytes from a blob into an output stream."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadRetryOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.models.DownloadRetryOptions?alt=com.azure.storage.blob.models.DownloadRetryOptions&text=DownloadRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobDownloadContentResponse downloadContentWithResponse(DownloadRetryOptions options, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Downloads a range of bytes from a blob into an output stream. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref>.\n\n**Code Samples**\n\n```java\nDownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n\n BlobDownloadContentResponse contentResponse = client.downloadContentWithResponse(options, null,\n     timeout, new Context(key2, value2));\n BinaryData content = contentResponse.getValue();\n System.out.printf(\"Download completed with status %d and content%s%n\",\n     contentResponse.getStatusCode(), content.toString());\n```\n\nFor more information, see the [Azure Docs][]\n\nThis method supports downloads up to 2GB of data. Use <xref uid=\"#downloadStreamWithResponse(OutputStream, BlobRange,\n DownloadRetryOptions, BlobRequestConditions, boolean, Duration, Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStreamWithResponse(OutputStream, BlobRange,\n DownloadRetryOptions, BlobRequestConditions, boolean, Duration, Context)\"></xref> to download larger blobs.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.storage.blob.models.BlobDownloadContentResponse?alt=com.azure.storage.blob.models.BlobDownloadContentResponse&text=BlobDownloadContentResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadStream(java.io.OutputStream)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadStream(OutputStream stream)"
  name: "downloadStream(OutputStream stream)"
  nameWithType: "BlobClientBase.downloadStream(OutputStream stream)"
  summary: "Downloads the entire blob into an output stream."
  parameters:
  - description: "A non-null <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> instance where the downloaded data will be written."
    name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void downloadStream(OutputStream stream)"
  desc: "Downloads the entire blob into an output stream. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref>.\n\n**Code Samples**\n\n```java\nclient.downloadStream(new ByteArrayOutputStream());\n System.out.println(\"Download completed.\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadStreamWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadStreamWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  name: "downloadStreamWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.downloadStreamWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  summary: "Downloads a range of bytes from a blob into an output stream."
  parameters:
  - description: "A non-null <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> instance where the downloaded data will be written."
    name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRange\"></xref>"
    name: "range"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadRetryOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.models.DownloadRetryOptions?alt=com.azure.storage.blob.models.DownloadRetryOptions&text=DownloadRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the contentMD5 for the specified blob range should be returned."
    name: "getRangeContentMd5"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobDownloadResponse downloadStreamWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  desc: "Downloads a range of bytes from a blob into an output stream. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref>.\n\n**Code Samples**\n\n```java\nBlobRange range = new BlobRange(1024, 2048L);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n\n System.out.printf(\"Download completed with status %d%n\",\n     client.downloadStreamWithResponse(new ByteArrayOutputStream(), range, options, null, false,\n         timeout, new Context(key2, value2)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.storage.blob.models.BlobDownloadResponse?alt=com.azure.storage.blob.models.BlobDownloadResponse&text=BlobDownloadResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(String filePath)"
  name: "downloadToFile(String filePath)"
  nameWithType: "BlobClientBase.downloadToFile(String filePath)"
  summary: "Downloads the entire blob into a file specified by the path."
  parameters:
  - description: "A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> representing the filePath where the downloaded data will be written."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobProperties downloadToFile(String filePath)"
  desc: "Downloads the entire blob into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileAlreadyExistsException\"></xref> will be thrown.\n\n**Code Samples**\n\n```java\nclient.downloadToFile(file);\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "The blob properties and metadata."
    type: "<xref href=\"com.azure.storage.blob.models.BlobProperties?alt=com.azure.storage.blob.models.BlobProperties&text=BlobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String,boolean)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(String filePath, boolean overwrite)"
  name: "downloadToFile(String filePath, boolean overwrite)"
  nameWithType: "BlobClientBase.downloadToFile(String filePath, boolean overwrite)"
  summary: "Downloads the entire blob into a file specified by the path."
  parameters:
  - description: "A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> representing the filePath where the downloaded data will be written."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether to overwrite the file, should the file exist."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobProperties downloadToFile(String filePath, boolean overwrite)"
  desc: "Downloads the entire blob into a file specified by the path.\n\nIf overwrite is set to false, the file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileAlreadyExistsException\"></xref> will be thrown.\n\n**Code Samples**\n\n```java\nboolean overwrite = false; // Default value\n client.downloadToFile(file, overwrite);\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "The blob properties and metadata."
    type: "<xref href=\"com.azure.storage.blob.models.BlobProperties?alt=com.azure.storage.blob.models.BlobProperties&text=BlobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(com.azure.storage.blob.options.BlobDownloadToFileOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(BlobDownloadToFileOptions options, Duration timeout, Context context)"
  name: "downloadToFileWithResponse(BlobDownloadToFileOptions options, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.downloadToFileWithResponse(BlobDownloadToFileOptions options, Duration timeout, Context context)"
  summary: "Downloads the entire blob into a file specified by the path."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobDownloadToFileOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobDownloadToFileOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobDownloadToFileOptions?alt=com.azure.storage.blob.options.BlobDownloadToFileOptions&text=BlobDownloadToFileOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlobProperties> downloadToFileWithResponse(BlobDownloadToFileOptions options, Duration timeout, Context context)"
  desc: "Downloads the entire blob into a file specified by the path.\n\nBy default the file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileAlreadyExistsException\"></xref> will be thrown. To override this behavior, provide appropriate <xref uid=\"java.nio.file.OpenOption\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OpenOptions\"></xref>\n\n**Code Samples**\n\n```java\nclient.downloadToFileWithResponse(new BlobDownloadToFileOptions(file)\n     .setRange(new BlobRange(1024, 2018L))\n     .setDownloadRetryOptions(new DownloadRetryOptions().setMaxRetryRequests(5))\n     .setOpenOptions(new HashSet<>(Arrays.asList(StandardOpenOption.CREATE_NEW, StandardOpenOption.WRITE,\n         StandardOpenOption.READ))), timeout, new Context(key2, value2));\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "A response containing the blob properties and metadata."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobProperties?alt=com.azure.storage.blob.models.BlobProperties&text=BlobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)"
  name: "downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)"
  summary: "Downloads the entire blob into a file specified by the path."
  parameters:
  - description: "A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> representing the filePath where the downloaded data will be written."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRange\"></xref>"
    name: "range"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref> to use to download to file. Number of parallel\n        transfers parameter is ignored."
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadRetryOptions\"></xref>"
    name: "downloadRetryOptions"
    type: "<xref href=\"com.azure.storage.blob.models.DownloadRetryOptions?alt=com.azure.storage.blob.models.DownloadRetryOptions&text=DownloadRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the contentMD5 for the specified blob range should be returned."
    name: "rangeGetContentMd5"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlobProperties> downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Duration timeout, Context context)"
  desc: "Downloads the entire blob into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileAlreadyExistsException\"></xref> will be thrown.\n\n**Code Samples**\n\n```java\nBlobRange range = new BlobRange(1024, 2048L);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n\n client.downloadToFileWithResponse(file, range, new ParallelTransferOptions().setBlockSizeLong(4L * Constants.MB),\n     options, null, false, timeout, new Context(key2, value2));\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "A response containing the blob properties and metadata."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobProperties?alt=com.azure.storage.blob.models.BlobProperties&text=BlobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.util.Set<java.nio.file.OpenOption>,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)"
  name: "downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)"
  summary: "Downloads the entire blob into a file specified by the path."
  parameters:
  - description: "A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> representing the filePath where the downloaded data will be written."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRange\"></xref>"
    name: "range"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref> to use to download to file. Number of parallel\n        transfers parameter is ignored."
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadRetryOptions\"></xref>"
    name: "downloadRetryOptions"
    type: "<xref href=\"com.azure.storage.blob.models.DownloadRetryOptions?alt=com.azure.storage.blob.models.DownloadRetryOptions&text=DownloadRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the contentMD5 for the specified blob range should be returned."
    name: "rangeGetContentMd5"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"java.nio.file.OpenOption\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OpenOptions\"></xref> to use to configure how to open or create the file."
    name: "openOptions"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.file.OpenOption?alt=java.nio.file.OpenOption&text=OpenOption\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlobProperties> downloadToFileWithResponse(String filePath, BlobRange range, ParallelTransferOptions parallelTransferOptions, DownloadRetryOptions downloadRetryOptions, BlobRequestConditions requestConditions, boolean rangeGetContentMd5, Set<OpenOption> openOptions, Duration timeout, Context context)"
  desc: "Downloads the entire blob into a file specified by the path.\n\nBy default the file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileAlreadyExistsException\"></xref> will be thrown. To override this behavior, provide appropriate <xref uid=\"java.nio.file.OpenOption\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OpenOptions\"></xref>\n\n**Code Samples**\n\n```java\nBlobRange blobRange = new BlobRange(1024, 2048L);\n DownloadRetryOptions downloadRetryOptions = new DownloadRetryOptions().setMaxRetryRequests(5);\n Set<OpenOption> openOptions = new HashSet<>(Arrays.asList(StandardOpenOption.CREATE_NEW,\n     StandardOpenOption.WRITE, StandardOpenOption.READ)); // Default options\n\n client.downloadToFileWithResponse(file, blobRange, new ParallelTransferOptions().setBlockSizeLong(4L * Constants.MB),\n     downloadRetryOptions, null, false, openOptions, timeout, new Context(key2, value2));\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  returns:
    description: "A response containing the blob properties and metadata."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobProperties?alt=com.azure.storage.blob.models.BlobProperties&text=BlobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  name: "downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  summary: "Downloads a range of bytes from a blob into an output stream."
  deprecatedTag: "use <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase.downloadStreamWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStreamWithResponse(OutputStream, BlobRange, DownloadRetryOptions, BlobRequestConditions, boolean, Duration, Context)\"></xref> instead."
  parameters:
  - description: "A non-null <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> instance where the downloaded data will be written."
    name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRange\"></xref>"
    name: "range"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.DownloadRetryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadRetryOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.models.DownloadRetryOptions?alt=com.azure.storage.blob.models.DownloadRetryOptions&text=DownloadRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the contentMD5 for the specified blob range should be returned."
    name: "getRangeContentMd5"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic BlobDownloadResponse downloadWithResponse(OutputStream stream, BlobRange range, DownloadRetryOptions options, BlobRequestConditions requestConditions, boolean getRangeContentMd5, Duration timeout, Context context)"
  desc: "Downloads a range of bytes from a blob into an output stream. Uploading data must be done from the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref>.\n\n**Code Samples**\n\n```java\nBlobRange range = new BlobRange(1024, 2048L);\n DownloadRetryOptions options = new DownloadRetryOptions().setMaxRetryRequests(5);\n\n System.out.printf(\"Download completed with status %d%n\",\n     client.downloadWithResponse(new ByteArrayOutputStream(), range, options, null, false,\n         timeout, new Context(key2, value2)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\nThis method will be deprecated in the future. Use <xref uid=\"#downloadStreamWithResponse(OutputStream, BlobRange, DownloadRetryOptions,\n BlobRequestConditions, boolean, Duration, Context)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStreamWithResponse(OutputStream, BlobRange, DownloadRetryOptions,\n BlobRequestConditions, boolean, Duration, Context)\"></xref> instead.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob"
  hasDeprecatedTag: true
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.storage.blob.models.BlobDownloadResponse?alt=com.azure.storage.blob.models.BlobDownloadResponse&text=BlobDownloadResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.exists()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.exists()"
  name: "exists()"
  nameWithType: "BlobClientBase.exists()"
  summary: "Gets if the blob this client represents exists in the cloud."
  syntax: "public Boolean exists()"
  desc: "Gets if the blob this client represents exists in the cloud.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Exists? %b%n\", client.exists());\n```"
  returns:
    description: "true if the blob exists, false if it doesn't"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(Duration timeout, Context context)"
  name: "existsWithResponse(Duration timeout, Context context)"
  nameWithType: "BlobClientBase.existsWithResponse(Duration timeout, Context context)"
  summary: "Gets if the blob this client represents exists in the cloud."
  parameters:
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Boolean> existsWithResponse(Duration timeout, Context context)"
  desc: "Gets if the blob this client represents exists in the cloud.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Exists? %b%n\", client.existsWithResponse(timeout, new Context(key2, value2)).getValue());\n```"
  returns:
    description: "true if the blob exists, false if it doesn't"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)"
  name: "generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)"
  nameWithType: "BlobClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)"
  summary: "Generates a service SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>"
    name: "blobServiceSasSignatureValues"
    type: "<xref href=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues?alt=com.azure.storage.blob.sas.BlobServiceSasSignatureValues&text=BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues)"
  desc: "Generates a service SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>\n\nNote : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageSharedKeyCredential\"></xref>\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref> for more information on how to construct a service SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime expiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission permission = new BlobSasPermission().setReadPermission(true);\n\n BlobServiceSasSignatureValues values = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n\n client.generateSas(values); // Client must be authenticated via StorageSharedKeyCredential\n```"
  returns:
    description: "A <code>String</code> representing the SAS query parameters."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.generateSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, Context context)"
  name: "generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, Context context)"
  nameWithType: "BlobClientBase.generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, Context context)"
  summary: "Generates a service SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>"
    name: "blobServiceSasSignatureValues"
    type: "<xref href=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues?alt=com.azure.storage.blob.sas.BlobServiceSasSignatureValues&text=BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the code when generating a SAS."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String generateSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, Context context)"
  desc: "Generates a service SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>\n\nNote : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageSharedKeyCredential\"></xref>\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref> for more information on how to construct a service SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime expiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission permission = new BlobSasPermission().setReadPermission(true);\n\n BlobServiceSasSignatureValues values = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n\n // Client must be authenticated via StorageSharedKeyCredential\n client.generateSas(values, new Context(key1, value1));\n```"
  returns:
    description: "A <code>String</code> representing the SAS query parameters."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)"
  name: "generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)"
  nameWithType: "BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)"
  summary: "Generates a user delegation SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>"
    name: "blobServiceSasSignatureValues"
    type: "<xref href=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues?alt=com.azure.storage.blob.sas.BlobServiceSasSignatureValues&text=BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.storage.blob.models.UserDelegationKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UserDelegationKey\"></xref> object used to sign the SAS values.\n See <xref uid=\"com.azure.storage.blob.BlobServiceClient.getUserDelegationKey(java.time.OffsetDateTime,java.time.OffsetDateTime)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceClient#getUserDelegationKey(OffsetDateTime, OffsetDateTime)\"></xref> for more information on\n how to get a user delegation key."
    name: "userDelegationKey"
    type: "<xref href=\"com.azure.storage.blob.models.UserDelegationKey?alt=com.azure.storage.blob.models.UserDelegationKey&text=UserDelegationKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey)"
  desc: "Generates a user delegation SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>.\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref> for more information on how to construct a user delegation SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime myExpiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission myPermission = new BlobSasPermission().setReadPermission(true);\n\n BlobServiceSasSignatureValues myValues = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n\n client.generateUserDelegationSas(values, userDelegationKey);\n```"
  returns:
    description: "A <code>String</code> representing the SAS query parameters."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(com.azure.storage.blob.sas.BlobServiceSasSignatureValues,com.azure.storage.blob.models.UserDelegationKey,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey, String accountName, Context context)"
  name: "generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey, String accountName, Context context)"
  nameWithType: "BlobClientBase.generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey, String accountName, Context context)"
  summary: "Generates a user delegation SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>"
    name: "blobServiceSasSignatureValues"
    type: "<xref href=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues?alt=com.azure.storage.blob.sas.BlobServiceSasSignatureValues&text=BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.storage.blob.models.UserDelegationKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UserDelegationKey\"></xref> object used to sign the SAS values.\n See <xref uid=\"com.azure.storage.blob.BlobServiceClient.getUserDelegationKey(java.time.OffsetDateTime,java.time.OffsetDateTime)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceClient#getUserDelegationKey(OffsetDateTime, OffsetDateTime)\"></xref> for more information on\n how to get a user delegation key."
    name: "userDelegationKey"
    type: "<xref href=\"com.azure.storage.blob.models.UserDelegationKey?alt=com.azure.storage.blob.models.UserDelegationKey&text=UserDelegationKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "The account name."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the code when generating a SAS."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public String generateUserDelegationSas(BlobServiceSasSignatureValues blobServiceSasSignatureValues, UserDelegationKey userDelegationKey, String accountName, Context context)"
  desc: "Generates a user delegation SAS for the blob using the specified <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref>.\n\nSee <xref uid=\"com.azure.storage.blob.sas.BlobServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobServiceSasSignatureValues\"></xref> for more information on how to construct a user delegation SAS.\n\n**Code Samples**\n\n```java\nOffsetDateTime myExpiryTime = OffsetDateTime.now().plusDays(1);\n BlobSasPermission myPermission = new BlobSasPermission().setReadPermission(true);\n\n BlobServiceSasSignatureValues myValues = new BlobServiceSasSignatureValues(expiryTime, permission)\n     .setStartTime(OffsetDateTime.now());\n\n client.generateUserDelegationSas(values, userDelegationKey, accountName, new Context(key1, value1));\n```"
  returns:
    description: "A <code>String</code> representing the SAS query parameters."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()"
  name: "getAccountInfo()"
  nameWithType: "BlobClientBase.getAccountInfo()"
  summary: "Returns the sku name and account kind for the account."
  syntax: "public StorageAccountInfo getAccountInfo()"
  desc: "Returns the sku name and account kind for the account.\n\n**Code Samples**\n\n```java\nStorageAccountInfo accountInfo = client.getAccountInfo();\n System.out.printf(\"Account Kind: %s, SKU: %s%n\", accountInfo.getAccountKind(), accountInfo.getSkuName());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-account-information"
  returns:
    description: "The sku name and account kind."
    type: "<xref href=\"com.azure.storage.blob.models.StorageAccountInfo?alt=com.azure.storage.blob.models.StorageAccountInfo&text=StorageAccountInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(Duration timeout, Context context)"
  name: "getAccountInfoWithResponse(Duration timeout, Context context)"
  nameWithType: "BlobClientBase.getAccountInfoWithResponse(Duration timeout, Context context)"
  summary: "Returns the sku name and account kind for the account."
  parameters:
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<StorageAccountInfo> getAccountInfoWithResponse(Duration timeout, Context context)"
  desc: "Returns the sku name and account kind for the account.\n\n**Code Samples**\n\n```java\nStorageAccountInfo accountInfo = client.getAccountInfoWithResponse(timeout, new Context(key1, value1)).getValue();\n System.out.printf(\"Account Kind: %s, SKU: %s%n\", accountInfo.getAccountKind(), accountInfo.getSkuName());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-account-information"
  returns:
    description: "The sku name and account kind."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.StorageAccountInfo?alt=com.azure.storage.blob.models.StorageAccountInfo&text=StorageAccountInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getAccountName()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getAccountName()"
  name: "getAccountName()"
  nameWithType: "BlobClientBase.getAccountName()"
  summary: "Get associated account name."
  syntax: "public String getAccountName()"
  desc: "Get associated account name."
  returns:
    description: "account name associated with this storage resource."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getAccountUrl()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getAccountUrl()"
  name: "getAccountUrl()"
  nameWithType: "BlobClientBase.getAccountUrl()"
  summary: "Get the url of the storage account."
  syntax: "public String getAccountUrl()"
  desc: "Get the url of the storage account."
  returns:
    description: "the URL of the storage account"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getBlobName()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getBlobName()"
  name: "getBlobName()"
  nameWithType: "BlobClientBase.getBlobName()"
  summary: "Decodes and gets the blob name."
  modifiers:
  - "final"
  syntax: "public final String getBlobName()"
  desc: "Decodes and gets the blob name.\n\n**Code Samples**\n\n```java\nString blobName = client.getBlobName();\n System.out.println(\"The name of the blob is \" + blobName);\n```"
  returns:
    description: "The decoded name of the blob."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()"
  name: "getBlobUrl()"
  nameWithType: "BlobClientBase.getBlobUrl()"
  summary: "Gets the URL of the blob represented by this client."
  syntax: "public String getBlobUrl()"
  desc: "Gets the URL of the blob represented by this client."
  returns:
    description: "the URL."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getContainerClient()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getContainerClient()"
  name: "getContainerClient()"
  nameWithType: "BlobClientBase.getContainerClient()"
  summary: "Gets a client pointing to the parent container."
  syntax: "public BlobContainerClient getContainerClient()"
  desc: "Gets a client pointing to the parent container.\n\n**Code Samples**\n\n```java\nBlobContainerClient containerClient = client.getContainerClient();\n System.out.println(\"The name of the container is \" + containerClient.getBlobContainerName());\n```"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.BlobContainerClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobContainerClient\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.BlobContainerClient?alt=com.azure.storage.blob.BlobContainerClient&text=BlobContainerClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getContainerName()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getContainerName()"
  name: "getContainerName()"
  nameWithType: "BlobClientBase.getContainerName()"
  summary: "Get the container name."
  modifiers:
  - "final"
  syntax: "public final String getContainerName()"
  desc: "Get the container name.\n\n**Code Samples**\n\n```java\nString containerName = client.getContainerName();\n System.out.println(\"The name of the container is \" + containerName);\n```"
  returns:
    description: "The name of the container."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()"
  name: "getCustomerProvidedKey()"
  nameWithType: "BlobClientBase.getCustomerProvidedKey()"
  summary: "Gets the <xref uid=\"com.azure.storage.blob.models.CpkInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CpkInfo\"></xref> used to encrypt this blob's content on the server."
  syntax: "public CpkInfo getCustomerProvidedKey()"
  desc: "Gets the <xref uid=\"com.azure.storage.blob.models.CpkInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CpkInfo\"></xref> used to encrypt this blob's content on the server."
  returns:
    description: "the customer provided key used for encryption."
    type: "<xref href=\"com.azure.storage.blob.models.CpkInfo?alt=com.azure.storage.blob.models.CpkInfo&text=CpkInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKeyClient(com.azure.storage.blob.models.CustomerProvidedKey)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  name: "getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  nameWithType: "BlobClientBase.getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> with the specified `customerProvidedKey`."
  parameters:
  - description: "the <xref uid=\"com.azure.storage.blob.models.CustomerProvidedKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CustomerProvidedKey\"></xref> for the blob,\n pass <code>null</code> to use no customer provided key."
    name: "customerProvidedKey"
    type: "<xref href=\"com.azure.storage.blob.models.CustomerProvidedKey?alt=com.azure.storage.blob.models.CustomerProvidedKey&text=CustomerProvidedKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobClientBase getCustomerProvidedKeyClient(CustomerProvidedKey customerProvidedKey)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> with the specified `customerProvidedKey`."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> with the specified <code>customerProvidedKey</code>."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getEncryptionScopeClient(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getEncryptionScopeClient(String encryptionScope)"
  name: "getEncryptionScopeClient(String encryptionScope)"
  nameWithType: "BlobClientBase.getEncryptionScopeClient(String encryptionScope)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> with the specified `encryptionScope`."
  parameters:
  - description: "the encryption scope for the blob, pass <code>null</code> to use no encryption scope."
    name: "encryptionScope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobClientBase getEncryptionScopeClient(String encryptionScope)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> with the specified `encryptionScope`."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> with the specified <code>encryptionScope</code>."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()"
  name: "getHttpPipeline()"
  nameWithType: "BlobClientBase.getHttpPipeline()"
  summary: "Gets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> powering this client."
  syntax: "public HttpPipeline getHttpPipeline()"
  desc: "Gets the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> powering this client."
  returns:
    description: "The pipeline."
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getProperties()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getProperties()"
  name: "getProperties()"
  nameWithType: "BlobClientBase.getProperties()"
  summary: "Returns the blob's metadata and properties."
  syntax: "public BlobProperties getProperties()"
  desc: "Returns the blob's metadata and properties.\n\n**Code Samples**\n\n```java\nBlobProperties properties = client.getProperties();\n System.out.printf(\"Type: %s, Size: %d%n\", properties.getBlobType(), properties.getBlobSize());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob-properties"
  returns:
    description: "The blob properties and metadata."
    type: "<xref href=\"com.azure.storage.blob.models.BlobProperties?alt=com.azure.storage.blob.models.BlobProperties&text=BlobProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Returns the blob's metadata and properties."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlobProperties> getPropertiesWithResponse(BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Returns the blob's metadata and properties.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n\n BlobProperties properties = client.getPropertiesWithResponse(requestConditions, timeout,\n     new Context(key2, value2)).getValue();\n System.out.printf(\"Type: %s, Size: %d%n\", properties.getBlobType(), properties.getBlobSize());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob-properties"
  returns:
    description: "The blob properties and metadata."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobProperties?alt=com.azure.storage.blob.models.BlobProperties&text=BlobProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()"
  name: "getServiceVersion()"
  nameWithType: "BlobClientBase.getServiceVersion()"
  summary: "Gets the service version the client is using."
  syntax: "public BlobServiceVersion getServiceVersion()"
  desc: "Gets the service version the client is using."
  returns:
    description: "the service version the client is using."
    type: "<xref href=\"com.azure.storage.blob.BlobServiceVersion?alt=com.azure.storage.blob.BlobServiceVersion&text=BlobServiceVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(String snapshot)"
  name: "getSnapshotClient(String snapshot)"
  nameWithType: "BlobClientBase.getSnapshotClient(String snapshot)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> linked to the `snapshot` of this blob resource."
  parameters:
  - description: "the identifier for a specific snapshot of this blob"
    name: "snapshot"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobClientBase getSnapshotClient(String snapshot)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> linked to the `snapshot` of this blob resource."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> used to interact with the specific snapshot."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()"
  name: "getSnapshotId()"
  nameWithType: "BlobClientBase.getSnapshotId()"
  summary: "Gets the snapshot<wbr>Id for a blob resource"
  syntax: "public String getSnapshotId()"
  desc: "Gets the snapshotId for a blob resource"
  returns:
    description: "A string that represents the snapshotId of the snapshot blob"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getTags()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getTags()"
  name: "getTags()"
  nameWithType: "BlobClientBase.getTags()"
  summary: "Returns the blob's tags."
  syntax: "public Map<String,String> getTags()"
  desc: "Returns the blob's tags.\n\n**Code Samples**\n\n```java\nMap<String, String> tags = client.getTags();\n System.out.printf(\"Number of tags: %d%n\", tags.size());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob-tags"
  returns:
    description: "The blob's tags."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse(com.azure.storage.blob.options.BlobGetTagsOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)"
  name: "getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)"
  summary: "Returns the blob's tags."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobGetTagsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobGetTagsOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobGetTagsOptions?alt=com.azure.storage.blob.options.BlobGetTagsOptions&text=BlobGetTagsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Map<String,String>> getTagsWithResponse(BlobGetTagsOptions options, Duration timeout, Context context)"
  desc: "Returns the blob's tags.\n\n**Code Samples**\n\n```java\nMap<String, String> tags = client.getTagsWithResponse(new BlobGetTagsOptions(), timeout,\n     new Context(key1, value1)).getValue();\n System.out.printf(\"Number of tags: %d%n\", tags.size());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-blob-tags"
  returns:
    description: "The blob's tags."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getVersionClient(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getVersionClient(String versionId)"
  name: "getVersionClient(String versionId)"
  nameWithType: "BlobClientBase.getVersionClient(String versionId)"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> linked to the `version` of this blob resource."
  parameters:
  - description: "the identifier for a specific version of this blob,\n pass <code>null</code> to interact with the latest blob version."
    name: "versionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobClientBase getVersionClient(String versionId)"
  desc: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> linked to the `version` of this blob resource."
  returns:
    description: "a <xref uid=\"com.azure.storage.blob.specialized.BlobClientBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobClientBase\"></xref> used to interact with the specific version."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobClientBase?alt=com.azure.storage.blob.specialized.BlobClientBase&text=BlobClientBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getVersionId()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getVersionId()"
  name: "getVersionId()"
  nameWithType: "BlobClientBase.getVersionId()"
  summary: "Gets the version<wbr>Id for a blob resource"
  syntax: "public String getVersionId()"
  desc: "Gets the versionId for a blob resource"
  returns:
    description: "A string that represents the versionId of the snapshot blob"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()"
  name: "isSnapshot()"
  nameWithType: "BlobClientBase.isSnapshot()"
  summary: "Determines if a blob is a snapshot"
  syntax: "public boolean isSnapshot()"
  desc: "Determines if a blob is a snapshot"
  returns:
    description: "A boolean that indicates if a blob is a snapshot"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream()"
  name: "openInputStream()"
  nameWithType: "BlobClientBase.openInputStream()"
  summary: "Opens a blob input stream to download the blob."
  modifiers:
  - "final"
  syntax: "public final BlobInputStream openInputStream()"
  desc: "Opens a blob input stream to download the blob."
  returns:
    description: "An <code>InputStream</code> object that represents the stream to use for reading from the blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobInputStream?alt=com.azure.storage.blob.specialized.BlobInputStream&text=BlobInputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  name: "openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  nameWithType: "BlobClientBase.openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  summary: "Opens a blob input stream to download the specified range of the blob."
  modifiers:
  - "final"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRange\"></xref>"
    name: "range"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRange?alt=com.azure.storage.blob.models.BlobRange&text=BlobRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "An <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> object that represents the access conditions for the\n blob."
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final BlobInputStream openInputStream(BlobRange range, BlobRequestConditions requestConditions)"
  desc: "Opens a blob input stream to download the specified range of the blob."
  returns:
    description: "An <code>InputStream</code> object that represents the stream to use for reading from the blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobInputStream?alt=com.azure.storage.blob.specialized.BlobInputStream&text=BlobInputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.options.BlobInputStreamOptions)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(BlobInputStreamOptions options)"
  name: "openInputStream(BlobInputStreamOptions options)"
  nameWithType: "BlobClientBase.openInputStream(BlobInputStreamOptions options)"
  summary: "Opens a blob input stream to download the specified range of the blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobInputStreamOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobInputStreamOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobInputStreamOptions?alt=com.azure.storage.blob.options.BlobInputStreamOptions&text=BlobInputStreamOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobInputStream openInputStream(BlobInputStreamOptions options)"
  desc: "Opens a blob input stream to download the specified range of the blob."
  returns:
    description: "An <code>InputStream</code> object that represents the stream to use for reading from the blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobInputStream?alt=com.azure.storage.blob.specialized.BlobInputStream&text=BlobInputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream(java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStream(String expression)"
  name: "openQueryInputStream(String expression)"
  nameWithType: "BlobClientBase.openQueryInputStream(String expression)"
  summary: "Opens a blob input stream to query the blob."
  parameters:
  - description: "The query expression."
    name: "expression"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public InputStream openQueryInputStream(String expression)"
  desc: "Opens a blob input stream to query the blob.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nString expression = \"SELECT * from BlobStorage\";\n InputStream inputStream = client.openQueryInputStream(expression);\n // Now you can read from the input stream like you would normally.\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/query-blob-contents"
  returns:
    description: "An <code>InputStream</code> object that represents the stream to use for reading the query response."
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse(com.azure.storage.blob.options.BlobQueryOptions)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)"
  name: "openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)"
  nameWithType: "BlobClientBase.openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)"
  summary: "Opens a blob input stream to query the blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"The query options\"></xref>."
    name: "queryOptions"
    type: "<xref href=\"com.azure.storage.blob.options.BlobQueryOptions?alt=com.azure.storage.blob.options.BlobQueryOptions&text=BlobQueryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<InputStream> openQueryInputStreamWithResponse(BlobQueryOptions queryOptions)"
  desc: "Opens a blob input stream to query the blob.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nString expression = \"SELECT * from BlobStorage\";\n BlobQuerySerialization input = new BlobQueryDelimitedSerialization()\n     .setColumnSeparator(',')\n     .setEscapeChar('\\n')\n     .setRecordSeparator('\\n')\n     .setHeadersPresent(true)\n     .setFieldQuote('\"');\n BlobQuerySerialization output = new BlobQueryJsonSerialization()\n     .setRecordSeparator('\\n');\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setLeaseId(\"leaseId\");\n Consumer<BlobQueryError> errorConsumer = System.out::println;\n Consumer<BlobQueryProgress> progressConsumer = progress -> System.out.println(\"total blob bytes read: \"\n     + progress.getBytesScanned());\n BlobQueryOptions queryOptions = new BlobQueryOptions(expression)\n     .setInputSerialization(input)\n     .setOutputSerialization(output)\n     .setRequestConditions(requestConditions)\n     .setErrorConsumer(errorConsumer)\n     .setProgressConsumer(progressConsumer);\n\n InputStream inputStream = client.openQueryInputStreamWithResponse(queryOptions).getValue();\n // Now you can read from the input stream like you would normally.\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/query-blob-contents"
  returns:
    description: "A response containing status code and HTTP headers including an <code>InputStream</code> object\n that represents the stream to use for reading the query response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.query(java.io.OutputStream,java.lang.String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.query(OutputStream stream, String expression)"
  name: "query(OutputStream stream, String expression)"
  nameWithType: "BlobClientBase.query(OutputStream stream, String expression)"
  summary: "Queries an entire blob into an output stream."
  parameters:
  - description: "A non-null <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> instance where the downloaded data will be written."
    name: "stream"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query expression."
    name: "expression"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void query(OutputStream stream, String expression)"
  desc: "Queries an entire blob into an output stream.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nByteArrayOutputStream queryData = new ByteArrayOutputStream();\n String expression = \"SELECT * from BlobStorage\";\n client.query(queryData, expression);\n System.out.println(\"Query completed.\");\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/query-blob-contents"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(com.azure.storage.blob.options.BlobQueryOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  name: "queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  summary: "Queries an entire blob into an output stream."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobQueryOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"The query options\"></xref>."
    name: "queryOptions"
    type: "<xref href=\"com.azure.storage.blob.options.BlobQueryOptions?alt=com.azure.storage.blob.options.BlobQueryOptions&text=BlobQueryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobQueryResponse queryWithResponse(BlobQueryOptions queryOptions, Duration timeout, Context context)"
  desc: "Queries an entire blob into an output stream.\n\nFor more information, see the [Azure Docs][]\n\n**Code Samples**\n\n```java\nByteArrayOutputStream queryData = new ByteArrayOutputStream();\n String expression = \"SELECT * from BlobStorage\";\n BlobQueryJsonSerialization input = new BlobQueryJsonSerialization()\n     .setRecordSeparator('\\n');\n BlobQueryDelimitedSerialization output = new BlobQueryDelimitedSerialization()\n     .setEscapeChar('\\0')\n     .setColumnSeparator(',')\n     .setRecordSeparator('\\n')\n     .setFieldQuote('\\'')\n     .setHeadersPresent(true);\n BlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n Consumer<BlobQueryError> errorConsumer = System.out::println;\n Consumer<BlobQueryProgress> progressConsumer = progress -> System.out.println(\"total blob bytes read: \"\n     + progress.getBytesScanned());\n BlobQueryOptions queryOptions = new BlobQueryOptions(expression, queryData)\n     .setInputSerialization(input)\n     .setOutputSerialization(output)\n     .setRequestConditions(requestConditions)\n     .setErrorConsumer(errorConsumer)\n     .setProgressConsumer(progressConsumer);\n System.out.printf(\"Query completed with status %d%n\",\n     client.queryWithResponse(queryOptions, timeout, new Context(key1, value1))\n         .getStatusCode());\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/query-blob-contents"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.storage.blob.models.BlobQueryResponse?alt=com.azure.storage.blob.models.BlobQueryResponse&text=BlobQueryResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(AccessTier tier)"
  name: "setAccessTier(AccessTier tier)"
  nameWithType: "BlobClientBase.setAccessTier(AccessTier tier)"
  summary: "Sets the tier on a blob."
  parameters:
  - description: "The new tier for the blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setAccessTier(AccessTier tier)"
  desc: "Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.\n\n**Code Samples**\n\n```java\nclient.setAccessTier(AccessTier.HOT);\n System.out.println(\"Set tier completed.\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-tier"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)"
  name: "setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)"
  summary: "Sets the tier on a blob."
  parameters:
  - description: "The new tier for the blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional priority to set for re-hydrating blobs."
    name: "priority"
    type: "<xref href=\"com.azure.storage.blob.models.RehydratePriority?alt=com.azure.storage.blob.models.RehydratePriority&text=RehydratePriority\" data-throw-if-not-resolved=\"False\" />"
  - description: "The lease ID the active lease on the blob must match."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setAccessTierWithResponse(AccessTier tier, RehydratePriority priority, String leaseId, Duration timeout, Context context)"
  desc: "Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Set tier completed with status code %d%n\",\n     client.setAccessTierWithResponse(AccessTier.HOT, RehydratePriority.STANDARD, leaseId, timeout,\n         new Context(key2, value2)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-tier"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.options.BlobSetAccessTierOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)"
  name: "setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)"
  summary: "Sets the tier on a blob."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobSetAccessTierOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobSetAccessTierOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobSetAccessTierOptions?alt=com.azure.storage.blob.options.BlobSetAccessTierOptions&text=BlobSetAccessTierOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setAccessTierWithResponse(BlobSetAccessTierOptions options, Duration timeout, Context context)"
  desc: "Sets the tier on a blob. The operation is allowed on a page blob in a premium storage account or a block blob in a blob storage or GPV2 account. A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block blob's tier determines the Hot/Cool/Archive storage type. This does not update the blob's etag.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Set tier completed with status code %d%n\",\n     client.setAccessTierWithResponse(new BlobSetAccessTierOptions(AccessTier.HOT)\n         .setPriority(RehydratePriority.STANDARD)\n         .setLeaseId(leaseId)\n         .setTagsConditions(tags),\n         timeout, new Context(key2, value2)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-tier"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(BlobHttpHeaders headers)"
  name: "setHttpHeaders(BlobHttpHeaders headers)"
  nameWithType: "BlobClientBase.setHttpHeaders(BlobHttpHeaders headers)"
  summary: "Changes a blob's HTTP header properties."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setHttpHeaders(BlobHttpHeaders headers)"
  desc: "Changes a blob's HTTP header properties. if only one HTTP header is updated, the others will all be erased. In order to preserve existing values, they must be passed alongside the header being changed.\n\n**Code Samples**\n\n```java\nclient.setHttpHeaders(new BlobHttpHeaders()\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\"));\n System.out.println(\"Set HTTP headers completed\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-properties"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Changes a blob's HTTP header properties."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setHttpHeadersWithResponse(BlobHttpHeaders headers, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Changes a blob's HTTP header properties. if only one HTTP header is updated, the others will all be erased. In order to preserve existing values, they must be passed alongside the header being changed.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n\n System.out.printf(\"Set HTTP headers completed with status %d%n\",\n     client.setHttpHeadersWithResponse(new BlobHttpHeaders()\n         .setContentLanguage(\"en-US\")\n         .setContentType(\"binary\"), requestConditions, timeout, new Context(key1, value1))\n         .getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-properties"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicy(com.azure.storage.blob.models.BlobImmutabilityPolicy)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  name: "setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  nameWithType: "BlobClientBase.setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  summary: "Sets the immutability policy on a blob, blob snapshot or blob version."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"The immutability policy\"></xref>."
    name: "immutabilityPolicy"
    type: "<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobImmutabilityPolicy setImmutabilityPolicy(BlobImmutabilityPolicy immutabilityPolicy)"
  desc: "Sets the immutability policy on a blob, blob snapshot or blob version.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nBlobImmutabilityPolicy policy = new BlobImmutabilityPolicy()\n     .setPolicyMode(BlobImmutabilityPolicyMode.LOCKED)\n     .setExpiryTime(OffsetDateTime.now().plusDays(1));\n BlobImmutabilityPolicy setPolicy = client.setImmutabilityPolicy(policy);\n System.out.println(\"Successfully completed setting the immutability policy\");\n```"
  returns:
    description: "The immutability policy."
    type: "<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicyWithResponse(com.azure.storage.blob.models.BlobImmutabilityPolicy,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setImmutabilityPolicyWithResponse(BlobImmutabilityPolicy immutabilityPolicy, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "setImmutabilityPolicyWithResponse(BlobImmutabilityPolicy immutabilityPolicy, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.setImmutabilityPolicyWithResponse(BlobImmutabilityPolicy immutabilityPolicy, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Sets the immutability policy on a blob, blob snapshot or blob version."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"The immutability policy\"></xref>."
    name: "immutabilityPolicy"
    type: "<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlobImmutabilityPolicy> setImmutabilityPolicyWithResponse(BlobImmutabilityPolicy immutabilityPolicy, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Sets the immutability policy on a blob, blob snapshot or blob version.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nBlobImmutabilityPolicy immutabilityPolicy = new BlobImmutabilityPolicy()\n     .setPolicyMode(BlobImmutabilityPolicyMode.LOCKED)\n     .setExpiryTime(OffsetDateTime.now().plusDays(1));\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(1));\n Response<BlobImmutabilityPolicy> response = client.setImmutabilityPolicyWithResponse(immutabilityPolicy,\n     requestConditions, timeout, new Context(key1, value1));\n System.out.println(\"Successfully completed setting the immutability policy\");\n```"
  returns:
    description: "A response containing the immutability policy."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobImmutabilityPolicy?alt=com.azure.storage.blob.models.BlobImmutabilityPolicy&text=BlobImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setLegalHold(boolean)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setLegalHold(boolean legalHold)"
  name: "setLegalHold(boolean legalHold)"
  nameWithType: "BlobClientBase.setLegalHold(boolean legalHold)"
  summary: "Sets a legal hold on the blob."
  parameters:
  - description: "Whether you want a legal hold on the blob."
    name: "legalHold"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobLegalHoldResult setLegalHold(boolean legalHold)"
  desc: "Sets a legal hold on the blob.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nSystem.out.println(\"Legal hold status: \" + client.setLegalHold(true));\n```"
  returns:
    description: "The legal hold result."
    type: "<xref href=\"com.azure.storage.blob.models.BlobLegalHoldResult?alt=com.azure.storage.blob.models.BlobLegalHoldResult&text=BlobLegalHoldResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setLegalHoldWithResponse(boolean,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setLegalHoldWithResponse(boolean legalHold, Duration timeout, Context context)"
  name: "setLegalHoldWithResponse(boolean legalHold, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.setLegalHoldWithResponse(boolean legalHold, Duration timeout, Context context)"
  summary: "Sets a legal hold on the blob."
  parameters:
  - description: "Whether you want a legal hold on the blob."
    name: "legalHold"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlobLegalHoldResult> setLegalHoldWithResponse(boolean legalHold, Duration timeout, Context context)"
  desc: "Sets a legal hold on the blob.\n\nNOTE: Blob Versioning must be enabled on your storage account and the blob must be in a container with immutable storage with versioning enabled to call this API.\n\n**Code Samples**\n\n```java\nSystem.out.println(\"Legal hold status: \" + client.setLegalHoldWithResponse(true, timeout,\n     new Context(key1, value1)));\n```"
  returns:
    description: "A response containing the legal hold result."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlobLegalHoldResult?alt=com.azure.storage.blob.models.BlobLegalHoldResult&text=BlobLegalHoldResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setMetadata(Map<String,String> metadata)"
  name: "setMetadata(Map<String,String> metadata)"
  nameWithType: "BlobClientBase.setMetadata(Map<String,String> metadata)"
  summary: "Changes a blob's metadata."
  parameters:
  - description: "Metadata to associate with the blob. If there is leading or trailing whitespace in any\n metadata key or value, it must be removed or encoded."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setMetadata(Map<String,String> metadata)"
  desc: "Changes a blob's metadata. The specified metadata in this method will replace existing metadata. If old values must be preserved, they must be downloaded and included in the call to this method.\n\n**Code Samples**\n\n```java\nclient.setMetadata(Collections.singletonMap(\"metadata\", \"value\"));\n System.out.println(\"Set metadata completed\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  name: "setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  summary: "Changes a blob's metadata."
  parameters:
  - description: "Metadata to associate with the blob. If there is leading or trailing whitespace in any\n metadata key or value, it must be removed or encoded."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setMetadataWithResponse(Map<String,String> metadata, BlobRequestConditions requestConditions, Duration timeout, Context context)"
  desc: "Changes a blob's metadata. The specified metadata in this method will replace existing metadata. If old values must be preserved, they must be downloaded and included in the call to this method.\n\n**Code Samples**\n\n```java\nBlobRequestConditions requestConditions = new BlobRequestConditions().setLeaseId(leaseId);\n\n System.out.printf(\"Set metadata completed with status %d%n\",\n     client.setMetadataWithResponse(Collections.singletonMap(\"metadata\", \"value\"), requestConditions, timeout,\n         new Context(key1, value1)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-metadata"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "BlobClientBase.setTags(Map<String,String> tags)"
  summary: "Sets user defined tags."
  parameters:
  - description: "Tags to associate with the blob."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setTags(Map<String,String> tags)"
  desc: "Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be preserved, they must be downloaded and included in the call to this method.\n\n**Code Samples**\n\n```java\nclient.setTags(Collections.singletonMap(\"tag\", \"value\"));\n System.out.println(\"Set tag completed\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-tags"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse(com.azure.storage.blob.options.BlobSetTagsOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)"
  name: "setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)"
  nameWithType: "BlobClientBase.setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)"
  summary: "Sets user defined tags."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobSetTagsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobSetTagsOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobSetTagsOptions?alt=com.azure.storage.blob.options.BlobSetTagsOptions&text=BlobSetTagsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> setTagsWithResponse(BlobSetTagsOptions options, Duration timeout, Context context)"
  desc: "Sets user defined tags. The specified tags in this method will replace existing tags. If old values must be preserved, they must be downloaded and included in the call to this method.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Set metadata completed with status %d%n\",\n     client.setTagsWithResponse(new BlobSetTagsOptions(Collections.singletonMap(\"tag\", \"value\")), timeout,\n         new Context(key1, value1))\n         .getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/set-blob-tags"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.undelete()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.undelete()"
  name: "undelete()"
  nameWithType: "BlobClientBase.undelete()"
  summary: "Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots."
  syntax: "public void undelete()"
  desc: "Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots.\n\n**Code Samples**\n\n```java\nclient.undelete();\n System.out.println(\"Undelete completed\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/undelete-blob"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(Duration timeout, Context context)"
  name: "undeleteWithResponse(Duration timeout, Context context)"
  nameWithType: "BlobClientBase.undeleteWithResponse(Duration timeout, Context context)"
  summary: "Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots."
  parameters:
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> undeleteWithResponse(Duration timeout, Context context)"
  desc: "Undelete restores the content and metadata of a soft-deleted blob and/or any associated soft-deleted snapshots.\n\n**Code Samples**\n\n```java\nSystem.out.printf(\"Undelete completed with status %d%n\", client.undeleteWithResponse(timeout,\n     new Context(key1, value1)).getStatusCode());\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/undelete-blob"
  returns:
    description: "A response containing status code and HTTP headers."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This class provides a client that contains all operations that apply to any blob type.\n\nThis client offers the ability to download blobs. Note that uploading data is specific to each type of blob. Please refer to the <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobClient\"></xref>, <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobClient\"></xref>, or <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AppendBlobClient\"></xref> for upload options."
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.18.0-beta.1
