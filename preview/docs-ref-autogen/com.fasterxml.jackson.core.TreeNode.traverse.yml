### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.TreeNode.traverse*"
fullName: "com.fasterxml.jackson.core.TreeNode.traverse"
name: "traverse"
nameWithType: "TreeNode.traverse"
members:
- uid: "com.fasterxml.jackson.core.TreeNode.traverse()"
  fullName: "com.fasterxml.jackson.core.TreeNode.traverse()"
  name: "traverse()"
  nameWithType: "TreeNode.traverse()"
  summary: "Method for constructing a <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> instance for iterating over contents of the tree that this node is root of. Functionally equivalent to first serializing tree using <xref uid=\"com.fasterxml.jackson.core.ObjectCodec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectCodec\"></xref> and then re-parsing but more efficient.\n\nNOTE: constructed parser instance will NOT initially point to a token, so before passing it to deserializers, it is typically necessary to advance it to the first available token by calling <xref uid=\"com.fasterxml.jackson.core.JsonParser.nextToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser#nextToken()\"></xref>.\n\nAlso note that calling this method will **NOT** pass <xref uid=\"com.fasterxml.jackson.core.ObjectCodec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectCodec\"></xref> reference, so data-binding callback methods like <xref uid=\"com.fasterxml.jackson.core.JsonParser.&lt;T&gt;readValueAs(java.lang.Class&lt;T&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser#readValueAs(Class)\"></xref> will not work with calling <xref uid=\"com.fasterxml.jackson.core.JsonParser.setCodec*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser#setCodec\"></xref>). It is often better to call <xref uid=\"com.fasterxml.jackson.core.TreeNode.traverse(com.fasterxml.jackson.core.ObjectCodec)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#traverse(ObjectCodec)\"></xref> to pass the codec explicitly."
  syntax: "public abstract JsonParser traverse()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.TreeNode.traverse(com.fasterxml.jackson.core.ObjectCodec)"
  fullName: "com.fasterxml.jackson.core.TreeNode.traverse(ObjectCodec codec)"
  name: "traverse(ObjectCodec codec)"
  nameWithType: "TreeNode.traverse(ObjectCodec codec)"
  summary: "Same as <xref uid=\"com.fasterxml.jackson.core.TreeNode.traverse()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#traverse()\"></xref>, but additionally passes <xref uid=\"com.fasterxml.jackson.core.ObjectCodec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.ObjectCodec\"></xref> to use if <xref uid=\"com.fasterxml.jackson.core.JsonParser.&lt;T&gt;readValueAs(java.lang.Class&lt;T&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser#readValueAs(Class)\"></xref> is used (otherwise caller must call <xref uid=\"com.fasterxml.jackson.core.JsonParser.setCodec*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser#setCodec\"></xref> on response explicitly).\n\nNOTE: constructed parser instance will NOT initially point to a token, so before passing it to deserializers, it is typically necessary to advance it to the first available token by calling <xref uid=\"com.fasterxml.jackson.core.JsonParser.nextToken()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser#nextToken()\"></xref>."
  parameters:
  - name: "codec"
    type: "<xref href=\"com.fasterxml.jackson.core.ObjectCodec?alt=com.fasterxml.jackson.core.ObjectCodec&text=ObjectCodec\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract JsonParser traverse(ObjectCodec codec)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
