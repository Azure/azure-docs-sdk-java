### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName*"
fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName"
name: "writeFieldName"
nameWithType: "UTF8JsonGenerator.writeFieldName"
members:
- uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(com.fasterxml.jackson.core.SerializableString)"
  fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(SerializableString name)"
  name: "writeFieldName(SerializableString name)"
  nameWithType: "UTF8JsonGenerator.writeFieldName(SerializableString name)"
  summary: "Method similar to <xref uid=\"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeFieldName(String)\"></xref>, main difference being that it may perform better as some of processing (such as quoting of certain characters, or encoding into external encoding if supported by generator) can be done just once and reused for later calls.\n\nDefault implementation simple uses unprocessed name container in serialized String; implementations are strongly encouraged to make use of more efficient methods argument object has."
  overridden: "com.fasterxml.jackson.core.base.GeneratorBase.writeFieldName(com.fasterxml.jackson.core.SerializableString)"
  parameters:
  - name: "name"
    type: "<xref href=\"com.fasterxml.jackson.core.SerializableString?alt=com.fasterxml.jackson.core.SerializableString&text=SerializableString\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeFieldName(SerializableString name)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(String name)"
  name: "writeFieldName(String name)"
  nameWithType: "UTF8JsonGenerator.writeFieldName(String name)"
  summary: "Method for writing a field name (JSON String surrounded by double quotes: syntactically identical to a JSON String value), possibly decorated by white space if pretty-printing is enabled.\n\nField names can only be written in Object context (check out JSON specification for details), when field name is expected (field names alternate with values)."
  overridden: "com.fasterxml.jackson.core.JsonGenerator.writeFieldName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeFieldName(String name)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
