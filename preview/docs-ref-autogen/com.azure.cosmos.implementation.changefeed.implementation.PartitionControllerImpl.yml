### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl"
  id: "PartitionControllerImpl"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.PartitionControllerImpl(com.azure.cosmos.implementation.changefeed.LeaseContainer,com.azure.cosmos.implementation.changefeed.LeaseManager,com.azure.cosmos.implementation.changefeed.PartitionSupervisorFactory,com.azure.cosmos.implementation.changefeed.PartitionSynchronizer,reactor.core.scheduler.Scheduler)"
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.addOrUpdateLease(com.azure.cosmos.implementation.changefeed.Lease)"
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.initialize()"
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.shutdown()"
  langs:
  - "java"
  name: "PartitionControllerImpl"
  nameWithType: "PartitionControllerImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl"
  type: "Class"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Implementation for <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionController\" data-throw-if-not-resolved=\"false\">PartitionController</xref>."
  syntax:
    content: " class PartitionControllerImpl implements PartitionController"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.changefeed.PartitionController"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.PartitionControllerImpl(com.azure.cosmos.implementation.changefeed.LeaseContainer,com.azure.cosmos.implementation.changefeed.LeaseManager,com.azure.cosmos.implementation.changefeed.PartitionSupervisorFactory,com.azure.cosmos.implementation.changefeed.PartitionSynchronizer,reactor.core.scheduler.Scheduler)"
  id: "PartitionControllerImpl(com.azure.cosmos.implementation.changefeed.LeaseContainer,com.azure.cosmos.implementation.changefeed.LeaseManager,com.azure.cosmos.implementation.changefeed.PartitionSupervisorFactory,com.azure.cosmos.implementation.changefeed.PartitionSynchronizer,reactor.core.scheduler.Scheduler)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl"
  langs:
  - "java"
  name: "PartitionControllerImpl(LeaseContainer leaseContainer, LeaseManager leaseManager, PartitionSupervisorFactory partitionSupervisorFactory, PartitionSynchronizer synchronizer, Scheduler scheduler)"
  nameWithType: "PartitionControllerImpl.PartitionControllerImpl(LeaseContainer leaseContainer, LeaseManager leaseManager, PartitionSupervisorFactory partitionSupervisorFactory, PartitionSynchronizer synchronizer, Scheduler scheduler)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.PartitionControllerImpl(LeaseContainer leaseContainer, LeaseManager leaseManager, PartitionSupervisorFactory partitionSupervisorFactory, PartitionSynchronizer synchronizer, Scheduler scheduler)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.PartitionControllerImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public PartitionControllerImpl(LeaseContainer leaseContainer, LeaseManager leaseManager, PartitionSupervisorFactory partitionSupervisorFactory, PartitionSynchronizer synchronizer, Scheduler scheduler)"
    parameters:
    - id: "leaseContainer"
      type: "com.azure.cosmos.implementation.changefeed.LeaseContainer"
    - id: "leaseManager"
      type: "com.azure.cosmos.implementation.changefeed.LeaseManager"
    - id: "partitionSupervisorFactory"
      type: "com.azure.cosmos.implementation.changefeed.PartitionSupervisorFactory"
    - id: "synchronizer"
      type: "com.azure.cosmos.implementation.changefeed.PartitionSynchronizer"
    - id: "scheduler"
      type: "reactor.core.scheduler.Scheduler"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.addOrUpdateLease(com.azure.cosmos.implementation.changefeed.Lease)"
  id: "addOrUpdateLease(com.azure.cosmos.implementation.changefeed.Lease)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl"
  langs:
  - "java"
  name: "addOrUpdateLease(Lease lease)"
  nameWithType: "PartitionControllerImpl.addOrUpdateLease(Lease lease)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.addOrUpdateLease(Lease lease)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.addOrUpdateLease*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public synchronized Mono<Lease> addOrUpdateLease(Lease lease)"
    parameters:
    - id: "lease"
      type: "com.azure.cosmos.implementation.changefeed.Lease"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.initialize()"
  id: "initialize()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl"
  langs:
  - "java"
  name: "initialize()"
  nameWithType: "PartitionControllerImpl.initialize()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.initialize()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.initialize*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Void> initialize()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.shutdown()"
  id: "shutdown()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl"
  langs:
  - "java"
  name: "shutdown()"
  nameWithType: "PartitionControllerImpl.shutdown()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.shutdown()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.shutdown*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public Mono<Void> shutdown()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
references:
- uid: "com.azure.cosmos.implementation.changefeed.LeaseContainer"
  name: "LeaseContainer"
  nameWithType: "LeaseContainer"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseContainer"
- uid: "com.azure.cosmos.implementation.changefeed.LeaseManager"
  name: "LeaseManager"
  nameWithType: "LeaseManager"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseManager"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionSupervisorFactory"
  name: "PartitionSupervisorFactory"
  nameWithType: "PartitionSupervisorFactory"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionSupervisorFactory"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionSynchronizer"
  name: "PartitionSynchronizer"
  nameWithType: "PartitionSynchronizer"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionSynchronizer"
- uid: "reactor.core.scheduler.Scheduler"
  spec.java:
  - uid: "reactor.core.scheduler.Scheduler"
    name: "Scheduler"
    fullName: "reactor.core.scheduler.Scheduler"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.PartitionControllerImpl*"
  name: "PartitionControllerImpl"
  nameWithType: "PartitionControllerImpl.PartitionControllerImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.PartitionControllerImpl"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.initialize*"
  name: "initialize"
  nameWithType: "PartitionControllerImpl.initialize"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.initialize"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.Lease"
  name: "Lease"
  nameWithType: "Lease"
  fullName: "com.azure.cosmos.implementation.changefeed.Lease"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.implementation.changefeed.Lease>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.implementation.changefeed.Lease"
    name: "Lease"
    fullName: "com.azure.cosmos.implementation.changefeed.Lease"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.addOrUpdateLease*"
  name: "addOrUpdateLease"
  nameWithType: "PartitionControllerImpl.addOrUpdateLease"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.addOrUpdateLease"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.shutdown*"
  name: "shutdown"
  nameWithType: "PartitionControllerImpl.shutdown"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionControllerImpl.shutdown"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionController"
  name: "PartitionController"
  nameWithType: "PartitionController"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionController"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
