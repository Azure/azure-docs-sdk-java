### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.hasExplicitDeserializerFor*"
fullName: "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.hasExplicitDeserializerFor"
name: "hasExplicitDeserializerFor"
nameWithType: "BasicDeserializerFactory.hasExplicitDeserializerFor"
members:
- uid: "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)"
  name: "hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)"
  nameWithType: "BasicDeserializerFactory.hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)"
  summary: "Method that can be used to check if databind module has explicitly declared deserializer for given (likely JDK) type, explicit meaning that there is specific deserializer for given type as opposed to auto-generated \"Bean\" deserializer. Factory itself will check for known JDK-provided types, but registered <xref uid=\"com.fasterxml.jackson.databind.Module\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.Module\"></xref>s are also called to see if they might provide explicit deserializer.\n\nMain use for this method is with Safe Default Typing (and generally Safe Polymorphic Deserialization), during which it is good to be able to check that given raw type is explicitly supported and as such \"known type\" (as opposed to potentially dangerous \"gadget type\" which could be exploited).\n\nThis matches `Deserializers.Base.hasDeserializerFor(Class)` method, which is the mechanism used to determine if a `Module` might provide an explicit deserializer instead of core databind."
  overridden: "com.fasterxml.jackson.databind.deser.DeserializerFactory.hasExplicitDeserializerFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class<?>)"
  parameters:
  - name: "config"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationConfig?alt=com.fasterxml.jackson.databind.DeserializationConfig&text=DeserializationConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "valueType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public boolean hasExplicitDeserializerFor(DeserializationConfig config, Class<?> valueType)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
