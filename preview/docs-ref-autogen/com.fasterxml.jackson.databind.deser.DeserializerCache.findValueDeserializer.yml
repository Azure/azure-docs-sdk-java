### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer*"
fullName: "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer"
name: "findValueDeserializer"
nameWithType: "DeserializerCache.findValueDeserializer"
members:
- uid: "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)"
  name: "findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)"
  nameWithType: "DeserializerCache.findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)"
  summary: "Method called to get hold of a deserializer for a value of given type; or if no such deserializer can be found, a default handler (which may do a best-effort generic serialization or just simply throw an exception when invoked).\n\nNote: this method is only called for value types; not for keys. Key deserializers can be accessed using <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findKeyDeserializer\"></xref>.\n\nNote also that deserializer returned is guaranteed to be resolved (if it is of type <xref uid=\"com.fasterxml.jackson.databind.deser.ResolvableDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvableDeserializer\"></xref>), but not contextualized (wrt <xref uid=\"com.fasterxml.jackson.databind.deser.ContextualDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContextualDeserializer\"></xref>): caller has to handle latter if necessary."
  parameters:
  - description: "Deserialization context"
    name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "factory"
    type: "<xref href=\"com.fasterxml.jackson.databind.deser.DeserializerFactory?alt=com.fasterxml.jackson.databind.deser.DeserializerFactory&text=DeserializerFactory\" data-throw-if-not-resolved=\"False\" />"
  - description: "Declared type of the value to deserializer (obtained using\n   'setter' method signature and/or type annotations"
    name: "propertyType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonDeserializer<Object> findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType)"
  exceptions:
  - description: "if there are fatal problems with\n   accessing suitable deserializer; including that of not\n   finding any serializer"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer?alt=com.fasterxml.jackson.databind.JsonDeserializer&text=JsonDeserializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
