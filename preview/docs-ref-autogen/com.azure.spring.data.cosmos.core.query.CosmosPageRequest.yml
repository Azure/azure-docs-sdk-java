### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  id: CosmosPageRequest
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query
  children:
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(int,int,java.lang.String)
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(int,int,java.lang.String,org.springframework.data.domain.Sort)
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.equals(java.lang.Object)
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getOffset()
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getRequestContinuation()
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.hashCode()
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.next()
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of(int,int,java.lang.String,org.springframework.data.domain.Sort)
  - com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of(long,int,int,java.lang.String,org.springframework.data.domain.Sort)
  langs:
  - java
  name: CosmosPageRequest
  nameWithType: CosmosPageRequest
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  type: Class
  package: com.azure.spring.data.cosmos.core.query
  summary: >-
    CosmosPageRequest representing page request during pagination query, field <xref uid="com.azure.cosmos.models.FeedResponse.getContinuationToken*" data-throw-if-not-resolved="false">FeedResponse#getContinuationToken()</xref> response continuation token\} is saved to help query next page.


    The requestContinuation token should be saved after each request and reused in later queries.
  syntax:
    content: public class CosmosPageRequest extends PageRequest
  inheritance:
  - java.lang.Object
  - org.springframework.data.domain.AbstractPageRequest
  - org.springframework.data.domain.PageRequest
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.domain.AbstractPageRequest.getOffset()
  - org.springframework.data.domain.AbstractPageRequest.getPageNumber()
  - org.springframework.data.domain.AbstractPageRequest.getPageSize()
  - org.springframework.data.domain.AbstractPageRequest.hasPrevious()
  - org.springframework.data.domain.AbstractPageRequest.previousOrFirst()
  - org.springframework.data.domain.PageRequest.equals(java.lang.Object)
  - org.springframework.data.domain.PageRequest.first()
  - org.springframework.data.domain.PageRequest.getSort()
  - org.springframework.data.domain.PageRequest.hashCode()
  - org.springframework.data.domain.PageRequest.next()
  - org.springframework.data.domain.PageRequest.of(int,int)
  - org.springframework.data.domain.PageRequest.of(int,int,org.springframework.data.domain.Sort)
  - org.springframework.data.domain.PageRequest.of(int,int,org.springframework.data.domain.Sort.Direction,java.lang.String...)
  - org.springframework.data.domain.PageRequest.previous()
  - org.springframework.data.domain.PageRequest.toString()
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(int,int,java.lang.String)
  id: CosmosPageRequest(int,int,java.lang.String)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: CosmosPageRequest(int page, int size, String requestContinuation)
  nameWithType: CosmosPageRequest.CosmosPageRequest(int page, int size, String requestContinuation)
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(int page, int size, String requestContinuation)
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest*
  type: Constructor
  package: com.azure.spring.data.cosmos.core.query
  summary: Creates a new <xref uid="org.springframework.data.domain.PageRequest" data-throw-if-not-resolved="false">PageRequest</xref> with unsorted parameters applied.
  syntax:
    content: public CosmosPageRequest(int page, int size, String requestContinuation)
    parameters:
    - id: page
      type: int
      description: zero-based page index, must not be negative.
    - id: size
      type: int
      description: the size of the page to be returned, must be greater than 0.
    - id: requestContinuation
      type: java.lang.String
      description: must not be null.
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(int,int,java.lang.String,org.springframework.data.domain.Sort)
  id: CosmosPageRequest(int,int,java.lang.String,org.springframework.data.domain.Sort)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: CosmosPageRequest(int page, int size, String requestContinuation, Sort sort)
  nameWithType: CosmosPageRequest.CosmosPageRequest(int page, int size, String requestContinuation, Sort sort)
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(int page, int size, String requestContinuation, Sort sort)
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest*
  type: Constructor
  package: com.azure.spring.data.cosmos.core.query
  summary: Creates a new <xref uid="com.azure.spring.data.cosmos.core.query.CosmosPageRequest" data-throw-if-not-resolved="false">CosmosPageRequest</xref> with sort parameters applied.
  syntax:
    content: public CosmosPageRequest(int page, int size, String requestContinuation, Sort sort)
    parameters:
    - id: page
      type: int
      description: zero-based page index, must not be negative.
    - id: size
      type: int
      description: the size of the page to be returned, must be greater than 0.
    - id: requestContinuation
      type: java.lang.String
      description: must not be null.
    - id: sort
      type: org.springframework.data.domain.Sort
      description: must not be null, use <xref uid="org.springframework.data.domain.Sort.unsorted*" data-throw-if-not-resolved="false">Sort#unsorted()</xref> instead.
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(long,int,int,java.lang.String)
  id: CosmosPageRequest(long,int,int,java.lang.String)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: CosmosPageRequest(long offset, int page, int size, String requestContinuation)
  nameWithType: CosmosPageRequest.CosmosPageRequest(long offset, int page, int size, String requestContinuation)
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(long offset, int page, int size, String requestContinuation)
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest*
  type: Constructor
  package: com.azure.spring.data.cosmos.core.query
  syntax:
    content: private CosmosPageRequest(long offset, int page, int size, String requestContinuation)
    parameters:
    - id: offset
      type: long
    - id: page
      type: int
    - id: size
      type: int
    - id: requestContinuation
      type: java.lang.String
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(long,int,int,java.lang.String,org.springframework.data.domain.Sort)
  id: CosmosPageRequest(long,int,int,java.lang.String,org.springframework.data.domain.Sort)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: CosmosPageRequest(long offset, int page, int size, String requestContinuation, Sort sort)
  nameWithType: CosmosPageRequest.CosmosPageRequest(long offset, int page, int size, String requestContinuation, Sort sort)
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest(long offset, int page, int size, String requestContinuation, Sort sort)
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest*
  type: Constructor
  package: com.azure.spring.data.cosmos.core.query
  syntax:
    content: private CosmosPageRequest(long offset, int page, int size, String requestContinuation, Sort sort)
    parameters:
    - id: offset
      type: long
    - id: page
      type: int
    - id: size
      type: int
    - id: requestContinuation
      type: java.lang.String
    - id: sort
      type: org.springframework.data.domain.Sort
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: equals(Object obj)
  nameWithType: CosmosPageRequest.equals(Object obj)
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.equals(Object obj)
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.equals*
  type: Method
  package: com.azure.spring.data.cosmos.core.query
  syntax:
    content: public boolean equals(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getOffset()
  id: getOffset()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: getOffset()
  nameWithType: CosmosPageRequest.getOffset()
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getOffset()
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getOffset*
  type: Method
  package: com.azure.spring.data.cosmos.core.query
  syntax:
    content: public long getOffset()
    return:
      type: long
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getRequestContinuation()
  id: getRequestContinuation()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: getRequestContinuation()
  nameWithType: CosmosPageRequest.getRequestContinuation()
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getRequestContinuation()
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getRequestContinuation*
  type: Method
  package: com.azure.spring.data.cosmos.core.query
  summary: To get request continuation
  syntax:
    content: public String getRequestContinuation()
    return:
      type: java.lang.String
      description: String
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.hashCode()
  id: hashCode()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: hashCode()
  nameWithType: CosmosPageRequest.hashCode()
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.hashCode()
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.hashCode*
  type: Method
  package: com.azure.spring.data.cosmos.core.query
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.next()
  id: next()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: next()
  nameWithType: CosmosPageRequest.next()
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.next()
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.next*
  type: Method
  package: com.azure.spring.data.cosmos.core.query
  syntax:
    content: public Pageable next()
    return:
      type: org.springframework.data.domain.Pageable
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of(int,int,java.lang.String,org.springframework.data.domain.Sort)
  id: of(int,int,java.lang.String,org.springframework.data.domain.Sort)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: of(int page, int size, String requestContinuation, Sort sort)
  nameWithType: CosmosPageRequest.of(int page, int size, String requestContinuation, Sort sort)
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of(int page, int size, String requestContinuation, Sort sort)
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of*
  type: Method
  package: com.azure.spring.data.cosmos.core.query
  summary: Creates a new <xref uid="com.azure.spring.data.cosmos.core.query.CosmosPageRequest" data-throw-if-not-resolved="false">CosmosPageRequest</xref>
  syntax:
    content: public static CosmosPageRequest of(int page, int size, String requestContinuation, Sort sort)
    parameters:
    - id: page
      type: int
      description: zero-based page index, must not be negative.
    - id: size
      type: int
      description: the size of the page to be returned, must be greater than 0.
    - id: requestContinuation
      type: java.lang.String
      description: cannot be null
    - id: sort
      type: org.springframework.data.domain.Sort
      description: cannot be null
    return:
      type: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
      description: CosmosPageRequest
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of(long,int,int,java.lang.String,org.springframework.data.domain.Sort)
  id: of(long,int,int,java.lang.String,org.springframework.data.domain.Sort)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
  langs:
  - java
  name: of(long offset, int page, int size, String requestContinuation, Sort sort)
  nameWithType: CosmosPageRequest.of(long offset, int page, int size, String requestContinuation, Sort sort)
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of(long offset, int page, int size, String requestContinuation, Sort sort)
  overload: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of*
  type: Method
  package: com.azure.spring.data.cosmos.core.query
  summary: Creates a new <xref uid="com.azure.spring.data.cosmos.core.query.CosmosPageRequest" data-throw-if-not-resolved="false">CosmosPageRequest</xref>
  syntax:
    content: public static CosmosPageRequest of(long offset, int page, int size, String requestContinuation, Sort sort)
    parameters:
    - id: offset
      type: long
      description: cannot be null
    - id: page
      type: int
      description: zero-based page index, must not be negative.
    - id: size
      type: int
      description: the size of the page to be returned, must be greater than 0.
    - id: requestContinuation
      type: java.lang.String
      description: cannot be null
    - id: sort
      type: org.springframework.data.domain.Sort
      description: cannot be null
    return:
      type: com.azure.spring.data.cosmos.core.query.CosmosPageRequest
      description: CosmosPageRequest
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest*
  name: CosmosPageRequest
  nameWithType: CosmosPageRequest.CosmosPageRequest
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.CosmosPageRequest
  package: com.azure.spring.data.cosmos.core.query
- uid: org.springframework.data.domain.Sort
  spec.java:
  - uid: org.springframework.data.domain.Sort
    name: Sort
    fullName: org.springframework.data.domain.Sort
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of*
  name: of
  nameWithType: CosmosPageRequest.of
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.of
  package: com.azure.spring.data.cosmos.core.query
- uid: org.springframework.data.domain.Pageable
  spec.java:
  - uid: org.springframework.data.domain.Pageable
    name: Pageable
    fullName: org.springframework.data.domain.Pageable
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.next*
  name: next
  nameWithType: CosmosPageRequest.next
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.next
  package: com.azure.spring.data.cosmos.core.query
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getOffset*
  name: getOffset
  nameWithType: CosmosPageRequest.getOffset
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getOffset
  package: com.azure.spring.data.cosmos.core.query
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getRequestContinuation*
  name: getRequestContinuation
  nameWithType: CosmosPageRequest.getRequestContinuation
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.getRequestContinuation
  package: com.azure.spring.data.cosmos.core.query
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.hashCode*
  name: hashCode
  nameWithType: CosmosPageRequest.hashCode
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.hashCode
  package: com.azure.spring.data.cosmos.core.query
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.equals*
  name: equals
  nameWithType: CosmosPageRequest.equals
  fullName: com.azure.spring.data.cosmos.core.query.CosmosPageRequest.equals
  package: com.azure.spring.data.cosmos.core.query
- uid: org.springframework.data.domain.PageRequest
  name: PageRequest
  nameWithType: PageRequest
  fullName: org.springframework.data.domain.PageRequest
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.data.domain.PageRequest.equals(java.lang.Object)
  name: PageRequest.equals(Object)
  nameWithType: PageRequest.equals(Object)
  fullName: org.springframework.data.domain.PageRequest.equals(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.data.domain.PageRequest.of(int,int)
  name: PageRequest.of(int,int)
  nameWithType: PageRequest.of(int,int)
  fullName: org.springframework.data.domain.PageRequest.of(int,int)
- uid: org.springframework.data.domain.AbstractPageRequest.getPageSize()
  name: AbstractPageRequest.getPageSize()
  nameWithType: AbstractPageRequest.getPageSize()
  fullName: org.springframework.data.domain.AbstractPageRequest.getPageSize()
- uid: org.springframework.data.domain.PageRequest.of(int,int,org.springframework.data.domain.Sort.Direction,java.lang.String...)
  name: PageRequest.of(int,int,Sort.Direction,String)
  nameWithType: PageRequest.of(int,int,Sort.Direction,String)
  fullName: org.springframework.data.domain.PageRequest.of(int,int,org.springframework.data.domain.Sort.Direction,java.lang.String...)
- uid: org.springframework.data.domain.AbstractPageRequest.getPageNumber()
  name: AbstractPageRequest.getPageNumber()
  nameWithType: AbstractPageRequest.getPageNumber()
  fullName: org.springframework.data.domain.AbstractPageRequest.getPageNumber()
- uid: org.springframework.data.domain.AbstractPageRequest.previousOrFirst()
  name: AbstractPageRequest.previousOrFirst()
  nameWithType: AbstractPageRequest.previousOrFirst()
  fullName: org.springframework.data.domain.AbstractPageRequest.previousOrFirst()
- uid: org.springframework.data.domain.PageRequest.getSort()
  name: PageRequest.getSort()
  nameWithType: PageRequest.getSort()
  fullName: org.springframework.data.domain.PageRequest.getSort()
- uid: org.springframework.data.domain.PageRequest.toString()
  name: PageRequest.toString()
  nameWithType: PageRequest.toString()
  fullName: org.springframework.data.domain.PageRequest.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: org.springframework.data.domain.PageRequest.previous()
  name: PageRequest.previous()
  nameWithType: PageRequest.previous()
  fullName: org.springframework.data.domain.PageRequest.previous()
- uid: org.springframework.data.domain.PageRequest.of(int,int,org.springframework.data.domain.Sort)
  name: PageRequest.of(int,int,Sort)
  nameWithType: PageRequest.of(int,int,Sort)
  fullName: org.springframework.data.domain.PageRequest.of(int,int,org.springframework.data.domain.Sort)
- uid: org.springframework.data.domain.PageRequest.next()
  name: PageRequest.next()
  nameWithType: PageRequest.next()
  fullName: org.springframework.data.domain.PageRequest.next()
- uid: org.springframework.data.domain.PageRequest.hashCode()
  name: PageRequest.hashCode()
  nameWithType: PageRequest.hashCode()
  fullName: org.springframework.data.domain.PageRequest.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.data.domain.PageRequest.first()
  name: PageRequest.first()
  nameWithType: PageRequest.first()
  fullName: org.springframework.data.domain.PageRequest.first()
- uid: org.springframework.data.domain.AbstractPageRequest.getOffset()
  name: AbstractPageRequest.getOffset()
  nameWithType: AbstractPageRequest.getOffset()
  fullName: org.springframework.data.domain.AbstractPageRequest.getOffset()
- uid: org.springframework.data.domain.AbstractPageRequest.hasPrevious()
  name: AbstractPageRequest.hasPrevious()
  nameWithType: AbstractPageRequest.hasPrevious()
  fullName: org.springframework.data.domain.AbstractPageRequest.hasPrevious()
