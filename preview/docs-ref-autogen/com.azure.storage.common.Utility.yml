### YamlMime:JavaType
uid: "com.azure.storage.common.Utility"
fullName: "com.azure.storage.common.Utility"
name: "Utility"
nameWithType: "Utility"
summary: "Utility methods for storage client libraries."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Utility"
constructors:
- uid: "com.azure.storage.common.Utility.Utility()"
  fullName: "com.azure.storage.common.Utility.Utility()"
  name: "Utility()"
  nameWithType: "Utility.Utility()"
  syntax: "public Utility()"
fields:
- uid: "com.azure.storage.common.Utility.STORAGE_TRACING_NAMESPACE_VALUE"
  fullName: "com.azure.storage.common.Utility.STORAGE_TRACING_NAMESPACE_VALUE"
  name: "STORAGE_TRACING_NAMESPACE_VALUE"
  nameWithType: "Utility.STORAGE_TRACING_NAMESPACE_VALUE"
  summary: "Please see [here][] for more information on Azure resource provider namespaces.\n\n\n[here]: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers"
  modifiers:
  - "static"
  - "final"
  field:
    value: "Microsoft.Storage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String STORAGE_TRACING_NAMESPACE_VALUE"
  desc: "Please see [here][] for more information on Azure resource provider namespaces.\n\n\n[here]: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers"
methods:
- uid: "com.azure.storage.common.Utility.appendQueryParameter(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.storage.common.Utility.appendQueryParameter(String url, String key, String value)"
  name: "appendQueryParameter(String url, String key, String value)"
  nameWithType: "Utility.appendQueryParameter(String url, String key, String value)"
  summary: "Appends a query parameter to a url."
  modifiers:
  - "static"
  parameters:
  - description: "The url."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query key."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query value."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String appendQueryParameter(String url, String key, String value)"
  desc: "Appends a query parameter to a url."
  returns:
    description: "The updated url."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.Utility.convertStreamToByteBuffer(java.io.InputStream,long,int)"
  fullName: "com.azure.storage.common.Utility.convertStreamToByteBuffer(InputStream data, long length, int blockSize)"
  name: "convertStreamToByteBuffer(InputStream data, long length, int blockSize)"
  nameWithType: "Utility.convertStreamToByteBuffer(InputStream data, long length, int blockSize)"
  summary: "A utility method for converting the input stream to Flux of Byte<wbr>Buffer."
  modifiers:
  - "static"
  parameters:
  - description: "The input data which needs to convert to ByteBuffer."
    name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected input data length."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The size of each ByteBuffer."
    name: "blockSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Flux<ByteBuffer> convertStreamToByteBuffer(InputStream data, long length, int blockSize)"
  desc: "A utility method for converting the input stream to Flux of ByteBuffer. Will check the equality of entity length and the input length."
  returns:
    description: "<xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref> which contains the input data."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.common.Utility.convertStreamToByteBuffer(java.io.InputStream,long,int,boolean)"
  fullName: "com.azure.storage.common.Utility.convertStreamToByteBuffer(InputStream data, long length, int blockSize, boolean markAndReset)"
  name: "convertStreamToByteBuffer(InputStream data, long length, int blockSize, boolean markAndReset)"
  nameWithType: "Utility.convertStreamToByteBuffer(InputStream data, long length, int blockSize, boolean markAndReset)"
  summary: "A utility method for converting the input stream to Flux of Byte<wbr>Buffer."
  modifiers:
  - "static"
  parameters:
  - description: "The input data which needs to convert to ByteBuffer."
    name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The expected input data length."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The size of each ByteBuffer."
    name: "blockSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the stream needs to be marked and reset. This should generally always be true to\n support retries. It is false in the case of buffered upload to support non markable streams because buffered\n upload uses its own mechanisms to support retries."
    name: "markAndReset"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Flux<ByteBuffer> convertStreamToByteBuffer(InputStream data, long length, int blockSize, boolean markAndReset)"
  desc: "A utility method for converting the input stream to Flux of ByteBuffer. Will check the equality of entity length and the input length. Using markAndReset=true to force a seekable stream implies a buffering strategy is not being used, in which case length is still needed for whatever underlying REST call is being streamed to. If markAndReset=false and data is being buffered, consider using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.util.FluxUtil#toFluxByteBuffer(InputStream, int)\"></xref> which does not require a data length."
  returns:
    description: "<xref uid=\"java.nio.ByteBuffer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ByteBuffer\"></xref> which contains the input data."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.common.Utility.encodeUrlPath(java.lang.String)"
  fullName: "com.azure.storage.common.Utility.encodeUrlPath(String url)"
  name: "encodeUrlPath(String url)"
  nameWithType: "Utility.encodeUrlPath(String url)"
  summary: "Performs a safe encoding of a url string, only encoding the path."
  modifiers:
  - "static"
  parameters:
  - description: "The url to encode."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String encodeUrlPath(String url)"
  desc: "Performs a safe encoding of a url string, only encoding the path."
  returns:
    description: "The encoded url."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.Utility.parseDate(java.lang.String)"
  fullName: "com.azure.storage.common.Utility.parseDate(String dateString)"
  name: "parseDate(String dateString)"
  nameWithType: "Utility.parseDate(String dateString)"
  summary: "Given a String representing a date in a form of the ISO8601 pattern, generates a Date representing it with up to millisecond precision."
  deprecatedTag: "Use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StorageImplUtils#parseDateAndFormat(String)\"></xref>"
  modifiers:
  - "static"
  parameters:
  - description: "the <code>String</code> to be interpreted as a <code>Date</code>"
    name: "dateString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic static OffsetDateTime parseDate(String dateString)"
  desc: "Given a String representing a date in a form of the ISO8601 pattern, generates a Date representing it with up to millisecond precision."
  hasDeprecatedTag: true
  returns:
    description: "the corresponding <code>Date</code> object"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.Utility.urlDecode(java.lang.String)"
  fullName: "com.azure.storage.common.Utility.urlDecode(String stringToDecode)"
  name: "urlDecode(String stringToDecode)"
  nameWithType: "Utility.urlDecode(String stringToDecode)"
  summary: "Performs a safe decoding of the passed string, taking care to preserve each `+` character rather than replacing it with a space character."
  modifiers:
  - "static"
  parameters:
  - description: "String value to decode"
    name: "stringToDecode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String urlDecode(String stringToDecode)"
  desc: "Performs a safe decoding of the passed string, taking care to preserve each `+` character rather than replacing it with a space character."
  returns:
    description: "the decoded string value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.common.Utility.urlEncode(java.lang.String)"
  fullName: "com.azure.storage.common.Utility.urlEncode(String stringToEncode)"
  name: "urlEncode(String stringToEncode)"
  nameWithType: "Utility.urlEncode(String stringToEncode)"
  summary: "Performs a safe encoding of the specified string, taking care to insert %20 for each space character instead of inserting the `+` character."
  modifiers:
  - "static"
  parameters:
  - description: "String value to encode"
    name: "stringToEncode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String urlEncode(String stringToEncode)"
  desc: "Performs a safe encoding of the specified string, taking care to insert %20 for each space character instead of inserting the `+` character."
  returns:
    description: "the encoded string value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Utility methods for storage client libraries."
metadata: {}
package: "com.azure.storage.common"
artifact: com.azure:azure-storage-common:12.17.0-beta.1
