### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  id: NonBlockingJsonParser
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async
  children:
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.NonBlockingJsonParser(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._decodeEscaped()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorTokenWithEOF()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFieldWithEscape()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatExponent(boolean,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatFraction()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordToken(java.lang.String,int,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordTokenWithEOF(java.lang.String,int,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdToken(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdTokenWithEOF(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberIntegralPart(char[],int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingNegZeroes()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingZeroes()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberMinus(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishTokenWithEOF()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._icLatin1
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._inputBuffer
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._origBufferLen
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._reportErrorToken(java.lang.String)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startAposString()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFalseToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat(char[],int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloatThatStartsWithPeriod()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNegativeNumber()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNullToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNumberLeadingZero()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startPositiveNumber(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startString()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startTrueToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startUnexpectedValue(boolean,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.endOfInput()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.feedInput(byte[],int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.getNonBlockingInputFeeder()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.nextToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.releaseBuffered(java.io.OutputStream)
  langs:
  - java
  name: NonBlockingJsonParser
  nameWithType: NonBlockingJsonParser
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  type: Class
  package: com.fasterxml.jackson.core.json.async
  summary: >-
    Non-blocking parser implementation for JSON content.


    NOTE: only supports parsing of UTF-8 encoded content (and 7-bit US-ASCII since it is strict subset of UTF-8): other encodings are not supported.
  syntax:
    content: public class NonBlockingJsonParser extends NonBlockingJsonParserBase implements ByteArrayFeeder
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.JsonParser
  - com.fasterxml.jackson.core.base.ParserMinimalBase
  - com.fasterxml.jackson.core.base.ParserBase
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  implements:
  - com.fasterxml.jackson.core.async.ByteArrayFeeder
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser._codec()
  - com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  - com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  - com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  - com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  - com.fasterxml.jackson.core.JsonParser.currentName()
  - com.fasterxml.jackson.core.JsonParser.finishToken()
  - com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  - com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.getByteValue()
  - com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  - com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  - com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  - com.fasterxml.jackson.core.JsonParser.getObjectId()
  - com.fasterxml.jackson.core.JsonParser.getSchema()
  - com.fasterxml.jackson.core.JsonParser.getShortValue()
  - com.fasterxml.jackson.core.JsonParser.getTypeId()
  - com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  - com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  - com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  - com.fasterxml.jackson.core.JsonParser.nextTextValue()
  - com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
  - com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
  - com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
  - com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
  - com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
  - com.fasterxml.jackson.core.base.ParserBase._finishString()
  - com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
  - com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
  - com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserBase._handleEOF()
  - com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
  - com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
  - com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
  - com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
  - com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
  - com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
  - com.fasterxml.jackson.core.base.ParserBase.close()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
  - com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
  - com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
  - com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
  - com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
  - com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
  - com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
  - com.fasterxml.jackson.core.base.ParserBase.getIntValue()
  - com.fasterxml.jackson.core.base.ParserBase.getLongValue()
  - com.fasterxml.jackson.core.base.ParserBase.getNumberType()
  - com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
  - com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
  - com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
  - com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
  - com.fasterxml.jackson.core.base.ParserBase.isClosed()
  - com.fasterxml.jackson.core.base.ParserBase.isNaN()
  - com.fasterxml.jackson.core.base.ParserBase.loadMore()
  - com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
  - com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
  - com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
  - com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
  - com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
  - com.fasterxml.jackson.core.base.ParserBase.version()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  - com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName(int[],int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete(java.lang.String)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int,int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt(int,java.lang.String)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete(int)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(java.io.Writer)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters()
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered(java.io.OutputStream)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.NonBlockingJsonParser(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)
  id: NonBlockingJsonParser(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: NonBlockingJsonParser(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
  nameWithType: NonBlockingJsonParser.NonBlockingJsonParser(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.NonBlockingJsonParser(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.NonBlockingJsonParser*
  type: Constructor
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: public NonBlockingJsonParser(IOContext ctxt, int parserFeatures, ByteQuadsCanonicalizer sym)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.core.io.IOContext
    - id: parserFeatures
      type: int
    - id: sym
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._decodeEscaped()
  id: _decodeEscaped()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _decodeEscaped()
  nameWithType: NonBlockingJsonParser._decodeEscaped()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._decodeEscaped()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._decodeEscaped*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that sub-classes must implement to support escaped sequences in base64-encoded sections. Sub-classes that do not need base64 support can leave this as is
  syntax:
    content: protected char _decodeEscaped()
    return:
      type: char
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorToken()
  id: _finishErrorToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishErrorToken()
  nameWithType: NonBlockingJsonParser._finishErrorToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorToken()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishErrorToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorTokenWithEOF()
  id: _finishErrorTokenWithEOF()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishErrorTokenWithEOF()
  nameWithType: NonBlockingJsonParser._finishErrorTokenWithEOF()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorTokenWithEOF()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorTokenWithEOF*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishErrorTokenWithEOF()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFieldWithEscape()
  id: _finishFieldWithEscape()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishFieldWithEscape()
  nameWithType: NonBlockingJsonParser._finishFieldWithEscape()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFieldWithEscape()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFieldWithEscape*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected final JsonToken _finishFieldWithEscape()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatExponent(boolean,int)
  id: _finishFloatExponent(boolean,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishFloatExponent(boolean checkSign, int ch)
  nameWithType: NonBlockingJsonParser._finishFloatExponent(boolean checkSign, int ch)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatExponent(boolean checkSign, int ch)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatExponent*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishFloatExponent(boolean checkSign, int ch)
    parameters:
    - id: checkSign
      type: boolean
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatFraction()
  id: _finishFloatFraction()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishFloatFraction()
  nameWithType: NonBlockingJsonParser._finishFloatFraction()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatFraction()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatFraction*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishFloatFraction()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordToken(java.lang.String,int,com.fasterxml.jackson.core.JsonToken)
  id: _finishKeywordToken(java.lang.String,int,com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishKeywordToken(String expToken, int matched, JsonToken result)
  nameWithType: NonBlockingJsonParser._finishKeywordToken(String expToken, int matched, JsonToken result)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordToken(String expToken, int matched, JsonToken result)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishKeywordToken(String expToken, int matched, JsonToken result)
    parameters:
    - id: expToken
      type: java.lang.String
    - id: matched
      type: int
    - id: result
      type: com.fasterxml.jackson.core.JsonToken
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordTokenWithEOF(java.lang.String,int,com.fasterxml.jackson.core.JsonToken)
  id: _finishKeywordTokenWithEOF(java.lang.String,int,com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishKeywordTokenWithEOF(String expToken, int matched, JsonToken result)
  nameWithType: NonBlockingJsonParser._finishKeywordTokenWithEOF(String expToken, int matched, JsonToken result)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordTokenWithEOF(String expToken, int matched, JsonToken result)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordTokenWithEOF*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishKeywordTokenWithEOF(String expToken, int matched, JsonToken result)
    parameters:
    - id: expToken
      type: java.lang.String
    - id: matched
      type: int
    - id: result
      type: com.fasterxml.jackson.core.JsonToken
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdToken(int,int)
  id: _finishNonStdToken(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishNonStdToken(int type, int matched)
  nameWithType: NonBlockingJsonParser._finishNonStdToken(int type, int matched)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdToken(int type, int matched)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishNonStdToken(int type, int matched)
    parameters:
    - id: type
      type: int
    - id: matched
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdTokenWithEOF(int,int)
  id: _finishNonStdTokenWithEOF(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishNonStdTokenWithEOF(int type, int matched)
  nameWithType: NonBlockingJsonParser._finishNonStdTokenWithEOF(int type, int matched)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdTokenWithEOF(int type, int matched)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdTokenWithEOF*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishNonStdTokenWithEOF(int type, int matched)
    parameters:
    - id: type
      type: int
    - id: matched
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberIntegralPart(char[],int)
  id: _finishNumberIntegralPart(char[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishNumberIntegralPart(char[] outBuf, int outPtr)
  nameWithType: NonBlockingJsonParser._finishNumberIntegralPart(char[] outBuf, int outPtr)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberIntegralPart(char[] outBuf, int outPtr)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberIntegralPart*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishNumberIntegralPart(char[] outBuf, int outPtr)
    parameters:
    - id: outBuf
      type: char[]
    - id: outPtr
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingNegZeroes()
  id: _finishNumberLeadingNegZeroes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishNumberLeadingNegZeroes()
  nameWithType: NonBlockingJsonParser._finishNumberLeadingNegZeroes()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingNegZeroes()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingNegZeroes*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishNumberLeadingNegZeroes()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingZeroes()
  id: _finishNumberLeadingZeroes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishNumberLeadingZeroes()
  nameWithType: NonBlockingJsonParser._finishNumberLeadingZeroes()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingZeroes()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingZeroes*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishNumberLeadingZeroes()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberMinus(int)
  id: _finishNumberMinus(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishNumberMinus(int ch)
  nameWithType: NonBlockingJsonParser._finishNumberMinus(int ch)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberMinus(int ch)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberMinus*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _finishNumberMinus(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishToken()
  id: _finishToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishToken()
  nameWithType: NonBlockingJsonParser._finishToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishToken()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method called when decoding of a token has been started, but not yet completed due to missing input; method is to continue decoding due to at least one more byte being made available to decode.
  syntax:
    content: protected final JsonToken _finishToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishTokenWithEOF()
  id: _finishTokenWithEOF()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _finishTokenWithEOF()
  nameWithType: NonBlockingJsonParser._finishTokenWithEOF()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishTokenWithEOF()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishTokenWithEOF*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: 'Method similar to <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishToken*" data-throw-if-not-resolved="false">#_finishToken</xref>, but called when no more input is available, and end-of-input has been detected. This is usually problem case, but not always: root-level values may be properly terminated by this, and similarly trailing white-space may have been skipped.'
  syntax:
    content: protected final JsonToken _finishTokenWithEOF()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._icLatin1
  id: _icLatin1
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _icLatin1
  nameWithType: NonBlockingJsonParser._icLatin1
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._icLatin1
  type: Field
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected static final int[] _icLatin1
    return:
      type: int[]
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._inputBuffer
  id: _inputBuffer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _inputBuffer
  nameWithType: NonBlockingJsonParser._inputBuffer
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._inputBuffer
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: This buffer is actually provided via <xref uid="com.fasterxml.jackson.core.async.NonBlockingInputFeeder" data-throw-if-not-resolved="false">NonBlockingInputFeeder</xref>
  syntax:
    content: protected byte[] _inputBuffer
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._origBufferLen
  id: _origBufferLen
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _origBufferLen
  nameWithType: NonBlockingJsonParser._origBufferLen
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._origBufferLen
  type: Field
  package: com.fasterxml.jackson.core.json.async
  summary: In addition to current buffer pointer, and end pointer, we will also need to know number of bytes originally contained. This is needed to correctly update location information when the block has been completed.
  syntax:
    content: protected int _origBufferLen
    return:
      type: int
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._reportErrorToken(java.lang.String)
  id: _reportErrorToken(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _reportErrorToken(String actualToken)
  nameWithType: NonBlockingJsonParser._reportErrorToken(String actualToken)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._reportErrorToken(String actualToken)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._reportErrorToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _reportErrorToken(String actualToken)
    parameters:
    - id: actualToken
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startAposString()
  id: _startAposString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startAposString()
  nameWithType: NonBlockingJsonParser._startAposString()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startAposString()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startAposString*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startAposString()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFalseToken()
  id: _startFalseToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startFalseToken()
  nameWithType: NonBlockingJsonParser._startFalseToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFalseToken()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFalseToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startFalseToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat(char[],int,int)
  id: _startFloat(char[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startFloat(char[] outBuf, int outPtr, int ch)
  nameWithType: NonBlockingJsonParser._startFloat(char[] outBuf, int outPtr, int ch)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat(char[] outBuf, int outPtr, int ch)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startFloat(char[] outBuf, int outPtr, int ch)
    parameters:
    - id: outBuf
      type: char[]
    - id: outPtr
      type: int
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloatThatStartsWithPeriod()
  id: _startFloatThatStartsWithPeriod()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startFloatThatStartsWithPeriod()
  nameWithType: NonBlockingJsonParser._startFloatThatStartsWithPeriod()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloatThatStartsWithPeriod()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloatThatStartsWithPeriod*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startFloatThatStartsWithPeriod()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNegativeNumber()
  id: _startNegativeNumber()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startNegativeNumber()
  nameWithType: NonBlockingJsonParser._startNegativeNumber()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNegativeNumber()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNegativeNumber*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startNegativeNumber()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNullToken()
  id: _startNullToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startNullToken()
  nameWithType: NonBlockingJsonParser._startNullToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNullToken()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNullToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startNullToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNumberLeadingZero()
  id: _startNumberLeadingZero()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startNumberLeadingZero()
  nameWithType: NonBlockingJsonParser._startNumberLeadingZero()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNumberLeadingZero()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNumberLeadingZero*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startNumberLeadingZero()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startPositiveNumber(int)
  id: _startPositiveNumber(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startPositiveNumber(int ch)
  nameWithType: NonBlockingJsonParser._startPositiveNumber(int ch)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startPositiveNumber(int ch)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startPositiveNumber*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startPositiveNumber(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startString()
  id: _startString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startString()
  nameWithType: NonBlockingJsonParser._startString()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startString()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startString*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startString()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startTrueToken()
  id: _startTrueToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startTrueToken()
  nameWithType: NonBlockingJsonParser._startTrueToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startTrueToken()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startTrueToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startTrueToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startUnexpectedValue(boolean,int)
  id: _startUnexpectedValue(boolean,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: _startUnexpectedValue(boolean leadingComma, int ch)
  nameWithType: NonBlockingJsonParser._startUnexpectedValue(boolean leadingComma, int ch)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startUnexpectedValue(boolean leadingComma, int ch)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startUnexpectedValue*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  syntax:
    content: protected JsonToken _startUnexpectedValue(boolean leadingComma, int ch)
    parameters:
    - id: leadingComma
      type: boolean
    - id: ch
      type: int
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.endOfInput()
  id: endOfInput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: endOfInput()
  nameWithType: NonBlockingJsonParser.endOfInput()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.endOfInput()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.endOfInput*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that should be called after last chunk of data to parse has been fed (with `feedInput` in sub-class); can be called regardless of what <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput*" data-throw-if-not-resolved="false">#needMoreInput</xref> returns. After calling this method, no more data can be fed; and parser assumes no more data will be available.
  syntax:
    content: public void endOfInput()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.feedInput(byte[],int,int)
  id: feedInput(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: feedInput(byte[] buf, int start, int end)
  nameWithType: NonBlockingJsonParser.feedInput(byte[] buf, int start, int end)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.feedInput(byte[] buf, int start, int end)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.feedInput*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that can be called to feed more data, if (and only if) <xref uid="com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput*" data-throw-if-not-resolved="false">#needMoreInput</xref> returns true.
  syntax:
    content: public void feedInput(byte[] buf, int start, int end)
    parameters:
    - id: buf
      type: byte[]
    - id: start
      type: int
    - id: end
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.getNonBlockingInputFeeder()
  id: getNonBlockingInputFeeder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: getNonBlockingInputFeeder()
  nameWithType: NonBlockingJsonParser.getNonBlockingInputFeeder()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.getNonBlockingInputFeeder()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.getNonBlockingInputFeeder*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that will either return a feeder instance (if parser uses non-blocking, aka asynchronous access); or `null` for parsers that use blocking I/O.
  syntax:
    content: public ByteArrayFeeder getNonBlockingInputFeeder()
    return:
      type: com.fasterxml.jackson.core.async.ByteArrayFeeder
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput()
  id: needMoreInput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: needMoreInput()
  nameWithType: NonBlockingJsonParser.needMoreInput()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: 'Method called to check whether it is ok to feed more data: parser returns true if it has no more content to parse (and it is ok to feed more); otherwise false (and no data should yet be fed).'
  syntax:
    content: public final boolean needMoreInput()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.nextToken()
  id: nextToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: nextToken()
  nameWithType: NonBlockingJsonParser.nextToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.nextToken()
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.nextToken*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Main iteration method, which will advance stream enough to determine type of the next token, if any. If none remaining (stream has no content other than possible white space before ending), null will be returned.
  syntax:
    content: public JsonToken nextToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.releaseBuffered(java.io.OutputStream)
  id: releaseBuffered(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser
  langs:
  - java
  name: releaseBuffered(OutputStream out)
  nameWithType: NonBlockingJsonParser.releaseBuffered(OutputStream out)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.releaseBuffered(OutputStream out)
  overload: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.releaseBuffered*
  type: Method
  package: com.fasterxml.jackson.core.json.async
  summary: Method that can be called to push back any content that has been read but not consumed by the parser. This is usually done after reading all content of interest using parser. Content is released by writing it to given stream if possible; if underlying input is byte-based it can released, if not (char-based) it can not.
  syntax:
    content: public int releaseBuffered(OutputStream out)
    parameters:
    - id: out
      type: java.io.OutputStream
    return:
      type: int
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.core.io.IOContext
  name: IOContext
  nameWithType: IOContext
  fullName: com.fasterxml.jackson.core.io.IOContext
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  name: ByteQuadsCanonicalizer
  nameWithType: ByteQuadsCanonicalizer
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.NonBlockingJsonParser*
  name: NonBlockingJsonParser
  nameWithType: NonBlockingJsonParser.NonBlockingJsonParser
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.NonBlockingJsonParser
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.async.ByteArrayFeeder
  name: ByteArrayFeeder
  nameWithType: ByteArrayFeeder
  fullName: com.fasterxml.jackson.core.async.ByteArrayFeeder
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.getNonBlockingInputFeeder*
  name: getNonBlockingInputFeeder
  nameWithType: NonBlockingJsonParser.getNonBlockingInputFeeder
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.getNonBlockingInputFeeder
  package: com.fasterxml.jackson.core.json.async
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput*
  name: needMoreInput
  nameWithType: NonBlockingJsonParser.needMoreInput
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.needMoreInput
  package: com.fasterxml.jackson.core.json.async
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.feedInput*
  name: feedInput
  nameWithType: NonBlockingJsonParser.feedInput
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.feedInput
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.endOfInput*
  name: endOfInput
  nameWithType: NonBlockingJsonParser.endOfInput
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.endOfInput
  package: com.fasterxml.jackson.core.json.async
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.releaseBuffered*
  name: releaseBuffered
  nameWithType: NonBlockingJsonParser.releaseBuffered
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.releaseBuffered
  package: com.fasterxml.jackson.core.json.async
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._decodeEscaped*
  name: _decodeEscaped
  nameWithType: NonBlockingJsonParser._decodeEscaped
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._decodeEscaped
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.nextToken*
  name: nextToken
  nameWithType: NonBlockingJsonParser.nextToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.nextToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishToken*
  name: _finishToken
  nameWithType: NonBlockingJsonParser._finishToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishTokenWithEOF*
  name: _finishTokenWithEOF
  nameWithType: NonBlockingJsonParser._finishTokenWithEOF
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishTokenWithEOF
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startUnexpectedValue*
  name: _startUnexpectedValue
  nameWithType: NonBlockingJsonParser._startUnexpectedValue
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startUnexpectedValue
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFalseToken*
  name: _startFalseToken
  nameWithType: NonBlockingJsonParser._startFalseToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFalseToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startTrueToken*
  name: _startTrueToken
  nameWithType: NonBlockingJsonParser._startTrueToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startTrueToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNullToken*
  name: _startNullToken
  nameWithType: NonBlockingJsonParser._startNullToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNullToken
  package: com.fasterxml.jackson.core.json.async
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordToken*
  name: _finishKeywordToken
  nameWithType: NonBlockingJsonParser._finishKeywordToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordTokenWithEOF*
  name: _finishKeywordTokenWithEOF
  nameWithType: NonBlockingJsonParser._finishKeywordTokenWithEOF
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishKeywordTokenWithEOF
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdToken*
  name: _finishNonStdToken
  nameWithType: NonBlockingJsonParser._finishNonStdToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdTokenWithEOF*
  name: _finishNonStdTokenWithEOF
  nameWithType: NonBlockingJsonParser._finishNonStdTokenWithEOF
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNonStdTokenWithEOF
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorToken*
  name: _finishErrorToken
  nameWithType: NonBlockingJsonParser._finishErrorToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorTokenWithEOF*
  name: _finishErrorTokenWithEOF
  nameWithType: NonBlockingJsonParser._finishErrorTokenWithEOF
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishErrorTokenWithEOF
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._reportErrorToken*
  name: _reportErrorToken
  nameWithType: NonBlockingJsonParser._reportErrorToken
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._reportErrorToken
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloatThatStartsWithPeriod*
  name: _startFloatThatStartsWithPeriod
  nameWithType: NonBlockingJsonParser._startFloatThatStartsWithPeriod
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloatThatStartsWithPeriod
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startPositiveNumber*
  name: _startPositiveNumber
  nameWithType: NonBlockingJsonParser._startPositiveNumber
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startPositiveNumber
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNegativeNumber*
  name: _startNegativeNumber
  nameWithType: NonBlockingJsonParser._startNegativeNumber
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNegativeNumber
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNumberLeadingZero*
  name: _startNumberLeadingZero
  nameWithType: NonBlockingJsonParser._startNumberLeadingZero
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startNumberLeadingZero
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberMinus*
  name: _finishNumberMinus
  nameWithType: NonBlockingJsonParser._finishNumberMinus
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberMinus
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingZeroes*
  name: _finishNumberLeadingZeroes
  nameWithType: NonBlockingJsonParser._finishNumberLeadingZeroes
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingZeroes
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingNegZeroes*
  name: _finishNumberLeadingNegZeroes
  nameWithType: NonBlockingJsonParser._finishNumberLeadingNegZeroes
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberLeadingNegZeroes
  package: com.fasterxml.jackson.core.json.async
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberIntegralPart*
  name: _finishNumberIntegralPart
  nameWithType: NonBlockingJsonParser._finishNumberIntegralPart
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishNumberIntegralPart
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat*
  name: _startFloat
  nameWithType: NonBlockingJsonParser._startFloat
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatFraction*
  name: _finishFloatFraction
  nameWithType: NonBlockingJsonParser._finishFloatFraction
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatFraction
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatExponent*
  name: _finishFloatExponent
  nameWithType: NonBlockingJsonParser._finishFloatExponent
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFloatExponent
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFieldWithEscape*
  name: _finishFieldWithEscape
  nameWithType: NonBlockingJsonParser._finishFieldWithEscape
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._finishFieldWithEscape
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startString*
  name: _startString
  nameWithType: NonBlockingJsonParser._startString
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startString
  package: com.fasterxml.jackson.core.json.async
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startAposString*
  name: _startAposString
  nameWithType: NonBlockingJsonParser._startAposString
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startAposString
  package: com.fasterxml.jackson.core.json.async
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
  name: NonBlockingJsonParserBase
  nameWithType: NonBlockingJsonParserBase
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  name: ParserMinimalBase._asciiBytes(String)
  nameWithType: ParserMinimalBase._asciiBytes(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject()
  name: NonBlockingJsonParserBase.getEmbeddedObject()
  nameWithType: NonBlockingJsonParserBase.getEmbeddedObject()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
  name: ParserBase.getTokenCharacterOffset()
  nameWithType: ParserBase.getTokenCharacterOffset()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenCharacterOffset()
- uid: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  name: JsonParser.canReadTypeId()
  nameWithType: JsonParser.canReadTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters()
  name: NonBlockingJsonParserBase.getTextCharacters()
  nameWithType: NonBlockingJsonParserBase.getTextCharacters()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters()
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  name: JsonParser.readBinaryValue(OutputStream)
  nameWithType: JsonParser.readBinaryValue(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  name: ParserMinimalBase.reportOverflowLong()
  nameWithType: ParserMinimalBase.reportOverflowLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
- uid: com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
  name: ParserBase.getDoubleValue()
  nameWithType: ParserBase.getDoubleValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getDoubleValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
  name: ParserBase.convertNumberToBigInteger()
  nameWithType: ParserBase.convertNumberToBigInteger()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase._reportInvalidEOFInValue(JsonToken)
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue(JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  name: ParserMinimalBase.reportOverflowLong(String)
  nameWithType: ParserMinimalBase.reportOverflowLong(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
  name: ParserBase.getCurrentName()
  nameWithType: ParserBase.getCurrentName()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentName()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete(int)
  name: NonBlockingJsonParserBase._valueNonStdNumberComplete(int)
  nameWithType: NonBlockingJsonParserBase._valueNonStdNumberComplete(int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete(int)
- uid: com.fasterxml.jackson.core.base.ParserBase._finishString()
  name: ParserBase._finishString()
  nameWithType: ParserBase._finishString()
  fullName: com.fasterxml.jackson.core.base.ParserBase._finishString()
- uid: com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
  name: ParserBase._checkStdFeatureChanges(int,int)
  nameWithType: ParserBase._checkStdFeatureChanges(int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec()
  name: NonBlockingJsonParserBase.getCodec()
  nameWithType: NonBlockingJsonParserBase.getCodec()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCodec()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  name: ParserMinimalBase.nextValue()
  nameWithType: ParserMinimalBase.nextValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  name: NonBlockingJsonParserBase.getBinaryValue(Base64Variant)
  nameWithType: NonBlockingJsonParserBase.getBinaryValue(Base64Variant)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
  name: ParserBase._decodeBase64Escape(Base64Variant,char,int)
  nameWithType: ParserBase._decodeBase64Escape(Base64Variant,char,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope()
  name: NonBlockingJsonParserBase._startArrayScope()
  nameWithType: NonBlockingJsonParserBase._startArrayScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startArrayScope()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  name: JsonParser.setRequestPayloadOnError(String)
  nameWithType: JsonParser.setRequestPayloadOnError(String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()
  name: NonBlockingJsonParserBase.getText()
  nameWithType: NonBlockingJsonParserBase.getText()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName(int[],int,int)
  name: NonBlockingJsonParserBase._addName(int[],int,int)
  nameWithType: NonBlockingJsonParserBase._addName(int[],int,int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._addName(int[],int,int)
- uid: com.fasterxml.jackson.core.base.ParserBase.getIntValue()
  name: ParserBase.getIntValue()
  nameWithType: ParserBase.getIntValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getIntValue()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  name: JsonParser.<T>readValueAs(TypeReference<?>)
  nameWithType: JsonParser.<T>readValueAs(TypeReference<?>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
- uid: com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
  name: ParserBase.resetAsNaN(String,double)
  nameWithType: ParserBase.resetAsNaN(String,double)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetAsNaN(java.lang.String,double)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  name: ParserMinimalBase._throwInternal()
  nameWithType: ParserMinimalBase._throwInternal()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  name: ParserMinimalBase._wrapError(String,Throwable)
  nameWithType: ParserMinimalBase._wrapError(String,Throwable)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  name: ParserMinimalBase._reportError(String)
  nameWithType: ParserMinimalBase._reportError(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  name: ParserMinimalBase._reportMissingRootWS(int)
  nameWithType: ParserMinimalBase._reportMissingRootWS(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  name: ParserMinimalBase.getLastClearedToken()
  nameWithType: ParserMinimalBase.getLastClearedToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  name: JsonParser.<T>readValuesAs(Class<T>)
  nameWithType: JsonParser.<T>readValuesAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.base.ParserBase._handleEOF()
  name: ParserBase._handleEOF()
  nameWithType: ParserBase._handleEOF()
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleEOF()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(java.io.Writer)
  name: NonBlockingJsonParserBase.getText(Writer)
  nameWithType: NonBlockingJsonParserBase.getText(Writer)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(java.io.Writer)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope()
  name: NonBlockingJsonParserBase._startObjectScope()
  nameWithType: NonBlockingJsonParserBase._startObjectScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._startObjectScope()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
  name: ParserBase.convertNumberToBigDecimal()
  nameWithType: ParserBase.convertNumberToBigDecimal()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  name: ParserMinimalBase.hasCurrentToken()
  nameWithType: ParserMinimalBase.hasCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  name: ParserMinimalBase.clearCurrentToken()
  nameWithType: ParserMinimalBase.clearCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
- uid: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  name: JsonParser.requiresCustomCodec()
  nameWithType: JsonParser.requiresCustomCodec()
  fullName: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync()
  name: NonBlockingJsonParserBase.canParseAsync()
  nameWithType: NonBlockingJsonParserBase.canParseAsync()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.canParseAsync()
- uid: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  name: JsonParser._reportUnsupportedOperation()
  nameWithType: JsonParser._reportUnsupportedOperation()
  fullName: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  name: ParserMinimalBase._reportError(String,Object,Object)
  nameWithType: ParserMinimalBase._reportError(String,Object,Object)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  name: ParserMinimalBase.getValueAsInt()
  nameWithType: ParserMinimalBase.getValueAsInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  name: ParserMinimalBase._reportInvalidEOF(String)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
  name: ParserBase.overrideCurrentName(String)
  nameWithType: ParserBase.overrideCurrentName(String)
  fullName: com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
  name: ParserBase.reset(boolean,int,int,int)
  nameWithType: ParserBase.reset(boolean,int,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)
- uid: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  name: JsonParser.nextBooleanValue()
  nameWithType: JsonParser.nextBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  name: ParserMinimalBase.currentToken()
  nameWithType: ParserMinimalBase.currentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  name: JsonParser.<T>readValueAsTree()
  nameWithType: JsonParser.<T>readValueAsTree()
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  name: ParserMinimalBase.skipChildren()
  nameWithType: ParserMinimalBase.skipChildren()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
- uid: com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: ParserBase.enable(JsonParser.Feature)
  nameWithType: ParserBase.enable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.base.ParserBase.enable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: ParserBase.disable(JsonParser.Feature)
  nameWithType: ParserBase.disable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.base.ParserBase.disable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  name: JsonParser.nextIntValue(int)
  nameWithType: JsonParser.nextIntValue(int)
  fullName: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
- uid: com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
  name: ParserBase.setCurrentValue(Object)
  nameWithType: ParserBase.setCurrentValue(Object)
  fullName: com.fasterxml.jackson.core.base.ParserBase.setCurrentValue(java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
  name: ParserBase.overrideStdFeatures(int,int)
  nameWithType: ParserBase.overrideStdFeatures(int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParser.isEnabled(JsonParser.Feature)
  nameWithType: JsonParser.isEnabled(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  name: ParserMinimalBase.getCurrentToken()
  nameWithType: ParserMinimalBase.getCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
- uid: com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
  name: ParserBase.getCurrentValue()
  nameWithType: ParserBase.getCurrentValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getCurrentValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.getNumberType()
  name: ParserBase.getNumberType()
  nameWithType: ParserBase.getNumberType()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getNumberType()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
  name: ParserBase.getTokenLineNr()
  nameWithType: ParserBase.getTokenLineNr()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenLineNr()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete(com.fasterxml.jackson.core.JsonToken)
  name: NonBlockingJsonParserBase._valueComplete(JsonToken)
  nameWithType: NonBlockingJsonParserBase._valueComplete(JsonToken)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueComplete(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  name: ParserMinimalBase._reportError(String,Object)
  nameWithType: ParserMinimalBase._reportError(String,Object)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  name: ParserMinimalBase.currentTokenId()
  nameWithType: ParserMinimalBase.currentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  name: ParserMinimalBase._decodeBase64(String,ByteArrayBuilder,Base64Variant)
  nameWithType: ParserMinimalBase._decodeBase64(String,ByteArrayBuilder,Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  name: ParserMinimalBase.getValueAsBoolean(boolean)
  nameWithType: ParserMinimalBase.getValueAsBoolean(boolean)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
- uid: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  name: JsonParser.nextLongValue(long)
  nameWithType: JsonParser.nextLongValue(long)
  fullName: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
- uid: com.fasterxml.jackson.core.base.ParserBase.close()
  name: ParserBase.close()
  nameWithType: ParserBase.close()
  fullName: com.fasterxml.jackson.core.base.ParserBase.close()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonParser.getByteValue()
  name: JsonParser.getByteValue()
  nameWithType: JsonParser.getByteValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getByteValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  name: ParserMinimalBase._hasTextualNull(String)
  nameWithType: ParserMinimalBase._hasTextualNull(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters()
  name: NonBlockingJsonParserBase.hasTextCharacters()
  nameWithType: NonBlockingJsonParserBase.hasTextCharacters()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters()
- uid: com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
  name: ParserBase._eofAsNextChar()
  nameWithType: ParserBase._eofAsNextChar()
  fullName: com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase._reportInvalidEOF(String,JsonToken)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope()
  name: NonBlockingJsonParserBase._closeArrayScope()
  nameWithType: NonBlockingJsonParserBase._closeArrayScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope()
- uid: com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
  name: ParserBase.resetInt(boolean,int)
  nameWithType: ParserBase.resetInt(boolean,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetInt(boolean,int)
- uid: com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
  name: ParserBase._parseNumericValue(int)
  nameWithType: ParserBase._parseNumericValue(int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt(int,java.lang.String)
  name: NonBlockingJsonParserBase._valueCompleteInt(int,String)
  nameWithType: NonBlockingJsonParserBase._valueCompleteInt(int,String)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueCompleteInt(int,java.lang.String)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  name: NonBlockingJsonParserBase.setCodec(ObjectCodec)
  nameWithType: NonBlockingJsonParserBase.setCodec(ObjectCodec)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.setCodec(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  name: ParserMinimalBase.getCurrentTokenId()
  nameWithType: ParserMinimalBase.getCurrentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
- uid: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  name: JsonParser.configure(JsonParser.Feature,boolean)
  nameWithType: JsonParser.configure(JsonParser.Feature,boolean)
  fullName: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.hasToken(JsonToken)
  nameWithType: ParserMinimalBase.hasToken(JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
  name: ParserBase.setFeatureMask(int)
  nameWithType: ParserBase.setFeatureMask(int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete(java.lang.String)
  name: NonBlockingJsonParserBase._fieldComplete(String)
  nameWithType: NonBlockingJsonParserBase._fieldComplete(String)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._fieldComplete(java.lang.String)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar(int)
  name: NonBlockingJsonParserBase._reportInvalidChar(int)
  nameWithType: NonBlockingJsonParserBase._reportInvalidChar(int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  name: ParserMinimalBase.reportOverflowInt(String)
  nameWithType: ParserMinimalBase.reportOverflowInt(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
  name: ParserBase._getSourceReference()
  nameWithType: ParserBase._getSourceReference()
  fullName: com.fasterxml.jackson.core.base.ParserBase._getSourceReference()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()
  name: NonBlockingJsonParserBase.getInputSource()
  nameWithType: NonBlockingJsonParserBase.getInputSource()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken()
  name: NonBlockingJsonParserBase._eofAsNextToken()
  nameWithType: NonBlockingJsonParserBase._eofAsNextToken()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.reportOverflowLong(String,JsonToken)
  nameWithType: ParserMinimalBase.reportOverflowLong(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  name: ParserMinimalBase.hasTokenId(int)
  nameWithType: ParserMinimalBase.hasTokenId(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  name: ParserMinimalBase.reportInvalidNumber(String)
  nameWithType: ParserMinimalBase.reportInvalidNumber(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  name: JsonParser.getValueAsBoolean()
  nameWithType: JsonParser.getValueAsBoolean()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
- uid: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
  name: ParserBase.reportInvalidBase64Char(Base64Variant,int,int,String)
  nameWithType: ParserBase.reportInvalidBase64Char(Base64Variant,int,int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  name: JsonParser.nextFieldName(SerializableString)
  nameWithType: JsonParser.nextFieldName(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
  name: ParserBase.getNumberValue()
  nameWithType: ParserBase.getNumberValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getNumberValue()
- uid: com.fasterxml.jackson.core.JsonParser.getShortValue()
  name: JsonParser.getShortValue()
  nameWithType: JsonParser.getShortValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getShortValue()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  name: JsonParser.setRequestPayloadOnError(byte[],String)
  nameWithType: JsonParser.setRequestPayloadOnError(byte[],String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  name: ParserMinimalBase._reportUnexpectedChar(int,String)
  nameWithType: ParserMinimalBase._reportUnexpectedChar(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
  name: ParserBase._reportTooLongIntegral(int,String)
  nameWithType: ParserBase._reportTooLongIntegral(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(int,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  name: JsonParser._constructError(String)
  nameWithType: JsonParser._constructError(String)
  fullName: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  name: JsonParser.getFormatFeatures()
  nameWithType: JsonParser.getFormatFeatures()
  fullName: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
- uid: com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
  name: ParserBase.loadMoreGuaranteed()
  nameWithType: ParserBase.loadMoreGuaranteed()
  fullName: com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  name: ParserMinimalBase._reportInvalidEOFInValue()
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
- uid: com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
  name: ParserBase._getByteArrayBuilder()
  nameWithType: ParserBase._getByteArrayBuilder()
  fullName: com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder()
- uid: com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
  name: ParserBase.resetFloat(boolean,int,int,int)
  nameWithType: ParserBase.resetFloat(boolean,int,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.resetFloat(boolean,int,int,int)
- uid: com.fasterxml.jackson.core.JsonParser.getObjectId()
  name: JsonParser.getObjectId()
  nameWithType: JsonParser.getObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.getObjectId()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  name: ParserMinimalBase._getCharDesc(int)
  nameWithType: ParserMinimalBase._getCharDesc(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  name: ParserMinimalBase.getValueAsInt(int)
  nameWithType: ParserMinimalBase.getValueAsInt(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2(com.fasterxml.jackson.core.JsonToken)
  name: NonBlockingJsonParserBase._getText2(JsonToken)
  nameWithType: NonBlockingJsonParserBase._getText2(JsonToken)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  name: ParserMinimalBase._reportInvalidEOF()
  nameWithType: ParserMinimalBase._reportInvalidEOF()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int,int)
  name: NonBlockingJsonParserBase._findName(int,int,int,int)
  nameWithType: NonBlockingJsonParserBase._findName(int,int,int,int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int,int)
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
  name: ParserBase._decodeBase64Escape(Base64Variant,int,int)
  nameWithType: ParserBase._decodeBase64Escape(Base64Variant,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  name: ParserMinimalBase._longNumberDesc(String)
  nameWithType: ParserMinimalBase._longNumberDesc(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  name: ParserMinimalBase._longIntegerDesc(String)
  nameWithType: ParserMinimalBase._longIntegerDesc(String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  name: JsonParser.getBooleanValue()
  nameWithType: JsonParser.getBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
- uid: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  name: JsonParser.canReadObjectId()
  nameWithType: JsonParser.canReadObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
- uid: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  name: JsonParser.getBinaryValue()
  nameWithType: JsonParser.getBinaryValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int)
  name: NonBlockingJsonParserBase._reportInvalidOther(int)
  nameWithType: NonBlockingJsonParserBase._reportInvalidOther(int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  name: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class<?>)
  nameWithType: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class<?>)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  name: JsonParser.isEnabled(StreamReadFeature)
  nameWithType: JsonParser.isEnabled(StreamReadFeature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
- uid: com.fasterxml.jackson.core.base.ParserBase.getLongValue()
  name: ParserBase.getLongValue()
  nameWithType: ParserBase.getLongValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getLongValue()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput()
  name: NonBlockingJsonParserBase._closeInput()
  nameWithType: NonBlockingJsonParserBase._closeInput()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeInput()
- uid: com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
  name: ParserBase.getTokenColumnNr()
  nameWithType: ParserBase.getTokenColumnNr()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope()
  name: NonBlockingJsonParserBase._closeObjectScope()
  nameWithType: NonBlockingJsonParserBase._closeObjectScope()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope()
- uid: com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
  name: ParserBase._parseIntValue()
  nameWithType: ParserBase._parseIntValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase._parseIntValue()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  name: ParserMinimalBase.getValueAsLong()
  nameWithType: ParserMinimalBase.getValueAsLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  name: ParserMinimalBase.isExpectedStartArrayToken()
  nameWithType: ParserMinimalBase.isExpectedStartArrayToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
- uid: com.fasterxml.jackson.core.JsonParser.currentName()
  name: JsonParser.currentName()
  nameWithType: JsonParser.currentName()
  fullName: com.fasterxml.jackson.core.JsonParser.currentName()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int,int)
  name: NonBlockingJsonParserBase._reportInvalidOther(int,int)
  nameWithType: NonBlockingJsonParserBase._reportInvalidOther(int,int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidOther(int,int)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  name: JsonParser.getValueAsDouble()
  nameWithType: JsonParser.getValueAsDouble()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
- uid: com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
  name: ParserBase._throwUnquotedSpace(int,String)
  nameWithType: ParserBase._throwUnquotedSpace(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserBase._throwUnquotedSpace(int,java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
  name: ParserBase.getDecimalValue()
  nameWithType: ParserBase.getDecimalValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad(int,int)
  name: NonBlockingJsonParserBase._padLastQuad(int,int)
  nameWithType: NonBlockingJsonParserBase._padLastQuad(int,int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._padLastQuad(int,int)
- uid: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
  name: ParserBase.reportInvalidBase64Char(Base64Variant,int,int)
  nameWithType: ParserBase.reportInvalidBase64Char(Base64Variant,int,int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int)
- uid: com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
  name: ParserBase._validJsonTokenList()
  nameWithType: ParserBase._validJsonTokenList()
  fullName: com.fasterxml.jackson.core.base.ParserBase._validJsonTokenList()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int)
  name: NonBlockingJsonParserBase._findName(int,int,int)
  nameWithType: NonBlockingJsonParserBase._findName(int,int,int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int)
- uid: com.fasterxml.jackson.core.JsonParser.getTypeId()
  name: JsonParser.getTypeId()
  nameWithType: JsonParser.getTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.getTypeId()
- uid: com.fasterxml.jackson.core.base.ParserBase.version()
  name: ParserBase.version()
  nameWithType: ParserBase.version()
  fullName: com.fasterxml.jackson.core.base.ParserBase.version()
- uid: com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
  name: ParserBase._handleUnrecognizedCharacterEscape(char)
  nameWithType: ParserBase._handleUnrecognizedCharacterEscape(char)
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleUnrecognizedCharacterEscape(char)
- uid: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.canUseSchema(FormatSchema)
  nameWithType: JsonParser.canUseSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.base.ParserBase.isClosed()
  name: ParserBase.isClosed()
  nameWithType: ParserBase.isClosed()
  fullName: com.fasterxml.jackson.core.base.ParserBase.isClosed()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken(int)
  name: NonBlockingJsonParserBase._nonStdToken(int)
  nameWithType: NonBlockingJsonParserBase._nonStdToken(int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._nonStdToken(int)
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  name: JsonParser.<T>readValueAs(Class<T>)
  nameWithType: JsonParser.<T>readValueAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation()
  name: NonBlockingJsonParserBase._updateTokenLocation()
  nameWithType: NonBlockingJsonParserBase._updateTokenLocation()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._updateTokenLocation()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  name: JsonParser.setRequestPayloadOnError(RequestPayload)
  nameWithType: JsonParser.setRequestPayloadOnError(RequestPayload)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
- uid: com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
  name: ParserBase.getBigIntegerValue()
  nameWithType: ParserBase.getBigIntegerValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
  name: ParserBase.convertNumberToDouble()
  nameWithType: ParserBase.convertNumberToDouble()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble()
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName()
  name: JsonParser.nextFieldName()
  nameWithType: JsonParser.nextFieldName()
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.JsonParser._codec()
  name: JsonParser._codec()
  nameWithType: JsonParser._codec()
  fullName: com.fasterxml.jackson.core.JsonParser._codec()
- uid: com.fasterxml.jackson.core.JsonParser.nextTextValue()
  name: JsonParser.nextTextValue()
  nameWithType: JsonParser.nextTextValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextTextValue()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int)
  name: NonBlockingJsonParserBase._findName(int,int)
  nameWithType: NonBlockingJsonParserBase._findName(int,int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  name: ParserMinimalBase._ascii(byte[])
  nameWithType: ParserMinimalBase._ascii(byte[])
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
- uid: com.fasterxml.jackson.core.JsonParser.finishToken()
  name: JsonParser.finishToken()
  nameWithType: JsonParser.finishToken()
  fullName: com.fasterxml.jackson.core.JsonParser.finishToken()
- uid: com.fasterxml.jackson.core.base.ParserBase.loadMore()
  name: ParserBase.loadMore()
  nameWithType: ParserBase.loadMore()
  fullName: com.fasterxml.jackson.core.base.ParserBase.loadMore()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  name: ParserMinimalBase.reportUnexpectedNumberChar(int,String)
  nameWithType: ParserMinimalBase.reportUnexpectedNumberChar(int,String)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  name: JsonParser.getNonBlockingInputFeeder()
  nameWithType: JsonParser.getNonBlockingInputFeeder()
  fullName: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  name: ParserMinimalBase._throwInvalidSpace(int)
  nameWithType: ParserMinimalBase._throwInvalidSpace(int)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests()
  name: NonBlockingJsonParserBase.symbolTableForTests()
  nameWithType: NonBlockingJsonParserBase.symbolTableForTests()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.symbolTableForTests()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers()
  name: NonBlockingJsonParserBase._releaseBuffers()
  nameWithType: NonBlockingJsonParserBase._releaseBuffers()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._releaseBuffers()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  name: ParserMinimalBase.reportOverflowInt()
  nameWithType: ParserMinimalBase.reportOverflowInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
  name: ParserBase.convertNumberToLong()
  nameWithType: ParserBase.convertNumberToLong()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset()
  name: NonBlockingJsonParserBase.getTextOffset()
  nameWithType: NonBlockingJsonParserBase.getTextOffset()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation()
  name: NonBlockingJsonParserBase.getCurrentLocation()
  nameWithType: NonBlockingJsonParserBase.getCurrentLocation()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getCurrentLocation()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered(java.io.OutputStream)
  name: NonBlockingJsonParserBase.releaseBuffered(OutputStream)
  nameWithType: NonBlockingJsonParserBase.releaseBuffered(OutputStream)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.releaseBuffered(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
  name: ParserBase.getParsingContext()
  nameWithType: ParserBase.getParsingContext()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getParsingContext()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  name: ParserMinimalBase.nextToken()
  nameWithType: ParserMinimalBase.nextToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength()
  name: NonBlockingJsonParserBase.getTextLength()
  nameWithType: NonBlockingJsonParserBase.getTextLength()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength()
- uid: com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
  name: ParserBase.growArrayBy(int[],int)
  nameWithType: ParserBase.growArrayBy(int[],int)
  fullName: com.fasterxml.jackson.core.base.ParserBase.growArrayBy(int[],int)
- uid: com.fasterxml.jackson.core.JsonParser.getSchema()
  name: JsonParser.getSchema()
  nameWithType: JsonParser.getSchema()
  fullName: com.fasterxml.jackson.core.JsonParser.getSchema()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  name: ParserMinimalBase._constructError(String,Throwable)
  nameWithType: ParserMinimalBase._constructError(String,Throwable)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  name: ParserMinimalBase.reportOverflowInt(String,JsonToken)
  nameWithType: ParserMinimalBase.reportOverflowInt(String,JsonToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
  name: ParserBase._reportMismatchedEndMarker(int,char)
  nameWithType: ParserBase._reportMismatchedEndMarker(int,char)
  fullName: com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  name: JsonParser.<T>readValuesAs(TypeReference<T>)
  nameWithType: JsonParser.<T>readValuesAs(TypeReference<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
- uid: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  name: JsonParser.overrideFormatFeatures(int,int)
  nameWithType: JsonParser.overrideFormatFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  name: ParserMinimalBase.isExpectedStartObjectToken()
  nameWithType: ParserMinimalBase.isExpectedStartObjectToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(java.lang.String)
  name: NonBlockingJsonParserBase.getValueAsString(String)
  nameWithType: NonBlockingJsonParserBase.getValueAsString(String)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(java.lang.String)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  name: ParserMinimalBase.getValueAsDouble(double)
  nameWithType: ParserMinimalBase.getValueAsDouble(double)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
- uid: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  name: JsonParser.getFeatureMask()
  nameWithType: JsonParser.getFeatureMask()
  fullName: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
- uid: com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
  name: ParserBase.convertNumberToInt()
  nameWithType: ParserBase.convertNumberToInt()
  fullName: com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  name: ParserMinimalBase.getValueAsLong(long)
  nameWithType: ParserMinimalBase.getValueAsLong(long)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
- uid: com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
  name: ParserBase.getFloatValue()
  nameWithType: ParserBase.getFloatValue()
  fullName: com.fasterxml.jackson.core.base.ParserBase.getFloatValue()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation()
  name: NonBlockingJsonParserBase.getTokenLocation()
  nameWithType: NonBlockingJsonParserBase.getTokenLocation()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTokenLocation()
- uid: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.setSchema(FormatSchema)
  nameWithType: JsonParser.setSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
  name: ParserBase._validJsonValueList()
  nameWithType: ParserBase._validJsonValueList()
  fullName: com.fasterxml.jackson.core.base.ParserBase._validJsonValueList()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial(int)
  name: NonBlockingJsonParserBase._reportInvalidInitial(int)
  nameWithType: NonBlockingJsonParserBase._reportInvalidInitial(int)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidInitial(int)
- uid: com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
  name: ParserBase._handleBase64MissingPadding(Base64Variant)
  nameWithType: ParserBase._handleBase64MissingPadding(Base64Variant)
  fullName: com.fasterxml.jackson.core.base.ParserBase._handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant)
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString()
  name: NonBlockingJsonParserBase.getValueAsString()
  nameWithType: NonBlockingJsonParserBase.getValueAsString()
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString()
- uid: com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
  name: ParserBase._decodeEscaped()
  nameWithType: ParserBase._decodeEscaped()
  fullName: com.fasterxml.jackson.core.base.ParserBase._decodeEscaped()
- uid: com.fasterxml.jackson.core.base.ParserBase.isNaN()
  name: ParserBase.isNaN()
  nameWithType: ParserBase.isNaN()
  fullName: com.fasterxml.jackson.core.base.ParserBase.isNaN()
- uid: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  name: NonBlockingJsonParserBase.readBinaryValue(Base64Variant,OutputStream)
  nameWithType: NonBlockingJsonParserBase.readBinaryValue(Base64Variant,OutputStream)
  fullName: com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  name: JsonParser.releaseBuffered(Writer)
  nameWithType: JsonParser.releaseBuffered(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
- uid: com.fasterxml.jackson.core.JsonParser.
  name: JsonParser.
  nameWithType: JsonParser.
  fullName: com.fasterxml.jackson.core.JsonParser.
- uid: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValueAs(TypeReference
  nameWithType: T>readValueAs(TypeReference
  fullName: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: T>readValuesAs(java.lang.Class
  name: T>readValuesAs(Class
  nameWithType: T>readValuesAs(Class
  fullName: T>readValuesAs(java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>readValueAsTree()
  name: T>readValueAsTree()
  nameWithType: T>readValueAsTree()
  fullName: T>readValueAsTree()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class
  name: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class
  nameWithType: ParserMinimalBase._reportInputCoercion(String,JsonToken,Class
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class
- uid: T>readValueAs(java.lang.Class
  name: T>readValueAs(Class
  nameWithType: T>readValueAs(Class
  fullName: T>readValueAs(java.lang.Class
- uid: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValuesAs(TypeReference
  nameWithType: T>readValuesAs(TypeReference
  fullName: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
