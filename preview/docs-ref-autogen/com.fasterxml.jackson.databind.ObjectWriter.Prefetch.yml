### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ObjectWriter.Prefetch"
fullName: "com.fasterxml.jackson.databind.ObjectWriter.Prefetch"
name: "ObjectWriter.Prefetch"
nameWithType: "ObjectWriter.Prefetch"
summary: "As a minor optimization, we will make an effort to pre-fetch a serializer, or at least relevant `TypeSerializer`, if given enough information."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static final class ObjectWriter.Prefetch implements Serializable"
fields:
- "com.fasterxml.jackson.databind.ObjectWriter.Prefetch.empty"
methods:
- "com.fasterxml.jackson.databind.ObjectWriter.Prefetch.forRootType(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getTypeSerializer()"
- "com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getValueSerializer()"
- "com.fasterxml.jackson.databind.ObjectWriter.Prefetch.hasSerializer()"
- "com.fasterxml.jackson.databind.ObjectWriter.Prefetch.serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
