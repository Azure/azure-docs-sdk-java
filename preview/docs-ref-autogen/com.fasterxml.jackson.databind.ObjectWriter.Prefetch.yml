### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  id: Prefetch
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.ObjectWriter.Prefetch.empty
  - com.fasterxml.jackson.databind.ObjectWriter.Prefetch.forRootType(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getTypeSerializer()
  - com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getValueSerializer()
  - com.fasterxml.jackson.databind.ObjectWriter.Prefetch.hasSerializer()
  - com.fasterxml.jackson.databind.ObjectWriter.Prefetch.serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)
  langs:
  - java
  name: ObjectWriter.Prefetch
  nameWithType: ObjectWriter.Prefetch
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  type: Class
  package: com.fasterxml.jackson.databind
  summary: As a minor optimization, we will make an effort to pre-fetch a serializer, or at least relevant `TypeSerializer`, if given enough information.
  syntax:
    content: public static final class ObjectWriter.Prefetch implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.Prefetch(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: Prefetch(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  langs:
  - java
  name: Prefetch(JavaType rootT, JsonSerializer<Object> ser, TypeSerializer typeSer)
  nameWithType: ObjectWriter.Prefetch.Prefetch(JavaType rootT, JsonSerializer<Object> ser, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.Prefetch(JavaType rootT, JsonSerializer<Object> ser, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.Prefetch*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: private Prefetch(JavaType rootT, JsonSerializer<Object> ser, TypeSerializer typeSer)
    parameters:
    - id: rootT
      type: com.fasterxml.jackson.databind.JavaType
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.empty
  id: empty
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  langs:
  - java
  name: empty
  nameWithType: ObjectWriter.Prefetch.empty
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.empty
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static final ObjectWriter.Prefetch empty
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.forRootType(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.JavaType)
  id: forRootType(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  langs:
  - java
  name: forRootType(ObjectWriter parent, JavaType newType)
  nameWithType: ObjectWriter.Prefetch.forRootType(ObjectWriter parent, JavaType newType)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.forRootType(ObjectWriter parent, JavaType newType)
  overload: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.forRootType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter.Prefetch forRootType(ObjectWriter parent, JavaType newType)
    parameters:
    - id: parent
      type: com.fasterxml.jackson.databind.ObjectWriter
    - id: newType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getTypeSerializer()
  id: getTypeSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  langs:
  - java
  name: getTypeSerializer()
  nameWithType: ObjectWriter.Prefetch.getTypeSerializer()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getTypeSerializer()
  overload: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getTypeSerializer*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final TypeSerializer getTypeSerializer()
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getValueSerializer()
  id: getValueSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  langs:
  - java
  name: getValueSerializer()
  nameWithType: ObjectWriter.Prefetch.getValueSerializer()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getValueSerializer()
  overload: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getValueSerializer*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public final JsonSerializer<Object> getValueSerializer()
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.hasSerializer()
  id: hasSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  langs:
  - java
  name: hasSerializer()
  nameWithType: ObjectWriter.Prefetch.hasSerializer()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.hasSerializer()
  overload: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.hasSerializer*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean hasSerializer()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  langs:
  - java
  name: serialize(JsonGenerator gen, Object value, DefaultSerializerProvider prov)
  nameWithType: ObjectWriter.Prefetch.serialize(JsonGenerator gen, Object value, DefaultSerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.serialize(JsonGenerator gen, Object value, DefaultSerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.serialize*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void serialize(JsonGenerator gen, Object value, DefaultSerializerProvider prov)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: value
      type: java.lang.Object
    - id: prov
      type: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.Prefetch*
  name: Prefetch
  nameWithType: ObjectWriter.Prefetch.Prefetch
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.Prefetch
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter
  name: ObjectWriter
  nameWithType: ObjectWriter
  fullName: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.forRootType*
  name: forRootType
  nameWithType: ObjectWriter.Prefetch.forRootType
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.forRootType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getValueSerializer*
  name: getValueSerializer
  nameWithType: ObjectWriter.Prefetch.getValueSerializer
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getValueSerializer
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getTypeSerializer*
  name: getTypeSerializer
  nameWithType: ObjectWriter.Prefetch.getTypeSerializer
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.getTypeSerializer
  package: com.fasterxml.jackson.databind
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.hasSerializer*
  name: hasSerializer
  nameWithType: ObjectWriter.Prefetch.hasSerializer
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.hasSerializer
  package: com.fasterxml.jackson.databind
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
  name: DefaultSerializerProvider
  nameWithType: DefaultSerializerProvider
  fullName: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.serialize*
  name: serialize
  nameWithType: ObjectWriter.Prefetch.serialize
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch.serialize
  package: com.fasterxml.jackson.databind
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
