### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.specialized.DataLakeLeaseClientBuilder.leaseId*"
fullName: "com.azure.storage.file.datalake.specialized.DataLakeLeaseClientBuilder.leaseId"
name: "leaseId"
nameWithType: "DataLakeLeaseClientBuilder.leaseId"
members:
- uid: "com.azure.storage.file.datalake.specialized.DataLakeLeaseClientBuilder.leaseId(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.specialized.DataLakeLeaseClientBuilder.leaseId(String leaseId)"
  name: "leaseId(String leaseId)"
  nameWithType: "DataLakeLeaseClientBuilder.leaseId(String leaseId)"
  summary: "Sets the identifier for the lease.\n\nIf a lease ID isn't set then a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUID\"></xref> will be used."
  parameters:
  - description: "Identifier for the lease."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeLeaseClientBuilder leaseId(String leaseId)"
  returns:
    description: "the updated DataLakeLeaseClientBuilder object"
    type: "<xref href=\"com.azure.storage.file.datalake.specialized.DataLakeLeaseClientBuilder?alt=com.azure.storage.file.datalake.specialized.DataLakeLeaseClientBuilder&text=DataLakeLeaseClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.specialized"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
