### YamlMime:JavaMember
uid: "com.azure.resourcemanager.azurestack.implementation.CustomerSubscriptionImpl.withExistingRegistration*"
fullName: "com.azure.resourcemanager.azurestack.implementation.CustomerSubscriptionImpl.withExistingRegistration"
name: "withExistingRegistration"
nameWithType: "CustomerSubscriptionImpl.withExistingRegistration"
members:
- uid: "com.azure.resourcemanager.azurestack.implementation.CustomerSubscriptionImpl.withExistingRegistration(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.azurestack.implementation.CustomerSubscriptionImpl.withExistingRegistration(String resourceGroup, String registrationName)"
  name: "withExistingRegistration(String resourceGroup, String registrationName)"
  nameWithType: "CustomerSubscriptionImpl.withExistingRegistration(String resourceGroup, String registrationName)"
  summary: "Specifies resourceGroup, registrationName."
  parameters:
  - name: "resourceGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "registrationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomerSubscriptionImpl withExistingRegistration(String resourceGroup, String registrationName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.azurestack.implementation.CustomerSubscriptionImpl?alt=com.azure.resourcemanager.azurestack.implementation.CustomerSubscriptionImpl&text=CustomerSubscriptionImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.azurestack.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-azurestack:1.0.0-beta.1
