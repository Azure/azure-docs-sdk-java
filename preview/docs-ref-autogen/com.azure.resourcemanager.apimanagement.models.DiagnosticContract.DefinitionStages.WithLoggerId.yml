### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.DiagnosticContract.DefinitionStages.WithLoggerId"
fullName: "com.azure.resourcemanager.apimanagement.models.DiagnosticContract.DefinitionStages.WithLoggerId"
name: "DiagnosticContract.DefinitionStages.WithLoggerId"
nameWithType: "DiagnosticContract.DefinitionStages.WithLoggerId"
summary: "The stage of the DiagnosticContract definition allowing to specify loggerId."
syntax: "public static interface DiagnosticContract.DefinitionStages.WithLoggerId"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.DiagnosticContract.DefinitionStages.WithLoggerId.withLoggerId(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.DiagnosticContract.DefinitionStages.WithLoggerId.withLoggerId(String loggerId)"
  name: "withLoggerId(String loggerId)"
  nameWithType: "DiagnosticContract.DefinitionStages.WithLoggerId.withLoggerId(String loggerId)"
  summary: "Specifies the loggerId property: Resource Id of a target logger.."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource Id of a target logger."
    name: "loggerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DiagnosticContract.DefinitionStages.WithCreate withLoggerId(String loggerId)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.DiagnosticContract.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.apimanagement.models.DiagnosticContract.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
