### YamlMime:JavaType
uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner"
fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner"
name: "PrivateCloudInner"
nameWithType: "PrivateCloudInner"
summary: "A private cloud resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PrivateCloudInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.PrivateCloudInner()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.PrivateCloudInner()"
  name: "PrivateCloudInner()"
  nameWithType: "PrivateCloudInner.PrivateCloudInner()"
  syntax: "public PrivateCloudInner()"
methods:
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.availability()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.availability()"
  name: "availability()"
  nameWithType: "PrivateCloudInner.availability()"
  summary: "Get the availability property: Properties describing how the cloud is distributed across availability zones."
  syntax: "public AvailabilityProperties availability()"
  desc: "Get the availability property: Properties describing how the cloud is distributed across availability zones."
  returns:
    description: "the availability value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.AvailabilityProperties?alt=com.azure.resourcemanager.avs.models.AvailabilityProperties&text=AvailabilityProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.circuit()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.circuit()"
  name: "circuit()"
  nameWithType: "PrivateCloudInner.circuit()"
  summary: "Get the circuit property: An Express<wbr>Route Circuit."
  syntax: "public Circuit circuit()"
  desc: "Get the circuit property: An ExpressRoute Circuit."
  returns:
    description: "the circuit value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.encryption()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.encryption()"
  name: "encryption()"
  nameWithType: "PrivateCloudInner.encryption()"
  summary: "Get the encryption property: Customer managed key encryption, can be enabled or disabled."
  syntax: "public Encryption encryption()"
  desc: "Get the encryption property: Customer managed key encryption, can be enabled or disabled."
  returns:
    description: "the encryption value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Encryption?alt=com.azure.resourcemanager.avs.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.endpoints()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.endpoints()"
  name: "endpoints()"
  nameWithType: "PrivateCloudInner.endpoints()"
  summary: "Get the endpoints property: The endpoints."
  syntax: "public Endpoints endpoints()"
  desc: "Get the endpoints property: The endpoints."
  returns:
    description: "the endpoints value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Endpoints?alt=com.azure.resourcemanager.avs.models.Endpoints&text=Endpoints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.externalCloudLinks()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.externalCloudLinks()"
  name: "externalCloudLinks()"
  nameWithType: "PrivateCloudInner.externalCloudLinks()"
  summary: "Get the external<wbr>Cloud<wbr>Links property: Array of cloud link IDs from other clouds that connect to this one."
  syntax: "public List<String> externalCloudLinks()"
  desc: "Get the externalCloudLinks property: Array of cloud link IDs from other clouds that connect to this one."
  returns:
    description: "the externalCloudLinks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.identity()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.identity()"
  name: "identity()"
  nameWithType: "PrivateCloudInner.identity()"
  summary: "Get the identity property: The identity of the private cloud, if configured."
  syntax: "public PrivateCloudIdentity identity()"
  desc: "Get the identity property: The identity of the private cloud, if configured."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.PrivateCloudIdentity?alt=com.azure.resourcemanager.avs.models.PrivateCloudIdentity&text=PrivateCloudIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.identitySources()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.identitySources()"
  name: "identitySources()"
  nameWithType: "PrivateCloudInner.identitySources()"
  summary: "Get the identity<wbr>Sources property: v<wbr>Center Single Sign On Identity Sources."
  syntax: "public List<IdentitySource> identitySources()"
  desc: "Get the identitySources property: vCenter Single Sign On Identity Sources."
  returns:
    description: "the identitySources value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.avs.models.IdentitySource?alt=com.azure.resourcemanager.avs.models.IdentitySource&text=IdentitySource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.internet()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.internet()"
  name: "internet()"
  nameWithType: "PrivateCloudInner.internet()"
  summary: "Get the internet property: Connectivity to internet is enabled or disabled."
  syntax: "public InternetEnum internet()"
  desc: "Get the internet property: Connectivity to internet is enabled or disabled."
  returns:
    description: "the internet value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.InternetEnum?alt=com.azure.resourcemanager.avs.models.InternetEnum&text=InternetEnum\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.managementCluster()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.managementCluster()"
  name: "managementCluster()"
  nameWithType: "PrivateCloudInner.managementCluster()"
  summary: "Get the management<wbr>Cluster property: The default cluster used for management."
  syntax: "public ManagementCluster managementCluster()"
  desc: "Get the managementCluster property: The default cluster used for management."
  returns:
    description: "the managementCluster value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.ManagementCluster?alt=com.azure.resourcemanager.avs.models.ManagementCluster&text=ManagementCluster\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.managementNetwork()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.managementNetwork()"
  name: "managementNetwork()"
  nameWithType: "PrivateCloudInner.managementNetwork()"
  summary: "Get the management<wbr>Network property: Network used to access v<wbr>Center Server and NSX-T Manager."
  syntax: "public String managementNetwork()"
  desc: "Get the managementNetwork property: Network used to access vCenter Server and NSX-T Manager."
  returns:
    description: "the managementNetwork value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.networkBlock()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.networkBlock()"
  name: "networkBlock()"
  nameWithType: "PrivateCloudInner.networkBlock()"
  summary: "Get the network<wbr>Block property: The block of addresses should be unique across VNet in your subscription as well as on-premise."
  syntax: "public String networkBlock()"
  desc: "Get the networkBlock property: The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22."
  returns:
    description: "the networkBlock value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.nsxtCertificateThumbprint()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.nsxtCertificateThumbprint()"
  name: "nsxtCertificateThumbprint()"
  nameWithType: "PrivateCloudInner.nsxtCertificateThumbprint()"
  summary: "Get the nsxt<wbr>Certificate<wbr>Thumbprint property: Thumbprint of the NSX-T Manager SSL certificate."
  syntax: "public String nsxtCertificateThumbprint()"
  desc: "Get the nsxtCertificateThumbprint property: Thumbprint of the NSX-T Manager SSL certificate."
  returns:
    description: "the nsxtCertificateThumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.nsxtPassword()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.nsxtPassword()"
  name: "nsxtPassword()"
  nameWithType: "PrivateCloudInner.nsxtPassword()"
  summary: "Get the nsxt<wbr>Password property: Optionally, set the NSX-T Manager password when the private cloud is created."
  syntax: "public String nsxtPassword()"
  desc: "Get the nsxtPassword property: Optionally, set the NSX-T Manager password when the private cloud is created."
  returns:
    description: "the nsxtPassword value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.provisioningNetwork()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.provisioningNetwork()"
  name: "provisioningNetwork()"
  nameWithType: "PrivateCloudInner.provisioningNetwork()"
  summary: "Get the provisioning<wbr>Network property: Used for virtual machine cold migration, cloning, and snapshot migration."
  syntax: "public String provisioningNetwork()"
  desc: "Get the provisioningNetwork property: Used for virtual machine cold migration, cloning, and snapshot migration."
  returns:
    description: "the provisioningNetwork value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.provisioningState()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PrivateCloudInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state."
  syntax: "public PrivateCloudProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioning state."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.PrivateCloudProvisioningState?alt=com.azure.resourcemanager.avs.models.PrivateCloudProvisioningState&text=PrivateCloudProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.secondaryCircuit()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.secondaryCircuit()"
  name: "secondaryCircuit()"
  nameWithType: "PrivateCloudInner.secondaryCircuit()"
  summary: "Get the secondary<wbr>Circuit property: A secondary express<wbr>Route circuit from a separate AZ."
  syntax: "public Circuit secondaryCircuit()"
  desc: "Get the secondaryCircuit property: A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud."
  returns:
    description: "the secondaryCircuit value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.sku()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.sku()"
  name: "sku()"
  nameWithType: "PrivateCloudInner.sku()"
  summary: "Get the sku property: The private cloud SKU."
  syntax: "public Sku sku()"
  desc: "Get the sku property: The private cloud SKU."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Sku?alt=com.azure.resourcemanager.avs.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.validate()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.validate()"
  name: "validate()"
  nameWithType: "PrivateCloudInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.vcenterCertificateThumbprint()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.vcenterCertificateThumbprint()"
  name: "vcenterCertificateThumbprint()"
  nameWithType: "PrivateCloudInner.vcenterCertificateThumbprint()"
  summary: "Get the vcenter<wbr>Certificate<wbr>Thumbprint property: Thumbprint of the v<wbr>Center Server SSL certificate."
  syntax: "public String vcenterCertificateThumbprint()"
  desc: "Get the vcenterCertificateThumbprint property: Thumbprint of the vCenter Server SSL certificate."
  returns:
    description: "the vcenterCertificateThumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.vcenterPassword()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.vcenterPassword()"
  name: "vcenterPassword()"
  nameWithType: "PrivateCloudInner.vcenterPassword()"
  summary: "Get the vcenter<wbr>Password property: Optionally, set the v<wbr>Center admin password when the private cloud is created."
  syntax: "public String vcenterPassword()"
  desc: "Get the vcenterPassword property: Optionally, set the vCenter admin password when the private cloud is created."
  returns:
    description: "the vcenterPassword value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.vmotionNetwork()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.vmotionNetwork()"
  name: "vmotionNetwork()"
  nameWithType: "PrivateCloudInner.vmotionNetwork()"
  summary: "Get the vmotion<wbr>Network property: Used for live migration of virtual machines."
  syntax: "public String vmotionNetwork()"
  desc: "Get the vmotionNetwork property: Used for live migration of virtual machines."
  returns:
    description: "the vmotionNetwork value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withAvailability(com.azure.resourcemanager.avs.models.AvailabilityProperties)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withAvailability(AvailabilityProperties availability)"
  name: "withAvailability(AvailabilityProperties availability)"
  nameWithType: "PrivateCloudInner.withAvailability(AvailabilityProperties availability)"
  summary: "Set the availability property: Properties describing how the cloud is distributed across availability zones."
  parameters:
  - description: "the availability value to set."
    name: "availability"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.AvailabilityProperties?alt=com.azure.resourcemanager.avs.models.AvailabilityProperties&text=AvailabilityProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withAvailability(AvailabilityProperties availability)"
  desc: "Set the availability property: Properties describing how the cloud is distributed across availability zones."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withCircuit(com.azure.resourcemanager.avs.models.Circuit)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withCircuit(Circuit circuit)"
  name: "withCircuit(Circuit circuit)"
  nameWithType: "PrivateCloudInner.withCircuit(Circuit circuit)"
  summary: "Set the circuit property: An Express<wbr>Route Circuit."
  parameters:
  - description: "the circuit value to set."
    name: "circuit"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withCircuit(Circuit circuit)"
  desc: "Set the circuit property: An ExpressRoute Circuit."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withEncryption(com.azure.resourcemanager.avs.models.Encryption)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withEncryption(Encryption encryption)"
  name: "withEncryption(Encryption encryption)"
  nameWithType: "PrivateCloudInner.withEncryption(Encryption encryption)"
  summary: "Set the encryption property: Customer managed key encryption, can be enabled or disabled."
  parameters:
  - description: "the encryption value to set."
    name: "encryption"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Encryption?alt=com.azure.resourcemanager.avs.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withEncryption(Encryption encryption)"
  desc: "Set the encryption property: Customer managed key encryption, can be enabled or disabled."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withIdentity(com.azure.resourcemanager.avs.models.PrivateCloudIdentity)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withIdentity(PrivateCloudIdentity identity)"
  name: "withIdentity(PrivateCloudIdentity identity)"
  nameWithType: "PrivateCloudInner.withIdentity(PrivateCloudIdentity identity)"
  summary: "Set the identity property: The identity of the private cloud, if configured."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.PrivateCloudIdentity?alt=com.azure.resourcemanager.avs.models.PrivateCloudIdentity&text=PrivateCloudIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withIdentity(PrivateCloudIdentity identity)"
  desc: "Set the identity property: The identity of the private cloud, if configured."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withIdentitySources(java.util.List<com.azure.resourcemanager.avs.models.IdentitySource>)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withIdentitySources(List<IdentitySource> identitySources)"
  name: "withIdentitySources(List<IdentitySource> identitySources)"
  nameWithType: "PrivateCloudInner.withIdentitySources(List<IdentitySource> identitySources)"
  summary: "Set the identity<wbr>Sources property: v<wbr>Center Single Sign On Identity Sources."
  parameters:
  - description: "the identitySources value to set."
    name: "identitySources"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.avs.models.IdentitySource?alt=com.azure.resourcemanager.avs.models.IdentitySource&text=IdentitySource\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PrivateCloudInner withIdentitySources(List<IdentitySource> identitySources)"
  desc: "Set the identitySources property: vCenter Single Sign On Identity Sources."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withInternet(com.azure.resourcemanager.avs.models.InternetEnum)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withInternet(InternetEnum internet)"
  name: "withInternet(InternetEnum internet)"
  nameWithType: "PrivateCloudInner.withInternet(InternetEnum internet)"
  summary: "Set the internet property: Connectivity to internet is enabled or disabled."
  parameters:
  - description: "the internet value to set."
    name: "internet"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.InternetEnum?alt=com.azure.resourcemanager.avs.models.InternetEnum&text=InternetEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withInternet(InternetEnum internet)"
  desc: "Set the internet property: Connectivity to internet is enabled or disabled."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "PrivateCloudInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withManagementCluster(com.azure.resourcemanager.avs.models.ManagementCluster)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withManagementCluster(ManagementCluster managementCluster)"
  name: "withManagementCluster(ManagementCluster managementCluster)"
  nameWithType: "PrivateCloudInner.withManagementCluster(ManagementCluster managementCluster)"
  summary: "Set the management<wbr>Cluster property: The default cluster used for management."
  parameters:
  - description: "the managementCluster value to set."
    name: "managementCluster"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.ManagementCluster?alt=com.azure.resourcemanager.avs.models.ManagementCluster&text=ManagementCluster\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withManagementCluster(ManagementCluster managementCluster)"
  desc: "Set the managementCluster property: The default cluster used for management."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withNetworkBlock(java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withNetworkBlock(String networkBlock)"
  name: "withNetworkBlock(String networkBlock)"
  nameWithType: "PrivateCloudInner.withNetworkBlock(String networkBlock)"
  summary: "Set the network<wbr>Block property: The block of addresses should be unique across VNet in your subscription as well as on-premise."
  parameters:
  - description: "the networkBlock value to set."
    name: "networkBlock"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withNetworkBlock(String networkBlock)"
  desc: "Set the networkBlock property: The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withNsxtPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withNsxtPassword(String nsxtPassword)"
  name: "withNsxtPassword(String nsxtPassword)"
  nameWithType: "PrivateCloudInner.withNsxtPassword(String nsxtPassword)"
  summary: "Set the nsxt<wbr>Password property: Optionally, set the NSX-T Manager password when the private cloud is created."
  parameters:
  - description: "the nsxtPassword value to set."
    name: "nsxtPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withNsxtPassword(String nsxtPassword)"
  desc: "Set the nsxtPassword property: Optionally, set the NSX-T Manager password when the private cloud is created."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withSecondaryCircuit(com.azure.resourcemanager.avs.models.Circuit)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withSecondaryCircuit(Circuit secondaryCircuit)"
  name: "withSecondaryCircuit(Circuit secondaryCircuit)"
  nameWithType: "PrivateCloudInner.withSecondaryCircuit(Circuit secondaryCircuit)"
  summary: "Set the secondary<wbr>Circuit property: A secondary express<wbr>Route circuit from a separate AZ."
  parameters:
  - description: "the secondaryCircuit value to set."
    name: "secondaryCircuit"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withSecondaryCircuit(Circuit secondaryCircuit)"
  desc: "Set the secondaryCircuit property: A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withSku(com.azure.resourcemanager.avs.models.Sku)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "PrivateCloudInner.withSku(Sku sku)"
  summary: "Set the sku property: The private cloud SKU."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Sku?alt=com.azure.resourcemanager.avs.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withSku(Sku sku)"
  desc: "Set the sku property: The private cloud SKU."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "PrivateCloudInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PrivateCloudInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withVcenterPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner.withVcenterPassword(String vcenterPassword)"
  name: "withVcenterPassword(String vcenterPassword)"
  nameWithType: "PrivateCloudInner.withVcenterPassword(String vcenterPassword)"
  summary: "Set the vcenter<wbr>Password property: Optionally, set the v<wbr>Center admin password when the private cloud is created."
  parameters:
  - description: "the vcenterPassword value to set."
    name: "vcenterPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudInner withVcenterPassword(String vcenterPassword)"
  desc: "Set the vcenterPassword property: Optionally, set the vCenter admin password when the private cloud is created."
  returns:
    description: "the PrivateCloudInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudInner&text=PrivateCloudInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A private cloud resource."
metadata: {}
package: "com.azure.resourcemanager.avs.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-avs:1.0.0-beta.3
