### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Splitter.trimResults*"
fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.trimResults"
name: "trimResults"
nameWithType: "Splitter.trimResults"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Splitter.trimResults()"
  fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.trimResults()"
  name: "trimResults()"
  nameWithType: "Splitter.trimResults()"
  summary: "Returns a splitter that behaves equivalently to `this` splitter, but automatically removes leading and trailing <xref uid=\"com.azure.cosmos.implementation.guava25.base.CharMatcher.whitespace*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"whitespace\"></xref> from each returned substring; equivalent to `trimResults(CharMatcher.whitespace())`. For example, `Splitter.on(',').trimResults().split(\" a, b ,c \")` returns an iterable containing `[\"a\", \"b\", \"c\"]`."
  syntax: "public Splitter trimResults()"
  returns:
    description: "a splitter with the desired configuration"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Splitter?alt=com.azure.cosmos.implementation.guava25.base.Splitter&text=Splitter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.Splitter.trimResults(com.azure.cosmos.implementation.guava25.base.CharMatcher)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.trimResults(CharMatcher trimmer)"
  name: "trimResults(CharMatcher trimmer)"
  nameWithType: "Splitter.trimResults(CharMatcher trimmer)"
  summary: "Returns a splitter that behaves equivalently to `this` splitter, but removes all leading or trailing characters matching the given `CharMatcher` from each returned substring. For example, `Splitter.on(',').trimResults(CharMatcher.is('_')).split(\"_a ,_b_ ,c__\")` returns an iterable containing `[\"a \", \"b_ \", \"c\"]`."
  parameters:
  - description: "a <xref uid=\"com.azure.cosmos.implementation.guava25.base.CharMatcher\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CharMatcher\"></xref> that determines whether a character should be removed from\n     the beginning/end of a subsequence"
    name: "trimmer"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.CharMatcher?alt=com.azure.cosmos.implementation.guava25.base.CharMatcher&text=CharMatcher\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Splitter trimResults(CharMatcher trimmer)"
  returns:
    description: "a splitter with the desired configuration"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Splitter?alt=com.azure.cosmos.implementation.guava25.base.Splitter&text=Splitter\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
