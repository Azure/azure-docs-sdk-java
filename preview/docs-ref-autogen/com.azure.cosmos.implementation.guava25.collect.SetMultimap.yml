### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.SetMultimap"
fullName: "com.azure.cosmos.implementation.guava25.collect.SetMultimap<K,V>"
name: "SetMultimap<K,V>"
nameWithType: "SetMultimap<K,V>"
summary: "A `Multimap` that cannot hold duplicate key-value pairs. Adding a key-value pair that's already in the multimap has no effect. See the <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multimap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multimap\"></xref> documentation for information common to all multimaps.\n\nThe <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap.get\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#get\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap.removeAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#removeAll\"></xref>, and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap.replaceValues\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#replaceValues\"></xref> methods each return a <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set\"></xref> of values, while <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap.entries\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#entries\"></xref> returns a `Set` of map entries. Though the method signature doesn't say so explicitly, the map returned by <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SetMultimap.asMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#asMap\"></xref> has `Set` values.\n\nIf the values corresponding to a single key should be ordered according to a <xref uid=\"java.util.Comparator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Comparator\"></xref> (or the natural order), see the <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedSetMultimap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedSetMultimap\"></xref> subinterface.\n\nSince the value collections are sets, the behavior of a `SetMultimap` is not specified if key *or value* objects already present in the multimap change in a manner that affects `equals` comparisons. Use caution if mutable objects are used as keys or values in a `SetMultimap`.\n\nSee the Guava User Guide article on [ `Multimap`][_Multimap].\n\n\n[_Multimap]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#multimap"
syntax: "public interface SetMultimap<K,V> extends Multimap<K,V>"
methods:
- "com.azure.cosmos.implementation.guava25.collect.SetMultimap.asMap()"
- "com.azure.cosmos.implementation.guava25.collect.SetMultimap.entries()"
- "com.azure.cosmos.implementation.guava25.collect.SetMultimap.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.SetMultimap.get(K)"
- "com.azure.cosmos.implementation.guava25.collect.SetMultimap.removeAll(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.SetMultimap.replaceValues(K,java.lang.Iterable<? extends V>)"
type: "interface"
typeParameters:
- name: "K"
- name: "V"
implements:
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
