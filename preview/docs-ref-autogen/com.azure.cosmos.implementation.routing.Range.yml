### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.routing.Range
  id: Range
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing
  children:
  - com.azure.cosmos.implementation.routing.Range.<T>checkOverlapping(com.azure.cosmos.implementation.routing.Range<T>,com.azure.cosmos.implementation.routing.Range<T>)
  - com.azure.cosmos.implementation.routing.Range.<T>getEmptyRange(T)
  - com.azure.cosmos.implementation.routing.Range.<T>getPointRange(T)
  - com.azure.cosmos.implementation.routing.Range.MaxComparator
  - com.azure.cosmos.implementation.routing.Range.MinComparator
  - com.azure.cosmos.implementation.routing.Range.Range()
  - com.azure.cosmos.implementation.routing.Range.Range(T,T,boolean,boolean)
  - com.azure.cosmos.implementation.routing.Range.Range(com.fasterxml.jackson.databind.node.ObjectNode)
  - com.azure.cosmos.implementation.routing.Range.Range(java.lang.String)
  - com.azure.cosmos.implementation.routing.Range.contains(T)
  - com.azure.cosmos.implementation.routing.Range.equals(java.lang.Object)
  - com.azure.cosmos.implementation.routing.Range.getMax()
  - com.azure.cosmos.implementation.routing.Range.getMin()
  - com.azure.cosmos.implementation.routing.Range.hashCode()
  - com.azure.cosmos.implementation.routing.Range.isEmpty()
  - com.azure.cosmos.implementation.routing.Range.isMaxInclusive()
  - com.azure.cosmos.implementation.routing.Range.isMinInclusive()
  - com.azure.cosmos.implementation.routing.Range.isSingleValue()
  - com.azure.cosmos.implementation.routing.Range.setMax(T)
  - com.azure.cosmos.implementation.routing.Range.setMaxInclusive(boolean)
  - com.azure.cosmos.implementation.routing.Range.setMin(T)
  - com.azure.cosmos.implementation.routing.Range.setMinInclusive(boolean)
  langs:
  - java
  name: Range<T>
  nameWithType: Range<T>
  fullName: com.azure.cosmos.implementation.routing.Range<T>
  type: Class
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public final class Range<T> extends JsonSerializable
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.models.JsonSerializable
  inheritedMembers:
  - com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)
  - com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)
  - com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)
  - com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)
  - com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)
  - com.azure.cosmos.models.JsonSerializable.get(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.getLogger()
  - com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.getMap()
  - com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)
  - com.azure.cosmos.models.JsonSerializable.getPropertyBag()
  - com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.has(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.populatePropertyBag()
  - com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)
  - com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()
  - com.azure.cosmos.models.JsonSerializable.toJson()
  - com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)
  - com.azure.cosmos.models.JsonSerializable.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.routing.Range.<T>checkOverlapping(com.azure.cosmos.implementation.routing.Range<T>,com.azure.cosmos.implementation.routing.Range<T>)
  id: <T>checkOverlapping(com.azure.cosmos.implementation.routing.Range<T>,com.azure.cosmos.implementation.routing.Range<T>)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: <T>checkOverlapping(Range<T> range1, Range<T> range2)
  nameWithType: Range<T>.<T>checkOverlapping(Range<T> range1, Range<T> range2)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.<T>checkOverlapping(Range<T> range1, Range<T> range2)
  overload: com.azure.cosmos.implementation.routing.Range.checkOverlapping*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public static boolean <T>checkOverlapping(Range<T> range1, Range<T> range2)
    parameters:
    - id: range1
      type: com.azure.cosmos.implementation.routing.Range<T>
    - id: range2
      type: com.azure.cosmos.implementation.routing.Range<T>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.<T>getEmptyRange(T)
  id: <T>getEmptyRange(T)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: <T>getEmptyRange(T value)
  nameWithType: Range<T>.<T>getEmptyRange(T value)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.<T>getEmptyRange(T value)
  overload: com.azure.cosmos.implementation.routing.Range.getEmptyRange*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public static Range<T> <T>getEmptyRange(T value)
    parameters:
    - id: value
      type: T
    return:
      type: com.azure.cosmos.implementation.routing.Range<T>
- uid: com.azure.cosmos.implementation.routing.Range.<T>getPointRange(T)
  id: <T>getPointRange(T)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: <T>getPointRange(T value)
  nameWithType: Range<T>.<T>getPointRange(T value)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.<T>getPointRange(T value)
  overload: com.azure.cosmos.implementation.routing.Range.getPointRange*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public static Range<T> <T>getPointRange(T value)
    parameters:
    - id: value
      type: T
    return:
      type: com.azure.cosmos.implementation.routing.Range<T>
- uid: com.azure.cosmos.implementation.routing.Range.Range()
  id: Range()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: Range()
  nameWithType: Range<T>.Range()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.Range()
  overload: com.azure.cosmos.implementation.routing.Range.Range*
  type: Constructor
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public Range()
- uid: com.azure.cosmos.implementation.routing.Range.Range(T,T,boolean,boolean)
  id: Range(T,T,boolean,boolean)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: Range(T min, T max, boolean isMinInclusive, boolean isMaxInclusive)
  nameWithType: Range<T>.Range(T min, T max, boolean isMinInclusive, boolean isMaxInclusive)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.Range(T min, T max, boolean isMinInclusive, boolean isMaxInclusive)
  overload: com.azure.cosmos.implementation.routing.Range.Range*
  type: Constructor
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public Range(T min, T max, boolean isMinInclusive, boolean isMaxInclusive)
    parameters:
    - id: min
      type: T
    - id: max
      type: T
    - id: isMinInclusive
      type: boolean
    - id: isMaxInclusive
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.Range(com.fasterxml.jackson.databind.node.ObjectNode)
  id: Range(com.fasterxml.jackson.databind.node.ObjectNode)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: Range(ObjectNode objectNode)
  nameWithType: Range<T>.Range(ObjectNode objectNode)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.Range(ObjectNode objectNode)
  overload: com.azure.cosmos.implementation.routing.Range.Range*
  type: Constructor
  package: com.azure.cosmos.implementation.routing
  summary: Constructor.
  syntax:
    content: public Range(ObjectNode objectNode)
    parameters:
    - id: objectNode
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: >-
        the <xref uid="com.fasterxml.jackson.databind.node.ObjectNode" data-throw-if-not-resolved="false">ObjectNode</xref> that represent the
         <xref uid="com.azure.cosmos.models.JsonSerializable" data-throw-if-not-resolved="false">JsonSerializable</xref>
- uid: com.azure.cosmos.implementation.routing.Range.Range(java.lang.String)
  id: Range(java.lang.String)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: Range(String jsonString)
  nameWithType: Range<T>.Range(String jsonString)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.Range(String jsonString)
  overload: com.azure.cosmos.implementation.routing.Range.Range*
  type: Constructor
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public Range(String jsonString)
    parameters:
    - id: jsonString
      type: java.lang.String
- uid: com.azure.cosmos.implementation.routing.Range.contains(T)
  id: contains(T)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: contains(T value)
  nameWithType: Range<T>.contains(T value)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.contains(T value)
  overload: com.azure.cosmos.implementation.routing.Range.contains*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public boolean contains(T value)
    parameters:
    - id: value
      type: T
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: equals(Object obj)
  nameWithType: Range<T>.equals(Object obj)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.equals(Object obj)
  overload: com.azure.cosmos.implementation.routing.Range.equals*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public boolean equals(Object obj)
    parameters:
    - id: obj
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.getMax()
  id: getMax()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: getMax()
  nameWithType: Range<T>.getMax()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.getMax()
  overload: com.azure.cosmos.implementation.routing.Range.getMax*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public T getMax()
    return:
      type: T
- uid: com.azure.cosmos.implementation.routing.Range.getMin()
  id: getMin()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: getMin()
  nameWithType: Range<T>.getMin()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.getMin()
  overload: com.azure.cosmos.implementation.routing.Range.getMin*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public T getMin()
    return:
      type: T
- uid: com.azure.cosmos.implementation.routing.Range.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: hashCode()
  nameWithType: Range<T>.hashCode()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.hashCode()
  overload: com.azure.cosmos.implementation.routing.Range.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.routing.Range.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: isEmpty()
  nameWithType: Range<T>.isEmpty()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isEmpty()
  overload: com.azure.cosmos.implementation.routing.Range.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.isMaxInclusive()
  id: isMaxInclusive()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: isMaxInclusive()
  nameWithType: Range<T>.isMaxInclusive()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isMaxInclusive()
  overload: com.azure.cosmos.implementation.routing.Range.isMaxInclusive*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public boolean isMaxInclusive()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.isMinInclusive()
  id: isMinInclusive()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: isMinInclusive()
  nameWithType: Range<T>.isMinInclusive()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isMinInclusive()
  overload: com.azure.cosmos.implementation.routing.Range.isMinInclusive*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public boolean isMinInclusive()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.isSingleValue()
  id: isSingleValue()
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: isSingleValue()
  nameWithType: Range<T>.isSingleValue()
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isSingleValue()
  overload: com.azure.cosmos.implementation.routing.Range.isSingleValue*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public boolean isSingleValue()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.setMax(T)
  id: setMax(T)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: setMax(T max)
  nameWithType: Range<T>.setMax(T max)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMax(T max)
  overload: com.azure.cosmos.implementation.routing.Range.setMax*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public void setMax(T max)
    parameters:
    - id: max
      type: T
- uid: com.azure.cosmos.implementation.routing.Range.setMaxInclusive(boolean)
  id: setMaxInclusive(boolean)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: setMaxInclusive(boolean isMaxInclusive)
  nameWithType: Range<T>.setMaxInclusive(boolean isMaxInclusive)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMaxInclusive(boolean isMaxInclusive)
  overload: com.azure.cosmos.implementation.routing.Range.setMaxInclusive*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public void setMaxInclusive(boolean isMaxInclusive)
    parameters:
    - id: isMaxInclusive
      type: boolean
- uid: com.azure.cosmos.implementation.routing.Range.setMin(T)
  id: setMin(T)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: setMin(T min)
  nameWithType: Range<T>.setMin(T min)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMin(T min)
  overload: com.azure.cosmos.implementation.routing.Range.setMin*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public void setMin(T min)
    parameters:
    - id: min
      type: T
- uid: com.azure.cosmos.implementation.routing.Range.setMinInclusive(boolean)
  id: setMinInclusive(boolean)
  artifact: com.azure:azure-cosmos:4.0.1-beta.1
  parent: com.azure.cosmos.implementation.routing.Range
  langs:
  - java
  name: setMinInclusive(boolean isMinInclusive)
  nameWithType: Range<T>.setMinInclusive(boolean isMinInclusive)
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMinInclusive(boolean isMinInclusive)
  overload: com.azure.cosmos.implementation.routing.Range.setMinInclusive*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public void setMinInclusive(boolean isMinInclusive)
    parameters:
    - id: isMinInclusive
      type: boolean
references:
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  spec.java:
  - uid: com.fasterxml.jackson.databind.node.ObjectNode
    name: ObjectNode
    fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: com.azure.cosmos.implementation.routing.Range.Range*
  name: Range
  nameWithType: Range<T>.Range
  fullName: com.azure.cosmos.implementation.routing.Range<T>.Range
  package: com.azure.cosmos.implementation.routing
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.routing.Range<T>
  spec.java:
  - uid: com.azure.cosmos.implementation.routing.Range
    name: Range
    fullName: com.azure.cosmos.implementation.routing.Range
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.routing.Range.getPointRange*
  name: <T>getPointRange
  nameWithType: Range<T>.<T>getPointRange
  fullName: com.azure.cosmos.implementation.routing.Range<T>.<T>getPointRange
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.getEmptyRange*
  name: <T>getEmptyRange
  nameWithType: Range<T>.<T>getEmptyRange
  fullName: com.azure.cosmos.implementation.routing.Range<T>.<T>getEmptyRange
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.checkOverlapping*
  name: <T>checkOverlapping
  nameWithType: Range<T>.<T>checkOverlapping
  fullName: com.azure.cosmos.implementation.routing.Range<T>.<T>checkOverlapping
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.getMin*
  name: getMin
  nameWithType: Range<T>.getMin
  fullName: com.azure.cosmos.implementation.routing.Range<T>.getMin
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.setMin*
  name: setMin
  nameWithType: Range<T>.setMin
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMin
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.getMax*
  name: getMax
  nameWithType: Range<T>.getMax
  fullName: com.azure.cosmos.implementation.routing.Range<T>.getMax
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.setMax*
  name: setMax
  nameWithType: Range<T>.setMax
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMax
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.isMinInclusive*
  name: isMinInclusive
  nameWithType: Range<T>.isMinInclusive
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isMinInclusive
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.setMinInclusive*
  name: setMinInclusive
  nameWithType: Range<T>.setMinInclusive
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMinInclusive
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.isMaxInclusive*
  name: isMaxInclusive
  nameWithType: Range<T>.isMaxInclusive
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isMaxInclusive
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.setMaxInclusive*
  name: setMaxInclusive
  nameWithType: Range<T>.setMaxInclusive
  fullName: com.azure.cosmos.implementation.routing.Range<T>.setMaxInclusive
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.isSingleValue*
  name: isSingleValue
  nameWithType: Range<T>.isSingleValue
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isSingleValue
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.isEmpty*
  name: isEmpty
  nameWithType: Range<T>.isEmpty
  fullName: com.azure.cosmos.implementation.routing.Range<T>.isEmpty
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range.contains*
  name: contains
  nameWithType: Range<T>.contains
  fullName: com.azure.cosmos.implementation.routing.Range<T>.contains
  package: com.azure.cosmos.implementation.routing
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.routing.Range.equals*
  name: equals
  nameWithType: Range<T>.equals
  fullName: com.azure.cosmos.implementation.routing.Range<T>.equals
  package: com.azure.cosmos.implementation.routing
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.routing.Range.hashCode*
  name: hashCode
  nameWithType: Range<T>.hashCode
  fullName: com.azure.cosmos.implementation.routing.Range<T>.hashCode
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.models.JsonSerializable
  name: JsonSerializable
  nameWithType: JsonSerializable
  fullName: com.azure.cosmos.models.JsonSerializable
- uid: com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)
  name: JsonSerializable.<T>set(String,T)
  nameWithType: JsonSerializable.<T>set(String,T)
  fullName: com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)
  name: JsonSerializable.getObjectByPath(List<String>)
  nameWithType: JsonSerializable.getObjectByPath(List<String>)
  fullName: com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)
- uid: com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)
  name: JsonSerializable.<T>getObject(String,Class<T>,)
  nameWithType: JsonSerializable.<T>getObject(String,Class<T>,)
  fullName: com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)
- uid: com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)
  name: JsonSerializable.<T>getList(String,Class<T>,)
  nameWithType: JsonSerializable.<T>getList(String,Class<T>,)
  fullName: com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)
- uid: com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()
  name: JsonSerializable.serializeJsonToByteBuffer()
  nameWithType: JsonSerializable.serializeJsonToByteBuffer()
  fullName: com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()
- uid: com.azure.cosmos.models.JsonSerializable.get(java.lang.String)
  name: JsonSerializable.get(String)
  nameWithType: JsonSerializable.get(String)
  fullName: com.azure.cosmos.models.JsonSerializable.get(java.lang.String)
- uid: com.azure.cosmos.models.JsonSerializable.getPropertyBag()
  name: JsonSerializable.getPropertyBag()
  nameWithType: JsonSerializable.getPropertyBag()
  fullName: com.azure.cosmos.models.JsonSerializable.getPropertyBag()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)
  name: JsonSerializable.getInt(String)
  nameWithType: JsonSerializable.getInt(String)
  fullName: com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)
  name: JsonSerializable.<T>toObject(Class<T>)
  nameWithType: JsonSerializable.<T>toObject(Class<T>)
  fullName: com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)
- uid: com.azure.cosmos.models.JsonSerializable.getMap()
  name: JsonSerializable.getMap()
  nameWithType: JsonSerializable.getMap()
  fullName: com.azure.cosmos.models.JsonSerializable.getMap()
- uid: com.azure.cosmos.models.JsonSerializable.toJson()
  name: JsonSerializable.toJson()
  nameWithType: JsonSerializable.toJson()
  fullName: com.azure.cosmos.models.JsonSerializable.toJson()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)
  name: JsonSerializable.getBoolean(String)
  nameWithType: JsonSerializable.getBoolean(String)
  fullName: com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)
- uid: com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)
  name: JsonSerializable.getDouble(String)
  nameWithType: JsonSerializable.getDouble(String)
  fullName: com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)
- uid: com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)
  name: JsonSerializable.remove(String)
  nameWithType: JsonSerializable.remove(String)
  fullName: com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)
  name: JsonSerializable.toJson(SerializationFormattingPolicy)
  nameWithType: JsonSerializable.toJson(SerializationFormattingPolicy)
  fullName: com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)
- uid: com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)
  name: JsonSerializable.getLong(String)
  nameWithType: JsonSerializable.getLong(String)
  fullName: com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.models.JsonSerializable.toString()
  name: JsonSerializable.toString()
  nameWithType: JsonSerializable.toString()
  fullName: com.azure.cosmos.models.JsonSerializable.toString()
- uid: com.azure.cosmos.models.JsonSerializable.populatePropertyBag()
  name: JsonSerializable.populatePropertyBag()
  nameWithType: JsonSerializable.populatePropertyBag()
  fullName: com.azure.cosmos.models.JsonSerializable.populatePropertyBag()
- uid: com.azure.cosmos.models.JsonSerializable.has(java.lang.String)
  name: JsonSerializable.has(String)
  nameWithType: JsonSerializable.has(String)
  fullName: com.azure.cosmos.models.JsonSerializable.has(java.lang.String)
- uid: com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)
  name: JsonSerializable.getString(String)
  nameWithType: JsonSerializable.getString(String)
  fullName: com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)
- uid: com.azure.cosmos.models.JsonSerializable.getLogger()
  name: JsonSerializable.getLogger()
  nameWithType: JsonSerializable.getLogger()
  fullName: com.azure.cosmos.models.JsonSerializable.getLogger()
- uid: com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)
  name: JsonSerializable.<T>getCollection(String,Class<T>,)
  nameWithType: JsonSerializable.<T>getCollection(String,Class<T>,)
  fullName: com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)
- uid: com.azure.cosmos.implementation.routing.Range.MaxComparator
  name: Range.MaxComparator<T>
  nameWithType: Range.MaxComparator<T>
  fullName: com.azure.cosmos.implementation.routing.Range.MaxComparator<T>
- uid: com.azure.cosmos.implementation.routing.Range.MinComparator
  name: Range.MinComparator<T>
  nameWithType: Range.MinComparator<T>
  fullName: com.azure.cosmos.implementation.routing.Range.MinComparator<T>
- uid: com.azure.cosmos.models.JsonSerializable.
  name: JsonSerializable.
  nameWithType: JsonSerializable.
  fullName: com.azure.cosmos.models.JsonSerializable.
- uid: T>set(java.lang.String,T)
  name: T>set(String,T)
  nameWithType: T>set(String,T)
  fullName: T>set(java.lang.String,T)
- uid: com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List
  name: JsonSerializable.getObjectByPath(List
  nameWithType: JsonSerializable.getObjectByPath(List
  fullName: com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
- uid: T>,boolean...)
  name: T>,)
  nameWithType: T>,)
  fullName: T>,boolean...)
- uid: T>getObject(java.lang.String,java.lang.Class
  name: T>getObject(String,Class
  nameWithType: T>getObject(String,Class
  fullName: T>getObject(java.lang.String,java.lang.Class
- uid: T>getList(java.lang.String,java.lang.Class
  name: T>getList(String,Class
  nameWithType: T>getList(String,Class
  fullName: T>getList(java.lang.String,java.lang.Class
- uid: T>toObject(java.lang.Class
  name: T>toObject(Class
  nameWithType: T>toObject(Class
  fullName: T>toObject(java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>getCollection(java.lang.String,java.lang.Class
  name: T>getCollection(String,Class
  nameWithType: T>getCollection(String,Class
  fullName: T>getCollection(java.lang.String,java.lang.Class
