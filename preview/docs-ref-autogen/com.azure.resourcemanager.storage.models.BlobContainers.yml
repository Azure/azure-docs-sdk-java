### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.storage.models.BlobContainers
  id: BlobContainers
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models
  children:
  - com.azure.resourcemanager.storage.models.BlobContainers.clearLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  - com.azure.resourcemanager.storage.models.BlobContainers.defineContainer(java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.defineImmutabilityPolicy(java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean)
  - com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.models.BlobContainers.setLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  langs:
  - java
  name: BlobContainers
  nameWithType: BlobContainers
  fullName: com.azure.resourcemanager.storage.models.BlobContainers
  type: Interface
  package: com.azure.resourcemanager.storage.models
  summary: Type representing BlobContainers.
  syntax:
    content: public interface BlobContainers
- uid: com.azure.resourcemanager.storage.models.BlobContainers.clearLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: clearLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainers.clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.clearLegalHoldAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.
  syntax:
    content: public abstract Mono<LegalHold> clearLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.LegalHold>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.defineContainer(java.lang.String)
  id: defineContainer(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: defineContainer(String name)
  nameWithType: BlobContainers.defineContainer(String name)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.defineContainer(String name)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.defineContainer*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Begins definition for a new Container resource.
  syntax:
    content: public abstract BlobContainer.DefinitionStages.Blank defineContainer(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: resource name.
    return:
      type: com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.Blank
      description: the first stage of the new Container definition.
- uid: com.azure.resourcemanager.storage.models.BlobContainers.defineImmutabilityPolicy(java.lang.String)
  id: defineImmutabilityPolicy(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: defineImmutabilityPolicy(String name)
  nameWithType: BlobContainers.defineImmutabilityPolicy(String name)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.defineImmutabilityPolicy(String name)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.defineImmutabilityPolicy*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Begins definition for a new ImmutabilityPolicy resource.
  syntax:
    content: public abstract ImmutabilityPolicy.DefinitionStages.Blank defineImmutabilityPolicy(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: resource name.
    return:
      type: com.azure.resourcemanager.storage.models.ImmutabilityPolicy.DefinitionStages.Blank
      description: the first stage of the new ImmutabilityPolicy definition.
- uid: com.azure.resourcemanager.storage.models.BlobContainers.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainers.deleteAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.deleteAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Deletes specified container under its account.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainers.deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.
  syntax:
    content: public abstract Mono<Void> deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  nameWithType: BlobContainers.deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.
  syntax:
    content: public abstract Mono<Void> deleteImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: eTagValue
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean)
  id: extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  nameWithType: BlobContainers.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
  syntax:
    content: public abstract Mono<ImmutabilityPolicy> extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: immutabilityPeriodSinceCreationInDays
      type: int
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.ImmutabilityPolicy>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean,java.lang.String)
  id: extendImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, String eTagValue)
  nameWithType: BlobContainers.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, String eTagValue)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, String eTagValue)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.
  syntax:
    content: public abstract Mono<ImmutabilityPolicy> extendImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, int immutabilityPeriodSinceCreationInDays, Boolean allowProtectedAppendWrites, String eTagValue)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: immutabilityPeriodSinceCreationInDays
      type: int
      description: >-
        The immutability period for the blobs in the container since the
             policy creation, in days.
    - id: allowProtectedAppendWrites
      type: java.lang.Boolean
      description: >-
        This property can only be changed for unlocked time-based retention policies.
             When enabled, new blocks can be written to an append blob while maintaining immutability protection and
             compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property
             cannot be changed with ExtendImmutabilityPolicy API.
    - id: eTagValue
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.ImmutabilityPolicy>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: getAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainers.getAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.getAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.getAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Gets properties of a specified container.
  syntax:
    content: public abstract Mono<BlobContainer> getAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainer>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainers.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
  syntax:
    content: public abstract Mono<ImmutabilityPolicy> getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.ImmutabilityPolicy>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  nameWithType: BlobContainers.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Gets the existing immutability policy along with the corresponding ETag in response headers and body.
  syntax:
    content: public abstract Mono<ImmutabilityPolicy> getImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: eTagValue
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.ImmutabilityPolicy>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: listAsync(String resourceGroupName, String accountName)
  nameWithType: BlobContainers.listAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.listAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.
  syntax:
    content: public abstract PagedFlux<ListContainerItemInner> listAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.inner.ListContainerItemInner>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  id: lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  nameWithType: BlobContainers.lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
  syntax:
    content: public abstract Mono<ImmutabilityPolicy> lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.ImmutabilityPolicy>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: lockImmutabilityPolicyAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  nameWithType: BlobContainers.lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.
  syntax:
    content: public abstract Mono<ImmutabilityPolicy> lockImmutabilityPolicyAsync(String resourceGroupName, String accountName, String containerName, String eTagValue)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: eTagValue
      type: java.lang.String
      description: >-
        The entity state (ETag) version of the immutability policy to update. A value of "*" can be used
             to apply the operation only if the immutability policy already exists. If omitted, this operation will always
             be applied.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.ImmutabilityPolicy>
      description: the observable for the request
- uid: com.azure.resourcemanager.storage.models.BlobContainers.setLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  id: setLegalHoldAsync(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0-beta.2
  parent: com.azure.resourcemanager.storage.models.BlobContainers
  langs:
  - java
  name: setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  nameWithType: BlobContainers.setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
  overload: com.azure.resourcemanager.storage.models.BlobContainers.setLegalHoldAsync*
  type: Method
  package: com.azure.resourcemanager.storage.models
  summary: Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.
  syntax:
    content: public abstract Mono<LegalHold> setLegalHoldAsync(String resourceGroupName, String accountName, String containerName, List<String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: containerName
      type: java.lang.String
      description: >-
        The name of the blob container within the specified storage account. Blob container names
             must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every
             dash (-) character must be immediately preceded and followed by a letter or number.
    - id: tags
      type: java.util.List<java.lang.String>
      description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.LegalHold>
      description: the observable for the request
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.Blank
  name: BlobContainer.DefinitionStages.Blank
  nameWithType: BlobContainer.DefinitionStages.Blank
  fullName: com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.Blank
- uid: com.azure.resourcemanager.storage.models.BlobContainers.defineContainer*
  name: defineContainer
  nameWithType: BlobContainers.defineContainer
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.defineContainer
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.ImmutabilityPolicy.DefinitionStages.Blank
  name: ImmutabilityPolicy.DefinitionStages.Blank
  nameWithType: ImmutabilityPolicy.DefinitionStages.Blank
  fullName: com.azure.resourcemanager.storage.models.ImmutabilityPolicy.DefinitionStages.Blank
- uid: com.azure.resourcemanager.storage.models.BlobContainers.defineImmutabilityPolicy*
  name: defineImmutabilityPolicy
  nameWithType: BlobContainers.defineImmutabilityPolicy
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.defineImmutabilityPolicy
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.inner.ListContainerItemInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.inner.ListContainerItemInner
    name: ListContainerItemInner
    fullName: com.azure.resourcemanager.storage.fluent.inner.ListContainerItemInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.BlobContainers.listAsync*
  name: listAsync
  nameWithType: BlobContainers.listAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.listAsync
  package: com.azure.resourcemanager.storage.models
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.BlobContainer>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.BlobContainer
    name: BlobContainer
    fullName: com.azure.resourcemanager.storage.models.BlobContainer
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.BlobContainers.getAsync*
  name: getAsync
  nameWithType: BlobContainers.getAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.getAsync
  package: com.azure.resourcemanager.storage.models
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.BlobContainers.deleteAsync*
  name: deleteAsync
  nameWithType: BlobContainers.deleteAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.deleteAsync
  package: com.azure.resourcemanager.storage.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.LegalHold>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.LegalHold
    name: LegalHold
    fullName: com.azure.resourcemanager.storage.models.LegalHold
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.BlobContainers.setLegalHoldAsync*
  name: setLegalHoldAsync
  nameWithType: BlobContainers.setLegalHoldAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.setLegalHoldAsync
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.BlobContainers.clearLegalHoldAsync*
  name: clearLegalHoldAsync
  nameWithType: BlobContainers.clearLegalHoldAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.clearLegalHoldAsync
  package: com.azure.resourcemanager.storage.models
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.models.ImmutabilityPolicy>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.ImmutabilityPolicy
    name: ImmutabilityPolicy
    fullName: com.azure.resourcemanager.storage.models.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync*
  name: getImmutabilityPolicyAsync
  nameWithType: BlobContainers.getImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.getImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync*
  name: deleteImmutabilityPolicyAsync
  nameWithType: BlobContainers.deleteImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.deleteImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync*
  name: lockImmutabilityPolicyAsync
  nameWithType: BlobContainers.lockImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.lockImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync*
  name: extendImmutabilityPolicyAsync
  nameWithType: BlobContainers.extendImmutabilityPolicyAsync
  fullName: com.azure.resourcemanager.storage.models.BlobContainers.extendImmutabilityPolicyAsync
  package: com.azure.resourcemanager.storage.models
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.resourcemanager.storage.fluent.inner.ListContainerItemInner
  name: ListContainerItemInner
  nameWithType: ListContainerItemInner
  fullName: com.azure.resourcemanager.storage.fluent.inner.ListContainerItemInner
- uid: com.azure.resourcemanager.storage.models.BlobContainer
  name: BlobContainer
  nameWithType: BlobContainer
  fullName: com.azure.resourcemanager.storage.models.BlobContainer
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.storage.models.LegalHold
  name: LegalHold
  nameWithType: LegalHold
  fullName: com.azure.resourcemanager.storage.models.LegalHold
- uid: com.azure.resourcemanager.storage.models.ImmutabilityPolicy
  name: ImmutabilityPolicy
  nameWithType: ImmutabilityPolicy
  fullName: com.azure.resourcemanager.storage.models.ImmutabilityPolicy
