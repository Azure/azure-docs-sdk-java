### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.MediaServiceOperationResults"
fullName: "com.azure.resourcemanager.mediaservices.models.MediaServiceOperationResults"
name: "MediaServiceOperationResults"
nameWithType: "MediaServiceOperationResults"
summary: "Resource collection API of Media<wbr>Service<wbr>Operation<wbr>Results."
syntax: "public interface MediaServiceOperationResults"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.MediaServiceOperationResults.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaServiceOperationResults.get(String locationName, String operationId)"
  name: "get(String locationName, String operationId)"
  nameWithType: "MediaServiceOperationResults.get(String locationName, String operationId)"
  summary: "Get media service operation result."
  modifiers:
  - "abstract"
  parameters:
  - description: "Location name."
    name: "locationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation Id."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MediaService get(String locationName, String operationId)"
  desc: "Get media service operation result."
  returns:
    description: "media service operation result."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.MediaServiceOperationResults.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.MediaServiceOperationResults.getWithResponse(String locationName, String operationId, Context context)"
  name: "getWithResponse(String locationName, String operationId, Context context)"
  nameWithType: "MediaServiceOperationResults.getWithResponse(String locationName, String operationId, Context context)"
  summary: "Get media service operation result."
  modifiers:
  - "abstract"
  parameters:
  - description: "Location name."
    name: "locationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Operation Id."
    name: "operationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MediaService> getWithResponse(String locationName, String operationId, Context context)"
  desc: "Get media service operation result."
  returns:
    description: "media service operation result."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.MediaService?alt=com.azure.resourcemanager.mediaservices.models.MediaService&text=MediaService\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of MediaServiceOperationResults."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
