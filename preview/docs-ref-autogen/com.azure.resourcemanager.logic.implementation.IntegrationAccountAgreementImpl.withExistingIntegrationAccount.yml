### YamlMime:JavaMember
uid: "com.azure.resourcemanager.logic.implementation.IntegrationAccountAgreementImpl.withExistingIntegrationAccount*"
fullName: "com.azure.resourcemanager.logic.implementation.IntegrationAccountAgreementImpl.withExistingIntegrationAccount"
name: "withExistingIntegrationAccount"
nameWithType: "IntegrationAccountAgreementImpl.withExistingIntegrationAccount"
members:
- uid: "com.azure.resourcemanager.logic.implementation.IntegrationAccountAgreementImpl.withExistingIntegrationAccount(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.logic.implementation.IntegrationAccountAgreementImpl.withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName)"
  name: "withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName)"
  nameWithType: "IntegrationAccountAgreementImpl.withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName)"
  summary: "Specifies resourceGroupName, integrationAccountName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "integrationAccountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IntegrationAccountAgreementImpl withExistingIntegrationAccount(String resourceGroupName, String integrationAccountName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.logic.implementation.IntegrationAccountAgreementImpl?alt=com.azure.resourcemanager.logic.implementation.IntegrationAccountAgreementImpl&text=IntegrationAccountAgreementImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.logic.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-logic:1.0.0-beta.1
