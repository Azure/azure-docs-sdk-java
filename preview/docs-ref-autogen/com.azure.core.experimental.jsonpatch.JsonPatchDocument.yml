### YamlMime:ManagedReference
items:
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  id: JsonPatchDocument
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch
  children:
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument()
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument(com.azure.core.util.serializer.JsonSerializer)
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendAdd(java.lang.String,java.lang.Object)
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendCopy(java.lang.String,java.lang.String)
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendMove(java.lang.String,java.lang.String)
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendRemove(java.lang.String)
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendReplace(java.lang.String,java.lang.Object)
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTest(java.lang.String,java.lang.Object)
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.getJsonPatchOperations()
  - com.azure.core.experimental.jsonpatch.JsonPatchDocument.toString()
  langs:
  - java
  name: JsonPatchDocument
  nameWithType: JsonPatchDocument
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  type: Class
  package: com.azure.core.experimental.jsonpatch
  summary: Represents a JSON Patch document.
  syntax:
    content: public class JsonPatchDocument
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument()
  id: JsonPatchDocument()
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: JsonPatchDocument()
  nameWithType: JsonPatchDocument.JsonPatchDocument()
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument()
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument*
  type: Constructor
  package: com.azure.core.experimental.jsonpatch
  summary: Creates a new JSON Patch document.
  syntax:
    content: public JsonPatchDocument()
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument(com.azure.core.util.serializer.JsonSerializer)
  id: JsonPatchDocument(com.azure.core.util.serializer.JsonSerializer)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: JsonPatchDocument(JsonSerializer serializer)
  nameWithType: JsonPatchDocument.JsonPatchDocument(JsonSerializer serializer)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument(JsonSerializer serializer)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument*
  type: Constructor
  package: com.azure.core.experimental.jsonpatch
  summary: >-
    Creates a new JSON Patch document.


    If `serializer` isn't specified <xref uid="" data-throw-if-not-resolved="false">JacksonAdapter</xref> will be used.
  syntax:
    content: public JsonPatchDocument(JsonSerializer serializer)
    parameters:
    - id: serializer
      type: com.azure.core.util.serializer.JsonSerializer
      description: The <xref uid="com.azure.core.util.serializer.JsonSerializer" data-throw-if-not-resolved="false">JsonSerializer</xref> that will be used to serialize patch operation values.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendAdd(java.lang.String,java.lang.Object)
  id: appendAdd(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: appendAdd(String path, Object value)
  nameWithType: JsonPatchDocument.appendAdd(String path, Object value)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendAdd(String path, Object value)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendAdd*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: "Appends an \"add\" operation to this JSON Patch document.\n\nIf the `path` doesn't exist a new member is added to the object. If the `path` does exist the previous value is replaced. If the `path` specifies an array index the value is inserted at the specified.\n\nSee [JSON Patch Add][] for more information.\n\n**Code Samples**\n\n```java\n/*\n  * Add an object member to the JSON document { \"foo\" : \"bar\" } to get the JSON document\n  * { \"bar\": \"foo\", \"foo\": \"bar\" }.\n  */\n jsonPatchDocument.appendAdd(\"/bar\", \"foo\");\n \n /*\n  * Add an array element to the JSON document { \"foo\": [ \"fizz\", \"fizzbuzz\" ] } to get the JSON document\n  * { \"foo\": [ \"fizz\", \"buzz\", \"fizzbuzz\" ] }.\n  */\n jsonPatchDocument.appendAdd(\"/foo/1\", \"buzz\");\n \n /*\n  * Add a nested member to the JSON document { \"foo\": \"bar\" } to get the JSON document\n  * { \"foo\": \"bar\", \"child\": { \"grandchild\": { } } }.\n  */\n jsonPatchDocument.appendAdd(\"/child\", Collections.singletonMap(\"grandchild\", Collections.emptyMap()));\n \n /*\n  * Add an array element to the JSON document { \"foo\": [ \"fizz\", \"buzz\" ] } to get the JSON document\n  * { \"foo\": [ \"fizz\", \"buzz\", \"fizzbuzz\" ] }.\n  */\n jsonPatchDocument.appendAdd(\"/foo/-\", \"fizzbuzz\");\n```\n\n\n[JSON Patch Add]: https://tools.ietf.org/html/rfc6902#section-4.1"
  syntax:
    content: public JsonPatchDocument appendAdd(String path, Object value)
    parameters:
    - id: path
      type: java.lang.String
      description: The path to apply the addition.
    - id: value
      type: java.lang.Object
      description: The value to add to the path.
    return:
      type: com.azure.core.experimental.jsonpatch.JsonPatchDocument
      description: The updated JsonPatchDocument object.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendCopy(java.lang.String,java.lang.String)
  id: appendCopy(java.lang.String,java.lang.String)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: appendCopy(String from, String path)
  nameWithType: JsonPatchDocument.appendCopy(String from, String path)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendCopy(String from, String path)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendCopy*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: "Appends a \"copy\" operation to this JSON Patch document.\n\nSee [JSON Patch copy][] for more information.\n\n**Code Samples**\n\n```java\n/*\n  * Copy an object member in the JSON document { \"foo\": \"bar\" } to get the JSON document\n  * { \"foo\": \"bar\", \"copy\": \"bar\" }.\n  */\n jsonPatchDocument.appendCopy(\"/foo\", \"/copy\");\n \n /*\n  * Copy an object member in the JSON document { \"foo\": { \"bar\": \"baz\" } } to get the JSON document\n  * { \"foo\": { \"bar\": \"baz\" }, \"bar\": \"baz\" }.\n  */\n jsonPatchDocument.appendCopy(\"/foo/bar\", \"/bar\");\n \n /*\n  * Given the JSON document { \"foo\": \"bar\" } the following is an example of an invalid copy operation as the\n  * target from doesn't exist in the document.\n  */\n jsonPatchDocument.appendCopy(\"/baz\", \"/fizz\");\n```\n\n\n[JSON Patch copy]: https://tools.ietf.org/html/rfc6902#section-4.5"
  syntax:
    content: public JsonPatchDocument appendCopy(String from, String path)
    parameters:
    - id: from
      type: java.lang.String
      description: The path to copy from.
    - id: path
      type: java.lang.String
      description: The path to copy to.
    return:
      type: com.azure.core.experimental.jsonpatch.JsonPatchDocument
      description: The updated JsonPatchDocument object.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendMove(java.lang.String,java.lang.String)
  id: appendMove(java.lang.String,java.lang.String)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: appendMove(String from, String path)
  nameWithType: JsonPatchDocument.appendMove(String from, String path)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendMove(String from, String path)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendMove*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: "Appends a \"move\" operation to this JSON Patch document.\n\nFor the operation to be successful `path` cannot be a child node of `from`.\n\nSee [JSON Patch move][] for more information.\n\n**Code Samples**\n\n```java\n/*\n  * Move an object member in the JSON document { \"foo\": \"bar\", \"bar\": \"foo\" } to get the JSON document\n  * { \"bar\": \"bar\" }.\n  */\n jsonPatchDocument.appendMove(\"/foo\", \"/bar\");\n \n /*\n  * Move an object member in the JSON document { \"foo\": { \"bar\": \"baz\" } } to get the JSON document\n  * { \"foo\": \"baz\" }.\n  */\n jsonPatchDocument.appendMove(\"/foo/bar\", \"/foo\");\n \n /*\n  * Given the JSON document { \"foo\": { \"bar\": \"baz\" } } the following is an example of an invalid move operation\n  * as the target path is a child of the target from.\n  */\n jsonPatchDocument.appendMove(\"/foo\", \"/foo/bar\");\n \n /*\n  * Given the JSON document { \"foo\": \"bar\" } the following is an example of an invalid move operation as the\n  * target from doesn't exist in the document.\n  */\n jsonPatchDocument.appendMove(\"/baz\", \"/fizz\");\n```\n\n\n[JSON Patch move]: https://tools.ietf.org/html/rfc6902#section-4.4"
  syntax:
    content: public JsonPatchDocument appendMove(String from, String path)
    parameters:
    - id: from
      type: java.lang.String
      description: The path to move from.
    - id: path
      type: java.lang.String
      description: The path to move to.
    return:
      type: com.azure.core.experimental.jsonpatch.JsonPatchDocument
      description: The updated JsonPatchDocument object.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendRemove(java.lang.String)
  id: appendRemove(java.lang.String)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: appendRemove(String path)
  nameWithType: JsonPatchDocument.appendRemove(String path)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendRemove(String path)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendRemove*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: "Appends a \"remove\" operation to this JSON Patch document.\n\nSee [JSON Patch remove][] for more information.\n\n**Code Samples**\n\n```java\n/*\n  * Remove an object member in the JSON document { \"foo\": \"bar\", \"bar\": \"foo\" } to get the JSON document\n  * { \"foo\": \"bar\" }.\n  */\n jsonPatchDocument.appendRemove(\"/bar\");\n \n /*\n  * Remove an object member in the JSON document { \"foo\": { \"bar\": \"baz\" } } to get the JSON document\n  * { \"foo\": { } }.\n  */\n jsonPatchDocument.appendRemove(\"/foo/bar\");\n \n /*\n  * Given the JSON document { \"foo\": \"bar\" } the following is an example of an invalid remove operation as the\n  * target from doesn't exist in the document.\n  */\n jsonPatchDocument.appendRemove(\"/baz\");\n```\n\n\n[JSON Patch remove]: https://tools.ietf.org/html/rfc6902#section-4.2"
  syntax:
    content: public JsonPatchDocument appendRemove(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: The path to remove.
    return:
      type: com.azure.core.experimental.jsonpatch.JsonPatchDocument
      description: The updated JsonPatchDocument object.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendReplace(java.lang.String,java.lang.Object)
  id: appendReplace(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: appendReplace(String path, Object value)
  nameWithType: JsonPatchDocument.appendReplace(String path, Object value)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendReplace(String path, Object value)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendReplace*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: "Appends a \"replace\" operation to this JSON Patch document.\n\nSee [JSON Patch replace][] for more information.\n\n**Code Samples**\n\n```java\n/*\n  * Replace an object member in the JSON document { \"bar\": \"qux\", \"foo\": \"bar\" } to get the JSON document\n  * { \"bar\": \"foo\", \"foo\": \"bar\" }.\n  */\n jsonPatchDocument.appendReplace(\"/bar\", \"foo\");\n \n /*\n  * Replace an object member in the JSON document { \"foo\": \"fizz\" } to get the JSON document\n  * { \"foo\": [ \"fizz\", \"buzz\", \"fizzbuzz\" ]  }.\n  */\n jsonPatchDocument.appendReplace(\"/foo\", new String[] {\"fizz\", \"buzz\", \"fizzbuzz\"});\n \n /*\n  * Given the JSON document { \"foo\": \"bar\" } the following is an example of an invalid replace operation as the\n  * target path doesn't exist in the document.\n  */\n jsonPatchDocument.appendReplace(\"/baz\", \"foo\");\n```\n\n\n[JSON Patch replace]: https://tools.ietf.org/html/rfc6902#section-4.3"
  syntax:
    content: public JsonPatchDocument appendReplace(String path, Object value)
    parameters:
    - id: path
      type: java.lang.String
      description: The path to replace.
    - id: value
      type: java.lang.Object
      description: The value to use as the replacement.
    return:
      type: com.azure.core.experimental.jsonpatch.JsonPatchDocument
      description: The updated JsonPatchDocument object.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTest(java.lang.String,java.lang.Object)
  id: appendTest(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: appendTest(String path, Object value)
  nameWithType: JsonPatchDocument.appendTest(String path, Object value)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTest(String path, Object value)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTest*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: "Appends a \"test\" operation to this JSON Patch document.\n\nSee [JSON Patch test][] for more information.\n\n**Code Samples**\n\n```java\n/*\n  * Test an object member in the JSON document { \"foo\": \"bar\" } to get a successful operation.\n  */\n jsonPatchDocument.appendTest(\"/foo\", \"bar\");\n \n /*\n  * Test an object member in the JSON document { \"foo\": \"bar\" } to get a unsuccessful operation.\n  */\n jsonPatchDocument.appendTest(\"/foo\", 42);\n \n /*\n  * Given the JSON document { \"foo\": \"bar\" } the following is an example of an unsuccessful test operation as\n  * the target path doesn't exist in the document.\n  */\n jsonPatchDocument.appendTest(\"/baz\", \"bar\");\n```\n\n\n[JSON Patch test]: https://tools.ietf.org/html/rfc6902#section-4.6"
  syntax:
    content: public JsonPatchDocument appendTest(String path, Object value)
    parameters:
    - id: path
      type: java.lang.String
      description: The path to test.
    - id: value
      type: java.lang.Object
      description: The value to test against.
    return:
      type: com.azure.core.experimental.jsonpatch.JsonPatchDocument
      description: The updated JsonPatchDocument object.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.getJsonPatchOperations()
  id: getJsonPatchOperations()
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: getJsonPatchOperations()
  nameWithType: JsonPatchDocument.getJsonPatchOperations()
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.getJsonPatchOperations()
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.getJsonPatchOperations*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: Gets an unmodifiable list of JSON Patch operations in this document.
  syntax:
    content: public List<JsonPatchOperation> getJsonPatchOperations()
    return:
      type: java.util.List<com.azure.core.experimental.jsonpatch.JsonPatchOperation>
      description: An unmodifiable list of JSON Patch operations in this document.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.toString()
  id: toString()
  artifact: com.azure:azure-core-experimental:1.0.0-beta.5
  parent: com.azure.core.experimental.jsonpatch.JsonPatchDocument
  langs:
  - java
  name: toString()
  nameWithType: JsonPatchDocument.toString()
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.toString()
  overload: com.azure.core.experimental.jsonpatch.JsonPatchDocument.toString*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: Gets a formatted JSON string representation of this JSON Patch document.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: The formatted JSON String representing this JSON Patch docuemnt.
references:
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument*
  name: JsonPatchDocument
  nameWithType: JsonPatchDocument.JsonPatchDocument
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.JsonPatchDocument
  package: com.azure.core.experimental.jsonpatch
- uid: com.azure.core.util.serializer.JsonSerializer
  spec.java:
  - uid: com.azure.core.util.serializer.JsonSerializer
    name: JsonSerializer
    fullName: com.azure.core.util.serializer.JsonSerializer
- uid: java.util.List<com.azure.core.experimental.jsonpatch.JsonPatchOperation>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.core.experimental.jsonpatch.JsonPatchOperation
    name: JsonPatchOperation
    fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperation
  - name: '>'
    fullName: '>'
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.getJsonPatchOperations*
  name: getJsonPatchOperations
  nameWithType: JsonPatchDocument.getJsonPatchOperations
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.getJsonPatchOperations
  package: com.azure.core.experimental.jsonpatch
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendAdd*
  name: appendAdd
  nameWithType: JsonPatchDocument.appendAdd
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendAdd
  package: com.azure.core.experimental.jsonpatch
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendReplace*
  name: appendReplace
  nameWithType: JsonPatchDocument.appendReplace
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendReplace
  package: com.azure.core.experimental.jsonpatch
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendCopy*
  name: appendCopy
  nameWithType: JsonPatchDocument.appendCopy
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendCopy
  package: com.azure.core.experimental.jsonpatch
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendMove*
  name: appendMove
  nameWithType: JsonPatchDocument.appendMove
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendMove
  package: com.azure.core.experimental.jsonpatch
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendRemove*
  name: appendRemove
  nameWithType: JsonPatchDocument.appendRemove
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendRemove
  package: com.azure.core.experimental.jsonpatch
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTest*
  name: appendTest
  nameWithType: JsonPatchDocument.appendTest
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.appendTest
  package: com.azure.core.experimental.jsonpatch
- uid: com.azure.core.experimental.jsonpatch.JsonPatchDocument.toString*
  name: toString
  nameWithType: JsonPatchDocument.toString
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchDocument.toString
  package: com.azure.core.experimental.jsonpatch
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperation
  name: JsonPatchOperation
  nameWithType: JsonPatchOperation
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperation
