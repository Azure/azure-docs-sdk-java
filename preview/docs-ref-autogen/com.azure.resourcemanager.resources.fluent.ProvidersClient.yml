### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient
  id: ProvidersClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent
  children:
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.ProvidersClient(com.azure.resourcemanager.resources.ResourceManagementClient)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.get(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.get(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.list()
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.list(java.lang.Integer,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync()
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(java.lang.Integer,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope()
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(java.lang.Integer,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync()
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(java.lang.Integer,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync(java.lang.Integer,java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.register(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.register(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: ProvidersClient
  nameWithType: ProvidersClient
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient
  type: Class
  package: com.azure.resourcemanager.resources.fluent
  summary: An instance of this class provides access to all the operations defined in Providers.
  syntax:
    content: public final class ProvidersClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.ProvidersClient(com.azure.resourcemanager.resources.ResourceManagementClient)
  id: ProvidersClient(com.azure.resourcemanager.resources.ResourceManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: ProvidersClient(ResourceManagementClient client)
  nameWithType: ProvidersClient.ProvidersClient(ResourceManagementClient client)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.ProvidersClient(ResourceManagementClient client)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.ProvidersClient*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluent
  summary: Initializes an instance of ProvidersClient.
  syntax:
    content: public ProvidersClient(ResourceManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.resources.ResourceManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: get(String resourceProviderNamespace)
  nameWithType: ProvidersClient.get(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.get(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.get*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public ProviderInner get(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.get(java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: get(String resourceProviderNamespace, String expand)
  nameWithType: ProvidersClient.get(String resourceProviderNamespace, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.get(String resourceProviderNamespace, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.get*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public ProviderInner get(String resourceProviderNamespace, String expand)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: get(String resourceProviderNamespace, String expand, Context context)
  nameWithType: ProvidersClient.get(String resourceProviderNamespace, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.get(String resourceProviderNamespace, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.get*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public ProviderInner get(String resourceProviderNamespace, String expand, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAsync(String resourceProviderNamespace)
  nameWithType: ProvidersClient.getAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public Mono<ProviderInner> getAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAsync(String resourceProviderNamespace, String expand)
  nameWithType: ProvidersClient.getAsync(String resourceProviderNamespace, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(String resourceProviderNamespace, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public Mono<ProviderInner> getAsync(String resourceProviderNamespace, String expand)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAsync(String resourceProviderNamespace, String expand, Context context)
  nameWithType: ProvidersClient.getAsync(String resourceProviderNamespace, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync(String resourceProviderNamespace, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public Mono<ProviderInner> getAsync(String resourceProviderNamespace, String expand, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(java.lang.String)
  id: getAtTenantScope(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScope(String resourceProviderNamespace)
  nameWithType: ProvidersClient.getAtTenantScope(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public ProviderInner getAtTenantScope(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(java.lang.String,java.lang.String)
  id: getAtTenantScope(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScope(String resourceProviderNamespace, String expand)
  nameWithType: ProvidersClient.getAtTenantScope(String resourceProviderNamespace, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(String resourceProviderNamespace, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public ProviderInner getAtTenantScope(String resourceProviderNamespace, String expand)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAtTenantScope(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScope(String resourceProviderNamespace, String expand, Context context)
  nameWithType: ProvidersClient.getAtTenantScope(String resourceProviderNamespace, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope(String resourceProviderNamespace, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public ProviderInner getAtTenantScope(String resourceProviderNamespace, String expand, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String)
  id: getAtTenantScopeAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScopeAsync(String resourceProviderNamespace)
  nameWithType: ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public Mono<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String,java.lang.String)
  id: getAtTenantScopeAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScopeAsync(String resourceProviderNamespace, String expand)
  nameWithType: ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public Mono<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace, String expand)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAtTenantScopeAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScopeAsync(String resourceProviderNamespace, String expand, Context context)
  nameWithType: ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync(String resourceProviderNamespace, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public Mono<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace, String expand, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(java.lang.String,java.lang.String)
  id: getAtTenantScopeWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)
  nameWithType: ProvidersClient.getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public Mono<Response<ProviderInner>> getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAtTenantScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
  nameWithType: ProvidersClient.getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider at the tenant level.
  syntax:
    content: public Mono<Response<ProviderInner>> getAtTenantScopeWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: the specified resource provider at the tenant level.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getWithResponseAsync(String resourceProviderNamespace, String expand)
  nameWithType: ProvidersClient.getWithResponseAsync(String resourceProviderNamespace, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(String resourceProviderNamespace, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public Mono<Response<ProviderInner>> getWithResponseAsync(String resourceProviderNamespace, String expand)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: getWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
  nameWithType: ProvidersClient.getWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets the specified resource provider.
  syntax:
    content: public Mono<Response<ProviderInner>> getWithResponseAsync(String resourceProviderNamespace, String expand, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider.
    - id: expand
      type: java.lang.String
      description: >-
        The $expand query parameter. For example, to include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: the specified resource provider.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: list()
  nameWithType: ProvidersClient.list()
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.list()
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.list*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public PagedIterable<ProviderInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.list(java.lang.Integer,java.lang.String)
  id: list(java.lang.Integer,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: list(Integer top, String expand)
  nameWithType: ProvidersClient.list(Integer top, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.list(Integer top, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.list*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public PagedIterable<ProviderInner> list(Integer top, String expand)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all deployments.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: list(Integer top, String expand, Context context)
  nameWithType: ProvidersClient.list(Integer top, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.list(Integer top, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.list*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public PagedIterable<ProviderInner> list(Integer top, String expand, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all deployments.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAsync()
  nameWithType: ProvidersClient.listAsync()
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync()
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public PagedFlux<ProviderInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(java.lang.Integer,java.lang.String)
  id: listAsync(java.lang.Integer,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAsync(Integer top, String expand)
  nameWithType: ProvidersClient.listAsync(Integer top, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(Integer top, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public PagedFlux<ProviderInner> listAsync(Integer top, String expand)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all deployments.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  id: listAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAsync(Integer top, String expand, Context context)
  nameWithType: ProvidersClient.listAsync(Integer top, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync(Integer top, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public PagedFlux<ProviderInner> listAsync(Integer top, String expand, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all deployments.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope()
  id: listAtTenantScope()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScope()
  nameWithType: ProvidersClient.listAtTenantScope()
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope()
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public PagedIterable<ProviderInner> listAtTenantScope()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(java.lang.Integer,java.lang.String)
  id: listAtTenantScope(java.lang.Integer,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScope(Integer top, String expand)
  nameWithType: ProvidersClient.listAtTenantScope(Integer top, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(Integer top, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public PagedIterable<ProviderInner> listAtTenantScope(Integer top, String expand)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all providers.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  id: listAtTenantScope(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScope(Integer top, String expand, Context context)
  nameWithType: ProvidersClient.listAtTenantScope(Integer top, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope(Integer top, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public PagedIterable<ProviderInner> listAtTenantScope(Integer top, String expand, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all providers.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync()
  id: listAtTenantScopeAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScopeAsync()
  nameWithType: ProvidersClient.listAtTenantScopeAsync()
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync()
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public PagedFlux<ProviderInner> listAtTenantScopeAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(java.lang.Integer,java.lang.String)
  id: listAtTenantScopeAsync(java.lang.Integer,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScopeAsync(Integer top, String expand)
  nameWithType: ProvidersClient.listAtTenantScopeAsync(Integer top, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(Integer top, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public PagedFlux<ProviderInner> listAtTenantScopeAsync(Integer top, String expand)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all providers.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  id: listAtTenantScopeAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScopeAsync(Integer top, String expand, Context context)
  nameWithType: ProvidersClient.listAtTenantScopeAsync(Integer top, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync(Integer top, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public PagedFlux<ProviderInner> listAtTenantScopeAsync(Integer top, String expand, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all providers.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync(java.lang.String)
  id: listAtTenantScopeNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScopeNextSinglePageAsync(String nextLink)
  nameWithType: ProvidersClient.listAtTenantScopeNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listAtTenantScopeNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: list of resource providers.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listAtTenantScopeNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScopeNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ProvidersClient.listAtTenantScopeNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listAtTenantScopeNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: list of resource providers.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String)
  id: listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScopeSinglePageAsync(Integer top, String expand)
  nameWithType: ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listAtTenantScopeSinglePageAsync(Integer top, String expand)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all providers.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  id: listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
  nameWithType: ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for the tenant.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listAtTenantScopeSinglePageAsync(Integer top, String expand, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all providers.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: all resource providers for the tenant.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: ProvidersClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: list of resource providers.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ProvidersClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: list of resource providers.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync(java.lang.Integer,java.lang.String)
  id: listSinglePageAsync(java.lang.Integer,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listSinglePageAsync(Integer top, String expand)
  nameWithType: ProvidersClient.listSinglePageAsync(Integer top, String expand)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync(Integer top, String expand)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listSinglePageAsync(Integer top, String expand)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all deployments.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  id: listSinglePageAsync(java.lang.Integer,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: listSinglePageAsync(Integer top, String expand, Context context)
  nameWithType: ProvidersClient.listSinglePageAsync(Integer top, String expand, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync(Integer top, String expand, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Gets all resource providers for a subscription.
  syntax:
    content: public Mono<PagedResponse<ProviderInner>> listSinglePageAsync(Integer top, String expand, Context context)
    parameters:
    - id: top
      type: java.lang.Integer
      description: The number of results to return. If null is passed returns all deployments.
    - id: expand
      type: java.lang.String
      description: >-
        The properties to include in the results. For example, use &amp;$expand=metadata in the query
             string to retrieve resource provider metadata. To include property aliases in response, use
             $expand=resourceTypes/aliases.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: all resource providers for a subscription.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.register(java.lang.String)
  id: register(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: register(String resourceProviderNamespace)
  nameWithType: ProvidersClient.register(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.register(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.register*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Registers a subscription with a resource provider.
  syntax:
    content: public ProviderInner register(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to register.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.register(java.lang.String,com.azure.core.util.Context)
  id: register(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: register(String resourceProviderNamespace, Context context)
  nameWithType: ProvidersClient.register(String resourceProviderNamespace, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.register(String resourceProviderNamespace, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.register*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Registers a subscription with a resource provider.
  syntax:
    content: public ProviderInner register(String resourceProviderNamespace, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to register.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(java.lang.String)
  id: registerAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: registerAsync(String resourceProviderNamespace)
  nameWithType: ProvidersClient.registerAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Registers a subscription with a resource provider.
  syntax:
    content: public Mono<ProviderInner> registerAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to register.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(java.lang.String,com.azure.core.util.Context)
  id: registerAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: registerAsync(String resourceProviderNamespace, Context context)
  nameWithType: ProvidersClient.registerAsync(String resourceProviderNamespace, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync(String resourceProviderNamespace, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Registers a subscription with a resource provider.
  syntax:
    content: public Mono<ProviderInner> registerAsync(String resourceProviderNamespace, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to register.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(java.lang.String)
  id: registerWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: registerWithResponseAsync(String resourceProviderNamespace)
  nameWithType: ProvidersClient.registerWithResponseAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Registers a subscription with a resource provider.
  syntax:
    content: public Mono<Response<ProviderInner>> registerWithResponseAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to register.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: registerWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: registerWithResponseAsync(String resourceProviderNamespace, Context context)
  nameWithType: ProvidersClient.registerWithResponseAsync(String resourceProviderNamespace, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync(String resourceProviderNamespace, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Registers a subscription with a resource provider.
  syntax:
    content: public Mono<Response<ProviderInner>> registerWithResponseAsync(String resourceProviderNamespace, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to register.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(java.lang.String)
  id: unregister(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: unregister(String resourceProviderNamespace)
  nameWithType: ProvidersClient.unregister(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Unregisters a subscription from a resource provider.
  syntax:
    content: public ProviderInner unregister(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to unregister.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(java.lang.String,com.azure.core.util.Context)
  id: unregister(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: unregister(String resourceProviderNamespace, Context context)
  nameWithType: ProvidersClient.unregister(String resourceProviderNamespace, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister(String resourceProviderNamespace, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Unregisters a subscription from a resource provider.
  syntax:
    content: public ProviderInner unregister(String resourceProviderNamespace, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to unregister.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(java.lang.String)
  id: unregisterAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: unregisterAsync(String resourceProviderNamespace)
  nameWithType: ProvidersClient.unregisterAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Unregisters a subscription from a resource provider.
  syntax:
    content: public Mono<ProviderInner> unregisterAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to unregister.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(java.lang.String,com.azure.core.util.Context)
  id: unregisterAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: unregisterAsync(String resourceProviderNamespace, Context context)
  nameWithType: ProvidersClient.unregisterAsync(String resourceProviderNamespace, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync(String resourceProviderNamespace, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Unregisters a subscription from a resource provider.
  syntax:
    content: public Mono<ProviderInner> unregisterAsync(String resourceProviderNamespace, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to unregister.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(java.lang.String)
  id: unregisterWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: unregisterWithResponseAsync(String resourceProviderNamespace)
  nameWithType: ProvidersClient.unregisterWithResponseAsync(String resourceProviderNamespace)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(String resourceProviderNamespace)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Unregisters a subscription from a resource provider.
  syntax:
    content: public Mono<Response<ProviderInner>> unregisterWithResponseAsync(String resourceProviderNamespace)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to unregister.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: resource provider information.
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: unregisterWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluent.ProvidersClient
  langs:
  - java
  name: unregisterWithResponseAsync(String resourceProviderNamespace, Context context)
  nameWithType: ProvidersClient.unregisterWithResponseAsync(String resourceProviderNamespace, Context context)
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync(String resourceProviderNamespace, Context context)
  overload: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluent
  summary: Unregisters a subscription from a resource provider.
  syntax:
    content: public Mono<Response<ProviderInner>> unregisterWithResponseAsync(String resourceProviderNamespace, Context context)
    parameters:
    - id: resourceProviderNamespace
      type: java.lang.String
      description: The namespace of the resource provider to unregister.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
      description: resource provider information.
references:
- uid: com.azure.resourcemanager.resources.ResourceManagementClient
  name: ResourceManagementClient
  nameWithType: ResourceManagementClient
  fullName: com.azure.resourcemanager.resources.ResourceManagementClient
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.ProvidersClient*
  name: ProvidersClient
  nameWithType: ProvidersClient.ProvidersClient
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.ProvidersClient
  package: com.azure.resourcemanager.resources.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
    name: ProviderInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync*
  name: unregisterWithResponseAsync
  nameWithType: ProvidersClient.unregisterWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
    name: ProviderInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync*
  name: unregisterAsync
  nameWithType: ProvidersClient.unregisterAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregisterAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
  name: ProviderInner
  nameWithType: ProviderInner
  fullName: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister*
  name: unregister
  nameWithType: ProvidersClient.unregister
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.unregister
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync*
  name: registerWithResponseAsync
  nameWithType: ProvidersClient.registerWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync*
  name: registerAsync
  nameWithType: ProvidersClient.registerAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.registerAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.register*
  name: register
  nameWithType: ProvidersClient.register
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.register
  package: com.azure.resourcemanager.resources.fluent
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
    name: ProviderInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: ProvidersClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listSinglePageAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
    name: ProviderInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync*
  name: listAsync
  nameWithType: ProvidersClient.listAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.resources.fluent.inner.ProviderInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
    name: ProviderInner
    fullName: com.azure.resourcemanager.resources.fluent.inner.ProviderInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.list*
  name: list
  nameWithType: ProvidersClient.list
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.list
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync*
  name: listAtTenantScopeSinglePageAsync
  nameWithType: ProvidersClient.listAtTenantScopeSinglePageAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeSinglePageAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync*
  name: listAtTenantScopeAsync
  nameWithType: ProvidersClient.listAtTenantScopeAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope*
  name: listAtTenantScope
  nameWithType: ProvidersClient.listAtTenantScope
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScope
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: ProvidersClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync*
  name: getAsync
  nameWithType: ProvidersClient.getAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.get*
  name: get
  nameWithType: ProvidersClient.get
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.get
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync*
  name: getAtTenantScopeWithResponseAsync
  nameWithType: ProvidersClient.getAtTenantScopeWithResponseAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeWithResponseAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync*
  name: getAtTenantScopeAsync
  nameWithType: ProvidersClient.getAtTenantScopeAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScopeAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope*
  name: getAtTenantScope
  nameWithType: ProvidersClient.getAtTenantScope
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.getAtTenantScope
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: ProvidersClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync*
  name: listAtTenantScopeNextSinglePageAsync
  nameWithType: ProvidersClient.listAtTenantScopeNextSinglePageAsync
  fullName: com.azure.resourcemanager.resources.fluent.ProvidersClient.listAtTenantScopeNextSinglePageAsync
  package: com.azure.resourcemanager.resources.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
