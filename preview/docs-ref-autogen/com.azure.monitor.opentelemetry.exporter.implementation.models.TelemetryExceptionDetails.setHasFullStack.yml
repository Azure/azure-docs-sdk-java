### YamlMime:JavaMember
uid: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setHasFullStack*"
fullName: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setHasFullStack"
name: "setHasFullStack"
nameWithType: "TelemetryExceptionDetails.setHasFullStack"
members:
- uid: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setHasFullStack(java.lang.Boolean)"
  fullName: "com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails.setHasFullStack(Boolean hasFullStack)"
  name: "setHasFullStack(Boolean hasFullStack)"
  nameWithType: "TelemetryExceptionDetails.setHasFullStack(Boolean hasFullStack)"
  summary: "Set the hasFullStack property: Indicates if full exception stack is provided in the exception. The stack may be trimmed, such as in the case of a StackOverflow exception."
  parameters:
  - description: "the hasFullStack value to set."
    name: "hasFullStack"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TelemetryExceptionDetails setHasFullStack(Boolean hasFullStack)"
  returns:
    description: "the TelemetryExceptionDetails object itself."
    type: "<xref href=\"com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails?alt=com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryExceptionDetails&text=TelemetryExceptionDetails\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.monitor.opentelemetry.exporter.implementation.models"
artifact: com.azure:azure-monitor-opentelemetry-exporter:1.0.0-beta.4
