### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner"
fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner"
name: "PartnerNamespaceInner"
nameWithType: "PartnerNamespaceInner"
summary: "EventGrid Partner Namespace."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PartnerNamespaceInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.PartnerNamespaceInner()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.PartnerNamespaceInner()"
  name: "PartnerNamespaceInner()"
  nameWithType: "PartnerNamespaceInner.PartnerNamespaceInner()"
  syntax: "public PartnerNamespaceInner()"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.disableLocalAuth()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.disableLocalAuth()"
  name: "disableLocalAuth()"
  nameWithType: "PartnerNamespaceInner.disableLocalAuth()"
  summary: "Get the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace."
  syntax: "public Boolean disableLocalAuth()"
  returns:
    description: "the disableLocalAuth value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.endpoint()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.endpoint()"
  name: "endpoint()"
  nameWithType: "PartnerNamespaceInner.endpoint()"
  summary: "Get the endpoint property: Endpoint for the partner namespace."
  syntax: "public String endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.inboundIpRules()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.inboundIpRules()"
  name: "inboundIpRules()"
  nameWithType: "PartnerNamespaceInner.inboundIpRules()"
  summary: "Get the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  syntax: "public List<InboundIpRule> inboundIpRules()"
  returns:
    description: "the inboundIpRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.partnerRegistrationFullyQualifiedId()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.partnerRegistrationFullyQualifiedId()"
  name: "partnerRegistrationFullyQualifiedId()"
  nameWithType: "PartnerNamespaceInner.partnerRegistrationFullyQualifiedId()"
  summary: "Get the partnerRegistrationFullyQualifiedId property: The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.EventGrid/partnerRegistrations/\\{partnerRegistrationName\\}."
  syntax: "public String partnerRegistrationFullyQualifiedId()"
  returns:
    description: "the partnerRegistrationFullyQualifiedId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.partnerTopicRoutingMode()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.partnerTopicRoutingMode()"
  name: "partnerTopicRoutingMode()"
  nameWithType: "PartnerNamespaceInner.partnerTopicRoutingMode()"
  summary: "Get the partnerTopicRoutingMode property: This determines if events published to this partner namespace should use the source attribute in the event payload or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic."
  syntax: "public PartnerTopicRoutingMode partnerTopicRoutingMode()"
  returns:
    description: "the partnerTopicRoutingMode value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode&text=PartnerTopicRoutingMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "PartnerNamespaceInner.privateEndpointConnections()"
  summary: "Get the privateEndpointConnections property: The privateEndpointConnections property."
  syntax: "public List<PrivateEndpointConnectionInner> privateEndpointConnections()"
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PrivateEndpointConnectionInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PrivateEndpointConnectionInner&text=PrivateEndpointConnectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PartnerNamespaceInner.provisioningState()"
  summary: "Get the provisioningState property: Provisioning state of the partner namespace."
  syntax: "public PartnerNamespaceProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerNamespaceProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.PartnerNamespaceProvisioningState&text=PartnerNamespaceProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "PartnerNamespaceInner.publicNetworkAccess()"
  summary: "Get the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />."
  syntax: "public PublicNetworkAccess publicNetworkAccess()"
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.systemData()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.systemData()"
  name: "systemData()"
  nameWithType: "PartnerNamespaceInner.systemData()"
  summary: "Get the systemData property: The system metadata relating to Partner Namespace resource."
  syntax: "public SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.validate()"
  name: "validate()"
  nameWithType: "PartnerNamespaceInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withDisableLocalAuth(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withDisableLocalAuth(Boolean disableLocalAuth)"
  name: "withDisableLocalAuth(Boolean disableLocalAuth)"
  nameWithType: "PartnerNamespaceInner.withDisableLocalAuth(Boolean disableLocalAuth)"
  summary: "Set the disableLocalAuth property: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace."
  parameters:
  - description: "the disableLocalAuth value to set."
    name: "disableLocalAuth"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerNamespaceInner withDisableLocalAuth(Boolean disableLocalAuth)"
  returns:
    description: "the PartnerNamespaceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withInboundIpRules(java.util.List<com.azure.resourcemanager.eventgrid.models.InboundIpRule>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  name: "withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  nameWithType: "PartnerNamespaceInner.withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  summary: "Set the inboundIpRules property: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
  parameters:
  - description: "the inboundIpRules value to set."
    name: "inboundIpRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.InboundIpRule?alt=com.azure.resourcemanager.eventgrid.models.InboundIpRule&text=InboundIpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PartnerNamespaceInner withInboundIpRules(List<InboundIpRule> inboundIpRules)"
  returns:
    description: "the PartnerNamespaceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "PartnerNamespaceInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerNamespaceInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withPartnerRegistrationFullyQualifiedId(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withPartnerRegistrationFullyQualifiedId(String partnerRegistrationFullyQualifiedId)"
  name: "withPartnerRegistrationFullyQualifiedId(String partnerRegistrationFullyQualifiedId)"
  nameWithType: "PartnerNamespaceInner.withPartnerRegistrationFullyQualifiedId(String partnerRegistrationFullyQualifiedId)"
  summary: "Set the partnerRegistrationFullyQualifiedId property: The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.EventGrid/partnerRegistrations/\\{partnerRegistrationName\\}."
  parameters:
  - description: "the partnerRegistrationFullyQualifiedId value to set."
    name: "partnerRegistrationFullyQualifiedId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerNamespaceInner withPartnerRegistrationFullyQualifiedId(String partnerRegistrationFullyQualifiedId)"
  returns:
    description: "the PartnerNamespaceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withPartnerTopicRoutingMode(com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withPartnerTopicRoutingMode(PartnerTopicRoutingMode partnerTopicRoutingMode)"
  name: "withPartnerTopicRoutingMode(PartnerTopicRoutingMode partnerTopicRoutingMode)"
  nameWithType: "PartnerNamespaceInner.withPartnerTopicRoutingMode(PartnerTopicRoutingMode partnerTopicRoutingMode)"
  summary: "Set the partnerTopicRoutingMode property: This determines if events published to this partner namespace should use the source attribute in the event payload or use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic."
  parameters:
  - description: "the partnerTopicRoutingMode value to set."
    name: "partnerTopicRoutingMode"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicRoutingMode&text=PartnerTopicRoutingMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerNamespaceInner withPartnerTopicRoutingMode(PartnerTopicRoutingMode partnerTopicRoutingMode)"
  returns:
    description: "the PartnerNamespaceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withPublicNetworkAccess(com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "PartnerNamespaceInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the publicNetworkAccess property: This determines if traffic is allowed over public network. By default it is enabled. You can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess?alt=com.azure.resourcemanager.eventgrid.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartnerNamespaceInner withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  returns:
    description: "the PartnerNamespaceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "PartnerNamespaceInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PartnerNamespaceInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.PartnerNamespaceInner&text=PartnerNamespaceInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
