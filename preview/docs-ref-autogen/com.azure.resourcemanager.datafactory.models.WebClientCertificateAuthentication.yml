### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication"
fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication"
name: "WebClientCertificateAuthentication"
nameWithType: "WebClientCertificateAuthentication"
summary: "A Web<wbr>Linked<wbr>Service that uses client certificate based authentication to communicate with an HTTP endpoint."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.WebLinkedServiceTypeProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.WebLinkedServiceTypeProperties.url()"
- "com.azure.resourcemanager.datafactory.models.WebLinkedServiceTypeProperties.validate()"
- "com.azure.resourcemanager.datafactory.models.WebLinkedServiceTypeProperties.withUrl(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class WebClientCertificateAuthentication extends WebLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.WebClientCertificateAuthentication()"
  fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.WebClientCertificateAuthentication()"
  name: "WebClientCertificateAuthentication()"
  nameWithType: "WebClientCertificateAuthentication.WebClientCertificateAuthentication()"
  syntax: "public WebClientCertificateAuthentication()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.password()"
  fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.password()"
  name: "password()"
  nameWithType: "WebClientCertificateAuthentication.password()"
  summary: "Get the password property: Password for the PFX file."
  syntax: "public SecretBase password()"
  desc: "Get the password property: Password for the PFX file."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.pfx()"
  fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.pfx()"
  name: "pfx()"
  nameWithType: "WebClientCertificateAuthentication.pfx()"
  summary: "Get the pfx property: Base64-encoded contents of a PFX file."
  syntax: "public SecretBase pfx()"
  desc: "Get the pfx property: Base64-encoded contents of a PFX file."
  returns:
    description: "the pfx value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.validate()"
  name: "validate()"
  nameWithType: "WebClientCertificateAuthentication.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.WebLinkedServiceTypeProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "WebClientCertificateAuthentication.withPassword(SecretBase password)"
  summary: "Set the password property: Password for the PFX file."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WebClientCertificateAuthentication withPassword(SecretBase password)"
  desc: "Set the password property: Password for the PFX file."
  returns:
    description: "the WebClientCertificateAuthentication object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication?alt=com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication&text=WebClientCertificateAuthentication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.withPfx(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.withPfx(SecretBase pfx)"
  name: "withPfx(SecretBase pfx)"
  nameWithType: "WebClientCertificateAuthentication.withPfx(SecretBase pfx)"
  summary: "Set the pfx property: Base64-encoded contents of a PFX file."
  parameters:
  - description: "the pfx value to set."
    name: "pfx"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WebClientCertificateAuthentication withPfx(SecretBase pfx)"
  desc: "Set the pfx property: Base64-encoded contents of a PFX file."
  returns:
    description: "the WebClientCertificateAuthentication object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication?alt=com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication&text=WebClientCertificateAuthentication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.withUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication.withUrl(Object url)"
  name: "withUrl(Object url)"
  nameWithType: "WebClientCertificateAuthentication.withUrl(Object url)"
  summary: "Set the url property: The URL of the web service endpoint, e.<wbr>g."
  overridden: "com.azure.resourcemanager.datafactory.models.WebLinkedServiceTypeProperties.withUrl(java.lang.Object)"
  parameters:
  - name: "url"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WebClientCertificateAuthentication withUrl(Object url)"
  desc: "Set the url property: The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication?alt=com.azure.resourcemanager.datafactory.models.WebClientCertificateAuthentication&text=WebClientCertificateAuthentication\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
