### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.module.SimpleModule.addAbstractTypeMapping*"
fullName: "com.fasterxml.jackson.databind.module.SimpleModule.<T>addAbstractTypeMapping"
name: "<T>addAbstractTypeMapping"
nameWithType: "SimpleModule.<T>addAbstractTypeMapping"
members:
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.<T>addAbstractTypeMapping(java.lang.Class<T>,java.lang.Class<? extends T>)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.<T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)"
  name: "<T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)"
  nameWithType: "SimpleModule.<T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)"
  summary: "Lazily-constructed resolver used for storing mappings from abstract classes to more specific implementing classes (which may be abstract or concrete)"
  parameters:
  - name: "superType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "subType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SimpleModule <T>addAbstractTypeMapping(Class<T> superType, Class<? extends T> subType)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.module.SimpleModule?alt=com.fasterxml.jackson.databind.module.SimpleModule&text=SimpleModule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.module"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
