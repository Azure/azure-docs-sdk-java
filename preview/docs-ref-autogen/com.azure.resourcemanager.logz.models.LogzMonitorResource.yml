### YamlMime:JavaType
uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource"
fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource"
name: "LogzMonitorResource"
nameWithType: "LogzMonitorResource"
summary: "An immutable client-side representation of Logz<wbr>Monitor<wbr>Resource."
syntax: "public interface LogzMonitorResource"
methods:
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.id()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.id()"
  name: "id()"
  nameWithType: "LogzMonitorResource.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.identity()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.identity()"
  name: "identity()"
  nameWithType: "LogzMonitorResource.identity()"
  summary: "Gets the identity property: The identity property."
  modifiers:
  - "abstract"
  syntax: "public abstract IdentityProperties identity()"
  desc: "Gets the identity property: The identity property."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.IdentityProperties?alt=com.azure.resourcemanager.logz.models.IdentityProperties&text=IdentityProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.innerModel()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.innerModel()"
  name: "innerModel()"
  nameWithType: "LogzMonitorResource.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>logz.<wbr>fluent.<wbr>models.<wbr>Logz<wbr>Monitor<wbr>Resource<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract LogzMonitorResourceInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.logz.fluent.models.LogzMonitorResourceInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.logz.fluent.models.LogzMonitorResourceInner?alt=com.azure.resourcemanager.logz.fluent.models.LogzMonitorResourceInner&text=LogzMonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listMonitoredResources()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listMonitoredResources()"
  name: "listMonitoredResources()"
  nameWithType: "LogzMonitorResource.listMonitoredResources()"
  summary: "List the resources currently being monitored by the Logz monitor resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources()"
  desc: "List the resources currently being monitored by the Logz monitor resource."
  returns:
    description: "response of a list operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logz.models.MonitoredResource?alt=com.azure.resourcemanager.logz.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listMonitoredResources(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listMonitoredResources(Context context)"
  name: "listMonitoredResources(Context context)"
  nameWithType: "LogzMonitorResource.listMonitoredResources(Context context)"
  summary: "List the resources currently being monitored by the Logz monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources(Context context)"
  desc: "List the resources currently being monitored by the Logz monitor resource."
  returns:
    description: "response of a list operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logz.models.MonitoredResource?alt=com.azure.resourcemanager.logz.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listUserRoles()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listUserRoles()"
  name: "listUserRoles()"
  nameWithType: "LogzMonitorResource.listUserRoles()"
  summary: "List the user's roles configured on Logz.<wbr>io side for the account corresponding to the monitor resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<UserRoleResponse> listUserRoles()"
  desc: "List the user's roles configured on Logz.io side for the account corresponding to the monitor resource."
  returns:
    description: "response for list of user's role for Logz.io account."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logz.models.UserRoleResponse?alt=com.azure.resourcemanager.logz.models.UserRoleResponse&text=UserRoleResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listUserRoles(com.azure.resourcemanager.logz.models.UserRoleRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.listUserRoles(UserRoleRequest body, Context context)"
  name: "listUserRoles(UserRoleRequest body, Context context)"
  nameWithType: "LogzMonitorResource.listUserRoles(UserRoleRequest body, Context context)"
  summary: "List the user's roles configured on Logz.<wbr>io side for the account corresponding to the monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Request for checking user's role for Logz.io account."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.logz.models.UserRoleRequest?alt=com.azure.resourcemanager.logz.models.UserRoleRequest&text=UserRoleRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<UserRoleResponse> listUserRoles(UserRoleRequest body, Context context)"
  desc: "List the user's roles configured on Logz.io side for the account corresponding to the monitor resource."
  returns:
    description: "response for list of user's role for Logz.io account."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logz.models.UserRoleResponse?alt=com.azure.resourcemanager.logz.models.UserRoleResponse&text=UserRoleResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.location()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.location()"
  name: "location()"
  nameWithType: "LogzMonitorResource.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.name()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.name()"
  name: "name()"
  nameWithType: "LogzMonitorResource.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.properties()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.properties()"
  name: "properties()"
  nameWithType: "LogzMonitorResource.properties()"
  summary: "Gets the properties property: Properties specific to the monitor resource."
  modifiers:
  - "abstract"
  syntax: "public abstract MonitorProperties properties()"
  desc: "Gets the properties property: Properties specific to the monitor resource."
  returns:
    description: "the properties value."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.MonitorProperties?alt=com.azure.resourcemanager.logz.models.MonitorProperties&text=MonitorProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.refresh()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.refresh()"
  name: "refresh()"
  nameWithType: "LogzMonitorResource.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract LogzMonitorResource refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.LogzMonitorResource?alt=com.azure.resourcemanager.logz.models.LogzMonitorResource&text=LogzMonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "LogzMonitorResource.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract LogzMonitorResource refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.LogzMonitorResource?alt=com.azure.resourcemanager.logz.models.LogzMonitorResource&text=LogzMonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.region()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.region()"
  name: "region()"
  nameWithType: "LogzMonitorResource.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.regionName()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.regionName()"
  name: "regionName()"
  nameWithType: "LogzMonitorResource.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.systemData()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.systemData()"
  name: "systemData()"
  nameWithType: "LogzMonitorResource.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.tags()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.tags()"
  name: "tags()"
  nameWithType: "LogzMonitorResource.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.type()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.type()"
  name: "type()"
  nameWithType: "LogzMonitorResource.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logz.models.LogzMonitorResource.update()"
  fullName: "com.azure.resourcemanager.logz.models.LogzMonitorResource.update()"
  name: "update()"
  nameWithType: "LogzMonitorResource.update()"
  summary: "Begins update for the Logz<wbr>Monitor<wbr>Resource resource."
  modifiers:
  - "abstract"
  syntax: "public abstract LogzMonitorResource.Update update()"
  desc: "Begins update for the LogzMonitorResource resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.logz.models.LogzMonitorResource.Update?alt=com.azure.resourcemanager.logz.models.LogzMonitorResource.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of LogzMonitorResource."
metadata: {}
package: "com.azure.resourcemanager.logz.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-logz:1.0.0-beta.1
