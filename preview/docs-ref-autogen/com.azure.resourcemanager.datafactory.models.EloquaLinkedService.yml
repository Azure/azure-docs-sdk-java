### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService"
name: "EloquaLinkedService"
nameWithType: "EloquaLinkedService"
summary: "Eloqua server linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EloquaLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.EloquaLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.EloquaLinkedService()"
  name: "EloquaLinkedService()"
  nameWithType: "EloquaLinkedService.EloquaLinkedService()"
  syntax: "public EloquaLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "EloquaLinkedService.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.endpoint()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.endpoint()"
  name: "endpoint()"
  nameWithType: "EloquaLinkedService.endpoint()"
  summary: "Get the endpoint property: The endpoint of the Eloqua server. (i.e. eloqua.example.com)."
  syntax: "public Object endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.password()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.password()"
  name: "password()"
  nameWithType: "EloquaLinkedService.password()"
  summary: "Get the password property: The password corresponding to the user name."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.useEncryptedEndpoints()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.useEncryptedEndpoints()"
  name: "useEncryptedEndpoints()"
  nameWithType: "EloquaLinkedService.useEncryptedEndpoints()"
  summary: "Get the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  syntax: "public Object useEncryptedEndpoints()"
  returns:
    description: "the useEncryptedEndpoints value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.useHostVerification()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.useHostVerification()"
  name: "useHostVerification()"
  nameWithType: "EloquaLinkedService.useHostVerification()"
  summary: "Get the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  syntax: "public Object useHostVerification()"
  returns:
    description: "the useHostVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.usePeerVerification()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.usePeerVerification()"
  name: "usePeerVerification()"
  nameWithType: "EloquaLinkedService.usePeerVerification()"
  summary: "Get the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  syntax: "public Object usePeerVerification()"
  returns:
    description: "the usePeerVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.username()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.username()"
  name: "username()"
  nameWithType: "EloquaLinkedService.username()"
  summary: "Get the username property: The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.validate()"
  name: "validate()"
  nameWithType: "EloquaLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "EloquaLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EloquaLinkedService withAnnotations(List<Object> annotations)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "EloquaLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connectVia property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "EloquaLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withDescription(String description)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "EloquaLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the EloquaLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withEndpoint(Object endpoint)"
  name: "withEndpoint(Object endpoint)"
  nameWithType: "EloquaLinkedService.withEndpoint(Object endpoint)"
  summary: "Set the endpoint property: The endpoint of the Eloqua server. (i.e. eloqua.example.com)."
  parameters:
  - description: "the endpoint value to set."
    name: "endpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withEndpoint(Object endpoint)"
  returns:
    description: "the EloquaLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "EloquaLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EloquaLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "EloquaLinkedService.withPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withPassword(SecretBase password)"
  returns:
    description: "the EloquaLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUseEncryptedEndpoints(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  name: "withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  nameWithType: "EloquaLinkedService.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  summary: "Set the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  parameters:
  - description: "the useEncryptedEndpoints value to set."
    name: "useEncryptedEndpoints"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  returns:
    description: "the EloquaLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUseHostVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUseHostVerification(Object useHostVerification)"
  name: "withUseHostVerification(Object useHostVerification)"
  nameWithType: "EloquaLinkedService.withUseHostVerification(Object useHostVerification)"
  summary: "Set the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the useHostVerification value to set."
    name: "useHostVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withUseHostVerification(Object useHostVerification)"
  returns:
    description: "the EloquaLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUsePeerVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUsePeerVerification(Object usePeerVerification)"
  name: "withUsePeerVerification(Object usePeerVerification)"
  nameWithType: "EloquaLinkedService.withUsePeerVerification(Object usePeerVerification)"
  summary: "Set the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the usePeerVerification value to set."
    name: "usePeerVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withUsePeerVerification(Object usePeerVerification)"
  returns:
    description: "the EloquaLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.EloquaLinkedService.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "EloquaLinkedService.withUsername(Object username)"
  summary: "Set the username property: The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EloquaLinkedService withUsername(Object username)"
  returns:
    description: "the EloquaLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.EloquaLinkedService?alt=com.azure.resourcemanager.datafactory.models.EloquaLinkedService&text=EloquaLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
