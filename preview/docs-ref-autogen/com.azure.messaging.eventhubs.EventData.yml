### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.EventData
  id: EventData
  parent: com.azure.messaging.eventhubs
  children:
  - com.azure.messaging.eventhubs.EventData.addProperty(String,Object)
  - com.azure.messaging.eventhubs.EventData.body()
  - com.azure.messaging.eventhubs.EventData.compareTo(EventData)
  - com.azure.messaging.eventhubs.EventData.enqueuedTime()
  - com.azure.messaging.eventhubs.EventData.equals(Object)
  - com.azure.messaging.eventhubs.EventData.EventData(byte [])
  - com.azure.messaging.eventhubs.EventData.EventData(ByteBuffer)
  - com.azure.messaging.eventhubs.EventData.hashCode()
  - com.azure.messaging.eventhubs.EventData.offset()
  - com.azure.messaging.eventhubs.EventData.partitionKey()
  - com.azure.messaging.eventhubs.EventData.properties()
  - com.azure.messaging.eventhubs.EventData.RESERVED_SYSTEM_PROPERTIES
  - com.azure.messaging.eventhubs.EventData.sequenceNumber()
  - com.azure.messaging.eventhubs.EventData.systemProperties()
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: EventData
  nameWithType: EventData
  fullName: com.azure.messaging.eventhubs.EventData
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 49
  package: com.azure.messaging.eventhubs
  summary: "<p>The data structure encapsulating the event being sent-to and received-from Event Hubs. Each Event Hub partition can be visualized as a stream of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>.</p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. For reference, the specification can be found here: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">AMQP 1.0 specification</a></p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> - AMQPMessage.ApplicationProperties section </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> - if AMQPMessage.Body has Data section </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p>Serializing a received <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive Java types) and Data section is not supported. </p>\r\n<p></p>"
  syntax: &o1
    content: public class EventData
  inheritance:
  - java.lang.Object
  - Comparable<EventData>
- uid: com.azure.messaging.eventhubs.EventData.addProperty(String,Object)
  id: addProperty(String,Object)
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: addProperty(String key, Object value)
  nameWithType: EventData.addProperty(String key, Object value)
  fullName: com.azure.messaging.eventhubs.EventData.addProperty(String key, Object value)
  overload: com.azure.messaging.eventhubs.EventData.addProperty*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 165
  package: com.azure.messaging.eventhubs
  summary: "<p>Adds a piece of metadata to the event, allowing publishers to offer additional information to event consumers. If the<code>key \r\n    </code> exists in the map, its existing value is overwritten.</p>\r\n<p>A common use case for <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> is to associate serialization hints for the <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> as an aid to consumers who wish to deserialize the binary data. </p>\r\n<p>\r\n  <b>Adding serialization hint using<code>addProperty(String, Object) \r\n    </code></b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventdata.addProperty::string-object}</p>\r\n<p></p>"
  syntax: &o4
    content: public EventData addProperty(String key, Object value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>The key for this application property </p>
    - id: value
      type: "79317049"
      description: <p>The value for this application property. </p>
    return:
      type: com.azure.messaging.eventhubs.EventData
      description: <p>The updated EventData object. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>if<code>key 

          </code> or<code>value 

          </code> is null. </p>
- uid: com.azure.messaging.eventhubs.EventData.body()
  id: body()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: body()
  nameWithType: EventData.body()
  fullName: com.azure.messaging.eventhubs.EventData.body()
  overload: com.azure.messaging.eventhubs.EventData.body*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 216
  package: com.azure.messaging.eventhubs
  summary: "<p>Gets the actual payload/data wrapped by EventData.</p>\r\n<p>If the means for deserializing the raw data is not apparent to consumers, a common technique is to make use of <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> when creating the event, to associate serialization hints as an aid to consumers who wish to deserialize the binary data. </p>\r\n<p></p>"
  syntax: &o3
    content: public ByteBuffer body()
    return:
      type: 85310d28
      description: <p>ByteBuffer representing the data. </p>
- uid: com.azure.messaging.eventhubs.EventData.compareTo(EventData)
  id: compareTo(EventData)
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: compareTo(EventData other)
  nameWithType: EventData.compareTo(EventData other)
  fullName: com.azure.messaging.eventhubs.EventData.compareTo(EventData other)
  overload: com.azure.messaging.eventhubs.EventData.compareTo*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 272
  package: com.azure.messaging.eventhubs
  syntax:
    content: public int compareTo(EventData other)
    parameters:
    - id: other
      type: com.azure.messaging.eventhubs.EventData
    return:
      type: f75371fa
- uid: com.azure.messaging.eventhubs.EventData.enqueuedTime()
  id: enqueuedTime()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: enqueuedTime()
  nameWithType: EventData.enqueuedTime()
  fullName: com.azure.messaging.eventhubs.EventData.enqueuedTime()
  overload: com.azure.messaging.eventhubs.EventData.enqueuedTime*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 244
  package: com.azure.messaging.eventhubs
  summary: "<p>Gets the instant, in UTC, of when the event was enqueued in the Event Hub partition.</p>\r\n<p></p>"
  syntax:
    content: public Instant enqueuedTime()
    return:
      type: 328f8254
      description: <p>The instant, in UTC, this was enqueued in the Event Hub partition. </p>
- uid: com.azure.messaging.eventhubs.EventData.equals(Object)
  id: equals(Object)
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: equals(Object o)
  nameWithType: EventData.equals(Object o)
  fullName: com.azure.messaging.eventhubs.EventData.equals(Object o)
  overload: com.azure.messaging.eventhubs.EventData.equals*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 283
  package: com.azure.messaging.eventhubs
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: "79317049"
    return:
      type: 4fc6e284
- uid: com.azure.messaging.eventhubs.EventData.EventData(byte [])
  id: EventData(byte [])
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: EventData(byte[] body)
  nameWithType: EventData.EventData(byte[] body)
  fullName: com.azure.messaging.eventhubs.EventData.EventData(byte[] body)
  overload: com.azure.messaging.eventhubs.EventData.EventData*
  type: Constructor
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 76
  package: com.azure.messaging.eventhubs
  summary: "<p>Creates an event containing the<code>data \r\n    </code> .</p>\r\n<p></p>"
  syntax:
    content: public EventData(byte[] body)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>The data to set for this event. </p>
- uid: com.azure.messaging.eventhubs.EventData.EventData(ByteBuffer)
  id: EventData(ByteBuffer)
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: EventData(ByteBuffer body)
  nameWithType: EventData.EventData(ByteBuffer body)
  fullName: com.azure.messaging.eventhubs.EventData.EventData(ByteBuffer body)
  overload: com.azure.messaging.eventhubs.EventData.EventData*
  type: Constructor
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 86
  package: com.azure.messaging.eventhubs
  summary: "<p>Creates an event containing the<code>body \r\n    </code> .</p>\r\n<p></p>"
  syntax:
    content: public EventData(ByteBuffer body)
    parameters:
    - id: body
      type: 85310d28
      description: <p>The data to set for this event. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>if<code>body 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.messaging.eventhubs.EventData.hashCode()
  id: hashCode()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: hashCode()
  nameWithType: EventData.hashCode()
  fullName: com.azure.messaging.eventhubs.EventData.hashCode()
  overload: com.azure.messaging.eventhubs.EventData.hashCode*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 299
  package: com.azure.messaging.eventhubs
  syntax:
    content: public int hashCode()
    return:
      type: f75371fa
- uid: com.azure.messaging.eventhubs.EventData.offset()
  id: offset()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: offset()
  nameWithType: EventData.offset()
  fullName: com.azure.messaging.eventhubs.EventData.offset()
  overload: com.azure.messaging.eventhubs.EventData.offset*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 225
  package: com.azure.messaging.eventhubs
  summary: "<p>Gets the offset of the event when it was received from the associated Event Hub partition.</p>\r\n<p></p>"
  syntax:
    content: public String offset()
    return:
      type: "26831127"
      description: <p>The offset within the Event Hub partition. </p>
- uid: com.azure.messaging.eventhubs.EventData.partitionKey()
  id: partitionKey()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: partitionKey()
  nameWithType: EventData.partitionKey()
  fullName: com.azure.messaging.eventhubs.EventData.partitionKey()
  overload: com.azure.messaging.eventhubs.EventData.partitionKey*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 235
  package: com.azure.messaging.eventhubs
  summary: "<p>Gets a partition key used for message partitioning. If it exists, this value was used to compute a hash to select a partition to send the message to.</p>\r\n<p></p>"
  syntax:
    content: public String partitionKey()
    return:
      type: "26831127"
      description: <p>A partition key for this Event Data. </p>
- uid: com.azure.messaging.eventhubs.EventData.properties()
  id: properties()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: properties()
  nameWithType: EventData.properties()
  fullName: com.azure.messaging.eventhubs.EventData.properties()
  overload: com.azure.messaging.eventhubs.EventData.properties*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 190
  package: com.azure.messaging.eventhubs
  summary: "<p>The set of free-form event properties which may be used for passing metadata associated with the event with the event body during Event Hubs operations.</p>\r\n<p>A common use case for<code>properties() \r\n    </code> is to associate serialization hints for the <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> as an aid to consumers who wish to deserialize the binary data. </p>\r\n<p>\r\n  <b>Adding serialization hint using <xref uid=\"com.azure.messaging.eventhubs.EventData.addProperty(String,Object)\" data-throw-if-not-resolved=\"false\">addProperty(String, Object)</xref></b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventdata.addProperty::string-object}</p>\r\n<p></p>"
  syntax: &o2
    content: public Map<String, Object> properties()
    return:
      type: e7b06046
      description: <p>Application properties associated with this <xref uid="com.azure.messaging.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref>. </p>
- uid: com.azure.messaging.eventhubs.EventData.RESERVED_SYSTEM_PROPERTIES
  id: RESERVED_SYSTEM_PROPERTIES
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: RESERVED_SYSTEM_PROPERTIES
  nameWithType: EventData.RESERVED_SYSTEM_PROPERTIES
  fullName: com.azure.messaging.eventhubs.EventData.RESERVED_SYSTEM_PROPERTIES
  type: Field
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 53
  package: com.azure.messaging.eventhubs
  syntax:
    content: public static final Set<String> RESERVED_SYSTEM_PROPERTIES
    return:
      type: 04c36f7e
- uid: com.azure.messaging.eventhubs.EventData.sequenceNumber()
  id: sequenceNumber()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: sequenceNumber()
  nameWithType: EventData.sequenceNumber()
  fullName: com.azure.messaging.eventhubs.EventData.sequenceNumber()
  overload: com.azure.messaging.eventhubs.EventData.sequenceNumber*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 256
  package: com.azure.messaging.eventhubs
  summary: "<p>Gets the sequence number assigned to the event when it was enqueued in the associated Event Hub partition. This is unique for every message received in the Event Hub partition.</p>\r\n<p></p>"
  syntax:
    content: public long sequenceNumber()
    return:
      type: 0364520f
      description: <p>Sequence number for this event. </p>
  exceptions:
  - type: 12fe80de
    description: <p>if <xref uid="com.azure.messaging.eventhubs.EventData.systemProperties()" data-throw-if-not-resolved="false">systemProperties()</xref> does not contain the sequence number in a retrieved event. </p>
- uid: com.azure.messaging.eventhubs.EventData.systemProperties()
  id: systemProperties()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  langs:
  - java
  name: systemProperties()
  nameWithType: EventData.systemProperties()
  fullName: com.azure.messaging.eventhubs.EventData.systemProperties()
  overload: com.azure.messaging.eventhubs.EventData.systemProperties*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventData.java
    startLine: 201
  package: com.azure.messaging.eventhubs
  summary: "<p>Properties that are populated by EventHubService. As these are populated by Service, they are only present on a <b>received</b> EventData.</p>\r\n<p></p>"
  syntax: &o5
    content: public Map<String, Object> systemProperties()
    return:
      type: e7b06046
      description: >-
        <p>an encapsulation of all SystemProperties appended by EventHubs service into EventData.<code>null 

            </code> if the <xref uid="com.azure.messaging.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref> is not received and is created by the public constructors. </p>
references:
- uid: 04c36f7e
  spec.java:
  - name: final Set<String>
    fullName: final Set<String>
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.azure.messaging.eventhubs.EventData.EventData*
  name: EventData
  nameWithType: EventData.EventData
  fullName: com.azure.messaging.eventhubs.EventData.EventData
  package: com.azure.messaging.eventhubs
- uid: 17c54119
  spec.java:
  - name: NullPointerException
    fullName: NullPointerException
- uid: 85310d28
  spec.java:
  - name: ByteBuffer
    fullName: ByteBuffer
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.azure.messaging.eventhubs.EventData.addProperty*
  name: addProperty
  nameWithType: EventData.addProperty
  fullName: com.azure.messaging.eventhubs.EventData.addProperty
  package: com.azure.messaging.eventhubs
- uid: e7b06046
  spec.java:
  - name: Map<String, Object>
    fullName: Map<String, Object>
- uid: com.azure.messaging.eventhubs.EventData.properties*
  name: properties
  nameWithType: EventData.properties
  fullName: com.azure.messaging.eventhubs.EventData.properties
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventData.systemProperties*
  name: systemProperties
  nameWithType: EventData.systemProperties
  fullName: com.azure.messaging.eventhubs.EventData.systemProperties
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventData.body*
  name: body
  nameWithType: EventData.body
  fullName: com.azure.messaging.eventhubs.EventData.body
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventData.offset*
  name: offset
  nameWithType: EventData.offset
  fullName: com.azure.messaging.eventhubs.EventData.offset
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventData.partitionKey*
  name: partitionKey
  nameWithType: EventData.partitionKey
  fullName: com.azure.messaging.eventhubs.EventData.partitionKey
  package: com.azure.messaging.eventhubs
- uid: 328f8254
  spec.java:
  - name: Instant
    fullName: Instant
- uid: com.azure.messaging.eventhubs.EventData.enqueuedTime*
  name: enqueuedTime
  nameWithType: EventData.enqueuedTime
  fullName: com.azure.messaging.eventhubs.EventData.enqueuedTime
  package: com.azure.messaging.eventhubs
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.azure.messaging.eventhubs.EventData.sequenceNumber*
  name: sequenceNumber
  nameWithType: EventData.sequenceNumber
  fullName: com.azure.messaging.eventhubs.EventData.sequenceNumber
  package: com.azure.messaging.eventhubs
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.azure.messaging.eventhubs.EventData.compareTo*
  name: compareTo
  nameWithType: EventData.compareTo
  fullName: com.azure.messaging.eventhubs.EventData.compareTo
  package: com.azure.messaging.eventhubs
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.azure.messaging.eventhubs.EventData.equals*
  name: equals
  nameWithType: EventData.equals
  fullName: com.azure.messaging.eventhubs.EventData.equals
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventData.hashCode*
  name: hashCode
  nameWithType: EventData.hashCode
  fullName: com.azure.messaging.eventhubs.EventData.hashCode
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventData
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventData.yml
  name: EventData
  nameWithType: EventData
  fullName: com.azure.messaging.eventhubs.EventData
  type: Class
  summary: "<p>The data structure encapsulating the event being sent-to and received-from Event Hubs. Each Event Hub partition can be visualized as a stream of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>.</p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. For reference, the specification can be found here: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">AMQP 1.0 specification</a></p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> - AMQPMessage.ApplicationProperties section </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> - if AMQPMessage.Body has Data section </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p>Serializing a received <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive Java types) and Data section is not supported. </p>\r\n<p></p>"
  syntax: *o1
- uid: com.azure.messaging.eventhubs.EventData.properties()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  name: properties()
  nameWithType: EventData.properties()
  fullName: com.azure.messaging.eventhubs.EventData.properties()
  type: Method
  summary: "<p>The set of free-form event properties which may be used for passing metadata associated with the event with the event body during Event Hubs operations.</p>\r\n<p>A common use case for<code>properties() \r\n    </code> is to associate serialization hints for the <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> as an aid to consumers who wish to deserialize the binary data. </p>\r\n<p>\r\n  <b>Adding serialization hint using <xref uid=\"com.azure.messaging.eventhubs.EventData.addProperty(String,Object)\" data-throw-if-not-resolved=\"false\">addProperty(String, Object)</xref></b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventdata.addProperty::string-object}</p>\r\n<p></p>"
  syntax: *o2
- uid: com.azure.messaging.eventhubs.EventData.body()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  name: body()
  nameWithType: EventData.body()
  fullName: com.azure.messaging.eventhubs.EventData.body()
  type: Method
  summary: "<p>Gets the actual payload/data wrapped by EventData.</p>\r\n<p>If the means for deserializing the raw data is not apparent to consumers, a common technique is to make use of <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> when creating the event, to associate serialization hints as an aid to consumers who wish to deserialize the binary data. </p>\r\n<p></p>"
  syntax: *o3
- uid: com.azure.messaging.eventhubs.EventData.addProperty(String,Object)
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  name: addProperty(String key, Object value)
  nameWithType: EventData.addProperty(String key, Object value)
  fullName: com.azure.messaging.eventhubs.EventData.addProperty(String key, Object value)
  type: Method
  summary: "<p>Adds a piece of metadata to the event, allowing publishers to offer additional information to event consumers. If the<code>key \r\n    </code> exists in the map, its existing value is overwritten.</p>\r\n<p>A common use case for <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> is to associate serialization hints for the <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> as an aid to consumers who wish to deserialize the binary data. </p>\r\n<p>\r\n  <b>Adding serialization hint using<code>addProperty(String, Object) \r\n    </code></b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventdata.addProperty::string-object}</p>\r\n<p></p>"
  syntax: *o4
- uid: com.azure.messaging.eventhubs.EventData.systemProperties()
  parent: com.azure.messaging.eventhubs.EventData
  href: com.azure.messaging.eventhubs.EventData.yml
  name: systemProperties()
  nameWithType: EventData.systemProperties()
  fullName: com.azure.messaging.eventhubs.EventData.systemProperties()
  type: Method
  summary: "<p>Properties that are populated by EventHubService. As these are populated by Service, they are only present on a <b>received</b> EventData.</p>\r\n<p></p>"
  syntax: *o5
- uid: com.azure.core.amqp.MessageConstant
  parent: com.azure.core.amqp
  href: com.azure.core.amqp.MessageConstant.yml
  name: MessageConstant
  nameWithType: MessageConstant
  fullName: com.azure.core.amqp.MessageConstant
  type: Enum
  summary: "<p>Reserved well-known constants from AMQP protocol.</p>\r\n<p></p>"
  syntax:
    content: public enum MessageConstant
