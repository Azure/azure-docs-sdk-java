### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Multisets.toMultiset*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multisets.<T,E,M>toMultiset"
name: "<T,E,M>toMultiset"
nameWithType: "Multisets.<T,E,M>toMultiset"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Multisets.<T,E,M>toMultiset(java.util.function.Function<? super T,E>,java.util.function.ToIntFunction<? super T>,java.util.function.Supplier<M>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multisets.<T,E,M>toMultiset(Function<? super T,E> elementFunction, ToIntFunction<? super T> countFunction, Supplier<M> multisetSupplier)"
  name: "<T,E,M>toMultiset(Function<? super T,E> elementFunction, ToIntFunction<? super T> countFunction, Supplier<M> multisetSupplier)"
  nameWithType: "Multisets.<T,E,M>toMultiset(Function<? super T,E> elementFunction, ToIntFunction<? super T> countFunction, Supplier<M> multisetSupplier)"
  summary: "Returns a `Collector` that accumulates elements into a multiset created via the specified `Supplier`, whose elements are the result of applying `elementFunction` to the inputs, with counts equal to the result of applying `countFunction` to the inputs. Elements are added in encounter order.\n\nIf the mapped elements contain duplicates (according to <xref uid=\"java.lang.Object.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals\"></xref>), the element will be added more than once, with the count summed over all appearances of the element.\n\nNote that `stream.collect(toMultiset(function, e -> 1, supplier))` is equivalent to `stream.map(function).collect(Collectors.toCollection(supplier))`."
  parameters:
  - name: "elementFunction"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super T?alt=? super T&text=? super T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "countFunction"
    type: "<xref href=\"java.util.function.ToIntFunction?alt=java.util.function.ToIntFunction&text=ToIntFunction\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super T?alt=? super T&text=? super T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "multisetSupplier"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"M?alt=M&text=M\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Collector<T,?,M> <T,E,M>toMultiset(Function<? super T,E> elementFunction, ToIntFunction<? super T> countFunction, Supplier<M> multisetSupplier)"
  returns:
    type: "<xref href=\"java.util.stream.Collector?alt=java.util.stream.Collector&text=Collector\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,?,<xref href=\"M?alt=M&text=M\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
