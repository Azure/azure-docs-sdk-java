### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  id: SynonymMapsImpl
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation
  children:
  - com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createOrUpdateWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.SynonymMap,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createWithResponseAsync(com.azure.search.documents.indexes.implementation.models.SynonymMap,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.SynonymMapsImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.SynonymMapsImpl.getWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  - com.azure.search.documents.indexes.implementation.SynonymMapsImpl.listWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  langs:
  - java
  name: SynonymMapsImpl
  nameWithType: SynonymMapsImpl
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  type: Class
  package: com.azure.search.documents.indexes.implementation
  summary: An instance of this class provides access to all the operations defined in SynonymMaps.
  syntax:
    content: public final class SynonymMapsImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.SynonymMapsImpl(com.azure.search.documents.indexes.implementation.SearchServiceClientImpl)
  id: SynonymMapsImpl(com.azure.search.documents.indexes.implementation.SearchServiceClientImpl)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  langs:
  - java
  name: SynonymMapsImpl(SearchServiceClientImpl client)
  nameWithType: SynonymMapsImpl.SynonymMapsImpl(SearchServiceClientImpl client)
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.SynonymMapsImpl(SearchServiceClientImpl client)
  overload: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.SynonymMapsImpl*
  type: Constructor
  package: com.azure.search.documents.indexes.implementation
  summary: Initializes an instance of SynonymMapsImpl.
  syntax:
    content: " SynonymMapsImpl(SearchServiceClientImpl client)"
    parameters:
    - id: client
      type: com.azure.search.documents.indexes.implementation.SearchServiceClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createOrUpdateWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.SynonymMap,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.SynonymMap,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String synonymMapName, SynonymMap synonymMap, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: SynonymMapsImpl.createOrUpdateWithResponseAsync(String synonymMapName, SynonymMap synonymMap, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createOrUpdateWithResponseAsync(String synonymMapName, SynonymMap synonymMap, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Creates a new synonym map or updates a synonym map if it already exists.
  syntax:
    content: public Mono<Response<SynonymMap>> createOrUpdateWithResponseAsync(String synonymMapName, SynonymMap synonymMap, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: synonymMapName
      type: java.lang.String
      description: The name of the synonym map to create or update.
    - id: synonymMap
      type: com.azure.search.documents.indexes.implementation.models.SynonymMap
      description: Represents a synonym map definition.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Defines the If-Match condition. The operation will be performed only if the ETag on the server
             matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: >-
        Defines the If-None-Match condition. The operation will be performed only if the ETag on the
             server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SynonymMap>>
      description: represents a synonym map definition.
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createWithResponseAsync(com.azure.search.documents.indexes.implementation.models.SynonymMap,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: createWithResponseAsync(com.azure.search.documents.indexes.implementation.models.SynonymMap,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  langs:
  - java
  name: createWithResponseAsync(SynonymMap synonymMap, RequestOptions requestOptions, Context context)
  nameWithType: SynonymMapsImpl.createWithResponseAsync(SynonymMap synonymMap, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createWithResponseAsync(SynonymMap synonymMap, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Creates a new synonym map.
  syntax:
    content: public Mono<Response<SynonymMap>> createWithResponseAsync(SynonymMap synonymMap, RequestOptions requestOptions, Context context)
    parameters:
    - id: synonymMap
      type: com.azure.search.documents.indexes.implementation.models.SynonymMap
      description: Represents a synonym map definition.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SynonymMap>>
      description: represents a synonym map definition.
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  langs:
  - java
  name: deleteWithResponseAsync(String synonymMapName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  nameWithType: SynonymMapsImpl.deleteWithResponseAsync(String synonymMapName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.deleteWithResponseAsync(String synonymMapName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Deletes a synonym map.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String synonymMapName, String ifMatch, String ifNoneMatch, RequestOptions requestOptions, Context context)
    parameters:
    - id: synonymMapName
      type: java.lang.String
      description: The name of the synonym map to delete.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Defines the If-Match condition. The operation will be performed only if the ETag on the server
             matches this value.
    - id: ifNoneMatch
      type: java.lang.String
      description: >-
        Defines the If-None-Match condition. The operation will be performed only if the ETag on the
             server does not match this value.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.getWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  langs:
  - java
  name: getWithResponseAsync(String synonymMapName, RequestOptions requestOptions, Context context)
  nameWithType: SynonymMapsImpl.getWithResponseAsync(String synonymMapName, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.getWithResponseAsync(String synonymMapName, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.getWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Retrieves a synonym map definition.
  syntax:
    content: public Mono<Response<SynonymMap>> getWithResponseAsync(String synonymMapName, RequestOptions requestOptions, Context context)
    parameters:
    - id: synonymMapName
      type: java.lang.String
      description: The name of the synonym map to retrieve.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SynonymMap>>
      description: represents a synonym map definition.
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.listWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  id: listWithResponseAsync(java.lang.String,com.azure.search.documents.indexes.implementation.models.RequestOptions,com.azure.core.util.Context)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.implementation.SynonymMapsImpl
  langs:
  - java
  name: listWithResponseAsync(String select, RequestOptions requestOptions, Context context)
  nameWithType: SynonymMapsImpl.listWithResponseAsync(String select, RequestOptions requestOptions, Context context)
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.listWithResponseAsync(String select, RequestOptions requestOptions, Context context)
  overload: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.listWithResponseAsync*
  type: Method
  package: com.azure.search.documents.indexes.implementation
  summary: Lists all synonym maps available for a search service.
  syntax:
    content: public Mono<Response<ListSynonymMapsResult>> listWithResponseAsync(String select, RequestOptions requestOptions, Context context)
    parameters:
    - id: select
      type: java.lang.String
      description: >-
        Selects which top-level properties of the synonym maps to retrieve. Specified as a comma-separated
             list of JSON property names, or '*' for all properties. The default is all properties.
    - id: requestOptions
      type: com.azure.search.documents.indexes.implementation.models.RequestOptions
      description: Parameter group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.ListSynonymMapsResult>>
      description: response from a List SynonymMaps request.
references:
- uid: com.azure.search.documents.indexes.implementation.SearchServiceClientImpl
  name: SearchServiceClientImpl
  nameWithType: SearchServiceClientImpl
  fullName: com.azure.search.documents.indexes.implementation.SearchServiceClientImpl
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.SynonymMapsImpl*
  name: SynonymMapsImpl
  nameWithType: SynonymMapsImpl.SynonymMapsImpl
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.SynonymMapsImpl
  package: com.azure.search.documents.indexes.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.implementation.models.SynonymMap
  name: SynonymMap
  nameWithType: SynonymMap
  fullName: com.azure.search.documents.indexes.implementation.models.SynonymMap
- uid: com.azure.search.documents.indexes.implementation.models.RequestOptions
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.azure.search.documents.indexes.implementation.models.RequestOptions
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.SynonymMap>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.implementation.models.SynonymMap
    name: SynonymMap
    fullName: com.azure.search.documents.indexes.implementation.models.SynonymMap
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: SynonymMapsImpl.createOrUpdateWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createOrUpdateWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: SynonymMapsImpl.deleteWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.deleteWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: SynonymMapsImpl.getWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.getWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.search.documents.indexes.implementation.models.ListSynonymMapsResult>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.search.documents.indexes.implementation.models.ListSynonymMapsResult
    name: ListSynonymMapsResult
    fullName: com.azure.search.documents.indexes.implementation.models.ListSynonymMapsResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.listWithResponseAsync*
  name: listWithResponseAsync
  nameWithType: SynonymMapsImpl.listWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.listWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: SynonymMapsImpl.createWithResponseAsync
  fullName: com.azure.search.documents.indexes.implementation.SynonymMapsImpl.createWithResponseAsync
  package: com.azure.search.documents.indexes.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.search.documents.indexes.implementation.models.ListSynonymMapsResult
  name: ListSynonymMapsResult
  nameWithType: ListSynonymMapsResult
  fullName: com.azure.search.documents.indexes.implementation.models.ListSynonymMapsResult
