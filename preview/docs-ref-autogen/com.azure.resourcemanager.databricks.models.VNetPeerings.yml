### YamlMime:JavaType
uid: "com.azure.resourcemanager.databricks.models.VNetPeerings"
fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings"
name: "VNetPeerings"
nameWithType: "VNetPeerings"
summary: "Resource collection API of VNet<wbr>Peerings."
syntax: "public interface VNetPeerings"
methods:
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.define(String name)"
  name: "define(String name)"
  nameWithType: "VNetPeerings.define(String name)"
  summary: "Begins definition for a new Virtual<wbr>Network<wbr>Peering resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VirtualNetworkPeering.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new VirtualNetworkPeering resource."
  returns:
    description: "the first stage of the new VirtualNetworkPeering definition."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.DefinitionStages.Blank?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.delete(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.delete(String resourceGroupName, String workspaceName, String peeringName)"
  name: "delete(String resourceGroupName, String workspaceName, String peeringName)"
  nameWithType: "VNetPeerings.delete(String resourceGroupName, String workspaceName, String peeringName)"
  summary: "Deletes the workspace v<wbr>Net<wbr>Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace vNet peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String workspaceName, String peeringName)"
  desc: "Deletes the workspace vNetPeering."
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.delete(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.delete(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  name: "delete(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  nameWithType: "VNetPeerings.delete(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  summary: "Deletes the workspace v<wbr>Net<wbr>Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace vNet peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  desc: "Deletes the workspace vNetPeering."
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "VNetPeerings.deleteById(String id)"
  summary: "Deletes the workspace v<wbr>Net<wbr>Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes the workspace vNetPeering."
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "VNetPeerings.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes the workspace v<wbr>Net<wbr>Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes the workspace vNetPeering."
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.get(String resourceGroupName, String workspaceName, String peeringName)"
  name: "get(String resourceGroupName, String workspaceName, String peeringName)"
  nameWithType: "VNetPeerings.get(String resourceGroupName, String workspaceName, String peeringName)"
  summary: "Gets the workspace v<wbr>Net Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace vNet peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VirtualNetworkPeering get(String resourceGroupName, String workspaceName, String peeringName)"
  desc: "Gets the workspace vNet Peering."
  returns:
    description: "the workspace vNet Peering."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.getById(String id)"
  name: "getById(String id)"
  nameWithType: "VNetPeerings.getById(String id)"
  summary: "Gets the workspace v<wbr>Net Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VirtualNetworkPeering getById(String id)"
  desc: "Gets the workspace vNet Peering."
  returns:
    description: "the workspace vNet Peering."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "VNetPeerings.getByIdWithResponse(String id, Context context)"
  summary: "Gets the workspace v<wbr>Net Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VirtualNetworkPeering> getByIdWithResponse(String id, Context context)"
  desc: "Gets the workspace vNet Peering."
  returns:
    description: "the workspace vNet Peering."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.getWithResponse(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  name: "getWithResponse(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  nameWithType: "VNetPeerings.getWithResponse(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  summary: "Gets the workspace v<wbr>Net Peering."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace vNet peering."
    name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VirtualNetworkPeering> getWithResponse(String resourceGroupName, String workspaceName, String peeringName, Context context)"
  desc: "Gets the workspace vNet Peering."
  returns:
    description: "the workspace vNet Peering."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.listByWorkspace(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.listByWorkspace(String resourceGroupName, String workspaceName)"
  name: "listByWorkspace(String resourceGroupName, String workspaceName)"
  nameWithType: "VNetPeerings.listByWorkspace(String resourceGroupName, String workspaceName)"
  summary: "Lists the workspace v<wbr>Net Peerings."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VirtualNetworkPeering> listByWorkspace(String resourceGroupName, String workspaceName)"
  desc: "Lists the workspace vNet Peerings."
  returns:
    description: "gets all virtual network peerings under a workspace."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.databricks.models.VNetPeerings.listByWorkspace(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.databricks.models.VNetPeerings.listByWorkspace(String resourceGroupName, String workspaceName, Context context)"
  name: "listByWorkspace(String resourceGroupName, String workspaceName, Context context)"
  nameWithType: "VNetPeerings.listByWorkspace(String resourceGroupName, String workspaceName, Context context)"
  summary: "Lists the workspace v<wbr>Net Peerings."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the workspace."
    name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VirtualNetworkPeering> listByWorkspace(String resourceGroupName, String workspaceName, Context context)"
  desc: "Lists the workspace vNet Peerings."
  returns:
    description: "gets all virtual network peerings under a workspace."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of VNetPeerings."
metadata: {}
package: "com.azure.resourcemanager.databricks.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databricks:1.0.0-beta.2
