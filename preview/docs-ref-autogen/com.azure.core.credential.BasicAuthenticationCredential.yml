### YamlMime:JavaType
uid: "com.azure.core.credential.BasicAuthenticationCredential"
fullName: "com.azure.core.credential.BasicAuthenticationCredential"
name: "BasicAuthenticationCredential"
nameWithType: "BasicAuthenticationCredential"
summary: "Basic Auth credentials for use with a REST Service Client."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BasicAuthenticationCredential implements TokenCredential"
constructors:
- uid: "com.azure.core.credential.BasicAuthenticationCredential.BasicAuthenticationCredential(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.credential.BasicAuthenticationCredential.BasicAuthenticationCredential(String username, String password)"
  name: "BasicAuthenticationCredential(String username, String password)"
  nameWithType: "BasicAuthenticationCredential.BasicAuthenticationCredential(String username, String password)"
  summary: "Creates a basic authentication credential."
  parameters:
  - description: "basic auth user name"
    name: "username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "basic auth password"
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BasicAuthenticationCredential(String username, String password)"
  desc: "Creates a basic authentication credential."
methods:
- uid: "com.azure.core.credential.BasicAuthenticationCredential.getToken(com.azure.core.credential.TokenRequestContext)"
  fullName: "com.azure.core.credential.BasicAuthenticationCredential.getToken(TokenRequestContext request)"
  name: "getToken(TokenRequestContext request)"
  nameWithType: "BasicAuthenticationCredential.getToken(TokenRequestContext request)"
  summary: "Asynchronously get a token for a given resource/audience."
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.core.credential.TokenRequestContext?alt=com.azure.core.credential.TokenRequestContext&text=TokenRequestContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AccessToken> getToken(TokenRequestContext request)"
  desc: "Asynchronously get a token for a given resource/audience. This method is called automatically by Azure SDK client libraries. You may call this method directly, but you must also handle token caching and token refreshing."
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Basic Auth credentials for use with a REST Service Client."
implements:
- "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.credential"
artifact: com.azure:azure-core:1.22.0-beta.1
