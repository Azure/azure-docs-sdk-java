### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  id: LoadBalancingRuleInner
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner
  children:
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.LoadBalancingRuleInner()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendAddressPool()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendPort()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.disableOutboundSnat()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableFloatingIp()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableTcpReset()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.etag()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendIpConfiguration()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendPort()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.idleTimeoutInMinutes()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.loadDistribution()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.name()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.probe()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.protocol()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.provisioningState()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.type()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.validate()
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendAddressPool(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendPort(java.lang.Integer)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withDisableOutboundSnat(java.lang.Boolean)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableFloatingIp(java.lang.Boolean)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableTcpReset(java.lang.Boolean)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEtag(java.lang.String)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendIpConfiguration(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendPort(java.lang.Integer)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withIdleTimeoutInMinutes(java.lang.Integer)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withLoadDistribution(com.azure.resourcemanager.network.models.LoadDistribution)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withName(java.lang.String)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProbe(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)
  - com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProvisioningState(java.lang.String)
  langs:
  - java
  name: LoadBalancingRuleInner
  nameWithType: LoadBalancingRuleInner
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  type: Class
  package: com.azure.resourcemanager.network.fluent.inner
  summary: The LoadBalancingRule model.
  syntax:
    content: public class LoadBalancingRuleInner extends SubResource
  inheritance:
  - java.lang.Object
  - com.azure.core.management.SubResource
  inheritedMembers:
  - com.azure.core.management.SubResource.id()
  - com.azure.core.management.SubResource.withId(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.LoadBalancingRuleInner()
  id: LoadBalancingRuleInner()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: LoadBalancingRuleInner()
  nameWithType: LoadBalancingRuleInner.LoadBalancingRuleInner()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.LoadBalancingRuleInner()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.LoadBalancingRuleInner*
  type: Constructor
  package: com.azure.resourcemanager.network.fluent.inner
  syntax:
    content: public LoadBalancingRuleInner()
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendAddressPool()
  id: backendAddressPool()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: backendAddressPool()
  nameWithType: LoadBalancingRuleInner.backendAddressPool()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendAddressPool()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendAddressPool*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the backendAddressPool property: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.'
  syntax:
    content: public SubResource backendAddressPool()
    return:
      type: com.azure.core.management.SubResource
      description: the backendAddressPool value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendPort()
  id: backendPort()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: backendPort()
  nameWithType: LoadBalancingRuleInner.backendPort()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendPort()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendPort*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the backendPort property: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".'
  syntax:
    content: public Integer backendPort()
    return:
      type: java.lang.Integer
      description: the backendPort value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.disableOutboundSnat()
  id: disableOutboundSnat()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: disableOutboundSnat()
  nameWithType: LoadBalancingRuleInner.disableOutboundSnat()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.disableOutboundSnat()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.disableOutboundSnat*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the disableOutboundSnat property: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.'
  syntax:
    content: public Boolean disableOutboundSnat()
    return:
      type: java.lang.Boolean
      description: the disableOutboundSnat value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableFloatingIp()
  id: enableFloatingIp()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: enableFloatingIp()
  nameWithType: LoadBalancingRuleInner.enableFloatingIp()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableFloatingIp()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableFloatingIp*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: "Get the enableFloatingIp property: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
  syntax:
    content: public Boolean enableFloatingIp()
    return:
      type: java.lang.Boolean
      description: the enableFloatingIp value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableTcpReset()
  id: enableTcpReset()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: enableTcpReset()
  nameWithType: LoadBalancingRuleInner.enableTcpReset()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableTcpReset()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableTcpReset*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the enableTcpReset property: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public Boolean enableTcpReset()
    return:
      type: java.lang.Boolean
      description: the enableTcpReset value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.etag()
  id: etag()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: etag()
  nameWithType: LoadBalancingRuleInner.etag()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.etag()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.etag*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the etag property: A unique read-only string that changes whenever the resource is updated.'
  syntax:
    content: public String etag()
    return:
      type: java.lang.String
      description: the etag value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendIpConfiguration()
  id: frontendIpConfiguration()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: frontendIpConfiguration()
  nameWithType: LoadBalancingRuleInner.frontendIpConfiguration()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendIpConfiguration()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendIpConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the frontendIpConfiguration property: A reference to frontend IP addresses.'
  syntax:
    content: public SubResource frontendIpConfiguration()
    return:
      type: com.azure.core.management.SubResource
      description: the frontendIpConfiguration value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendPort()
  id: frontendPort()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: frontendPort()
  nameWithType: LoadBalancingRuleInner.frontendPort()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendPort()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendPort*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the frontendPort property: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".'
  syntax:
    content: public Integer frontendPort()
    return:
      type: java.lang.Integer
      description: the frontendPort value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.idleTimeoutInMinutes()
  id: idleTimeoutInMinutes()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: idleTimeoutInMinutes()
  nameWithType: LoadBalancingRuleInner.idleTimeoutInMinutes()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.idleTimeoutInMinutes()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.idleTimeoutInMinutes*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the idleTimeoutInMinutes property: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public Integer idleTimeoutInMinutes()
    return:
      type: java.lang.Integer
      description: the idleTimeoutInMinutes value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.loadDistribution()
  id: loadDistribution()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: loadDistribution()
  nameWithType: LoadBalancingRuleInner.loadDistribution()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.loadDistribution()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.loadDistribution*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the loadDistribution property: The load distribution policy for this rule.'
  syntax:
    content: public LoadDistribution loadDistribution()
    return:
      type: com.azure.resourcemanager.network.models.LoadDistribution
      description: the loadDistribution value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.name()
  id: name()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: name()
  nameWithType: LoadBalancingRuleInner.name()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.name()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.name*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the name property: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.'
  syntax:
    content: public String name()
    return:
      type: java.lang.String
      description: the name value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.probe()
  id: probe()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: probe()
  nameWithType: LoadBalancingRuleInner.probe()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.probe()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.probe*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the probe property: The reference of the load balancer probe used by the load balancing rule.'
  syntax:
    content: public SubResource probe()
    return:
      type: com.azure.core.management.SubResource
      description: the probe value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.protocol()
  id: protocol()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: protocol()
  nameWithType: LoadBalancingRuleInner.protocol()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.protocol()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.protocol*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the protocol property: The reference to the transport protocol used by the load balancing rule.'
  syntax:
    content: public TransportProtocol protocol()
    return:
      type: com.azure.resourcemanager.network.models.TransportProtocol
      description: the protocol value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.provisioningState()
  id: provisioningState()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: provisioningState()
  nameWithType: LoadBalancingRuleInner.provisioningState()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.provisioningState()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.provisioningState*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: "Get the provisioningState property: Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
  syntax:
    content: public String provisioningState()
    return:
      type: java.lang.String
      description: the provisioningState value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.type()
  id: type()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: type()
  nameWithType: LoadBalancingRuleInner.type()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.type()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.type*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Get the type property: Type of the resource.'
  syntax:
    content: public String type()
    return:
      type: java.lang.String
      description: the type value.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: validate()
  nameWithType: LoadBalancingRuleInner.validate()
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.validate()
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.validate*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendAddressPool(com.azure.core.management.SubResource)
  id: withBackendAddressPool(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withBackendAddressPool(SubResource backendAddressPool)
  nameWithType: LoadBalancingRuleInner.withBackendAddressPool(SubResource backendAddressPool)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendAddressPool(SubResource backendAddressPool)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendAddressPool*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the backendAddressPool property: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.'
  syntax:
    content: public LoadBalancingRuleInner withBackendAddressPool(SubResource backendAddressPool)
    parameters:
    - id: backendAddressPool
      type: com.azure.core.management.SubResource
      description: the backendAddressPool value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendPort(java.lang.Integer)
  id: withBackendPort(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withBackendPort(Integer backendPort)
  nameWithType: LoadBalancingRuleInner.withBackendPort(Integer backendPort)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendPort(Integer backendPort)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendPort*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the backendPort property: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".'
  syntax:
    content: public LoadBalancingRuleInner withBackendPort(Integer backendPort)
    parameters:
    - id: backendPort
      type: java.lang.Integer
      description: the backendPort value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withDisableOutboundSnat(java.lang.Boolean)
  id: withDisableOutboundSnat(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withDisableOutboundSnat(Boolean disableOutboundSnat)
  nameWithType: LoadBalancingRuleInner.withDisableOutboundSnat(Boolean disableOutboundSnat)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withDisableOutboundSnat(Boolean disableOutboundSnat)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withDisableOutboundSnat*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the disableOutboundSnat property: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.'
  syntax:
    content: public LoadBalancingRuleInner withDisableOutboundSnat(Boolean disableOutboundSnat)
    parameters:
    - id: disableOutboundSnat
      type: java.lang.Boolean
      description: the disableOutboundSnat value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableFloatingIp(java.lang.Boolean)
  id: withEnableFloatingIp(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withEnableFloatingIp(Boolean enableFloatingIp)
  nameWithType: LoadBalancingRuleInner.withEnableFloatingIp(Boolean enableFloatingIp)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableFloatingIp(Boolean enableFloatingIp)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableFloatingIp*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: "Set the enableFloatingIp property: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
  syntax:
    content: public LoadBalancingRuleInner withEnableFloatingIp(Boolean enableFloatingIp)
    parameters:
    - id: enableFloatingIp
      type: java.lang.Boolean
      description: the enableFloatingIp value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableTcpReset(java.lang.Boolean)
  id: withEnableTcpReset(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withEnableTcpReset(Boolean enableTcpReset)
  nameWithType: LoadBalancingRuleInner.withEnableTcpReset(Boolean enableTcpReset)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableTcpReset(Boolean enableTcpReset)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableTcpReset*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the enableTcpReset property: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public LoadBalancingRuleInner withEnableTcpReset(Boolean enableTcpReset)
    parameters:
    - id: enableTcpReset
      type: java.lang.Boolean
      description: the enableTcpReset value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEtag(java.lang.String)
  id: withEtag(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withEtag(String etag)
  nameWithType: LoadBalancingRuleInner.withEtag(String etag)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEtag(String etag)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEtag*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the etag property: A unique read-only string that changes whenever the resource is updated.'
  syntax:
    content: public LoadBalancingRuleInner withEtag(String etag)
    parameters:
    - id: etag
      type: java.lang.String
      description: the etag value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendIpConfiguration(com.azure.core.management.SubResource)
  id: withFrontendIpConfiguration(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withFrontendIpConfiguration(SubResource frontendIpConfiguration)
  nameWithType: LoadBalancingRuleInner.withFrontendIpConfiguration(SubResource frontendIpConfiguration)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendIpConfiguration(SubResource frontendIpConfiguration)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendIpConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the frontendIpConfiguration property: A reference to frontend IP addresses.'
  syntax:
    content: public LoadBalancingRuleInner withFrontendIpConfiguration(SubResource frontendIpConfiguration)
    parameters:
    - id: frontendIpConfiguration
      type: com.azure.core.management.SubResource
      description: the frontendIpConfiguration value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendPort(java.lang.Integer)
  id: withFrontendPort(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withFrontendPort(Integer frontendPort)
  nameWithType: LoadBalancingRuleInner.withFrontendPort(Integer frontendPort)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendPort(Integer frontendPort)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendPort*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the frontendPort property: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".'
  syntax:
    content: public LoadBalancingRuleInner withFrontendPort(Integer frontendPort)
    parameters:
    - id: frontendPort
      type: java.lang.Integer
      description: the frontendPort value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withIdleTimeoutInMinutes(java.lang.Integer)
  id: withIdleTimeoutInMinutes(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
  nameWithType: LoadBalancingRuleInner.withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withIdleTimeoutInMinutes*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the idleTimeoutInMinutes property: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public LoadBalancingRuleInner withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
    parameters:
    - id: idleTimeoutInMinutes
      type: java.lang.Integer
      description: the idleTimeoutInMinutes value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withLoadDistribution(com.azure.resourcemanager.network.models.LoadDistribution)
  id: withLoadDistribution(com.azure.resourcemanager.network.models.LoadDistribution)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withLoadDistribution(LoadDistribution loadDistribution)
  nameWithType: LoadBalancingRuleInner.withLoadDistribution(LoadDistribution loadDistribution)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withLoadDistribution(LoadDistribution loadDistribution)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withLoadDistribution*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the loadDistribution property: The load distribution policy for this rule.'
  syntax:
    content: public LoadBalancingRuleInner withLoadDistribution(LoadDistribution loadDistribution)
    parameters:
    - id: loadDistribution
      type: com.azure.resourcemanager.network.models.LoadDistribution
      description: the loadDistribution value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withName(java.lang.String)
  id: withName(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withName(String name)
  nameWithType: LoadBalancingRuleInner.withName(String name)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withName(String name)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withName*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the name property: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.'
  syntax:
    content: public LoadBalancingRuleInner withName(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProbe(com.azure.core.management.SubResource)
  id: withProbe(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withProbe(SubResource probe)
  nameWithType: LoadBalancingRuleInner.withProbe(SubResource probe)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProbe(SubResource probe)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProbe*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the probe property: The reference of the load balancer probe used by the load balancing rule.'
  syntax:
    content: public LoadBalancingRuleInner withProbe(SubResource probe)
    parameters:
    - id: probe
      type: com.azure.core.management.SubResource
      description: the probe value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)
  id: withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withProtocol(TransportProtocol protocol)
  nameWithType: LoadBalancingRuleInner.withProtocol(TransportProtocol protocol)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProtocol(TransportProtocol protocol)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProtocol*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: 'Set the protocol property: The reference to the transport protocol used by the load balancing rule.'
  syntax:
    content: public LoadBalancingRuleInner withProtocol(TransportProtocol protocol)
    parameters:
    - id: protocol
      type: com.azure.resourcemanager.network.models.TransportProtocol
      description: the protocol value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProvisioningState(java.lang.String)
  id: withProvisioningState(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
  langs:
  - java
  name: withProvisioningState(String provisioningState)
  nameWithType: LoadBalancingRuleInner.withProvisioningState(String provisioningState)
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProvisioningState(String provisioningState)
  overload: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProvisioningState*
  type: Method
  package: com.azure.resourcemanager.network.fluent.inner
  summary: "Set the provisioningState property: Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
  syntax:
    content: public LoadBalancingRuleInner withProvisioningState(String provisioningState)
    parameters:
    - id: provisioningState
      type: java.lang.String
      description: the provisioningState value to set.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner
      description: the LoadBalancingRuleInner object itself.
references:
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.LoadBalancingRuleInner*
  name: LoadBalancingRuleInner
  nameWithType: LoadBalancingRuleInner.LoadBalancingRuleInner
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.LoadBalancingRuleInner
  package: com.azure.resourcemanager.network.fluent.inner
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.name*
  name: name
  nameWithType: LoadBalancingRuleInner.name
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.name
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withName*
  name: withName
  nameWithType: LoadBalancingRuleInner.withName
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withName
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.etag*
  name: etag
  nameWithType: LoadBalancingRuleInner.etag
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.etag
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEtag*
  name: withEtag
  nameWithType: LoadBalancingRuleInner.withEtag
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEtag
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.type*
  name: type
  nameWithType: LoadBalancingRuleInner.type
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.type
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.core.management.SubResource
  spec.java:
  - uid: com.azure.core.management.SubResource
    name: SubResource
    fullName: com.azure.core.management.SubResource
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendIpConfiguration*
  name: frontendIpConfiguration
  nameWithType: LoadBalancingRuleInner.frontendIpConfiguration
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendIpConfiguration
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendIpConfiguration*
  name: withFrontendIpConfiguration
  nameWithType: LoadBalancingRuleInner.withFrontendIpConfiguration
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendIpConfiguration
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendAddressPool*
  name: backendAddressPool
  nameWithType: LoadBalancingRuleInner.backendAddressPool
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendAddressPool
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendAddressPool*
  name: withBackendAddressPool
  nameWithType: LoadBalancingRuleInner.withBackendAddressPool
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendAddressPool
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.probe*
  name: probe
  nameWithType: LoadBalancingRuleInner.probe
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.probe
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProbe*
  name: withProbe
  nameWithType: LoadBalancingRuleInner.withProbe
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProbe
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.models.TransportProtocol
  name: TransportProtocol
  nameWithType: TransportProtocol
  fullName: com.azure.resourcemanager.network.models.TransportProtocol
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.protocol*
  name: protocol
  nameWithType: LoadBalancingRuleInner.protocol
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.protocol
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProtocol*
  name: withProtocol
  nameWithType: LoadBalancingRuleInner.withProtocol
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProtocol
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.models.LoadDistribution
  name: LoadDistribution
  nameWithType: LoadDistribution
  fullName: com.azure.resourcemanager.network.models.LoadDistribution
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.loadDistribution*
  name: loadDistribution
  nameWithType: LoadBalancingRuleInner.loadDistribution
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.loadDistribution
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withLoadDistribution*
  name: withLoadDistribution
  nameWithType: LoadBalancingRuleInner.withLoadDistribution
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withLoadDistribution
  package: com.azure.resourcemanager.network.fluent.inner
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendPort*
  name: frontendPort
  nameWithType: LoadBalancingRuleInner.frontendPort
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.frontendPort
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendPort*
  name: withFrontendPort
  nameWithType: LoadBalancingRuleInner.withFrontendPort
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withFrontendPort
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendPort*
  name: backendPort
  nameWithType: LoadBalancingRuleInner.backendPort
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.backendPort
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendPort*
  name: withBackendPort
  nameWithType: LoadBalancingRuleInner.withBackendPort
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withBackendPort
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.idleTimeoutInMinutes*
  name: idleTimeoutInMinutes
  nameWithType: LoadBalancingRuleInner.idleTimeoutInMinutes
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.idleTimeoutInMinutes
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withIdleTimeoutInMinutes*
  name: withIdleTimeoutInMinutes
  nameWithType: LoadBalancingRuleInner.withIdleTimeoutInMinutes
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withIdleTimeoutInMinutes
  package: com.azure.resourcemanager.network.fluent.inner
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableFloatingIp*
  name: enableFloatingIp
  nameWithType: LoadBalancingRuleInner.enableFloatingIp
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableFloatingIp
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableFloatingIp*
  name: withEnableFloatingIp
  nameWithType: LoadBalancingRuleInner.withEnableFloatingIp
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableFloatingIp
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableTcpReset*
  name: enableTcpReset
  nameWithType: LoadBalancingRuleInner.enableTcpReset
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.enableTcpReset
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableTcpReset*
  name: withEnableTcpReset
  nameWithType: LoadBalancingRuleInner.withEnableTcpReset
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withEnableTcpReset
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.disableOutboundSnat*
  name: disableOutboundSnat
  nameWithType: LoadBalancingRuleInner.disableOutboundSnat
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.disableOutboundSnat
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withDisableOutboundSnat*
  name: withDisableOutboundSnat
  nameWithType: LoadBalancingRuleInner.withDisableOutboundSnat
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withDisableOutboundSnat
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.provisioningState*
  name: provisioningState
  nameWithType: LoadBalancingRuleInner.provisioningState
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.provisioningState
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProvisioningState*
  name: withProvisioningState
  nameWithType: LoadBalancingRuleInner.withProvisioningState
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.withProvisioningState
  package: com.azure.resourcemanager.network.fluent.inner
- uid: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.validate*
  name: validate
  nameWithType: LoadBalancingRuleInner.validate
  fullName: com.azure.resourcemanager.network.fluent.inner.LoadBalancingRuleInner.validate
  package: com.azure.resourcemanager.network.fluent.inner
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.core.management.SubResource.withId(java.lang.String)
  name: SubResource.withId(String)
  nameWithType: SubResource.withId(String)
  fullName: com.azure.core.management.SubResource.withId(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.management.SubResource.id()
  name: SubResource.id()
  nameWithType: SubResource.id()
  fullName: com.azure.core.management.SubResource.id()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
