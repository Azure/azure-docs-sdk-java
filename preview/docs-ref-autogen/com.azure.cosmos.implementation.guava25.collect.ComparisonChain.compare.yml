### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.<T>compare"
name: "<T>compare"
nameWithType: "ComparisonChain.<T>compare"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.<T>compare(T,T,java.util.Comparator<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.<T>compare(T left, T right, Comparator<T> comparator)"
  name: "<T>compare(T left, T right, Comparator<T> comparator)"
  nameWithType: "ComparisonChain.<T>compare(T left, T right, Comparator<T> comparator)"
  summary: "Compares two objects using a comparator, *if* the result of this comparison chain has not already been determined."
  parameters:
  - name: "left"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - name: "right"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - name: "comparator"
    type: "<xref href=\"java.util.Comparator?alt=java.util.Comparator&text=Comparator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ComparisonChain <T>compare(T left, T right, Comparator<T> comparator)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain?alt=com.azure.cosmos.implementation.guava25.collect.ComparisonChain&text=ComparisonChain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(double,double)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(double left, double right)"
  name: "compare(double left, double right)"
  nameWithType: "ComparisonChain.compare(double left, double right)"
  summary: "Compares two `double` values as specified by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Double#compare\"></xref>, *if* the result of this comparison chain has not already been determined."
  parameters:
  - name: "left"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  - name: "right"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ComparisonChain compare(double left, double right)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain?alt=com.azure.cosmos.implementation.guava25.collect.ComparisonChain&text=ComparisonChain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(float,float)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(float left, float right)"
  name: "compare(float left, float right)"
  nameWithType: "ComparisonChain.compare(float left, float right)"
  summary: "Compares two `float` values as specified by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Float#compare\"></xref>, *if* the result of this comparison chain has not already been determined."
  parameters:
  - name: "left"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  - name: "right"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ComparisonChain compare(float left, float right)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain?alt=com.azure.cosmos.implementation.guava25.collect.ComparisonChain&text=ComparisonChain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(int,int)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(int left, int right)"
  name: "compare(int left, int right)"
  nameWithType: "ComparisonChain.compare(int left, int right)"
  summary: "Compares two `int` values as specified by <xref uid=\"com.azure.cosmos.implementation.guava25.primitives.Ints.compare*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Ints#compare\"></xref>, *if* the result of this comparison chain has not already been determined."
  parameters:
  - name: "left"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "right"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ComparisonChain compare(int left, int right)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain?alt=com.azure.cosmos.implementation.guava25.collect.ComparisonChain&text=ComparisonChain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(java.lang.Boolean,java.lang.Boolean)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(Boolean left, Boolean right)"
  name: "compare(Boolean left, Boolean right)"
  nameWithType: "ComparisonChain.compare(Boolean left, Boolean right)"
  summary: "Discouraged synonym for <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compareFalseFirst*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#compareFalseFirst\"></xref>."
  parameters:
  - name: "left"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "right"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final ComparisonChain compare(Boolean left, Boolean right)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain?alt=com.azure.cosmos.implementation.guava25.collect.ComparisonChain&text=ComparisonChain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(java.lang.Comparable<?>,java.lang.Comparable<?>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(Comparable<?> left, Comparable<?> right)"
  name: "compare(Comparable<?> left, Comparable<?> right)"
  nameWithType: "ComparisonChain.compare(Comparable<?> left, Comparable<?> right)"
  summary: "Compares two comparable objects as specified by <xref uid=\"java.lang.Comparable.compareTo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparable#compareTo\"></xref>, *if* the result of this comparison chain has not already been determined."
  parameters:
  - name: "left"
    type: "<xref href=\"java.lang.Comparable?alt=java.lang.Comparable&text=Comparable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "right"
    type: "<xref href=\"java.lang.Comparable?alt=java.lang.Comparable&text=Comparable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public abstract ComparisonChain compare(Comparable<?> left, Comparable<?> right)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain?alt=com.azure.cosmos.implementation.guava25.collect.ComparisonChain&text=ComparisonChain\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(long,long)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ComparisonChain.compare(long left, long right)"
  name: "compare(long left, long right)"
  nameWithType: "ComparisonChain.compare(long left, long right)"
  summary: "Compares two `long` values as specified by <xref uid=\"com.azure.cosmos.implementation.guava25.primitives.Longs.compare*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Longs#compare\"></xref>, *if* the result of this comparison chain has not already been determined."
  parameters:
  - name: "left"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - name: "right"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ComparisonChain compare(long left, long right)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ComparisonChain?alt=com.azure.cosmos.implementation.guava25.collect.ComparisonChain&text=ComparisonChain\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
