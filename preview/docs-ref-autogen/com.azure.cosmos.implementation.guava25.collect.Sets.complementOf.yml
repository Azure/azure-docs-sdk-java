### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Sets.complementOf*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>complementOf"
name: "<E>complementOf"
nameWithType: "Sets.<E>complementOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>complementOf(java.util.Collection<E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>complementOf(Collection<E> collection)"
  name: "<E>complementOf(Collection<E> collection)"
  nameWithType: "Sets.<E>complementOf(Collection<E> collection)"
  summary: "Creates an `EnumSet` consisting of all enum values that are not in the specified collection. If the collection is an <xref uid=\"java.util.EnumSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnumSet\"></xref>, this method has the same behavior as <xref uid=\"java.util.EnumSet.complementOf\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnumSet#complementOf\"></xref>. Otherwise, the specified collection must contain at least one element, in order to determine the element type. If the collection could be empty, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Sets.&lt;E&gt;complementOf(java.util.Collection&lt;E&gt;,java.lang.Class&lt;E&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#complementOf(Collection, Class)\"></xref> instead of this method."
  parameters:
  - description: "the collection whose complement should be stored in the enum set"
    name: "collection"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static EnumSet<E> <E>complementOf(Collection<E> collection)"
  returns:
    description: "a new, modifiable <code>EnumSet</code> containing all values of the enum that aren't present\n     in the given collection"
    type: "<xref href=\"java.util.EnumSet?alt=java.util.EnumSet&text=EnumSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>complementOf(java.util.Collection<E>,java.lang.Class<E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>complementOf(Collection<E> collection, Class<E> type)"
  name: "<E>complementOf(Collection<E> collection, Class<E> type)"
  nameWithType: "Sets.<E>complementOf(Collection<E> collection, Class<E> type)"
  summary: "Creates an `EnumSet` consisting of all enum values that are not in the specified collection. This is equivalent to <xref uid=\"java.util.EnumSet.complementOf\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnumSet#complementOf\"></xref>, but can act on any input collection, as long as the elements are of enum type."
  parameters:
  - description: "the collection whose complement should be stored in the <code>EnumSet</code>"
    name: "collection"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the type of the elements in the set"
    name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static EnumSet<E> <E>complementOf(Collection<E> collection, Class<E> type)"
  returns:
    description: "a new, modifiable <code>EnumSet</code> initially containing all the values of the enum not\n     present in the given collection"
    type: "<xref href=\"java.util.EnumSet?alt=java.util.EnumSet&text=EnumSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
