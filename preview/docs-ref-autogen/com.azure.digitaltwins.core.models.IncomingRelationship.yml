### YamlMime:ManagedReference
items:
- uid: com.azure.digitaltwins.core.models.IncomingRelationship
  id: IncomingRelationship
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models
  children:
  - com.azure.digitaltwins.core.models.IncomingRelationship.IncomingRelationship()
  - com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipId()
  - com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipLink()
  - com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipName()
  - com.azure.digitaltwins.core.models.IncomingRelationship.getSourceId()
  - com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipId(java.lang.String)
  - com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipLink(java.lang.String)
  - com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipName(java.lang.String)
  - com.azure.digitaltwins.core.models.IncomingRelationship.setSourceId(java.lang.String)
  langs:
  - java
  name: IncomingRelationship
  nameWithType: IncomingRelationship
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship
  type: Class
  package: com.azure.digitaltwins.core.models
  summary: Defines an incoming relationship on a digital twin. Unlike outgoing relationships, incoming relationships have no user-defined properties when retrieved using <xref uid="com.azure.digitaltwins.core.DigitalTwinsClient.listIncomingRelationships*" data-throw-if-not-resolved="false">com.azure.digitaltwins.core.DigitalTwinsClient#listIncomingRelationships(String, Context)</xref> or <xref uid="com.azure.digitaltwins.core.DigitalTwinsAsyncClient.listIncomingRelationships(java.lang.String)" data-throw-if-not-resolved="false">com.azure.digitaltwins.core.DigitalTwinsAsyncClient#listIncomingRelationships(String)</xref>. Because of this, there is no need for user-defined types for deserialization. This class will capture the full service response when listing incoming relationships.
  syntax:
    content: public final class IncomingRelationship
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.IncomingRelationship()
  id: IncomingRelationship()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: IncomingRelationship()
  nameWithType: IncomingRelationship.IncomingRelationship()
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.IncomingRelationship()
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.IncomingRelationship*
  type: Constructor
  package: com.azure.digitaltwins.core.models
  syntax:
    content: public IncomingRelationship()
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipId()
  id: getRelationshipId()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: getRelationshipId()
  nameWithType: IncomingRelationship.getRelationshipId()
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipId()
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipId*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Get the relationshipId property: A user-provided string representing the id of this relationship, unique in the context of the source digital twin, i.e. sourceId + relationshipId is unique in the context of the service.'
  syntax:
    content: public String getRelationshipId()
    return:
      type: java.lang.String
      description: the relationshipId value.
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipLink()
  id: getRelationshipLink()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: getRelationshipLink()
  nameWithType: IncomingRelationship.getRelationshipLink()
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipLink()
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipLink*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Get the relationshipLink property: Link to the relationship, to be used for deletion.'
  syntax:
    content: public String getRelationshipLink()
    return:
      type: java.lang.String
      description: the relationshipLink value.
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipName()
  id: getRelationshipName()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: getRelationshipName()
  nameWithType: IncomingRelationship.getRelationshipName()
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipName()
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipName*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Get the relationshipName property: The name of the relationship.'
  syntax:
    content: public String getRelationshipName()
    return:
      type: java.lang.String
      description: the relationshipName value.
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getSourceId()
  id: getSourceId()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: getSourceId()
  nameWithType: IncomingRelationship.getSourceId()
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getSourceId()
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.getSourceId*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Get the sourceId property: The id of the source digital twin.'
  syntax:
    content: public String getSourceId()
    return:
      type: java.lang.String
      description: the sourceId value.
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipId(java.lang.String)
  id: setRelationshipId(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: setRelationshipId(String relationshipId)
  nameWithType: IncomingRelationship.setRelationshipId(String relationshipId)
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipId(String relationshipId)
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipId*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Set the relationshipId property: A user-provided string representing the id of this relationship, unique in the context of the source digital twin, i.e. sourceId + relationshipId is unique in the context of the service.'
  syntax:
    content: public IncomingRelationship setRelationshipId(String relationshipId)
    parameters:
    - id: relationshipId
      type: java.lang.String
      description: the relationshipId value to set.
    return:
      type: com.azure.digitaltwins.core.models.IncomingRelationship
      description: the IncomingRelationship object itself.
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipLink(java.lang.String)
  id: setRelationshipLink(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: setRelationshipLink(String relationshipLink)
  nameWithType: IncomingRelationship.setRelationshipLink(String relationshipLink)
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipLink(String relationshipLink)
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipLink*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Set the relationshipLink property: Link to the relationship, to be used for deletion.'
  syntax:
    content: public IncomingRelationship setRelationshipLink(String relationshipLink)
    parameters:
    - id: relationshipLink
      type: java.lang.String
      description: the relationshipLink value to set.
    return:
      type: com.azure.digitaltwins.core.models.IncomingRelationship
      description: the IncomingRelationship object itself.
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipName(java.lang.String)
  id: setRelationshipName(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: setRelationshipName(String relationshipName)
  nameWithType: IncomingRelationship.setRelationshipName(String relationshipName)
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipName(String relationshipName)
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipName*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Set the relationshipName property: The name of the relationship.'
  syntax:
    content: public IncomingRelationship setRelationshipName(String relationshipName)
    parameters:
    - id: relationshipName
      type: java.lang.String
      description: the relationshipName value to set.
    return:
      type: com.azure.digitaltwins.core.models.IncomingRelationship
      description: the IncomingRelationship object itself.
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setSourceId(java.lang.String)
  id: setSourceId(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.3
  parent: com.azure.digitaltwins.core.models.IncomingRelationship
  langs:
  - java
  name: setSourceId(String sourceId)
  nameWithType: IncomingRelationship.setSourceId(String sourceId)
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setSourceId(String sourceId)
  overload: com.azure.digitaltwins.core.models.IncomingRelationship.setSourceId*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: 'Set the sourceId property: The id of the source digital twin.'
  syntax:
    content: public IncomingRelationship setSourceId(String sourceId)
    parameters:
    - id: sourceId
      type: java.lang.String
      description: the sourceId value to set.
    return:
      type: com.azure.digitaltwins.core.models.IncomingRelationship
      description: the IncomingRelationship object itself.
references:
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.IncomingRelationship*
  name: IncomingRelationship
  nameWithType: IncomingRelationship.IncomingRelationship
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.IncomingRelationship
  package: com.azure.digitaltwins.core.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipId*
  name: getRelationshipId
  nameWithType: IncomingRelationship.getRelationshipId
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipId
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipId*
  name: setRelationshipId
  nameWithType: IncomingRelationship.setRelationshipId
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipId
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getSourceId*
  name: getSourceId
  nameWithType: IncomingRelationship.getSourceId
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getSourceId
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setSourceId*
  name: setSourceId
  nameWithType: IncomingRelationship.setSourceId
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setSourceId
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipName*
  name: getRelationshipName
  nameWithType: IncomingRelationship.getRelationshipName
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipName
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipName*
  name: setRelationshipName
  nameWithType: IncomingRelationship.setRelationshipName
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipName
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipLink*
  name: getRelationshipLink
  nameWithType: IncomingRelationship.getRelationshipLink
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.getRelationshipLink
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipLink*
  name: setRelationshipLink
  nameWithType: IncomingRelationship.setRelationshipLink
  fullName: com.azure.digitaltwins.core.models.IncomingRelationship.setRelationshipLink
  package: com.azure.digitaltwins.core.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
