### YamlMime:JavaMember
uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels*"
fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels"
name: "getModels"
nameWithType: "ModelsRepositoryAsyncClient.getModels"
members:
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.Iterable<java.lang.String>)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis)"
  name: "getModels(Iterable<String> dtmis)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "Collection of well-formed DTDL model Ids."
    name: "dtmis"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Map<String,String>> getModels(Iterable<String> dtmis)"
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.Iterable<java.lang.String>,com.azure.iot.modelsrepository.ModelDependencyResolution)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  name: "getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "An Iterable of well-formed DTDL model Ids. See <a href=\"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\">DTDL specs</a>. For example 'dtmi:com:example:Thermostat;1'."
    name: "dtmis"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A <xref uid=\"com.azure.iot.modelsrepository.ModelDependencyResolution\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelDependencyResolution\"></xref> value to dictate model resolution behavior."
    name: "dependencyResolution"
    type: "<xref href=\"com.azure.iot.modelsrepository.ModelDependencyResolution?alt=com.azure.iot.modelsrepository.ModelDependencyResolution&text=ModelDependencyResolution\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Map<String,String>> getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.String)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(String dtmi)"
  name: "getModels(String dtmi)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(String dtmi)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "A well-formed DTDL model Id. See <a href=\"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\">DTDL specs</a>. For example 'dtmi:com:example:Thermostat;1'."
    name: "dtmi"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Map<String,String>> getModels(String dtmi)"
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.String,com.azure.iot.modelsrepository.ModelDependencyResolution)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  name: "getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "A well-formed DTDL model Id. See <a href=\"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\">DTDL specs</a>. For example 'dtmi:com:example:Thermostat;1'."
    name: "dtmi"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.iot.modelsrepository.ModelDependencyResolution\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelDependencyResolution\"></xref> value to dictate model resolution behavior."
    name: "dependencyResolution"
    type: "<xref href=\"com.azure.iot.modelsrepository.ModelDependencyResolution?alt=com.azure.iot.modelsrepository.ModelDependencyResolution&text=ModelDependencyResolution\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Map<String,String>> getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.iot.modelsrepository"
artifact: com.azure:azure-iot-modelsrepository:1.0.0-beta.1
