### YamlMime:ManagedReference
items:
- uid: com.azure.core.implementation.tracing.Tracer
  id: Tracer
  parent: com.azure.core.implementation.tracing
  children:
  - com.azure.core.implementation.tracing.Tracer.end(int,Throwable,Context)
  - com.azure.core.implementation.tracing.Tracer.OPENTELEMETRY_SPAN_KEY
  - com.azure.core.implementation.tracing.Tracer.OPENTELEMETRY_SPAN_NAME_KEY
  - com.azure.core.implementation.tracing.Tracer.setAttribute(String,String,Context)
  - com.azure.core.implementation.tracing.Tracer.setSpanName(String,Context)
  - com.azure.core.implementation.tracing.Tracer.start(String,Context)
  href: com.azure.core.implementation.tracing.Tracer.yml
  langs:
  - java
  name: Tracer
  nameWithType: Tracer
  fullName: com.azure.core.implementation.tracing.Tracer
  type: Interface
  source:
    remote: &o0
      path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
    startLine: 10
  package: com.azure.core.implementation.tracing
  summary: "<p>Contract that all tracers must implement to be plug-able into the SDK. </p>"
  syntax:
    content: public interface Tracer
- uid: com.azure.core.implementation.tracing.Tracer.end(int,Throwable,Context)
  id: end(int,Throwable,Context)
  parent: com.azure.core.implementation.tracing.Tracer
  href: com.azure.core.implementation.tracing.Tracer.yml
  langs:
  - java
  name: end(int responseCode, Throwable error, Context context)
  nameWithType: Tracer.end(int responseCode, Throwable error, Context context)
  fullName: com.azure.core.implementation.tracing.Tracer.end(int responseCode, Throwable error, Context context)
  overload: com.azure.core.implementation.tracing.Tracer.end*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
    startLine: 47
  package: com.azure.core.implementation.tracing
  summary: "<p>Completes the current tracing span.</p>\r\n<p></p>"
  syntax:
    content: public void end(int responseCode, Throwable error, Context context)
    parameters:
    - id: responseCode
      type: f75371fa
      description: <p>Response status code if the span is in a HTTP call context. </p>
    - id: error
      type: a04fafd7
      description: <p>Potential throwable that happened during the span. </p>
    - id: context
      type: com.azure.core.util.Context
      description: <p>Additional metadata that is passed through the call stack. </p>
- uid: com.azure.core.implementation.tracing.Tracer.OPENTELEMETRY_SPAN_KEY
  id: OPENTELEMETRY_SPAN_KEY
  parent: com.azure.core.implementation.tracing.Tracer
  href: com.azure.core.implementation.tracing.Tracer.yml
  langs:
  - java
  name: OPENTELEMETRY_SPAN_KEY
  nameWithType: Tracer.OPENTELEMETRY_SPAN_KEY
  fullName: com.azure.core.implementation.tracing.Tracer.OPENTELEMETRY_SPAN_KEY
  type: Field
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
    startLine: 18
  package: com.azure.core.implementation.tracing
  summary: "<p>Key for <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains OpenTelemetry span data. This span will be used as the parent span for all spans the SDK creates.</p>\r\n<p>If no span data is listed when the SDK creates its first span it will be used as the parent for all further spans it creates. </p>"
  syntax:
    content: public String OPENTELEMETRY_SPAN_KEY= "opentelemetry-span"
    return:
      type: "26831127"
- uid: com.azure.core.implementation.tracing.Tracer.OPENTELEMETRY_SPAN_NAME_KEY
  id: OPENTELEMETRY_SPAN_NAME_KEY
  parent: com.azure.core.implementation.tracing.Tracer
  href: com.azure.core.implementation.tracing.Tracer.yml
  langs:
  - java
  name: OPENTELEMETRY_SPAN_NAME_KEY
  nameWithType: Tracer.OPENTELEMETRY_SPAN_NAME_KEY
  fullName: com.azure.core.implementation.tracing.Tracer.OPENTELEMETRY_SPAN_NAME_KEY
  type: Field
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
    startLine: 25
  package: com.azure.core.implementation.tracing
  summary: "<p>Key for <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref> which indicates that the context contains the name for the OpenTelemetry spans that are created.</p>\r\n<p>If no span name is listed when the span is created it will default to using the calling method's name. </p>"
  syntax:
    content: public String OPENTELEMETRY_SPAN_NAME_KEY= "opentelemetry-span-name"
    return:
      type: "26831127"
- uid: com.azure.core.implementation.tracing.Tracer.setAttribute(String,String,Context)
  id: setAttribute(String,String,Context)
  parent: com.azure.core.implementation.tracing.Tracer
  href: com.azure.core.implementation.tracing.Tracer.yml
  langs:
  - java
  name: setAttribute(String key, String value, Context context)
  nameWithType: Tracer.setAttribute(String key, String value, Context context)
  fullName: com.azure.core.implementation.tracing.Tracer.setAttribute(String key, String value, Context context)
  overload: com.azure.core.implementation.tracing.Tracer.setAttribute*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
    startLine: 57
  package: com.azure.core.implementation.tracing
  summary: "<p>Adds metadata to the current span. The<code>context \r\n    </code> is checked for having span information, if no span information is found in the context no metadata is added.</p>\r\n<p></p>"
  syntax:
    content: public void setAttribute(String key, String value, Context context)
    parameters:
    - id: key
      type: "26831127"
      description: <p>Name of the metadata. </p>
    - id: value
      type: "26831127"
      description: <p>Value of the metadata. </p>
    - id: context
      type: com.azure.core.util.Context
      description: <p>Additional metadata that is passed through the call stack. </p>
- uid: com.azure.core.implementation.tracing.Tracer.setSpanName(String,Context)
  id: setSpanName(String,Context)
  parent: com.azure.core.implementation.tracing.Tracer
  href: com.azure.core.implementation.tracing.Tracer.yml
  langs:
  - java
  name: setSpanName(String spanName, Context context)
  nameWithType: Tracer.setSpanName(String spanName, Context context)
  fullName: com.azure.core.implementation.tracing.Tracer.setSpanName(String spanName, Context context)
  overload: com.azure.core.implementation.tracing.Tracer.setSpanName*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
    startLine: 96
  package: com.azure.core.implementation.tracing
  summary: "<p>Configures the name for spans that are created.</p>\r\n<p></p>"
  syntax:
    content: public Context setSpanName(String spanName, Context context)
    parameters:
    - id: spanName
      type: "26831127"
      description: <p>Name to give the next span. </p>
    - id: context
      type: com.azure.core.util.Context
      description: <p>Additional metadata that is passed through the call stack. </p>
    return:
      type: com.azure.core.util.Context
      description: <p>An updated context object. </p>
- uid: com.azure.core.implementation.tracing.Tracer.start(String,Context)
  id: start(String,Context)
  parent: com.azure.core.implementation.tracing.Tracer
  href: com.azure.core.implementation.tracing.Tracer.yml
  langs:
  - java
  name: start(String methodName, Context context)
  nameWithType: Tracer.start(String methodName, Context context)
  fullName: com.azure.core.implementation.tracing.Tracer.start(String methodName, Context context)
  overload: com.azure.core.implementation.tracing.Tracer.start*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/tracing/Tracer.java
    startLine: 38
  package: com.azure.core.implementation.tracing
  summary: "<p>Creates a new tracing span.</p>\r\n<p>The<code>context \r\n    </code> will be checked for containing information about a parent span. If a parent span is found the new span will be added as a child, otherwise the span will be created and added to the context and any downstream start calls will use the created span as the parent.</p>\r\n<p></p>"
  syntax:
    content: public Context start(String methodName, Context context)
    parameters:
    - id: methodName
      type: "26831127"
      description: <p>Name of the method triggering the span creation. </p>
    - id: context
      type: com.azure.core.util.Context
      description: <p>Additional metadata that is passed through the call stack. </p>
    return:
      type: com.azure.core.util.Context
      description: <p>An updated context object. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.azure.core.implementation.tracing.Tracer.start*
  name: start
  nameWithType: Tracer.start
  fullName: com.azure.core.implementation.tracing.Tracer.start
  package: com.azure.core.implementation.tracing
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: a04fafd7
  spec.java:
  - name: Throwable
    fullName: Throwable
- uid: com.azure.core.implementation.tracing.Tracer.end*
  name: end
  nameWithType: Tracer.end
  fullName: com.azure.core.implementation.tracing.Tracer.end
  package: com.azure.core.implementation.tracing
- uid: com.azure.core.implementation.tracing.Tracer.setAttribute*
  name: setAttribute
  nameWithType: Tracer.setAttribute
  fullName: com.azure.core.implementation.tracing.Tracer.setAttribute
  package: com.azure.core.implementation.tracing
- uid: com.azure.core.implementation.tracing.Tracer.setSpanName*
  name: setSpanName
  nameWithType: Tracer.setSpanName
  fullName: com.azure.core.implementation.tracing.Tracer.setSpanName
  package: com.azure.core.implementation.tracing
- uid: com.azure.core.util.Context
  parent: com.azure.core.util
  href: com.azure.core.util.Context.yml
  name: Context
  nameWithType: Context
  fullName: com.azure.core.util.Context
  type: Class
  summary: "<p>\r\n  <code>Context \r\n    </code> offers a means of passing arbitrary data (key-value pairs) to pipeline policies. Most applications do not need to pass arbitrary data to the pipeline and can pass<code>Context.NONE \r\n    </code> or <code>null \r\n    </code> . Each context object is immutable. The<code>addData(Object, Object) \r\n    </code> method creates a new <code>Context \r\n    </code> object that refers to its parent, forming a linked list. </p>"
  syntax:
    content: public class Context
