### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper.getPolymorphicTypeValidator*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper.getPolymorphicTypeValidator"
name: "getPolymorphicTypeValidator"
nameWithType: "ObjectMapper.getPolymorphicTypeValidator"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper.getPolymorphicTypeValidator()"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.getPolymorphicTypeValidator()"
  name: "getPolymorphicTypeValidator()"
  nameWithType: "ObjectMapper.getPolymorphicTypeValidator()"
  summary: "Accessor for configured <xref uid=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PolymorphicTypeValidator\"></xref> used for validating polymorphic subtypes used with explicit polymorphic types (annotation-based), but NOT one with \"default typing\" (see <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#activateDefaultTyping(PolymorphicTypeValidator)\"></xref> for details)."
  syntax: "public PolymorphicTypeValidator getPolymorphicTypeValidator()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator?alt=com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator&text=PolymorphicTypeValidator\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
