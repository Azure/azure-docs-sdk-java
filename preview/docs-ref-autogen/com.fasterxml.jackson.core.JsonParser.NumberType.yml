### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.core.JsonParser.NumberType"
fullName: "com.fasterxml.jackson.core.JsonParser.NumberType"
name: "JsonParser.NumberType"
nameWithType: "JsonParser.NumberType"
summary: "Enumeration of possible \"native\" (optimal) types that can be used for numbers."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum JsonParser.NumberType extends Enum<JsonParser.NumberType>"
fields:
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.BIG_DECIMAL"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.BIG_DECIMAL"
  name: "BIG_DECIMAL"
  nameWithType: "JsonParser.NumberType.BIG_DECIMAL"
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.BIG_INTEGER"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.BIG_INTEGER"
  name: "BIG_INTEGER"
  nameWithType: "JsonParser.NumberType.BIG_INTEGER"
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.DOUBLE"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.DOUBLE"
  name: "DOUBLE"
  nameWithType: "JsonParser.NumberType.DOUBLE"
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.FLOAT"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.FLOAT"
  name: "FLOAT"
  nameWithType: "JsonParser.NumberType.FLOAT"
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.INT"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.INT"
  name: "INT"
  nameWithType: "JsonParser.NumberType.INT"
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.LONG"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.LONG"
  name: "LONG"
  nameWithType: "JsonParser.NumberType.LONG"
methods:
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "JsonParser.NumberType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonParser.NumberType valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser.NumberType?alt=com.fasterxml.jackson.core.JsonParser.NumberType&text=NumberType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.JsonParser.NumberType.values()"
  fullName: "com.fasterxml.jackson.core.JsonParser.NumberType.values()"
  name: "values()"
  nameWithType: "JsonParser.NumberType.values()"
  syntax: "public static JsonParser.NumberType[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser.NumberType?alt=com.fasterxml.jackson.core.JsonParser.NumberType&text=NumberType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
