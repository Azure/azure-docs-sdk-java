### YamlMime:JavaType
uid: "com.azure.resourcemanager.securityinsights.models.Repository"
fullName: "com.azure.resourcemanager.securityinsights.models.Repository"
name: "Repository"
nameWithType: "Repository"
summary: "metadata of a repository."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **Repository**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.Repository()"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.Repository()"
  name: "Repository()"
  nameWithType: "Repository.Repository()"
  summary: "Creates an instance of Repository class."
  syntax: "public Repository()"
  desc: "Creates an instance of Repository class."
methods:
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.branch()"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.branch()"
  name: "branch()"
  nameWithType: "Repository.branch()"
  summary: "Get the branch property: Branch name of repository."
  syntax: "public String branch()"
  desc: "Get the branch property: Branch name of repository."
  returns:
    description: "the branch value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.deploymentLogsUrl()"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.deploymentLogsUrl()"
  name: "deploymentLogsUrl()"
  nameWithType: "Repository.deploymentLogsUrl()"
  summary: "Get the deployment<wbr>Logs<wbr>Url property: Url to access repository action logs."
  syntax: "public String deploymentLogsUrl()"
  desc: "Get the deploymentLogsUrl property: Url to access repository action logs."
  returns:
    description: "the deploymentLogsUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.displayUrl()"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.displayUrl()"
  name: "displayUrl()"
  nameWithType: "Repository.displayUrl()"
  summary: "Get the display<wbr>Url property: Display url of repository."
  syntax: "public String displayUrl()"
  desc: "Get the displayUrl property: Display url of repository."
  returns:
    description: "the displayUrl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Repository.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Repository from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Repository fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the Repository."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of Repository from the JsonReader."
  returns:
    description: "An instance of Repository if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.pathMapping()"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.pathMapping()"
  name: "pathMapping()"
  nameWithType: "Repository.pathMapping()"
  summary: "Get the path<wbr>Mapping property: Dictionary of source control content type and path mapping."
  syntax: "public List<ContentPathMap> pathMapping()"
  desc: "Get the pathMapping property: Dictionary of source control content type and path mapping."
  returns:
    description: "the pathMapping value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.ContentPathMap?alt=com.azure.resourcemanager.securityinsights.models.ContentPathMap&text=ContentPathMap\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Repository.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.url()"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.url()"
  name: "url()"
  nameWithType: "Repository.url()"
  summary: "Get the url property: Url of repository."
  syntax: "public String url()"
  desc: "Get the url property: Url of repository."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.validate()"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.validate()"
  name: "validate()"
  nameWithType: "Repository.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.withBranch(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.withBranch(String branch)"
  name: "withBranch(String branch)"
  nameWithType: "Repository.withBranch(String branch)"
  summary: "Set the branch property: Branch name of repository."
  parameters:
  - description: "the branch value to set."
    name: "branch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Repository withBranch(String branch)"
  desc: "Set the branch property: Branch name of repository."
  returns:
    description: "the Repository object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.withDeploymentLogsUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.withDeploymentLogsUrl(String deploymentLogsUrl)"
  name: "withDeploymentLogsUrl(String deploymentLogsUrl)"
  nameWithType: "Repository.withDeploymentLogsUrl(String deploymentLogsUrl)"
  summary: "Set the deployment<wbr>Logs<wbr>Url property: Url to access repository action logs."
  parameters:
  - description: "the deploymentLogsUrl value to set."
    name: "deploymentLogsUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Repository withDeploymentLogsUrl(String deploymentLogsUrl)"
  desc: "Set the deploymentLogsUrl property: Url to access repository action logs."
  returns:
    description: "the Repository object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.withDisplayUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.withDisplayUrl(String displayUrl)"
  name: "withDisplayUrl(String displayUrl)"
  nameWithType: "Repository.withDisplayUrl(String displayUrl)"
  summary: "Set the display<wbr>Url property: Display url of repository."
  parameters:
  - description: "the displayUrl value to set."
    name: "displayUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Repository withDisplayUrl(String displayUrl)"
  desc: "Set the displayUrl property: Display url of repository."
  returns:
    description: "the Repository object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.withPathMapping(java.util.List<com.azure.resourcemanager.securityinsights.models.ContentPathMap>)"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.withPathMapping(List<ContentPathMap> pathMapping)"
  name: "withPathMapping(List<ContentPathMap> pathMapping)"
  nameWithType: "Repository.withPathMapping(List<ContentPathMap> pathMapping)"
  summary: "Set the path<wbr>Mapping property: Dictionary of source control content type and path mapping."
  parameters:
  - description: "the pathMapping value to set."
    name: "pathMapping"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.ContentPathMap?alt=com.azure.resourcemanager.securityinsights.models.ContentPathMap&text=ContentPathMap\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Repository withPathMapping(List<ContentPathMap> pathMapping)"
  desc: "Set the pathMapping property: Dictionary of source control content type and path mapping."
  returns:
    description: "the Repository object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.Repository.withUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.Repository.withUrl(String url)"
  name: "withUrl(String url)"
  nameWithType: "Repository.withUrl(String url)"
  summary: "Set the url property: Url of repository."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Repository withUrl(String url)"
  desc: "Set the url property: Url of repository."
  returns:
    description: "the Repository object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "metadata of a repository."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.Repository?alt=com.azure.resourcemanager.securityinsights.models.Repository&text=Repository\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.securityinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-securityinsights:1.0.0-beta.5
