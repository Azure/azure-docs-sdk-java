### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.list*"
fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.list"
name: "list"
nameWithType: "PersonGroupPersons.list"
members:
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.list()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.list()"
  name: "list()"
  nameWithType: "PersonGroupPersons.list()"
  summary: "List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person)."
  syntax: "public abstract PersonGroupPersons.PersonGroupPersonsListDefinitionStages.WithPersonGroupId list()"
  desc: "List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person)."
  returns:
    description: "the first stage of the list call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.PersonGroupPersonsListDefinitionStages.WithPersonGroupId?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.PersonGroupPersonsListDefinitionStages.WithPersonGroupId&text=WithPersonGroupId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.list(java.lang.String,com.microsoft.azure.cognitiveservices.vision.faceapi.models.ListPersonGroupPersonsOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons.list(String personGroupId, ListPersonGroupPersonsOptionalParameter listOptionalParameter)"
  name: "list(String personGroupId, ListPersonGroupPersonsOptionalParameter listOptionalParameter)"
  nameWithType: "PersonGroupPersons.list(String personGroupId, ListPersonGroupPersonsOptionalParameter listOptionalParameter)"
  summary: "List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person)."
  parameters:
  - description: "Id referencing a particular person group."
    name: "personGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "listOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.ListPersonGroupPersonsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.ListPersonGroupPersonsOptionalParameter&text=ListPersonGroupPersonsOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract List<Person> list(String personGroupId, ListPersonGroupPersonsOptionalParameter listOptionalParameter)"
  desc: "List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person)."
  returns:
    description: "the List&lt;Person&gt; object if successful."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person&text=Person\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.faceapi"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-faceapi:1.0.1-beta
