### YamlMime:JavaMember
uid: "com.azure.resourcemanager.peering.fluent.ResourceProvidersClient.checkServiceProviderAvailabilityWithResponse*"
fullName: "com.azure.resourcemanager.peering.fluent.ResourceProvidersClient.checkServiceProviderAvailabilityWithResponse"
name: "checkServiceProviderAvailabilityWithResponse"
nameWithType: "ResourceProvidersClient.checkServiceProviderAvailabilityWithResponse"
members:
- uid: "com.azure.resourcemanager.peering.fluent.ResourceProvidersClient.checkServiceProviderAvailabilityWithResponse(com.azure.resourcemanager.peering.models.CheckServiceProviderAvailabilityInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.fluent.ResourceProvidersClient.checkServiceProviderAvailabilityWithResponse(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput, Context context)"
  name: "checkServiceProviderAvailabilityWithResponse(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput, Context context)"
  nameWithType: "ResourceProvidersClient.checkServiceProviderAvailabilityWithResponse(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput, Context context)"
  summary: "Checks if the peering service provider is present within 1000 miles of customer's location."
  parameters:
  - description: "The CheckServiceProviderAvailabilityInput indicating customer\n     location and service provider."
    name: "checkServiceProviderAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.CheckServiceProviderAvailabilityInput?alt=com.azure.resourcemanager.peering.models.CheckServiceProviderAvailabilityInput&text=CheckServiceProviderAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Enum0> checkServiceProviderAvailabilityWithResponse(CheckServiceProviderAvailabilityInput checkServiceProviderAvailabilityInput, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.Enum0?alt=com.azure.resourcemanager.peering.models.Enum0&text=Enum0\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.peering.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
