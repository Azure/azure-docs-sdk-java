### YamlMime:JavaType
uid: "com.azure.resourcemanager.policyinsights.models.RemediationFilters"
fullName: "com.azure.resourcemanager.policyinsights.models.RemediationFilters"
name: "RemediationFilters"
nameWithType: "RemediationFilters"
summary: "The filters that will be applied to determine which resources to remediate."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RemediationFilters"
constructors:
- uid: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.RemediationFilters()"
  fullName: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.RemediationFilters()"
  name: "RemediationFilters()"
  nameWithType: "RemediationFilters.RemediationFilters()"
  syntax: "public RemediationFilters()"
methods:
- uid: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.locations()"
  fullName: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.locations()"
  name: "locations()"
  nameWithType: "RemediationFilters.locations()"
  summary: "Get the locations property: The resource locations that will be remediated."
  syntax: "public List<String> locations()"
  desc: "Get the locations property: The resource locations that will be remediated."
  returns:
    description: "the locations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.validate()"
  fullName: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.validate()"
  name: "validate()"
  nameWithType: "RemediationFilters.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.withLocations(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.policyinsights.models.RemediationFilters.withLocations(List<String> locations)"
  name: "withLocations(List<String> locations)"
  nameWithType: "RemediationFilters.withLocations(List<String> locations)"
  summary: "Set the locations property: The resource locations that will be remediated."
  parameters:
  - description: "the locations value to set."
    name: "locations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RemediationFilters withLocations(List<String> locations)"
  desc: "Set the locations property: The resource locations that will be remediated."
  returns:
    description: "the RemediationFilters object itself."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.RemediationFilters?alt=com.azure.resourcemanager.policyinsights.models.RemediationFilters&text=RemediationFilters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The filters that will be applied to determine which resources to remediate."
metadata: {}
package: "com.azure.resourcemanager.policyinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-policyinsights:1.0.0-beta.2
