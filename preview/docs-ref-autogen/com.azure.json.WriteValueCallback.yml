### YamlMime:JavaType
uid: "com.azure.json.WriteValueCallback"
fullName: "com.azure.json.WriteValueCallback<T,U>"
name: "WriteValueCallback<T,U>"
nameWithType: "WriteValueCallback<T,U>"
summary: "A callback used when writing a JSON value, such as <xref uid=\"com.azure.json.JsonWriter.writeArray*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonWriter#writeArray(Object[], WriteValueCallback)\"></xref>."
syntax: "public interface **WriteValueCallback<T,U>**"
methods:
- uid: "com.azure.json.WriteValueCallback.write(T,U)"
  fullName: "com.azure.json.WriteValueCallback<T,U>.write(T input1, U input2)"
  name: "write(T input1, U input2)"
  nameWithType: "WriteValueCallback<T,U>.write(T input1, U input2)"
  summary: "Applies the write callback to `input1` and `input2`."
  modifiers:
  - "abstract"
  parameters:
  - description: "First type of the callback."
    name: "input1"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "Second type of the callback."
    name: "input2"
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void write(T input1, U input2)"
  exceptions:
  - description: "If an I/O error occurs during the callback."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Applies the write callback to `input1` and `input2`."
type: "interface"
typeParameters:
- description: "First type of the callback."
  name: "T"
- description: "Second type of the callback."
  name: "U"
desc: "A callback used when writing a JSON value, such as <xref uid=\"com.azure.json.JsonWriter.writeArray*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonWriter#writeArray(Object[], WriteValueCallback)\"></xref>."
metadata: {}
package: "com.azure.json"
artifact: com.azure:azure-json:1.0.0-beta.1
