### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.UnnamedSessionManager
  id: UnnamedSessionManager
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus
  children:
  - com.azure.messaging.servicebus.UnnamedSessionManager.UnnamedSessionManager(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,com.azure.messaging.servicebus.implementation.ServiceBusConnectionProcessor,java.time.Duration,com.azure.core.amqp.implementation.TracerProvider,com.azure.core.amqp.implementation.MessageSerializer,com.azure.messaging.servicebus.ReceiverOptions)
  - com.azure.messaging.servicebus.UnnamedSessionManager.close()
  - com.azure.messaging.servicebus.UnnamedSessionManager.getLinkName(java.lang.String)
  - com.azure.messaging.servicebus.UnnamedSessionManager.getSessionState(java.lang.String)
  - com.azure.messaging.servicebus.UnnamedSessionManager.receive(com.azure.messaging.servicebus.models.ReceiveAsyncOptions)
  - com.azure.messaging.servicebus.UnnamedSessionManager.renewSessionLock(java.lang.String)
  - com.azure.messaging.servicebus.UnnamedSessionManager.updateDisposition(com.azure.messaging.servicebus.MessageLockToken,java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)
  langs:
  - java
  name: UnnamedSessionManager
  nameWithType: UnnamedSessionManager
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager
  type: Class
  package: com.azure.messaging.servicebus
  summary: Package-private class that manages session aware message receiving.
  syntax:
    content: " class UnnamedSessionManager implements AutoCloseable"
  inheritance:
  - java.lang.Object
  implements:
  - java.lang.AutoCloseable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.UnnamedSessionManager(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,com.azure.messaging.servicebus.implementation.ServiceBusConnectionProcessor,java.time.Duration,com.azure.core.amqp.implementation.TracerProvider,com.azure.core.amqp.implementation.MessageSerializer,com.azure.messaging.servicebus.ReceiverOptions)
  id: UnnamedSessionManager(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType,com.azure.messaging.servicebus.implementation.ServiceBusConnectionProcessor,java.time.Duration,com.azure.core.amqp.implementation.TracerProvider,com.azure.core.amqp.implementation.MessageSerializer,com.azure.messaging.servicebus.ReceiverOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.UnnamedSessionManager
  langs:
  - java
  name: UnnamedSessionManager(String entityPath, MessagingEntityType entityType, ServiceBusConnectionProcessor connectionProcessor, Duration operationTimeout, TracerProvider tracerProvider, MessageSerializer messageSerializer, ReceiverOptions receiverOptions)
  nameWithType: UnnamedSessionManager.UnnamedSessionManager(String entityPath, MessagingEntityType entityType, ServiceBusConnectionProcessor connectionProcessor, Duration operationTimeout, TracerProvider tracerProvider, MessageSerializer messageSerializer, ReceiverOptions receiverOptions)
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.UnnamedSessionManager(String entityPath, MessagingEntityType entityType, ServiceBusConnectionProcessor connectionProcessor, Duration operationTimeout, TracerProvider tracerProvider, MessageSerializer messageSerializer, ReceiverOptions receiverOptions)
  overload: com.azure.messaging.servicebus.UnnamedSessionManager.UnnamedSessionManager*
  type: Constructor
  package: com.azure.messaging.servicebus
  syntax:
    content: " UnnamedSessionManager(String entityPath, MessagingEntityType entityType, ServiceBusConnectionProcessor connectionProcessor, Duration operationTimeout, TracerProvider tracerProvider, MessageSerializer messageSerializer, ReceiverOptions receiverOptions)"
    parameters:
    - id: entityPath
      type: java.lang.String
    - id: entityType
      type: com.azure.messaging.servicebus.implementation.MessagingEntityType
    - id: connectionProcessor
      type: com.azure.messaging.servicebus.implementation.ServiceBusConnectionProcessor
    - id: operationTimeout
      type: java.time.Duration
    - id: tracerProvider
      type: com.azure.core.amqp.implementation.TracerProvider
    - id: messageSerializer
      type: com.azure.core.amqp.implementation.MessageSerializer
    - id: receiverOptions
      type: com.azure.messaging.servicebus.ReceiverOptions
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.close()
  id: close()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.UnnamedSessionManager
  langs:
  - java
  name: close()
  nameWithType: UnnamedSessionManager.close()
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.close()
  overload: com.azure.messaging.servicebus.UnnamedSessionManager.close*
  type: Method
  package: com.azure.messaging.servicebus
  syntax:
    content: public void close()
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.getLinkName(java.lang.String)
  id: getLinkName(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.UnnamedSessionManager
  langs:
  - java
  name: getLinkName(String sessionId)
  nameWithType: UnnamedSessionManager.getLinkName(String sessionId)
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.getLinkName(String sessionId)
  overload: com.azure.messaging.servicebus.UnnamedSessionManager.getLinkName*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the link name with the matching `sessionId`.
  syntax:
    content: " String getLinkName(String sessionId)"
    parameters:
    - id: sessionId
      type: java.lang.String
      description: Session id to get link name for.
    return:
      type: java.lang.String
      description: The name of the link, or <code>null</code> if there is no open link with that <code>sessionId</code>.
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.getSessionState(java.lang.String)
  id: getSessionState(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.UnnamedSessionManager
  langs:
  - java
  name: getSessionState(String sessionId)
  nameWithType: UnnamedSessionManager.getSessionState(String sessionId)
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.getSessionState(String sessionId)
  overload: com.azure.messaging.servicebus.UnnamedSessionManager.getSessionState*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the state of a session given its identifier.
  syntax:
    content: " Mono<byte[]> getSessionState(String sessionId)"
    parameters:
    - id: sessionId
      type: java.lang.String
      description: Identifier of session to get.
    return:
      type: reactor.core.publisher.Mono<byte[]>
      description: The session state or an empty Mono if there is no state set for the session.
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.receive(com.azure.messaging.servicebus.models.ReceiveAsyncOptions)
  id: receive(com.azure.messaging.servicebus.models.ReceiveAsyncOptions)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.UnnamedSessionManager
  langs:
  - java
  name: receive(ReceiveAsyncOptions options)
  nameWithType: UnnamedSessionManager.receive(ReceiveAsyncOptions options)
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.receive(ReceiveAsyncOptions options)
  overload: com.azure.messaging.servicebus.UnnamedSessionManager.receive*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets a stream of messages from different sessions.
  syntax:
    content: " Flux<ServiceBusReceivedMessageContext> receive(ReceiveAsyncOptions options)"
    parameters:
    - id: options
      type: com.azure.messaging.servicebus.models.ReceiveAsyncOptions
    return:
      type: reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessageContext>
      description: A Flux of messages merged from different sessions.
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.renewSessionLock(java.lang.String)
  id: renewSessionLock(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.UnnamedSessionManager
  langs:
  - java
  name: renewSessionLock(String sessionId)
  nameWithType: UnnamedSessionManager.renewSessionLock(String sessionId)
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.renewSessionLock(String sessionId)
  overload: com.azure.messaging.servicebus.UnnamedSessionManager.renewSessionLock*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Renews the session lock.
  syntax:
    content: " Mono<Instant> renewSessionLock(String sessionId)"
    parameters:
    - id: sessionId
      type: java.lang.String
      description: Identifier of session to get.
    return:
      type: reactor.core.publisher.Mono<java.time.Instant>
      description: The next expiration time for the session lock.
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.updateDisposition(com.azure.messaging.servicebus.MessageLockToken,java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)
  id: updateDisposition(com.azure.messaging.servicebus.MessageLockToken,java.lang.String,com.azure.messaging.servicebus.implementation.DispositionStatus,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.UnnamedSessionManager
  langs:
  - java
  name: updateDisposition(MessageLockToken lockToken, String sessionId, DispositionStatus dispositionStatus, Map<String,Object> propertiesToModify, String deadLetterReason, String deadLetterDescription)
  nameWithType: UnnamedSessionManager.updateDisposition(MessageLockToken lockToken, String sessionId, DispositionStatus dispositionStatus, Map<String,Object> propertiesToModify, String deadLetterReason, String deadLetterDescription)
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.updateDisposition(MessageLockToken lockToken, String sessionId, DispositionStatus dispositionStatus, Map<String,Object> propertiesToModify, String deadLetterReason, String deadLetterDescription)
  overload: com.azure.messaging.servicebus.UnnamedSessionManager.updateDisposition*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Tries to update the message disposition on a session aware receive link.
  syntax:
    content: " Mono<Boolean> updateDisposition(MessageLockToken lockToken, String sessionId, DispositionStatus dispositionStatus, Map<String,Object> propertiesToModify, String deadLetterReason, String deadLetterDescription)"
    parameters:
    - id: lockToken
      type: com.azure.messaging.servicebus.MessageLockToken
    - id: sessionId
      type: java.lang.String
    - id: dispositionStatus
      type: com.azure.messaging.servicebus.implementation.DispositionStatus
    - id: propertiesToModify
      type: java.util.Map<java.lang.String,java.lang.Object>
    - id: deadLetterReason
      type: java.lang.String
    - id: deadLetterDescription
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<java.lang.Boolean>
      description: >-
        <code>true</code> if the <code>lockToken</code> was updated on receive link. <code>false</code> otherwise. This means
             there isn't an open link with that <code>sessionId</code>.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.messaging.servicebus.implementation.MessagingEntityType
  name: MessagingEntityType
  nameWithType: MessagingEntityType
  fullName: com.azure.messaging.servicebus.implementation.MessagingEntityType
- uid: com.azure.messaging.servicebus.implementation.ServiceBusConnectionProcessor
  name: ServiceBusConnectionProcessor
  nameWithType: ServiceBusConnectionProcessor
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusConnectionProcessor
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.amqp.implementation.TracerProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.TracerProvider
    name: TracerProvider
    fullName: com.azure.core.amqp.implementation.TracerProvider
- uid: com.azure.core.amqp.implementation.MessageSerializer
  spec.java:
  - uid: com.azure.core.amqp.implementation.MessageSerializer
    name: MessageSerializer
    fullName: com.azure.core.amqp.implementation.MessageSerializer
- uid: com.azure.messaging.servicebus.ReceiverOptions
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.azure.messaging.servicebus.ReceiverOptions
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.UnnamedSessionManager*
  name: UnnamedSessionManager
  nameWithType: UnnamedSessionManager.UnnamedSessionManager
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.UnnamedSessionManager
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.getLinkName*
  name: getLinkName
  nameWithType: UnnamedSessionManager.getLinkName
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.getLinkName
  package: com.azure.messaging.servicebus
- uid: reactor.core.publisher.Mono<byte[]>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.getSessionState*
  name: getSessionState
  nameWithType: UnnamedSessionManager.getSessionState
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.getSessionState
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.ReceiveAsyncOptions
  name: ReceiveAsyncOptions
  nameWithType: ReceiveAsyncOptions
  fullName: com.azure.messaging.servicebus.models.ReceiveAsyncOptions
- uid: reactor.core.publisher.Flux<com.azure.messaging.servicebus.ServiceBusReceivedMessageContext>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
    name: ServiceBusReceivedMessageContext
    fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.receive*
  name: receive
  nameWithType: UnnamedSessionManager.receive
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.receive
  package: com.azure.messaging.servicebus
- uid: reactor.core.publisher.Mono<java.time.Instant>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.renewSessionLock*
  name: renewSessionLock
  nameWithType: UnnamedSessionManager.renewSessionLock
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.renewSessionLock
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.MessageLockToken
  name: MessageLockToken
  nameWithType: MessageLockToken
  fullName: com.azure.messaging.servicebus.MessageLockToken
- uid: com.azure.messaging.servicebus.implementation.DispositionStatus
  name: DispositionStatus
  nameWithType: DispositionStatus
  fullName: com.azure.messaging.servicebus.implementation.DispositionStatus
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<java.lang.Boolean>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.updateDisposition*
  name: updateDisposition
  nameWithType: UnnamedSessionManager.updateDisposition
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.updateDisposition
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.UnnamedSessionManager.close*
  name: close
  nameWithType: UnnamedSessionManager.close
  fullName: com.azure.messaging.servicebus.UnnamedSessionManager.close
  package: com.azure.messaging.servicebus
- uid: java.lang.AutoCloseable
  name: AutoCloseable
  nameWithType: AutoCloseable
  fullName: java.lang.AutoCloseable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: byte[]
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
  name: ServiceBusReceivedMessageContext
  nameWithType: ServiceBusReceivedMessageContext
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessageContext
- uid: java.time.Instant
  name: Instant
  nameWithType: Instant
  fullName: java.time.Instant
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
