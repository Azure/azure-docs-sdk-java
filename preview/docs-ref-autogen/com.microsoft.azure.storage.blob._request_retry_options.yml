### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.blob._request_retry_options
  id: _request_retry_options
  parent: com.microsoft.azure.storage.blob
  children:
  - com.microsoft.azure.storage.blob._request_retry_options.DEFAULT
  - com.microsoft.azure.storage.blob._request_retry_options.getMaxTries()
  - com.microsoft.azure.storage.blob._request_retry_options.getSecondaryHost()
  - com.microsoft.azure.storage.blob._request_retry_options.getTryTimeout()
  - com.microsoft.azure.storage.blob._request_retry_options.RequestRetryOptions(RetryPolicyType,int,int,Long,Long,String)
  href: com.microsoft.azure.storage.blob._request_retry_options.yml
  langs:
  - java
  name: RequestRetryOptions
  nameWithType: RequestRetryOptions
  fullName: com.microsoft.azure.storage.blob.RequestRetryOptions
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/storage/blob/RequestRetryOptions.java
      branch: New-Storage-SDK-V10-Preview
      repo: https://github.com/azure/azure-storage-java
    path: src/main/java/com/microsoft/azure/storage/blob/RequestRetryOptions.java
    startLine: 21
  package: com.microsoft.azure.storage.blob
  summary: <p>Options for configuring the <xref uid="com.microsoft.azure.storage.blob._request_retry_factory" data-throw-if-not-resolved="false">RequestRetryFactory</xref>. Please refer to the Factory for more information. </p>
  syntax: &o1
    content: public class RequestRetryOptions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.storage.blob._request_retry_options.DEFAULT
  id: DEFAULT
  parent: com.microsoft.azure.storage.blob._request_retry_options
  href: com.microsoft.azure.storage.blob._request_retry_options.yml
  langs:
  - java
  name: DEFAULT
  nameWithType: RequestRetryOptions.DEFAULT
  fullName: final RequestRetryOptions com.microsoft.azure.storage.blob.RequestRetryOptions.DEFAULT
  type: Field
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/RequestRetryOptions.java
    startLine: 27
  package: com.microsoft.azure.storage.blob
  summary: '<p>An object representing default retry values: Exponential backoff, maxTries=4, tryTimeout=30, retryDelayInMs=4, maxRetryDelayInMs=120000, secondaryHost=null. </p>'
  syntax:
    content: >-
      public static final RequestRetryOptions DEFAULT= new RequestRetryOptions(RetryPolicyType.EXPONENTIAL, 0,
                  0,null, null, null)
    return:
      type: 93de0ef9com.microsoft.azure.storage.blob._request_retry_options
- uid: com.microsoft.azure.storage.blob._request_retry_options.getMaxTries()
  id: getMaxTries()
  parent: com.microsoft.azure.storage.blob._request_retry_options
  href: com.microsoft.azure.storage.blob._request_retry_options.yml
  langs:
  - java
  name: getMaxTries()
  nameWithType: RequestRetryOptions.getMaxTries()
  fullName: int com.microsoft.azure.storage.blob.RequestRetryOptions.getMaxTries()
  overload: com.microsoft.azure.storage.blob._request_retry_options.getMaxTries*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/RequestRetryOptions.java
    startLine: 123
  package: com.microsoft.azure.storage.blob
  syntax:
    content: public int getMaxTries()
    return:
      type: f75371fa
      description: <p>MaxTries specifies the maximum number of attempts an operation will be tried before producing an error (0=default). A value of zero means that you accept our default policy. A value of 1 means 1 try and no retries. </p>
- uid: com.microsoft.azure.storage.blob._request_retry_options.getSecondaryHost()
  id: getSecondaryHost()
  parent: com.microsoft.azure.storage.blob._request_retry_options
  href: com.microsoft.azure.storage.blob._request_retry_options.yml
  langs:
  - java
  name: getSecondaryHost()
  nameWithType: RequestRetryOptions.getSecondaryHost()
  fullName: String com.microsoft.azure.storage.blob.RequestRetryOptions.getSecondaryHost()
  overload: com.microsoft.azure.storage.blob._request_retry_options.getSecondaryHost*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/RequestRetryOptions.java
    startLine: 146
  package: com.microsoft.azure.storage.blob
  syntax:
    content: public String getSecondaryHost()
    return:
      type: "26831127"
      description: >-
        <p>If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is<code>null 

            </code> (the default) then operations are not retried against another host. NOTE: Before setting this field, make sure you understand the issues around reading stale and potentially-inconsistent data at <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs">this webpage</a>. </p>
- uid: com.microsoft.azure.storage.blob._request_retry_options.getTryTimeout()
  id: getTryTimeout()
  parent: com.microsoft.azure.storage.blob._request_retry_options
  href: com.microsoft.azure.storage.blob._request_retry_options.yml
  langs:
  - java
  name: getTryTimeout()
  nameWithType: RequestRetryOptions.getTryTimeout()
  fullName: int com.microsoft.azure.storage.blob.RequestRetryOptions.getTryTimeout()
  overload: com.microsoft.azure.storage.blob._request_retry_options.getTryTimeout*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/RequestRetryOptions.java
    startLine: 135
  package: com.microsoft.azure.storage.blob
  syntax:
    content: public int getTryTimeout()
    return:
      type: f75371fa
      description: '<p>tryTimeout indicates the maximum time in seconds allowed for any single try of an HTTP request. A value of zero means that you accept our default timeout. NOTE: When transferring large amounts of data, the default TryTimeout will probably not be sufficient. You should override this value based on the bandwidth available to the host machine and proximity to the Storage service. A good starting point may be something like (60 seconds per MB of anticipated-payload-size). </p>'
- uid: com.microsoft.azure.storage.blob._request_retry_options.RequestRetryOptions(RetryPolicyType,int,int,Long,Long,String)
  id: RequestRetryOptions(RetryPolicyType,int,int,Long,Long,String)
  parent: com.microsoft.azure.storage.blob._request_retry_options
  href: com.microsoft.azure.storage.blob._request_retry_options.yml
  langs:
  - java
  name: RequestRetryOptions(RetryPolicyType retryPolicyType, int maxTries, int tryTimeout, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)
  nameWithType: RequestRetryOptions.RequestRetryOptions(RetryPolicyType retryPolicyType, int maxTries, int tryTimeout, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)
  fullName: com.microsoft.azure.storage.blob.RequestRetryOptions.RequestRetryOptions(RetryPolicyType retryPolicyType, int maxTries, int tryTimeout, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)
  overload: com.microsoft.azure.storage.blob._request_retry_options.RequestRetryOptions*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/RequestRetryOptions.java
    startLine: 74
  package: com.microsoft.azure.storage.blob
  summary: >-
    <p>Configures how the <xref uid="" data-throw-if-not-resolved="false">com.microsoft.rest.v2.http.HttpPipeline</xref> should retry requests.</p>

    <p></p>
  syntax:
    content: public RequestRetryOptions(RetryPolicyType retryPolicyType, int maxTries, int tryTimeout, Long retryDelayInMs, Long maxRetryDelayInMs, String secondaryHost)
    parameters:
    - id: retryPolicyType
      type: com.microsoft.azure.storage.blob._retry_policy_type
      description: <p>A <xref uid="com.microsoft.azure.storage.blob._retry_policy_type" data-throw-if-not-resolved="false">RetryPolicyType</xref> specifying the type of retry pattern to use. </p>
    - id: maxTries
      type: f75371fa
      description: >-
        <p>Specifies the maximum number of attempts an operation will be tried before producing an error (0=default). A value of<code>null 

            </code> means that you accept our default policy. A value of 1 means 1 try and no retries. </p>
    - id: tryTimeout
      type: f75371fa
      description: >-
        <p>Indicates the maximum time allowed for any single try of an HTTP request. A value of<code>null 

            </code> means that you accept our default timeout. NOTE: When transferring large amounts of data, the default TryTimeout will probably not be sufficient. You should override this value based on the bandwidth available to the host machine and proximity to the Storage service. A good starting point may be something like (60 seconds per MB of anticipated-payload-size). </p>
    - id: retryDelayInMs
      type: 34f09483
      description: <p>Specifies the amount of delay to use before retrying an operation (0=default). The delay increases (exponentially or linearly) with each retry up to a maximum specified by MaxRetryDelay. If you specify 0, then you must also specify 0 for MaxRetryDelay. </p>
    - id: maxRetryDelayInMs
      type: 34f09483
      description: <p>Specifies the maximum delay allowed before retrying an operation (0=default). If you specify 0, then you must also specify 0 for RetryDelay. </p>
    - id: secondaryHost
      type: "26831127"
      description: >-
        <p>If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is<code>null 

            </code> (the default) then operations are not retried against another host. NOTE: Before setting this field, make sure you understand the issues around reading stale and potentially-inconsistent data at <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs">this webpage</a> this webpage. </p>
references:
- uid: 93de0ef9com.microsoft.azure.storage.blob._request_retry_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.blob._request_retry_options
    name: RequestRetryOptions
    fullName: com.microsoft.azure.storage.blob.RequestRetryOptions
    href: com.microsoft.azure.storage.blob._request_retry_options.yml
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage.blob._request_retry_options.RequestRetryOptions*
  name: RequestRetryOptions
  nameWithType: RequestRetryOptions.RequestRetryOptions
  fullName: com.microsoft.azure.storage.blob.RequestRetryOptions.RequestRetryOptions
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob._request_retry_options.getMaxTries*
  name: getMaxTries
  nameWithType: RequestRetryOptions.getMaxTries
  fullName: int com.microsoft.azure.storage.blob.RequestRetryOptions.getMaxTries
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob._request_retry_options.getTryTimeout*
  name: getTryTimeout
  nameWithType: RequestRetryOptions.getTryTimeout
  fullName: int com.microsoft.azure.storage.blob.RequestRetryOptions.getTryTimeout
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob._request_retry_options.getSecondaryHost*
  name: getSecondaryHost
  nameWithType: RequestRetryOptions.getSecondaryHost
  fullName: String com.microsoft.azure.storage.blob.RequestRetryOptions.getSecondaryHost
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob._request_retry_options
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._request_retry_options.yml
  name: RequestRetryOptions
  nameWithType: RequestRetryOptions
  fullName: com.microsoft.azure.storage.blob.RequestRetryOptions
  type: Class
  summary: <p>Options for configuring the <xref uid="com.microsoft.azure.storage.blob._request_retry_factory" data-throw-if-not-resolved="false">RequestRetryFactory</xref>. Please refer to the Factory for more information. </p>
  syntax: *o1
- uid: com.microsoft.azure.storage.blob._retry_policy_type.EXPONENTIAL
  parent: com.microsoft.azure.storage.blob._retry_policy_type
  href: com.microsoft.azure.storage.blob._retry_policy_type.yml
  name: EXPONENTIAL
  nameWithType: RetryPolicyType.EXPONENTIAL
  fullName: com.microsoft.azure.storage.blob.RetryPolicyType.EXPONENTIAL
  type: Field
  summary: <p>Tells the pipeline to use an exponential back-off retry policy. </p>
  syntax:
    content: public EXPONENTIAL
- uid: com.microsoft.azure.storage.blob._retry_policy_type
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._retry_policy_type.yml
  name: RetryPolicyType
  nameWithType: RetryPolicyType
  fullName: com.microsoft.azure.storage.blob.RetryPolicyType
  type: Enum
  summary: <p>This type holds possible options for retry backoff algorithms. They may be used with <xref uid="com.microsoft.azure.storage.blob._request_retry_options" data-throw-if-not-resolved="false">RequestRetryOptions</xref>. </p>
  syntax:
    content: public enum RetryPolicyType
- uid: com.microsoft.azure.storage.blob._request_retry_factory
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._request_retry_factory.yml
  name: RequestRetryFactory
  nameWithType: RequestRetryFactory
  fullName: com.microsoft.azure.storage.blob.RequestRetryFactory
  type: Class
  summary: <p>This is a factory which creates policies in an <xref uid="" data-throw-if-not-resolved="false">HttpPipeline</xref> for retrying a given HTTP request. The request that is retried will be identical each time it is reissued. In most cases, it is sufficient to configure a <xref uid="com.microsoft.azure.storage.blob._request_retry_options" data-throw-if-not-resolved="false">RequestRetryOptions</xref> object and set those as a field on a <xref uid="com.microsoft.azure.storage.blob._pipeline_options" data-throw-if-not-resolved="false">PipelineOptions</xref> object to configure a default pipeline. Retries will try against a secondary if one is specified and the type of operation/error indicates that the secondary can handle the request. Exponential and fixed backoff are supported. The factory and policy must only be used directly when creating a custom pipeline. </p>
  syntax:
    content: public class RequestRetryFactory
