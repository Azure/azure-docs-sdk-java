### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventgrid.EventGridEvent
  id: EventGridEvent
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid
  children:
  - com.azure.messaging.eventgrid.EventGridEvent.<T>getData(java.lang.Class<T>)
  - com.azure.messaging.eventgrid.EventGridEvent.<T>getData(java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)
  - com.azure.messaging.eventgrid.EventGridEvent.<T>getDataAsync(java.lang.Class<T>)
  - com.azure.messaging.eventgrid.EventGridEvent.<T>getDataAsync(java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)
  - com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
  - com.azure.messaging.eventgrid.EventGridEvent.getData()
  - com.azure.messaging.eventgrid.EventGridEvent.getDataVersion()
  - com.azure.messaging.eventgrid.EventGridEvent.getEventTime()
  - com.azure.messaging.eventgrid.EventGridEvent.getEventType()
  - com.azure.messaging.eventgrid.EventGridEvent.getId()
  - com.azure.messaging.eventgrid.EventGridEvent.getMetadataVersion()
  - com.azure.messaging.eventgrid.EventGridEvent.getSubject()
  - com.azure.messaging.eventgrid.EventGridEvent.getTopic()
  - com.azure.messaging.eventgrid.EventGridEvent.parse(java.lang.String)
  - com.azure.messaging.eventgrid.EventGridEvent.setEventTime(java.time.OffsetDateTime)
  - com.azure.messaging.eventgrid.EventGridEvent.setId(java.lang.String)
  - com.azure.messaging.eventgrid.EventGridEvent.setTopic(java.lang.String)
  langs:
  - java
  name: EventGridEvent
  nameWithType: EventGridEvent
  fullName: com.azure.messaging.eventgrid.EventGridEvent
  type: Class
  package: com.azure.messaging.eventgrid
  summary: The EventGridEvent model. This represents events in the EventGrid schema to be used with the EventGrid service.
  syntax:
    content: public final class EventGridEvent
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.eventgrid.EventGridEvent.<T>getData(java.lang.Class<T>)
  id: <T>getData(java.lang.Class<T>)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: <T>getData(Class<T> clazz)
  nameWithType: EventGridEvent.<T>getData(Class<T> clazz)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.<T>getData(Class<T> clazz)
  overload: com.azure.messaging.eventgrid.EventGridEvent.getData*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the deserialized data property from the parsed event. The behavior is undefined if this method is called on an event that was not created through the parse method.
  syntax:
    content: public T <T>getData(Class<T> clazz)
    parameters:
    - id: clazz
      type: java.lang.Class<T>
      description: the class of the type to deserialize the data into.
    return:
      type: T
      description: the data deserialized into the given type using a default deserializer.
- uid: com.azure.messaging.eventgrid.EventGridEvent.<T>getData(java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)
  id: <T>getData(java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: <T>getData(Class<T> clazz, JsonSerializer dataDeserializer)
  nameWithType: EventGridEvent.<T>getData(Class<T> clazz, JsonSerializer dataDeserializer)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.<T>getData(Class<T> clazz, JsonSerializer dataDeserializer)
  overload: com.azure.messaging.eventgrid.EventGridEvent.getData*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the deserialized data property from the parsed event.
  syntax:
    content: public T <T>getData(Class<T> clazz, JsonSerializer dataDeserializer)
    parameters:
    - id: clazz
      type: java.lang.Class<T>
      description: the class of the type to deserialize the data into.
    - id: dataDeserializer
      type: com.azure.core.util.serializer.JsonSerializer
      description: the deserializer to use.
    return:
      type: T
      description: the data deserialized into the given type using the given deserializer.
- uid: com.azure.messaging.eventgrid.EventGridEvent.<T>getDataAsync(java.lang.Class<T>)
  id: <T>getDataAsync(java.lang.Class<T>)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: <T>getDataAsync(Class<T> clazz)
  nameWithType: EventGridEvent.<T>getDataAsync(Class<T> clazz)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.<T>getDataAsync(Class<T> clazz)
  overload: com.azure.messaging.eventgrid.EventGridEvent.getDataAsync*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the deserialized data property from the parsed event.
  syntax:
    content: public Mono<T> <T>getDataAsync(Class<T> clazz)
    parameters:
    - id: clazz
      type: java.lang.Class<T>
      description: the class of the type to deserialize the data into.
    return:
      type: reactor.core.publisher.Mono<T>
      description: >-
        the data deserialized into the given type using a default deserializer, delivered asynchronously through
         a <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref>.
- uid: com.azure.messaging.eventgrid.EventGridEvent.<T>getDataAsync(java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)
  id: <T>getDataAsync(java.lang.Class<T>,com.azure.core.util.serializer.JsonSerializer)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: <T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)
  nameWithType: EventGridEvent.<T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.<T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)
  overload: com.azure.messaging.eventgrid.EventGridEvent.getDataAsync*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the deserialized data property from the parsed event.
  syntax:
    content: public Mono<T> <T>getDataAsync(Class<T> clazz, JsonSerializer dataDeserializer)
    parameters:
    - id: clazz
      type: java.lang.Class<T>
      description: the class of the type to deserialize the data into.
    - id: dataDeserializer
      type: com.azure.core.util.serializer.JsonSerializer
      description: the deserializer to use.
    return:
      type: reactor.core.publisher.Mono<T>
      description: >-
        the data deserialized into the given type using the given deserializer, delivered asynchronously through
         a <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref>.
- uid: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent(com.azure.messaging.eventgrid.implementation.models.EventGridEvent)
  id: EventGridEvent(com.azure.messaging.eventgrid.implementation.models.EventGridEvent)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: EventGridEvent(EventGridEvent impl)
  nameWithType: EventGridEvent.EventGridEvent(EventGridEvent impl)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent(EventGridEvent impl)
  overload: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent*
  type: Constructor
  package: com.azure.messaging.eventgrid
  syntax:
    content: private EventGridEvent(EventGridEvent impl)
    parameters:
    - id: impl
      type: com.azure.messaging.eventgrid.implementation.models.EventGridEvent
- uid: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
  id: EventGridEvent(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: EventGridEvent(String subject, String eventType, Object data, String dataVersion)
  nameWithType: EventGridEvent.EventGridEvent(String subject, String eventType, Object data, String dataVersion)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent(String subject, String eventType, Object data, String dataVersion)
  overload: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent*
  type: Constructor
  package: com.azure.messaging.eventgrid
  summary: Create a new instance of the EventGridEvent, with the given required fields.
  syntax:
    content: public EventGridEvent(String subject, String eventType, Object data, String dataVersion)
    parameters:
    - id: subject
      type: java.lang.String
      description: the subject of the event.
    - id: eventType
      type: java.lang.String
      description: the type of the event, e.g. "Contoso.Items.ItemReceived".
    - id: data
      type: java.lang.Object
      description: the data associated with this event.
    - id: dataVersion
      type: java.lang.String
      description: the version of the data sent along with the event.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getData()
  id: getData()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getData()
  nameWithType: EventGridEvent.getData()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getData()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getData*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the data associated with this event. For use in a parsed event only.
  syntax:
    content: public Object getData()
    return:
      type: java.lang.Object
      description: >-
        If the event was parsed from a Json, this method will return the rich
         system event data if it is a system event, and a <code>byte[]</code> otherwise, such as in the case of custom event
         data.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getDataVersion()
  id: getDataVersion()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getDataVersion()
  nameWithType: EventGridEvent.getDataVersion()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getDataVersion()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getDataVersion*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the version of the data in the event. This can be used to specify versioning of event data schemas over time.
  syntax:
    content: public String getDataVersion()
    return:
      type: java.lang.String
      description: the version of the event data.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getEventTime()
  id: getEventTime()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getEventTime()
  nameWithType: EventGridEvent.getEventTime()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getEventTime()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getEventTime*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the time associated with the occurrence of this event.
  syntax:
    content: public OffsetDateTime getEventTime()
    return:
      type: java.time.OffsetDateTime
      description: the event time.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getEventType()
  id: getEventType()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getEventType()
  nameWithType: EventGridEvent.getEventType()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getEventType()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getEventType*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the type of this event.
  syntax:
    content: public String getEventType()
    return:
      type: java.lang.String
      description: the event type.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getId()
  id: getId()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getId()
  nameWithType: EventGridEvent.getId()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getId()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getId*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the unique id associated with this event.
  syntax:
    content: public String getId()
    return:
      type: java.lang.String
      description: the id.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getMetadataVersion()
  id: getMetadataVersion()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getMetadataVersion()
  nameWithType: EventGridEvent.getMetadataVersion()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getMetadataVersion()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getMetadataVersion*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the metadata version of this event. Note that metadata version is a read-only property set by the service.
  syntax:
    content: public String getMetadataVersion()
    return:
      type: java.lang.String
      description: the metadata version of this event.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getSubject()
  id: getSubject()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getSubject()
  nameWithType: EventGridEvent.getSubject()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getSubject()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getSubject*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the subject associated with this event.
  syntax:
    content: public String getSubject()
    return:
      type: java.lang.String
      description: the subject.
- uid: com.azure.messaging.eventgrid.EventGridEvent.getTopic()
  id: getTopic()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: getTopic()
  nameWithType: EventGridEvent.getTopic()
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getTopic()
  overload: com.azure.messaging.eventgrid.EventGridEvent.getTopic*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the topic associated with this event if it is associated with a domain.
  syntax:
    content: public String getTopic()
    return:
      type: java.lang.String
      description: the topic, or null if the topic is not set (i.e. the event came from or is going to a domain).
- uid: com.azure.messaging.eventgrid.EventGridEvent.parse(java.lang.String)
  id: parse(java.lang.String)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: parse(String json)
  nameWithType: EventGridEvent.parse(String json)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.parse(String json)
  overload: com.azure.messaging.eventgrid.EventGridEvent.parse*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Parse the EventGrid Event from a JSON string. This can be used to interpret the event at the event destination from raw JSON into rich event(s).
  syntax:
    content: public static List<EventGridEvent> parse(String json)
    parameters:
    - id: json
      type: java.lang.String
      description: the JSON payload containing one or more events.
    return:
      type: java.util.List<com.azure.messaging.eventgrid.EventGridEvent>
      description: all of the events in the payload parsed as CloudEvents.
- uid: com.azure.messaging.eventgrid.EventGridEvent.setEventTime(java.time.OffsetDateTime)
  id: setEventTime(java.time.OffsetDateTime)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: setEventTime(OffsetDateTime time)
  nameWithType: EventGridEvent.setEventTime(OffsetDateTime time)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.setEventTime(OffsetDateTime time)
  overload: com.azure.messaging.eventgrid.EventGridEvent.setEventTime*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Set the time associated with the event. Note that a default time has already been set when the event was constructed.
  syntax:
    content: public EventGridEvent setEventTime(OffsetDateTime time)
    parameters:
    - id: time
      type: java.time.OffsetDateTime
      description: the time to set.
    return:
      type: com.azure.messaging.eventgrid.EventGridEvent
      description: the event itself.
- uid: com.azure.messaging.eventgrid.EventGridEvent.setId(java.lang.String)
  id: setId(java.lang.String)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: setId(String id)
  nameWithType: EventGridEvent.setId(String id)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.setId(String id)
  overload: com.azure.messaging.eventgrid.EventGridEvent.setId*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Set the unique id of the event. Note that a random id has already been set by default.
  syntax:
    content: public EventGridEvent setId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the unique id to set.
    return:
      type: com.azure.messaging.eventgrid.EventGridEvent
      description: the event itself.
- uid: com.azure.messaging.eventgrid.EventGridEvent.setTopic(java.lang.String)
  id: setTopic(java.lang.String)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.3
  parent: com.azure.messaging.eventgrid.EventGridEvent
  langs:
  - java
  name: setTopic(String topic)
  nameWithType: EventGridEvent.setTopic(String topic)
  fullName: com.azure.messaging.eventgrid.EventGridEvent.setTopic(String topic)
  overload: com.azure.messaging.eventgrid.EventGridEvent.setTopic*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Set the topic associated with this event. Used to route events from domain endpoints.
  syntax:
    content: public EventGridEvent setTopic(String topic)
    parameters:
    - id: topic
      type: java.lang.String
      description: the topic to set.
    return:
      type: com.azure.messaging.eventgrid.EventGridEvent
      description: the event itself.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent*
  name: EventGridEvent
  nameWithType: EventGridEvent.EventGridEvent
  fullName: com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.implementation.models.EventGridEvent
  name: EventGridEvent
  nameWithType: EventGridEvent
  fullName: com.azure.messaging.eventgrid.implementation.models.EventGridEvent
- uid: java.util.List<com.azure.messaging.eventgrid.EventGridEvent>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.messaging.eventgrid.EventGridEvent
    name: EventGridEvent
    fullName: com.azure.messaging.eventgrid.EventGridEvent
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventgrid.EventGridEvent.parse*
  name: parse
  nameWithType: EventGridEvent.parse
  fullName: com.azure.messaging.eventgrid.EventGridEvent.parse
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.getId*
  name: getId
  nameWithType: EventGridEvent.getId
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getId
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.setId*
  name: setId
  nameWithType: EventGridEvent.setId
  fullName: com.azure.messaging.eventgrid.EventGridEvent.setId
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.getTopic*
  name: getTopic
  nameWithType: EventGridEvent.getTopic
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getTopic
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.setTopic*
  name: setTopic
  nameWithType: EventGridEvent.setTopic
  fullName: com.azure.messaging.eventgrid.EventGridEvent.setTopic
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.getSubject*
  name: getSubject
  nameWithType: EventGridEvent.getSubject
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getSubject
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.getData*
  name: getData
  nameWithType: EventGridEvent.getData
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getData
  package: com.azure.messaging.eventgrid
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: reactor.core.publisher.Mono<T>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventgrid.EventGridEvent.getDataAsync*
  name: <T>getDataAsync
  nameWithType: EventGridEvent.<T>getDataAsync
  fullName: com.azure.messaging.eventgrid.EventGridEvent.<T>getDataAsync
  package: com.azure.messaging.eventgrid
- uid: com.azure.core.util.serializer.JsonSerializer
  spec.java:
  - uid: com.azure.core.util.serializer.JsonSerializer
    name: JsonSerializer
    fullName: com.azure.core.util.serializer.JsonSerializer
- uid: com.azure.messaging.eventgrid.EventGridEvent.getEventType*
  name: getEventType
  nameWithType: EventGridEvent.getEventType
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getEventType
  package: com.azure.messaging.eventgrid
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.messaging.eventgrid.EventGridEvent.getEventTime*
  name: getEventTime
  nameWithType: EventGridEvent.getEventTime
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getEventTime
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.setEventTime*
  name: setEventTime
  nameWithType: EventGridEvent.setEventTime
  fullName: com.azure.messaging.eventgrid.EventGridEvent.setEventTime
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.getDataVersion*
  name: getDataVersion
  nameWithType: EventGridEvent.getDataVersion
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getDataVersion
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridEvent.getMetadataVersion*
  name: getMetadataVersion
  nameWithType: EventGridEvent.getMetadataVersion
  fullName: com.azure.messaging.eventgrid.EventGridEvent.getMetadataVersion
  package: com.azure.messaging.eventgrid
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
