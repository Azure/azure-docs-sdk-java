### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  id: TwinProperties
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin
  children:
  - com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getDesired()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getReported()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElement()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElementWithMetadata()
  - com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toString()
  langs:
  - java
  name: TwinProperties
  nameWithType: TwinProperties
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  type: Class
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Representation of a single Twin Properties for the <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinState" data-throw-if-not-resolved="false">TwinState</xref>.


    The Properties on the TwinState shall contains one <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> of **desired** property.


    The desired property is a collection that can contain a associated <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata" data-throw-if-not-resolved="false">TwinMetadata</xref>.


    These metadata are provided by the Service and contains information about the last updated date time, and version.


    For instance, the following is a valid desired property, represented as `properties.desired` in the rest API.


    ```java

    {
              "desired": {
                  "MaxSpeed":{
                      "Value":500,
                      "NewValue":300
                  },
                  "$metadata":{
                      "$lastUpdated":"2017-09-21T02:07:44.238Z",
                      "$lastUpdatedVersion":4,
                      "MaxSpeed":{
                          "$lastUpdated":"2017-09-21T02:07:44.238Z",
                          "$lastUpdatedVersion":4,
                          "Value":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":4
                          },
                          "NewValue":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":4
                          }
                      }
                  },
                  "$version":4
              },
              "reported": {
                  "MaxSpeed":{
                      "Value":500,
                      "NewValue":300
                  },
                  "$metadata":{
                      "$lastUpdated":"2017-09-21T02:07:44.238Z",
                      "$lastUpdatedVersion":5,
                      "MaxSpeed":{
                          "$lastUpdated":"2017-09-21T02:07:44.238Z",
                          "$lastUpdatedVersion":4,
                          "Value":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":5
                          },
                          "NewValue":{
                              "$lastUpdated":"2017-09-21T02:07:44.238Z",
                              "$lastUpdatedVersion":4
                          }
                      }
                  },
                  "$version":6
              }
          }
    ```
  syntax:
    content: public class TwinProperties
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties()
  id: TwinProperties()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  langs:
  - java
  name: TwinProperties()
  nameWithType: TwinProperties.TwinProperties()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Empty constructor


    Used only by the tools that will deserialize this class.
  syntax:
    content: " TwinProperties()"
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection)
  id: TwinProperties(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  langs:
  - java
  name: TwinProperties(TwinCollection desired, TwinCollection reported)
  nameWithType: TwinProperties.TwinProperties(TwinCollection desired, TwinCollection reported)
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties(TwinCollection desired, TwinCollection reported)
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    CONSTRUCTOR


    This constructor creates an instance of the TwinProperties with the provided <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> desired property.


    When serialized, this class will looks like the following example:


    ```java

    "desired":{
          "MaxSpeed":{
              "Value":500,
              "NewValue":300
          },
          "$version":4
      },
      "reported":{
          "MaxSpeed":{
              "Value":500,
              "NewValue":300
          },
          "$version":4
      }
    ```
  syntax:
    content: " TwinProperties(TwinCollection desired, TwinCollection reported)"
    parameters:
    - id: desired
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: the <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> with the desired property. It cannot be <code>null</code>.
    - id: reported
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: the <xref uid="com.microsoft.azure.sdk.iot.deps.twin.TwinCollection" data-throw-if-not-resolved="false">TwinCollection</xref> with the reported property. It cannot be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getDesired()
  id: getDesired()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  langs:
  - java
  name: getDesired()
  nameWithType: TwinProperties.getDesired()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getDesired()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getDesired*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Getter for the desired property.
  syntax:
    content: public TwinCollection getDesired()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: The <code>TwinCollection</code> with the desired property content. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getReported()
  id: getReported()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  langs:
  - java
  name: getReported()
  nameWithType: TwinProperties.getReported()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getReported()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getReported*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Getter for the reported property.
  syntax:
    content: public TwinCollection getReported()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: The <code>TwinCollection</code> with the reported property content. It can be <code>null</code>.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElement()
  id: toJsonElement()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  langs:
  - java
  name: toJsonElement()
  nameWithType: TwinProperties.toJsonElement()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElement()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElement*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Serializer


    Creates a `JsonElement`, which the content represents the information in this class and its subclasses in a JSON format. This is useful if the caller will integrate this JSON with JSON from other classes to generate a consolidated JSON.
  syntax:
    content: protected JsonElement toJsonElement()
    return:
      type: com.google.gson.JsonElement
      description: The <code>JsonElement</code> with the content of this class.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElementWithMetadata()
  id: toJsonElementWithMetadata()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  langs:
  - java
  name: toJsonElementWithMetadata()
  nameWithType: TwinProperties.toJsonElementWithMetadata()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElementWithMetadata()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElementWithMetadata*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: >-
    Serializer


    Creates a `JsonElement`, which the content represents the information in this class and its subclasses in a JSON format. If the desired property contains metadata, this method will include it in the final JSON. This is useful if the caller will integrate this JSON with JSON from other classes to generate a consolidated JSON.
  syntax:
    content: protected JsonElement toJsonElementWithMetadata()
    return:
      type: com.google.gson.JsonElement
      description: The <code>JsonElement</code> with the content of this class.
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toString()
  id: toString()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties
  langs:
  - java
  name: toString()
  nameWithType: TwinProperties.toString()
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toString()
  overload: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toString*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.twin
  summary: Creates a pretty print JSON with the content of this class and subclasses.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: The <code>String</code> with the pretty print JSON.
references:
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties*
  name: TwinProperties
  nameWithType: TwinProperties.TwinProperties
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.TwinProperties
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.google.gson.JsonElement
  spec.java:
  - uid: com.google.gson.JsonElement
    name: JsonElement
    fullName: com.google.gson.JsonElement
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElement*
  name: toJsonElement
  nameWithType: TwinProperties.toJsonElement
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElement
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElementWithMetadata*
  name: toJsonElementWithMetadata
  nameWithType: TwinProperties.toJsonElementWithMetadata
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toJsonElementWithMetadata
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getDesired*
  name: getDesired
  nameWithType: TwinProperties.getDesired
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getDesired
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getReported*
  name: getReported
  nameWithType: TwinProperties.getReported
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.getReported
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toString*
  name: toString
  nameWithType: TwinProperties.toString
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinProperties.toString
  package: com.microsoft.azure.sdk.iot.deps.twin
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
