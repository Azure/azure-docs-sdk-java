### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Objects.equal*"
fullName: "com.azure.cosmos.implementation.guava25.base.Objects.equal"
name: "equal"
nameWithType: "Objects.equal"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Objects.equal(java.lang.Object,java.lang.Object)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Objects.equal(Object a, Object b)"
  name: "equal(Object a, Object b)"
  nameWithType: "Objects.equal(Object a, Object b)"
  summary: "Determines whether two possibly-null objects are equal. Returns:\n\n *  `true` if `a` and `b` are both null.\n *  `true` if `a` and `b` are both non-null and they are equal according to <xref uid=\"java.lang.Object.equals(java.lang.Object)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals(Object)\"></xref>.\n *  `false` in all other situations.\n\nThis assumes that any non-null objects passed to this function conform to the `equals()` contract.\n\n**Note for Java 7 and later:** This method should be treated as deprecated; use <xref uid=\"com.azure.cosmos.implementation.guava25.base.Objects.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Objects#equals\"></xref> instead."
  parameters:
  - name: "a"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "b"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static boolean equal(Object a, Object b)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
