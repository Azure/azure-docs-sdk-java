### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.ResolvableSerializer"
fullName: "com.fasterxml.jackson.databind.ser.ResolvableSerializer"
name: "ResolvableSerializer"
nameWithType: "ResolvableSerializer"
summary: "Interface used to indicate serializers that want to do post-processing after construction and being added to <xref uid=\"com.fasterxml.jackson.databind.SerializerProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializerProvider\"></xref>, but before being used. This is typically used to resolve references to other contained types; for example, bean serializers use this to eagerly find serializers for contained field types.\n\nNote that in cases where serializer needs both contextualization and resolution -- that is, implements both this interface and <xref uid=\"com.fasterxml.jackson.databind.ser.ContextualSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContextualSerializer\"></xref> \\-- resolution via this interface occurs first, and contextual resolution (using <xref uid=\"com.fasterxml.jackson.databind.ser.ContextualSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContextualSerializer\"></xref>) later on."
syntax: "public interface ResolvableSerializer"
methods:
- "com.fasterxml.jackson.databind.ser.ResolvableSerializer.resolve(com.fasterxml.jackson.databind.SerializerProvider)"
type: "interface"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
