### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosAsyncContainer.delete*"
fullName: "com.azure.cosmos.CosmosAsyncContainer.delete"
name: "delete"
nameWithType: "CosmosAsyncContainer.delete"
members:
- uid: "com.azure.cosmos.CosmosAsyncContainer.delete()"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.delete()"
  name: "delete()"
  nameWithType: "CosmosAsyncContainer.delete()"
  summary: "Deletes the current container.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single Cosmos container response for the deleted container. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  syntax: "public Mono<CosmosContainerResponse> delete()"
  returns:
    description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single Cosmos container response for\n the deleted container or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncContainer.delete(com.azure.cosmos.models.CosmosContainerRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncContainer.delete(CosmosContainerRequestOptions options)"
  name: "delete(CosmosContainerRequestOptions options)"
  nameWithType: "CosmosAsyncContainer.delete(CosmosContainerRequestOptions options)"
  summary: "Deletes the container\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single Cosmos container response for the deleted database. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  parameters:
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerRequestOptions?alt=com.azure.cosmos.models.CosmosContainerRequestOptions&text=CosmosContainerRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosContainerResponse> delete(CosmosContainerRequestOptions options)"
  returns:
    description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single Cosmos container response for\n the deleted database or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
