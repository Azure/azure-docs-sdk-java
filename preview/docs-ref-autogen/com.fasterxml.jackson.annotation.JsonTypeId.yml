### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonTypeId
  id: JsonTypeId
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  langs:
  - java
  name: JsonTypeId
  nameWithType: JsonTypeId
  fullName: com.fasterxml.jackson.annotation.JsonTypeId
  type: Interface
  package: com.fasterxml.jackson.annotation
  summary: >-
    Marker annotation that can be used on a property accessor (field, getter or setter, constructor parameter) to indicate that the property is to contain type id to use when including polymorphic type information. Annotation should **only be used** if the intent is to override generation of standard type id: if so, value of the property will be accessed during serialization and used as the type id.


    On deserialization annotation has no effect, as visibility of type id is governed by value of <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo.visible*" data-throw-if-not-resolved="false">JsonTypeInfo#visible</xref>; properties with this annotation get no special handling.


    On serialization, this annotation will exclude property from being serialized along other properties; instead, its value is serialized as the type identifier. Since type identifier may be included in various places, it may still appear like 'normal' property (when using <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo.As.PROPERTY" data-throw-if-not-resolved="false">JsonTypeInfo.As#PROPERTY</xref>), but is more commonly embedded in a different place, as per inclusion rules (see <xref uid="com.fasterxml.jackson.annotation.JsonTypeInfo" data-throw-if-not-resolved="false">JsonTypeInfo</xref> for details).
  syntax:
    content: public interface JsonTypeId implements Annotation
  implements:
  - java.lang.annotation.Annotation
references:
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
