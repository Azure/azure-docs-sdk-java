### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.nio.DataStreamChannel
  id: DataStreamChannel
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio
  children:
  - org.apache.hc.core5.http.nio.DataStreamChannel.endStream(java.util.List<? extends org.apache.hc.core5.http.Header>)
  - org.apache.hc.core5.http.nio.DataStreamChannel.requestOutput()
  - org.apache.hc.core5.http.nio.DataStreamChannel.write(java.nio.ByteBuffer)
  langs:
  - java
  name: DataStreamChannel
  nameWithType: DataStreamChannel
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel
  type: Interface
  package: org.apache.hc.core5.http.nio
  summary: >-
    Abstract byte stream channel


    Implementations are expected to be thread-safe.
  syntax:
    content: public interface DataStreamChannel extends StreamChannel<ByteBuffer>
  implements:
  - org.apache.hc.core5.http.nio.StreamChannel<java.nio.ByteBuffer>
- uid: org.apache.hc.core5.http.nio.DataStreamChannel.endStream(java.util.List<? extends org.apache.hc.core5.http.Header>)
  id: endStream(java.util.List<? extends org.apache.hc.core5.http.Header>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.DataStreamChannel
  langs:
  - java
  name: endStream(List<? extends Header> trailers)
  nameWithType: DataStreamChannel.endStream(List<? extends Header> trailers)
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel.endStream(List<? extends Header> trailers)
  overload: org.apache.hc.core5.http.nio.DataStreamChannel.endStream*
  type: Method
  package: org.apache.hc.core5.http.nio
  summary: >-
    Terminates the underlying data stream and optionally writes a closing sequence with the given trailers.


    Please note that some data streams may not support trailers and may silently ignore the trailers parameter.
  syntax:
    content: public abstract void endStream(List<? extends Header> trailers)
    parameters:
    - id: trailers
      type: java.util.List<? extends org.apache.hc.core5.http.Header>
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.core5.http.nio.DataStreamChannel.requestOutput()
  id: requestOutput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.DataStreamChannel
  langs:
  - java
  name: requestOutput()
  nameWithType: DataStreamChannel.requestOutput()
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel.requestOutput()
  overload: org.apache.hc.core5.http.nio.DataStreamChannel.requestOutput*
  type: Method
  package: org.apache.hc.core5.http.nio
  summary: Signals intent by the data producer to produce more data. Once the channel is able to accept data its handler is expected to trigger an event to notify the data producer.
  syntax:
    content: public abstract void requestOutput()
- uid: org.apache.hc.core5.http.nio.DataStreamChannel.write(java.nio.ByteBuffer)
  id: write(java.nio.ByteBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.DataStreamChannel
  langs:
  - java
  name: write(ByteBuffer src)
  nameWithType: DataStreamChannel.write(ByteBuffer src)
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel.write(ByteBuffer src)
  overload: org.apache.hc.core5.http.nio.DataStreamChannel.write*
  type: Method
  package: org.apache.hc.core5.http.nio
  summary: Writes data from the buffer through this channel into the underlying byte stream. If the underlying byte stream is temporarily unable to accept more data it can return zero to indicate that no data could be written to the data stream. The data producer can choose to call <xref uid="org.apache.hc.core5.http.nio.DataStreamChannel.requestOutput()" data-throw-if-not-resolved="false">#requestOutput()</xref> to signal its intent to produce more data.
  syntax:
    content: public abstract int write(ByteBuffer src)
    parameters:
    - id: src
      type: java.nio.ByteBuffer
      description: source of data
    return:
      type: int
      description: The number of bytes written, possibly zero
  exceptions:
  - type: java.io.IOException
references:
- uid: org.apache.hc.core5.http.nio.DataStreamChannel.requestOutput*
  name: requestOutput
  nameWithType: DataStreamChannel.requestOutput
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel.requestOutput
  package: org.apache.hc.core5.http.nio
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.core5.http.nio.DataStreamChannel.write*
  name: write
  nameWithType: DataStreamChannel.write
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel.write
  package: org.apache.hc.core5.http.nio
- uid: java.util.List<? extends org.apache.hc.core5.http.Header>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: '? extends org.apache.hc.core5.http.Header'
    name: Header
    fullName: '? extends org.apache.hc.core5.http.Header'
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.http.nio.DataStreamChannel.endStream*
  name: endStream
  nameWithType: DataStreamChannel.endStream
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel.endStream
  package: org.apache.hc.core5.http.nio
- uid: org.apache.hc.core5.http.nio.StreamChannel<java.nio.ByteBuffer>
  name: StreamChannel<ByteBuffer>
  nameWithType: StreamChannel<ByteBuffer>
  fullName: org.apache.hc.core5.http.nio.StreamChannel<java.nio.ByteBuffer>
- uid: '? extends org.apache.hc.core5.http.Header'
  name: '? extends Header'
  nameWithType: '? extends Header'
  fullName: '? extends org.apache.hc.core5.http.Header'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: org.apache.hc.core5.http.nio.StreamChannel
  name: StreamChannel
  nameWithType: StreamChannel
  fullName: org.apache.hc.core5.http.nio.StreamChannel
